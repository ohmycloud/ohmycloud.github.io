<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.85.0">Hugo</generator><title type="html"><![CDATA[container on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/container/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/container/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/container/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/container/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-07-12T22:13:54+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/container/</id>
    
        
        <entry>
            <title type="html"><![CDATA[散列也是容器]]></title>
            <link href="https://ohmyweekly.github.io/notes/2015-06-28-hash-is-also-containers/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2015-06-28-hash-is-also-containers/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-07-11T00:00:00+08:00</published>
            <updated>2021-07-11T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Hash Is Also Containers</blockquote><h2 id="散列也是容器">散列也是容器</h2>
<p>假设我们想计算某个东西的出现次数, 我们通常的做法是弄一个 &ldquo;seen-hash&rdquo; 散列。有时候我们有一组待查询的键, 其中有些键可能不在我们所扫描的数据中。那是一种特殊情况, 但是 Raku 能够完美地解决, 因为散列也是容器, 因此我们能够拥有默认值。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$words</span> <span class="o">=</span> <span class="p">&lt;</span><span class="s">Hashes are containers too</span><span class="p">&gt;</span><span class="o">.</span><span class="nb">lc</span><span class="p">;</span>
<span class="k">constant</span> <span class="no">alphabet</span> <span class="o">=</span> <span class="p">&#39;</span><span class="s1">a</span><span class="p">&#39;</span> <span class="o">..</span> <span class="p">&#39;</span><span class="s1">z</span><span class="p">&#39;;</span>

<span class="k">my</span> <span class="nv">%seen</span> <span class="k">of</span> <span class="nb">Int</span> <span class="k">is</span> <span class="k">default</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>

<span class="nv">%seen</span><span class="p">{</span><span class="nv">$_</span><span class="p">}</span><span class="o">++</span> <span class="k">for</span> <span class="nv">$words</span><span class="o">.</span><span class="nb">comb</span><span class="p">;</span>
<span class="nb">put</span> <span class="p">&#34;</span><span class="nv">$_:</span><span class="s2"> </span><span class="nv">%seen</span><span class="p">{</span><span class="nv">$_</span><span class="p">}&#34;</span> <span class="k">for</span> <span class="n">alphabet</span><span class="p">;</span>
</code></pre></div><p>输出结果:</p>
<pre><code>a: 3
b: 0
c: 1
d: 0
e: 3
f: 0
g: 0
h: 2
i: 1
j: 0
k: 0
l: 0
m: 0
n: 2
o: 3
p: 0
q: 0
r: 2
s: 3
t: 2
u: 0
v: 0
w: 0
x: 0
y: 0
z: 0
</code></pre><p><code>$words</code> 中没有出现的特殊字符由 <code>is default(0)</code> 处理了。</p>
<p>默认值可以被精心设计。我们来弄一个在数值上下文中为默认值为 0 但是在字符串上下文中为默认值为 NULL 并且总是被定义的一个散列。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">%seen</span> <span class="k">of</span> <span class="nb">Int</span> <span class="k">is</span> <span class="k">default</span><span class="p">(</span><span class="mi">0</span> <span class="k">but</span> <span class="k">role</span> <span class="nc">::</span> <span class="p">{</span> <span class="k">method</span> <span class="nb">Str</span><span class="p">()</span> <span class="p">{&#39;</span><span class="s1">NULL</span><span class="p">&#39;}</span> <span class="p">});</span>
<span class="nb">say</span> <span class="nv">%seen</span><span class="p">&lt;</span><span class="s">not-there</span><span class="p">&gt;</span><span class="o">,</span> <span class="nv">%seen</span><span class="p">&lt;</span><span class="s">not-there</span><span class="p">&gt;</span><span class="o">.</span><span class="nb">defined</span><span class="o">,</span> <span class="nb">Int</span><span class="o">.</span><span class="nb">new</span><span class="p">(</span><span class="nv">%seen</span><span class="p">&lt;</span><span class="s">not-there</span><span class="p">&gt;);</span>

<span class="c1"># OUTPUT</span>
<span class="c1"># «NULLTrue0␤»</span>
</code></pre></div>]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/rakulang" term="rakulang" label="rakulang" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/container" term="container" label="container" />
                            
                        
                    
                
            
        </entry>
    
</feed>

{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003ch2 id=\"julia-repl\"\u003eJulia REPL\u003c/h2\u003e\n\u003cp\u003eJulia 在 \u003ccode\u003ejulia\u003c/code\u003e 可执行文件中内置了一个功能齐全的交互式命令行 REPL（read-eval-print loop）。除了允许快速、简单地评估 Julia 语句外，它还具有可搜索的历史记录、tab-补全、许多有用的键绑定以及专门的帮助和 \u003ccode\u003eshell\u003c/code\u003e 模式。REPL 可以通过简单地调用 \u003ccode\u003ejulia\u003c/code\u003e 而不使用参数或双击可执行文件来启动。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e$ julia\n\n               _\n   _       _ _\u003cspan class=\"o\"\u003e(\u003c/span\u003e_\u003cspan class=\"o\"\u003e)\u003c/span\u003e_     \u003cspan class=\"p\"\u003e|\u003c/span\u003e  Documentation: https://docs.julialang.org\n  \u003cspan class=\"o\"\u003e(\u003c/span\u003e_\u003cspan class=\"o\"\u003e)\u003c/span\u003e     \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e_\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e_\u003cspan class=\"o\"\u003e)\u003c/span\u003e    \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n   _ _   _\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_  __ _   \u003cspan class=\"p\"\u003e|\u003c/span\u003e  Type \u003cspan class=\"s2\"\u003e\u0026#34;?\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e help, \u003cspan class=\"s2\"\u003e\u0026#34;]?\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e Pkg help.\n  \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e/ _\u003cspan class=\"sb\"\u003e`\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e  \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e  \u003cspan class=\"p\"\u003e|\u003c/span\u003e  Version 1.5.0 \u003cspan class=\"o\"\u003e(\u003c/span\u003e2020-08-01\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n _/ \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\_\u003c/span\u003e_\u003cspan class=\"s1\"\u003e\u0026#39;_|_|_|\\__\u0026#39;\u003c/span\u003e_\u003cspan class=\"p\"\u003e|\u003c/span\u003e  \u003cspan class=\"p\"\u003e|\u003c/span\u003e  Official https://julialang.org/ release\n\u003cspan class=\"p\"\u003e|\u003c/span\u003e__/                   \u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\n\njulia\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要退出交互式会话，请键入 \u003ccode\u003e^D\u003c/code\u003e - 控制键与 \u003ccode\u003ed\u003c/code\u003e 键一起在空行上键入，或键入 \u003ccode\u003eexit()\u003c/code\u003e 后跟回车或回车键。REPL 会用一个横幅和 \u003ccode\u003ejulia\u0026gt;\u003c/code\u003e 提示来欢迎您。\u003c/p\u003e\n\u003ch3 id=\"不同的提示模式\"\u003e不同的提示模式\u003c/h3\u003e\n\u003ch4 id=\"朱利安模式\"\u003e朱利安模式\u003c/h4\u003e\n\u003cp\u003eREPL 有四种主要的操作模式。第一种也是最常见的是 Julian 提示。这是默认的操作模式；每个新行都以 \u003ccode\u003ejulia\u0026gt;\u003c/code\u003e 开始。在这里您可以输入 Julia 表达式。在输入完整的表达式后点击回车或回车将评估该条目并显示最后一个表达式的结果。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; string\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e + 2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026#34;3\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在交互式工作中，有许多独特的有用功能。除了显示结果之外，REPL 还将结果绑定到变量 \u003ccode\u003eans\u003c/code\u003e 上。行上的分号可以作为一个标志来抑制显示结果。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; string\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e3\u003c/span\u003e * 4\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\njulia\u0026gt; ans\n\u003cspan class=\"s2\"\u003e\u0026#34;12\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Julia 模式下，REPL 支持称为提示粘贴(\u003cem\u003eprompt pasting\u003c/em\u003e)的东西。当把以 \u003ccode\u003ejulia\u0026gt;\u003c/code\u003e 开头的文本粘贴到 REPL 中时，这个功能会被激活。在这种情况下，只有以 \u003ccode\u003ejulia\u0026gt;\u003c/code\u003e 开头的表达式会被解析，其他表达式会被删除。这使得您可以粘贴从 REPL 会话中复制的代码块，而无需清除提示和输出。这个功能默认是启用的，但可以通过 \u003ccode\u003eREPL.enable_promptpaste(::Bool)\u003c/code\u003e 来禁用或启用。如果启用了，您可以直接将本段上面的代码块粘贴到 REPL 中试试。这个功能在标准的 Windows 命令提示符上不起作用，因为它在检测粘贴发生时的局限性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003eusing REPL\nREPL.enable_promptpaste\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 禁用 prompt pasting\u003c/span\u003e\nREPL.enable_promptpaste\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 启用 prompt pasting\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对象在 REPL 中使用带有特定 \u003ca href=\"https://docs.julialang.org/en/v1/base/io-network/#Base.IOContext\"\u003eIOContext\u003c/a\u003e 的 \u003ca href=\"https://docs.julialang.org/en/v1/base/io-network/#Base.show-Tuple%7BIO,Any%7D\"\u003eshow\u003c/a\u003e 函数进行打印。特别是，\u003ccode\u003e:limit\u003c/code\u003e 属性被设置为 true。其他属性可以在某些 \u003ccode\u003eshow\u003c/code\u003e 方法中接收一个默认值，如果它还没有被设置，比如 \u003ccode\u003e:compact\u003c/code\u003e。作为实验性功能，可以通过 \u003ccode\u003eBase.active_repl.options.iocontext\u003c/code\u003e 字典来指定 REPL 使用的属性（将值关联到属性）。例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; rand\u003cspan class=\"o\"\u003e(\u003c/span\u003e2, 2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2×2 Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eFloat64,2\u003cspan class=\"o\"\u003e}\u003c/span\u003e:\n 0.8833    0.329197\n 0.719708  0.59114\n\njulia\u0026gt; show\u003cspan class=\"o\"\u003e(\u003c/span\u003eIOContext\u003cspan class=\"o\"\u003e(\u003c/span\u003estdout, :compact \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026gt; \u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;text/plain\u0026#34;\u003c/span\u003e, rand\u003cspan class=\"o\"\u003e(\u003c/span\u003e2, 2\u003cspan class=\"o\"\u003e))\u003c/span\u003e\n 0.43540323669187075  0.15759787870609387\n 0.2540832269192739   0.4597637838786053\njulia\u0026gt; Base.active_repl.options.iocontext\u003cspan class=\"o\"\u003e[\u003c/span\u003e:compact\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e false\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\njulia\u0026gt; rand\u003cspan class=\"o\"\u003e(\u003c/span\u003e2, 2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2×2 Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eFloat64,2\u003cspan class=\"o\"\u003e}\u003c/span\u003e:\n 0.2083967319174056  0.13330606013126012\n 0.6244375177790158  0.9777957560761545\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了在启动时自动定义这个字典的值，可以使用 \u003ccode\u003e~/.julia/config/startup.jl\u003c/code\u003e 文件中的 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/REPL/#Base.atreplinit\"\u003e\u003ccode\u003eatreplinit\u003c/code\u003e\u003c/a\u003e 函数，例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"n\"\u003eatreplinit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"n\"\u003erepl\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eoptions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eiocontext\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ecompact\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"帮助模式\"\u003e帮助模式\u003c/h4\u003e\n\u003cp\u003e当光标在行首时，可以通过键入 \u003ccode\u003e?\u003c/code\u003e 来将提示变为帮助模式。Julia 将尝试打印帮助模式下输入的任何内容的帮助或文档。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; ? \u003cspan class=\"c1\"\u003e# upon typing ?, the prompt changes (in place) to: help?\u0026gt;\u003c/span\u003e\n\nhelp?\u0026gt; string\nsearch: string String Cstring Cwstring RevString randstring bytestring SubString\n\n  string\u003cspan class=\"o\"\u003e(\u003c/span\u003exs...\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\n  Create a string from any values using the print \u003cspan class=\"k\"\u003efunction\u003c/span\u003e.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以查询宏、类型和变量:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ehelp?\u0026gt; @time\n  @time\n\n  A macro to execute an expression, printing the \u003cspan class=\"nb\"\u003etime\u003c/span\u003e it took to execute, the number of allocations,\n  and the total number of bytes its execution caused to be allocated, before returning the value of the\n  expression.\n\n  See also @timev, @timed, @elapsed, and @allocated.\n\nhelp?\u0026gt; Int32\nsearch: Int32 UInt32\n\n  Int32 \u0026lt;: Signed\n\n  32-bit signed integer type.\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e按行首的退格键可以退出帮助模式。\u003c/p\u003e\n\u003ch4 id=\"shell-模式\"\u003eShell 模式\u003c/h4\u003e\n\u003cp\u003e就像帮助模式对于快速访问文档很有用一样，另一个常见的任务是使用系统 shell 来执行系统命令。就像 \u003ccode\u003e?\u003c/code\u003e 进入帮助模式时一样, 在行首按下分号(\u003ccode\u003e;\u003c/code\u003e)会进入 shell 模式。而且可以在行首按退格键退出。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# upon typing ;, the prompt changes (in place) to: shell\u0026gt;\u003c/span\u003e\n\nshell\u0026gt; \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e hello\nhello\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意:\u003c/p\u003e\n\u003cp\u003e对于 Windows 用户来说，Julia 的 shell 模式不暴露 windows shell 命令。因此，这将会失败:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# upon typing ;, the prompt changes (in place) to: shell\u0026gt;\u003c/span\u003e\n\nshell\u0026gt; dir\nERROR: IOError: could not spawn \u003cspan class=\"sb\"\u003e`\u003c/span\u003edir\u003cspan class=\"sb\"\u003e`\u003c/span\u003e: no such file or directory \u003cspan class=\"o\"\u003e(\u003c/span\u003eENOENT\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nStacktrace!\n.......\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e不过，你可以像这样访问 PowerShell:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# upon typing ;, the prompt changes (in place) to: shell\u0026gt;\u003c/span\u003e\n\nshell\u0026gt; powershell\nWindows PowerShell\nCopyright \u003cspan class=\"o\"\u003e(\u003c/span\u003eC\u003cspan class=\"o\"\u003e)\u003c/span\u003e Microsoft Corporation. All rights reserved.\nPS C:\u003cspan class=\"se\"\u003e\\U\u003c/span\u003esers\u003cspan class=\"se\"\u003e\\e\u003c/span\u003elm\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u0026hellip;而且对 \u003ccode\u003ecmd.exe\u003c/code\u003e 的访问是这样的（见 \u003ccode\u003edir\u003c/code\u003e 命令）:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# upon typing ;, the prompt changes (in place) to: shell\u0026gt;\u003c/span\u003e\n\nshell\u0026gt; cmd\nMicrosoft Windows \u003cspan class=\"o\"\u003e[\u003c/span\u003eversion 10.0.17763.973\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e(\u003c/span\u003ec\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"m\"\u003e2018\u003c/span\u003e Microsoft Corporation. All rights reserved.\nC:\u003cspan class=\"se\"\u003e\\U\u003c/span\u003esers\u003cspan class=\"se\"\u003e\\e\u003c/span\u003elm\u0026gt;dir\n Volume in drive C has no label\n Volume Serial Number is 1643-0CD7\n  Directory of C:\u003cspan class=\"se\"\u003e\\U\u003c/span\u003esers\u003cspan class=\"se\"\u003e\\e\u003c/span\u003elm\n\n29/01/2020  22:15    \u0026lt;DIR\u0026gt;          .\n29/01/2020  22:15    \u0026lt;DIR\u0026gt;          ..\n02/02/2020  08:06    \u0026lt;DIR\u0026gt;          .atom\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"搜索模式\"\u003e搜索模式\u003c/h4\u003e\n\u003cp\u003e在上述所有模式中，执行的行数都会被保存到历史文件中，可以进行搜索。要在以前的历史记录中进行增量搜索，输入 \u003ccode\u003e^R\u003c/code\u003e\u0026ndash;控制键和 \u003ccode\u003er\u003c/code\u003e 键。提示符将变为(\u003ccode\u003ereverse-i-search\u003c/code\u003e):，当你输入搜索查询时，搜索查询将出现在引号中。当你输入更多的内容时，与查询相匹配的最新结果会动态地更新到冒号的右边。如果要使用相同的查询找到一个较早的结果，只需再次输入 \u003ccode\u003e^R\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e就像 \u003ccode\u003e^R\u003c/code\u003e 是反向搜索一样，\u003ccode\u003e^S\u003c/code\u003e 是正向搜索，并提示(\u003ccode\u003ei-search\u003c/code\u003e):。两者可以相互结合使用，分别在上一个或下一个匹配结果中移动。\u003c/p\u003e\n\u003ch3 id=\"键绑定\"\u003e键绑定\u003c/h3\u003e\n\u003cp\u003eJulia REPL 大量使用了键绑定。上面已经介绍了几个控制键绑定（\u003ccode\u003e^D\u003c/code\u003e 用于退出，\u003ccode\u003e^R\u003c/code\u003e 和 \u003ccode\u003e^S\u003c/code\u003e 用于搜索），但还有更多。除了控制键，还有元键绑定。这些因平台不同而变化较大，但大多数终端默认使用 \u003ccode\u003ealt-\u003c/code\u003e 或 \u003ccode\u003eoption-\u003c/code\u003e 按住键发送元键（也可以配置成这样），或者按 \u003ccode\u003eEsc\u003c/code\u003e 键，然后按键。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003eKeybinding\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eProgram control\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e^D\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e退出(当缓存为空时)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e^C\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e中断或取消\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e^L\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e清理控制台屏幕\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eReturn/Enter, \u003ccode\u003e^J\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e新行，如果完成了就执行\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003emeta-Return/Enter\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e插入新行而不执行\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e?\u003c/code\u003e 或 \u003ccode\u003e;\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e进入帮助或shell模式(当在行的开头时)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003ccode\u003e^R\u003c/code\u003e, \u003ccode\u003e^S\u003c/code\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e递增式历史检索，如上所述\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"自定义键绑定\"\u003e自定义键绑定\u003c/h3\u003e\n\u003cp\u003eJulia 的 REPL 键绑定可以通过向 \u003ccode\u003eREPL.setup_interface\u003c/code\u003e 传递一个字典来完全定制用户的偏好。这个字典的键可以是字符或字符串。键 \u0026lsquo;*\u0026rsquo; 指的是默认操作。控制加字符x的绑定用\u0026quot;^x\u0026quot;表示。Meta 加x可以写成 \u0026ldquo;\\M-x\u0026rdquo; 或 \u0026ldquo;\\ex\u0026rdquo;，Control 加 x 可以写成 \u0026ldquo;\\C-x\u0026rdquo; 或 \u0026ldquo;^x\u0026rdquo;。自定义 keymap 的值必须是 nothing(表示输入应该被忽略)或接受签名的函数(\u003ccode\u003ePromptState\u003c/code\u003e, \u003ccode\u003eAbstractREPL\u003c/code\u003e, \u003ccode\u003eChar\u003c/code\u003e)。\u003ccode\u003eREPL.setup_interface\u003c/code\u003e 函数必须在 REPL 初始化之前被调用，通过在 atreplinit 注册操作。例如，要绑定上下方向键来移动历史记录而不需要前缀搜索，可以在 \u003ccode\u003e~/.julia/config/startup.jl\u003c/code\u003e 中放入以下代码。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eREPL\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eREPL\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eLineEdit\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003emykeys\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eDict\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e}(\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# Up Arrow\u003c/span\u003e\n    \u003cspan class=\"s\"\u003e\u0026#34;\\e[A\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eLineEdit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eedit_move_up\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eLineEdit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehistory_prev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eLineEdit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehist\u003c/span\u003e\u003cspan class=\"p\"\u003e)),\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e# Down Arrow\u003c/span\u003e\n    \u003cspan class=\"s\"\u003e\u0026#34;\\e[B\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eo\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eLineEdit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eedit_move_down\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"n\"\u003eLineEdit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehistory_next\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eLineEdit\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehist\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"n\"\u003ecustomize_keys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einterface\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eREPL\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esetup_interface\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003eextra_repl_keymap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003emykeys\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eatreplinit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomize_keys\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e用户应该参考 \u003ccode\u003eLineEdit.jl\u003c/code\u003e 来发现键输入的可用操作。\u003c/p\u003e\n\u003ch3 id=\"tab-补全\"\u003eTab 补全\u003c/h3\u003e\n\u003cp\u003e在 REPL 的 Julian 和帮助模式下，可以输入函数或类型的前几个字符，然后按tab键，得到一个所有匹配的列表:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; stri\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\nstride     strides     string      strip\n\njulia\u0026gt; Stri\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\nStridedArray    StridedMatrix    StridedVecOrMat  StridedVector    String\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003etab 键也可以用来用它们的 Unicode 等价物替代 LaTeX 数学符号，并获得 LaTeX 匹配列表。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"se\"\u003e\\p\u003c/span\u003ei\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\njulia\u0026gt; π\n\u003cspan class=\"nv\"\u003eπ\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e 3.1415926535897...\n\njulia\u0026gt; e\u003cspan class=\"se\"\u003e\\_\u003c/span\u003e1\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e1,0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\njulia\u0026gt; e₁ \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e1,0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n2-element Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eInt64,1\u003cspan class=\"o\"\u003e}\u003c/span\u003e:\n \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\njulia\u0026gt; e\u003cspan class=\"se\"\u003e\\^\u003c/span\u003e1\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\njulia\u0026gt; e¹ \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"m\"\u003e1\u003c/span\u003e 0\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n1×2 Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eInt64,2\u003cspan class=\"o\"\u003e}\u003c/span\u003e:\n \u003cspan class=\"m\"\u003e1\u003c/span\u003e  \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\njulia\u0026gt; \u003cspan class=\"se\"\u003e\\s\u003c/span\u003eqrt\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"m\"\u003e2\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# √ is equivalent to the sqrt function\u003c/span\u003e\njulia\u0026gt; √2\n1.4142135623730951\n\njulia\u0026gt; \u003cspan class=\"se\"\u003e\\h\u003c/span\u003ebar\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e](\u003c/span\u003eh\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e h / 2\u003cspan class=\"se\"\u003e\\p\u003c/span\u003ei\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\njulia\u0026gt; ħ\u003cspan class=\"o\"\u003e(\u003c/span\u003eh\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e h / 2π\nħ \u003cspan class=\"o\"\u003e(\u003c/span\u003egeneric \u003cspan class=\"k\"\u003efunction\u003c/span\u003e with \u003cspan class=\"m\"\u003e1\u003c/span\u003e method\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; \u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"se\"\u003e\\h\u003c/span\u003eat              \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eermitconjmatrix  \u003cspan class=\"se\"\u003e\\h\u003c/span\u003ekswarow          \u003cspan class=\"se\"\u003e\\h\u003c/span\u003erectangle\n\u003cspan class=\"se\"\u003e\\h\u003c/span\u003eatapprox        \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eexagon           \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eookleftarrow     \u003cspan class=\"se\"\u003e\\h\u003c/span\u003erectangleblack\n\u003cspan class=\"se\"\u003e\\h\u003c/span\u003ebar             \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eexagonblack      \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eookrightarrow    \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eslash\n\u003cspan class=\"se\"\u003e\\h\u003c/span\u003eeartsuit        \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eksearow          \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eouse             \u003cspan class=\"se\"\u003e\\h\u003c/span\u003espace\n\njulia\u0026gt; \u003cspan class=\"nv\"\u003eα\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\\alpha[TAB]\u0026#34;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# LaTeX completion also works in strings\u003c/span\u003e\njulia\u0026gt; \u003cspan class=\"nv\"\u003eα\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;α\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e完整的tab-补全列表可以在手册的 \u003ca href=\"https://docs.julialang.org/en/v1/manual/unicode-input/#Unicode-Input-1\"\u003eUnicode 输入\u003c/a\u003e部分找到。\u003c/p\u003e\n\u003cp\u003e路径补全适用于字符串和 julia 的 shell 模式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003epath\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;/[TAB]\u0026#34;\u003c/span\u003e\n.dockerenv  .juliabox/   boot/        etc/         lib/         media/       opt/         root/        sbin/        sys/         usr/\n.dockerinit bin/         dev/         home/        lib64/       mnt/         proc/        run/         srv/         tmp/         var/\nshell\u0026gt; /\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n.dockerenv  .juliabox/   boot/        etc/         lib/         media/       opt/         root/        sbin/        sys/         usr/\n.dockerinit bin/         dev/         home/        lib64/       mnt/         proc/        run/         srv/         tmp/         var/\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTab 补全可以帮助调查匹配输入参数的可用方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; max\u003cspan class=\"o\"\u003e([\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# All methods are displayed, not shown here due to size of the list\u003c/span\u003e\n\njulia\u0026gt; max\u003cspan class=\"o\"\u003e([\u003c/span\u003e1, 2\u003cspan class=\"o\"\u003e]\u003c/span\u003e, \u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# All methods where `Vector{Int}` matches as first argument\u003c/span\u003e\nmax\u003cspan class=\"o\"\u003e(\u003c/span\u003ex, y\u003cspan class=\"o\"\u003e)\u003c/span\u003e in Base at operators.jl:215\nmax\u003cspan class=\"o\"\u003e(\u003c/span\u003ea, b, c, xs...\u003cspan class=\"o\"\u003e)\u003c/span\u003e in Base at operators.jl:281\n\njulia\u0026gt; max\u003cspan class=\"o\"\u003e([\u003c/span\u003e1, 2\u003cspan class=\"o\"\u003e]\u003c/span\u003e, max\u003cspan class=\"o\"\u003e(\u003c/span\u003e1, 2\u003cspan class=\"o\"\u003e)\u003c/span\u003e, \u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# All methods matching the arguments.\u003c/span\u003e\nmax\u003cspan class=\"o\"\u003e(\u003c/span\u003ex, y\u003cspan class=\"o\"\u003e)\u003c/span\u003e in Base at operators.jl:215\nmax\u003cspan class=\"o\"\u003e(\u003c/span\u003ea, b, c, xs...\u003cspan class=\"o\"\u003e)\u003c/span\u003e in Base at operators.jl:281\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关键词也显示在 \u003ccode\u003e;\u003c/code\u003e 后面的建议方法中，见下面一行，其中 \u003ccode\u003elimit\u003c/code\u003e 和 \u003ccode\u003ekeepempty\u003c/code\u003e 是关键词参数:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; split\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;1 1 1\u0026#34;\u003c/span\u003e, \u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\nsplit\u003cspan class=\"o\"\u003e(\u003c/span\u003estr::AbstractString\u003cspan class=\"p\"\u003e;\u003c/span\u003e limit, keepempty\u003cspan class=\"o\"\u003e)\u003c/span\u003e in Base at strings/util.jl:302\nsplit\u003cspan class=\"o\"\u003e(\u003c/span\u003estr::T, splitter\u003cspan class=\"p\"\u003e;\u003c/span\u003e limit, keepempty\u003cspan class=\"o\"\u003e)\u003c/span\u003e where T\u0026lt;:AbstractString in Base at strings/util.jl:277\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e方法的补全使用类型推断，因此即使参数是函数输出的，也能看到参数是否匹配。函数需要类型稳定，完成才能够删除不匹配的方法。\u003c/p\u003e\n\u003cp\u003eTab 补全也可以帮助补全字段:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; import UUIDs\n\njulia\u0026gt; UUIDs.uuid\u003cspan class=\"o\"\u003e[\u003c/span\u003eTAB\u003cspan class=\"o\"\u003e]\u003c/span\u003e\nuuid1        uuid4         uuid_version\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以补全函数输出的字段:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-sshell\" data-lang=\"sshell\"\u003ejulia\u0026gt; split(\u0026quot;\u0026quot;,\u0026quot;\u0026quot;)[1].[TAB]\nlastindex  offset  string\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e函数输出的字段完成采用类型推断，只有在函数类型稳定的情况下，它才能建议字段。\u003c/p\u003e\n\u003cp\u003e字典键也可以用 tab 补全:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003efoo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Dict\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;qwer1\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026gt;1, \u003cspan class=\"s2\"\u003e\u0026#34;qwer2\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026gt;2, \u003cspan class=\"s2\"\u003e\u0026#34;asdf\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026gt;3\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDict\u003cspan class=\"o\"\u003e{\u003c/span\u003eString,Int64\u003cspan class=\"o\"\u003e}\u003c/span\u003e with \u003cspan class=\"m\"\u003e3\u003c/span\u003e entries:\n  \u003cspan class=\"s2\"\u003e\u0026#34;qwer2\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026gt; \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;asdf\u0026#34;\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026gt; \u003cspan class=\"m\"\u003e3\u003c/span\u003e\n  \u003cspan class=\"s2\"\u003e\u0026#34;qwer1\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u0026gt; \u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\njulia\u0026gt; foo\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;q[TAB]\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003eqwer1\u003cspan class=\"s2\"\u003e\u0026#34; \u0026#34;\u003c/span\u003eqwer2\u003cspan class=\"s2\"\u003e\u0026#34;\n\u003c/span\u003e\u003cspan class=\"s2\"\u003ejulia\u0026gt; foo[\u0026#34;\u003c/span\u003eqwer\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"自定义颜色\"\u003e自定义颜色\u003c/h3\u003e\n\u003cp\u003eJulia 和 REPL 所使用的颜色也是可以自定义的。要改变 Julia 提示符的颜色，您可以在您的 \u003ccode\u003e~/.julia/config/startup.jl\u003c/code\u003e 文件中添加以下内容，该文件应放在您的主目录中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"n\"\u003ecustomize_colors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprompt_color\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext_colors\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ecyan\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eatreplinit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomize_colors\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可用的颜色键可以通过在 REPL 的帮助模式下输入 \u003ccode\u003eBase.text_colors\u003c/code\u003e 来查看。此外，对于支持 256 色的终端来说，整数 0 到 255 可以用作颜色键。\u003c/p\u003e\n\u003cp\u003e也可以通过在上面的 \u003ccode\u003ecustomize_colors\u003c/code\u003e 函数中设置 \u003ccode\u003erepl\u003c/code\u003e 的相应字段（分别为 \u003ccode\u003ehelp_color\u003c/code\u003e、\u003ccode\u003eshell_color\u003c/code\u003e、\u003ccode\u003einput_color\u003c/code\u003e 和 \u003ccode\u003eanswer_color\u003c/code\u003e）来改变帮助和 shell 提示符以及输入和回答文字的颜色。对于后两者，要确保 \u003ccode\u003eenvcolors\u003c/code\u003e 字段也设置为 false。\u003c/p\u003e\n\u003cp\u003e也可以通过使用 \u003ccode\u003eBase.text_colors[:bold]\u003c/code\u003e 作为颜色来应用粗体格式。例如，要用粗体字打印答案，可以使用下面的 \u003ccode\u003e~/.julia/config/startup.jl\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"n\"\u003ecustomize_colors\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eenvcolors\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003erepl\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eanswer_color\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etext_colors\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ebold\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eatreplinit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecustomize_colors\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你也可以通过设置适当的环境变量来定制用于渲染警告和信息消息的颜色。例如，要分别用洋红色、黄色和青色来渲染错误、警告和信息消息，你可以在 \u003ccode\u003e~/.julia/config/startup.jl\u003c/code\u003e 文件中添加以下内容:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"nb\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;JULIA_ERROR_COLOR\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003emagenta\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;JULIA_WARN_COLOR\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eyellow\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eENV\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;JULIA_INFO_COLOR\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ecyan\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"terminalmenus\"\u003eTerminalMenus\u003c/h3\u003e\n\u003cp\u003eTerminalMenus 是 Julia REPL 的一个子模块，可以在终端中实现小型、低配的交互式菜单。\u003c/p\u003e\n\u003ch4 id=\"例子\"\u003e例子\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eREPL\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003eREPL\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eTerminalMenus\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eoptions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;orange\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;grape\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;strawberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"s\"\u003e\u0026#34;blueberry\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;peach\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;lemon\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;lime\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"radiomenu\"\u003eRadioMenu\u003c/h4\u003e\n\u003cp\u003eRadioMenu 允许用户从列表中选择一个选项。\u003ccode\u003erequest\u003c/code\u003e 函数显示交互式菜单并返回所选选项的索引。如果用户按 \u0026lsquo;q\u0026rsquo; 或 \u003ccode\u003ectrl-c\u003c/code\u003e，\u003ccode\u003erequest\u003c/code\u003e 将返回 \u003ccode\u003e-1\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"c\"\u003e# `pagesize` is the number of items to be displayed at a time.\u003c/span\u003e\n\u003cspan class=\"c\"\u003e#  The UI will scroll if the number of options is greater\u003c/span\u003e\n\u003cspan class=\"c\"\u003e#   than the `pagesize`\u003c/span\u003e\n\u003cspan class=\"n\"\u003emenu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eRadioMenu\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epagesize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# `request` displays the menu and returns the index after the\u003c/span\u003e\n\u003cspan class=\"c\"\u003e#   user has selected a choice\u003c/span\u003e\n\u003cspan class=\"n\"\u003echoice\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Choose your favorite fruit:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emenu\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003echoice\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Your favorite fruit is \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003echoice\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;!\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Menu canceled.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eChoose your favorite fruit:\n^  grape\n   strawberry\n \u0026gt; blueberry\nv  peach\nYour favorite fruit is blueberry!\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"multiselectmenu\"\u003eMultiSelectMenu\u003c/h4\u003e\n\u003cp\u003e多重选择菜单（MultiSelectMenu）允许用户从一个列表中选择许多选择。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"c\"\u003e# here we use the default `pagesize` 10\u003c/span\u003e\n\u003cspan class=\"n\"\u003emenu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMultiSelectMenu\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# `request` returns a `Set` of selected indices\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# if the menu us canceled (ctrl-c or q), return an empty set\u003c/span\u003e\n\u003cspan class=\"n\"\u003echoices\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erequest\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Select the fruits you like:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003emenu\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003echoices\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;You like the following fruits:\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"kp\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003echoices\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;  - \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eoptions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eelse\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;Menu canceled.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eSelect the fruits you like:\n[press: d=done, a=all, n=none]\n   [ ] apple\n \u0026gt; [X] orange\n   [X] grape\n   [ ] strawberry\n   [ ] blueberry\n   [X] peach\n   [ ] lemon\n   [ ] lime\nYou like the following fruits:\n  - orange\n  - grape\n  - peach\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"customization--configuration\"\u003eCustomization / Configuration\u003c/h4\u003e\n\u003cp\u003e所有的界面定制都是通过关键字 \u003ccode\u003eTerminalMenus.config()\u003c/code\u003e 函数完成的。\u003c/p\u003e\n\u003ch5 id=\"参数\"\u003e参数\u003c/h5\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003echarset::Symbol=:na\u003c/code\u003e: 要使用的ui字符(\u003ccode\u003e:ascii\u003c/code\u003e 或 \u003ccode\u003e:unicode\u003c/code\u003e); 被其他参数覆盖。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ecursor::Char='\u0026gt;'|'→'\u003c/code\u003e: 光标使用的字符。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eup_arrow::Char='^'|'↑'\u003c/code\u003e: 用于向上箭头的字符。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003edown_arrow::Char='v'|'↓'\u003c/code\u003e: 用于向下箭头的字符。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003echecked::String=\u0026quot;[X]\u0026quot;|\u0026quot;✓\u0026quot;\u003c/code\u003e：用于检查的字符串。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eunchecked::String=\u0026quot;[]\u0026quot;|\u0026quot;⬚\u0026quot;)\u003c/code\u003e：用于未选中的字符串。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003escroll::Symbol=:na\u003c/code\u003e: 如果 \u003ccode\u003e:wrap\u003c/code\u003e，则将光标环绕在顶部和底部，如果 \u003ccode\u003e:nowrap\u003c/code\u003e 则不环绕光标。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esupress_output::Bool=false\u003c/code\u003e。用于测试。如果为真，菜单不会被打印到控制台。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ectrl_c_interrupt::Bool=true\u003c/code\u003e: 如果为假，在 \u003ccode\u003e^C\u003c/code\u003e 时返回空，如果为真，在 \u003ccode\u003e^C\u003c/code\u003e 时抛出 InterruptException()。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"例子-1\"\u003e例子\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003emenu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e MultiSelectMenu\u003cspan class=\"o\"\u003e(\u003c/span\u003eoptions, \u003cspan class=\"nv\"\u003epagesize\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e5\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\njulia\u0026gt; request\u003cspan class=\"o\"\u003e(\u003c/span\u003emenu\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# ASCII is used by default\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003epress: \u003cspan class=\"nv\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003edone\u003c/span\u003e, \u003cspan class=\"nv\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eall, \u003cspan class=\"nv\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003enone\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n   \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e apple\n   \u003cspan class=\"o\"\u003e[\u003c/span\u003eX\u003cspan class=\"o\"\u003e]\u003c/span\u003e orange\n   \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e grape\n \u0026gt; \u003cspan class=\"o\"\u003e[\u003c/span\u003eX\u003cspan class=\"o\"\u003e]\u003c/span\u003e strawberry\nv  \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e blueberry\nSet\u003cspan class=\"o\"\u003e([\u003c/span\u003e4, 2\u003cspan class=\"o\"\u003e])\u003c/span\u003e\n\njulia\u0026gt; TerminalMenus.config\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003echarset\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e:unicode\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; request\u003cspan class=\"o\"\u003e(\u003c/span\u003emenu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003epress: \u003cspan class=\"nv\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003edone\u003c/span\u003e, \u003cspan class=\"nv\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eall, \u003cspan class=\"nv\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003enone\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n   ⬚ apple\n   ✓ orange\n   ⬚ grape\n → ✓ strawberry\n↓  ⬚ blueberry\nSet\u003cspan class=\"o\"\u003e([\u003c/span\u003e4, 2\u003cspan class=\"o\"\u003e])\u003c/span\u003e\n\njulia\u0026gt; TerminalMenus.config\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003echecked\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;YEP!\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003eunchecked\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;NOPE\u0026#34;\u003c/span\u003e, \u003cspan class=\"nv\"\u003ecursor\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;⧐\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; request\u003cspan class=\"o\"\u003e(\u003c/span\u003emenu\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003epress: \u003cspan class=\"nv\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003edone\u003c/span\u003e, \u003cspan class=\"nv\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eall, \u003cspan class=\"nv\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003enone\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n   NOPE apple\n   YEP! orange\n   NOPE grape\n ⧐ YEP! strawberry\n↓  NOPE blueberry\nSet\u003cspan class=\"o\"\u003e([\u003c/span\u003e4, 2\u003cspan class=\"o\"\u003e])\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"参考\"\u003e参考\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://docs.julialang.org/en/v1/stdlib/REPL/#Base.atreplinit\"\u003eBase.atreplinit\u003c/a\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eatreplinit(f)\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e注册一个单参数函数，在交互式会话中，在 REPL 接口初始化之前被调用；这对自定义接口很有用。f 的参数是 REPL 对象。这个函数应该在 \u003ccode\u003e~/.julia/config/startup.jl\u003c/code\u003e 初始化文件中调用。\u003c/p\u003e\n","text":"Julia REPL Julia 在 julia 可执行文件中内置了一个功能齐全的交互式命令行 REPL（read-eval-print loop）。除了允许快速、简单地评估 Julia 语句外，它还具有可搜索的历史记录、tab-补全、许多有用的键绑定以及专门的帮助和 shell 模式。REPL 可以通过简单地调用 julia 而不使用参数或双击可执行文件来启动。\n$ julia _ _ _ _(_)_ | Documentation: https://docs.julialang.org (_) | (_) (_) | _ _ _| |_ __ _ | Type \u0026#34;?\u0026#34; for help, \u0026#34;]?\u0026#34; for Pkg help. | | | | | | |/ _` | | | | |_| | | | (_| | | Version 1.5.0 (2020-08-01) _/ |\\__\u0026#39;_|_|_|\\__\u0026#39;_| | Official https://julialang.org/ release |__/ | julia\u0026gt; 要退出交互式会话，请键入 ^D - 控制键与 d 键一起在空行上键入，或键入 exit() 后跟回车或回车键。REPL 会用一个横幅和 julia\u0026gt; 提示来欢迎您。\n不同的提示模式 朱利安模式 REPL 有四种主要的操作模式。第一种也是最常见的是 Julian 提示。这是默认的操作模式；每个新行都以 julia\u0026gt; 开始。在这里您可以输入 Julia 表达式。在输入完整的表达式后点击回车或回车将评估该条目并显示最后一个表达式的结果。\njulia\u0026gt; string(1 + 2) \u0026#34;3\u0026#34; 在交互式工作中，有许多独特的有用功能。除了显示结果之外，REPL 还将结果绑定到变量 ans 上。行上的分号可以作为一个标志来抑制显示结果。\njulia\u0026gt; string(3 * 4); julia\u0026gt; ans \u0026#34;12\u0026#34; 在 Julia 模式下，REPL 支持称为提示粘贴(prompt pasting)的东西。当把以 julia\u0026gt; 开头的文本粘贴到 REPL 中时，这个功能会被激活。在这种情况下，只有以 julia\u0026gt; 开头的表达式会被解析，其他表达式会被删除。这使得您可以粘贴从 REPL 会话中复制的代码块，而无需清除提示和输出。这个功能默认是启用的，但可以通过 REPL.enable_promptpaste(::Bool) 来禁用或启用。如果启用了，您可以直接将本段上面的代码块粘贴到 REPL 中试试。这个功能在标准的 Windows 命令提示符上不起作用，因为它在检测粘贴发生时的局限性。\nusing REPL REPL.enable_promptpaste(false) # 禁用 prompt pasting REPL.enable_promptpaste(true) # 启用 prompt pasting 对象在 REPL 中使用带有特定 IOContext 的 show 函数进行打印。特别是，:limit 属性被设置为 true。其他属性可以在某些 show 方法中接收一个默认值，如果它还没有被设置，比如 :compact。作为实验性功能，可以通过 Base.active_repl.options.iocontext 字典来指定 REPL 使用的属性（将值关联到属性）。例如:\njulia\u0026gt; rand(2, 2) 2×2 Array{Float64,2}: 0.8833 0.329197 0.719708 0.59114 julia\u0026gt; show(IOContext(stdout, :compact =\u0026gt; false), \u0026#34;text/plain\u0026#34;, rand(2, 2)) 0.43540323669187075 0.15759787870609387 0.2540832269192739 0.4597637838786053 julia\u0026gt; Base.active_repl.options.iocontext[:compact] = false; julia\u0026gt; rand(2, 2) 2×2 Array{Float64,2}: 0.2083967319174056 0.13330606013126012 0.6244375177790158 0.9777957560761545 为了在启动时自动定义这个字典的值，可以使用 ~/.julia/config/startup.jl 文件中的 atreplinit 函数，例如:\natreplinit() do repl repl.options.iocontext[:compact] = false end 帮助模式 当光标在行首时，可以通过键入 ? 来将提示变为帮助模式。Julia 将尝试打印帮助模式下输入的任何内容的帮助或文档。\njulia\u0026gt; ? # upon typing ?, the prompt changes (in place) to: help?\u0026gt; help?\u0026gt; string search: string String Cstring Cwstring RevString randstring bytestring SubString string(xs...) Create a string from any values using the print function. 也可以查询宏、类型和变量:\nhelp?\u0026gt; @time @time A macro to execute an expression, printing the time it took to execute, the number of allocations, and the total number of bytes its execution caused to be allocated, before returning the value of the expression. See also @timev, @timed, @elapsed, and @allocated. help?\u0026gt; Int32 search: Int32 UInt32 Int32 \u0026lt;: Signed 32-bit signed integer type. 按行首的退格键可以退出帮助模式。\nShell 模式 就像帮助模式对于快速访问文档很有用一样，另一个常见的任务是使用系统 shell 来执行系统命令。就像 ? 进入帮助模式时一样, 在行首按下分号(;)会进入 shell 模式。而且可以在行首按退格键退出。\njulia\u0026gt; ; # upon typing ;, the prompt changes (in place) to: shell\u0026gt; shell\u0026gt; echo hello hello 注意:\n对于 Windows 用户来说，Julia 的 shell 模式不暴露 windows shell 命令。因此，这将会失败:\njulia\u0026gt; ; # upon typing ;, the prompt changes (in place) to: shell\u0026gt; shell\u0026gt; dir ERROR: IOError: could not spawn `dir`: no such file or directory (ENOENT) Stacktrace! ....... 不过，你可以像这样访问 PowerShell:\njulia\u0026gt; ; # upon typing ;, the prompt changes (in place) to: shell\u0026gt; shell\u0026gt; powershell Windows PowerShell Copyright (C) Microsoft Corporation. All rights reserved. PS C:\\Users\\elm\u0026gt; \u0026hellip;而且对 cmd.exe 的访问是这样的（见 dir 命令）:\njulia\u0026gt; ; # upon typing ;, the prompt changes (in place) to: shell\u0026gt; shell\u0026gt; cmd Microsoft Windows [version 10.0.17763.973] (c) 2018 Microsoft Corporation. All rights reserved. C:\\Users\\elm\u0026gt;dir Volume in drive C has no label Volume Serial Number is 1643-0CD7 Directory of C:\\Users\\elm 29/01/2020 22:15 \u0026lt;DIR\u0026gt; . 29/01/2020 22:15 \u0026lt;DIR\u0026gt; .. 02/02/2020 08:06 \u0026lt;DIR\u0026gt; .atom 搜索模式 在上述所有模式中，执行的行数都会被保存到历史文件中，可以进行搜索。要在以前的历史记录中进行增量搜索，输入 ^R\u0026ndash;控制键和 r 键。提示符将变为(reverse-i-search):，当你输入搜索查询时，搜索查询将出现在引号中。当你输入更多的内容时，与查询相匹配的最新结果会动态地更新到冒号的右边。如果要使用相同的查询找到一个较早的结果，只需再次输入 ^R。\n就像 ^R 是反向搜索一样，^S 是正向搜索，并提示(i-search):。两者可以相互结合使用，分别在上一个或下一个匹配结果中移动。\n键绑定 Julia REPL 大量使用了键绑定。上面已经介绍了几个控制键绑定（^D 用于退出，^R 和 ^S 用于搜索），但还有更多。除了控制键，还有元键绑定。这些因平台不同而变化较大，但大多数终端默认使用 alt- 或 option- 按住键发送元键（也可以配置成这样），或者按 Esc 键，然后按键。\n   Keybinding Description     Program control    ^D 退出(当缓存为空时)   ^C 中断或取消   ^L 清理控制台屏幕   Return/Enter, ^J 新行，如果完成了就执行   meta-Return/Enter 插入新行而不执行   ? 或 ; 进入帮助或shell模式(当在行的开头时)   ^R, ^S 递增式历史检索，如上所述    自定义键绑定 Julia 的 REPL 键绑定可以通过向 REPL.setup_interface 传递一个字典来完全定制用户的偏好。这个字典的键可以是字符或字符串。键 \u0026lsquo;*\u0026rsquo; 指的是默认操作。控制加字符x的绑定用\u0026quot;^x\u0026quot;表示。Meta 加x可以写成 \u0026ldquo;\\M-x\u0026rdquo; 或 \u0026ldquo;\\ex\u0026rdquo;，Control 加 x 可以写成 \u0026ldquo;\\C-x\u0026rdquo; 或 \u0026ldquo;^x\u0026rdquo;。自定义 keymap 的值必须是 nothing(表示输入应该被忽略)或接受签名的函数(PromptState, AbstractREPL, Char)。REPL.setup_interface 函数必须在 REPL 初始化之前被调用，通过在 atreplinit 注册操作。例如，要绑定上下方向键来移动历史记录而不需要前缀搜索，可以在 ~/.julia/config/startup.jl 中放入以下代码。\nimport REPL import REPL.LineEdit const mykeys = Dict{Any,Any}( # Up Arrow \u0026#34;\\e[A\u0026#34; =\u0026gt; (s,o...)-\u0026gt;(LineEdit.edit_move_up(s) || LineEdit.history_prev(s, LineEdit.mode(s).hist)), # Down Arrow \u0026#34;\\e[B\u0026#34; =\u0026gt; (s,o...)-\u0026gt;(LineEdit.edit_move_down(s) || LineEdit.history_next(s, LineEdit.mode(s).hist)) ) function customize_keys(repl) repl.interface = REPL.setup_interface(repl; extra_repl_keymap = mykeys) end atreplinit(customize_keys) 用户应该参考 LineEdit.jl 来发现键输入的可用操作。\nTab 补全 在 REPL 的 Julian 和帮助模式下，可以输入函数或类型的前几个字符，然后按tab键，得到一个所有匹配的列表:\njulia\u0026gt; stri[TAB] stride strides string strip julia\u0026gt; Stri[TAB] StridedArray StridedMatrix StridedVecOrMat StridedVector String tab 键也可以用来用它们的 Unicode 等价物替代 LaTeX 数学符号，并获得 LaTeX 匹配列表。\njulia\u0026gt; \\pi[TAB] julia\u0026gt; π π = 3.1415926535897... julia\u0026gt; e\\_1[TAB] = [1,0] julia\u0026gt; e₁ = [1,0] 2-element Array{Int64,1}: 1 0 julia\u0026gt; e\\^1[TAB] = [1 0] julia\u0026gt; e¹ = [1 0] 1×2 Array{Int64,2}: 1 0 julia\u0026gt; \\sqrt[TAB]2 # √ is equivalent to the sqrt function julia\u0026gt; √2 1.4142135623730951 julia\u0026gt; \\hbar[TAB](h) = h / 2\\pi[TAB] julia\u0026gt; ħ(h) = h / 2π ħ (generic function with 1 method) julia\u0026gt; \\h[TAB] \\hat \\hermitconjmatrix \\hkswarow \\hrectangle \\hatapprox \\hexagon \\hookleftarrow \\hrectangleblack \\hbar \\hexagonblack \\hookrightarrow \\hslash \\heartsuit \\hksearow \\house \\hspace julia\u0026gt; α=\u0026#34;\\alpha[TAB]\u0026#34; # LaTeX completion also works in strings julia\u0026gt; α=\u0026#34;α\u0026#34; 完整的tab-补全列表可以在手册的 Unicode 输入部分找到。\n路径补全适用于字符串和 julia 的 shell 模式:\njulia\u0026gt; path=\u0026#34;/[TAB]\u0026#34; .dockerenv .juliabox/ boot/ etc/ lib/ media/ opt/ root/ sbin/ sys/ usr/ .dockerinit bin/ dev/ home/ lib64/ mnt/ proc/ run/ srv/ tmp/ var/ shell\u0026gt; /[TAB] .dockerenv .juliabox/ boot/ etc/ lib/ media/ opt/ root/ sbin/ sys/ usr/ .dockerinit bin/ dev/ home/ lib64/ mnt/ proc/ run/ srv/ tmp/ var/ Tab 补全可以帮助调查匹配输入参数的可用方法。\njulia\u0026gt; max([TAB] # All methods are displayed, not shown here due to size of the list julia\u0026gt; max([1, 2], [TAB] # All methods where `Vector{Int}` matches as first argument max(x, y) in Base at operators.jl:215 max(a, b, c, xs...) in Base at operators.jl:281 julia\u0026gt; max([1, 2], max(1, 2), [TAB] # All methods matching the arguments. max(x, y) in Base at operators.jl:215 max(a, b, c, xs...) in Base at operators.jl:281 关键词也显示在 ; 后面的建议方法中，见下面一行，其中 limit 和 keepempty 是关键词参数:\njulia\u0026gt; split(\u0026#34;1 1 1\u0026#34;, [TAB] split(str::AbstractString; limit, keepempty) in Base at strings/util.jl:302 split(str::T, splitter; limit, keepempty) where T\u0026lt;:AbstractString in Base at strings/util.jl:277 方法的补全使用类型推断，因此即使参数是函数输出的，也能看到参数是否匹配。函数需要类型稳定，完成才能够删除不匹配的方法。\nTab 补全也可以帮助补全字段:\njulia\u0026gt; import UUIDs julia\u0026gt; UUIDs.uuid[TAB] uuid1 uuid4 uuid_version 也可以补全函数输出的字段:\njulia\u0026gt; split(\u0026quot;\u0026quot;,\u0026quot;\u0026quot;)[1].[TAB] lastindex offset string 函数输出的字段完成采用类型推断，只有在函数类型稳定的情况下，它才能建议字段。\n字典键也可以用 tab 补全:\njulia\u0026gt; foo = Dict(\u0026#34;qwer1\u0026#34;=\u0026gt;1, \u0026#34;qwer2\u0026#34;=\u0026gt;2, \u0026#34;asdf\u0026#34;=\u0026gt;3) Dict{String,Int64} with 3 entries: \u0026#34;qwer2\u0026#34; =\u0026gt; 2 \u0026#34;asdf\u0026#34; =\u0026gt; 3 \u0026#34;qwer1\u0026#34; =\u0026gt; 1 julia\u0026gt; foo[\u0026#34;q[TAB] \u0026#34;qwer1\u0026#34; \u0026#34;qwer2\u0026#34; julia\u0026gt; foo[\u0026#34;qwer 自定义颜色 Julia 和 REPL 所使用的颜色也是可以自定义的。要改变 Julia 提示符的颜色，您可以在您的 ~/.julia/config/startup.jl 文件中添加以下内容，该文件应放在您的主目录中。\nfunction customize_colors(repl) repl.prompt_color = Base.text_colors[:cyan] end atreplinit(customize_colors) 可用的颜色键可以通过在 REPL 的帮助模式下输入 Base.text_colors 来查看。此外，对于支持 256 色的终端来说，整数 0 到 255 可以用作颜色键。\n也可以通过在上面的 customize_colors 函数中设置 repl 的相应字段（分别为 help_color、shell_color、input_color 和 answer_color）来改变帮助和 shell 提示符以及输入和回答文字的颜色。对于后两者，要确保 envcolors 字段也设置为 false。\n也可以通过使用 Base.text_colors[:bold] 作为颜色来应用粗体格式。例如，要用粗体字打印答案，可以使用下面的 ~/.julia/config/startup.jl:\nfunction customize_colors(repl) repl.envcolors = false repl.answer_color = Base.text_colors[:bold] end atreplinit(customize_colors) 你也可以通过设置适当的环境变量来定制用于渲染警告和信息消息的颜色。例如，要分别用洋红色、黄色和青色来渲染错误、警告和信息消息，你可以在 ~/.julia/config/startup.jl 文件中添加以下内容:\nENV[\u0026#34;JULIA_ERROR_COLOR\u0026#34;] = :magenta ENV[\u0026#34;JULIA_WARN_COLOR\u0026#34;] = :yellow ENV[\u0026#34;JULIA_INFO_COLOR\u0026#34;] = :cyan TerminalMenus TerminalMenus 是 Julia REPL 的一个子模块，可以在终端中实现小型、低配的交互式菜单。\n例子 import REPL using REPL.TerminalMenus options = [\u0026#34;apple\u0026#34;, \u0026#34;orange\u0026#34;, \u0026#34;grape\u0026#34;, \u0026#34;strawberry\u0026#34;, \u0026#34;blueberry\u0026#34;, \u0026#34;peach\u0026#34;, \u0026#34;lemon\u0026#34;, \u0026#34;lime\u0026#34;] RadioMenu RadioMenu 允许用户从列表中选择一个选项。request 函数显示交互式菜单并返回所选选项的索引。如果用户按 \u0026lsquo;q\u0026rsquo; 或 ctrl-c，request 将返回 -1。\n# `pagesize` is the number of items to be displayed at a time. # The UI will scroll if the number of options is greater # than the `pagesize` menu = RadioMenu(options, pagesize=4) # `request` displays the menu and returns the index after the # user has selected a choice choice = request(\u0026#34;Choose your favorite fruit:\u0026#34;, menu) if choice != -1 println(\u0026#34;Your favorite fruit is \u0026#34;, options[choice], \u0026#34;!\u0026#34;) else println(\u0026#34;Menu canceled.\u0026#34;) end 输出:\nChoose your favorite fruit: ^ grape strawberry \u0026gt; blueberry v peach Your favorite fruit is blueberry! MultiSelectMenu 多重选择菜单（MultiSelectMenu）允许用户从一个列表中选择许多选择。\n# here we use the default `pagesize` 10 menu = MultiSelectMenu(options) # `request` returns a `Set` of selected indices # if the menu us canceled (ctrl-c or q), return an empty set choices = request(\u0026#34;Select the fruits you like:\u0026#34;, menu) if length(choices) \u0026gt; 0 println(\u0026#34;You like the following fruits:\u0026#34;) for i in choices println(\u0026#34; - \u0026#34;, options[i]) end else println(\u0026#34;Menu canceled.\u0026#34;) end 输出:\nSelect the fruits you like: [press: d=done, a=all, n=none] [ ] apple \u0026gt; [X] orange [X] grape [ ] strawberry [ ] blueberry [X] peach [ ] lemon [ ] lime You like the following fruits: - orange - grape - peach Customization / Configuration 所有的界面定制都是通过关键字 TerminalMenus.config() 函数完成的。\n参数  charset::Symbol=:na: 要使用的ui字符(:ascii 或 :unicode); 被其他参数覆盖。 cursor::Char='\u0026gt;'|'→': 光标使用的字符。 up_arrow::Char='^'|'↑': 用于向上箭头的字符。 down_arrow::Char='v'|'↓': 用于向下箭头的字符。 checked::String=\u0026quot;[X]\u0026quot;|\u0026quot;✓\u0026quot;：用于检查的字符串。 unchecked::String=\u0026quot;[]\u0026quot;|\u0026quot;⬚\u0026quot;)：用于未选中的字符串。 scroll::Symbol=:na: 如果 :wrap，则将光标环绕在顶部和底部，如果 :nowrap 则不环绕光标。 supress_output::Bool=false。用于测试。如果为真，菜单不会被打印到控制台。 ctrl_c_interrupt::Bool=true: 如果为假，在 ^C 时返回空，如果为真，在 ^C 时抛出 InterruptException()。  例子 julia\u0026gt; menu = MultiSelectMenu(options, pagesize=5); julia\u0026gt; request(menu) # ASCII is used by default [press: d=done, a=all, n=none] [ ] apple [X] orange [ ] grape \u0026gt; [X] strawberry v [ ] blueberry Set([4, 2]) julia\u0026gt; TerminalMenus.config(charset=:unicode) julia\u0026gt; request(menu) [press: d=done, a=all, n=none] ⬚ apple ✓ orange ⬚ grape → ✓ strawberry ↓ ⬚ blueberry Set([4, 2]) julia\u0026gt; TerminalMenus.config(checked=\u0026#34;YEP!\u0026#34;, unchecked=\u0026#34;NOPE\u0026#34;, cursor=\u0026#39;⧐\u0026#39;) julia\u0026gt; request(menu) [press: d=done, a=all, n=none] NOPE apple YEP! orange NOPE grape ⧐ YEP! strawberry ↓ NOPE blueberry Set([4, 2]) 参考 Base.atreplinit\n atreplinit(f)\n 注册一个单参数函数，在交互式会话中，在 REPL 接口初始化之前被调用；这对自定义接口很有用。f 的参数是 REPL 对象。这个函数应该在 ~/.julia/config/startup.jl 初始化文件中调用。\n"},"name":"Julia 中的 REPL","published":"2020-08-21T00:00:00+08:00","summary":"REPL in Julia","type":"entry","url":"https://ohmyweekly.github.io/notes/2020-08-21-repl-in-julia/"}],"name":"Julia 官方文档","type":"feed","url":"https://ohmyweekly.github.io/tags/julia-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/"}
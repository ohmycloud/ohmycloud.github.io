{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003ch1 id=\"模块\"\u003e模块\u003c/h1\u003e\n\u003cp\u003eJulia 中的模块是独立的变量工作空间，即它们引入了一个新的全局作用域。它们在语法上是有分界的，在 \u003ccode\u003emodule Name ... end\u003c/code\u003e 里面。模块允许您创建顶层定义（也就是全局变量），而不用担心您的代码与别人的代码一起使用时的名称冲突。在一个模块中，你可以控制哪些来自其他模块的名字是可见的（通过导入），并指定哪些名字是要公开的（通过导出）。\u003c/p\u003e\n\u003cp\u003e下面的例子展示了模块的主要功能。这个例子并不是为了运行，而是为了说明问题。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"n\"\u003eMyModule\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003eLib\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003eBigLib\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003ething1\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ething2\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eshow\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"n\"\u003eMyType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eMyType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eMyType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eshow\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eIO\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eMyType\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eM\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"s\"\u003eT\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e \u003c/span\u003e\u003cspan class=\"si\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e需要注意的是，这个样式并不是要在模块的正文中缩进，因为这通常会导致整个文件被缩进。\u003c/p\u003e\n\u003cp\u003e这个模块定义了一个 \u003ccode\u003eMyType\u003c/code\u003e 类型和两个函数。函数 \u003ccode\u003efoo\u003c/code\u003e 和 \u003ccode\u003eMyType\u003c/code\u003e 类型是导出的，因此可以导入到其他模块中。函数 \u003ccode\u003ebar\u003c/code\u003e 是 \u003ccode\u003eMyModule\u003c/code\u003e 的私有函数。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eusing Lib\u003c/code\u003e 语句意味着将有一个名为 \u003ccode\u003eLib\u003c/code\u003e 的模块可以根据需要解析名称。当遇到一个全局变量在当前模块中没有定义时，系统会在 \u003ccode\u003eLib\u003c/code\u003e 导出的变量中搜索它，如果在那里找到了，就会导入它。这意味着在当前模块内对该全局的所有使用都将解析为该变量在 \u003ccode\u003eLib\u003c/code\u003e 中的定义。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eusing BigLib: thing1, thing2\u003c/code\u003e 语句，只将标识符 \u003ccode\u003ething1\u003c/code\u003e 和 \u003ccode\u003ething2\u003c/code\u003e 从模块 \u003ccode\u003eBigLib\u003c/code\u003e 中带入作用域。如果这些名称指的是函数，那么将不允许向它们添加方法（你只能 \u0026ldquo;使用 \u0026ldquo;它们，而不是扩展它们）。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eimport\u003c/code\u003e 关键字支持与 \u003ccode\u003eusing\u003c/code\u003e 相同的语法。\u003ccode\u003eimport\u003c/code\u003e 与 \u003ccode\u003eusing\u003c/code\u003e 的不同之处在于，使用 \u003ccode\u003eimport\u003c/code\u003e 导入的函数可以用新的方法进行扩展。\u003c/p\u003e\n\u003cp\u003e在上面的 \u003ccode\u003eMyModule\u003c/code\u003e 中，我们想给标准的 \u003ccode\u003eshow\u003c/code\u003e 函数添加一个方法，所以我们必须写 \u003ccode\u003eimport Base.show\u003c/code\u003e。只有通过 \u003ccode\u003eusing\u003c/code\u003e 才能看到名字的函数不能被扩展。\u003c/p\u003e\n\u003cp\u003e一旦一个变量通过 \u003ccode\u003eusing\u003c/code\u003e 或 \u003ccode\u003eimport\u003c/code\u003e 变得可见，一个模块就不能创建自己的同名变量。导入的变量是只读的，分配给全局变量总是会影响到当前模块所拥有的变量，否则会引发错误。\u003c/p\u003e\n\u003ch2 id=\"模块使用情况概述\"\u003e模块使用情况概述\u003c/h2\u003e\n\u003cp\u003e要加载一个模块，可以使用两个主要的关键词：\u003ccode\u003eusing\u003c/code\u003e 和 \u003ccode\u003eimport\u003c/code\u003e。要了解它们的区别，请看下面的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"n\"\u003eMyModule\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个模块中，我们导出了 \u003ccode\u003ex\u003c/code\u003e 和 \u003ccode\u003ey\u003c/code\u003e 函数(用关键字 \u003ccode\u003eexport\u003c/code\u003e)，也有非导出的函数 \u003ccode\u003ep\u003c/code\u003e，有几种不同的方法可以将 \u003ccode\u003eModule\u003c/code\u003e 及其内部函数加载到当前的工作空间中。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e导入命令\u003c/th\u003e\n\u003cth align=\"left\"\u003e带入带作用域中的东西\u003c/th\u003e\n\u003cth align=\"left\"\u003e可用于方法扩展\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eusing MyModule\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e所有导出的名字(\u003ccode\u003ex\u003c/code\u003e 和 \u003ccode\u003ey\u003c/code\u003e), \u003ccode\u003eMyModule.x\u003c/code\u003e, \u003ccode\u003eMyModule.y\u003c/code\u003e 和 \u003ccode\u003eMyModule.p\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eMyModule.x\u003c/code\u003e, \u003ccode\u003eMyModule.y\u003c/code\u003e 和 \u003ccode\u003eMyModule.p\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eusing MyModule: x, p\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ex\u003c/code\u003e 和 \u003ccode\u003ep\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eimport MyModule\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eMyModule.x\u003c/code\u003e, \u003ccode\u003eMyModule.y\u003c/code\u003e 和 \u003ccode\u003eMyModule.p\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eMyModule.x\u003c/code\u003e, \u003ccode\u003eMyModule.y\u003c/code\u003e 和 \u003ccode\u003eMyModule.p\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eimport MyModule.x, MyModule.p\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ex\u003c/code\u003e 和 \u003ccode\u003ep\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ex\u003c/code\u003e 和 \u003ccode\u003ep\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003eimport MyModule: x, p\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ex\u003c/code\u003e 和 \u003ccode\u003ep\u003c/code\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e\u003ccode\u003ex\u003c/code\u003e 和 \u003ccode\u003ep\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"模块和文件\"\u003e模块和文件\u003c/h2\u003e\n\u003cp\u003e文件和文件名大多与模块无关，模块只与模块表达式有关。一个模块可以有多个文件，一个文件可以有多个模块。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e1\u003c/span\u003e\u003cspan class=\"s\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003ej\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e2\u003c/span\u003e\u003cspan class=\"s\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003ej\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在不同的模块中包含相同的代码，提供了类似 mixin 的行为。人们可以使用这一点来用不同的基础定义来运行相同的代码，例如，通过使用某些操作符的\u0026quot;安全\u0026quot;版本来测试代码。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"n\"\u003eNormal\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003em\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"s\"\u003ec\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003ed\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003ej\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"n\"\u003eTesting\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e_\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003er\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003et\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003er\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003ej\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003em\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"s\"\u003ec\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003ed\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003ej\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"标准模块\"\u003e标准模块\u003c/h2\u003e\n\u003cp\u003eThere are three important standard modules:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Core\"\u003eCore\u003c/a\u003e 包含\u0026quot;内置于\u0026quot;语言中的所有功能。\n\u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base\"\u003eBase\u003c/a\u003e 包含几乎在所有情况下都有用的基本功能。\n\u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Main\"\u003eMain\u003c/a\u003e 是当 Julia 被启动时的顶级模块和当前模块。\u003c/p\u003e\n\u003ch2 id=\"默认的顶层定义和裸模块\"\u003e默认的顶层定义和裸模块\u003c/h2\u003e\n\u003cp\u003e除了 \u003ccode\u003eusing Base\u003c/code\u003e 之外，模块还自动包含 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base.MainInclude.eval\"\u003eeval\u003c/a\u003e和 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base.MainInclude.include\"\u003einclude\u003c/a\u003e 函数的定义，这些函数在该模块的全局作用域内评估表达式/文件。\u003c/p\u003e\n\u003cp\u003e如果不想要这些默认的定义，可以使用关键字 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#baremodule\"\u003ebaremodule\u003c/a\u003e 来代替定义模块（注意： \u003ccode\u003eCore\u003c/code\u003e 仍然是导入的，如上所述）。以 \u003ccode\u003ebaremodule\u003c/code\u003e 来说，一个标准的模块是这样的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003ebaremodule\u003c/span\u003e \u003cspan class=\"n\"\u003eMod\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eeval\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCore\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eeval\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMod\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einclude\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMod\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"相对和绝对模块路径\"\u003e相对和绝对模块路径\u003c/h2\u003e\n\u003cp\u003e给定 \u003ccode\u003eusing Foo\u003c/code\u003e 语句，系统会查询内部的顶层模块表，寻找一个名为 \u003ccode\u003eFoo\u003c/code\u003e 的模块。如果该模块不存在，系统会尝试 \u003ccode\u003erequire(:Foo)\u003c/code\u003e，这通常会导致从安装的包中加载代码。\u003c/p\u003e\n\u003cp\u003e然而，有些模块包含子模块，这意味着你有时需要访问一个非顶层模块。有两种方法可以做到这一点。第一种是使用绝对路径，例如 \u003ccode\u003eusing Base.Sort\u003c/code\u003e。第二种是使用相对路径，这样可以更容易地导入当前模块的子模块或其任何一个外层模块。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"n\"\u003eParent\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"n\"\u003eUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eusing\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eUtils\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里模块 \u003ccode\u003eParent\u003c/code\u003e 包含一个子模块 \u003ccode\u003eUtils\u003c/code\u003e，\u003ccode\u003eParent\u003c/code\u003e 中的代码希望 \u003ccode\u003eUtils\u003c/code\u003e 的内容可见。这可以通过在 \u003ccode\u003eusing\u003c/code\u003e 路径中使用点号来实现。添加更多的前导点号会使模块的层次结构上升。例如，\u003ccode\u003eusing ..Utils\u003c/code\u003e 会在 \u003ccode\u003eParent\u003c/code\u003e 的外层模块中查找\u003ccode\u003eUtils\u003c/code\u003e，而不是在 \u003ccode\u003eParent\u003c/code\u003e 本身中查找。\u003c/p\u003e\n\u003cp\u003e注意相对导入限定符只在使用和导入语句中有效。\u003c/p\u003e\n\u003ch2 id=\"命名空间杂项\"\u003e命名空间杂项\u003c/h2\u003e\n\u003cp\u003e如果一个名字是限定的(例如 \u003ccode\u003eBase.sin\u003c/code\u003e)，那么即使它没有被导出，也可以被访问。这在调试时往往很有用。它也可以通过使用限定名作为函数名来添加方法。但是，由于会产生语法上的歧义，如果你想给不同模块中的一个函数添加方法，而这个函数的名称只包含符号，例如一个运算符，\u003ccode\u003eBase.+\u003c/code\u003e，你必须使用 \u003ccode\u003eBase.:+\u003c/code\u003e 来引用它。如果运算符的长度超过一个字符，你必须用括号把它括起来，比如 \u003ccode\u003eBase.:(==)\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e在导入和导出语句中，宏的名称用 \u003ccode\u003e@\u003c/code\u003e 书写，例如 \u003ccode\u003eimport Mod.@mac\u003c/code\u003e。其他模块中的宏可以用 \u003ccode\u003eMod.@mac\u003c/code\u003e 或 \u003ccode\u003e@Mod.mac\u003c/code\u003e 来调用。\u003c/p\u003e\n\u003cp\u003e语法 \u003ccode\u003eM.x = y\u003c/code\u003e 不能用于分配其他模块中的全局，全局分配总是模块-局部的。\u003c/p\u003e\n\u003cp\u003e变量名可以通过声明为 \u003ccode\u003eglobal x\u003c/code\u003e 来 \u0026ldquo;保留\u0026quot;而不分配给它，这样可以防止加载后初始化的 globals 的名称冲突。\u003c/p\u003e\n\u003ch2 id=\"模块初始化和预编译\"\u003e模块初始化和预编译\u003c/h2\u003e\n\u003cp\u003e大型模块可能需要几秒钟的时间来加载，因为执行一个模块中的所有语句往往需要编译大量的代码。Julia 创建了模块的预编译缓存来减少这个时间。\u003c/p\u003e\n\u003cp\u003e当使用 \u003ccode\u003eimport\u003c/code\u003e 或 \u003ccode\u003eusing\u003c/code\u003e 加载模块时，会自动创建并使用增量的预编译模块文件。这将导致它在第一次导入时自动编译。另外，您也可以手动调用 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base.compilecache\"\u003eBase.compilecache(modulename)\u003c/a\u003e。由此产生的缓存文件将存储在 \u003ccode\u003eDEPOT_PATH[1]/compiled/\u003c/code\u003e 中。随后，只要模块的任何依赖关系发生变化，模块就会在 \u003ccode\u003eusing\u003c/code\u003e 或 \u003ccode\u003eimport\u003c/code\u003e 时自动重新编译；依赖关系是指导入的模块、Julia 构建的模块、包含的文件，或者模块文件中 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base.include_dependency\"\u003einclude_dependency(path)\u003c/a\u003e 声明的显式依赖关系。\u003c/p\u003e\n\u003cp\u003e对于文件依赖，通过检查由 \u003ccode\u003einclude\u003c/code\u003e 加载的文件或由 \u003ccode\u003einclude_dependency\u003c/code\u003e 显式添加的文件的修改时间(mtime)是否保持不变，或者是否等于被截断到最接近秒的修改时间(以适应无法以亚秒级精度复制 mtime 的系统)来确定变化。它还考虑到在 \u003ccode\u003erequire\u003c/code\u003e 中搜索逻辑选择的文件路径是否与创建预编译文件的路径匹配。它还会考虑到已经加载到当前进程中的一组依赖关系，即使这些模块的文件发生变化或消失，也不会重新编译这些模块，以避免在运行系统和预编译缓存之间产生不兼容的情况。\u003c/p\u003e\n\u003cp\u003e如果你知道某个模块预编译你的模块是不安全的（例如，出于下面描述的原因之一），你应该在模块文件中加上 \u003ccode\u003e__precompile__(false)\u003c/code\u003e（通常放在顶部）。这将导致 \u003ccode\u003eBase.compilecache\u003c/code\u003e 抛出一个错误，并将导致 \u003ccode\u003eusing\u003c/code\u003e / \u003ccode\u003eimport\u003c/code\u003e 直接将其加载到当前进程中而跳过预编译和缓存。这也因此阻止了该模块被任何其他预编译模块导入。\u003c/p\u003e\n\u003cp\u003e您可能需要注意创建增量共享库时固有的某些行为，在编写模块时可能需要注意。例如，外部状态不会被保存。为了适应这一点，明确地将任何必须在运行时发生的初始化步骤与可以在编译时发生的步骤分开。为此，Julia 允许您在您的模块中定义一个 \u003ccode\u003e__init__()\u003c/code\u003e 函数来执行任何必须在运行时发生的初始化步骤。这个函数在编译时不会被调用（\u003ccode\u003e--output-*\u003c/code\u003e）。实际上，你可以假设它在代码的生命周期中只运行一次。当然，如果有必要的话，你可以手动调用它，但是默认情况下，你可以假设这个函数处理的是本地机器的计算状态，它不需要\u0026ndash;甚至不应该\u0026ndash;在编译后的镜像中捕获。它将在模块被加载到一个进程后被调用，包括如果它被加载到增量编译中(\u003ccode\u003e--output-incremental=yes\u003c/code\u003e)，但如果它被加载到一个完整的编译进程中，则不会被调用。\u003c/p\u003e\n\u003cp\u003e特别是，如果你在一个模块中定义了一个 \u003ccode\u003efunction __init__()\u003c/code\u003e，那么 Julia 将在模块被加载后（例如通过 \u003ccode\u003eimport\u003c/code\u003e、\u003ccode\u003eusing\u003c/code\u003e 或 \u003ccode\u003erequire\u003c/code\u003e）在运行时第一次立即调用 \u003ccode\u003e__init__()\u003c/code\u003e（也就是说，\u003ccode\u003e__init__\u003c/code\u003e 只被调用一次，而且是在模块中的所有语句被执行后才被调用）。因为它是在模块完全导入之后被调用的，所以任何子模块或其它导入的模块都会在外层模块的 \u003ccode\u003e__init__\u003c/code\u003e 之前调用它们的 \u003ccode\u003e__init__\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e__init__\u003c/code\u003e 的两个典型用途是调用外部 C 库的运行时初始化函数和初始化涉及外部库返回指针的全局常量。例如，假设我们正在调用一个 C 库 \u003ccode\u003elibfoo\u003c/code\u003e，它要求我们在运行时调用 \u003ccode\u003efoo_init()\u003c/code\u003e 初始化函数。假设我们还想定义一个全局常量 \u003ccode\u003efoo_data_ptr\u003c/code\u003e，用来存放 \u003ccode\u003elibfoo\u003c/code\u003e 定义的 \u003ccode\u003evoid *foo_data()\u003c/code\u003e 函数的返回值\u0026ndash;这个常量必须在运行时（而不是在编译时）初始化，因为指针地址会随着运行而改变。你可以通过在你的模块中定义下面的 \u003ccode\u003e__init__\u003c/code\u003e 函数来实现。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003efoo_data_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eRef\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003ePtr\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eCvoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"n\"\u003e__init__\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eccall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003efoo_init\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003elibfoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eCvoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"n\"\u003efoo_data_ptr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eccall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003efoo_data\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003elibfoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003ePtr\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eCvoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003enothing\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，我们完全可以在函数内部定义一个全局，比如 \u003ccode\u003e__init__\u003c/code\u003e；这是使用动态语言的优势之一。但是通过在全局作用域内定义一个常量，我们可以确保编译器知道这个类型，并允许它生成更好的优化代码。显然，你的模块中任何其他依赖于 \u003ccode\u003efoo_data_ptr\u003c/code\u003e 的 globals 也必须在 \u003ccode\u003e__init__\u003c/code\u003e 中初始化。\u003c/p\u003e\n\u003cp\u003e涉及大多数不是由 \u003ca href=\"https://docs.julialang.org/en/v1/base/c/#ccall\"\u003eccall\u003c/a\u003e 产生的 Julia 对象的常量不需要放在 \u003ccode\u003e__init__\u003c/code\u003e 中：它们的定义可以被预编译并从缓存的模块映像中加载。这包括像数组这样复杂的堆分配对象。然而，任何返回原始指针值的例程都必须在运行时调用，以便预编译工作（\u003ca href=\"https://docs.julialang.org/en/v1/base/c/#Core.Ptr\"\u003ePtr\u003c/a\u003e 对象将变成空指针，除非它们被隐藏在 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base.isbits\"\u003eisbits\u003c/a\u003e 对象中）。这包括 Julia 函数 \u003ccode\u003ecfunction\u003c/code\u003e 和 \u003ca href=\"https://docs.julialang.org/en/v1/base/c/#Base.pointer\"\u003epointer\u003c/a\u003e 的返回值。\u003c/p\u003e\n\u003cp\u003e字典和集合类型，或者一般来说任何依赖于 \u003ccode\u003ehash(key)\u003c/code\u003e 方法输出的东西，都是比较棘手的情况。在常见的情况下，键是数字、字符串、符号、范围、\u003ccode\u003eExpr\u003c/code\u003e 或这些类型的组合（通过数组、元组、集合、对等），它们可以安全地进行预编译。然而，对于其他一些关键类型，如 \u003ccode\u003eFunction\u003c/code\u003e 或 \u003ccode\u003eDataType\u003c/code\u003e 和通用的用户定义类型，在这些类型中，你没有定义 \u003ccode\u003ehash\u003c/code\u003e 方法，回退 \u003ccode\u003ehash\u003c/code\u003e 方法取决于对象的内存地址（通过它的 \u003ccode\u003eobjectid\u003c/code\u003e），因此可能会在运行时改变。如果你有这些键类型之一，或者如果你不确定，为了安全起见，你可以在你的 \u003ccode\u003e__init__\u003c/code\u003e 函数中初始化这个字典。或者，你也可以使用 \u003ca href=\"https://docs.julialang.org/en/v1/base/collections/#Base.IdDict\"\u003eIdDict\u003c/a\u003e 字典类型，它由预编译特别处理，所以在编译时初始化是安全的。\u003c/p\u003e\n\u003cp\u003e在使用预编译时，保持对编译阶段和执行阶段的清晰认识很重要。在这种模式下，往往会更清楚地认识到 Julia 是一个允许执行任意 Julia 代码的编译器，而不是一个同时生成编译代码的独立解释器。\u003c/p\u003e\n\u003cp\u003e其他已知的潜在故障情况包括。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e全局计数器（例如，用于试图唯一识别对象）。考虑以下代码片段。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003emutable\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eUniquedById\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003emyid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\n    \u003cspan class=\"k\"\u003elet\u003c/span\u003e \u003cspan class=\"n\"\u003ecounter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eUniquedById\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecounter\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e虽然这段代码的目的是给每个实例一个唯一的 id，但计数器的值是在编译结束时记录的。这个增量编译模块的所有后续使用将从同一个计数器值开始。\u003c/p\u003e\n\u003cp\u003e请注意，\u003ccode\u003eobjectid\u003c/code\u003e（通过哈希内存指针工作）也有类似的问题（参见下面关于 \u003ccode\u003eDict\u003c/code\u003e 用法的说明）。\u003c/p\u003e\n\u003cp\u003e一种替代方法是使用宏来捕获 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base.@__MODULE__\"\u003e@\u003cstrong\u003eMODULE\u003c/strong\u003e\u003c/a\u003e，并将其与当前的计数器值一起单独存储，然而，重新设计代码使其不依赖于这个全局状态可能会更好。\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e\n\u003cp\u003e关联集合(比如 \u003ccode\u003eDict\u003c/code\u003e 和 \u003ccode\u003eSet\u003c/code\u003e)需要在 \u003ccode\u003e__init__\u003c/code\u003e 中重新洗牌(将来可能会提供一个机制来注册一个初始化函数)。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e根据编译时的副作用在加载时持续存在。例如：修改其他 Julia 模块中的数组或其他变量；维护打开的文件或设备的句柄；存储其他系统资源（包括内存）的指针。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e通过直接引用而不是通过它的查找路径，从另一个模块创建意外的全局状态\u0026quot;副本\u0026rdquo;。例如，（在全局作用域内）。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"c\"\u003e#mystdout = Base.stdout #= will not work correctly, since this will copy Base.stdout into this module =#\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# instead use accessor functions:\u003c/span\u003e\n\u003cspan class=\"n\"\u003egetstdout\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estdout\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"cm\"\u003e#=\u003c/span\u003e\u003cspan class=\"cm\"\u003e \u003c/span\u003e\u003cspan class=\"cm\"\u003eb\u003c/span\u003e\u003cspan class=\"cm\"\u003ee\u003c/span\u003e\u003cspan class=\"cm\"\u003es\u003c/span\u003e\u003cspan class=\"cm\"\u003et\u003c/span\u003e\u003cspan class=\"cm\"\u003e \u003c/span\u003e\u003cspan class=\"cm\"\u003eo\u003c/span\u003e\u003cspan class=\"cm\"\u003ep\u003c/span\u003e\u003cspan class=\"cm\"\u003et\u003c/span\u003e\u003cspan class=\"cm\"\u003ei\u003c/span\u003e\u003cspan class=\"cm\"\u003eo\u003c/span\u003e\u003cspan class=\"cm\"\u003en\u003c/span\u003e\u003cspan class=\"cm\"\u003e \u003c/span\u003e\u003cspan class=\"cm\"\u003e=#\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# or move the assignment into the runtime:\u003c/span\u003e\n\u003cspan class=\"n\"\u003e__init__\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003eglobal\u003c/span\u003e \u003cspan class=\"n\"\u003emystdout\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003estdout\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"cm\"\u003e#=\u003c/span\u003e\u003cspan class=\"cm\"\u003e \u003c/span\u003e\u003cspan class=\"cm\"\u003ea\u003c/span\u003e\u003cspan class=\"cm\"\u003el\u003c/span\u003e\u003cspan class=\"cm\"\u003es\u003c/span\u003e\u003cspan class=\"cm\"\u003eo\u003c/span\u003e\u003cspan class=\"cm\"\u003e \u003c/span\u003e\u003cspan class=\"cm\"\u003ew\u003c/span\u003e\u003cspan class=\"cm\"\u003eo\u003c/span\u003e\u003cspan class=\"cm\"\u003er\u003c/span\u003e\u003cspan class=\"cm\"\u003ek\u003c/span\u003e\u003cspan class=\"cm\"\u003es\u003c/span\u003e\u003cspan class=\"cm\"\u003e \u003c/span\u003e\u003cspan class=\"cm\"\u003e=#\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对预编译代码时可以进行的操作进行了一些额外的限制，以帮助用户避免其他错误行为的情况。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e调用 \u003ca href=\"https://docs.julialang.org/en/v1/base/base/#Base.MainInclude.eval\"\u003eeval\u003c/a\u003e 引起另一个模块的副作用。当增量预编译标志被设置时，这也会导致发出警告。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e在 \u003ccode\u003e__init__()\u003c/code\u003e 被启动后，从本地作用域调用 \u003ccode\u003eglobal const\u003c/code\u003e 语句(参见问题 \u003ccode\u003e#12010\u003c/code\u003e，计划为此增加一个错误)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e在进行增量预编译时，替换一个模块是一个运行时错误。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e还有几点需要注意。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e在对源文件本身进行修改之后，不会进行代码重载/缓存无效化（包括通过 \u003ccode\u003ePkg.update\u003c/code\u003e），而且在 \u003ccode\u003ePkg.rm\u003c/code\u003e 之后也不会进行清理。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e预编译不考虑重塑数组的内存共享行为 (每个视图都有自己的副本)\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e期待文件系统在编译时和运行时之间保持不变，例如 \u003ca href=\"https://docs.julialang.org/en/v1/base/file/#Base.@__FILE__\"\u003e@\u003cstrong\u003eFILE\u003c/strong\u003e\u003c/a\u003e/\u003ccode\u003esource_path()\u003c/code\u003e 在运行时查找资源，或者 BinDeps 的 \u003ccode\u003e@checked_lib\u003c/code\u003e 宏。有时这是不可避免的。然而，在可能的情况下，在编译时将资源复制到模块中是一个很好的做法，这样它们就不需要在运行时被找到。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eWeakRef\u003c/code\u003e 对象和 finalizers 目前还没有被序列化器正确处理（这将在即将发布的版本中得到修正）。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e通常最好避免捕获对内部元数据对象实例的引用，如 \u003ccode\u003eMethod\u003c/code\u003e、\u003ccode\u003eMethodInstance\u003c/code\u003e、\u003ccode\u003eMethodTable\u003c/code\u003e、\u003ccode\u003eTypeMapLevel\u003c/code\u003e、\u003ccode\u003eTypeMapEntry\u003c/code\u003e 以及这些对象的字段，因为这可能会混淆序列化器，可能不会导致你想要的结果。这样做不一定会出错，但你只需要做好准备，系统会尝试复制其中的一些对象，并为其他对象创建一个唯一的实例。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e在模块开发过程中，有时关闭增量预编译是很有帮助的。命令行标志 \u003ccode\u003e--compiled-modules={yes|no}\u003c/code\u003e 可以让你开启或关闭模块预编译。当 Julia 以 \u003ccode\u003e--compiled-modules=no\u003c/code\u003e 启动时，当加载模块和模块依赖时，编译缓存中的序列化模块会被忽略。\u003ccode\u003eBase.compilecache\u003c/code\u003e 仍然可以被手动调用。这个命令行标志的状态被传递给 \u003ccode\u003ePkg.build\u003c/code\u003e，以便在安装、更新和显式构建包时禁用自动预编译触发。\u003c/p\u003e\n","text":"模块 Julia 中的模块是独立的变量工作空间，即它们引入了一个新的全局作用域。它们在语法上是有分界的，在 module Name ... end 里面。模块允许您创建顶层定义（也就是全局变量），而不用担心您的代码与别人的代码一起使用时的名称冲突。在一个模块中，你可以控制哪些来自其他模块的名字是可见的（通过导入），并指定哪些名字是要公开的（通过导出）。\n下面的例子展示了模块的主要功能。这个例子并不是为了运行，而是为了说明问题。\nmodule MyModule using Lib using BigLib: thing1, thing2 import Base.show export MyType, foo struct MyType x end bar(x) = 2x foo(a::MyType) = bar(a.x) + 1 show(io::IO, a::MyType) = print(io, \u0026#34;MyType$(a.x)\u0026#34;) end 需要注意的是，这个样式并不是要在模块的正文中缩进，因为这通常会导致整个文件被缩进。\n这个模块定义了一个 MyType 类型和两个函数。函数 foo 和 MyType 类型是导出的，因此可以导入到其他模块中。函数 bar 是 MyModule 的私有函数。\nusing Lib 语句意味着将有一个名为 Lib 的模块可以根据需要解析名称。当遇到一个全局变量在当前模块中没有定义时，系统会在 Lib 导出的变量中搜索它，如果在那里找到了，就会导入它。这意味着在当前模块内对该全局的所有使用都将解析为该变量在 Lib 中的定义。\nusing BigLib: thing1, thing2 语句，只将标识符 thing1 和 thing2 从模块 BigLib 中带入作用域。如果这些名称指的是函数，那么将不允许向它们添加方法（你只能 \u0026ldquo;使用 \u0026ldquo;它们，而不是扩展它们）。\nimport 关键字支持与 using 相同的语法。import 与 using 的不同之处在于，使用 import 导入的函数可以用新的方法进行扩展。\n在上面的 MyModule 中，我们想给标准的 show 函数添加一个方法，所以我们必须写 import Base.show。只有通过 using 才能看到名字的函数不能被扩展。\n一旦一个变量通过 using 或 import 变得可见，一个模块就不能创建自己的同名变量。导入的变量是只读的，分配给全局变量总是会影响到当前模块所拥有的变量，否则会引发错误。\n模块使用情况概述 要加载一个模块，可以使用两个主要的关键词：using 和 import。要了解它们的区别，请看下面的例子。\nmodule MyModule export x, y x() = \u0026#34;x\u0026#34; y() = \u0026#34;y\u0026#34; p() = \u0026#34;p\u0026#34; end 在这个模块中，我们导出了 x 和 y 函数(用关键字 export)，也有非导出的函数 p，有几种不同的方法可以将 Module 及其内部函数加载到当前的工作空间中。\n   导入命令 带入带作用域中的东西 可用于方法扩展     using MyModule 所有导出的名字(x 和 y), MyModule.x, MyModule.y 和 MyModule.p MyModule.x, MyModule.y 和 MyModule.p   using MyModule: x, p x 和 p    import MyModule MyModule.x, MyModule.y 和 MyModule.p MyModule.x, MyModule.y 和 MyModule.p   import MyModule.x, MyModule.p x 和 p x 和 p   import MyModule: x, p x 和 p x 和 p    模块和文件 文件和文件名大多与模块无关，模块只与模块表达式有关。一个模块可以有多个文件，一个文件可以有多个模块。\nmodule Foo include(\u0026#34;file1.jl\u0026#34;) include(\u0026#34;file2.jl\u0026#34;) end 在不同的模块中包含相同的代码，提供了类似 mixin 的行为。人们可以使用这一点来用不同的基础定义来运行相同的代码，例如，通过使用某些操作符的\u0026quot;安全\u0026quot;版本来测试代码。\nmodule Normal include(\u0026#34;mycode.jl\u0026#34;) end module Testing include(\u0026#34;safe_operators.jl\u0026#34;) include(\u0026#34;mycode.jl\u0026#34;) end 标准模块 There are three important standard modules:\nCore 包含\u0026quot;内置于\u0026quot;语言中的所有功能。 Base 包含几乎在所有情况下都有用的基本功能。 Main 是当 Julia 被启动时的顶级模块和当前模块。\n默认的顶层定义和裸模块 除了 using Base 之外，模块还自动包含 eval和 include 函数的定义，这些函数在该模块的全局作用域内评估表达式/文件。\n如果不想要这些默认的定义，可以使用关键字 baremodule 来代替定义模块（注意： Core 仍然是导入的，如上所述）。以 baremodule 来说，一个标准的模块是这样的。\nbaremodule Mod using Base eval(x) = Core.eval(Mod, x) include(p) = Base.include(Mod, p) ... end 相对和绝对模块路径 给定 using Foo 语句，系统会查询内部的顶层模块表，寻找一个名为 Foo 的模块。如果该模块不存在，系统会尝试 require(:Foo)，这通常会导致从安装的包中加载代码。\n然而，有些模块包含子模块，这意味着你有时需要访问一个非顶层模块。有两种方法可以做到这一点。第一种是使用绝对路径，例如 using Base.Sort。第二种是使用相对路径，这样可以更容易地导入当前模块的子模块或其任何一个外层模块。\nmodule Parent module Utils ... end using .Utils ... end 这里模块 Parent 包含一个子模块 Utils，Parent 中的代码希望 Utils 的内容可见。这可以通过在 using 路径中使用点号来实现。添加更多的前导点号会使模块的层次结构上升。例如，using ..Utils 会在 Parent 的外层模块中查找Utils，而不是在 Parent 本身中查找。\n注意相对导入限定符只在使用和导入语句中有效。\n命名空间杂项 如果一个名字是限定的(例如 Base.sin)，那么即使它没有被导出，也可以被访问。这在调试时往往很有用。它也可以通过使用限定名作为函数名来添加方法。但是，由于会产生语法上的歧义，如果你想给不同模块中的一个函数添加方法，而这个函数的名称只包含符号，例如一个运算符，Base.+，你必须使用 Base.:+ 来引用它。如果运算符的长度超过一个字符，你必须用括号把它括起来，比如 Base.:(==)。\n在导入和导出语句中，宏的名称用 @ 书写，例如 import Mod.@mac。其他模块中的宏可以用 Mod.@mac 或 @Mod.mac 来调用。\n语法 M.x = y 不能用于分配其他模块中的全局，全局分配总是模块-局部的。\n变量名可以通过声明为 global x 来 \u0026ldquo;保留\u0026quot;而不分配给它，这样可以防止加载后初始化的 globals 的名称冲突。\n模块初始化和预编译 大型模块可能需要几秒钟的时间来加载，因为执行一个模块中的所有语句往往需要编译大量的代码。Julia 创建了模块的预编译缓存来减少这个时间。\n当使用 import 或 using 加载模块时，会自动创建并使用增量的预编译模块文件。这将导致它在第一次导入时自动编译。另外，您也可以手动调用 Base.compilecache(modulename)。由此产生的缓存文件将存储在 DEPOT_PATH[1]/compiled/ 中。随后，只要模块的任何依赖关系发生变化，模块就会在 using 或 import 时自动重新编译；依赖关系是指导入的模块、Julia 构建的模块、包含的文件，或者模块文件中 include_dependency(path) 声明的显式依赖关系。\n对于文件依赖，通过检查由 include 加载的文件或由 include_dependency 显式添加的文件的修改时间(mtime)是否保持不变，或者是否等于被截断到最接近秒的修改时间(以适应无法以亚秒级精度复制 mtime 的系统)来确定变化。它还考虑到在 require 中搜索逻辑选择的文件路径是否与创建预编译文件的路径匹配。它还会考虑到已经加载到当前进程中的一组依赖关系，即使这些模块的文件发生变化或消失，也不会重新编译这些模块，以避免在运行系统和预编译缓存之间产生不兼容的情况。\n如果你知道某个模块预编译你的模块是不安全的（例如，出于下面描述的原因之一），你应该在模块文件中加上 __precompile__(false)（通常放在顶部）。这将导致 Base.compilecache 抛出一个错误，并将导致 using / import 直接将其加载到当前进程中而跳过预编译和缓存。这也因此阻止了该模块被任何其他预编译模块导入。\n您可能需要注意创建增量共享库时固有的某些行为，在编写模块时可能需要注意。例如，外部状态不会被保存。为了适应这一点，明确地将任何必须在运行时发生的初始化步骤与可以在编译时发生的步骤分开。为此，Julia 允许您在您的模块中定义一个 __init__() 函数来执行任何必须在运行时发生的初始化步骤。这个函数在编译时不会被调用（--output-*）。实际上，你可以假设它在代码的生命周期中只运行一次。当然，如果有必要的话，你可以手动调用它，但是默认情况下，你可以假设这个函数处理的是本地机器的计算状态，它不需要\u0026ndash;甚至不应该\u0026ndash;在编译后的镜像中捕获。它将在模块被加载到一个进程后被调用，包括如果它被加载到增量编译中(--output-incremental=yes)，但如果它被加载到一个完整的编译进程中，则不会被调用。\n特别是，如果你在一个模块中定义了一个 function __init__()，那么 Julia 将在模块被加载后（例如通过 import、using 或 require）在运行时第一次立即调用 __init__()（也就是说，__init__ 只被调用一次，而且是在模块中的所有语句被执行后才被调用）。因为它是在模块完全导入之后被调用的，所以任何子模块或其它导入的模块都会在外层模块的 __init__ 之前调用它们的 __init__ 函数。\n__init__ 的两个典型用途是调用外部 C 库的运行时初始化函数和初始化涉及外部库返回指针的全局常量。例如，假设我们正在调用一个 C 库 libfoo，它要求我们在运行时调用 foo_init() 初始化函数。假设我们还想定义一个全局常量 foo_data_ptr，用来存放 libfoo 定义的 void *foo_data() 函数的返回值\u0026ndash;这个常量必须在运行时（而不是在编译时）初始化，因为指针地址会随着运行而改变。你可以通过在你的模块中定义下面的 __init__ 函数来实现。\nconst foo_data_ptr = Ref{Ptr{Cvoid}}(0) function __init__() ccall((:foo_init, :libfoo), Cvoid, ()) foo_data_ptr[] = ccall((:foo_data, :libfoo), Ptr{Cvoid}, ()) nothing end 请注意，我们完全可以在函数内部定义一个全局，比如 __init__；这是使用动态语言的优势之一。但是通过在全局作用域内定义一个常量，我们可以确保编译器知道这个类型，并允许它生成更好的优化代码。显然，你的模块中任何其他依赖于 foo_data_ptr 的 globals 也必须在 __init__ 中初始化。\n涉及大多数不是由 ccall 产生的 Julia 对象的常量不需要放在 __init__ 中：它们的定义可以被预编译并从缓存的模块映像中加载。这包括像数组这样复杂的堆分配对象。然而，任何返回原始指针值的例程都必须在运行时调用，以便预编译工作（Ptr 对象将变成空指针，除非它们被隐藏在 isbits 对象中）。这包括 Julia 函数 cfunction 和 pointer 的返回值。\n字典和集合类型，或者一般来说任何依赖于 hash(key) 方法输出的东西，都是比较棘手的情况。在常见的情况下，键是数字、字符串、符号、范围、Expr 或这些类型的组合（通过数组、元组、集合、对等），它们可以安全地进行预编译。然而，对于其他一些关键类型，如 Function 或 DataType 和通用的用户定义类型，在这些类型中，你没有定义 hash 方法，回退 hash 方法取决于对象的内存地址（通过它的 objectid），因此可能会在运行时改变。如果你有这些键类型之一，或者如果你不确定，为了安全起见，你可以在你的 __init__ 函数中初始化这个字典。或者，你也可以使用 IdDict 字典类型，它由预编译特别处理，所以在编译时初始化是安全的。\n在使用预编译时，保持对编译阶段和执行阶段的清晰认识很重要。在这种模式下，往往会更清楚地认识到 Julia 是一个允许执行任意 Julia 代码的编译器，而不是一个同时生成编译代码的独立解释器。\n其他已知的潜在故障情况包括。\n 全局计数器（例如，用于试图唯一识别对象）。考虑以下代码片段。  mutable struct UniquedById myid::Int let counter = 0 UniquedById() = new(counter += 1) end end 虽然这段代码的目的是给每个实例一个唯一的 id，但计数器的值是在编译结束时记录的。这个增量编译模块的所有后续使用将从同一个计数器值开始。\n请注意，objectid（通过哈希内存指针工作）也有类似的问题（参见下面关于 Dict 用法的说明）。\n一种替代方法是使用宏来捕获 @MODULE，并将其与当前的计数器值一起单独存储，然而，重新设计代码使其不依赖于这个全局状态可能会更好。\n 关联集合(比如 Dict 和 Set)需要在 __init__ 中重新洗牌(将来可能会提供一个机制来注册一个初始化函数)。\n  根据编译时的副作用在加载时持续存在。例如：修改其他 Julia 模块中的数组或其他变量；维护打开的文件或设备的句柄；存储其他系统资源（包括内存）的指针。\n  通过直接引用而不是通过它的查找路径，从另一个模块创建意外的全局状态\u0026quot;副本\u0026rdquo;。例如，（在全局作用域内）。\n  #mystdout = Base.stdout #= will not work correctly, since this will copy Base.stdout into this module =# # instead use accessor functions: getstdout() = Base.stdout #=bestoption=# # or move the assignment into the runtime: __init__() = global mystdout = Base.stdout #=alsoworks=# 对预编译代码时可以进行的操作进行了一些额外的限制，以帮助用户避免其他错误行为的情况。\n  调用 eval 引起另一个模块的副作用。当增量预编译标志被设置时，这也会导致发出警告。\n  在 __init__() 被启动后，从本地作用域调用 global const 语句(参见问题 #12010，计划为此增加一个错误)\n  在进行增量预编译时，替换一个模块是一个运行时错误。\n  还有几点需要注意。\n  在对源文件本身进行修改之后，不会进行代码重载/缓存无效化（包括通过 Pkg.update），而且在 Pkg.rm 之后也不会进行清理。\n  预编译不考虑重塑数组的内存共享行为 (每个视图都有自己的副本)\n  期待文件系统在编译时和运行时之间保持不变，例如 @FILE/source_path() 在运行时查找资源，或者 BinDeps 的 @checked_lib 宏。有时这是不可避免的。然而，在可能的情况下，在编译时将资源复制到模块中是一个很好的做法，这样它们就不需要在运行时被找到。\n  WeakRef 对象和 finalizers 目前还没有被序列化器正确处理（这将在即将发布的版本中得到修正）。\n  通常最好避免捕获对内部元数据对象实例的引用，如 Method、MethodInstance、MethodTable、TypeMapLevel、TypeMapEntry 以及这些对象的字段，因为这可能会混淆序列化器，可能不会导致你想要的结果。这样做不一定会出错，但你只需要做好准备，系统会尝试复制其中的一些对象，并为其他对象创建一个唯一的实例。\n  在模块开发过程中，有时关闭增量预编译是很有帮助的。命令行标志 --compiled-modules={yes|no} 可以让你开启或关闭模块预编译。当 Julia 以 --compiled-modules=no 启动时，当加载模块和模块依赖时，编译缓存中的序列化模块会被忽略。Base.compilecache 仍然可以被手动调用。这个命令行标志的状态被传递给 Pkg.build，以便在安装、更新和显式构建包时禁用自动预编译触发。\n"},"name":"Julia 中的 模块","published":"2020-08-05T00:00:00+08:00","summary":"Modules","type":"entry","url":"https://ohmyweekly.github.io/notes/2020-08-05-modules-in-julia/"},{"content":{"html":"\u003ch2 id=\"进入-pkg-模式\"\u003e进入 Pkg 模式\u003c/h2\u003e\n\u003cp\u003ePkg 是 Julia 中包管理工具。Pkg 来自于 REPL, 在 Julia 的 REPL 中按下 \u003ccode\u003e]\u003c/code\u003e 就进入 Pkg REPL 了。要回到 Julia REPL, 按退格键或 \u003ccode\u003e^C\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"使用-pkg\"\u003e使用 Pkg\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003eadd JSON              \u003cspan class=\"c1\"\u003e# 添加一个 package\u003c/span\u003e\nadd JSON StaticArrays \u003cspan class=\"c1\"\u003e# 添加多个 package\u003c/span\u003e\nrm JSON               \u003cspan class=\"c1\"\u003e# 移除一个 package\u003c/span\u003e\nrm JSON StaticArrays  \u003cspan class=\"c1\"\u003e# 移除多个 package\u003c/span\u003e\nadd https://github.com/JuliaLang/Example.jl \u003cspan class=\"c1\"\u003e# 添加一个未注册的 package\u003c/span\u003e\nrm Example            \u003cspan class=\"c1\"\u003e# 按名字移除 package\u003c/span\u003e\nupdate Example        \u003cspan class=\"c1\"\u003e# 升级一个已安装的 package\u003c/span\u003e\nupdate                \u003cspan class=\"c1\"\u003e# 升级所有已安装的 package\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"environments\"\u003eenvironments\u003c/h2\u003e\n\u003cp\u003e你可能已经注意到 Pkg REPL 提示符前面的 \u003ccode\u003e(@v1.5)\u003c/code\u003e 字符串了。这里的  \u003ccode\u003e(@v1.5)\u003c/code\u003e 就是激活环境(\u003cstrong\u003eactive environment\u003c/strong\u003e)。激活环境是能被诸如 \u003ccode\u003eadd\u003c/code\u003e、\u003ccode\u003erm\u003c/code\u003e 和 \u003ccode\u003eupdate\u003c/code\u003e 等 Pkg 命令修改的环境。\u003c/p\u003e\n\u003cp\u003e我们可以设置一个新的激活环境用于实验。要设置激活环境, 使用 \u003ccode\u003eactivate\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e@v1.5\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; activate tutorial\nActivating new environment at \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Project.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e~/tutorial/Project.toml\u003c/code\u003e 是激活环境的项目文件。项目文件是 Pkg 存储环境的元数据的地方。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003etutorial\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; status\nStatus \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Project.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e \u003cspan class=\"o\"\u003e(\u003c/span\u003eempty project\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在这个新的环境是空的, 我们添加一个 package 观察下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003etutorial\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; add Example\n   Updating registry at \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/.julia/registries/General\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n   Updating git-repo \u003cspan class=\"sb\"\u003e`\u003c/span\u003ehttps://github.com/JuliaRegistries/General.git\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  Resolving package versions...\n    Cloning \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07-990d-54b4-ab0e-23690620f79a\u003cspan class=\"o\"\u003e]\u003c/span\u003e Example from https://github.com/JuliaLang/Example.jl.git\n  Installed Example ─ v0.5.3\nUpdating \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Project.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07\u003cspan class=\"o\"\u003e]\u003c/span\u003e + Example v0.5.3\nUpdating \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Manifest.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07\u003cspan class=\"o\"\u003e]\u003c/span\u003e + Example v0.5.3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e用 \u003ccode\u003estatus\u003c/code\u003e 命令查看激活环境的信息:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003etutorial\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; status\nStatus \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Project.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07\u003cspan class=\"o\"\u003e]\u003c/span\u003e Example v0.5.3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用 \u003ccode\u003edevelop\u003c/code\u003e 命令设置 \u003ccode\u003eExample\u003c/code\u003e package 的 一个 \u003ccode\u003egit clone\u003c/code\u003e, 以供我们修改这个本地仓库:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003etutorial\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; develop --local Example\n    Cloning git-repo \u003cspan class=\"sb\"\u003e`\u003c/span\u003ehttps://github.com/JuliaLang/Example.jl.git\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  Resolving package versions...\nUpdating \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Project.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07\u003cspan class=\"o\"\u003e]\u003c/span\u003e ~ Example v0.5.3 ⇒ v0.5.4 \u003cspan class=\"sb\"\u003e`\u003c/span\u003edev/Example\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\nUpdating \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Manifest.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07\u003cspan class=\"o\"\u003e]\u003c/span\u003e ~ Example v0.5.3 ⇒ v0.5.4 \u003cspan class=\"sb\"\u003e`\u003c/span\u003edev/Example\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e用 \u003ccode\u003e;\u003c/code\u003e 切换到 shell 模式, 用 vi 修改 \u003ccode\u003e~/tutorial/dev/Example/src/Example.jl\u003c/code\u003e 文件, 增加一个 \u003ccode\u003eplusone\u003c/code\u003e 函数, 保存。\u003c/p\u003e\n\u003cp\u003e在 Julia 的 REPL 中, 导入修改后的 \u003ccode\u003eExample\u003c/code\u003e package:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; import Example\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e Info: Precompiling Example \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07-990d-54b4-ab0e-23690620f79a\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\njulia\u0026gt; Example.plusone\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e2\u003c/span\u003e\n\njulia\u0026gt; Example.plusone\u003cspan class=\"o\"\u003e(\u003c/span\u003e4\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e5\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可以看到我们添加的函数生效了, 这样就很方便我们添加测试新功能。如果我们已经不再需要本地的 \u003ccode\u003eExample\u003c/code\u003e 了, 需要使用 \u003ccode\u003efree\u003c/code\u003e 命令以停止使用本地克隆的 package, 转而使用已注册版本代替:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003etutorial\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; free Example\n  Resolving package versions...\nUpdating \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Project.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07\u003cspan class=\"o\"\u003e]\u003c/span\u003e ~ Example v0.5.4 \u003cspan class=\"sb\"\u003e`\u003c/span\u003edev/Example\u003cspan class=\"sb\"\u003e`\u003c/span\u003e ⇒ v0.5.3\nUpdating \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/tutorial/Manifest.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n  \u003cspan class=\"o\"\u003e[\u003c/span\u003e7876af07\u003cspan class=\"o\"\u003e]\u003c/span\u003e ~ Example v0.5.4 \u003cspan class=\"sb\"\u003e`\u003c/span\u003edev/Example\u003cspan class=\"sb\"\u003e`\u003c/span\u003e ⇒ v0.5.3\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果已经用 \u003ccode\u003etutorial\u003c/code\u003e 做完实验了, 可以使用不带参数的 \u003ccode\u003eactivate\u003c/code\u003e 回到默认环境:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003etutorial\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; activate\n Activating environment at \u003cspan class=\"sb\"\u003e`\u003c/span\u003e~/.julia/environments/v1.5/Project.toml\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e@v1.5\u003cspan class=\"o\"\u003e)\u003c/span\u003e pkg\u0026gt; \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"进入 Pkg 模式 Pkg 是 Julia 中包管理工具。Pkg 来自于 REPL, 在 Julia 的 REPL 中按下 ] 就进入 Pkg REPL 了。要回到 Julia REPL, 按退格键或 ^C。\n使用 Pkg add JSON # 添加一个 package add JSON StaticArrays # 添加多个 package rm JSON # 移除一个 package rm JSON StaticArrays # 移除多个 package add https://github.com/JuliaLang/Example.jl # 添加一个未注册的 package rm Example # 按名字移除 package update Example # 升级一个已安装的 package update # 升级所有已安装的 package environments 你可能已经注意到 Pkg REPL 提示符前面的 (@v1.5) 字符串了。这里的 (@v1.5) 就是激活环境(active environment)。激活环境是能被诸如 add、rm 和 update 等 Pkg 命令修改的环境。\n我们可以设置一个新的激活环境用于实验。要设置激活环境, 使用 activate:\n(@v1.5) pkg\u0026gt; activate tutorial Activating new environment at `~/tutorial/Project.toml` ~/tutorial/Project.toml 是激活环境的项目文件。项目文件是 Pkg 存储环境的元数据的地方。\n(tutorial) pkg\u0026gt; status Status `~/tutorial/Project.toml` (empty project) 现在这个新的环境是空的, 我们添加一个 package 观察下:\n(tutorial) pkg\u0026gt; add Example Updating registry at `~/.julia/registries/General` Updating git-repo `https://github.com/JuliaRegistries/General.git` Resolving package versions... Cloning [7876af07-990d-54b4-ab0e-23690620f79a] Example from https://github.com/JuliaLang/Example.jl.git Installed Example ─ v0.5.3 Updating `~/tutorial/Project.toml` [7876af07] + Example v0.5.3 Updating `~/tutorial/Manifest.toml` [7876af07] + Example v0.5.3 用 status 命令查看激活环境的信息:\n(tutorial) pkg\u0026gt; status Status `~/tutorial/Project.toml` [7876af07] Example v0.5.3 使用 develop 命令设置 Example package 的 一个 git clone, 以供我们修改这个本地仓库:\n(tutorial) pkg\u0026gt; develop --local Example Cloning git-repo `https://github.com/JuliaLang/Example.jl.git` Resolving package versions... Updating `~/tutorial/Project.toml` [7876af07] ~ Example v0.5.3 ⇒ v0.5.4 `dev/Example` Updating `~/tutorial/Manifest.toml` [7876af07] ~ Example v0.5.3 ⇒ v0.5.4 `dev/Example` 用 ; 切换到 shell 模式, 用 vi 修改 ~/tutorial/dev/Example/src/Example.jl 文件, 增加一个 plusone 函数, 保存。\n在 Julia 的 REPL 中, 导入修改后的 Example package:\njulia\u0026gt; import Example [ Info: Precompiling Example [7876af07-990d-54b4-ab0e-23690620f79a] julia\u0026gt; Example.plusone(1) 2 julia\u0026gt; Example.plusone(4) 5 可以看到我们添加的函数生效了, 这样就很方便我们添加测试新功能。如果我们已经不再需要本地的 Example 了, 需要使用 free 命令以停止使用本地克隆的 package, 转而使用已注册版本代替:\n(tutorial) pkg\u0026gt; free Example Resolving package versions... Updating `~/tutorial/Project.toml` [7876af07] ~ Example v0.5.4 `dev/Example` ⇒ v0.5.3 Updating `~/tutorial/Manifest.toml` [7876af07] ~ Example v0.5.4 `dev/Example` ⇒ v0.5.3 如果已经用 tutorial 做完实验了, 可以使用不带参数的 activate 回到默认环境:\n(tutorial) pkg\u0026gt; activate Activating environment at `~/.julia/environments/v1.5/Project.toml` (@v1.5) pkg\u0026gt; "},"name":"Julia 中的 Pkg","published":"2020-08-04T00:00:00+08:00","summary":"Pkg","type":"entry","url":"https://ohmyweekly.github.io/notes/2020-08-04-pkg-in-julia/"},{"content":{"html":"\u003ch1 id=\"dates-模块的加载和使用\"\u003eDates 模块的加载和使用\u003c/h1\u003e\n\u003cp\u003e在 Julia 的 Pkg REPL 中, 输入 \u003ccode\u003eadd Dates\u003c/code\u003e 添加 Dates 模块。回到 Julia 的 REPL 中, 输入:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; using Dates\n\njulia\u0026gt; DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-01-01T00:00:00\n\njulia\u0026gt; typeof\u003cspan class=\"o\"\u003e(\u003c/span\u003eDateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDateTime\n\njulia\u0026gt; DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020,8,1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01T00:00:00\n\njulia\u0026gt; DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020,8,1,12\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01T12:00:00\n\njulia\u0026gt; DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020,8,1,12,30\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01T12:30:00\n\njulia\u0026gt; DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020,8,1,12,30,59\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01T12:30:59\n\njulia\u0026gt; DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020,8,1,12,30,59, 999\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01T12:30:59.999\n\njulia\u0026gt; Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020, 8\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01\n\njulia\u0026gt; Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020, 8, 1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01\n\njulia\u0026gt; Date\u003cspan class=\"o\"\u003e(\u003c/span\u003eDates.Year\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020\u003cspan class=\"o\"\u003e)\u003c/span\u003e,Dates.Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e8\u003cspan class=\"o\"\u003e)\u003c/span\u003e,Dates.Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01\n\njulia\u0026gt; Date\u003cspan class=\"o\"\u003e(\u003c/span\u003eDates.Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e8\u003cspan class=\"o\"\u003e)\u003c/span\u003e,Dates.Year\u003cspan class=\"o\"\u003e(\u003c/span\u003e2020\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2020-08-01\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"date-和-datetime-的算术操作\"\u003eDate 和 DateTime 的算术操作\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003edt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2012,2,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2012-02-29\n\njulia\u0026gt; \u003cspan class=\"nv\"\u003edt2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2000,2,1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2000-02-01\n\njulia\u0026gt; dump\u003cspan class=\"o\"\u003e(\u003c/span\u003edt\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate\n  instant: Dates.UTInstant\u003cspan class=\"o\"\u003e{\u003c/span\u003eDay\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    periods: Day\n      value: Int64 \u003cspan class=\"m\"\u003e734562\u003c/span\u003e\n\njulia\u0026gt; dump\u003cspan class=\"o\"\u003e(\u003c/span\u003edt2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate\n  instant: Dates.UTInstant\u003cspan class=\"o\"\u003e{\u003c/span\u003eDay\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    periods: Day\n      value: Int64 \u003cspan class=\"m\"\u003e730151\u003c/span\u003e\n\njulia\u0026gt; dt \u0026gt; dt2\n\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\njulia\u0026gt; dt !\u003cspan class=\"o\"\u003e=\u003c/span\u003e dt2\n\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e\n\njulia\u0026gt; dt + dt2\nERROR: MethodError: no method matching +\u003cspan class=\"o\"\u003e(\u003c/span\u003e::Date, ::Date\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e...\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\njulia\u0026gt; dt * dt2\nERROR: MethodError: no method matching *\u003cspan class=\"o\"\u003e(\u003c/span\u003e::Date, ::Date\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e...\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\njulia\u0026gt; dt / dt2\nERROR: MethodError: no method matching /\u003cspan class=\"o\"\u003e(\u003c/span\u003e::Date, ::Date\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; dt - dt2\n\u003cspan class=\"m\"\u003e4411\u003c/span\u003e days\n\njulia\u0026gt; typeof\u003cspan class=\"o\"\u003e(\u003c/span\u003edt - dt2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDay\n\njulia\u0026gt; dt2 - dt\n-4411 days\n\njulia\u0026gt; \u003cspan class=\"nv\"\u003edt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2012,2,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2012-02-29T00:00:00\n\njulia\u0026gt; \u003cspan class=\"nv\"\u003edt2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e DateTime\u003cspan class=\"o\"\u003e(\u003c/span\u003e2000,2,1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2000-02-01T00:00:00\n\njulia\u0026gt; dt - dt2\n\u003cspan class=\"m\"\u003e381110400000\u003c/span\u003e milliseconds\n\njulia\u0026gt; typeof\u003cspan class=\"o\"\u003e(\u003c/span\u003edt - dt2\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nMillisecond\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"访问器函数\"\u003e访问器函数\u003c/h1\u003e\n\u003cp\u003e因为 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.Date\"\u003eDate\u003c/a\u003e 和 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.DateTime\"\u003eDateTime\u003c/a\u003e 类型被存储为单个 \u003ca href=\"https://docs.julialang.org/en/v1/base/numbers/#Core.Int64\"\u003eInt64\u003c/a\u003e 值，所以日期部分或字段可以通过访问器函数进行检索。小写访问器函数以整数形式返回字段。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014, 1, 31\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2014-01-31\n\njulia\u0026gt; Dates.year\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e2014\u003c/span\u003e\n\njulia\u0026gt; Dates.month\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\njulia\u0026gt; Dates.week\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e5\u003c/span\u003e\n\njulia\u0026gt; Dates.day\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e31\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e而专有形式返回相应 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.Period\"\u003ePeriod\u003c/a\u003e 类型中的相同值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Dates.Year\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e2014\u003c/span\u003e years\n\njulia\u0026gt; Dates.Day\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e31\u003c/span\u003e days\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eJulia 还提供了复合方法，因为在同时需要多个字段的情况下，这些方法提供了一种效率衡量标准。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Dates.yearmonth\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014, 1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; Dates.monthday\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e1, 31\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; Dates.yearmonthday\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014, 1, 31\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以访问底层 \u003ccode\u003eUTInstant\u003c/code\u003e 或整数值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; dump\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate\n  instant: Dates.UTInstant\u003cspan class=\"o\"\u003e{\u003c/span\u003eDay\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n    periods: Day\n      value: Int64 \u003cspan class=\"m\"\u003e735264\u003c/span\u003e\n\njulia\u0026gt; t.instant\nDates.UTInstant\u003cspan class=\"o\"\u003e{\u003c/span\u003eDay\u003cspan class=\"o\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003eDay\u003cspan class=\"o\"\u003e(\u003c/span\u003e735264\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; Dates.value\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e735264\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"查询函数\"\u003e查询函数\u003c/h1\u003e\n\u003cp\u003e查询函数提供关于 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.TimeType\"\u003eTimeType\u003c/a\u003e 的历法信息。它们包括关于一周中的某一天的信息。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003et\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014, 1, 31\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2014-01-31\n\njulia\u0026gt; Dates.dayofweek\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e5\u003c/span\u003e\n\njulia\u0026gt; Dates.dayname\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026#34;Friday\u0026#34;\u003c/span\u003e\n\njulia\u0026gt; Dates.dayofweekofmonth\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 5th Friday of January\u003c/span\u003e\n\u003cspan class=\"m\"\u003e5\u003c/span\u003e\n\njulia\u0026gt; Dates.monthname\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026#34;January\u0026#34;\u003c/span\u003e\n\njulia\u0026gt; Dates.daysinmonth\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e31\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以及 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.TimeType\"\u003eTimeType\u003c/a\u003e 的年份和季度信息。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Dates.isleapyear\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003efalse\u003c/span\u003e\n\njulia\u0026gt; Dates.dayofyear\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e31\u003c/span\u003e\n\njulia\u0026gt; Dates.quarterofyear\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e1\u003c/span\u003e\n\njulia\u0026gt; Dates.dayofquarter\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"m\"\u003e31\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.dayname\"\u003edayname\u003c/a\u003e 和 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.monthname\"\u003emonthname\u003c/a\u003e 方法也可以使用一个可选的 \u003ccode\u003elocale\u003c/code\u003e 关键字，它可以用来返回其他语言/地区的年份或月份的名称。这些函数也有返回缩写名称的版本，即 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.dayabbr\"\u003edayabbr\u003c/a\u003e 和 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.monthabbr\"\u003emonthabbr\u003c/a\u003e。首先将映射加载到 \u003ccode\u003eLOCALES\u003c/code\u003e 变量中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003efrench_months\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;janvier\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;février\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;mars\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;avril\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;mai\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;juin\u0026#34;\u003c/span\u003e,\n                        \u003cspan class=\"s2\"\u003e\u0026#34;juillet\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;août\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;septembre\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;octobre\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;novembre\u0026#34;\u003c/span\u003e, \u003cspan class=\"s2\"\u003e\u0026#34;décembre\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\njulia\u0026gt; \u003cspan class=\"nv\"\u003efrench_monts_abbrev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;janv\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;févr\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;mars\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;avril\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;mai\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;juin\u0026#34;\u003c/span\u003e,\n                              \u003cspan class=\"s2\"\u003e\u0026#34;juil\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;août\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;sept\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;oct\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;nov\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;déc\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\njulia\u0026gt; \u003cspan class=\"nv\"\u003efrench_days\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;lundi\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;mardi\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;mercredi\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;jeudi\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;vendredi\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;samedi\u0026#34;\u003c/span\u003e,\u003cspan class=\"s2\"\u003e\u0026#34;dimanche\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\njulia\u0026gt; Dates.LOCALES\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;french\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.DateLocale\u003cspan class=\"o\"\u003e(\u003c/span\u003efrench_months, french_monts_abbrev, french_days, \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然后可以利用上述函数进行查询。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Dates.dayname\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003elocale\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;french\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026#34;vendredi\u0026#34;\u003c/span\u003e\n\njulia\u0026gt; Dates.monthname\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003elocale\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;french\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026#34;janvier\u0026#34;\u003c/span\u003e\n\njulia\u0026gt; Dates.monthabbr\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003elocale\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;french\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003cspan class=\"s2\"\u003e\u0026#34;janv\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e由于没有加载日期的缩写版本，试图使用函数 \u003ccode\u003edayabbr\u003c/code\u003e 会出错。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Dates.dayabbr\u003cspan class=\"o\"\u003e(\u003c/span\u003et\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nv\"\u003elocale\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;french\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nERROR: BoundsError: attempt to access 1-element Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eString,1\u003cspan class=\"o\"\u003e}\u003c/span\u003e at index \u003cspan class=\"o\"\u003e[\u003c/span\u003e5\u003cspan class=\"o\"\u003e]\u003c/span\u003e\nStacktrace:\n\u003cspan class=\"o\"\u003e[\u003c/span\u003e...\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"时间类型-周期算术\"\u003e时间类型-周期算术\u003c/h1\u003e\n\u003cp\u003e在使用任何语言/日期框架时，熟悉如何处理日期-周期算术是一个很好的做法，因为有一些\u003ca href=\"https://codeblog.jonskeet.uk/2010/12/01/the-joys-of-date-time-arithmetic/\"\u003e棘手的问题\u003c/a\u003e需要处理（尽管对于日-精度类型来说要少得多）。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eDates\u003c/code\u003e 模块的方法试图遵循简单的原则，即在做 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.Period\"\u003ePeriod\u003c/a\u003e 算术时尽量少改。这种方法也常被称为历法算术，或者说如果有人在对话中问你同样的计算方法，你可能会猜到。为什么要大惊小怪呢？我们举个经典的例子：把2014年1月31日加1个月。答案是什么？Javascript 会说\u003ca href=\"https://markhneedham.com/blog/2009/01/07/javascript-add-a-month-to-a-date/\"\u003e3月3日\u003c/a\u003e（假设31天）。PHP 会说\u003ca href=\"https://stackoverflow.com/questions/5760262/php-adding-months-to-a-date-while-not-exceeding-the-last-day-of-the-month\"\u003e3月2日\u003c/a\u003e（假设30天）。事实上，没有正确的答案。在 \u003ccode\u003eDates\u003c/code\u003e 模块中，它给出的结果是2月28日。它是如何计算出来的呢？我喜欢想到赌场里经典的 7-7-7 赌博游戏。\u003c/p\u003e\n\u003cp\u003e现在只要想象一下，老虎机不是 7-7-7，而是年-月-日，或者在我们的例子中，2014-01-31。当你要求在这个日期的基础上增加1个月的时候，月份槽就会递增，所以现在我们有 2014-02-31。然后检查日号是否大于新月份的最后有效日，如果大于（如上例），则日号向下调整到最后有效日（28）。这种方法的后果是什么呢？继续在我们的日期上再加一个月，\u003ccode\u003e2014-02-28 + Month(1) == 2014-03-28\u003c/code\u003e。什么？你是在期待3月的最后一天吗？不对，对不起，记得 7-7-7 的档期。尽可能少的槽位要改变，所以我们先把月份槽位递增1，2014-03-28，轰，我们就完成了，因为这是一个有效的日期。另一方面，如果我们要在原来的日期 2014-01-31 的基础上增加2个月，那么我们最终的结果是 2014-03-31，正如预期的那样。这种方法的另一个后果是，当强行进行特定的排序时，关联性会有所损失（即以不同的顺序添加东西会导致不同的结果）。比如说：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"o\"\u003e(\u003c/span\u003eDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,1,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e+Dates.Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e + Dates.Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2014-02-28\n\njulia\u0026gt; \u003cspan class=\"o\"\u003e(\u003c/span\u003eDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,1,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e+Dates.Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e + Dates.Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2014-03-01\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e那是怎么回事呢？在第一行中，我们在1月29日的基础上加1天，结果是 2014-01-30；然后再加1个月，于是得到 2014-02-30，再往下调整为 2014-02-28。在第二个例子中，我们先加1个月，我们得到 2014-02-29，再往下调整为 2014-02-28，然后再加1天，结果是 2014-03-01。在这种情况下，有一个设计原则是有帮助的，那就是在存在多个 Periods 的情况下，操作将按照 Periods 的类型来排序，而不是按照它们的值或位置顺序来排序；这意味着总是先加 \u003ccode\u003eYear\u003c/code\u003e，然后加 \u003ccode\u003eMonth\u003c/code\u003e，再加 \u003ccode\u003eWeek\u003c/code\u003e 等。因此，以下确实会导致关联性并正好有用:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,1,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e + Dates.Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e + Dates.Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2014-03-01\n\njulia\u0026gt; Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,1,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e + Dates.Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e + Dates.Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n2014-03-01\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e棘手吗？也许吧。一个无辜的 \u003ccode\u003eDates\u003c/code\u003e 用户该怎么做？最重要的是要注意，当处理月份时，明确地强制执行某种关联性，可能会导致一些意想不到的结果，但除此之外，一切都应该按照预期工作。值得庆幸的是，在 UT 中处理时间时，日期-周期算术中的奇特情况几乎就是这样了（避免了处理夏令时、闰秒等的 \u0026ldquo;乐趣\u0026rdquo;）。\u003c/p\u003e\n\u003cp\u003e作为奖励，所有的周期算术对象都可以直接与范围一起工作。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003edr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,1,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,2,3\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2014-01-29\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2014-02-03\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; collect\u003cspan class=\"o\"\u003e(\u003c/span\u003edr\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n6-element Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eDate,1\u003cspan class=\"o\"\u003e}\u003c/span\u003e:\n 2014-01-29\n 2014-01-30\n 2014-01-31\n 2014-02-01\n 2014-02-02\n 2014-02-03\n\njulia\u0026gt; \u003cspan class=\"nv\"\u003edr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,1,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Dates.Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,07,29\u003cspan class=\"o\"\u003e)\u003c/span\u003e\nDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2014-01-29\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Month\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;2014-07-29\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\njulia\u0026gt; collect\u003cspan class=\"o\"\u003e(\u003c/span\u003edr\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n7-element Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eDate,1\u003cspan class=\"o\"\u003e}\u003c/span\u003e:\n 2014-01-29\n 2014-02-28\n 2014-03-29\n 2014-04-29\n 2014-05-29\n 2014-06-29\n 2014-07-29\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode\u003efor i in Date(\u0026quot;2020-08-01\u0026quot;):Day(1):Date(\u0026quot;2020-08-09\u0026quot;)\n           println(i)\nend\n\n2020-08-01\n2020-08-02\n2020-08-03\n2020-08-04\n2020-08-05\n2020-08-06\n2020-08-07\n2020-08-08\n2020-08-09\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"调整器函数\"\u003e调整器函数\u003c/h1\u003e\n\u003cp\u003e尽管日期-周期算术很方便，但经常需要在日期上进行的计算具有日历或时间的性质，而不是固定的周期数。节日就是一个很好的例子，大多数都遵循这样的规则：\u0026ldquo;纪念日 = 五月的最后一个星期一\u0026rdquo;，或者 \u0026ldquo;感恩节 = 十一月的第四个星期四\u0026rdquo;。这类时间表达式处理的是相对于日历的规则，比如本月的第一天或最后一天，下周二，或第一个和第三个星期三等。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eDates\u003c/code\u003e 模块通过几个方便的方法提供了调整器 API，这些方法有助于简单、简洁地表达时间规则。第一组调整器方法处理周、月、季度和年的首尾。它们每个方法都接收一个单一的 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.TimeType\"\u003eTimeType\u003c/a\u003e 作为输入，并返回或调整到相对于输入的所需时期的第一个或最后一个。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Dates.firstdayofweek\u003cspan class=\"o\"\u003e(\u003c/span\u003eDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,7,16\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Adjusts the input to the Monday of the input\u0026#39;s week\u003c/span\u003e\n2014-07-14\n\njulia\u0026gt; Dates.lastdayofmonth\u003cspan class=\"o\"\u003e(\u003c/span\u003eDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,7,16\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Adjusts to the last day of the input\u0026#39;s month\u003c/span\u003e\n2014-07-31\n\njulia\u0026gt; Dates.lastdayofquarter\u003cspan class=\"o\"\u003e(\u003c/span\u003eDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,7,16\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Adjusts to the last day of the input\u0026#39;s quarter\u003c/span\u003e\n2014-09-30\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e接下来的两个高阶方法 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.tonext-Tuple%7BTimeType,Int64%7D\"\u003etonext\u003c/a\u003e 和 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.toprev-Tuple%7BTimeType,Int64%7D\"\u003etoprev\u003c/a\u003e，通过将一个 \u003ccode\u003eDateFunction\u003c/code\u003e 和一个起始 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.TimeType\"\u003eTimeType\u003c/a\u003e 作为第一个参数来概括处理时间表达式。\u003ccode\u003eDateFunction\u003c/code\u003e 只是一个函数，通常是匿名的，它接受一个单一的 \u003ca href=\"https://docs.julialang.org/en/v1/stdlib/Dates/#Dates.TimeType\"\u003eTimeType\u003c/a\u003e 作为输入，并返回一个 \u003ca href=\"https://docs.julialang.org/en/v1/base/numbers/#Core.Bool\"\u003eBool\u003c/a\u003e，\u003ccode\u003etrue\u003c/code\u003e 表示满足调整标准。例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; \u003cspan class=\"nv\"\u003eistuesday\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e x-\u0026gt;Dates.dayofweek\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.Tuesday\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Returns true if the day of the week of x is Tuesday\u003c/span\u003e\n\njulia\u0026gt; Dates.tonext\u003cspan class=\"o\"\u003e(\u003c/span\u003eistuesday, Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,7,13\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 2014-07-13 is a Sunday\u003c/span\u003e\n2014-07-15\n\njulia\u0026gt; Dates.tonext\u003cspan class=\"o\"\u003e(\u003c/span\u003eDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,7,13\u003cspan class=\"o\"\u003e)\u003c/span\u003e, Dates.Tuesday\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Convenience method provided for day of the week adjustments\u003c/span\u003e\n2014-07-15\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这对于更复杂的时间表达式的 do-block 语法是很有用的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003ejulia\u0026gt; Dates.tonext\u003cspan class=\"o\"\u003e(\u003c/span\u003eDate\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014,7,13\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e x\n           \u003cspan class=\"c1\"\u003e# Return true on the 4th Thursday of November (Thanksgiving)\u003c/span\u003e\n           Dates.dayofweek\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.Thursday \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n           Dates.dayofweekofmonth\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n           Dates.month\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.November\n       end\n2014-11-27\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://docs.julialang.org/en/v1/base/collections/#Base.filter\"\u003eBase.filter\u003c/a\u003e 方法可以用来获取指定范围内的所有有效日期/时刻。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"c1\"\u003e# 匹兹堡街道清洁; 从 4月到11月的每第二个周二\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# 日期范围从 2014-01-01 到 2015-01-01\u003c/span\u003e\njulia\u0026gt; \u003cspan class=\"nv\"\u003edr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2014\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Day\u003cspan class=\"o\"\u003e(\u003c/span\u003e1\u003cspan class=\"o\"\u003e)\u003c/span\u003e:Dates.Date\u003cspan class=\"o\"\u003e(\u003c/span\u003e2015\u003cspan class=\"o\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\njulia\u0026gt; filter\u003cspan class=\"o\"\u003e(\u003c/span\u003edr\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e x\n           Dates.dayofweek\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.Tue \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n           Dates.April \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.month\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u0026lt;\u003cspan class=\"o\"\u003e=\u003c/span\u003e Dates.Nov \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n           Dates.dayofweekofmonth\u003cspan class=\"o\"\u003e(\u003c/span\u003ex\u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e\n       end\n8-element Array\u003cspan class=\"o\"\u003e{\u003c/span\u003eDate,1\u003cspan class=\"o\"\u003e}\u003c/span\u003e:\n 2014-04-08\n 2014-05-13\n 2014-06-10\n 2014-07-08\n 2014-08-12\n 2014-09-09\n 2014-10-14\n 2014-11-11\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Raku 中上面的代码可以写成:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003elazy my @dates = Date.new('2014-01-01') ... Date.new('2015-01-01');\n\n.say for @dates.grep: -\u0026gt; $d {\n    $d.day-of-week == 2 \u0026amp;\u0026amp;\n    4  \u0026lt;= $d.month \u0026lt;= 11 \u0026amp;\u0026amp;\n    $d.weekday-of-month == 2\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e其他的例子和测试可以在 \u003ca href=\"https://github.com/JuliaLang/julia/blob/master/stdlib/Dates/test/adjusters.jl\"\u003estdlib/Dates/test/adjusters.jl\u003c/a\u003e 中找到。\u003c/p\u003e\n","text":"Dates 模块的加载和使用 在 Julia 的 Pkg REPL 中, 输入 add Dates 添加 Dates 模块。回到 Julia 的 REPL 中, 输入:\njulia\u0026gt; using Dates julia\u0026gt; DateTime(2020) 2020-01-01T00:00:00 julia\u0026gt; typeof(DateTime(2020)) DateTime julia\u0026gt; DateTime(2020,8,1) 2020-08-01T00:00:00 julia\u0026gt; DateTime(2020,8,1,12) 2020-08-01T12:00:00 julia\u0026gt; DateTime(2020,8,1,12,30) 2020-08-01T12:30:00 julia\u0026gt; DateTime(2020,8,1,12,30,59) 2020-08-01T12:30:59 julia\u0026gt; DateTime(2020,8,1,12,30,59, 999) 2020-08-01T12:30:59.999 julia\u0026gt; Date(2020, 8) 2020-08-01 julia\u0026gt; Date(2020, 8, 1) 2020-08-01 julia\u0026gt; Date(Dates.Year(2020),Dates.Month(8),Dates.Day(1)) 2020-08-01 julia\u0026gt; Date(Dates.Month(8),Dates.Year(2020)) 2020-08-01 Date 和 DateTime 的算术操作 julia\u0026gt; dt = Date(2012,2,29) 2012-02-29 julia\u0026gt; dt2 = Date(2000,2,1) 2000-02-01 julia\u0026gt; dump(dt) Date instant: Dates.UTInstant{Day} periods: Day value: Int64 734562 julia\u0026gt; dump(dt2) Date instant: Dates.UTInstant{Day} periods: Day value: Int64 730151 julia\u0026gt; dt \u0026gt; dt2 true julia\u0026gt; dt != dt2 true julia\u0026gt; dt + dt2 ERROR: MethodError: no method matching +(::Date, ::Date) [...] julia\u0026gt; dt * dt2 ERROR: MethodError: no method matching *(::Date, ::Date) [...] julia\u0026gt; dt / dt2 ERROR: MethodError: no method matching /(::Date, ::Date) julia\u0026gt; dt - dt2 4411 days julia\u0026gt; typeof(dt - dt2) Day julia\u0026gt; dt2 - dt -4411 days julia\u0026gt; dt = DateTime(2012,2,29) 2012-02-29T00:00:00 julia\u0026gt; dt2 = DateTime(2000,2,1) 2000-02-01T00:00:00 julia\u0026gt; dt - dt2 381110400000 milliseconds julia\u0026gt; typeof(dt - dt2) Millisecond 访问器函数 因为 Date 和 DateTime 类型被存储为单个 Int64 值，所以日期部分或字段可以通过访问器函数进行检索。小写访问器函数以整数形式返回字段。\njulia\u0026gt; t = Date(2014, 1, 31) 2014-01-31 julia\u0026gt; Dates.year(t) 2014 julia\u0026gt; Dates.month(t) 1 julia\u0026gt; Dates.week(t) 5 julia\u0026gt; Dates.day(t) 31 而专有形式返回相应 Period 类型中的相同值。\njulia\u0026gt; Dates.Year(t) 2014 years julia\u0026gt; Dates.Day(t) 31 days Julia 还提供了复合方法，因为在同时需要多个字段的情况下，这些方法提供了一种效率衡量标准。\njulia\u0026gt; Dates.yearmonth(t) (2014, 1) julia\u0026gt; Dates.monthday(t) (1, 31) julia\u0026gt; Dates.yearmonthday(t) (2014, 1, 31) 也可以访问底层 UTInstant 或整数值。\njulia\u0026gt; dump(t) Date instant: Dates.UTInstant{Day} periods: Day value: Int64 735264 julia\u0026gt; t.instant Dates.UTInstant{Day}(Day(735264)) julia\u0026gt; Dates.value(t) 735264 查询函数 查询函数提供关于 TimeType 的历法信息。它们包括关于一周中的某一天的信息。\njulia\u0026gt; t = Date(2014, 1, 31) 2014-01-31 julia\u0026gt; Dates.dayofweek(t) 5 julia\u0026gt; Dates.dayname(t) \u0026#34;Friday\u0026#34; julia\u0026gt; Dates.dayofweekofmonth(t) # 5th Friday of January 5 julia\u0026gt; Dates.monthname(t) \u0026#34;January\u0026#34; julia\u0026gt; Dates.daysinmonth(t) 31 以及 TimeType 的年份和季度信息。\njulia\u0026gt; Dates.isleapyear(t) false julia\u0026gt; Dates.dayofyear(t) 31 julia\u0026gt; Dates.quarterofyear(t) 1 julia\u0026gt; Dates.dayofquarter(t) 31 dayname 和 monthname 方法也可以使用一个可选的 locale 关键字，它可以用来返回其他语言/地区的年份或月份的名称。这些函数也有返回缩写名称的版本，即 dayabbr 和 monthabbr。首先将映射加载到 LOCALES 变量中。\njulia\u0026gt; french_months = [\u0026#34;janvier\u0026#34;, \u0026#34;février\u0026#34;, \u0026#34;mars\u0026#34;, \u0026#34;avril\u0026#34;, \u0026#34;mai\u0026#34;, \u0026#34;juin\u0026#34;, \u0026#34;juillet\u0026#34;, \u0026#34;août\u0026#34;, \u0026#34;septembre\u0026#34;, \u0026#34;octobre\u0026#34;, \u0026#34;novembre\u0026#34;, \u0026#34;décembre\u0026#34;]; julia\u0026gt; french_monts_abbrev = [\u0026#34;janv\u0026#34;,\u0026#34;févr\u0026#34;,\u0026#34;mars\u0026#34;,\u0026#34;avril\u0026#34;,\u0026#34;mai\u0026#34;,\u0026#34;juin\u0026#34;, \u0026#34;juil\u0026#34;,\u0026#34;août\u0026#34;,\u0026#34;sept\u0026#34;,\u0026#34;oct\u0026#34;,\u0026#34;nov\u0026#34;,\u0026#34;déc\u0026#34;]; julia\u0026gt; french_days = [\u0026#34;lundi\u0026#34;,\u0026#34;mardi\u0026#34;,\u0026#34;mercredi\u0026#34;,\u0026#34;jeudi\u0026#34;,\u0026#34;vendredi\u0026#34;,\u0026#34;samedi\u0026#34;,\u0026#34;dimanche\u0026#34;]; julia\u0026gt; Dates.LOCALES[\u0026#34;french\u0026#34;] = Dates.DateLocale(french_months, french_monts_abbrev, french_days, [\u0026#34;\u0026#34;]); 然后可以利用上述函数进行查询。\njulia\u0026gt; Dates.dayname(t;locale=\u0026#34;french\u0026#34;) \u0026#34;vendredi\u0026#34; julia\u0026gt; Dates.monthname(t;locale=\u0026#34;french\u0026#34;) \u0026#34;janvier\u0026#34; julia\u0026gt; Dates.monthabbr(t;locale=\u0026#34;french\u0026#34;) \u0026#34;janv\u0026#34; 由于没有加载日期的缩写版本，试图使用函数 dayabbr 会出错。\njulia\u0026gt; Dates.dayabbr(t;locale=\u0026#34;french\u0026#34;) ERROR: BoundsError: attempt to access 1-element Array{String,1} at index [5] Stacktrace: [...] 时间类型-周期算术 在使用任何语言/日期框架时，熟悉如何处理日期-周期算术是一个很好的做法，因为有一些棘手的问题需要处理（尽管对于日-精度类型来说要少得多）。\nDates 模块的方法试图遵循简单的原则，即在做 Period 算术时尽量少改。这种方法也常被称为历法算术，或者说如果有人在对话中问你同样的计算方法，你可能会猜到。为什么要大惊小怪呢？我们举个经典的例子：把2014年1月31日加1个月。答案是什么？Javascript 会说3月3日（假设31天）。PHP 会说3月2日（假设30天）。事实上，没有正确的答案。在 Dates 模块中，它给出的结果是2月28日。它是如何计算出来的呢？我喜欢想到赌场里经典的 7-7-7 赌博游戏。\n现在只要想象一下，老虎机不是 7-7-7，而是年-月-日，或者在我们的例子中，2014-01-31。当你要求在这个日期的基础上增加1个月的时候，月份槽就会递增，所以现在我们有 2014-02-31。然后检查日号是否大于新月份的最后有效日，如果大于（如上例），则日号向下调整到最后有效日（28）。这种方法的后果是什么呢？继续在我们的日期上再加一个月，2014-02-28 + Month(1) == 2014-03-28。什么？你是在期待3月的最后一天吗？不对，对不起，记得 7-7-7 的档期。尽可能少的槽位要改变，所以我们先把月份槽位递增1，2014-03-28，轰，我们就完成了，因为这是一个有效的日期。另一方面，如果我们要在原来的日期 2014-01-31 的基础上增加2个月，那么我们最终的结果是 2014-03-31，正如预期的那样。这种方法的另一个后果是，当强行进行特定的排序时，关联性会有所损失（即以不同的顺序添加东西会导致不同的结果）。比如说：\njulia\u0026gt; (Date(2014,1,29)+Dates.Day(1)) + Dates.Month(1) 2014-02-28 julia\u0026gt; (Date(2014,1,29)+Dates.Month(1)) + Dates.Day(1) 2014-03-01 那是怎么回事呢？在第一行中，我们在1月29日的基础上加1天，结果是 2014-01-30；然后再加1个月，于是得到 2014-02-30，再往下调整为 2014-02-28。在第二个例子中，我们先加1个月，我们得到 2014-02-29，再往下调整为 2014-02-28，然后再加1天，结果是 2014-03-01。在这种情况下，有一个设计原则是有帮助的，那就是在存在多个 Periods 的情况下，操作将按照 Periods 的类型来排序，而不是按照它们的值或位置顺序来排序；这意味着总是先加 Year，然后加 Month，再加 Week 等。因此，以下确实会导致关联性并正好有用:\njulia\u0026gt; Date(2014,1,29) + Dates.Day(1) + Dates.Month(1) 2014-03-01 julia\u0026gt; Date(2014,1,29) + Dates.Month(1) + Dates.Day(1) 2014-03-01 棘手吗？也许吧。一个无辜的 Dates 用户该怎么做？最重要的是要注意，当处理月份时，明确地强制执行某种关联性，可能会导致一些意想不到的结果，但除此之外，一切都应该按照预期工作。值得庆幸的是，在 UT 中处理时间时，日期-周期算术中的奇特情况几乎就是这样了（避免了处理夏令时、闰秒等的 \u0026ldquo;乐趣\u0026rdquo;）。\n作为奖励，所有的周期算术对象都可以直接与范围一起工作。\njulia\u0026gt; dr = Date(2014,1,29):Day(1):Date(2014,2,3) Date(\u0026#34;2014-01-29\u0026#34;):Day(1):Date(\u0026#34;2014-02-03\u0026#34;) julia\u0026gt; collect(dr) 6-element Array{Date,1}: 2014-01-29 2014-01-30 2014-01-31 2014-02-01 2014-02-02 2014-02-03 julia\u0026gt; dr = Date(2014,1,29):Dates.Month(1):Date(2014,07,29) Date(\u0026#34;2014-01-29\u0026#34;):Month(1):Date(\u0026#34;2014-07-29\u0026#34;) julia\u0026gt; collect(dr) 7-element Array{Date,1}: 2014-01-29 2014-02-28 2014-03-29 2014-04-29 2014-05-29 2014-06-29 2014-07-29 for i in Date(\u0026quot;2020-08-01\u0026quot;):Day(1):Date(\u0026quot;2020-08-09\u0026quot;) println(i) end 2020-08-01 2020-08-02 2020-08-03 2020-08-04 2020-08-05 2020-08-06 2020-08-07 2020-08-08 2020-08-09 调整器函数 尽管日期-周期算术很方便，但经常需要在日期上进行的计算具有日历或时间的性质，而不是固定的周期数。节日就是一个很好的例子，大多数都遵循这样的规则：\u0026ldquo;纪念日 = 五月的最后一个星期一\u0026rdquo;，或者 \u0026ldquo;感恩节 = 十一月的第四个星期四\u0026rdquo;。这类时间表达式处理的是相对于日历的规则，比如本月的第一天或最后一天，下周二，或第一个和第三个星期三等。\nDates 模块通过几个方便的方法提供了调整器 API，这些方法有助于简单、简洁地表达时间规则。第一组调整器方法处理周、月、季度和年的首尾。它们每个方法都接收一个单一的 TimeType 作为输入，并返回或调整到相对于输入的所需时期的第一个或最后一个。\njulia\u0026gt; Dates.firstdayofweek(Date(2014,7,16)) # Adjusts the input to the Monday of the input\u0026#39;s week 2014-07-14 julia\u0026gt; Dates.lastdayofmonth(Date(2014,7,16)) # Adjusts to the last day of the input\u0026#39;s month 2014-07-31 julia\u0026gt; Dates.lastdayofquarter(Date(2014,7,16)) # Adjusts to the last day of the input\u0026#39;s quarter 2014-09-30 接下来的两个高阶方法 tonext 和 toprev，通过将一个 DateFunction 和一个起始 TimeType 作为第一个参数来概括处理时间表达式。DateFunction 只是一个函数，通常是匿名的，它接受一个单一的 TimeType 作为输入，并返回一个 Bool，true 表示满足调整标准。例如:\njulia\u0026gt; istuesday = x-\u0026gt;Dates.dayofweek(x) == Dates.Tuesday; # Returns true if the day of the week of x is Tuesday julia\u0026gt; Dates.tonext(istuesday, Date(2014,7,13)) # 2014-07-13 is a Sunday 2014-07-15 julia\u0026gt; Dates.tonext(Date(2014,7,13), Dates.Tuesday) # Convenience method provided for day of the week adjustments 2014-07-15 这对于更复杂的时间表达式的 do-block 语法是很有用的。\njulia\u0026gt; Dates.tonext(Date(2014,7,13)) do x # Return true on the 4th Thursday of November (Thanksgiving) Dates.dayofweek(x) == Dates.Thursday \u0026amp;\u0026amp; Dates.dayofweekofmonth(x) == 4 \u0026amp;\u0026amp; Dates.month(x) == Dates.November end 2014-11-27 Base.filter 方法可以用来获取指定范围内的所有有效日期/时刻。\n# 匹兹堡街道清洁; 从 4月到11月的每第二个周二 # 日期范围从 2014-01-01 到 2015-01-01 julia\u0026gt; dr = Dates.Date(2014):Day(1):Dates.Date(2015); julia\u0026gt; filter(dr) do x Dates.dayofweek(x) == Dates.Tue \u0026amp;\u0026amp; Dates.April \u0026lt;= Dates.month(x) \u0026lt;= Dates.Nov \u0026amp;\u0026amp; Dates.dayofweekofmonth(x) == 2 end 8-element Array{Date,1}: 2014-04-08 2014-05-13 2014-06-10 2014-07-08 2014-08-12 2014-09-09 2014-10-14 2014-11-11 在 Raku 中上面的代码可以写成:\nlazy my @dates = Date.new('2014-01-01') ... Date.new('2015-01-01'); .say for @dates.grep: -\u0026gt; $d { $d.day-of-week == 2 \u0026amp;\u0026amp; 4 \u0026lt;= $d.month \u0026lt;= 11 \u0026amp;\u0026amp; $d.weekday-of-month == 2 } 其他的例子和测试可以在 stdlib/Dates/test/adjusters.jl 中找到。\n"},"name":"Julia 中的日期和时间","published":"2020-08-04T00:00:00+08:00","summary":"Dates in Julia","type":"entry","url":"https://ohmyweekly.github.io/notes/2020-08-04-dates-in-julia/"},{"content":{"html":"\u003ch2 id=\"语法\"\u003e语法\u003c/h2\u003e\n\u003ch3 id=\"数值字面量系数\"\u003e数值字面量系数\u003c/h3\u003e\n\u003cp\u003e在标识符或圆括号前面直接放一个数字, 例如 \u003ccode\u003e2x\u003c/code\u003e 或 \u003ccode\u003e2(x+y)\u003c/code\u003e, 会被认为是把标识符和它前面的数字相乘。这样写多项式就很方便了。\u003c/p\u003e\n\u003ch3 id=\"向量化的点号运算符\"\u003e向量化的点号运算符\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\n\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e.+\u003c/code\u003e 类似于 Raku 中的 \u003ccode\u003e»+»\u003c/code\u003e 超运算符:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e[1,2,3] »+» 3\n[4 5 6]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e但是 Julia 的 \u003ccode\u003eVectorized \u0026quot;dot\u0026quot;\u003c/code\u003e 语法没有 Raku 的超运算符语法清晰。\u003c/p\u003e\n\u003cp\u003e类似的例子还有:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"n\"\u003esin\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e# 0.479425538604203\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e0.5\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.5\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"n\"\u003esin\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e0.479425538604203\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e0.8414709848078965\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e0.9974949866040544\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mf\"\u003e4.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e5.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e6.0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003epi\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e13.42477796076938\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e17.42477796076938\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e21.42477796076938\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003epi\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e15.566370614359172\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e18.566370614359172\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e21.566370614359172\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e19.0\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e26.0\u003c/span\u003e\n \u003cspan class=\"mf\"\u003e33.0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e等价的 Raku 写法为:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003esub f(\\x, \\y) { 3*x + 4*y};\n\nmy \\A = [1.0, 2.0, 3.0];\nmy \\B = [4.0, 5.0, 6.0];\n\nA».\u0026amp;f(pi)\n[15.566370614359172 18.566370614359172 21.566370614359172]\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"链式比较\"\u003e链式比较\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku 同样支持这种链式比较。\u003c/p\u003e\n\u003ch3 id=\"虚数\"\u003e虚数\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"n\"\u003ereal\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"nb\"\u003eim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e         \u003cspan class=\"c\"\u003e# 1\u003c/span\u003e\n\u003cspan class=\"n\"\u003eimag\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"nb\"\u003eim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e         \u003cspan class=\"c\"\u003e# 2\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"nb\"\u003eim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"nb\"\u003eim\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e# 5 + 0im\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e(1 + 2i).re         # 1\n(1 + 2i).im         # 2\n(1 + 2i) * (1 - 2i) # 5+0i\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"命名参数\"\u003e命名参数\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003efunction\u003c/span\u003e \u003cspan class=\"n\"\u003eplot\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"n\"\u003estyle\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003ed\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ecolor\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eb\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003ec\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n    \u003cspan class=\"c\"\u003e###\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eplot\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003eplot\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ewidth\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"函数组合\"\u003e函数组合\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003e∘\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e# 3.0\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efirst\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003e∘\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003e∘\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003euppercase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003eu\u003c/span\u003e\u003cspan class=\"s\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003ec\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003en\u003c/span\u003e\u003cspan class=\"s\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003ec\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003em\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003eu\u003c/span\u003e\u003cspan class=\"s\"\u003en\u003c/span\u003e\u003cspan class=\"s\"\u003ec\u003c/span\u003e\u003cspan class=\"s\"\u003et\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003en\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"s\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003et\u003c/span\u003e\u003cspan class=\"s\"\u003eh\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eChar\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n \u003cspan class=\"sc\"\u003e\u0026#39;U\u0026#39;\u003c/span\u003e\n \u003cspan class=\"sc\"\u003e\u0026#39;N\u0026#39;\u003c/span\u003e\n \u003cspan class=\"sc\"\u003e\u0026#39;E\u0026#39;\u003c/span\u003e\n \u003cspan class=\"sc\"\u003e\u0026#39;S\u0026#39;\u003c/span\u003e\n \u003cspan class=\"sc\"\u003e\u0026#39;E\u0026#39;\u003c/span\u003e\n \u003cspan class=\"sc\"\u003e\u0026#39;S\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"piping\"\u003ePiping\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"c\"\u003e# 7.416198487095663\u003c/span\u003e\n\n\u003cspan class=\"c\"\u003e# 等价于\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003esqrt\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003e∘\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c\"\u003e# 7.416198487095663\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"广播和管道一起使用\"\u003e广播和管道一起使用\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003et\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003et\u003c/span\u003e\u003cspan class=\"s\"\u003er\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003en\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003euppercase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ereverse\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etitlecase\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eelement\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n  \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eA\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003et\u003c/span\u003e\u003cspan class=\"s\"\u003es\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n  \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003eO\u003c/span\u003e\u003cspan class=\"s\"\u003ef\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\n \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"组合类型\"\u003e组合类型\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e不可变组合类型\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebaz\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\n    \u003cspan class=\"n\"\u003equx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003er\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"s\"\u003eu\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003en\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003etypeof\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e# Foo\u003c/span\u003e\n\u003cspan class=\"n\"\u003etypeof\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e# DataType\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e     \u003cspan class=\"c\"\u003e# rakulang\u003c/span\u003e\n\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e     \u003cspan class=\"c\"\u003e# 1.5\u003c/span\u003e\n\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"c\"\u003e# ERROR: setfield! immutable struct of type Foo cannot be changed\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e可变组合类型\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003emutable\u003c/span\u003e \u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eBar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ebaz\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003equx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eBar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003er\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"s\"\u003eu\u003c/span\u003e\u003cspan class=\"s\"\u003ed\u003c/span\u003e\u003cspan class=\"s\"\u003eo\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e6.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebaz\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003cspan class=\"n\"\u003ebar\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003equx\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"联合类型\"\u003e联合类型\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"n\"\u003eIntOrString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eUnion\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003eAbstractString\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIntOrString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e          \u003cspan class=\"c\"\u003e# 1\u003c/span\u003e\n\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003er\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"s\"\u003eu\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003en\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIntOrString\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"c\"\u003e# rakulang\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"参数化类型\"\u003e参数化类型\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e参数化组合类型\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"c\"\u003e# 1.0\u003c/span\u003e\n\u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"c\"\u003e# 2.0\u003c/span\u003e\n\n\n\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"n\"\u003eCircle\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eT\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n    \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"k\"\u003eend\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCircle\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003eAbstractString\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e6.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s\"\u003er\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"s\"\u003eu\u003c/span\u003e\u003cspan class=\"s\"\u003el\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"s\"\u003en\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"c\"\u003e# 6.0\u003c/span\u003e\n\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"c\"\u003e# rakulang\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"多重分派\"\u003e多重分派\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-julia\" data-lang=\"julia\"\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003emethods\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"c\"\u003e# 2 methods for generic function \u0026#34;f\u0026#34;:\u003c/span\u003e\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eFloat64\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kp\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eMain\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003eat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003eREPL\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e33\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kt\"\u003eNumber\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"kp\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eMain\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003eat\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e \u003cspan class=\"n\"\u003eREPL\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e34\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mf\"\u003e2.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c\"\u003e# 7\u003c/span\u003e\n\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"c\"\u003e# 1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"语法 数值字面量系数 在标识符或圆括号前面直接放一个数字, 例如 2x 或 2(x+y), 会被认为是把标识符和它前面的数字相乘。这样写多项式就很方便了。\n向量化的点号运算符 [1,2,3] .+ 3 3-element Array{Int64,1}: 4 5 6 .+ 类似于 Raku 中的 »+» 超运算符:\n[1,2,3] »+» 3 [4 5 6] 但是 Julia 的 Vectorized \u0026quot;dot\u0026quot; 语法没有 Raku 的超运算符语法清晰。\n类似的例子还有:\nsin(0.5) # 0.479425538604203 A = [0.5, 1.0, 1.5] sin.(A) 3-element Array{Float64,1}: 0.479425538604203 0.8414709848078965 0.9974949866040544 f(x,y) = 3x + 4y; A = [1.0, 2.0, 3.0]; B = [4.0, 5.0, 6.0]; f.(pi, A) 3-element Array{Float64,1}: 13.42477796076938 17.42477796076938 21.42477796076938 f.(A, pi) 3-element Array{Float64,1}: 15.566370614359172 18.566370614359172 21.566370614359172 f.(A,B) 3-element Array{Float64,1}: 19.0 26.0 33.0 等价的 Raku 写法为:\nsub f(\\x, \\y) { 3*x + 4*y}; my \\A = [1.0, 2.0, 3.0]; my \\B = [4.0, 5.0, 6.0]; A».\u0026amp;f(pi) [15.566370614359172 18.566370614359172 21.566370614359172] 链式比较 1 \u0026lt; 2 \u0026lt;= 2 \u0026lt; 3 == 3 \u0026gt; 2 \u0026gt;= 1 == 1 \u0026lt; 3 != 5 true Raku 同样支持这种链式比较。\n虚数 real(1 + 2im) # 1 imag(1 + 2im) # 2 (1 + 2im) * (1 - 2im) # 5 + 0im (1 + 2i).re # 1 (1 + 2i).im # 2 (1 + 2i) * (1 - 2i) # 5+0i 命名参数 function plot(x, y; style=\u0026#34;solid\u0026#34;, width=1, color=\u0026#34;black\u0026#34;) ### end plot(x, y, width=2) plot(x, y, :width =\u0026gt; 2) 函数组合 (sqrt ∘ +)(3,6) # 3.0 map(first ∘ reverse ∘ uppercase, split(\u0026#34;youcancomposefunctionslikethis\u0026#34;)) 6-element Array{Char,1}: \u0026#39;U\u0026#39; \u0026#39;N\u0026#39; \u0026#39;E\u0026#39; \u0026#39;S\u0026#39; \u0026#39;E\u0026#39; \u0026#39;S\u0026#39; Piping 1:10 |\u0026gt; sum |\u0026gt; sqrt # 7.416198487095663 # 等价于 (sqrt ∘ sum)(1:10) # 7.416198487095663 广播和管道一起使用 [\u0026#34;a\u0026#34;, \u0026#34;list\u0026#34;, \u0026#34;of\u0026#34;, \u0026#34;strings\u0026#34;] .|\u0026gt; [uppercase, reverse, titlecase, length] 4-element Array{Any,1}: \u0026#34;A\u0026#34; \u0026#34;tsil\u0026#34; \u0026#34;Of\u0026#34; 7 组合类型  不可变组合类型  struct Foo bar baz::Int qux::Float64 end foo = Foo(\u0026#34;rakulang\u0026#34;, 6, 1.5) typeof(foo) # Foo typeof(Foo) # DataType foo.bar # rakulang foo.qux # 1.5 foo.qux = 1 # ERROR: setfield! immutable struct of type Foo cannot be changed  可变组合类型  mutable struct Bar baz qux::Float64 end bar = Bar(\u0026#34;rakudo\u0026#34;, 6.0) bar.baz = 1//2 bar.qux = 2.0 联合类型 IntOrString = Union{Int,AbstractString} 1 :: IntOrString # 1 \u0026#34;rakulang\u0026#34; :: IntOrString # rakulang 参数化类型  参数化组合类型  struct Point{T} x::T y::T end point=Point{Float64}(1.0, 2.0) point.x # 1.0 point.y # 2.0 struct Circle{T,U} x::T y::U end c = Circle{Float64,AbstractString}(6.0, \u0026#34;rakulang\u0026#34;) c.x # 6.0 c.y # rakulang 多重分派 f(x::Float64, y::Float64) = 2x + y f(x::Number, y::Number) = 2x - y methods(f) # 2 methods for generic function \u0026#34;f\u0026#34;: [1] f(x::Float64, y::Float64) in Main at REPL[33]:1 [2] f(x::Number, y::Number) in Main at REPL[34]:1 f(2.0, 3.0) # 7 f(2, 3.0) # 1 "},"name":"Julia 语言学习笔记","published":"2020-07-26T00:00:00+08:00","summary":"Learning Julia","type":"entry","url":"https://ohmyweekly.github.io/notes/2020-07-27-learning-julialang/"}],"name":"julia","type":"feed","url":"https://ohmyweekly.github.io/tags/julia/"}
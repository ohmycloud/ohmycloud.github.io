{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003cp\u003eRaku 中的大部分句法结构能归类为项和操作符. 这儿你能找到各种不同类型的项的概览.\u003c/p\u003e\n\u003ch2 id=\"literals\"\u003eLiterals\u003c/h2\u003e\n\u003ch3 id=\"int\"\u003eInt\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e12_300_00\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eDEAD_BEEF\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#十六进制\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eInt 字面量由数字组成, 并且能在数字之间包含下划线. 使用 \u003ccode\u003e:radix\u0026lt;number\u0026gt;\u003c/code\u003e 冒号对儿形式能指定 10 进制外的其它进制.\u003c/p\u003e\n\u003ch3 id=\"rat-有理数\"\u003eRat 有理数\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"mf\"\u003e12.34\u003c/span\u003e\n\u003cspan class=\"mf\"\u003e1_200.345_678\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRat(有理数)字面量由一个点号分割的两部分整数组成. 注意尾部的点号是不允许的, 所以你必须写成 \u003ccode\u003e1.0\u003c/code\u003e 而非 \u003ccode\u003e1.\u003c/code\u003e ( 这个规则很重要, 因为有一个以点号开头的中缀操作符, 例如 \u003ccode\u003e..\u003c/code\u003e 范围操作符 ).\u003c/p\u003e\n\u003ch3 id=\"num-浮点数\"\u003eNum 浮点数\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"mf\"\u003e12.3e-32\u003c/span\u003e\n\u003cspan class=\"mf\"\u003e3e8\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNum(浮点数)字面量由 Rat 或 Int 字面量后面再跟着一个字母 e 和 一个指数(可能为负)组成. \u003ccode\u003e3e8\u003c/code\u003e 使用 值 \u003ccode\u003e3* 10**8\u003c/code\u003e 构建了一个 Num.\u003c/p\u003e\n\u003ch3 id=\"str\"\u003eStr\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea string\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eI\\\u0026#39;m escaped!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI don\u0026#39;t need to be\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\\u0026#34;But I still can be,\\\u0026#34; he said.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"s\"\u003eOther delimiters can be used too!\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字符串字面量常常使用 \u003ccode\u003e'\u003c/code\u003e 或 \u003ccode\u003e\u0026quot;\u003c/code\u003e 创建, 然儿, 字符串在 Raku 中其实是一种强大的子语言.\u003c/p\u003e\n\u003ch3 id=\"regex\"\u003eRegex\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e match some text \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eslurp \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"sr\"\u003e rest \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这两种会产生字面正则。\u003c/p\u003e\n\u003ch3 id=\"pair\"\u003ePair\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eidentifier\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:!\u003c/span\u003e\u003cspan class=\"s\"\u003eidentifier\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003evalue1 value2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$value\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eval1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eval2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003ekey1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eval1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003ekey2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003evalue2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;}\u003c/span\u003e\n\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$item\u003c/span\u003e\n\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\n\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\n\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;callable\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePair 对象的创建要么使用 \u003ccode\u003einfix:«=\u0026gt;»\u003c/code\u003e (它会自动括起左边, 如果左边是标识符的话), 要么使用各种冒号对儿形式.  那些总是以一个冒号开头的创建形式, 冒号后面要么跟着一个标识符, 要么跟着一个已经存在的变量(不带符号的变量名作为 pair 的键, 变量的值作为 pair 的键值).\u003c/p\u003e\n\u003cp\u003e在标识符形式的冒号对儿中, 可选的值可以是任意环缀. 如果没有环缀, 那它的值就是 \u003ccode\u003eBool::True\u003c/code\u003e. \u003ccode\u003e!:identifier\u003c/code\u003e 形式的值是 \u003ccode\u003eBool::False\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e如果冒号对儿在参数列表中, 所有的冒号对儿都会作为命名参数, 但是 \u003ccode\u003e'quoted string' =\u0026gt; $value\u003c/code\u003e 除外.\u003c/p\u003e\n\u003ch3 id=\"term-\"\u003eterm *\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e*\u003c/code\u003e 会创建一个类型为 Whatever 的对象. 详情查看 \u003ca href=\"http://doc.raku.org/type/Whatever\"\u003eWhatever\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"identifier-terms\"\u003eIdentifier terms\u003c/h2\u003e\n\u003cp\u003eRaku中有内建的标识符项, 列出如下. 此外, 使用该语法能添加新的标识符项.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eterm\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003efourty-two\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efourty-two\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者作为常量:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003econstant\u003c/span\u003e \u003cspan class=\"no\"\u003eforty-two\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efourty-two\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"self\"\u003eself\u003c/h3\u003e\n\u003cp\u003e在方法中, self 指向方法的调用者( 例如, 方法被调用的对象). 如果把它用在没有意义的上下文中, 会抛出一个 \u003ccode\u003e X::Syntax::NoSelf\u003c/code\u003e 类型的编译时错误.\u003c/p\u003e\n\u003ch3 id=\"now\"\u003enow\u003c/h3\u003e\n\u003cp\u003e返回一个代表当前时间的实例对象.\u003c/p\u003e\n\u003ch3 id=\"rand\"\u003erand\u003c/h3\u003e\n\u003cp\u003e返回一个范围为 \u003ccode\u003e0..^1\u003c/code\u003e 的伪随机浮点数.\u003c/p\u003e\n\u003ch3 id=\"pi\"\u003epi\u003c/h3\u003e\n\u003cp\u003e返回数值 pi, 例如, 圆的周长和半径之间的比率.\u003c/p\u003e\n\u003ch3 id=\"e\"\u003ee\u003c/h3\u003e\n\u003cp\u003e返回欧拉数值.\u003c/p\u003e\n\u003ch3 id=\"i\"\u003ei\u003c/h3\u003e\n\u003cp\u003e返回复数的虚部.\u003c/p\u003e\n","text":"Raku 中的大部分句法结构能归类为项和操作符. 这儿你能找到各种不同类型的项的概览.\nLiterals Int 42 12_300_00 :16\u0026lt;DEAD_BEEF\u0026gt; #十六进制 Int 字面量由数字组成, 并且能在数字之间包含下划线. 使用 :radix\u0026lt;number\u0026gt; 冒号对儿形式能指定 10 进制外的其它进制.\nRat 有理数 12.34 1_200.345_678 Rat(有理数)字面量由一个点号分割的两部分整数组成. 注意尾部的点号是不允许的, 所以你必须写成 1.0 而非 1. ( 这个规则很重要, 因为有一个以点号开头的中缀操作符, 例如 .. 范围操作符 ).\nNum 浮点数 12.3e-32 3e8 Num(浮点数)字面量由 Rat 或 Int 字面量后面再跟着一个字母 e 和 一个指数(可能为负)组成. 3e8 使用 值 3* 10**8 构建了一个 Num.\nStr \u0026#39;a string\u0026#39;\u0026#39;I\\\u0026#39;m escaped!\u0026#39; \u0026#34;I don\u0026#39;t need to be\u0026#34; \u0026#34;\\\u0026#34;But I still can be,\\\u0026#34; he said.\u0026#34; q|Other delimiters can be used too! 字符串字面量常常使用 ' 或 \u0026quot; 创建, 然儿, 字符串在 Raku 中其实是一种强大的子语言.\nRegex /match some text / rx/slurp \\srest (.*)$/ 这两种会产生字面正则。\nPair a =\u0026gt; 1 \u0026#39;a\u0026#39; =\u0026gt; \u0026#39;b\u0026#39; :identifier :!identifier :identifier\u0026lt;value\u0026gt; :identifier\u0026lt;value1 value2\u0026gt; :identifier($value) :identifier[\u0026#39;val1\u0026#39;, \u0026#39;val2\u0026#39;] :identifier{key1 =\u0026gt; \u0026#39;val1\u0026#39;, key2 =\u0026gt; \u0026#39;value2\u0026#39;} :$item :@array :%hash :\u0026amp;callable Pair 对象的创建要么使用 infix:«=\u0026gt;» (它会自动括起左边, 如果左边是标识符的话), 要么使用各种冒号对儿形式. 那些总是以一个冒号开头的创建形式, 冒号后面要么跟着一个标识符, 要么跟着一个已经存在的变量(不带符号的变量名作为 pair 的键, 变量的值作为 pair 的键值).\n在标识符形式的冒号对儿中, 可选的值可以是任意环缀. 如果没有环缀, 那它的值就是 Bool::True. !:identifier 形式的值是 Bool::False.\n如果冒号对儿在参数列表中, 所有的冒号对儿都会作为命名参数, 但是 'quoted string' =\u0026gt; $value 除外.\nterm * * 会创建一个类型为 Whatever 的对象. 详情查看 Whatever.\nIdentifier terms Raku中有内建的标识符项, 列出如下. 此外, 使用该语法能添加新的标识符项.\nsub term:\u0026lt;fourty-two\u0026gt; { 42 }; say fourty-two 或者作为常量:\nconstant forty-two = 42; say fourty-two self 在方法中, self 指向方法的调用者( 例如, 方法被调用的对象). 如果把它用在没有意义的上下文中, 会抛出一个  X::Syntax::NoSelf 类型的编译时错误.\nnow 返回一个代表当前时间的实例对象.\nrand 返回一个范围为 0..^1 的伪随机浮点数.\npi 返回数值 pi, 例如, 圆的周长和半径之间的比率.\ne 返回欧拉数值.\ni 返回复数的虚部.\n"},"name":"Raku 中的项","published":"2021-07-11T00:00:00+08:00","summary":"Terms in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-11-21-terms-in-raku/"}],"name":"term","type":"feed","url":"https://ohmyweekly.github.io/tags/term/"}
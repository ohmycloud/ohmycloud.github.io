<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.85.0">Hugo</generator><title type="html"><![CDATA[term on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/term/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/term/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/term/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/term/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-07-11T22:08:29+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/term/</id>
    
        
        <entry>
            <title type="html"><![CDATA[Raku 中的项]]></title>
            <link href="https://ohmyweekly.github.io/notes/2015-11-21-terms-in-raku/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2015-11-21-terms-in-raku/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-07-11T00:00:00+08:00</published>
            <updated>2021-07-11T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Terms in Raku</blockquote><p>Raku 中的大部分句法结构能归类为项和操作符. 这儿你能找到各种不同类型的项的概览.</p>
<h2 id="literals">Literals</h2>
<h3 id="int">Int</h3>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="mi">42</span>
<span class="mi">12_300_00</span>
<span class="p">:</span><span class="mi">16</span><span class="p">&lt;</span><span class="s">DEAD_BEEF</span><span class="p">&gt;</span>    <span class="c1">#十六进制</span>
</code></pre></div><p>Int 字面量由数字组成, 并且能在数字之间包含下划线. 使用 <code>:radix&lt;number&gt;</code> 冒号对儿形式能指定 10 进制外的其它进制.</p>
<h3 id="rat-有理数">Rat 有理数</h3>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="mf">12.34</span>
<span class="mf">1_200.345_678</span>
</code></pre></div><p>Rat(有理数)字面量由一个点号分割的两部分整数组成. 注意尾部的点号是不允许的, 所以你必须写成 <code>1.0</code> 而非 <code>1.</code> ( 这个规则很重要, 因为有一个以点号开头的中缀操作符, 例如 <code>..</code> 范围操作符 ).</p>
<h3 id="num-浮点数">Num 浮点数</h3>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="mf">12.3e-32</span>
<span class="mf">3e8</span>
</code></pre></div><p>Num(浮点数)字面量由 Rat 或 Int 字面量后面再跟着一个字母 e 和 一个指数(可能为负)组成. <code>3e8</code> 使用 值 <code>3* 10**8</code> 构建了一个 Num.</p>
<h3 id="str">Str</h3>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="p">&#39;</span><span class="s1">a string</span><span class="p">&#39;&#39;</span><span class="s1">I\&#39;m escaped!</span><span class="p">&#39;</span>
<span class="p">&#34;</span><span class="s2">I don&#39;t need to be</span><span class="p">&#34;</span>
<span class="p">&#34;</span><span class="s2">\&#34;But I still can be,\&#34; he said.</span><span class="p">&#34;</span>
<span class="k">q</span><span class="p">|</span><span class="s">Other delimiters can be used too!</span>
</code></pre></div><p>字符串字面量常常使用 <code>'</code> 或 <code>&quot;</code> 创建, 然儿, 字符串在 Raku 中其实是一种强大的子语言.</p>
<h3 id="regex">Regex</h3>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="p">/</span><span class="sr"> match some text </span><span class="p">/</span>
<span class="k">rx</span><span class="p">/</span><span class="sr">slurp </span><span class="se">\s</span><span class="sr"> rest </span><span class="p">(</span><span class="ni">.</span><span class="o">*</span><span class="p">)</span><span class="sr"> </span><span class="ni">$</span><span class="p">/</span>
</code></pre></div><p>这两种会产生字面正则。</p>
<h3 id="pair">Pair</h3>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="s">a</span> <span class="o">=&gt;</span> <span class="mi">1</span>
<span class="p">&#39;</span><span class="s1">a</span><span class="p">&#39;</span> <span class="o">=&gt;</span> <span class="p">&#39;</span><span class="s1">b</span><span class="p">&#39;</span>
<span class="p">:</span><span class="s">identifier</span>
<span class="p">:!</span><span class="s">identifier</span>
<span class="p">:</span><span class="s">identifier</span><span class="p">&lt;</span><span class="s">value</span><span class="p">&gt;</span>
<span class="p">:</span><span class="s">identifier</span><span class="p">&lt;</span><span class="s">value1 value2</span><span class="p">&gt;</span>
<span class="p">:</span><span class="s">identifier</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span>
<span class="p">:</span><span class="s">identifier</span><span class="p">[&#39;</span><span class="s1">val1</span><span class="p">&#39;</span><span class="o">,</span> <span class="p">&#39;</span><span class="s1">val2</span><span class="p">&#39;]</span>
<span class="p">:</span><span class="s">identifier</span><span class="p">{</span><span class="s">key1</span> <span class="o">=&gt;</span> <span class="p">&#39;</span><span class="s1">val1</span><span class="p">&#39;</span>, <span class="s">key2</span> <span class="o">=&gt;</span> <span class="p">&#39;</span><span class="s1">value2</span><span class="p">&#39;}</span>
<span class="o">:</span><span class="nv">$item</span>
<span class="o">:</span><span class="nv">@array</span>
<span class="o">:</span><span class="nv">%hash</span>
<span class="o">:</span><span class="nv">&amp;callable</span>
</code></pre></div><p>Pair 对象的创建要么使用 <code>infix:«=&gt;»</code> (它会自动括起左边, 如果左边是标识符的话), 要么使用各种冒号对儿形式.  那些总是以一个冒号开头的创建形式, 冒号后面要么跟着一个标识符, 要么跟着一个已经存在的变量(不带符号的变量名作为 pair 的键, 变量的值作为 pair 的键值).</p>
<p>在标识符形式的冒号对儿中, 可选的值可以是任意环缀. 如果没有环缀, 那它的值就是 <code>Bool::True</code>. <code>!:identifier</code> 形式的值是 <code>Bool::False</code>.</p>
<p>如果冒号对儿在参数列表中, 所有的冒号对儿都会作为命名参数, 但是 <code>'quoted string' =&gt; $value</code> 除外.</p>
<h3 id="term-">term *</h3>
<p><code>*</code> 会创建一个类型为 Whatever 的对象. 详情查看 <a href="http://doc.raku.org/type/Whatever">Whatever</a>.</p>
<h2 id="identifier-terms">Identifier terms</h2>
<p>Raku中有内建的标识符项, 列出如下. 此外, 使用该语法能添加新的标识符项.</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">sub</span> <span class="nb">term</span><span class="o">:</span><span class="p">&lt;</span><span class="s">fourty-two</span><span class="p">&gt;</span> <span class="p">{</span> <span class="mi">42</span> <span class="p">};</span>
<span class="nb">say</span> <span class="n">fourty-two</span>
</code></pre></div><p>或者作为常量:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">constant</span> <span class="no">forty-two</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
<span class="nb">say</span> <span class="n">fourty-two</span>
</code></pre></div><h3 id="self">self</h3>
<p>在方法中, self 指向方法的调用者( 例如, 方法被调用的对象). 如果把它用在没有意义的上下文中, 会抛出一个 <code> X::Syntax::NoSelf</code> 类型的编译时错误.</p>
<h3 id="now">now</h3>
<p>返回一个代表当前时间的实例对象.</p>
<h3 id="rand">rand</h3>
<p>返回一个范围为 <code>0..^1</code> 的伪随机浮点数.</p>
<h3 id="pi">pi</h3>
<p>返回数值 pi, 例如, 圆的周长和半径之间的比率.</p>
<h3 id="e">e</h3>
<p>返回欧拉数值.</p>
<h3 id="i">i</h3>
<p>返回复数的虚部.</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/rakulang" term="rakulang" label="rakulang" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/term" term="term" label="term" />
                            
                        
                    
                
            
        </entry>
    
</feed>

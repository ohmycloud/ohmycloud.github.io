<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.79.0">Hugo</generator><title type="html"><![CDATA[Catalogs on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/catalogs/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/catalogs/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/catalogs/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/catalogs/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2020-12-23T23:14:52+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/catalogs/</id>
    
        
        <entry>
            <title type="html"><![CDATA[Catalogs]]></title>
            <link href="https://ohmyweekly.github.io/notes/2020-08-22-catalogs/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://ohmyweekly.github.io/notes/2020-08-22-alter-statements/?utm_source=atom_feed" rel="related" type="text/html" title="Alter 语句" />
                <link href="https://ohmyweekly.github.io/notes/2020-08-22-create-statements/?utm_source=atom_feed" rel="related" type="text/html" title="Create 语句" />
                <link href="https://ohmyweekly.github.io/notes/2020-08-22-drop-statements/?utm_source=atom_feed" rel="related" type="text/html" title="Drop 语句" />
                <link href="https://ohmyweekly.github.io/notes/2020-08-22-explan-statements/?utm_source=atom_feed" rel="related" type="text/html" title="Explan 语句" />
                <link href="https://ohmyweekly.github.io/notes/2020-08-22-insert-statements/?utm_source=atom_feed" rel="related" type="text/html" title="Insert 语句" />
            
                <id>https://ohmyweekly.github.io/notes/2020-08-22-catalogs/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2020-08-22T00:00:00+08:00</published>
            <updated>2020-08-22T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Catalogs</blockquote><h1 id="catalogs">Catalogs</h1>
<p>目录提供了元数据，如数据库、表、分区、视图以及访问数据库或其他外部系统中存储的数据所需的功能和信息。</p>
<p>数据处理中最关键的一个方面是管理元数据。它可能是短暂的元数据，如临时表，或针对表环境注册的 UDF。或者是永久性的元数据，比如 Hive Metastore 中的元数据。目录为管理元数据提供了统一的 API，并使其可以从表 API 和 SQL 查询中访问。</p>
<p>Catalog 使用户能够引用数据系统中现有的元数据，并自动将它们映射到 Flink 的相应元数据中。例如，Flink 可以将 JDBC 表自动映射到 Flink 表，用户不必在 Flink 中手动重新编写 DDL。Catalog 大大简化了用户现有系统上手 Flink 所需的步骤，大大提升了用户体验。</p>
<h2 id="catalog-类型">Catalog 类型</h2>
<h3 id="genericinmemorycatalog">GenericInMemoryCatalog</h3>
<p>GenericInMemoryCatalog 是一个目录的内存实现。所有对象只在会话的生命周期内可用。</p>
<h3 id="jdbccatalog">JdbcCatalog</h3>
<p>JdbcCatalog 使用户能够通过 JDBC 协议将 Flink 与关系型数据库连接起来。PostgresCatalog 是目前 JDBC Catalog 的唯一实现。关于设置目录的更多细节，请参见 <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/connectors/jdbc.html">JdbcCatalog 文档</a>。</p>
<h3 id="hivecatalog">HiveCatalog</h3>
<p>HiveCatalog 有两个目的，一是作为纯 Flink 元数据的持久化存储，二是作为读写现有 Hive 元数据的接口。Flink 的 <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/hive/index.html">Hive 文档</a>提供了设置目录和与现有 Hive 安装接口的完整细节。</p>
<p>警告: Hive Metastore 将所有的元对象名称都存储为小写。这与 GenericInMemoryCatalog 不同，后者是区分大小写的。</p>
<h3 id="用户定义的-catalog">用户定义的 Catalog</h3>
<p>目录是可插拔的，用户可以通过实现 Catalog 接口来开发自定义目录。要在 SQL CLI 中使用自定义目录，用户应该通过实现 CatalogFactory 接口同时开发目录和它对应的目录工厂。</p>
<p>目录工厂定义了一组属性，用于在 SQL CLI 引导时配置目录。该属性集将被传递给发现服务，服务会尝试将属性与 CatalogFactory 匹配，并启动相应的目录实例。</p>
<h2 id="如何创建和注册-flink-table-到目录上">如何创建和注册 Flink Table 到目录上</h2>
<h3 id="使用-sql-ddl">使用 SQL DDL</h3>
<p>用户可以使用 SQL DDL 在 Table API 和 SQL 中创建目录中的表。</p>
<ul>
<li>Flink SQL</li>
</ul>
<pre><code>// the catalog should have been registered via yaml file
Flink SQL&gt; CREATE DATABASE mydb WITH (...);

Flink SQL&gt; CREATE TABLE mytable (name STRING, age INT) WITH (...);

Flink SQL&gt; SHOW TABLES;
mytable
</code></pre><p>详细信息，请查看 <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/sql/create.html">Flink SQL CREATE DDL</a>。</p>
<ul>
<li>Scala</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="k">val</span> <span class="n">tableEnv</span> <span class="k">=</span> <span class="o">...</span>

<span class="c1">// Create a HiveCatalog 
</span><span class="c1"></span><span class="k">val</span> <span class="n">catalog</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">HiveCatalog</span><span class="o">(</span><span class="s">&#34;myhive&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="s">&#34;&lt;path_of_hive_conf&gt;&#34;</span><span class="o">)</span>

<span class="c1">// Register the catalog
</span><span class="c1"></span><span class="n">tableEnv</span><span class="o">.</span><span class="n">registerCatalog</span><span class="o">(</span><span class="s">&#34;myhive&#34;</span><span class="o">,</span> <span class="n">catalog</span><span class="o">)</span>

<span class="c1">// Create a catalog database
</span><span class="c1"></span><span class="n">tableEnv</span><span class="o">.</span><span class="n">executeSql</span><span class="o">(</span><span class="s">&#34;CREATE DATABASE mydb WITH (...)&#34;</span><span class="o">)</span>

<span class="c1">// Create a catalog table
</span><span class="c1"></span><span class="n">tableEnv</span><span class="o">.</span><span class="n">executeSql</span><span class="o">(</span><span class="s">&#34;CREATE TABLE mytable (name STRING, age INT) WITH (...)&#34;</span><span class="o">)</span>

<span class="n">tableEnv</span><span class="o">.</span><span class="n">listTables</span><span class="o">()</span> <span class="c1">// should return the tables in current catalog and database.
</span></code></pre></div><p>For detailed information, please check out Flink SQL CREATE DDL.</p>
<h3 id="使用-java-scala-或-python">使用 Java, Scala 或 Python</h3>
<p>用户可以使用 Java、Scala 或 Python 来编程创建目录表。</p>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="k">import</span> <span class="nn">org.apache.flink.table.api._</span>
<span class="k">import</span> <span class="nn">org.apache.flink.table.catalog._</span>
<span class="k">import</span> <span class="nn">org.apache.flink.table.catalog.hive.HiveCatalog</span>
<span class="k">import</span> <span class="nn">org.apache.flink.table.descriptors.Kafka</span>

<span class="k">val</span> <span class="n">tableEnv</span> <span class="k">=</span> <span class="nc">TableEnvironment</span><span class="o">.</span><span class="n">create</span><span class="o">(</span><span class="nc">EnvironmentSettings</span><span class="o">.</span><span class="n">newInstance</span><span class="o">.</span><span class="n">build</span><span class="o">)</span>

<span class="c1">// Create a HiveCatalog 
</span><span class="c1"></span><span class="k">val</span> <span class="n">catalog</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">HiveCatalog</span><span class="o">(</span><span class="s">&#34;myhive&#34;</span><span class="o">,</span> <span class="kc">null</span><span class="o">,</span> <span class="s">&#34;&lt;path_of_hive_conf&gt;&#34;</span><span class="o">)</span>

<span class="c1">// Register the catalog
</span><span class="c1"></span><span class="n">tableEnv</span><span class="o">.</span><span class="n">registerCatalog</span><span class="o">(</span><span class="s">&#34;myhive&#34;</span><span class="o">,</span> <span class="n">catalog</span><span class="o">)</span>

<span class="c1">// Create a catalog database 
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">createDatabase</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="nc">CatalogDatabaseImpl</span><span class="o">(...))</span>

<span class="c1">// Create a catalog table
</span><span class="c1"></span><span class="k">val</span> <span class="n">schema</span> <span class="k">=</span> <span class="nc">TableSchema</span><span class="o">.</span><span class="n">builder</span><span class="o">()</span>
    <span class="o">.</span><span class="n">field</span><span class="o">(</span><span class="s">&#34;name&#34;</span><span class="o">,</span> <span class="nc">DataTypes</span><span class="o">.</span><span class="nc">STRING</span><span class="o">())</span>
    <span class="o">.</span><span class="n">field</span><span class="o">(</span><span class="s">&#34;age&#34;</span><span class="o">,</span> <span class="nc">DataTypes</span><span class="o">.</span><span class="nc">INT</span><span class="o">())</span>
    <span class="o">.</span><span class="n">build</span><span class="o">()</span>

<span class="n">catalog</span><span class="o">.</span><span class="n">createTable</span><span class="o">(</span>
        <span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> 
        <span class="k">new</span> <span class="nc">CatalogTableImpl</span><span class="o">(</span>
            <span class="n">schema</span><span class="o">,</span>
            <span class="k">new</span> <span class="nc">Kafka</span><span class="o">()</span>
                <span class="o">.</span><span class="n">version</span><span class="o">(</span><span class="s">&#34;0.11&#34;</span><span class="o">)</span>
                <span class="o">....</span>
                <span class="o">.</span><span class="n">startFromEarlist</span><span class="o">()</span>
                <span class="o">.</span><span class="n">toProperties</span><span class="o">(),</span>
            <span class="s">&#34;my comment&#34;</span>
        <span class="o">),</span>
        <span class="kc">false</span>
    <span class="o">)</span>
    
<span class="k">val</span> <span class="n">tables</span> <span class="k">=</span> <span class="n">catalog</span><span class="o">.</span><span class="n">listTables</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">)</span> <span class="c1">// tables should contain &#34;mytable&#34;
</span></code></pre></div><h2 id="catalog-api">Catalog API</h2>
<p>注意：这里只列出了目录程序的 API，用户可以通过 SQL DDL 实现许多相同的功能。用户可以通过 SQL DDL 实现许多相同的功能。详细的 DDL 信息，请参考 <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/sql/create.html">SQL CREATE DDL</a>。</p>
<h3 id="数据库操作">数据库操作</h3>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="c1">// create database
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">createDatabase</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="nc">CatalogDatabaseImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// drop database
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">dropDatabase</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// alter database
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">alterDatabase</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="k">new</span> <span class="nc">CatalogDatabaseImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// get database
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">getDatabase</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">);</span>

<span class="c1">// check if a database exist
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">databaseExists</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">);</span>

<span class="c1">// list databases in a catalog
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">listDatabases</span><span class="o">();</span>
</code></pre></div><h3 id="table-操作">Table 操作</h3>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="c1">// create table
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">createTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogTableImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// drop table
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">dropTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// alter table
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">alterTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogTableImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// rename table
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">renameTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="s">&#34;my_new_table&#34;</span><span class="o">);</span>

<span class="c1">// get table
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">getTable</span><span class="o">(</span><span class="s">&#34;mytable&#34;</span><span class="o">);</span>

<span class="c1">// check if a table exist or not
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">tableExists</span><span class="o">(</span><span class="s">&#34;mytable&#34;</span><span class="o">);</span>

<span class="c1">// list tables in a database
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">listTables</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">);</span>
</code></pre></div><h3 id="视图操作">视图操作</h3>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="c1">// create view
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">createTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;myview&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogViewImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// drop view
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">dropTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;myview&#34;</span><span class="o">),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// alter view
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">alterTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogViewImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// rename view
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">renameTable</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;myview&#34;</span><span class="o">),</span> <span class="s">&#34;my_new_view&#34;</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// get view
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">getTable</span><span class="o">(</span><span class="s">&#34;myview&#34;</span><span class="o">);</span>

<span class="c1">// check if a view exist or not
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">tableExists</span><span class="o">(</span><span class="s">&#34;mytable&#34;</span><span class="o">);</span>

<span class="c1">// list views in a database
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">listViews</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">);</span>
</code></pre></div><h3 id="partition-操作">Partition 操作</h3>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="c1">// create view
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">createPartition</span><span class="o">(</span>
    <span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span>
    <span class="k">new</span> <span class="nc">CatalogPartitionSpec</span><span class="o">(...),</span>
    <span class="k">new</span> <span class="nc">CatalogPartitionImpl</span><span class="o">(...),</span>
    <span class="kc">false</span><span class="o">);</span>

<span class="c1">// drop partition
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">dropPartition</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogPartitionSpec</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// alter partition
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">alterPartition</span><span class="o">(</span>
    <span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span>
    <span class="k">new</span> <span class="nc">CatalogPartitionSpec</span><span class="o">(...),</span>
    <span class="k">new</span> <span class="nc">CatalogPartitionImpl</span><span class="o">(...),</span>
    <span class="kc">false</span><span class="o">);</span>

<span class="c1">// get partition
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">getPartition</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogPartitionSpec</span><span class="o">(...));</span>

<span class="c1">// check if a partition exist or not
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">partitionExists</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogPartitionSpec</span><span class="o">(...));</span>

<span class="c1">// list partitions of a table
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">listPartitions</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">));</span>

<span class="c1">// list partitions of a table under a give partition spec
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">listPartitions</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogPartitionSpec</span><span class="o">(...));</span>

<span class="c1">// list partitions of a table by expression filter
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">listPartitionsByFilter</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;mytable&#34;</span><span class="o">),</span> <span class="nc">Arrays</span><span class="o">.</span><span class="n">asList</span><span class="o">(</span><span class="n">epr1</span><span class="o">,</span> <span class="o">...));</span>
</code></pre></div><h3 id="function-操作">Function 操作</h3>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="c1">// create function
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">createFunction</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;myfunc&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogFunctionImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// drop function
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">dropFunction</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;myfunc&#34;</span><span class="o">),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// alter function
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">alterFunction</span><span class="o">(</span><span class="k">new</span> <span class="nc">ObjectPath</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">,</span> <span class="s">&#34;myfunc&#34;</span><span class="o">),</span> <span class="k">new</span> <span class="nc">CatalogFunctionImpl</span><span class="o">(...),</span> <span class="kc">false</span><span class="o">);</span>

<span class="c1">// get function
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">getFunction</span><span class="o">(</span><span class="s">&#34;myfunc&#34;</span><span class="o">);</span>

<span class="c1">// check if a function exist or not
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">functionExists</span><span class="o">(</span><span class="s">&#34;myfunc&#34;</span><span class="o">);</span>

<span class="c1">// list functions in a database
</span><span class="c1"></span><span class="n">catalog</span><span class="o">.</span><span class="n">listFunctions</span><span class="o">(</span><span class="s">&#34;mydb&#34;</span><span class="o">);</span>
</code></pre></div><h2 id="目录的-table-api-和-sql">目录的 Table API 和 SQL</h2>
<h3 id="注册目录">注册目录</h3>
<p>用户可以访问一个名为 default_catalog 的默认内存目录，这个目录总是默认创建的。该目录默认有一个名为 default_database 的单一数据库。用户也可以在现有的 Flink 会话中注册额外的目录。</p>
<ul>
<li>Scala</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="n">tableEnv</span><span class="o">.</span><span class="n">registerCatalog</span><span class="o">(</span><span class="k">new</span> <span class="nc">CustomCatalog</span><span class="o">(</span><span class="s">&#34;myCatalog&#34;</span><span class="o">));</span>
</code></pre></div><ul>
<li>YAML</li>
</ul>
<p>所有使用 YAML 定义的目录必须提供一个 <code>type</code> 属性，指定目录的类型。以下类型是开箱即用的。</p>
<table>
<thead>
<tr>
<th style="text-align:left">Catalog</th>
<th style="text-align:left">Type Value</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">GenericInMemory</td>
<td style="text-align:left">generic_in_memory</td>
</tr>
<tr>
<td style="text-align:left">Hive</td>
<td style="text-align:left">hive</td>
</tr>
</tbody>
</table>
<div class="highlight"><pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">catalogs</span><span class="p">:</span><span class="w">
</span><span class="w">   </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">myCatalog</span><span class="w">
</span><span class="w">     </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">custom_catalog</span><span class="w">
</span><span class="w">     </span><span class="nt">hive-conf-dir</span><span class="p">:</span><span class="w"> </span><span class="l">...</span><span class="w">
</span></code></pre></div><h3 id="更改当前目录和数据库">更改当前目录和数据库</h3>
<p>Flink 将始终搜索当前目录和数据库中的表、视图和 UDF。</p>
<ul>
<li>Scala</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="n">tableEnv</span><span class="o">.</span><span class="n">useCatalog</span><span class="o">(</span><span class="s">&#34;myCatalog&#34;</span><span class="o">);</span>
<span class="n">tableEnv</span><span class="o">.</span><span class="n">useDatabase</span><span class="o">(</span><span class="s">&#34;myDb&#34;</span><span class="o">);</span>
</code></pre></div><ul>
<li>Flink SQL</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Flink SQL&gt; USE CATALOG myCatalog<span class="p">;</span>
Flink SQL&gt; USE myDB<span class="p">;</span>
</code></pre></div><p>通过提供 catalog.database.object 形式的完全限定名称，可以访问非当前目录的元数据。</p>
<ul>
<li>Scala</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="n">tableEnv</span><span class="o">.</span><span class="n">from</span><span class="o">(</span><span class="s">&#34;not_the_current_catalog.not_the_current_db.my_table&#34;</span><span class="o">);</span>
</code></pre></div><ul>
<li>Flink SQL</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Flink SQL&gt; SELECT * FROM not_the_current_catalog.not_the_current_db.my_table<span class="p">;</span>
</code></pre></div><h3 id="列出可用的目录">列出可用的目录</h3>
<ul>
<li>Scala</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="n">tableEnv</span><span class="o">.</span><span class="n">listCatalogs</span><span class="o">();</span>
</code></pre></div><ul>
<li>Flink SQL</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Flink SQL&gt; show catalogs<span class="p">;</span>
</code></pre></div><h3 id="列出可用的数据库">列出可用的数据库</h3>
<ul>
<li>Scala</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="n">tableEnv</span><span class="o">.</span><span class="n">listDatabases</span><span class="o">();</span>
</code></pre></div><ul>
<li>Flink SQL</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Flink SQL&gt; show databases<span class="p">;</span>
</code></pre></div><h3 id="列出可用的表">列出可用的表</h3>
<ul>
<li>Scala</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-scala" data-lang="scala"><span class="n">tableEnv</span><span class="o">.</span><span class="n">listTables</span><span class="o">();</span>
</code></pre></div><ul>
<li>Flink SQL</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-shell" data-lang="shell">Flink SQL&gt; show tables<span class="p">;</span>
</code></pre></div><p>原文链接: <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/catalogs.html">https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/catalogs.html</a></p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/flink" term="flink" label="Flink" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/flink" term="flink" label="Flink" />
                             
                                <category scheme="https://ohmyweekly.github.io/tags/flink-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3" term="flink-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3" label="Flink 官方文档" />
                             
                                <category scheme="https://ohmyweekly.github.io/tags/table-api-sql" term="table-api-sql" label="Table API &amp; SQL" />
                             
                                <category scheme="https://ohmyweekly.github.io/tags/catalogs" term="catalogs" label="Catalogs" />
                            
                        
                    
                
            
        </entry>
    
</feed>

{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003eclass Student {\n    has $.name;\n    has $.sex;\n    has $!age;\n\n    method BUILD(:$!name) {\n\n    }\n}\n\nmy $stu = Student.new(:name('赵今麦'), :sex('女'));\ndd $stu;\n# Student $stu = Student.new(name =\u0026gt; \u0026quot;赵今麦\u0026quot;, sex =\u0026gt; Any)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e如果你加上 \u003ccode\u003eBUILD\u003c/code\u003e 方法, 你必须自己全权负责设置所有的东西。也就是既包括公共属性, 也包括私有属性。\u003c/p\u003e\n\u003cp\u003e但你可以通过巧妙地命名参数来让你的生活更轻松。\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003emethod BUILD (:$!name, :$!sex, :$!age) { }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eBUILD\u003c/code\u003e 方法可以初始化私有属性:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003eclass Student {\n    has $.name;\n    has $.sex;\n    has $!age;\n\n    method BUILD(:$name, :$sex, :$age) {\n        $!name = $name;\n        $!sex = $sex;\n        $!age = $age;\n    }\n\n    method heart() { return '♥ ' ~ $!age }\n}\n\nmy $stu = Student.new(:name('赵今麦'), :sex('女'), :age(18));\ndd $stu;\nsay $stu;\nsay $stu.heart(); \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e也可以在 TWEAK 方法中初始化私有属性:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003eclass Student {\n    has $.name;\n    has $.sex;\n    has $!age;\n\n    method TWEAK(:$name, :$sex, :$age) {\n        $!age = $age + 1;\n    }\n\n    method heart() { return '♥' ~ $!age }\n}\n\nmy $stu = Student.new(:name('赵今麦'), :sex('女'), :age(18));\ndd $stu;\nsay $stu;\nsay $stu.heart(); \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e使用 \u003ccode\u003eTWEAK\u003c/code\u003e，你会得到与 \u003ccode\u003eBUILD\u003c/code\u003e 相同的参数，但所有的初始设置都已经完成了（\u003ccode\u003eBUILD\u003c/code\u003e 或公共属性的自动绑定，以及所有的默认值，再加上保证所需值的存在）。你只是有机会做一些最后的调整。\u003c/p\u003e\n","text":"class Student { has $.name; has $.sex; has $!age; method BUILD(:$!name) { } } my $stu = Student.new(:name('赵今麦'), :sex('女')); dd $stu; # Student $stu = Student.new(name =\u0026gt; \u0026quot;赵今麦\u0026quot;, sex =\u0026gt; Any) 如果你加上 BUILD 方法, 你必须自己全权负责设置所有的东西。也就是既包括公共属性, 也包括私有属性。\n但你可以通过巧妙地命名参数来让你的生活更轻松。\nmethod BUILD (:$!name, :$!sex, :$!age) { } BUILD 方法可以初始化私有属性:\nclass Student { has $.name; has $.sex; has $!age; method BUILD(:$name, :$sex, :$age) { $!name = $name; $!sex = $sex; $!age = $age; } method heart() { return '♥ ' ~ $!age } } my $stu = Student.new(:name('赵今麦'), :sex('女'), :age(18)); dd $stu; say $stu; say $stu.heart(); 也可以在 TWEAK 方法中初始化私有属性:\nclass Student { has $.name; has $.sex; has $!age; method TWEAK(:$name, :$sex, :$age) { $!age = $age + 1; } method heart() { return '♥' ~ $!age } } my $stu = Student.new(:name('赵今麦'), :sex('女'), :age(18)); dd $stu; say $stu; say $stu.heart(); 使用 TWEAK，你会得到与 BUILD 相同的参数，但所有的初始设置都已经完成了（BUILD 或公共属性的自动绑定，以及所有的默认值，再加上保证所需值的存在）。你只是有机会做一些最后的调整。\n"},"name":"BUILD 和 TWEAK 的区别","published":"2021-03-07T00:00:00+08:00","summary":"Difference Between Build and Tweak in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-03-07-difference-between-build-and-tweak-in-raku/"}],"name":"BUILD","type":"feed","url":"https://ohmyweekly.github.io/tags/build/"}
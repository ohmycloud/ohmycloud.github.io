<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.85.0">Hugo</generator><title type="html"><![CDATA[polymod on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/polymod/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/polymod/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/polymod/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/polymod/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-07-13T22:14:20+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/polymod/</id>
    
        
        <entry>
            <title type="html"><![CDATA[Raku 中的 polymod 方法]]></title>
            <link href="https://ohmyweekly.github.io/notes/2015-09-17-polymod-method-in-raku/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2015-09-17-polymod-method-in-raku/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-07-11T00:00:00+08:00</published>
            <updated>2021-07-11T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Polymod Method in Raku</blockquote><blockquote>
<p>Raku 中的 .polymod 方法 - 把数字分解成分母</p>
</blockquote>
<h2 id="命名">命名</h2>
<p><code>.polymod</code> 方法接受几个除数并把它的调用者分解成一份一份的:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$seconds</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">24</span> <span class="c1"># days</span>
            <span class="o">+</span> <span class="mi">3</span> <span class="o">*</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span>    <span class="c1"># hours</span>
            <span class="o">+</span> <span class="mi">4</span> <span class="o">*</span> <span class="mi">60</span>       <span class="c1"># minutes</span>
            <span class="o">+</span> <span class="mi">5</span><span class="p">;</span>           <span class="c1"># seconds</span>

<span class="nb">say</span> <span class="nv">$seconds</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">60</span><span class="p">;</span>
<span class="nb">say</span> <span class="nv">$seconds</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">24</span><span class="p">;</span>

<span class="c1"># OUTPUT:</span>
<span class="c1"># (5 4 27)</span>
<span class="c1"># (5 4 3 1)</span>
</code></pre></div><p>这种情况下我们作为参数传递的除数是和时间相关的: 60(每分钟有多少秒)， 60(每小时有多少分钟)，和24(每天有多少小时)。从最小的单位开始， 我们一直前进到最大的单位。</p>
<p>输出和输入的除数是相匹配的 - 从最小的单位到最大的单位： 5 秒，4 分钟，3 小时和 1 天。</p>
<h2 id="手工制作">手工制作</h2>
<p>不使用 <code>.polymod</code> 而使用一个循环来展示怎么之前的计算:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$seconds</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">24</span> <span class="c1"># days</span>
            <span class="o">+</span> <span class="mi">3</span> <span class="o">*</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span>    <span class="c1"># hours</span>
            <span class="o">+</span> <span class="mi">4</span> <span class="o">*</span> <span class="mi">60</span>       <span class="c1"># minutes</span>
            <span class="o">+</span> <span class="mi">5</span><span class="p">;</span>           <span class="c1"># seconds</span>

<span class="k">my</span> <span class="nv">@pieces</span><span class="p">;</span>

<span class="k">for</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">60</span><span class="o">,</span> <span class="mi">24</span> <span class="k">-&gt;</span> <span class="nv">$divisor</span> <span class="p">{</span>
    <span class="nv">@pieces</span><span class="o">.</span><span class="nb">push</span><span class="o">:</span> <span class="nv">$seconds</span> <span class="ow">mod</span> <span class="nv">$divisor</span><span class="p">;</span>
    <span class="nv">$seconds</span> <span class="ow">div</span><span class="o">=</span> <span class="nv">$divisor</span>
<span class="p">}</span>

<span class="nv">@pieces</span><span class="o">.</span><span class="nb">push</span><span class="o">:</span> <span class="nv">$seconds</span><span class="p">;</span>
<span class="nb">say</span> <span class="nv">@pieces</span><span class="p">;</span>

<span class="c1"># OUTPUT:</span>
<span class="c1"># [5 4 3 2]</span>
</code></pre></div><h2 id="超越无限">超越无限</h2>
<p>当除数是以惰性列表的形式传递给 <code>.polymod</code> 方法时，它会一直运行直到余数为零并不会遍历整个列表:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">say</span> <span class="mi">120</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span>      <span class="mi">10</span>¹<span class="o">,</span> <span class="mi">10</span>²<span class="o">,</span> <span class="mi">10</span>³<span class="o">,</span> <span class="mi">10</span>⁴<span class="o">,</span> <span class="mi">10</span>⁵<span class="p">;</span>
<span class="nb">say</span> <span class="mi">120</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> <span class="nb">lazy</span> <span class="mi">10</span>¹<span class="o">,</span> <span class="mi">10</span>²<span class="o">,</span> <span class="mi">10</span>³<span class="o">,</span> <span class="mi">10</span>⁴<span class="o">,</span> <span class="mi">10</span>⁵<span class="p">;</span>
<span class="nb">say</span> <span class="mi">120</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span>      <span class="mi">10</span>¹<span class="o">,</span> <span class="mi">10</span>²<span class="o">,</span> <span class="mi">10</span>³ <span class="o">…</span> <span class="no">∞</span><span class="p">;</span>

<span class="c1"># OUTPUT:</span>
<span class="c1"># (0 12 0 0 0 0)</span>
<span class="c1"># (0 12)</span>
<span class="c1"># (0 12)</span>
</code></pre></div><p>在第一个调用中， 我们让一系列数字按 10 的幂增长。该调用的输出包含了 4 个尾部的零，因为 <code>.polymod</code> 方法计算了每个除数。在第二个调用中，我们使用 <code>lazy</code> 关键字显式地创建了一个惰性列表， 而现在我们在返回的列表中只有 2 个条目。</p>
<p>第一个除数(10)结果余数为 0，这是返回列表中的第一个条目，对于下一个除数，整除把我们的 120 变成了 12。12 除以 100 的余数为 12， 它是返回列表中的第二个条目。 现在， 12 整除 100 为 0， 它终止了 <code>.polymod</code> 的执行并给了我们两个 条目的结果。</p>
<p>在最后一个调用中，我们使用了省略号，它是一个序列操作符，用来创建一系列按 10 的幂增长的数字，但是这一次序列是无限的。因为它是惰性的，结果再一次只有 2 个元素。</p>
<h2 id="zip-it-lock-it-put-it-in-the-pocket">Zip It, Lock It, Put It In The Pocket</h2>
<p>单独的数字很好但是对于它们所代表的单位不够具有描述性。我们来使用 Zip 元操作符:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">@units</span>  <span class="o">=</span> <span class="p">&lt;</span><span class="s">ng μg mg g kg</span><span class="p">&gt;;</span>
<span class="k">my</span> <span class="nv">@pieces</span> <span class="o">=</span> <span class="mi">42_666_555_444_333</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> <span class="mi">10</span>³ <span class="ow">xx</span> <span class="no">∞</span><span class="p">;</span>

<span class="nb">say</span> <span class="nv">@pieces</span> <span class="ow">Z</span><span class="o">~</span> <span class="nv">@units</span><span class="p">;</span>
<span class="c1"># OUTPUT:</span>
<span class="c1"># (333ng 444μg 555mg 666g 42kg)</span>
</code></pre></div><h2 id="快速命名">快速命名</h2>
<p>对于被调用者和除数，你不仅仅限于使用 Ints，也可以使用其它类型的数字。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">say</span> ⅔<span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> ⅓<span class="p">;</span>

<span class="nb">say</span> <span class="mi">5</span><span class="o">.</span><span class="nb">Rat</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> <span class="mf">.3</span><span class="o">,</span> <span class="mf">.2</span><span class="p">;</span>
<span class="nb">say</span> <span class="mi">3</span><span class="o">.</span><span class="nb">Rat</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> ⅔<span class="o">,</span> ⅓<span class="p">;</span>

<span class="c1"># OUTPUT:</span>
<span class="c1"># (0 2)</span>
<span class="c1"># (0.2 0 80)</span>
<span class="c1"># (0.333333 0 12)</span>
</code></pre></div><div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">say</span> <span class="mi">5</span><span class="o">.</span><span class="nb">Num</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> <span class="mf">.3</span><span class="o">,</span> <span class="mf">.2</span><span class="p">;</span>
<span class="nb">say</span> <span class="mi">3</span><span class="o">.</span><span class="nb">Num</span><span class="o">.</span><span class="nb">polymod</span><span class="o">:</span> ⅔<span class="o">,</span> ⅓<span class="p">;</span>

<span class="c1"># OUTPUT:</span>
<span class="c1"># (0.2 0.199999999999999 79)</span>
<span class="c1"># (0.333333333333333 2.22044604925031e-16 12)</span>
</code></pre></div><h2 id="使用-numberdenominatehttpmodulesrakuorgreponumberdenominate-模块">使用 <a href="http://modules.raku.org/repo/Number::Denominate">Number::Denominate</a> 模块</h2>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">use</span> <span class="nn">Number::Denominate</span><span class="p">;</span>

<span class="k">my</span> <span class="nv">$seconds</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">*</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">24</span> <span class="c1"># days</span>
            <span class="o">+</span> <span class="mi">3</span> <span class="o">*</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span>    <span class="c1"># hours</span>
            <span class="o">+</span> <span class="mi">4</span> <span class="o">*</span> <span class="mi">60</span>       <span class="c1"># minutes</span>
            <span class="o">+</span> <span class="mi">5</span><span class="p">;</span>           <span class="c1"># seconds</span>

<span class="nb">say</span> <span class="n">denominate</span> <span class="nv">$seconds</span><span class="p">;</span>
<span class="nb">say</span> <span class="n">denominate</span> <span class="nv">$seconds</span><span class="o">,</span> <span class="p">:</span><span class="s">set</span><span class="p">&lt;</span><span class="s">weight</span><span class="p">&gt;;</span>

<span class="c1"># OUTPUT:</span>
<span class="c1"># 1 day, 3 hours, 4 minutes, and 5 seconds</span>
<span class="c1"># 97 kilograms and 445 grams</span>
</code></pre></div><p>你还可以定义自己的单位:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">say</span> <span class="n">denominate</span> <span class="mi">449</span><span class="o">,</span> <span class="p">:</span><span class="s">units</span><span class="p">(</span> <span class="s">foo</span> <span class="o">=&gt;</span> <span class="mi">3</span>, <span class="p">&lt;</span><span class="s">bar boors</span><span class="p">&gt;</span> <span class="o">=&gt;</span> <span class="mi">32</span><span class="o">,</span> <span class="p">&#39;</span><span class="s1">ber</span><span class="p">&#39;</span> <span class="p">);</span>

<span class="c1"># OUTPUT:</span>
<span class="c1"># 4 foos, 2 boors, and 1 ber</span>
</code></pre></div><p><a href="http://raku.party/post/Raku-.polymod-break-up-a-number-into-denominations">http://raku.party/post/Raku-.polymod-break-up-a-number-into-denominations</a></p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/rakulang" term="rakulang" label="rakulang" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/polymod" term="polymod" label="polymod" />
                            
                        
                    
                
            
        </entry>
    
</feed>

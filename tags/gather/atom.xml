<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.85.0">Hugo</generator><title type="html"><![CDATA[gather on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/gather/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/gather/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/gather/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/gather/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-07-15T22:25:29+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/gather/</id>
    
        
        <entry>
            <title type="html"><![CDATA[买水果]]></title>
            <link href="https://ohmyweekly.github.io/notes/2016-04-12-janes-fruit/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2016-04-12-janes-fruit/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-07-13T00:00:00+08:00</published>
            <updated>2021-07-13T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Janes Fruit</blockquote><h2 id="问题描述">问题描述</h2>
<p>小詹妮拿着 5 美元去超市买东西,  为新搬来的邻居买水果篮礼物。因为她是个勤奋并缺乏想象力的孩纸, 她打算正好花 5 美元, 不多也不少。</p>
<p>事实上超市里水果的价格并非整数, 正好花光 5 美元并不容易。 - 但是詹妮已经准备好了。她从背包里拿出上网本, 输入她看到过的水果的单价, 并且开启了一个程序为她收集 — 就是这样, 5 美元能买的水果的组合就出现在屏幕上。</p>
<p>挑战: 用你选择的语言展示詹妮的程序是什么样子。</p>
<ul>
<li>目标就是 500 美分 (等于 5 美元)</li>
<li>解决方法可以包含多种同类型的水果 - 假设它们数量没有限制</li>
<li>解决方法没有必要包含所有水果类型</li>
<li>对给定的输入检测所有可能的方法</li>
</ul>
<h2 id="输入描述">输入描述</h2>
<p>每行一种水果 — 规定了水果的名字(不含空格的单词)和水果的单价(单位为美分, 整数)</p>
<h2 id="输出描述">输出描述</h2>
<p>每个解决方法一行 — 用以逗号分割的数量+名字对儿, 描述了那种类型要买的水果数。</p>
<p>不要列出数量为 0 的水果。如果为复数就给名字加 <strong>s</strong>。</p>
<h2 id="输入样本">输入样本</h2>
<pre><code>banana 32
kiwi 41
mango 97
papaya 254
pineapple 399
</code></pre><h2 id="输出样本">输出样本</h2>
<pre><code>6 kiwis, 1 papaya
7 bananas, 2 kiwis, 2 mangos
</code></pre><h2 id="有挑战的输入">有挑战的输入</h2>
<pre><code>apple 59
banana 32
coconut 155
grapefruit 128
jackfruit 1100
kiwi 41
lemon 70
mango 97
orange 73
papaya 254
pear 37
pineapple 399
watermelon 500
</code></pre><p>注意, 这种输入有 180 种解决方法。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="p">(</span><span class="nv">@names</span><span class="o">,</span> <span class="nv">@prices</span><span class="p">)</span> <span class="o">:=</span> <span class="p">(</span><span class="nv">$_</span><span class="o">»[</span><span class="mi">0</span><span class="o">],</span> <span class="nv">$_</span><span class="o">»[</span><span class="mi">1</span><span class="o">]».</span><span class="nb">Int</span> <span class="k">given</span> <span class="nb">lines</span><span class="o">».</span><span class="nb">words</span><span class="p">);</span>

<span class="k">for</span> <span class="nf">find-coefficients</span><span class="p">(</span><span class="mi">500</span><span class="o">,</span> <span class="nv">@prices</span><span class="p">)</span> <span class="k">-&gt;</span> <span class="nv">@quantities</span> <span class="p">{</span>
    <span class="nb">say</span> <span class="p">(</span><span class="nv">@names</span> <span class="ow">Z</span> <span class="nv">@quantities</span><span class="p">)</span>
        <span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="k">-&gt;</span> <span class="o">[</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$qty</span><span class="o">]</span> <span class="p">{</span> <span class="p">&#34;</span><span class="nv">$qty</span><span class="s2"> </span><span class="nv">$name</span><span class="p">&#34;</span><span class="o">~</span><span class="p">(&#34;</span><span class="s2">s</span><span class="p">&#34;</span> <span class="k">if</span> <span class="nv">$qty</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$qty</span> <span class="p">})</span>
        <span class="o">.</span><span class="nb">join</span><span class="p">(&#34;</span><span class="s2">, </span><span class="p">&#34;);</span>
<span class="p">}</span>

<span class="k">sub</span> <span class="nf">find-coefficients</span> <span class="p">(</span><span class="nv">$goal</span><span class="o">,</span> <span class="nv">@terms</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">gather</span> <span class="p">{</span>
        <span class="k">my</span> <span class="nv">@coefficients</span><span class="p">;</span>

        <span class="k">loop</span> <span class="p">(</span><span class="k">my</span> <span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span> <span class="o">&lt;</span> <span class="nv">@terms</span><span class="p">;</span> <span class="nv">@coefficients</span><span class="o">[</span><span class="nv">$i</span><span class="o">]++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">given</span> <span class="o">[+]</span><span class="p">(</span><span class="nv">@coefficients</span> <span class="ow">Z</span><span class="o">*</span> <span class="nv">@terms</span><span class="p">)</span> <span class="o">&lt;=&gt;</span> <span class="nv">$goal</span> <span class="p">{</span>
                <span class="k">when</span> <span class="nb">Less</span> <span class="p">{</span> <span class="nv">$i</span> <span class="o">=</span> <span class="mi">0</span>                      <span class="p">}</span>
                <span class="k">when</span> <span class="nb">More</span> <span class="p">{</span> <span class="nv">@coefficients</span><span class="o">[</span><span class="nv">$i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$i</span><span class="o">++</span> <span class="p">}</span>
                <span class="k">when</span> <span class="nb">Same</span> <span class="p">{</span> <span class="nb">take</span> <span class="nv">@coefficients</span><span class="o">.</span><span class="nb">values</span>   <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p>在循环的每一次迭代中，数组 <code>@coefficients</code> 被&quot;增一&quot;，就像它的元素是一个数字的位数一样 - 但不是一个有固定基数的数字：相反，只要超过了搜索条件（sum &gt; goal），它就会溢出&quot;数字&quot;。</p>
<p>同样的事情也可以用递归的方式更优雅地完成。对于那些不喜欢天真的暴力解决方法的人来说，这个挑战也可能是一个尝试一些<a href="https://en.wikipedia.org/wiki/Dynamic_programming">动态编程</a>技术的好机会。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">@fruits</span> <span class="o">=</span> <span class="nb">lines</span><span class="o">».</span><span class="nb">split</span><span class="p">(&#34;</span><span class="s2"> </span><span class="p">&#34;)</span><span class="o">.</span><span class="nb">sort</span><span class="p">(</span><span class="o">-*[</span><span class="mi">1</span><span class="o">]</span><span class="p">);</span>
<span class="k">my</span> <span class="nv">@names</span>  <span class="o">=</span> <span class="nv">@fruits</span><span class="o">»[</span><span class="mi">0</span><span class="o">]</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">@prices</span> <span class="o">=</span> <span class="nv">@fruits</span><span class="o">»[</span><span class="mi">1</span><span class="o">]».</span><span class="nb">Int</span><span class="p">;</span>

<span class="k">for</span> <span class="nf">find-coefficients</span><span class="p">(</span><span class="mi">500</span><span class="o">,</span> <span class="nv">@prices</span><span class="p">)</span> <span class="k">-&gt;</span> <span class="nv">@quantities</span> <span class="p">{</span>
    <span class="nb">say</span> <span class="p">(</span><span class="nv">@names</span> <span class="ow">Z</span> <span class="nv">@quantities</span><span class="p">)</span>
        <span class="o">.</span><span class="nb">map</span><span class="p">(</span><span class="k">-&gt;</span> <span class="o">[</span><span class="nv">$name</span><span class="o">,</span> <span class="nv">$qty</span><span class="o">]</span> <span class="p">{</span> <span class="p">&#34;</span><span class="nv">$qty</span><span class="s2"> </span><span class="nv">$name</span><span class="p">&#34;</span><span class="o">~</span><span class="p">(&#34;</span><span class="s2">s</span><span class="p">&#34;</span> <span class="k">if</span> <span class="nv">$qty</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="k">if</span> <span class="nv">$qty</span> <span class="p">})</span>
        <span class="o">.</span><span class="nb">join</span><span class="p">(&#34;</span><span class="s2">, </span><span class="p">&#34;);</span>
<span class="p">}</span>

<span class="k">sub</span> <span class="nf">find-coefficients</span> <span class="p">(</span><span class="nv">$goal</span><span class="o">,</span> <span class="nv">@terms</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">gather</span> <span class="p">{</span>
        <span class="k">my</span> <span class="nv">@initial</span> <span class="o">=</span> <span class="mi">0</span> <span class="ow">xx</span> <span class="nv">@terms</span><span class="p">;</span>

        <span class="k">my</span> <span class="nv">%partials</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="nv">@initial</span><span class="o">,]</span><span class="p">);</span>
        <span class="k">my</span> <span class="nv">@todo</span> <span class="o">=</span> <span class="p">(</span><span class="nv">@initial</span><span class="o">,</span><span class="p">);</span>
        <span class="k">my</span> <span class="nv">%seen-partials</span> <span class="o">:=</span> <span class="nb">SetHash</span><span class="o">.</span><span class="nb">new</span><span class="p">;</span>
        <span class="k">my</span> <span class="nv">%seen-solutions</span> <span class="o">:=</span> <span class="nb">SetHash</span><span class="o">.</span><span class="nb">new</span><span class="p">;</span>

        <span class="k">while</span> <span class="nv">@todo</span> <span class="p">{</span>
            <span class="k">my</span> <span class="nv">@current</span> <span class="o">:=</span> <span class="nv">@todo</span><span class="o">.</span><span class="nb">shift</span><span class="p">;</span>
            <span class="k">my</span> <span class="nv">$sum</span> <span class="o">=</span> <span class="o">[+]</span> <span class="nv">@current</span> <span class="ow">Z</span><span class="o">*</span> <span class="nv">@terms</span><span class="p">;</span>

            <span class="nb">next</span> <span class="k">if</span> <span class="nv">$sum</span> <span class="o">&gt;</span> <span class="nv">$goal</span><span class="p">;</span>

            <span class="nv">%partials</span><span class="p">{</span><span class="nv">$sum</span><span class="p">}</span><span class="o">.</span><span class="nb">push</span><span class="o">:</span> <span class="nv">@current</span><span class="p">;</span>

            <span class="c1"># Find solutions by adding known partials to the current partial</span>
            <span class="k">for</span> <span class="nv">%partials</span><span class="p">{</span><span class="nv">$goal</span> <span class="o">-</span> <span class="nv">$sum</span><span class="p">}</span><span class="o">[*]</span> <span class="k">-&gt;</span> <span class="nv">@known</span> <span class="p">{</span>
                <span class="o">.</span><span class="nb">take</span> <span class="k">if</span> <span class="o">!</span><span class="nv">%seen-solutions</span><span class="p">{</span><span class="o">~</span><span class="nv">$_</span><span class="p">}</span><span class="o">++</span> <span class="k">given</span> <span class="nb">list</span> <span class="nv">@current</span> <span class="ow">Z</span><span class="o">+</span> <span class="nv">@known</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="c1"># Schedule additional iterations</span>
            <span class="k">if</span> <span class="nv">$sum</span> <span class="o">&lt;=</span> <span class="nv">$goal</span> <span class="ow">div</span> <span class="mi">2</span> <span class="p">{</span>
                <span class="k">for</span> <span class="nv">@terms</span><span class="o">.</span><span class="nb">keys</span> <span class="p">{</span>
                    <span class="k">my</span> <span class="nv">@next</span> <span class="o">=</span> <span class="nv">@current</span><span class="p">;</span>
                    <span class="nv">@next</span><span class="o">[</span><span class="nv">$_</span><span class="o">]++</span><span class="p">;</span>
                    <span class="nv">@todo</span><span class="o">.</span><span class="nb">push</span><span class="o">:</span> <span class="nv">@next</span> <span class="k">if</span> <span class="o">!</span><span class="nv">%seen-partials</span><span class="p">{</span><span class="o">~</span><span class="nv">@next</span><span class="p">}</span><span class="o">++</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div><p>注意:</p>
<ul>
<li>对于挑战的输入(解空间=1,127,153,664)，它只需要 4296 次迭代，而每次迭代都要花费几次哈希查询。</li>
</ul>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/rakulang" term="rakulang" label="rakulang" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/gather" term="gather" label="gather" />
                            
                        
                    
                
            
        </entry>
    
</feed>

<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.85.0">Hugo</generator><title type="html"><![CDATA[capture on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/capture/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/capture/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/capture/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/capture/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-07-11T22:08:29+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/capture/</id>
    
        
        <entry>
            <title type="html"><![CDATA[Raku 中的捕获]]></title>
            <link href="https://ohmyweekly.github.io/notes/2015-04-01-capture-in-raku/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2015-04-01-capture-in-raku/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-07-10T00:00:00+08:00</published>
            <updated>2021-07-10T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Capture in Raku</blockquote><p><a href="http://doc.raku.org/type/Capture">Capture</a> 的定义:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">class</span> <span class="nb">Capture</span> <span class="k">does</span> <span class="nb">Positional</span> <span class="k">does</span> <span class="nb">Associative</span> <span class="p">{</span> <span class="p">}</span>
</code></pre></div><p>Capture 是一个用于给 code 对象传递参数的容器。Captures 是签名的另一面 — Captures 在调用方定义实参, 而签名(Signatures) 在被调用方定义形式参数。</p>
<p>当你调用 <code>print $a, $b</code> 时, <code>$a, $b</code> 这部分就是一个 Capture。<code>$a, $b</code> 在这儿是实参。</p>
<p>Captures 包含一个 list-like 部分的位置参数和一个 hash-like 部分的具名参数。对于具名参数, Captures 使用一种略微不同的语法而不是普通的 List。有两种简单的方法生成一个具名参数：</p>
<ul>
<li>使用一个未引起的键命名一个形参, 后面跟着 <code>=&gt;</code>, 然后跟着参数</li>
<li>使用以形参命名的冒号对儿字面量</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">say</span> <span class="nb">unique</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="s">as</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="nb">abs</span> <span class="nv">$_</span> <span class="p">};</span> <span class="c1"># 1</span>, <span class="o">-</span><span class="mi">2</span><span class="o">,</span> <span class="mi">3</span>
<span class="c1"># ... is the same thing as:</span>
<span class="nb">say</span> <span class="nb">unique</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="p">:</span><span class="s">as</span><span class="p">({</span> <span class="nb">abs</span> <span class="nv">$_</span> <span class="p">});</span>  <span class="c1"># 1, -2, 3</span>
<span class="c1"># Be careful not to quote the name of a named parameter:</span>
<span class="nb">say</span> <span class="nb">unique</span> <span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">2</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="p">&#39;</span><span class="s1">as</span><span class="p">&#39;</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="nb">abs</span> <span class="nv">$_</span> <span class="p">};</span> <span class="c1"># 1, -2, 2, 3, &#34;as&#34; =&gt; { ... }</span>
</code></pre></div><p>单个独立的 Capture 也能被生成, 存储, 然后供之后使用。 在项(term)那儿前置一个反斜线 <code>\</code> 能生成一个字面的 Capture。通常, 这个 term 会是一个 terms 的列表, 在这个列表里面, 任何 Pair 字面值会被放在 Capture 的具名部分, 而其它 terms 会被放在Capture 的位置(positional) 部分。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$c</span> <span class="o">=</span> \<span class="p">(</span><span class="mi">42</span><span class="p">);</span>          <span class="c1"># 带有一个 positional 部分的 Capture        </span>
<span class="nv">$c</span> <span class="o">=</span> \<span class="p">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="s">a</span> <span class="o">=&gt;</span> <span class="p">&#39;</span><span class="s1">b</span><span class="p">&#39;);</span> <span class="c1"># 带有两个 positional 部分和一个具名部分的 Capture</span>
</code></pre></div><p>要使用这样的 Capture, 在函数调用里你可以在这个 Capture 前面使用 <code>|</code> , 那么它看起来会像这个 Capture 中的所有值都被作为实参直接传递这个函数了 — 具名参数作为具名参数传递, 而位置参数会作为位置参数传递。 只要你愿意, 你可以重用这个 Capture 任意次, 甚至使用不同的函数。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$c</span> <span class="o">=</span> \<span class="p">(</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="p">);</span>
<span class="nb">reverse</span><span class="p">(</span><span class="o">|</span><span class="nv">$c</span><span class="p">)</span><span class="o">.</span><span class="nb">say</span><span class="p">;</span> <span class="c1"># 3 2 4</span>
<span class="nb">sort</span><span class="p">(</span><span class="mi">5</span><span class="o">,|</span><span class="nv">$c</span><span class="p">)</span><span class="o">.</span><span class="nb">say</span><span class="p">;</span>  <span class="c1"># 2 3 4 5</span>
</code></pre></div><p>在签名( Signature) 里面, 可以在不含符号的形参那儿前置一个竖线 <code>|</code> 来创建一个 Capture。这会把余下的参数列表打包到那个形参中：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">sub</span> <span class="nb">f</span><span class="p">(</span><span class="nv">$a</span><span class="o">,</span> <span class="o">|</span><span class="n">c</span><span class="p">)</span> <span class="p">{</span>
    <span class="nb">say</span> <span class="n">c</span><span class="p">;</span>
<span class="p">}</span>

<span class="nb">f</span><span class="p">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="s">a</span> <span class="o">=&gt;</span> <span class="mi">4</span>, <span class="s">b</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">);</span>
<span class="c1"># c  is  \(2, 3, a =&gt; 4, b =&gt; 5)</span>
</code></pre></div><p>请注意，Capture 仍然是列表，因为它们可能包含容器，而不只是值:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$b</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="k">my</span> <span class="nv">$c</span> <span class="o">=</span> \<span class="p">(</span><span class="mi">4</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="nv">$b</span><span class="o">,</span><span class="mi">3</span><span class="p">);</span>
<span class="nb">sort</span><span class="p">(</span><span class="o">|</span><span class="nv">$c</span><span class="p">)</span><span class="o">.</span><span class="nb">say</span><span class="p">;</span>        <span class="c1"># 1 2 3 4</span>
<span class="nv">$b</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
<span class="nb">sort</span><span class="p">(</span><span class="o">|</span><span class="nv">$c</span><span class="p">)</span><span class="o">.</span><span class="nb">say</span><span class="p">;</span>        <span class="c1"># 2 3 4 6</span>
</code></pre></div><h3 id="capture-方法from-mu">Capture 方法(From Mu)</h3>
<p>定义为:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">method</span> <span class="nb">Capture</span><span class="p">(</span><span class="n">Mu:D:</span> <span class="k">--&gt;</span> <span class="nb">Capture:D</span><span class="p">)</span>
</code></pre></div><p>返回与调用者的公共属性相对应的命名参数的 <a href="https://docs.raku.org/type/Capture">Capture</a>：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">class</span> <span class="nc">Foo</span> <span class="p">{</span>
    <span class="k">has</span> <span class="nv">$.foo</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
    <span class="k">has</span> <span class="nv">$.bar</span> <span class="o">=</span> <span class="mi">70</span><span class="p">;</span>
    <span class="k">method</span> <span class="nf">bar</span> <span class="p">{</span> <span class="p">&#39;</span><span class="s1">something else</span><span class="p">&#39;</span> <span class="p">}</span>
<span class="p">}</span><span class="o">.</span><span class="nb">new</span><span class="o">.</span><span class="nb">Capture</span><span class="o">.</span><span class="nb">say</span><span class="p">;</span>

<span class="c1"># OUTPUT: «\(:bar(&#34;something else&#34;), :foo(42))␤» </span>
</code></pre></div><h3 id="cpature-方法from-list">Cpature 方法(from List)</h3>
<p>定义为:</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">method</span> <span class="nb">Capture</span><span class="p">(</span><span class="k">--&gt;</span> <span class="nb">Capture:D</span><span class="p">)</span>
</code></pre></div><p>返回一个 <a href="https://docs.raku.org/type/Capture">Capture</a>，其中列表中的每个 <a href="https://docs.raku.org/type/Pair">Pair</a>（如果有）已转换为命名参数（使用Pair string的键）。列表中的所有其他元素按照它们被发现的顺序转换为位置参数，即列表中的第一个非 Pair item 成为第一个位置参数，其获得索引 0，第二个非 pair item 成为第二个位置参数，索引为 1 等。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$list</span> <span class="o">=</span> <span class="p">(</span><span class="mi">7</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="s">a</span> <span class="o">=&gt;</span> <span class="mi">2</span>, <span class="s">b</span> <span class="o">=&gt;</span> <span class="mi">17</span><span class="p">);</span>
<span class="k">my</span> <span class="nv">$capture</span> <span class="o">=</span> <span class="nv">$list</span><span class="o">.</span><span class="nb">Capture</span><span class="p">;</span>
<span class="nb">say</span> <span class="nv">$capture</span><span class="o">.</span><span class="nb">keys</span><span class="p">;</span> <span class="c1"># OUTPUT: «(0 1 a b)␤» </span>
<span class="nf">my-sub</span><span class="p">(</span><span class="o">|</span><span class="nv">$capture</span><span class="p">);</span> <span class="c1"># RESULT: «7, 5, 2, 17» </span>
 
<span class="k">sub</span> <span class="nf">my-sub</span><span class="p">(</span><span class="nv">$first</span><span class="o">,</span> <span class="nv">$second</span><span class="o">,</span> <span class="o">:</span><span class="nv">$a</span><span class="o">,</span> <span class="o">:</span><span class="nv">$b</span><span class="p">)</span> <span class="p">{</span>
    <span class="nb">say</span> <span class="p">&#34;</span><span class="nv">$first</span><span class="s2">, </span><span class="nv">$second</span><span class="s2">, </span><span class="nv">$a</span><span class="s2">, </span><span class="nv">$b</span><span class="p">&#34;</span>
<span class="p">}</span>
</code></pre></div><p>一个更高级的例子是所返回的 <code>Capture</code> 与 <a href="https://docs.raku.org/type/Signature">签名</a> 进行智能匹配。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">my</span> <span class="nv">$list</span> <span class="o">=</span> <span class="p">(</span><span class="mi">7</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="s">a</span> <span class="o">=&gt;</span> <span class="mi">2</span>, <span class="s">b</span> <span class="o">=&gt;</span> <span class="mi">17</span><span class="p">);</span>
<span class="nb">say</span> <span class="nb">so</span> <span class="nv">$list</span><span class="o">.</span><span class="nb">Capture</span> <span class="o">~~</span> <span class="o">:</span><span class="p">(</span><span class="nv">$</span> <span class="k">where</span> <span class="o">*</span> <span class="o">==</span> <span class="mi">7</span><span class="o">,</span><span class="nv">$</span><span class="o">,:</span><span class="nv">$a</span><span class="o">,:</span><span class="nv">$b</span><span class="p">);</span> <span class="c1"># OUTPUT: «True␤» </span>
 
<span class="nv">$list</span> <span class="o">=</span> <span class="p">(</span><span class="mi">8</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="s">a</span> <span class="o">=&gt;</span> <span class="mi">2</span>, <span class="s">b</span> <span class="o">=&gt;</span> <span class="mi">17</span><span class="p">);</span>
<span class="nb">say</span> <span class="nb">so</span> <span class="nv">$list</span><span class="o">.</span><span class="nb">Capture</span> <span class="o">~~</span> <span class="o">:</span><span class="p">(</span><span class="nv">$</span> <span class="k">where</span> <span class="o">*</span> <span class="o">==</span> <span class="mi">7</span><span class="o">,</span><span class="nv">$</span><span class="o">,:</span><span class="nv">$a</span><span class="o">,:</span><span class="nv">$b</span><span class="p">);</span> <span class="c1"># OUTPUT: «False␤» </span>
</code></pre></div>]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/rakulang" term="rakulang" label="rakulang" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/capture" term="capture" label="capture" />
                            
                        
                    
                
            
        </entry>
    
</feed>

{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003cp\u003e大约 18 个月前，我开始着手进行 Raku 运行时 MoarVM 自成立以来最大的一组架构变化。这项工作最直接的起因是我们意识到，我们没有很好的方法来修复派发中的某个语义错误，而不会对整个系统的性能造成巨大的影响，也不会使已经在走运的优化中进一步增加复杂性。然而，对这种东西的需求在一段时间内是显而易见的：优化某些 Raku 语言特性的持续斗争，一堆性能机制的痛苦，这些机制都在解决同类问题，但每个都是针对特定的情况，以及一种感觉，即自从我创立 MoarVM 以来所学到的一切，都有可能做得更好。\u003c/p\u003e\n\u003cp\u003e其结果是开发了一个新的通用派发机制。简而言之，它为我们提供了一个更加统一的架构，适用于所有类型的派发，使我们能够在一系列的语言特性上提供更好的性能，而这些特性迄今为止一直是冰冷的，同时也为新的优化提供了机会。\u003c/p\u003e\n\u003cp\u003e今天，这项工作已经与 NQP（我们用于引导和实现编译器的 Raku 子集）和 Rakudo（完整的 Raku 编译器和标准库实现）中的相应变化合并。这意味着它将出现在2021年10月的版本中。\u003c/p\u003e\n\u003cp\u003e在这篇文章中，我将概述你可以立即观察到的情况，以及随着我们继续建立新的派发架构所提供的可能性，你可能会在未来期待什么。\u003c/p\u003e\n\u003ch2 id=\"大赢家\"\u003e大赢家\u003c/h2\u003e\n\u003cp\u003e最大的改进涉及到我们以前确实没有架构可以做得更好的语言特性。它们涉及到派发 —— 也就是说，让调用有效地链接到目的地 —— 但运行时并没有为我们提供一种方法来\u0026quot;解释\u0026quot;它正在看一个派发，更不用说提供优化它所需的信息了。\u003c/p\u003e\n\u003cp\u003e下图捕捉了一些这样的案例，并显示了改进的程度，从3.3倍到13.3倍不等。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://6guts.files.wordpress.com/2021/09/graph-1.png?w=601\" alt=\"Graph showing benchmark results, described textually below\"\u003e\u003c/p\u003e\n\u003cp\u003e让我们快速看一下每一个问题。第一个，\u003ccode\u003enew-buf\u003c/code\u003e，问我们如何快速分配 \u003ccode\u003eBuf\u003c/code\u003es。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eBuf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为什么说这是一个派发基准？因为 \u003ccode\u003eBuf\u003c/code\u003e 不是一个类，而是一个角色。当我们试图制造一个角色的实例时，它被 \u0026ldquo;punned\u0026rdquo; 成一个类。到现在为止，它的工作方式如下。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e我们查找 \u003ccode\u003enew\u003c/code\u003e 方法\u003c/li\u003e\n\u003cli\u003e如果需要的话，\u003ccode\u003efind_method\u003c/code\u003e 方法会创建一个角色的双关，并将其缓存起来\u003c/li\u003e\n\u003cli\u003e它将返回一个转发闭包，该闭包接受参数，并将其交给在被双关的类上调用的同一方法，或者写作 Raku 代码，\u003ccode\u003e-\u0026gt; $role-discarded, |args { $pun.\u0026quot;$name\u0026quot;(|args) }\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e这个闭包将被调用，携带参数\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e这有一些不理想的后果。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e虽然双关被缓存了，但我们仍然有一些开销来检查我们是否已经做了它。\u003c/li\u003e\n\u003cli\u003e参数被 slurp 和扁平化，这需要花费一些开销，而且\u0026hellip;\u0026hellip;\u003c/li\u003e\n\u003cli\u003e\u0026hellip;\u0026hellip;失去了 \u003ccode\u003ecallite\u003c/code\u003e 形状意味着我们无法查找方法的类型特化，因此也就失去了内联的机会。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e有了新的派发机制，我们就有了在特定程序位置缓存常量和替换参数的方法。因此，当我们第一次遇到调用时，我们\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e如果需要的话，获得产生的角色双关\u003c/li\u003e\n\u003cli\u003e解决来自角色的类上的新方法的问题\u003c/li\u003e\n\u003cli\u003e产生一个派发程序，缓存这个已解决的方法，同时用双关替换角色参数。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e在接下来的数千次调用中，我们解释这个派发程序。这仍然需要一些成本，但我们正在调用的方法已经被解决了，而且参数列表的重写也相当便宜。同时，在我们进入几百次迭代之后，在一个后台线程上，优化器开始工作。这时，参数重排的成本就完全消失了，而且新的参数非常小，可以被内联 —— 这时，缓冲区的分配被确定为无效，所以也就消失了。剩下的一些错过的机会意味着我们仍然留下了一个不完全是空的循环：它忙着确保它真的可以什么都不做，而不是什么都不做。\u003c/p\u003e\n\u003cp\u003e下一步，用 \u003ccode\u003ewhere\u003c/code\u003e 子句进行多重派发。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"nf\"\u003efac\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"nf\"\u003efac\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nf\"\u003efac\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e1_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003efac\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这些以前真的很慢，因为。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e一旦有 \u003ccode\u003ewhere\u003c/code\u003e 子句，我们就无法应用多派发缓存机制。\u003c/li\u003e\n\u003cli\u003e在候选者被选中的情况下，我们要运行两次 \u003ccode\u003ewhere\u003c/code\u003e 子句：一次是看我们是否应该选择该多候选者，另一次是在我们进入该候选者时。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e有了新的机制，我们:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e在第一次调用时，计算出一个多重派发计划：一个需要处理的候选者的链接列表\u003c/li\u003e\n\u003cli\u003e调用带有 \u003ccode\u003ewhere\u003c/code\u003e 子句的计划，在这种模式下，如果签名不能绑定，就会触发派发的恢复。(如果它绑定了，它就会运行到完成)。\u003c/li\u003e\n\u003cli\u003e如果绑定失败，则触发派发恢复，我们尝试下一个候选程序。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e再一次，在设置阶段之后，我们解释派发程序。事实上，这就是我们目前运行速度较快的程度，因为专用程序还不知道如何翻译和进一步优化这种派发程序。(这就是为什么我知道它目前没有机会把这整个事情变成另一个空循环！）。) 因此，这里还有更多的东西可以利用；同时，恐怕你只能满足于10倍的速度。\u003c/p\u003e\n\u003cp\u003e这是下一个:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eproto\u003c/span\u003e \u003cspan class=\"nf\"\u003ewith-proto\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"nf\"\u003ewith-proto\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003einvoking-nontrivial-proto\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003ewith-proto\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e同样，在顶层，我们也会把它变成一个空循环，但我们还没有达到这个目的。这种情况在以前并不可怕：我们确实可以使用多重派发缓存，但是为了做到这一点，我们也不得不分配一个参数捕获。这种需要也阻碍了将 \u003ccode\u003eproto\u003c/code\u003e 内联到调用者中的任何机会。现在这是有可能的。由于我们还不能翻译恢复正在进行的派发的派发程序，所以我们还不能进一步将被调用的多候选者内联到原语中。然而，我们现在有一个设计，可以让我们实现这一点。\u003c/p\u003e\n\u003cp\u003e这整个派发恢复的概念 —— 我们开始做一个派发，后来需要访问参数或其他预先计算的数据，以便进行下一步的派发 —— 已经被证明是一个伟大的统一。它的最初想法来自于考虑像 \u003ccode\u003ecallame\u003c/code\u003e 这样的东西。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eParent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eChild\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eParent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nb\"\u003ecallsame\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eChild\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e }\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一旦我开始关注这个问题，然后考虑到一个复杂的 \u003ccode\u003eproto\u003c/code\u003e 也想在 \u003ccode\u003e{*}\u003c/code\u003e 处继续派发，并且在 \u003ccode\u003ewhere\u003c/code\u003e 子句在 \u003ccode\u003emulti\u003c/code\u003e 中失败的情况下，它也想继续派发，我意识到这对很多事情都会很有用。教导优化器和 JIT 对恢复做一些好的事情将是一个令人头痛的问题 —— 但是，做一次就能使多种语言特性受益，这让我感到非常欣慰。\u003c/p\u003e\n\u003cp\u003e总之，回到基准上。这是另一个\u0026quot;如果我们聪明的话，它就会是一个空循环\u0026quot;。以前，\u003ccode\u003ecallsame\u003c/code\u003e 的成本很高，因为每次我们调用它时，它都必须计算出我们要恢复的是哪种派发以及要调用的方法集。我们还必须能够定位参数。涉及到动态变量，这也需要花费一些时间来查找，而且 —— 尽管是一个实现细节 —— 这些也会在自省中泄露出来，这并不理想。新的派发机制使这一切变得更有效率：我们可以缓存计算出的方法集（或包装器和 \u003ccode\u003emulti\u003c/code\u003e 候选方法，取决于上下文），然后走过它，而且不涉及动态变量（因此也不会泄露）。这体现了最大的速度提升 —— 由于我们还不能内联去掉调用名，它（目前）衡量的是人们在使用这种语言特性时可能期望的速度提升。 在未来，它注定会被优化为一个空循环。\u003c/p\u003e\n\u003cp\u003eOO::Monitors 是一个在相对较热的路径上使用 \u003ccode\u003ecallame\u003c/code\u003e 的模块，所以我想看看那里是否也会有速度的提升。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eOO::Monitors\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003emonitor\u003c/span\u003e \u003cspan class=\"n\"\u003eTestMonitor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mon\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTestMonitor\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e1_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mon\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003emonitor\u003c/code\u003e 是一个围绕每个方法调用获取锁的类。该模块提供了一个自定义的元类，为该类添加了一个锁属性，然后对每个方法进行包装，使其获得该锁。除了 \u003ccode\u003ecallsame\u003c/code\u003e 的参与之外，当然还有一些昂贵的东西在里面，但是对 \u003ccode\u003ecallsame\u003c/code\u003e 的改进已经足以让我们在这个基准中看到3.3倍的速度。由于 \u003ccode\u003eOO::Monitors\u003c/code\u003e 被用于相当多的应用程序和模块（例如，Cro 使用它），这是很受欢迎的（是的，这里也会有更大的改进）。\u003c/p\u003e\n\u003ch3 id=\"调用者端去容器化\"\u003e调用者端去容器化\u003c/h3\u003e\n\u003cp\u003e我在其他一些微小测试中看到了一些不那么令人印象深刻，但仍然值得欢迎的改进。 即使是对 \u003ccode\u003e+\u003c/code\u003e 操作的基本多重派发。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们的速度提高了1.6倍，这主要归功于我们用更少的守卫产生了更紧密的代码。 以前，我们在这种看似简单的情况下会出现重复的防护措施。\u003ccode\u003einfix:\u0026lt;+\u0026gt;\u003c/code\u003e 多重选择将被专门用于其第一个参数是 Scalar 容器中的 Int，第二个参数是不可变的 Int 的情况。因为 Scalar 是可变的，所以这个特殊化需要读取它，然后在继续之前保护读取的值，否则它可能会改变，我们会有内存安全的风险。当我们想内联这个候选值时，我们也想检查一下这个候选值是否真的适用，所以也要遵从 Scalar，并对其内容进行保护来做到这一点。我们可以而且确实消除了重复的守卫 —— 但是这些守卫是对值的两次不同的读取，所以这没有帮助。\u003c/p\u003e\n\u003cp\u003e因为在新的派发机制中，我们可以重写参数，所以我们现在可以很容易地在调用方删除值周围的 Scalar 容器。事实上，这样做非常容易，我花了几个小时就完成了这个改动。这带来了很多好处。由于派发程序会自动消除重复的读取和守卫，多派发器的读取和守卫以及为了传递去容器化的值而进行的读取都会被凝聚起来。这意味着在专业化和 JIT 编译之前减少了重复的工作，而且在之后的专业化代码中也只有一个读和守。由于要传递的值已经被保护起来，我们可以简单地选择一个候选的两个 Int 值，这意味着在被调用者中也不需要再读和保护。\u003c/p\u003e\n\u003cp\u003e一个不太明显的好处是，这意味着 Scalar 容器逃逸到被调用方的情况要少得多，但在未来的工作中会变得很重要。这为逃逸分析创造了更多机会。虽然 MoarVM 的逃逸分析器和标量替换器目前还相当有限，但我希望在不久的将来能回到它的工作中，并期望它现在能给我们带来比以前更多的价值。\u003c/p\u003e\n\u003ch3 id=\"进一步的结果\"\u003e进一步的结果\u003c/h3\u003e\n\u003cp\u003e前面显示的基准测试大多是\u0026quot;我们有多接近意识到我们有一个空循环\u0026quot;的性质，这对于评估优化器能多好地\u0026quot;看穿\u0026quot;派发是很有趣的。下面是一些在更\u0026quot;传统\u0026quot;的微基准上的进一步结果。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://6guts.files.wordpress.com/2021/09/graph2.png?w=600\" alt=\"Graph showing benchmark results, described textually below\"\u003e\u003c/p\u003e\n\u003cp\u003e复数的基准是这样的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total-re\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e2_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"no\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"no\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$z\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"nv\"\u003e$total-re\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total-re\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$z\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ere\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total-re\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也就是说，只是一堆运算符（多派发）和方法调用，在这里我们确实使用了结果。目前，我们在这个基准上与 Python 并列，比 Ruby 稍稍落后（比用 Perl 的 \u003ccode\u003eMath::Complex\u003c/code\u003e 做同样的事情快了48倍，令人惊讶），但这也是一个在未来能看到逃逸分析和标量替换带来巨大好处的案例。\u003c/p\u003e\n\u003cp\u003e散列读取的基准是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10_000_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e而散列存储一个是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@keys\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e500_000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@keys\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这些改进与哈希算法本身没有任何关系，相反，由于调用方的去容器化，看起来主要是由于更紧凑的代码。这可能有一个次要的影响，即把事情带到内联的大小限制之下，这也是一个很大的帮助。2倍和1.85倍的加速因子是值得欢迎的，尽管我们真的可以再做同样水平的改进，以便我对我们的结果感到合理的满意。\u003c/p\u003e\n\u003cp\u003e读取行的基准是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003elongfile\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chars\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chars\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chars\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chars\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e同样，没有什么特定的 I/O 变得更快，但当派发 —— 把所有的部件组合在一起的胶水 —— 得到提升时，它就会帮助所有的地方。(我们在这个基准上也很有竞争力，尽管在 UTF-8 解码器不能采取它的\u0026quot;NFG 不可能应用\u0026quot;的快速路径时往往会慢一些）。)\u003c/p\u003e\n\u003ch3 id=\"而在不那么微观的事情上\"\u003e而在不那么微观的事情上\u0026hellip;\u003c/h3\u003e\n\u003cp\u003e我也开始关注更大的程序，并从其他人那里听到他们的结果。这大多是令人鼓舞的。\u003c/p\u003e\n\u003cp\u003e长期存在的 \u003ccode\u003eText::CSV\u003c/code\u003e 基准 \u003ccode\u003etest-t\u003c/code\u003e 已经看到了大约 20% 的改进（感谢lizmat的测量）。\u003c/p\u003e\n\u003cp\u003e一个简单的 \u003ccode\u003eCro::HTTP\u003c/code\u003e 测试程序每秒多了 10% 的请求。\u003c/p\u003e\n\u003cp\u003eMoarVM 的贡献者 dogbert 对一些脚本做了时间上的比较；最显著的改进看到从25秒下降到7秒，大多数都快了 10%-30%，有些没有变化，只有一个变慢了。\u003c/p\u003e\n\u003cp\u003e在标准库 CORE.setting 的编译上，有大约2.5%的改进。然而，这里需要一大把盐：作为工作的一部分，编译器本身在很多地方发生了变化，还有一些基于查看配置文件的东西进行了调整，这些东西与派发并不真正相关。\u003c/p\u003e\n\u003cp\u003eAgrammon，一个计算农业排放的应用程序，已经看到了大约9%的速度下降。我还没来得及仔细看，不过从剖析输出来看，取消优化的次数相对较多，这表明我们在某处做了一些不好的优化决定。\u003c/p\u003e\n\u003ch3 id=\"较小的剖析器输出\"\u003e较小的剖析器输出\u003c/h3\u003e\n\u003cp\u003e一个未曾预料到的（我）但也是值得欢迎的改进是，剖析器的输出已经明显变小。 可能的原因包括:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e派发机制支持产生值结果（从常量、输入参数或从输入参数读取的属性）。它完全取代了早期的机制，即\u0026quot;特殊化插件\u0026quot;，它可以将守卫映射到要调用的目标，但总是需要调用某个东西 —— 即使这个东西是身份函数。其逻辑是，这对任何真正的热代码来说并不重要，因为身份函数会被微不足道地内联掉。然而，由于仪器分析器的大小是通过调用树的路径数量的函数，从树中修剪对身份函数的调用负载会使它变小很多。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e当一个值处于 sink 上下文时，我们曾经对 \u003ccode\u003esink\u003c/code\u003e 方法进行了大量的调用。现在，如果我们看到这个类型只是从 Mu 那里继承了这个方法，我们就会完全删除这个调用（同样，它会被内联掉，但是一个更小的调用图就是一个更小的配置文件）。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e多重派发缓存以前总是在错过缓存时调用原语，但当它在未来得到缓存点击时，就不会再调用 onlystar 原语。这意味着许多多重派发下的调用树在配置文件中是重复的。这不仅仅是一个大小的问题；这种影响在配置文件的报告中也显示出来，这有点令人讨厌。\u003c/p\u003e\n\u003cp\u003e为了举例说明这种差别，我从 Agrammon 中提取了配置文件，以研究为什么它可能变得更慢。派发器工作之前的配置文件重达 87MB；而采用新的派发机制的配置文件则低于 30MB。这意味着剖析时使用的内存更少，事后将剖析结果写入磁盘的时间更短，工具加载剖析器输出的时间也更短。因此，现在可以更快地研究如何使事情变得更快。\u003c/p\u003e\n\u003ch3 id=\"有什么坏消息吗\"\u003e有什么坏消息吗？\u003c/h3\u003e\n\u003cp\u003e恐怕是的。启动时间受到了影响。虽然新的派发机制更加强大，将更多的复杂性从虚拟机中推到了高级代码中，并且更有利于达到更高的峰值性能，但它也有更高的预热时间。在写这篇文章的时候，对启动时间的影响似乎是 25% 左右。我希望我们能在10月的发布之前收回一些。\u003c/p\u003e\n\u003ch3 id=\"什么会被打破\"\u003e什么会被打破？\u003c/h3\u003e\n\u003cp\u003e这种规模的变化总是伴随着一定的风险。我们将在下一次月度发布前几周进行合并，以便有时间进行更多的测试，并解决任何被报告的回归问题。然而，即使在达到合并的地步之前，我们已经。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e确保它在正常情况下，以及在优化器压力下，都能通过规范测试套件（我们强迫它过早地优化一切，这样我们就能找出优化器的错误，以及 —— 考虑到我们强迫它做出的许多错误决定 —— 去优化的错误\u003c/li\u003e\n\u003cli\u003e使用 \u003ccode\u003eBlin\u003c/code\u003e 来运行生态系统模块的测试。这是准备 Rakudo 发布时的一个标准步骤，但在这种情况下，我们把它放在 \u003ccode\u003enew-disp\u003c/code\u003e 分支上。这发现了一些由于切换到新的派发机制而引起的退步，这些问题已经被解决。\u003c/li\u003e\n\u003cli\u003e对一些依赖不支持的内部 API 的模块进行了补丁或发送了拉取请求，这些内部 API 现在已经消失或改变，或者依赖其他实现细节。这些模块相对较少，而且令人高兴的是，其中许多模块通过迁移到支持的 API（这些 API 在编写模块时可能并不存在）得到了修复。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"接下来会发生什么\"\u003e接下来会发生什么？\u003c/h3\u003e\n\u003cp\u003e正如我在这篇文章中提到的一些地方，虽然有一些改进可以立即享受，但也有一些新的机会可以进一步改进。我想到的一些事情包括。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e重新设计 callframe 的进入和退出。这些仍然是明显的成本过高。在研究新的派发机制时发生的各种变化，为这一领域的改进提供了新的机会。\u003c/li\u003e\n\u003cli\u003e避免巨变的堆积。微观基准在隐藏这些方面非常出色。事实上，这里的 \u0026ldquo;callsame\u0026rdquo; 就是一个完美的例子! 我们在 \u003ccode\u003ecallsame\u003c/code\u003e 中进行派发的恢复，所以整个程序中所有恢复的内联缓存条目都堆积在一个地方。我们所希望的是让它们在调用栈的下面一层连接起来。否则，在微观测试中看到的 \u003ccode\u003ecallsame\u003c/code\u003e 水平的提高将无法在更大的应用中享受。 这也适用于其他一些情况。\u003c/li\u003e\n\u003cli\u003e应用新的派发机制来进一步优化结构。例如，一个方法调用的结果是调用特殊的 \u003ccode\u003eFALLBACK\u003c/code\u003e 方法，它的调用点可以很容易地改写成这样，为内联开辟道路。\u003c/li\u003e\n\u003cli\u003e进一步调整我们在优化后产生的代码。有大量的浪费应该可以比较直接地消除，还有一些机会可以调整去优化，使我们能够删除更多的指令，并且仍然保留去优化的能力。\u003c/li\u003e\n\u003cli\u003e继续我之前做的逃逸分析工作，现在应该是比较有价值的了。更加灵活的 \u003ccode\u003ecallstack/frame\u003c/code\u003e 处理也应该解除我在标量替换 \u003ccode\u003eInt\u003c/code\u003es 方面的工作（在内存管理方面需要非常小心，因为它们可能会框住一个大的整数，而不仅仅是一个本地整数）。\u003c/li\u003e\n\u003cli\u003e实现特殊化、JIT 和派发恢复的内联。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"感谢\"\u003e感谢\u003c/h3\u003e\n\u003cp\u003e我要感谢\u003ca href=\"https://www.perlfoundation.org/\"\u003eTPF\u003c/a\u003e和他们的捐助者提供的资金，使我有可能把大量的工作时间花在这项工作上。\u003c/p\u003e\n\u003cp\u003e虽然我对新派发机制的整体设计和大部分实现负有责任，但其他 MoarVM 和 Rakudo 的贡献者也付出了大量的工作 —— 特别是在过去的几个月里，随着最后的碎片落地，我们把注意力转移到让它为生产做好准备。我很感谢他们，不仅是对代码和调试的贡献，还有一路走来的支持和鼓励。合并的感觉很好，我期待着在未来的几个月和几年里在此基础上继续发展。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://6guts.wordpress.com/2021/09/29/the-new-moarvm-dispatch-mechanism-is-here/\"\u003ehttps://6guts.wordpress.com/2021/09/29/the-new-moarvm-dispatch-mechanism-is-here/\u003c/a\u003e\u003c/p\u003e\n","text":"大约 18 个月前，我开始着手进行 Raku 运行时 MoarVM 自成立以来最大的一组架构变化。这项工作最直接的起因是我们意识到，我们没有很好的方法来修复派发中的某个语义错误，而不会对整个系统的性能造成巨大的影响，也不会使已经在走运的优化中进一步增加复杂性。然而，对这种东西的需求在一段时间内是显而易见的：优化某些 Raku 语言特性的持续斗争，一堆性能机制的痛苦，这些机制都在解决同类问题，但每个都是针对特定的情况，以及一种感觉，即自从我创立 MoarVM 以来所学到的一切，都有可能做得更好。\n其结果是开发了一个新的通用派发机制。简而言之，它为我们提供了一个更加统一的架构，适用于所有类型的派发，使我们能够在一系列的语言特性上提供更好的性能，而这些特性迄今为止一直是冰冷的，同时也为新的优化提供了机会。\n今天，这项工作已经与 NQP（我们用于引导和实现编译器的 Raku 子集）和 Rakudo（完整的 Raku 编译器和标准库实现）中的相应变化合并。这意味着它将出现在2021年10月的版本中。\n在这篇文章中，我将概述你可以立即观察到的情况，以及随着我们继续建立新的派发架构所提供的可能性，你可能会在未来期待什么。\n大赢家 最大的改进涉及到我们以前确实没有架构可以做得更好的语言特性。它们涉及到派发 —— 也就是说，让调用有效地链接到目的地 —— 但运行时并没有为我们提供一种方法来\u0026quot;解释\u0026quot;它正在看一个派发，更不用说提供优化它所需的信息了。\n下图捕捉了一些这样的案例，并显示了改进的程度，从3.3倍到13.3倍不等。\n让我们快速看一下每一个问题。第一个，new-buf，问我们如何快速分配 Bufs。\nfor ^10_000_000 { Buf.new } 为什么说这是一个派发基准？因为 Buf 不是一个类，而是一个角色。当我们试图制造一个角色的实例时，它被 \u0026ldquo;punned\u0026rdquo; 成一个类。到现在为止，它的工作方式如下。\n 我们查找 new 方法 如果需要的话，find_method 方法会创建一个角色的双关，并将其缓存起来 它将返回一个转发闭包，该闭包接受参数，并将其交给在被双关的类上调用的同一方法，或者写作 Raku 代码，-\u0026gt; $role-discarded, |args { $pun.\u0026quot;$name\u0026quot;(|args) } 这个闭包将被调用，携带参数  这有一些不理想的后果。\n 虽然双关被缓存了，但我们仍然有一些开销来检查我们是否已经做了它。 参数被 slurp 和扁平化，这需要花费一些开销，而且\u0026hellip;\u0026hellip; \u0026hellip;\u0026hellip;失去了 callite 形状意味着我们无法查找方法的类型特化，因此也就失去了内联的机会。  有了新的派发机制，我们就有了在特定程序位置缓存常量和替换参数的方法。因此，当我们第一次遇到调用时，我们\n 如果需要的话，获得产生的角色双关 解决来自角色的类上的新方法的问题 产生一个派发程序，缓存这个已解决的方法，同时用双关替换角色参数。  在接下来的数千次调用中，我们解释这个派发程序。这仍然需要一些成本，但我们正在调用的方法已经被解决了，而且参数列表的重写也相当便宜。同时，在我们进入几百次迭代之后，在一个后台线程上，优化器开始工作。这时，参数重排的成本就完全消失了，而且新的参数非常小，可以被内联 —— 这时，缓冲区的分配被确定为无效，所以也就消失了。剩下的一些错过的机会意味着我们仍然留下了一个不完全是空的循环：它忙着确保它真的可以什么都不做，而不是什么都不做。\n下一步，用 where 子句进行多重派发。\nmulti fac($n where $n \u0026lt;= 1) { 1 } multi fac($n) { $n * fac($n - 1) } for ^1_000_000 { fac(5) } 这些以前真的很慢，因为。\n 一旦有 where 子句，我们就无法应用多派发缓存机制。 在候选者被选中的情况下，我们要运行两次 where 子句：一次是看我们是否应该选择该多候选者，另一次是在我们进入该候选者时。  有了新的机制，我们:\n 在第一次调用时，计算出一个多重派发计划：一个需要处理的候选者的链接列表 调用带有 where 子句的计划，在这种模式下，如果签名不能绑定，就会触发派发的恢复。(如果它绑定了，它就会运行到完成)。 如果绑定失败，则触发派发恢复，我们尝试下一个候选程序。  再一次，在设置阶段之后，我们解释派发程序。事实上，这就是我们目前运行速度较快的程度，因为专用程序还不知道如何翻译和进一步优化这种派发程序。(这就是为什么我知道它目前没有机会把这整个事情变成另一个空循环！）。) 因此，这里还有更多的东西可以利用；同时，恐怕你只能满足于10倍的速度。\n这是下一个:\nproto with-proto(Int $n) { 2 * {*} } multi with-proto(Int $n) { $n + 1 } sub invoking-nontrivial-proto() { for ^10_000_000 { with-proto(20) } } 同样，在顶层，我们也会把它变成一个空循环，但我们还没有达到这个目的。这种情况在以前并不可怕：我们确实可以使用多重派发缓存，但是为了做到这一点，我们也不得不分配一个参数捕获。这种需要也阻碍了将 proto 内联到调用者中的任何机会。现在这是有可能的。由于我们还不能翻译恢复正在进行的派发的派发程序，所以我们还不能进一步将被调用的多候选者内联到原语中。然而，我们现在有一个设计，可以让我们实现这一点。\n这整个派发恢复的概念 —— 我们开始做一个派发，后来需要访问参数或其他预先计算的数据，以便进行下一步的派发 —— 已经被证明是一个伟大的统一。它的最初想法来自于考虑像 callame 这样的东西。\nclass Parent { method m() { 1 } } class Child is Parent { method m() { 1 + callsame } } for ^10_000_000 { Child.m;} 一旦我开始关注这个问题，然后考虑到一个复杂的 proto 也想在 {*} 处继续派发，并且在 where 子句在 multi 中失败的情况下，它也想继续派发，我意识到这对很多事情都会很有用。教导优化器和 JIT 对恢复做一些好的事情将是一个令人头痛的问题 —— 但是，做一次就能使多种语言特性受益，这让我感到非常欣慰。\n总之，回到基准上。这是另一个\u0026quot;如果我们聪明的话，它就会是一个空循环\u0026quot;。以前，callsame 的成本很高，因为每次我们调用它时，它都必须计算出我们要恢复的是哪种派发以及要调用的方法集。我们还必须能够定位参数。涉及到动态变量，这也需要花费一些时间来查找，而且 —— 尽管是一个实现细节 —— 这些也会在自省中泄露出来，这并不理想。新的派发机制使这一切变得更有效率：我们可以缓存计算出的方法集（或包装器和 multi 候选方法，取决于上下文），然后走过它，而且不涉及动态变量（因此也不会泄露）。这体现了最大的速度提升 —— 由于我们还不能内联去掉调用名，它（目前）衡量的是人们在使用这种语言特性时可能期望的速度提升。 在未来，它注定会被优化为一个空循环。\nOO::Monitors 是一个在相对较热的路径上使用 callame 的模块，所以我想看看那里是否也会有速度的提升。\nuse OO::Monitors; monitor TestMonitor { method m() { 1 } } my $mon = TestMonitor.new; for ^1_000_000 { $mon.m(); } monitor 是一个围绕每个方法调用获取锁的类。该模块提供了一个自定义的元类，为该类添加了一个锁属性，然后对每个方法进行包装，使其获得该锁。除了 callsame 的参与之外，当然还有一些昂贵的东西在里面，但是对 callsame 的改进已经足以让我们在这个基准中看到3.3倍的速度。由于 OO::Monitors 被用于相当多的应用程序和模块（例如，Cro 使用它），这是很受欢迎的（是的，这里也会有更大的改进）。\n调用者端去容器化 我在其他一些微小测试中看到了一些不那么令人印象深刻，但仍然值得欢迎的改进。 即使是对 + 操作的基本多重派发。\nmy $i = 0; for ^10_000_000 { $i = $i + $_; } 我们的速度提高了1.6倍，这主要归功于我们用更少的守卫产生了更紧密的代码。 以前，我们在这种看似简单的情况下会出现重复的防护措施。infix:\u0026lt;+\u0026gt; 多重选择将被专门用于其第一个参数是 Scalar 容器中的 Int，第二个参数是不可变的 Int 的情况。因为 Scalar 是可变的，所以这个特殊化需要读取它，然后在继续之前保护读取的值，否则它可能会改变，我们会有内存安全的风险。当我们想内联这个候选值时，我们也想检查一下这个候选值是否真的适用，所以也要遵从 Scalar，并对其内容进行保护来做到这一点。我们可以而且确实消除了重复的守卫 —— 但是这些守卫是对值的两次不同的读取，所以这没有帮助。\n因为在新的派发机制中，我们可以重写参数，所以我们现在可以很容易地在调用方删除值周围的 Scalar 容器。事实上，这样做非常容易，我花了几个小时就完成了这个改动。这带来了很多好处。由于派发程序会自动消除重复的读取和守卫，多派发器的读取和守卫以及为了传递去容器化的值而进行的读取都会被凝聚起来。这意味着在专业化和 JIT 编译之前减少了重复的工作，而且在之后的专业化代码中也只有一个读和守。由于要传递的值已经被保护起来，我们可以简单地选择一个候选的两个 Int 值，这意味着在被调用者中也不需要再读和保护。\n一个不太明显的好处是，这意味着 Scalar 容器逃逸到被调用方的情况要少得多，但在未来的工作中会变得很重要。这为逃逸分析创造了更多机会。虽然 MoarVM 的逃逸分析器和标量替换器目前还相当有限，但我希望在不久的将来能回到它的工作中，并期望它现在能给我们带来比以前更多的价值。\n进一步的结果 前面显示的基准测试大多是\u0026quot;我们有多接近意识到我们有一个空循环\u0026quot;的性质，这对于评估优化器能多好地\u0026quot;看穿\u0026quot;派发是很有趣的。下面是一些在更\u0026quot;传统\u0026quot;的微基准上的进一步结果。\n复数的基准是这样的:\nmy $total-re = 0e0; for ^2_000_000 { my $x = 5 + 2i; my $y = 10 + 3i; my $z = $x * $x + $y; $total-re = $total-re + $z.re } say $total-re; 也就是说，只是一堆运算符（多派发）和方法调用，在这里我们确实使用了结果。目前，我们在这个基准上与 Python 并列，比 Ruby 稍稍落后（比用 Perl 的 Math::Complex 做同样的事情快了48倍，令人惊讶），但这也是一个在未来能看到逃逸分析和标量替换带来巨大好处的案例。\n散列读取的基准是:\nmy %h = a =\u0026gt; 10, b =\u0026gt; 12; my $total = 0; for ^10_000_000 { $total = $total + %h\u0026lt;a\u0026gt; + %h\u0026lt;b\u0026gt;; } 而散列存储一个是:\nmy @keys = \u0026#39;a\u0026#39;..\u0026#39;z\u0026#39;; for ^500_000 { my %h; for @keys { %h{$_} = 42; } } 这些改进与哈希算法本身没有任何关系，相反，由于调用方的去容器化，看起来主要是由于更紧凑的代码。这可能有一个次要的影响，即把事情带到内联的大小限制之下，这也是一个很大的帮助。2倍和1.85倍的加速因子是值得欢迎的，尽管我们真的可以再做同样水平的改进，以便我对我们的结果感到合理的满意。\n读取行的基准是:\nmy $fh = open \u0026#34;longfile\u0026#34;; my $chars = 0; for $fh.lines { $chars = $chars + .chars }; $fh.close; say $chars 同样，没有什么特定的 I/O 变得更快，但当派发 —— 把所有的部件组合在一起的胶水 —— 得到提升时，它就会帮助所有的地方。(我们在这个基准上也很有竞争力，尽管在 UTF-8 解码器不能采取它的\u0026quot;NFG 不可能应用\u0026quot;的快速路径时往往会慢一些）。)\n而在不那么微观的事情上\u0026hellip; 我也开始关注更大的程序，并从其他人那里听到他们的结果。这大多是令人鼓舞的。\n长期存在的 Text::CSV 基准 test-t 已经看到了大约 20% 的改进（感谢lizmat的测量）。\n一个简单的 Cro::HTTP 测试程序每秒多了 10% 的请求。\nMoarVM 的贡献者 dogbert 对一些脚本做了时间上的比较；最显著的改进看到从25秒下降到7秒，大多数都快了 10%-30%，有些没有变化，只有一个变慢了。\n在标准库 CORE.setting 的编译上，有大约2.5%的改进。然而，这里需要一大把盐：作为工作的一部分，编译器本身在很多地方发生了变化，还有一些基于查看配置文件的东西进行了调整，这些东西与派发并不真正相关。\nAgrammon，一个计算农业排放的应用程序，已经看到了大约9%的速度下降。我还没来得及仔细看，不过从剖析输出来看，取消优化的次数相对较多，这表明我们在某处做了一些不好的优化决定。\n较小的剖析器输出 一个未曾预料到的（我）但也是值得欢迎的改进是，剖析器的输出已经明显变小。 可能的原因包括:\n  派发机制支持产生值结果（从常量、输入参数或从输入参数读取的属性）。它完全取代了早期的机制，即\u0026quot;特殊化插件\u0026quot;，它可以将守卫映射到要调用的目标，但总是需要调用某个东西 —— 即使这个东西是身份函数。其逻辑是，这对任何真正的热代码来说并不重要，因为身份函数会被微不足道地内联掉。然而，由于仪器分析器的大小是通过调用树的路径数量的函数，从树中修剪对身份函数的调用负载会使它变小很多。\n  当一个值处于 sink 上下文时，我们曾经对 sink 方法进行了大量的调用。现在，如果我们看到这个类型只是从 Mu 那里继承了这个方法，我们就会完全删除这个调用（同样，它会被内联掉，但是一个更小的调用图就是一个更小的配置文件）。\n  多重派发缓存以前总是在错过缓存时调用原语，但当它在未来得到缓存点击时，就不会再调用 onlystar 原语。这意味着许多多重派发下的调用树在配置文件中是重复的。这不仅仅是一个大小的问题；这种影响在配置文件的报告中也显示出来，这有点令人讨厌。\n为了举例说明这种差别，我从 Agrammon 中提取了配置文件，以研究为什么它可能变得更慢。派发器工作之前的配置文件重达 87MB；而采用新的派发机制的配置文件则低于 30MB。这意味着剖析时使用的内存更少，事后将剖析结果写入磁盘的时间更短，工具加载剖析器输出的时间也更短。因此，现在可以更快地研究如何使事情变得更快。\n有什么坏消息吗？ 恐怕是的。启动时间受到了影响。虽然新的派发机制更加强大，将更多的复杂性从虚拟机中推到了高级代码中，并且更有利于达到更高的峰值性能，但它也有更高的预热时间。在写这篇文章的时候，对启动时间的影响似乎是 25% 左右。我希望我们能在10月的发布之前收回一些。\n什么会被打破？ 这种规模的变化总是伴随着一定的风险。我们将在下一次月度发布前几周进行合并，以便有时间进行更多的测试，并解决任何被报告的回归问题。然而，即使在达到合并的地步之前，我们已经。\n 确保它在正常情况下，以及在优化器压力下，都能通过规范测试套件（我们强迫它过早地优化一切，这样我们就能找出优化器的错误，以及 —— 考虑到我们强迫它做出的许多错误决定 —— 去优化的错误 使用 Blin 来运行生态系统模块的测试。这是准备 Rakudo 发布时的一个标准步骤，但在这种情况下，我们把它放在 new-disp 分支上。这发现了一些由于切换到新的派发机制而引起的退步，这些问题已经被解决。 对一些依赖不支持的内部 API 的模块进行了补丁或发送了拉取请求，这些内部 API 现在已经消失或改变，或者依赖其他实现细节。这些模块相对较少，而且令人高兴的是，其中许多模块通过迁移到支持的 API（这些 API 在编写模块时可能并不存在）得到了修复。  接下来会发生什么？ 正如我在这篇文章中提到的一些地方，虽然有一些改进可以立即享受，但也有一些新的机会可以进一步改进。我想到的一些事情包括。\n 重新设计 callframe 的进入和退出。这些仍然是明显的成本过高。在研究新的派发机制时发生的各种变化，为这一领域的改进提供了新的机会。 避免巨变的堆积。微观基准在隐藏这些方面非常出色。事实上，这里的 \u0026ldquo;callsame\u0026rdquo; 就是一个完美的例子! 我们在 callsame 中进行派发的恢复，所以整个程序中所有恢复的内联缓存条目都堆积在一个地方。我们所希望的是让它们在调用栈的下面一层连接起来。否则，在微观测试中看到的 callsame 水平的提高将无法在更大的应用中享受。 这也适用于其他一些情况。 应用新的派发机制来进一步优化结构。例如，一个方法调用的结果是调用特殊的 FALLBACK 方法，它的调用点可以很容易地改写成这样，为内联开辟道路。 进一步调整我们在优化后产生的代码。有大量的浪费应该可以比较直接地消除，还有一些机会可以调整去优化，使我们能够删除更多的指令，并且仍然保留去优化的能力。 继续我之前做的逃逸分析工作，现在应该是比较有价值的了。更加灵活的 callstack/frame 处理也应该解除我在标量替换 Ints 方面的工作（在内存管理方面需要非常小心，因为它们可能会框住一个大的整数，而不仅仅是一个本地整数）。 实现特殊化、JIT 和派发恢复的内联。  感谢 我要感谢TPF和他们的捐助者提供的资金，使我有可能把大量的工作时间花在这项工作上。\n虽然我对新派发机制的整体设计和大部分实现负有责任，但其他 MoarVM 和 Rakudo 的贡献者也付出了大量的工作 —— 特别是在过去的几个月里，随着最后的碎片落地，我们把注意力转移到让它为生产做好准备。我很感谢他们，不仅是对代码和调试的贡献，还有一路走来的支持和鼓励。合并的感觉很好，我期待着在未来的几个月和几年里在此基础上继续发展。\nhttps://6guts.wordpress.com/2021/09/29/the-new-moarvm-dispatch-mechanism-is-here/\n"},"name":"New Disp Is Here","published":"2021-09-30T00:00:00Z","summary":"New Disp Is Here","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-09-30-new-disp-is-here/"},{"content":{"html":"\u003ch1 id=\"haku-a-japanese-programming-language\"\u003eHaku: a Japanese programming language\u003c/h1\u003e\n\u003cp\u003eHaku 是一种基于文学性日语的自然语言功能编程语言。这篇文章是关于 Haku 在 \u003ca href=\"https://raku.org/\"\u003eRaku\u003c/a\u003e 中的实现。你不需要懂日语或\u003ca href=\"https://codeberg.org/wimvanderbauwhede/haku\"\u003e阅读 Haku 的文档\u003c/a\u003e。如果你不熟悉 Raku，你可能想阅读\u003ca href=\"https://wimvanderbauwhede.github.io/articles/roles-as-adts-in-raku/#raku-intro\"\u003e我的快速介绍\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e我确实假定你对解析、语法树和代码生成的概念很熟悉。如果你发现你对下面的内容缺乏背景，我推荐 Andrew Shitov 的系列文章\u003ca href=\"https://andrewshitov.com/creating-a-compiler-with-raku/\"\u003e《用 Raku 创建编译器》\u003c/a\u003e，它采取了一个逐步的方法。\u003c/p\u003e\n\u003ch2 id=\"haku\"\u003eHaku\u003c/h2\u003e\n\u003cp\u003eHaku 的目标是接近书面日语，因此它是由汉字、平假名和片假名这三种日语书写系统以及日语标点符号组合而成的。没有空格，Haku 不使用阿拉伯（甚至是罗马）数字，也不使用任何运算符。该语言的设计\u003ca href=\"https://codeberg.org/wimvanderbauwhede/haku\"\u003e在文档中得到了更详细的解释\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e下面是一个小的 Haku 程序的例子（更多的例子请看 \u003ca href=\"https://codeberg.org/wimvanderbauwhede/haku/src/branch/main/examples\"\u003erepo\u003c/a\u003e）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e本とは\n「魄から楽まで」を見せる\nの事です。\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这句话翻译过来就是:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;main is: to show \u0026lsquo;From Haku to Raku\u0026rsquo;\u0026rdquo;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e而 Raku 版本是这样的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFrom Haku to Raku\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字符串\u0026quot;本とは \u0026ldquo;和 \u0026ldquo;の事です\u0026quot;表示主程序的开始和结束。\u0026ldquo;魄から楽まで \u0026ldquo;是一个字符串常数。\u0026ldquo;见せる \u0026ldquo;是打印函数。\u0026lsquo;\u0026lsquo;を\u0026rsquo;表示前面的东西是函数的一个参数。示例代码中的换行符是可选的，纯粹是为了方便阅读。Haku 程序是一个没有空白或换行的单一字符串。\u003c/p\u003e\n\u003cp\u003e这个例子的实际生成的 Raku 代码是这样的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"k\"\u003ev\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eHakuPrelude\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e魄から楽まで\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了更接近文学性的日语，Haku 程序可以从右到左竖着写。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eの 忘 本 　 の 条 条 遠 　 の 物 忘\n事 れ と 　 こ を で い 　 こ で れ\nで か は 　 と 見 　 と 　 と 空 る\nす け 記 　 で せ 　 は 　 で 　 と\n。 て 憶 　 す る 　 　 　 す 　 は\n　 た は 　 。 　 　 　 　 。 　 　g\n　 遠 無 　 　 　 　 　 　 　 　 　\n　 い 、 　 　 　 　 　 　 　 　 　\n　 記 　 　 　 　 　 　 　 　 　 　\n　 憶 　 　 　 　 　 　 　 　 　 　\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为这个 Haku 程序生成的 Raku 代码同样非常简单。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"k\"\u003ev\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eHakuPrelude\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ewasureru\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \\\u003cspan class=\"n\"\u003emono\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e[]\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003etooi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \\\u003cspan class=\"n\"\u003ejou\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nf\"\u003eshow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ejou\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ehon\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\kioku\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eNil\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nf\"\u003ewasureru\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003etooi\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ekioku\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nf\"\u003ehon\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eHaku 是用 Raku 实现的。Haku 编译器是一个源到源的编译器（有时称为转译器），它从 Haku 源生成 Raku 源并执行它。Raku 在许多方面使编写这样的编译器变得容易。\u003c/p\u003e\n\u003ch2 id=\"parsing-using-grammars\"\u003eParsing using Grammars\u003c/h2\u003e\n\u003cp\u003e我决定用 Raku 来实现 Haku，主要是因为我想使用 Raku 的 \u003ca href=\"https://docs.raku.org/language/grammars\"\u003eGrammar\u003c/a\u003e 功能，而且它没有让我失望。Grammar 就像一个类，但它没有方法，而是有 rule 或 token，它们是解析器的构建块。任何 token 都可以在另一个 token 的定义中使用，例如用 \u003ccode\u003e\u0026lt;...\u0026gt;\u003c/code\u003e 将其括起来。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eadjective\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ei-adjective\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ena-adjective\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003ei-adjective\u003c/code\u003e 和 \u003ccode\u003ena-adjective\u003c/code\u003e 已经被分别定义，\u003ccode\u003eadjective\u003c/code\u003e 与其中一个相匹配。\u003c/p\u003e\n\u003cp\u003e我一直喜欢解析器组合器（如 Haskell 中的 \u003ca href=\"https://www.futurelearn.com/info/courses/functional-programming-haskell/0/steps/27222\"\u003eParsec\u003c/a\u003e），从某种角度看，Raku 的 grammar 也很相似。它们都是无扫描器，即没有单独的 token 化步骤，而且高度可组合。Parsec 提供的许多功能（如 \u003ccode\u003emany\u003c/code\u003e,\u003ccode\u003e oneOf\u003c/code\u003e, \u003ccode\u003esepBy\u003c/code\u003e）都可以通过 Raku 的 regex 来实现。\u003c/p\u003e\n\u003cp\u003eRaku 的 grammar 有几个特点，有助于使 Haku 的解析器易于实现。\u003c/p\u003e\n\u003ch3 id=\"excellent-unicode-support\"\u003eExcellent Unicode support\u003c/h3\u003e\n\u003cp\u003e我认为 Raku 的 Unicode 支持真的很好。例如，由于对 Unicode 块的支持，我可以简单地写出:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ekanji\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eBlock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCJK Unified Ideographs\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003erather than having to enumerate them all (there are 92,865 kanji in that block!). In fact, the \u003ccode\u003e\u0026lt;:...\u0026gt;\u003c/code\u003e syntax works for any Unicode property, not just for Blocks.\u003c/p\u003e\n\u003cp\u003eEven better: I have some kanji that are reserved as keywords:\u003c/p\u003e\n\u003cp\u003e而不是把它们全部列举出来（该块中有 92,865 个汉字！）。事实上， \u003ccode\u003e\u0026lt;:...\u0026gt;\u003c/code\u003e 语法适用于任何 Unicode 属性，而不仅仅是 Blocks。\u003c/p\u003e\n\u003cp\u003e甚至更好。我有一些汉字被保留为关键词。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ereserved-kanji\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e本\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e事\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了确保这些被排除在 Haku 的有效汉字之外，我可以简单地使用一个差集。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ekanji\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eBlock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCJK Unified Ideographs\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"sr\"\u003ereserved\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"sr\"\u003ekanji\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(有一个细节让我感到不安的是，用户定义的字符类的等效语法需要一个显式的  \u0026lsquo;+'：\u003ccode\u003etoken set-difference { \u0026lt; +set1 - set2\u0026gt; }\u003c/code\u003e)\u003c/p\u003e\n\u003ch3 id=\"tokens-和-rules\"\u003eTokens 和 rules\u003c/h3\u003e\n\u003cp\u003e幸运的是，Raku 默认不会假设你想解析可以忽略空白的东西，或者你想在空白处进行标记。如果你想忽略空白，你可以使用 \u003ccode\u003erule\u003c/code\u003e。但是在 Haku 中，不允许不相干的空白（除了某些位置的换行）。所以我在任何地方都使用 \u003ccode\u003etoken\u003c/code\u003e。(还有 \u003ca href=\"https://docs.raku.org/language/grammars#index-entry-declarator_token-Named_Regexes\"\u003e\u003ccode\u003eregex\u003c/code\u003e，可以回溯\u003c/a\u003e。在 Haku 的语法中我不需要它）。)\u003c/p\u003e\n\u003ch3 id=\"very-powerful-regexes\"\u003eVery powerful regexes\u003c/h3\u003e\n\u003cp\u003e作为一个 lambdacamel，我一直很喜欢 Perl 的 regexes，现在无处不在的 \u003ca href=\"https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions\"\u003ePCREs\u003c/a\u003e。然而，\u003ca href=\"https://docs.raku.org/language/regexes\"\u003eRaku 的 regexes\u003c/a\u003e 在功能、表现力和可读性方面远远超过了它。\u003c/p\u003e\n\u003cp\u003e首先，它们是可组合的：你可以用 \u003ccode\u003eregex\u003c/code\u003e 类型定义一个命名的 regex，然后用 \u003ccode\u003e\u0026lt;...\u0026gt;\u003c/code\u003e 语法在随后的 regex 中使用它。另外，设计时的谨慎使它们非常容易使用。例如，一个否定向前查看断言只是 \u003ccode\u003e\u0026lt;no\u0026gt; \u0026lt;!before \u0026lt;koto\u0026gt; \u0026gt;\u003c/code\u003e；而尝试顺序交替(\u003ccode\u003e||\u003c/code\u003e)和最长令牌匹配交替(\u003ccode\u003e|\u003c/code\u003e)的可用性是一个巨大的好处。我非常喜欢的另一件事是使一个字符类不被捕获的能力。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003elambda-expression\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003earu\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003evariable-list\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ede\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eexpression\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e只有 \u003ccode\u003e\u0026lt;variable-list\u0026gt;\u003c/code\u003e 和 \u003ccode\u003e\u0026lt;expression\u0026gt;\u003c/code\u003e 会被捕获，所以很多具体的语法可以在解析时被删除。\u003c/p\u003e\n\u003ch3 id=\"grammar-composition-via-roles\"\u003eGrammar composition via roles\u003c/h3\u003e\n\u003cp\u003eRoles (\u0026lsquo;mixins\u0026rsquo; in Ruby, \u0026lsquo;traits\u0026rsquo; in Rust) define interfaces and/or implementation of those interfaces.\nI found this a better fit for my purpose than the also-supported class inheritance. For example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003eNouns\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eCharacters\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003esa\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eさ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eki\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eき\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 一線 is OK,  一 is not OK, 線 is OK\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003enoun\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enumber-kanji\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enon-number-kanji\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekanji\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003esa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eki\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;]\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003eIdentifiers\u003c/span\u003e \n\u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eVerbs\u003c/span\u003e \n\u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eNouns\u003c/span\u003e \n\u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eAdjectives\u003c/span\u003e \n\u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eVariables\u003c/span\u003e \n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003enominaliser\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eno\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekoto\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekoto\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edesu\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# Identifiers are variables,\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# noun-style, verb-style\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# and adjective-style function names\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003evariable\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003everb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enominaliser\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enoun\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esura\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eadjective\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(Although I would like a list syntax for this, something like \u003ccode\u003erole Identifiers does Verbs, Nouns, Adjectives, Variables {...}\u003c/code\u003e.)\u003c/p\u003e\n\u003cp\u003eThere is a lot more to grammars and regexes. The nice Raku folks on Twitter recommended me the book \u003ca href=\"https://link.springer.com/book/10.1007/978-1-4842-3228-6\"\u003e\u0026ldquo;Parsing with Perl 6 Regexes and Grammars\u0026rdquo; by Moritz Lenz\u003c/a\u003e and it was very useful in particular for debugging of the grammar and handling of error messages.\u003c/p\u003e\n\u003ch2 id=\"abstract-syntax-tree-using-roles\"\u003eAbstract syntax tree using roles\u003c/h2\u003e\n\u003cp\u003eI like to implement the abstract syntax tree (AST) as an algebraic data type, the way it is usually done in Haskell. In Raku, one way to do this is to use parametrised Roles \u003ca href=\"https://wimvanderbauwhede.github.io/articles/roles-as-adts-in-raku/\"\u003eas I explained in an earlier post\u003c/a\u003e. Most of the AST maps directly to the toplevel parser for each role in my grammar, for example the lambda expression:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003eLambdaExpr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"nv\"\u003e@lambda-args\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$expr\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eHakuExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eVariable\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.args\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@lambda-args\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eHakuExpr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.expr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$expr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"from-parse-tree-to-abstract-syntax-tree\"\u003eFrom parse tree to abstract syntax tree\u003c/h2\u003e\n\u003cp\u003eRaku\u0026rsquo;s grammars provide a very convenient mechanism for turning the parse tree into an AST, called \u003ca href=\"https://docs.raku.org/language/grammars#index-entry-Actions\"\u003eActions\u003c/a\u003e. Essentially, you create a class with a method with the same name as the token or rule in the Grammar. Each method gets the \u003ca href=\"https://docs.raku.org/type/Match\"\u003eMatch object\u003c/a\u003e (\u003ccode\u003e$/\u003c/code\u003e) created by the token as a positional argument.\u003c/p\u003e\n\u003cp\u003eFor example, to populate the AST node for a lambda expression from the parse tree:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003elambda-expression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@args\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;variable-list\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$expr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;expression\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"n\"\u003eLambdaExpr\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e@args\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$expr\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe capturing tokens used in the \u003ccode\u003elambda-expression\u003c/code\u003e token are accessible via the notation \u003ccode\u003e$\u0026lt;...\u0026gt;\u003c/code\u003e which is shorthand for \u003ccode\u003e$/\u0026lt;...\u0026gt;\u003c/code\u003e, i.e. they are named attributes of the current match object.\u003c/p\u003e\n\u003cp\u003eIn the Haku grammar, there are several tokens where the match is one from a list of alternatives, for example the \u003ccode\u003eexpression\u003c/code\u003e token, which enumerates anything that is an expression in Haku. For such tokens I use the following code to \u0026ldquo;inherit\u0026rdquo; from the constituent tokens:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eexpression\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n        \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"k\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBecause every match is a map with as keys the names of the capturing tokens, and because we know that in this case there will be only one token selected, we know the first element in the corresponding \u003ccode\u003evalues\u003c/code\u003e list will be the match for that particular token.\u003c/p\u003e\n\u003ch2 id=\"code-generation\"\u003eCode generation\u003c/h2\u003e\n\u003cp\u003eThe \u003ccode\u003ehaku.raku\u003c/code\u003e main program essentially does this:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hon_parse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \n    \u003cspan class=\"n\"\u003eHaku\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$program_str\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eHakuActions\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hon_raku_code\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \n    \u003cspan class=\"nf\"\u003eppHakuProgram\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$hon_parse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe Haku program string is parsed using the Haku grammar and the methods defined in the corresponding HakuActions class are used to populate the AST. The toplevel parse tree node must be \u003ccode\u003e$\u0026lt;haku-program\u0026gt;\u003c/code\u003e, and the \u003ccode\u003emade\u003c/code\u003e method of this node returns the AST node \u003ccode\u003eHakuProgram\u003c/code\u003e. The routine \u003ccode\u003eppHakuProgram\u003c/code\u003e is the toplevel routine in the module \u003ccode\u003eRaku\u003c/code\u003e, which is the Raku emitter for Haku. (There is also a Scheme emitter, in the module \u003ccode\u003eScheme\u003c/code\u003e.)\u003c/p\u003e\n\u003cp\u003eSo \u003ccode\u003eppHakuProgram($hon_parse.made)\u003c/code\u003e pretty-prints the HakuProgram AST node and thus the entire Haku program as Raku code.\u003c/p\u003e\n\u003cp\u003eWhat I like about the role-based AST is that you can pattern match against the variants of a type using \u003ccode\u003egiven/when\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eppHakuExpr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\\\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e            \n    \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003eBindExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003eFunctionApplyExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003eListExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003eMapExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e        \n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e  \u003cspan class=\"n\"\u003eIfExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e   \n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003eLetExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003eLambdaExpr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e        \n        \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eTODO:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e        \n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe Raku code corresponding to the Haku AST is quite straightforward, but there are a few things worth noting:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBecause Haku\u0026rsquo;s variables are immutable, I use the \u003ccode\u003e\\\u003c/code\u003e notation which means I don\u0026rsquo;t have to build a variable table with the sigils.\u003c/li\u003e\n\u003cli\u003eBecause Haku is functional, \u003ccode\u003elet\u003c/code\u003e and \u003ccode\u003eif\u003c/code\u003e are expressions, so in Raku I wrap them in a \u003ccode\u003edo {}\u003c/code\u003e block.\u003c/li\u003e\n\u003cli\u003eFor partial application I use \u003ccode\u003e.assuming()\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eIn Haku, strings are lists. In Raku they aren\u0026rsquo;t. I created a small Prelude of functions, and the list manipulation functions in that Prelude use pattern matching on the type with \u003ccode\u003egiven/when\u003c/code\u003e to see if the argument is a string or a list.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"running-the-generated-raku-code\"\u003eRunning the generated Raku code\u003c/h2\u003e\n\u003cp\u003eRunning the generated Raku code is simple: I write the generated Raku code to a module and \u003ccode\u003erequire\u003c/code\u003e it. The generated code ends with a call to \u003ccode\u003ehon()\u003c/code\u003e, the main function in a Haku program, so this automatically executes the program.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"c1\"\u003e# Write the parsed program to a module \u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHon.rakumod\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eopen\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eput\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hon_raku_code\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Require the module. This will execute the program\u003c/span\u003e\n\u003cspan class=\"k\"\u003erequire\u003c/span\u003e \u003cspan class=\"n\"\u003eHon\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOther things Haku makes really easy is to create command-line flags and document their usage:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl6\" data-lang=\"perl6\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eUSAGE\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"k\"\u003eQ\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOH/;\u003c/span\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    Usage: haku \u0026lt;Haku program, written horizontally or vertically, utf-8 text file\u0026gt;\n\u003c/span\u003e\u003cspan class=\"s\"\u003e        [--tategaki, -t] : do not run the program but print it vertically.\n\u003c/span\u003e\u003cspan class=\"s\"\u003e        [--miseru, -m] : just print the Raku source code, don\u0026#39;t execute.\n\u003c/span\u003e\u003cspan class=\"s\"\u003e        ...\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003eEOH\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eunit\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$src_file\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$tategaki\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e   \n          \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$miseru\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e);\u003c/span\u003e  \n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eUSAGE\u003c/code\u003e is called when \u003ccode\u003eMAIN\u003c/code\u003e is called with the wrong (or no) arguments. Arguments of \u003ccode\u003eMAIN\u003c/code\u003e prefixed with \u003ccode\u003e:\u003c/code\u003e are flags. \u003ccode\u003eunit sub\u003c/code\u003e means that anything after this declaration is part of the MAIN program, so no need for \u003ccode\u003e{...}\u003c/code\u003e.\u003c/p\u003e\n\u003ch2 id=\"to-conclude\"\u003eTo conclude\u003c/h2\u003e\n\u003cp\u003eThis article shows the lazy programmer\u0026rsquo;s way to creating your own programming language: let Raku do all the hard work.\u003c/p\u003e\n\u003cp\u003eOr to express it with a Haku program:\u003c/p\u003e\n\u003cp\u003e　本真とは\n　コンパイラを書いて、\n　プログラムを書いて、\n　プログラムを走らす\n　と言う事です。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ethe truth:\nwrite the compiler,\nwrite the program,\nrun the program.\u003c/p\u003e\n\u003c/blockquote\u003e\n","text":"Haku: a Japanese programming language Haku 是一种基于文学性日语的自然语言功能编程语言。这篇文章是关于 Haku 在 Raku 中的实现。你不需要懂日语或阅读 Haku 的文档。如果你不熟悉 Raku，你可能想阅读我的快速介绍。\n我确实假定你对解析、语法树和代码生成的概念很熟悉。如果你发现你对下面的内容缺乏背景，我推荐 Andrew Shitov 的系列文章《用 Raku 创建编译器》，它采取了一个逐步的方法。\nHaku Haku 的目标是接近书面日语，因此它是由汉字、平假名和片假名这三种日语书写系统以及日语标点符号组合而成的。没有空格，Haku 不使用阿拉伯（甚至是罗马）数字，也不使用任何运算符。该语言的设计在文档中得到了更详细的解释。\n下面是一个小的 Haku 程序的例子（更多的例子请看 repo）。\n本とは 「魄から楽まで」を見せる の事です。 这句话翻译过来就是:\n \u0026ldquo;main is: to show \u0026lsquo;From Haku to Raku\u0026rsquo;\u0026rdquo;\n 而 Raku 版本是这样的:\nsay \u0026#39;From Haku to Raku\u0026#39;; 字符串\u0026quot;本とは \u0026ldquo;和 \u0026ldquo;の事です\u0026quot;表示主程序的开始和结束。\u0026ldquo;魄から楽まで \u0026ldquo;是一个字符串常数。\u0026ldquo;见せる \u0026ldquo;是打印函数。\u0026lsquo;\u0026lsquo;を\u0026rsquo;表示前面的东西是函数的一个参数。示例代码中的换行符是可选的，纯粹是为了方便阅读。Haku 程序是一个没有空白或换行的单一字符串。\n这个例子的实际生成的 Raku 代码是这样的:\nuse v6; use HakuPrelude; sub main() { show(\u0026#39;魄から楽まで\u0026#39;) } main(); 为了更接近文学性的日语，Haku 程序可以从右到左竖着写。\nの 忘 本 の 条 条 遠 の 物 忘 事 れ と こ を で い こ で れ で か は と 見 と と 空 る す け 記 で せ は で と 。 て 憶 す る す は た は 。 。 g 遠 無 い 、 記 憶 为这个 Haku 程序生成的 Raku 代码同样非常简单。\nuse v6; use HakuPrelude; sub wasureru( \\mono) {[]} sub tooi( \\jou) {show(jou)} sub hon() { my \\kioku = Nil; wasureru(tooi(kioku)) } hon(); Haku 是用 Raku 实现的。Haku 编译器是一个源到源的编译器（有时称为转译器），它从 Haku 源生成 Raku 源并执行它。Raku 在许多方面使编写这样的编译器变得容易。\nParsing using Grammars 我决定用 Raku 来实现 Haku，主要是因为我想使用 Raku 的 Grammar 功能，而且它没有让我失望。Grammar 就像一个类，但它没有方法，而是有 rule 或 token，它们是解析器的构建块。任何 token 都可以在另一个 token 的定义中使用，例如用 \u0026lt;...\u0026gt; 将其括起来。\ntoken adjective {\u0026lt;i-adjective\u0026gt;|\u0026lt;na-adjective\u0026gt;} i-adjective 和 na-adjective 已经被分别定义，adjective 与其中一个相匹配。\n我一直喜欢解析器组合器（如 Haskell 中的 Parsec），从某种角度看，Raku 的 grammar 也很相似。它们都是无扫描器，即没有单独的 token 化步骤，而且高度可组合。Parsec 提供的许多功能（如 many, oneOf, sepBy）都可以通过 Raku 的 regex 来实现。\nRaku 的 grammar 有几个特点，有助于使 Haku 的解析器易于实现。\nExcellent Unicode support 我认为 Raku 的 Unicode 支持真的很好。例如，由于对 Unicode 块的支持，我可以简单地写出:\ntoken kanji {\u0026lt;:Block(\u0026#39;CJK Unified Ideographs\u0026#39;)\u0026gt;} rather than having to enumerate them all (there are 92,865 kanji in that block!). In fact, the \u0026lt;:...\u0026gt; syntax works for any Unicode property, not just for Blocks.\nEven better: I have some kanji that are reserved as keywords:\n而不是把它们全部列举出来（该块中有 92,865 个汉字！）。事实上， \u0026lt;:...\u0026gt; 语法适用于任何 Unicode 属性，而不仅仅是 Blocks。\n甚至更好。我有一些汉字被保留为关键词。\ntoken reserved-kanji {\u0026#39;本\u0026#39;|\u0026#39;事\u0026#39;|...} 为了确保这些被排除在 Haku 的有效汉字之外，我可以简单地使用一个差集。\ntoken kanji {\u0026lt;:Block(\u0026#39;CJK Unified Ideographs\u0026#39;) - reserved-kanji \u0026gt;} (有一个细节让我感到不安的是，用户定义的字符类的等效语法需要一个显式的 \u0026lsquo;+'：token set-difference { \u0026lt; +set1 - set2\u0026gt; })\nTokens 和 rules 幸运的是，Raku 默认不会假设你想解析可以忽略空白的东西，或者你想在空白处进行标记。如果你想忽略空白，你可以使用 rule。但是在 Haku 中，不允许不相干的空白（除了某些位置的换行）。所以我在任何地方都使用 token。(还有 regex，可以回溯。在 Haku 的语法中我不需要它）。)\nVery powerful regexes 作为一个 lambdacamel，我一直很喜欢 Perl 的 regexes，现在无处不在的 PCREs。然而，Raku 的 regexes 在功能、表现力和可读性方面远远超过了它。\n首先，它们是可组合的：你可以用 regex 类型定义一个命名的 regex，然后用 \u0026lt;...\u0026gt; 语法在随后的 regex 中使用它。另外，设计时的谨慎使它们非常容易使用。例如，一个否定向前查看断言只是 \u0026lt;no\u0026gt; \u0026lt;!before \u0026lt;koto\u0026gt; \u0026gt;；而尝试顺序交替(||)和最长令牌匹配交替(|)的可用性是一个巨大的好处。我非常喜欢的另一件事是使一个字符类不被捕获的能力。\ntoken lambda-expression {\u0026lt;.aru\u0026gt;\u0026lt;variable-list\u0026gt;\u0026lt;.de\u0026gt;\u0026lt;expression\u0026gt;} 只有 \u0026lt;variable-list\u0026gt; 和 \u0026lt;expression\u0026gt; 会被捕获，所以很多具体的语法可以在解析时被删除。\nGrammar composition via roles Roles (\u0026lsquo;mixins\u0026rsquo; in Ruby, \u0026lsquo;traits\u0026rsquo; in Rust) define interfaces and/or implementation of those interfaces. I found this a better fit for my purpose than the also-supported class inheritance. For example:\nrole Nouns does Characters { token sa {\u0026#39;さ\u0026#39;} token ki {\u0026#39;き\u0026#39;} # 一線 is OK, 一 is not OK, 線 is OK token noun {\u0026lt;number-kanji\u0026gt;?\u0026lt;non-number-kanji\u0026gt;\u0026lt;kanji\u0026gt;*[\u0026lt;sa\u0026gt;|\u0026lt;ki\u0026gt;]?} } role Identifiers does Verbs does Nouns does Adjectives does Variables { token nominaliser {|\u0026lt;no\u0026gt;\u0026lt;!before\u0026lt;koto\u0026gt;\u0026gt;|\u0026lt;koto\u0026gt;\u0026lt;!before\u0026lt;desu\u0026gt;\u0026gt;} # Identifiers are variables, # noun-style, verb-style # and adjective-style function names token identifier {|\u0026lt;variable\u0026gt;|\u0026lt;verb\u0026gt;\u0026lt;nominaliser\u0026gt;?|\u0026lt;noun\u0026gt;\u0026lt;.sura\u0026gt;?|\u0026lt;adjective\u0026gt;} } (Although I would like a list syntax for this, something like role Identifiers does Verbs, Nouns, Adjectives, Variables {...}.)\nThere is a lot more to grammars and regexes. The nice Raku folks on Twitter recommended me the book \u0026ldquo;Parsing with Perl 6 Regexes and Grammars\u0026rdquo; by Moritz Lenz and it was very useful in particular for debugging of the grammar and handling of error messages.\nAbstract syntax tree using roles I like to implement the abstract syntax tree (AST) as an algebraic data type, the way it is usually done in Haskell. In Raku, one way to do this is to use parametrised Roles as I explained in an earlier post. Most of the AST maps directly to the toplevel parser for each role in my grammar, for example the lambda expression:\nrole LambdaExpr[ @lambda-args, $expr] does HakuExpr { has Variable @.args = @lambda-args; has HakuExpr $.expr = $expr; } From parse tree to abstract syntax tree Raku\u0026rsquo;s grammars provide a very convenient mechanism for turning the parse tree into an AST, called Actions. Essentially, you create a class with a method with the same name as the token or rule in the Grammar. Each method gets the Match object ($/) created by the token as a positional argument.\nFor example, to populate the AST node for a lambda expression from the parse tree:\nmethod lambda-expression($/) { my @args = $\u0026lt;variable-list\u0026gt;.made; my $expr = $\u0026lt;expression\u0026gt;.made; make LambdaExpr[@args,$expr].new; } The capturing tokens used in the lambda-expression token are accessible via the notation $\u0026lt;...\u0026gt; which is shorthand for $/\u0026lt;...\u0026gt;, i.e. they are named attributes of the current match object.\nIn the Haku grammar, there are several tokens where the match is one from a list of alternatives, for example the expression token, which enumerates anything that is an expression in Haku. For such tokens I use the following code to \u0026ldquo;inherit\u0026rdquo; from the constituent tokens:\nmethod expression($/) { make $/.values[0].made; } Because every match is a map with as keys the names of the capturing tokens, and because we know that in this case there will be only one token selected, we know the first element in the corresponding values list will be the match for that particular token.\nCode generation The haku.raku main program essentially does this:\nmy $hon_parse = Haku.parse($program_str, :actions(HakuActions)); my $hon_raku_code = ppHakuProgram($hon_parse.made); The Haku program string is parsed using the Haku grammar and the methods defined in the corresponding HakuActions class are used to populate the AST. The toplevel parse tree node must be $\u0026lt;haku-program\u0026gt;, and the made method of this node returns the AST node HakuProgram. The routine ppHakuProgram is the toplevel routine in the module Raku, which is the Raku emitter for Haku. (There is also a Scheme emitter, in the module Scheme.)\nSo ppHakuProgram($hon_parse.made) pretty-prints the HakuProgram AST node and thus the entire Haku program as Raku code.\nWhat I like about the role-based AST is that you can pattern match against the variants of a type using given/when:\nsub ppHakuExpr(\\h) { given h { when BindExpr { ... } when FunctionApplyExpr { ... } when ListExpr { ... } when MapExpr { ... } when IfExpr { ... } when LetExpr { ... } when LambdaExpr { ... } ... default { die \u0026#34;TODO:\u0026#34; ~ h.raku; } } } The Raku code corresponding to the Haku AST is quite straightforward, but there are a few things worth noting:\n Because Haku\u0026rsquo;s variables are immutable, I use the \\ notation which means I don\u0026rsquo;t have to build a variable table with the sigils. Because Haku is functional, let and if are expressions, so in Raku I wrap them in a do {} block. For partial application I use .assuming(). In Haku, strings are lists. In Raku they aren\u0026rsquo;t. I created a small Prelude of functions, and the list manipulation functions in that Prelude use pattern matching on the type with given/when to see if the argument is a string or a list.  Running the generated Raku code Running the generated Raku code is simple: I write the generated Raku code to a module and require it. The generated code ends with a call to hon(), the main function in a Haku program, so this automatically executes the program.\n# Write the parsed program to a module  my $fh = \u0026#39;Hon.rakumod\u0026#39;.IO.open: :w; $fh.put: $hon_raku_code; $fh.close; # Require the module. This will execute the program require Hon; Other things Haku makes really easy is to create command-line flags and document their usage:\nsub USAGE() { print Q:to/EOH/;Usage: haku \u0026lt;Haku program, written horizontally or vertically, utf-8 text file\u0026gt; [--tategaki, -t] : do not run the program but print it vertically. [--miseru, -m] : just print the Raku source code, don\u0026#39;t execute. ... EOH } unit sub MAIN( Str $src_file, Bool :t($tategaki) = False, Bool :m($miseru) = False, ... ); USAGE is called when MAIN is called with the wrong (or no) arguments. Arguments of MAIN prefixed with : are flags. unit sub means that anything after this declaration is part of the MAIN program, so no need for {...}.\nTo conclude This article shows the lazy programmer\u0026rsquo;s way to creating your own programming language: let Raku do all the hard work.\nOr to express it with a Haku program:\n　本真とは コンパイラを書いて、 プログラムを書いて、 プログラムを走らす と言う事です。\n the truth: write the compiler, write the program, run the program.\n "},"name":"Haku a Japanese Programming Language","published":"2021-09-24T00:00:00Z","summary":"Haku a Japanese Programming Language","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-09-24-haku-a-japanese-programming-language/"},{"content":{"html":"\u003cul\u003e\n\u003cli\u003efilter_map\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eRust 中有一个 filter_map 函数, Raku 也可以有:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$text\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e1\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003efrond .25  289\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003e3.1415 estuary\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$text\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"nb\"\u003eEmpty\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fn1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fn2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fn2\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003efn1\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"nb\"\u003eEmpty\u003c/span\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ezip-tail\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e...*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a-longer-name\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a-longer-name\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erotor\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ebinary filter\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e«\u0026amp;\u0026amp;»\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003efoo bar baz buz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003eTrue\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eFlase\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eTrue\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@b\u003c/span\u003e \u003cspan class=\"o\"\u003e«\u0026amp;\u0026amp;»\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003efind\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e\u0026amp;first:\u003c/span\u003e \u003cspan class=\"n\"\u003ep\u003c/span\u003e \u003cspan class=\"c1\"\u003e# or :v, :kv\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e\u0026amp;min\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e\u0026amp;max\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e\u0026amp;minmax\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u0026amp;sort\u003c/li\u003e\n\u003cli\u003e\u0026amp;reduce\u003c/li\u003e\n\u003cli\u003e\u0026amp;produce\u003c/li\u003e\n\u003cli\u003e\u0026amp;map\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"c1\"\u003e# remove\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;pred\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# count\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;pred\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# replace\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;pred\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# find_end, lower_bound, upper_bound\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;pred\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# with :p etc for key\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# partition\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclassify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;pred\u003c/span\u003e\u003cspan class=\"p\"\u003e)){\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ePermutations\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# next permutation\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epermutations\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# prev permutation\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epermutations\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"c1\"\u003e#zip-tail (again)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# is sorted\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# is sorted until\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003elast\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# adjacent difference\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# adjacent find\u003c/span\u003e\n\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"o\"\u003e[==]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003emismatch, aka zip_find\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e!=\u003c/span\u003e \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@b\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e!===\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e«\u0026amp;\u0026amp;»\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eis partitioned\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eskip\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;pred\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;pred\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"o\"\u003e«\u0026amp;\u0026amp;»\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e?*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003einner product\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e[+]\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"n\"\u003eZx\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#exclusive scan\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eproduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;[+]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[^\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# transfrom reduce\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fn2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# transfrom inclusive scan\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fn\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eproduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fn2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":" filter_map  Rust 中有一个 filter_map 函数, Raku 也可以有:\nmy $text = \u0026#34;1\\nfrond .25 289\\n3.1415 estuary\\n\u0026#34;; $text.split(/\\s+/).map( {$_ ~~ /\\d/ ?? $_*$_ !! Empty }); @a.map(\u0026amp;fn1).grep(\u0026amp;fn2); @a.map({\u0026amp;fn2 ?? .\u0026amp;fn1 !! Empty});  zip-tail  @a Z @a[1...*]; @a Z @a.skip; @a-longer-name Z @a-longer-name.skip; @a.\u0026amp;{$_ Z .skip}; @a.rotor(2 =\u0026gt; -1);  binary filter  @a «\u0026amp;\u0026amp;» @b; @a = \u0026lt;foo bar baz buz\u0026gt;; @b = [True, False, Flase, True]; (@b «\u0026amp;\u0026amp;» @a).grep(* != False)  find  \u0026amp;first: p # or :v, :kv \u0026amp;min \u0026amp;max \u0026amp;minmax  \u0026amp;sort \u0026amp;reduce \u0026amp;produce \u0026amp;map  # remove @a.grep: !\u0026amp;pred # count +@a.grep: \u0026amp;pred # replace @a.map: {\u0026amp;pred($_) ?? $new $_} # find_end, lower_bound, upper_bound @a.first(\u0026amp;pred, :end); # with :p etc for key # partition @a.classify(+(\u0026amp;pred)){1, 0}  Permutations  @a == @b # next permutation @a.permutations[0] # prev permutation @a.permutations[*-1] #zip-tail (again) @a.\u0026amp;{$_ Z .skip} # is sorted @a.\u0026amp;{$_ Z\u0026lt; .skip}.all # is sorted until @a.\u0026amp;{$_ Z .skip}.map({.[0] \u0026lt; .[1] || last}).sum # adjacent difference @a.\u0026amp;{$_ Z- .skip} @a.\u0026amp;{.skip Z- $_} # adjacent find first({[==] $_}, @a.\u0026amp;{$_ Z .skip})[0]  mismatch, aka zip_find  first(* != False, (@b Z!=== @a) «\u0026amp;\u0026amp;» @a)  is partitioned  (@a.\u0026amp;{$_ Z .skip}.map({ ?(\u0026amp;pred(.[0]) \u0026amp; !\u0026amp;pred(.[1])) }) «\u0026amp;\u0026amp;» @a).first(?*)  inner product  [+] @a Zx @b #exclusive scan (0, |@a).produce(\u0026amp;[+])[^(*-1)] # transfrom reduce @a.map(\u0026amp;fn).reduce(\u0026amp;fn2) # transfrom inclusive scan @a.map(\u0026amp;fn).produce(\u0026amp;fn2) "},"name":"105 C++ Algorithms in One Line of Raku","published":"2021-08-07T00:00:00Z","summary":"105 C++ Algorithms in One Line of Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-08-06-105-c-plus-plus-algorithms-in-one-line-of-raku/"},{"content":{"html":"\u003cp\u003e你是一个刚成立的小公司里的一名软件工程师, 有天晚上你收到了一封来自 CEO 的电子邮件:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e亲爱的工程师,\u003c/p\u003e\n\u003cp\u003e​    好新闻！看起来我们的网站越来越受欢迎。我们要变的有钱了! 每秒钟有成千上万的人在同时访问我们的网站, 而且还在快速增长。\u003c/p\u003e\n\u003cp\u003e我们必须立即识别出谁的通信量最大。幸运的是我的朋友给我发送了一份巨大的 IP 地址和名字的列表。很酷不是吗？你能写一段程序接收我们大量的访问者, 把它和地址/名字列表相比, 并创建一些统计吗？我的意思是, 生成一个国家的名字列表。\u003c/p\u003e\n\u003cp\u003e做好了的话我给你们开个披萨聚会。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003e邮件的附件文件包含了一个 IP 地址和名字的列表。写一个程序来统计下有多少 IP 访问了你的网站。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"输入描述\"\u003e输入描述\u003c/h2\u003e\n\u003cp\u003e输入来自两部分。第一个是一个文本文件, 包含 IP 地址范围。每行一项,使用两个空格分割 IP 和名字。\u003c/p\u003e\n\u003cp\u003e第二个文件是一个 IP 地址的列表, 每行一个, 它们是必须被查询的IP。\u003c/p\u003e\n\u003ch2 id=\"ip-输入样本\"\u003eIP 输入样本\u003c/h2\u003e\n\u003cp\u003e输入是有包含两个 IP 地址和一个跟 IP 范围关联的名字的大量行组成。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e123.45.17.8 123.45.123.45 University of Vestige\n123.50.1.1 123.50.10.1 National Center for Pointlessness\n188.0.0.3 200.0.0.250 Mayo Tarkington\n200.0.0.251 200.0.0.255 Daubs Haywire Committee\n200.0.1.1 200.255.255.255 Geopolitical Encyclopedia\n222.222.222.222 233.233.233.233 SAP Rostov\n250.1.2.3 250.4.5.6 Shavian Refillable Committee\n123.45.100.0 123.60.32.1 United Adverbs\n190.0.0.1 201.1.1.1 Shavian Refillable Committee\n238.0.0.1 254.1.2.3 National Center for Pointlessness\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e注意: 这些 IP 范围不能保证是 IPv4 \u0026ldquo;子网\u0026rdquo;。这意味着它们可能不能精确地由基于前缀的 CIDR 块来表示。\u003c/p\u003e\n\u003cp\u003e范围可以重叠。可能多余2层深。\u003c/p\u003e\n\u003cp\u003e可可有多个范围关联同一个名字。\u003c/p\u003e\n\u003ch2 id=\"查询输入样本\"\u003e查询输入样本\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e250.1.3.4\n123.50.1.20\n189.133.73.57\n123.50.1.21\n250.1.2.4\n123.50.1.21\n250.1.3.100\n250.1.3.5\n188.0.0.5\n123.50.1.100\n123.50.2.34\n123.50.1.100\n123.51.100.52\n127.0.0.1\n123.50.1.22\n123.50.1.21\n188.0.0.5\n123.45.101.100\n123.45.31.52\n230.230.230.230\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"输出格式化\"\u003e输出格式化\u003c/h2\u003e\n\u003cp\u003e倒序输出访问次数。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e8 - National Center for Pointlessness\n4 - Shavian Refillable Committee\n3 - Mayo Tarkington\n2 - University of Vestige\n1 - SAP Rostov\n1 - United Adverbs\n1 - \u0026lt;unknown\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"解释\"\u003e解释\u003c/h2\u003e\n\u003cp\u003e这儿是一个输入 IP 和它的名字的映射:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eNational Center for Pointlessness\n123.50.1.20\n123.50.1.21\n123.50.1.22\n123.50.1.21\n123.50.1.21\n123.50.1.100\n123.50.1.100\n123.50.2.34\n\nShavian Refillable Committee\n250.1.2.4\n250.1.3.4\n250.1.3.5\n250.1.3.100\n\nMayo Tarkington\n188.0.0.5\n188.0.0.5\n189.133.73.57\n\nUniversity of Vestige\n123.45.101.100\n123.45.31.52\n\nSAP Rostov\n230.230.230.230\n\nUnited Adverbs\n123.51.100.52\n\n\u0026lt;unknown\u0026gt;\n127.0.0.1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esmls 的解决方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eip-to-number\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ip\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003edo\u003c/span\u003e \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ip\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e24\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u0026lt;\u003c/span\u003e  \u003cspan class=\"mi\"\u003e8\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\n        \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u0026lt;\u003c/span\u003e  \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eIntervalTree\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.min\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!min\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003ediv\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e@!intervals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eIntervalTree\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!left\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eIntervalTree\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!right\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$min\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$min\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$max\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003einsert\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$end\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$end\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!min\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!left\u003c/span\u003e \u003cspan class=\"o\"\u003e//=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!min\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelsif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!max\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!right\u003c/span\u003e \u003cspan class=\"o\"\u003e//=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!max\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nv\"\u003e@!intervals\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$end\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$end-$start\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eprepare\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e@!intervals\u003c/span\u003e\u003cspan class=\"o\"\u003e.=\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$!left\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprepare\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!left\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$!right\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprepare\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!right\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003elookup\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$best\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!center\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!left\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elookup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!left\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n                                  \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!right\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elookup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!right\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$best\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nv\"\u003e@!intervals\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$best\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$best\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n                                     \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"nv\"\u003e$best\u003c/span\u003e\n              \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"nv\"\u003e@!intervals\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ip-file\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$query-file\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eIntervalTree\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eip-to-number\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e255.255.255.255\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ip-file\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$end\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eip-to-number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nf\"\u003eip-to-number\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$end\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprepare\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$query-file\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ip\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elookup\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eip-to-number\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ip\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ip\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026lt;unknown\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;}\u0026#34;;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"你是一个刚成立的小公司里的一名软件工程师, 有天晚上你收到了一封来自 CEO 的电子邮件:\n 亲爱的工程师,\n​ 好新闻！看起来我们的网站越来越受欢迎。我们要变的有钱了! 每秒钟有成千上万的人在同时访问我们的网站, 而且还在快速增长。\n我们必须立即识别出谁的通信量最大。幸运的是我的朋友给我发送了一份巨大的 IP 地址和名字的列表。很酷不是吗？你能写一段程序接收我们大量的访问者, 把它和地址/名字列表相比, 并创建一些统计吗？我的意思是, 生成一个国家的名字列表。\n做好了的话我给你们开个披萨聚会。\n  邮件的附件文件包含了一个 IP 地址和名字的列表。写一个程序来统计下有多少 IP 访问了你的网站。\n 输入描述 输入来自两部分。第一个是一个文本文件, 包含 IP 地址范围。每行一项,使用两个空格分割 IP 和名字。\n第二个文件是一个 IP 地址的列表, 每行一个, 它们是必须被查询的IP。\nIP 输入样本 输入是有包含两个 IP 地址和一个跟 IP 范围关联的名字的大量行组成。\n123.45.17.8 123.45.123.45 University of Vestige 123.50.1.1 123.50.10.1 National Center for Pointlessness 188.0.0.3 200.0.0.250 Mayo Tarkington 200.0.0.251 200.0.0.255 Daubs Haywire Committee 200.0.1.1 200.255.255.255 Geopolitical Encyclopedia 222.222.222.222 233.233.233.233 SAP Rostov 250.1.2.3 250.4.5.6 Shavian Refillable Committee 123.45.100.0 123.60.32.1 United Adverbs 190.0.0.1 201.1.1.1 Shavian Refillable Committee 238.0.0.1 254.1.2.3 National Center for Pointlessness 注意: 这些 IP 范围不能保证是 IPv4 \u0026ldquo;子网\u0026rdquo;。这意味着它们可能不能精确地由基于前缀的 CIDR 块来表示。\n范围可以重叠。可能多余2层深。\n可可有多个范围关联同一个名字。\n查询输入样本 250.1.3.4 123.50.1.20 189.133.73.57 123.50.1.21 250.1.2.4 123.50.1.21 250.1.3.100 250.1.3.5 188.0.0.5 123.50.1.100 123.50.2.34 123.50.1.100 123.51.100.52 127.0.0.1 123.50.1.22 123.50.1.21 188.0.0.5 123.45.101.100 123.45.31.52 230.230.230.230 输出格式化 倒序输出访问次数。\n8 - National Center for Pointlessness 4 - Shavian Refillable Committee 3 - Mayo Tarkington 2 - University of Vestige 1 - SAP Rostov 1 - United Adverbs 1 - \u0026lt;unknown\u0026gt; 解释 这儿是一个输入 IP 和它的名字的映射:\nNational Center for Pointlessness 123.50.1.20 123.50.1.21 123.50.1.22 123.50.1.21 123.50.1.21 123.50.1.100 123.50.1.100 123.50.2.34 Shavian Refillable Committee 250.1.2.4 250.1.3.4 250.1.3.5 250.1.3.100 Mayo Tarkington 188.0.0.5 188.0.0.5 189.133.73.57 University of Vestige 123.45.101.100 123.45.31.52 SAP Rostov 230.230.230.230 United Adverbs 123.51.100.52 \u0026lt;unknown\u0026gt; 127.0.0.1 smls 的解决方法:\nsub ip-to-number ($ip) { do given $ip.split(\u0026#39;.\u0026#39;) { .[0] +\u0026lt; 24 + .[1] +\u0026lt; 16 + .[2] +\u0026lt; 8 + .[3] +\u0026lt; 0 } } class IntervalTree { has $.min; has $.max; has $!center = ($!min + $!max) div 2; has @!intervals; has IntervalTree $!left; has IntervalTree $!right; method new ($min, $max) { self.bless(:$min, :$max) } method insert (|c ($start, $end, $name)) { if $end \u0026lt; $!center and $!min \u0026lt; $!center - 1 { ($!left //= self.new($!min, $!center)).insert(|c) } elsif $start \u0026gt; $!center and $!max \u0026gt; $!center { ($!right //= self.new($!center, $!max)).insert(|c) } else { @!intervals.push: [$start, $end, $name, $end-$start] } } method prepare { @!intervals.=sort(*[3]); $!left .prepare if $!left; $!right.prepare if $!right; } method lookup ($n) { my $best = ($n \u0026lt; $!center ?? ($!left .lookup($n) if $!left) !! ($!right.lookup($n) if $!right)); $best ?? @!intervals.first({ return $best if .[3] \u0026gt; $best[3]; .[0] \u0026lt;= $n \u0026lt;= .[1] }) // $best !! @!intervals.first({ .[0] \u0026lt;= $n \u0026lt;= .[1] }) } } sub MAIN ($ip-file, $query-file) { my $index = IntervalTree.new(0, ip-to-number \u0026#39;255.255.255.255\u0026#39;); for $ip-file.IO.lines { my ($start, $end, $name) = .split(\u0026#39;\u0026#39;, 3); $index.insert(ip-to-number($start), ip-to-number($end), $name); } $index.prepare; for $query-file.IO.lines -\u0026gt; $ip { my $name = $index.lookup(ip-to-number $ip)[2]; say \u0026#34;$ip{$name // \u0026#39;\u0026lt;unknown\u0026gt;\u0026#39;}\u0026#34;; } } "},"name":"Guess Who","published":"2021-07-11T00:00:00Z","summary":"Guess Who","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-11-20-guess-who/"},{"content":{"html":"\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nb\"\u003eList\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nb\"\u003eIterable\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nb\"\u003ePositional\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eList\u003c/strong\u003e 以序列化的方式存储 items并且潜在是惰性的。\u003c/p\u003e\n\u003cp\u003e默认列表和数组的索引从 0 开始。\u003c/p\u003e\n\u003cp\u003e你可以给列表中的元素赋值如果它们是容器的话。使用数组以使列表中的每个元素存储在容器中。\u003c/p\u003e\n\u003ch2 id=\"itemsflattening-和-sigils\"\u003eItems、Flattening 和 Sigils\u003c/h2\u003e\n\u003cp\u003e在 Raku 中, 把 \u003cstrong\u003eList\u003c/strong\u003e 赋值给一个标量变量不会丢失信息。不同之处在于迭代通常会把标量中的列表当作单个元素。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 三次迭代\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 一次迭代\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eitem\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 一次迭代\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 三次迭代\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eLists\u003c/strong\u003e 通常会插值(展开)除非它们通过一个 item(scalar)容器访问:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@flat\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# two elements\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@nested\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eitem\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# two elements\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e.item\u003c/code\u003e 通常能被写为 \u003ccode\u003e$( ... )\u003c/code\u003e, 而在数组变量上甚至写为 \u003ccode\u003e$@a\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"methods\"\u003eMethods\u003c/h2\u003e\n\u003ch3 id=\"elems\"\u003eelems\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003eelems\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eelems\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回列表中元素的个数。\u003c/p\u003e\n\u003ch3 id=\"end\"\u003eend\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回列表中最后一个元素的索引\u003c/p\u003e\n\u003ch3 id=\"keys\"\u003ekeys\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回一个索引列表( 例如 \u003ccode\u003e0..(@list.elems-1)\u003c/code\u003e )\u003c/p\u003e\n\u003ch3 id=\"values\"\u003evalues\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回列表的一份拷贝。\u003c/p\u003e\n\u003ch3 id=\"kv\"\u003ekv\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003ekv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ekv\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回索引和值的交替的列表。例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekv\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pairs\"\u003epairs\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003epairs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003epairs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回一个 pairs 的列表, 使用索引作为键, 列表值作为键值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epairs\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 0 =\u0026gt; \u0026#39;a\u0026#39;, 1 =\u0026gt; \u0026#39;b\u0026#39;, 2 =\u0026gt; \u0026#39;c\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"join\"\u003ejoin\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$separator\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$separator\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把列表中元素当作字符串, 在元素之间插入 \u003ccode\u003e$separator\u003c/code\u003e 并把所有东西连接成单个字符串。\u003c/p\u003e\n\u003cp\u003e例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e, \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# \u0026#39;a, b, c\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"map\"\u003emap\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;code\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@elems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;code\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对每个元素调用 \u003ccode\u003e\u0026amp;code\u003c/code\u003e 并且把值收集到另外一个列表中并返回它。这个过程是惰性的。\u003ccode\u003e\u0026amp;code\u003c/code\u003e只在返回值被访问的时候调用。\u003c/p\u003e\n\u003cp\u003e例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eWHAT\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Str Int Rat Int Str\u003c/span\u003e\n\u003cspan class=\"nb\"\u003emap\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 5 1 8 2 5\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"grep\"\u003egrep\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eMu\u003c/span\u003e \u003cspan class=\"nv\"\u003e$matcher\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@elems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e  \u003cspan class=\"nb\"\u003eMu\u003c/span\u003e \u003cspan class=\"nv\"\u003e$matcher\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回一个使用 \u003ccode\u003e$matcher\u003c/code\u003e 智能匹配的惰性列表。元素是以出现在原列表中的顺序返回的。\u003c/p\u003e\n\u003cp\u003e例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# 1 42\u003c/span\u003e\n\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# hello 3.142857 world\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"first\"\u003efirst\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eMu\u003c/span\u003e \u003cspan class=\"nv\"\u003e$matcher\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@elems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e  \u003cspan class=\"nb\"\u003eMu\u003c/span\u003e \u003cspan class=\"nv\"\u003e$matcher\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回列表中第一个匹配 \u003ccode\u003e$matcher\u003c/code\u003e 的元素, 当没有匹配值时, 失败。\u003c/p\u003e\n\u003cp\u003e例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 42\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$f\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eComplex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"no\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eComplex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 1+2i\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$f\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \n\u003cspan class=\"c1\"\u003e# Failure.new(exception =\u0026gt; X::AdHoc.new(payload =\u0026gt; \u0026#34;No values matched\u0026#34;))\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"classify\"\u003eclassify\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003eclassify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;mapper\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eHash:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eclassify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;mapper\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eHash:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据映射器把一列值转换成代表那些值的类别的散列; 散列的每个键代表着将要归入列表的一个或多个值的类别。比如字符个数,  元素多少, 键值就是根据 mapper 得到的这个类别下的元素,  它来自于原始列表：\u003c/p\u003e\n\u003cp\u003e例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eclassify\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eodd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# (\u0026#34;odd\u0026#34; =\u0026gt; [1, 7, 3], \u0026#34;even\u0026#34; =\u0026gt; [6, 2]).hash;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclassify\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# (\u0026#34;5\u0026#34; =\u0026gt; [\u0026#34;hello\u0026#34;, \u0026#34;world\u0026#34;], \u0026#34;1\u0026#34; =\u0026gt; [1], \u0026#34;8\u0026#34; =\u0026gt; [22/7], \u0026#34;2\u0026#34; =\u0026gt; [42]).hash\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"bool\"\u003eBool\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果列表至少含有一个元素则返回 True, 如果列表为空则返回 False。\u003c/p\u003e\n\u003ch3 id=\"str\"\u003eStr\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字符串化列表中的元素并使用空格把这些元素连接起来。( 和 \u003ccode\u003e.join(' ')\u003c/code\u003e 一样)。\u003c/p\u003e\n\u003ch3 id=\"int\"\u003eInt\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回列表中元素的数量(和 \u003ccode\u003e.elems\u003c/code\u003e 一样)\u003c/p\u003e\n\u003ch3 id=\"pick\"\u003epick\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$count\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从调用者身上随机返回 \u003ccode\u003e$count\u003c/code\u003e 个不重复的元素。 如果 \u003ccode\u003e*\u003c/code\u003e 作为 \u003ccode\u003e$count\u003c/code\u003e 传递进来或 \u003ccode\u003e$count\u003c/code\u003e 大于或等于列表的大小, 那么就以随机序列的方式返回列表中的所有元素。\u003c/p\u003e\n\u003cp\u003e例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# b\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# c a e\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# e d a b c\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"roll\"\u003eroll\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$count\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回一个 \u003ccode\u003e$count\u003c/code\u003e 个元素的惰性列表, 每个元素都从列表中随机选择。每个随机选择都是独立的.\u003c/p\u003e\n\u003cp\u003e如果给 \u003ccode\u003e$count\u003c/code\u003e 传递了 \u003ccode\u003e*\u003c/code\u003e 号, 则返回一个惰性的, 从原列表中随机选取元素的无限列表。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# b\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# c c e\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eroll\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# b a e d a e b c\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$random_digits\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$random_digits\u003c/span\u003e\u003cspan class=\"o\"\u003e[^\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# 3 8 7 6 0 1 3 2 0 8 8 5 8 0 5\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"eager\"\u003eeager\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eeager\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e急切地计算列表中的所有元素, 并返回调用者。如果列表标示它是 \u0026ldquo;konw inifinite\u0026rdquo; 的, 急切求值可以停止在探测到的无限的点上。\u003c/p\u003e\n\u003ch3 id=\"reverse\"\u003ereverse\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以相反的顺序返回一个含有相同元素的列表。\n注意 \u003ccode\u003ereverse\u003c/code\u003e 总是指反转列表中的元素, 如果你想反转字符串中的字符, 那么使用 flip。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ehello world!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e      \u003cspan class=\"c1\"\u003e#  world! hello\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# 9 8 7 6 5 4 3 2 1 0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"rotate\"\u003erotate\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e以 \u003ccode\u003e$n\u003c/code\u003e 个元素旋转列表, 这把原列表分成两部分, 旋转中心就是在这两部分之间:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# \u0026lt;c d e a b\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# \u0026lt;e a b c d\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"sort\"\u003esort\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@elems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e      \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;by\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@elems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e      \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:,\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;by\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e列表排序, 最小的元素首先。默认使用 \u003ccode\u003einfix:\u0026lt;cmp\u0026gt;\u003c/code\u003e 排序列表中的元素。\u003c/p\u003e\n\u003cp\u003e如果提供了 \u003ccode\u003e\u0026amp;by\u003c/code\u003e, 那么它接收两个参数, 它由列表元素对儿调用, 并且应该返回 \u003ccode\u003eOrder::Increase\u003c/code\u003e, \u003ccode\u003eOrder::Same\u003c/code\u003e 或 \u003ccode\u003eOrder::Decrease\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果 \u003ccode\u003e\u0026amp;by\u003c/code\u003e 只接受一个参数, 那么列表元素是通过 \u003ccode\u003eby($a) cmp by($b)\u003c/code\u003e 来排序的。\u003ccode\u003e\u0026amp;by\u003c/code\u003e 的返回值被缓存起来, 以使每个列表元素只调用一次 \u003ccode\u003e\u0026amp;by\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# -4 -1 0 2 3 7\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003eabs\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# 0 -1 2 3 -4 7\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$^b\u003c/span\u003e \u003cspan class=\"ow\"\u003eleg\u003c/span\u003e \u003cspan class=\"nv\"\u003e$^a\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 7 3 2 0 -4 -1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"reduce\"\u003ereduce\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;with\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@elems\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ereduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;with\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把 \u003ccode\u003e\u0026amp;with\u003c/code\u003e 应用到列表中的第一个和第二个值上, 然后把 \u003ccode\u003e\u0026amp;with\u003c/code\u003e 应用到那个计算的结果值和第三个值上, 以此类推。按照那种方式生成单个项。\u003c/p\u003e\n\u003cp\u003e注意 \u003ccode\u003ereduce\u003c/code\u003e 是一个隐式的循环。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ereduce\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -4\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"splice\"\u003esplice\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003esplice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$elems\u003c/span\u003e\u003cspan class=\"o\"\u003e?,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@replacement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003esplice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$elems\u003c/span\u003e\u003cspan class=\"o\"\u003e?,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@replacement\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从列表中删除从 \u003ccode\u003e$start\u003c/code\u003e 索引开始的 \u003ccode\u003e$elems\u003c/code\u003e 个元素, 返回删除的元素并用 \u003ccode\u003e@replacement\u003c/code\u003e 来代替它。如果省略了 \u003ccode\u003e$elems\u003c/code\u003e, 所有从 \u003ccode\u003e$index\u003c/code\u003e 开始的元素都被删除。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e f g\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eM N O P\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# c d e\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e# a b M N O P f g\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"pop\"\u003epop\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从列表中移除并返回最后一项。如果列表为空则失败。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# b\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003epop\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# a\u003c/span\u003e\n\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003epop\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# Element popped from empty list\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"push\"\u003epush\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把 \u003ccode\u003e@values\u003c/code\u003e 添加到列表的末尾, 并返回修改后的列表。 如果列表是无限列表则失败。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                   \u003cspan class=\"c1\"\u003e# a b c 1 3 5 7 9 11\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"shift\"\u003eshift\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从列表中移除并返回第一项元素。如果列表为空则失败。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# a\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# b\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# Element shifted from empty list\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"unshift\"\u003eunshift\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003eunshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eunshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e添加 \u003ccode\u003e@values\u003c/code\u003e 到列表的开头, 并返回修改后的列表。如果列表是无限列表则失败。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eunshift\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 1 3 5 7 9 11 a b c\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch5 id=\"combinations\"\u003ecombinations\u003c/h5\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ecombinations\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e \u003cspan class=\"nv\"\u003e$of\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e          \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ecombinations\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eRange:D\u003c/span\u003e \u003cspan class=\"nv\"\u003e$of\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003ecombinations\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$k\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                     \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eInt 变体返回调用者列表所有的 \u003ccode\u003e$of-combinations\u003c/code\u003e 组合。例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e|\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecombinations\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ea|b\na|c\nb|c\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e因为  \u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo; 的所有 2-combinations 是  [\u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;], [\u0026lsquo;a\u0026rsquo;, \u0026lsquo;c\u0026rsquo;], [\u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo;].\u003c/p\u003e\n\u003cp\u003eRange 变体把所有单独的组合组合到单个列表中, 所以:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e|\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecombinations\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ea|b\na|c\nb|c\na|b|c\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e因为那是一个所有 2-和3-combinations 组合的列表。\u003c/p\u003e\n\u003cp\u003e子例程 \u003ccode\u003ecombinations($n, $k)\u003c/code\u003e 等价于 \u003ccode\u003e(^$n).combinations($k)\u003c/code\u003e, 所以：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003ecombinations\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"permutations\"\u003epermutations\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003epermutations\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eList\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e    \u003cspan class=\"nb\"\u003epermutations\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e      \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eList:D\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回列表所有可能的组合作为数组的列表。所以:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e|\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epermutations\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ea|b|c\na|c|b\nb|a|c\nb|c|a\nc|a|b\nc|b|a\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003epermutations\u003c/code\u003e 把所有列表元素当作可区别的, 所以 \u003ccode\u003e(1, 1, 2).permutations\u003c/code\u003e 仍旧返回 6 个元素的列表, 即使只有 3 个不同的排列。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003epermutations($n)\u003c/code\u003e 等价于 \u003ccode\u003e(^$n).permutations\u003c/code\u003e, 所以:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003epermutations\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1 2 3\n1 3 2\n2 1 3\n2 3 1\n3 1 2\n3 2 1\n\u003c/code\u003e\u003c/pre\u003e","text":"my class List is Iterable does Positional { .. } List 以序列化的方式存储 items并且潜在是惰性的。\n默认列表和数组的索引从 0 开始。\n你可以给列表中的元素赋值如果它们是容器的话。使用数组以使列表中的每个元素存储在容器中。\nItems、Flattening 和 Sigils 在 Raku 中, 把 List 赋值给一个标量变量不会丢失信息。不同之处在于迭代通常会把标量中的列表当作单个元素。\nmy @a = 1, 2, 3; for @a { } # 三次迭代 my $s = @a; for $s { } # 一次迭代 for @a.item { } # 一次迭代 for $s.list { } # 三次迭代 Lists 通常会插值(展开)除非它们通过一个 item(scalar)容器访问:\nmy @a = 1, 2, 3; my @flat = @a, @a; # two elements my @nested = @a.item, @a.item; # two elements .item 通常能被写为 $( ... ), 而在数组变量上甚至写为 $@a。\nMethods elems multi sub elems($list) returns Int:D multi method elems(List:D:) returns Int:D 返回列表中元素的个数。\nend multi sub end($list) returns Int:D multi method end(List:D:) returns Int:D 返回列表中最后一个元素的索引\nkeys multi sub keys($list) returns List:D multi method keys(List:D:) returns List:D 返回一个索引列表( 例如 0..(@list.elems-1) )\nvalues multi sub values($list) returns List:D multi method values(List:D:) returns List:D 返回列表的一份拷贝。\nkv multi sub kv($list) returns List:D multi method kv(List:D:) returns List:D 返回索引和值的交替的列表。例如：\n\u0026lt;a b c\u0026gt;.kv 返回:\n0, \u0026#39;a\u0026#39;, 1, \u0026#39;b\u0026#39;, 2, \u0026#39;c\u0026#39; pairs multi sub pairs($list) returns List:D multi method pairs(List:D:) returns List:D 返回一个 pairs 的列表, 使用索引作为键, 列表值作为键值。\n\u0026lt;a b c\u0026gt;.pairs # 0 =\u0026gt; \u0026#39;a\u0026#39;, 1 =\u0026gt; \u0026#39;b\u0026#39;, 2 =\u0026gt; \u0026#39;c\u0026#39; join multi sub join($separator, *@list) returns Str:D multi method join(List:D: $separator) returns Str:D 把列表中元素当作字符串, 在元素之间插入 $separator 并把所有东西连接成单个字符串。\n例如:\njoin \u0026#39;, \u0026#39;, \u0026lt;a b c\u0026gt;; # \u0026#39;a, b, c\u0026#39; map multi sub map(\u0026amp;code, *@elems) returns List:D multi method map(List:D: \u0026amp;code) returns List:D 对每个元素调用 \u0026amp;code 并且把值收集到另外一个列表中并返回它。这个过程是惰性的。\u0026amp;code只在返回值被访问的时候调用。\n例子:\n(\u0026#39;hello\u0026#39;, 1, 22/7, 42, \u0026#39;world\u0026#39;).map: { .WHAT.raku }; # Str Int Rat Int Str map *.Str.chars, \u0026#39;hello\u0026#39;, 1, 22/7, 42, \u0026#39;world\u0026#39;; # 5 1 8 2 5 grep multi sub grep(Mu $matcher, *@elems) returns List:D multi method grep(List:D: Mu $matcher) returns List:D 返回一个使用 $matcher 智能匹配的惰性列表。元素是以出现在原列表中的顺序返回的。\n例子:\n(\u0026#39;hello\u0026#39;, 1, 22/7, 42, \u0026#39;world\u0026#39;).grep: Int; # 1 42 grep { .Str.chars \u0026gt; 3 }, \u0026#39;hello\u0026#39;, 1, 22/7, 42, \u0026#39;world\u0026#39;; # hello 3.142857 world first multi sub first(Mu $matcher, *@elems) multi method first(List:D: Mu $matcher) 返回列表中第一个匹配 $matcher 的元素, 当没有匹配值时, 失败。\n例子:\nsay (1, 22/7, 42).first: * \u0026gt; 5; # 42 say $f = (\u0026#39;hello\u0026#39;, 1, 22/7, 42, \u0026#39;world\u0026#39;).first: Complex; (\u0026#39;hello\u0026#39;, 1, 22/7, 42, \u0026#39;world\u0026#39;,1+2i).first: Complex; # 1+2i say $f.raku; # Failure.new(exception =\u0026gt; X::AdHoc.new(payload =\u0026gt; \u0026#34;No values matched\u0026#34;)) classify multi sub classify(\u0026amp;mapper, *@values) returns Hash:D multi method classify(List:D: \u0026amp;mapper) returns Hash:D 根据映射器把一列值转换成代表那些值的类别的散列; 散列的每个键代表着将要归入列表的一个或多个值的类别。比如字符个数, 元素多少, 键值就是根据 mapper 得到的这个类别下的元素, 它来自于原始列表：\n例子：\nsay classify { $_ %% 2 ?? \u0026#39;even\u0026#39; !! \u0026#39;odd\u0026#39; }, (1, 7, 6, 3, 2); # (\u0026#34;odd\u0026#34; =\u0026gt; [1, 7, 3], \u0026#34;even\u0026#34; =\u0026gt; [6, 2]).hash; say (\u0026#39;hello\u0026#39;, 1, 22/7, 42, \u0026#39;world\u0026#39;).classify: { .Str.chars }; # (\u0026#34;5\u0026#34; =\u0026gt; [\u0026#34;hello\u0026#34;, \u0026#34;world\u0026#34;], \u0026#34;1\u0026#34; =\u0026gt; [1], \u0026#34;8\u0026#34; =\u0026gt; [22/7], \u0026#34;2\u0026#34; =\u0026gt; [42]).hash Bool multi method Bool(List:D:) returns Bool:D 如果列表至少含有一个元素则返回 True, 如果列表为空则返回 False。\nStr multi method Str(List:D:) returns Str:D 字符串化列表中的元素并使用空格把这些元素连接起来。( 和 .join(' ') 一样)。\nInt multi method Int(List:D:) return Int:D 返回列表中元素的数量(和 .elems 一样)\npick multi sub pick($count, *@list) returns List:D multi method pick(List:D: $count = 1) 从调用者身上随机返回 $count 个不重复的元素。 如果 * 作为 $count 传递进来或 $count 大于或等于列表的大小, 那么就以随机序列的方式返回列表中的所有元素。\n例子:\nsay \u0026lt;a b c d e\u0026gt;.pick; # b say \u0026lt;a b c d e\u0026gt;.pick: 3; # c a e say \u0026lt;a b c d e\u0026gt;.pick: *; # e d a b c roll multi sub roll($count, *@list) returns List:D multi method roll(List:D: $count = 1) 返回一个 $count 个元素的惰性列表, 每个元素都从列表中随机选择。每个随机选择都是独立的.\n如果给 $count 传递了 * 号, 则返回一个惰性的, 从原列表中随机选取元素的无限列表。\nsay \u0026lt;a b c d e\u0026gt;.roll; # b say \u0026lt;a b c d e\u0026gt;.roll: 3; # c c e say roll 8, \u0026lt;a b c d e\u0026gt;; # b a e d a e b c my $random_digits := (^10).roll(*);1; say $random_digits[^15]; # 3 8 7 6 0 1 3 2 0 8 8 5 8 0 5 eager multi method eager(List:D:) returns List:D 急切地计算列表中的所有元素, 并返回调用者。如果列表标示它是 \u0026ldquo;konw inifinite\u0026rdquo; 的, 急切求值可以停止在探测到的无限的点上。\nreverse multi sub reverse(*@list ) returns List:D multi method reverse(List:D:) returns List:D 以相反的顺序返回一个含有相同元素的列表。 注意 reverse 总是指反转列表中的元素, 如果你想反转字符串中的字符, 那么使用 flip。\nsay \u0026lt;hello world!\u0026gt;.reverse # world! hello say reverse ^10 # 9 8 7 6 5 4 3 2 1 0 rotate multi sub rotate(@list, Int:D $n = 1) returns List:D multi method rotate(List:D: Int:D $n = 1) returns List:D 以 $n 个元素旋转列表, 这把原列表分成两部分, 旋转中心就是在这两部分之间:\n\u0026lt;a b c d e\u0026gt;.rotate(2); # \u0026lt;c d e a b\u0026gt; \u0026lt;a b c d e\u0026gt;.rotate(-1); # \u0026lt;e a b c d\u0026gt; sort multi sub sort(*@elems) returns List:D multi sub sort(\u0026amp;by, *@elems) returns List:D multi method sort(List:D:) returns List:D multi method sort(List:D:, \u0026amp;by) returns List:D 列表排序, 最小的元素首先。默认使用 infix:\u0026lt;cmp\u0026gt; 排序列表中的元素。\n如果提供了 \u0026amp;by, 那么它接收两个参数, 它由列表元素对儿调用, 并且应该返回 Order::Increase, Order::Same 或 Order::Decrease。\n如果 \u0026amp;by 只接受一个参数, 那么列表元素是通过 by($a) cmp by($b) 来排序的。\u0026amp;by 的返回值被缓存起来, 以使每个列表元素只调用一次 \u0026amp;by。\nsay (3, -4, 7, -1, 2, 0).sort; # -4 -1 0 2 3 7 say (3, -4, 7, -1, 2, 0).sort: *.abs; # 0 -1 2 3 -4 7 say (3, -4, 7, -1, 2, 0).sort: { $^b leg $^a }; # 7 3 2 0 -4 -1 reduce multi sub reduce(\u0026amp;with, *@elems) multi method reduce(List:D: \u0026amp;with) 把 \u0026amp;with 应用到列表中的第一个和第二个值上, 然后把 \u0026amp;with 应用到那个计算的结果值和第三个值上, 以此类推。按照那种方式生成单个项。\n注意 reduce 是一个隐式的循环。\nsay (1, 2, 3).reduce: * - *; # -4 splice multi sub splice(@list, $start, $elems?, *@replacement) returns List:D multi method splice(List:D: $start, $elems?, *@replacement) returns List:D 从列表中删除从 $start 索引开始的 $elems 个元素, 返回删除的元素并用 @replacement 来代替它。如果省略了 $elems, 所有从 $index 开始的元素都被删除。\nmy @foo = \u0026lt;a b c d e f g\u0026gt;; say @foo.splice(2, 3, \u0026lt;M N O P\u0026gt;); # c d e say @foo; # a b M N O P f g pop multi sub pop(List:D ) multi method pop(List:D:) 从列表中移除并返回最后一项。如果列表为空则失败。\n\u0026gt; my @foo = \u0026lt;a b\u0026gt;; \u0026gt; @foo.pop; # b \u0026gt; pop @foo # a \u0026gt; pop @foo # Element popped from empty list push multi sub push(List:D, *@values) returns List:D multi method push(List:D: *@values) returns List:D 把 @values 添加到列表的末尾, 并返回修改后的列表。 如果列表是无限列表则失败。\nmy @foo = \u0026lt;a b c\u0026gt;; @foo.push: 1, 3 ... 11; say @foo; # a b c 1 3 5 7 9 11 shift multi sub shift(List:D ) multi method shift(List:D:) 从列表中移除并返回第一项元素。如果列表为空则失败。\nmy @foo = \u0026lt;a b\u0026gt;; say @foo.shift; # a say @foo.shift; # b say @foo.shift; # Element shifted from empty list unshift multi sub unshift(List:D, *@values) returns List:D multi method unshift(List:D: *@values) returns List:D 添加 @values 到列表的开头, 并返回修改后的列表。如果列表是无限列表则失败。\nmy @foo = \u0026lt;a b c\u0026gt;; @foo.unshift: 1, 3 ... 11; say @foo; # 1 3 5 7 9 11 a b c combinations multi method combinations (List:D: Int:D $of) returns List:D multi method combinations (List:D: Range:D $of = 0..*) returns List:D multi sub combinations ($n, $k) returns List:D Int 变体返回调用者列表所有的 $of-combinations 组合。例如:\nsay .join(\u0026#39;|\u0026#39;) for \u0026lt;a b c\u0026gt;.combinations(2); 打印\na|b a|c b|c 因为 \u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo; 的所有 2-combinations 是 [\u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;], [\u0026lsquo;a\u0026rsquo;, \u0026lsquo;c\u0026rsquo;], [\u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo;].\nRange 变体把所有单独的组合组合到单个列表中, 所以:\nsay .join(\u0026#39;|\u0026#39;) for \u0026lt;a b c\u0026gt;.combinations(2..3); 打印：\na|b a|c b|c a|b|c 因为那是一个所有 2-和3-combinations 组合的列表。\n子例程 combinations($n, $k) 等价于 (^$n).combinations($k), 所以：\n.say for combinations(4, 2) 打印：\n0 1 0 2 0 3 1 2 1 3 2 3 permutations multi method permutations(List:D:) returns List:D multi sub permutations($n) returns List:D 返回列表所有可能的组合作为数组的列表。所以:\nsay .join(\u0026#39;|\u0026#39;) for \u0026lt;a b c\u0026gt;.permutations 打印：\na|b|c a|c|b b|a|c b|c|a c|a|b c|b|a permutations 把所有列表元素当作可区别的, 所以 (1, 1, 2).permutations 仍旧返回 6 个元素的列表, 即使只有 3 个不同的排列。\npermutations($n) 等价于 (^$n).permutations, 所以:\n.say for permutations 3; 打印：\n1 2 3 1 3 2 2 1 3 2 3 1 3 1 2 3 2 1 "},"name":"List in Raku","published":"2021-07-11T00:00:00Z","summary":"List in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-06-10-list-in-raku/"},{"content":{"html":"\u003ch1 id=\"raku-s-操作符httpblogsperlorguserszoffix_znet201604perl-6-the-s-operatorhtml\"\u003e\u003ca href=\"http://blogs.perl.org/users/zoffix_znet/2016/04/perl-6-the-s-operator.html\"\u003eRaku: S/// 操作符\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003eBy \u003ca href=\"http://blogs.perl.org/users/zoffix_znet/\"\u003eZoffix Znet\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e来自 Perl 5 背景的我, 第一次使用 Raku 的非破坏性替换操作符 \u003ccode\u003eS///\u003c/code\u003e 的经历就像下面这样:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://upload-images.jianshu.io/upload_images/326727-3a07abee4665adaf.gif?imageMogr2/auto-orient/strip\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e进展会更好的。我不但会改善错误信息, 而且会解释当前的所有事情。\u003c/p\u003e\n\u003ch2 id=\"智能匹配\"\u003e智能匹配\u003c/h2\u003e\n\u003cp\u003e我有问题的原因是因为, 看到外形相似的操作符, 我就简单地把 Perl 5 中的绑定操作符(\u003ccode\u003e=~\u003c/code\u003e)转换为 Raku 中的智能匹配操作符(\u003ccode\u003e~~\u003c/code\u003e) 还期望它能正常工作。事实上我是异想天开。\u003ccode\u003eS///\u003c/code\u003e 操作符没有文档, 并且结合令人困惑的(那个时候)警告信息, 这就是我痛苦的根源：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT warning:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Smartmatch with S/// can never succeed\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个丑陋的警告说这儿的 \u003ccode\u003e~~\u003c/code\u003e 操作符是个错误的选择并且确实如此。\u003ccode\u003e~~\u003c/code\u003e 操作符不是 Perl 5 的 \u003ccode\u003e=~\u003c/code\u003e 操作符的等价物。\u003ccode\u003e~~\u003c/code\u003e 智能操作符把它左边的东西起了个叫做 \u003ccode\u003e$_\u003c/code\u003e 的别名, 然后 \u003ccode\u003e~~\u003c/code\u003e 计算它右侧的东西, 然后在右侧这个东西身上调用 \u003ccode\u003e.ACCEPTS($_)\u003c/code\u003e 方法。这就是所有的魔法。\u003c/p\u003e\n\u003cp\u003e所以上面的例子实际上发生了:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e我们到达 \u003ccode\u003eS///\u003c/code\u003e 的时候, \u003ccode\u003e$orig\u003c/code\u003e 被起了个叫做 \u003ccode\u003e$_\u003c/code\u003e 的别名。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eS///\u003c/code\u003e 非破坏性地在 \u003ccode\u003e$_\u003c/code\u003e 身上执行了替换并返回那个结果字符串。这是智能匹配将要操作的东西。\u003c/li\u003e\n\u003cli\u003e智能匹配, 按照 Str 与 Str 相匹配的规则, 会根据替换是否发生来给出 True 或 False（令人困惑的是, True 意味着没发生）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e结果一路下来, 我们并没有得到我们想要的：替换过的字符串。\u003c/p\u003e\n\u003ch2 id=\"使用-given\"\u003e使用 Given\u003c/h2\u003e\n\u003cp\u003e既然我们知道了 \u003ccode\u003eS///\u003c/code\u003e 总是作用在 \u003ccode\u003e$_\u003c/code\u003e 上并且返回替换后的结果, 很容易就想到几种方法把 \u003ccode\u003e$_\u003c/code\u003e 设置为我们原来的字符串并把 \u003ccode\u003eS///\u003c/code\u003e 的返回值收集回来, 我们来看几个例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@orig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003emeow cow sow vow\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@new\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edo\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@orig\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eow\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u0026gt;/\u003c/span\u003e\u003cspan class=\"s2\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@orig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@new\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# meowmix\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# [meow cow sow vow]\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# [wow wow wow wow]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e第一个作用在单个值上。我们使用后置形式的 \u003cem\u003egiven\u003c/em\u003e 块儿, 这让我们避免了花括号（你可以使用 \u003cem\u003ewith\u003c/em\u003e 代替 \u003cem\u003egiven\u003c/em\u003e 得到同样的结果）。\u003ccode\u003egiven $orig\u003c/code\u003e 会给 \u003ccode\u003e$orig\u003c/code\u003e 起个叫做 \u003ccode\u003e$_\u003c/code\u003e 的别名。从输出来看, 原字符串没有被更改。\u003c/p\u003e\n\u003cp\u003e第二个例子作用在数组中的一堆字符串身上并且我们使用 \u003cem\u003edo\u003c/em\u003e 关键字来执行常规的 \u003cem\u003efor\u003c/em\u003e 循环(那种情况下, 它把循环变量别名给 \u003ccode\u003e$_\u003c/code\u003e 了)并把结果赋值给 \u003ccode\u003e@new\u003c/code\u003e 数组。再次, 输出显示原来的数组并没有发生改变。\u003c/p\u003e\n\u003ch2 id=\"副词\"\u003e副词\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eS///\u003c/code\u003e 操作符 - 就像 \u003ccode\u003es///\u003c/code\u003e 操作符和某些方法一样 - 允许你使用正则表达式副词：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLörem Ipsum Dolor Sit Amet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eg\u003c/span\u003e      \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Löreg Ipsug Dolor Sit Aget\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e      \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# börem Ipsum Dolor Sit Amet\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eii\u003c/span\u003e     \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Börem Ipsum Dolor Sit Amet\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003emm\u003c/span\u003e     \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Lürem Ipsum Dolor Sit Amet\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003enth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Lörem Ipsug Dolor Sit Amet\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Löreg Ipsug Dolor Sit Amet\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ess\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eIpsum Dolor\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eGipsum\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Lörem Gipsum Color Sit Amet\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eii\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003enth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# Lörem Ipsug Dolor Sit Amet\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如你所见, 它们以 \u003cem\u003e:foo\u003c/em\u003e 的形式添加在操作符 \u003cstrong\u003eS\u003c/strong\u003e 这个部件的后面。你可以大大方方地使用空白符号并且几个副词可以同时使用。下面是它们的意义：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e:g —(长形式：\u003ccode\u003e:global\u003c/code\u003e)全局匹配：替换掉所有的出现\u003c/li\u003e\n\u003cli\u003e:i —不区分大小写的匹配\u003c/li\u003e\n\u003cli\u003e:ii —(长形式： \u003ccode\u003e:samecase\u003c/code\u003e) 保留大小写：不管用作替换字母的大小写, 使用原来被替换的字母的大小写\u003c/li\u003e\n\u003cli\u003e:mm —(长形式：\u003ccode\u003e:samemark\u003c/code\u003e) 保留重音符号：在上面的例子中, 字母 o 上的分音符号被保留并被应用到替换字母 u 上\u003c/li\u003e\n\u003cli\u003e:nth(n) —只替换第 n 次出现的\u003c/li\u003e\n\u003cli\u003e:x(n) —至多替换 n 次（助记符: \u0026lsquo;x\u0026rsquo; 作为及时）\u003c/li\u003e\n\u003cli\u003e:ss —(长形式：\u003ccode\u003esamespace\u003c/code\u003e)保留空白类型：空白字符的类型被保留, 而不管替换字符串中使用的是什么空白字符。在上面的例子中, 我们使用换行作为替换, 但是原来的空白被保留了。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"方法形式\"\u003e方法形式\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eS///\u003c/code\u003e 操作符很好, 但是有时候有点笨拙。不要害怕, Raku 提供了 \u003ccode\u003e.subst\u003c/code\u003e 方法能满足你所有的替换需求并且消除你对 \u003ccode\u003e.subst/.substr\u003c/code\u003e 的困惑。下面来看例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eme\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个方法要么接收一个正则表达式要么接收一个普通的字符串作为它的第一个位置参数, 它是要在调用者里面(\u0026ldquo;meowmix\u0026rdquo;)查找的东西。第二个参数是替换字符串。\u003c/p\u003e\n\u003cp\u003e通过简单地把它们列为具名 Bool 参数, 你也可以使用副词。在 \u003ccode\u003eS///\u003c/code\u003e 形式中, 副词 \u003ccode\u003e:ss\u003c/code\u003e 和 \u003ccode\u003e:ii\u003c/code\u003e 分别表明 \u003ccode\u003e:s\u003c/code\u003e(使空白有意义) 的出现和  \u003ccode\u003e:i\u003c/code\u003e(不区分大小写的匹配) 的出现。在方法形式中, 你必须把这些副词应用到正则表达式自身身上：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLorem Ipsum Dolor Sit Amet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e l\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eii\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003es\u003c/span\u003e\u003cspan class=\"sr\"\u003e Ipsum Dolor\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eGipsum\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ess\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Borem Ipsum Dolor Sit Amet\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Lorem Gipsum Color Sit Amet\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"方法形式的捕获\"\u003e方法形式的捕获\u003c/h2\u003e\n\u003cp\u003e捕获对于替换操作来说不陌生, 所以我们来尝试捕获下方法调用形式的替换：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Use of Nil in string context  in block \u0026lt;unit\u0026gt; at test.p6 line 1\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# c\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e不是我们要找的。我们的替换字符串构建在达到 \u003ccode\u003e.subst\u003c/code\u003e 方法之前, 并且里面的 \u003ccode\u003e$0\u003c/code\u003e 变量实际上指向任何这个方法调用之前的东西, 而不是 \u003ccode\u003e.subst\u003c/code\u003e 正则表达式中的捕获。所以我们怎么来修正它呢？\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e.subst\u003c/code\u003e 方法的第二个参数也可以接受一个 \u003ca href=\"http://docs.raku.org/type/Callable\"\u003eCallable\u003c/a\u003e。在它里面, 你可以使用 \u003ccode\u003e$0, $1, ... $n\u003c/code\u003e 变量, 直到你想要的编号, 并从捕获中得到正确的值：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里, 我们为我们的 \u003cstrong\u003eCallable\u003c/strong\u003e 使用了尖号块儿, 但是 \u003cstrong\u003eWhateverCode\u003c/strong\u003e 和子例程也有效。每次替换都会调用这个 Callable, 并且把 \u003ca href=\"http://docs.raku.org/type/Match\"\u003eMatch\u003c/a\u003e 对象作为第一个位置参数传递给 Callable, 如果你需要访问它的话。\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e结论\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eS///\u003c/code\u003e 操作符在 Raku 中是 \u003ccode\u003es///\u003c/code\u003e 操作符的战友, 它不是修改原来的字符串, 而是拷贝原来的字符串, 修改, 然后返回修改过的版本。这个操作符的使用方式跟 Perl 5 中的非破坏性替换操作符的使用方式不同。作为备选, 方法版本的 \u003ccode\u003e.subst\u003c/code\u003e 也能使用。 方法形式和操作符形式的替换都能接收一组副词以修改它们的行为, 来满足你的需求。\u003c/p\u003e\n","text":"Raku: S/// 操作符 By Zoffix Znet\n来自 Perl 5 背景的我, 第一次使用 Raku 的非破坏性替换操作符 S/// 的经历就像下面这样:\n进展会更好的。我不但会改善错误信息, 而且会解释当前的所有事情。\n智能匹配 我有问题的原因是因为, 看到外形相似的操作符, 我就简单地把 Perl 5 中的绑定操作符(=~)转换为 Raku 中的智能匹配操作符(~~) 还期望它能正常工作。事实上我是异想天开。S/// 操作符没有文档, 并且结合令人困惑的(那个时候)警告信息, 这就是我痛苦的根源：\nmy $orig = \u0026#39;meowmix\u0026#39;; my $new = $orig ~~ S/me/c/; say $new; # OUTPUT warning: # Smartmatch with S/// can never succeed 这个丑陋的警告说这儿的 ~~ 操作符是个错误的选择并且确实如此。~~ 操作符不是 Perl 5 的 =~ 操作符的等价物。~~ 智能操作符把它左边的东西起了个叫做 $_ 的别名, 然后 ~~ 计算它右侧的东西, 然后在右侧这个东西身上调用 .ACCEPTS($_) 方法。这就是所有的魔法。\n所以上面的例子实际上发生了:\n 我们到达 S/// 的时候, $orig 被起了个叫做 $_ 的别名。 S/// 非破坏性地在 $_ 身上执行了替换并返回那个结果字符串。这是智能匹配将要操作的东西。 智能匹配, 按照 Str 与 Str 相匹配的规则, 会根据替换是否发生来给出 True 或 False（令人困惑的是, True 意味着没发生）  结果一路下来, 我们并没有得到我们想要的：替换过的字符串。\n使用 Given 既然我们知道了 S/// 总是作用在 $_ 上并且返回替换后的结果, 很容易就想到几种方法把 $_ 设置为我们原来的字符串并把 S/// 的返回值收集回来, 我们来看几个例子：\nmy $orig = \u0026#39;meowmix\u0026#39;; my $new = S/me/c/ given $orig; say $orig; say $new; my @orig = \u0026lt;meow cow sow vow\u0026gt;; my @new = do for @orig { S/\\w+\u0026lt;?before\u0026#39;ow\u0026#39;\u0026gt;/w/ }; say @orig; say @new; # OUTPUT: # meowmix # cowmix # [meow cow sow vow] # [wow wow wow wow] 第一个作用在单个值上。我们使用后置形式的 given 块儿, 这让我们避免了花括号（你可以使用 with 代替 given 得到同样的结果）。given $orig 会给 $orig 起个叫做 $_ 的别名。从输出来看, 原字符串没有被更改。\n第二个例子作用在数组中的一堆字符串身上并且我们使用 do 关键字来执行常规的 for 循环(那种情况下, 它把循环变量别名给 $_ 了)并把结果赋值给 @new 数组。再次, 输出显示原来的数组并没有发生改变。\n副词 S/// 操作符 - 就像 s/// 操作符和某些方法一样 - 允许你使用正则表达式副词：\ngiven \u0026#39;Lörem Ipsum Dolor Sit Amet\u0026#39; { say S:g /m/g/; # Löreg Ipsug Dolor Sit Aget say S:i /l/b/; # börem Ipsum Dolor Sit Amet say S:ii /l/b/; # Börem Ipsum Dolor Sit Amet say S:mm /o/u/; # Lürem Ipsum Dolor Sit Amet say S:nth(2) /m /g/; # Lörem Ipsug Dolor Sit Amet say S:x(2) /m /g/; # Löreg Ipsug Dolor Sit Amet say S:ss/Ipsum Dolor/Gipsum\\nColor/; # Lörem Gipsum Color Sit Amet say S:g:ii:nth(2) /m/g/; # Lörem Ipsug Dolor Sit Amet } 如你所见, 它们以 :foo 的形式添加在操作符 S 这个部件的后面。你可以大大方方地使用空白符号并且几个副词可以同时使用。下面是它们的意义：\n :g —(长形式：:global)全局匹配：替换掉所有的出现 :i —不区分大小写的匹配 :ii —(长形式： :samecase) 保留大小写：不管用作替换字母的大小写, 使用原来被替换的字母的大小写 :mm —(长形式：:samemark) 保留重音符号：在上面的例子中, 字母 o 上的分音符号被保留并被应用到替换字母 u 上 :nth(n) —只替换第 n 次出现的 :x(n) —至多替换 n 次（助记符: \u0026lsquo;x\u0026rsquo; 作为及时） :ss —(长形式：samespace)保留空白类型：空白字符的类型被保留, 而不管替换字符串中使用的是什么空白字符。在上面的例子中, 我们使用换行作为替换, 但是原来的空白被保留了。  方法形式 S/// 操作符很好, 但是有时候有点笨拙。不要害怕, Raku 提供了 .subst 方法能满足你所有的替换需求并且消除你对 .subst/.substr 的困惑。下面来看例子：\nsay \u0026#39;meowmix\u0026#39;.subst: \u0026#39;me\u0026#39;, \u0026#39;c\u0026#39;; say \u0026#39;meowmix\u0026#39;.subst: /m./, \u0026#39;c\u0026#39;; # OUTPUT: # cowmix # cowmix 这个方法要么接收一个正则表达式要么接收一个普通的字符串作为它的第一个位置参数, 它是要在调用者里面(\u0026ldquo;meowmix\u0026rdquo;)查找的东西。第二个参数是替换字符串。\n通过简单地把它们列为具名 Bool 参数, 你也可以使用副词。在 S/// 形式中, 副词 :ss 和 :ii 分别表明 :s(使空白有意义) 的出现和 :i(不区分大小写的匹配) 的出现。在方法形式中, 你必须把这些副词应用到正则表达式自身身上：\ngiven \u0026#39;Lorem Ipsum Dolor Sit Amet\u0026#39; { say .subst: /:il/, \u0026#39;b\u0026#39;, :ii; say .subst: /:sIpsum Dolor/, \u0026#34;Gipsum\\nColor\u0026#34;, :ss; } # OUTPUT: # Borem Ipsum Dolor Sit Amet # Lorem Gipsum Color Sit Amet 方法形式的捕获 捕获对于替换操作来说不陌生, 所以我们来尝试捕获下方法调用形式的替换：\nsay \u0026#39;meowmix\u0026#39;.subst: /me (.+)/, \u0026#34;c$0\u0026#34;; # OUTPUT: # Use of Nil in string context in block \u0026lt;unit\u0026gt; at test.p6 line 1 # c 不是我们要找的。我们的替换字符串构建在达到 .subst 方法之前, 并且里面的 $0 变量实际上指向任何这个方法调用之前的东西, 而不是 .subst 正则表达式中的捕获。所以我们怎么来修正它呢？\n.subst 方法的第二个参数也可以接受一个 Callable。在它里面, 你可以使用 $0, $1, ... $n 变量, 直到你想要的编号, 并从捕获中得到正确的值：\nsay \u0026#39;meowmix\u0026#39;.subst: /me (.+)/, -\u0026gt; { \u0026#34;c$0\u0026#34; }; # OUTPUT: # cowmix 这里, 我们为我们的 Callable 使用了尖号块儿, 但是 WhateverCode 和子例程也有效。每次替换都会调用这个 Callable, 并且把 Match 对象作为第一个位置参数传递给 Callable, 如果你需要访问它的话。\n结论 S/// 操作符在 Raku 中是 s/// 操作符的战友, 它不是修改原来的字符串, 而是拷贝原来的字符串, 修改, 然后返回修改过的版本。这个操作符的使用方式跟 Perl 5 中的非破坏性替换操作符的使用方式不同。作为备选, 方法版本的 .subst 也能使用。 方法形式和操作符形式的替换都能接收一组副词以修改它们的行为, 来满足你的需求。\n"},"name":"Raku 中的 S/// 操作符","published":"2021-07-11T00:00:00Z","summary":"The S Operator in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2016-01-28-the-s-operator-in-raku/"},{"content":{"html":"\u003ch2 id=\"raku-中的--和--twigil-是什么\"\u003eRaku 中的 \u003ccode\u003e.\u003c/code\u003e 和 \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 是什么？\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003e.\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 的意思是\u0026quot;这是类公用的\u0026quot;, \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 的意思是“这是类私有的”, 只能用在类的内部。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eScoreKeeper\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.options\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!player-points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e普通的符号表明了词法作用域或包作用域, 但是 \u003cstrong\u003etwigils\u003c/strong\u003e 就像是 \u003cstrong\u003esigils\u003c/strong\u003e 的兄弟, 表明了不同的作用域, 它影响了变量的作用域。\u003ccode\u003e.\u003c/code\u003e 和 \u003ccode\u003e!\u003c/code\u003e 是二级 \u003cstrong\u003esigils\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e属性存在于每个类的实例中, 在类的内部, 可以直接使用 \u003ccode\u003e!\u003c/code\u003e 访问到实例的属性:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!x\u003c/span\u003e\u003cspan class=\"s2\"\u003e, \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!y\u003c/span\u003e\u003cspan class=\"s2\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e那么 \u003ccode\u003e.\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 和 \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 之间有什么关系呢？下面看一个例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e# 注意这次我们使用 . 而非 !\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\$.x 等价于 self.x()\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\$.y 等价于 self.y()\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 调用实例的名为 x 的方法\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 调用实例的名为 y 的方法\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$point\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \n\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e会输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$.x 等价于 self.x()\n$.y 等价于 self.y()\n10\n20\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e注意到, 属性被声明为 \u003ccode\u003e$.x\u003c/code\u003e 和 \u003ccode\u003e$.y\u003c/code\u003e, 但是在类的内部仍旧能通过 \u003ccode\u003e$!x\u003c/code\u003e 和 \u003ccode\u003e$!y\u003c/code\u003e 来访问属性。这是因为在 Raku 中所有的属性都是私有的并且在类中可以通过 \u003ccode\u003e$!attribute-name\u003c/code\u003e 直接访问这些属性。Raku 可以为你自动生成存取方法。\u003c/p\u003e\n\u003cp\u003e公共属性拥有 \u003ccode\u003e.\u003c/code\u003e twigil, 私有属性拥有 \u003ccode\u003e!\u003c/code\u003e twigil。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehas $.x\u003c/code\u003e 就是私有属性 \u003ccode\u003ehas $!x\u003c/code\u003e 加上一个\u003ccode\u003egetter\u003c/code\u003e方法, 即 \u003ccode\u003emethod x() { ... }\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehas $.x is rw\u003c/code\u003e 就是私有属性 \u003ccode\u003ehas $!x\u003c/code\u003e 加上一个\u003ccode\u003egetter/setter\u003c/code\u003e方法。\u003c/p\u003e\n\u003ch2 id=\"-twigil-就是调用了与属性同名的方法\"\u003e. \u003cstrong\u003etwigil\u003c/strong\u003e 就是调用了与属性同名的方法\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSaySomething\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 这证明了 $.a 的 . twigil 做了一次隐式的实例方法调用。\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eSaySomething\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 打印 \u0026#34;a\u0026#34;\u003c/span\u003e\n\u003cspan class=\"n\"\u003eSaySomething\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 打印 \u0026#34;a\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"-twigil-中自动生成的方法可以被子类重写\"\u003e. \u003cstrong\u003etwigil\u003c/strong\u003e 中自动生成的方法可以被子类重写\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCircle\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!radius\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# 重写父类中的 x() 方法和 y() 方法\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI am x point in a Circle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI am y point in a Circle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$circle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCircle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003eradius\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$circle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# I am x point in a Circle\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$circle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# I am y point in a Circle\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果不想子类重写父类中的方法, 那么在父类中声明属性的时候, 使用 \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 替代 \u003ccode\u003e.\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e。\u003c/p\u003e\n","text":"Raku 中的 . 和 ! twigil 是什么？ . twigil 的意思是\u0026quot;这是类公用的\u0026quot;, ! twigil 的意思是“这是类私有的”, 只能用在类的内部。\nclass ScoreKeeper { has @.options; has %!player-points; } 普通的符号表明了词法作用域或包作用域, 但是 twigils 就像是 sigils 的兄弟, 表明了不同的作用域, 它影响了变量的作用域。. 和 ! 是二级 sigils。\n属性存在于每个类的实例中, 在类的内部, 可以直接使用 ! 访问到实例的属性:\nclass Point { has $.x; has $.y; method Str() { \u0026#34;($!x, $!y)\u0026#34; } } 那么 . twigil 和 ! twigil 之间有什么关系呢？下面看一个例子:\nclass Point { has $.x; has $.y; method Str() { # 注意这次我们使用 . 而非 ! \u0026#34;\\$.x 等价于 self.x()\u0026#34;.say if $.x == self.x(); \u0026#34;\\$.y 等价于 self.y()\u0026#34;.say if $.y == self.y(); } method print() { say self.x(); # 调用实例的名为 x 的方法 say self.y(); # 调用实例的名为 y 的方法 } } my $point = Point.new(x =\u0026gt; 10, y =\u0026gt; 20); $point.Str; $point.print; 会输出:\n$.x 等价于 self.x() $.y 等价于 self.y() 10 20 注意到, 属性被声明为 $.x 和 $.y, 但是在类的内部仍旧能通过 $!x 和 $!y 来访问属性。这是因为在 Raku 中所有的属性都是私有的并且在类中可以通过 $!attribute-name 直接访问这些属性。Raku 可以为你自动生成存取方法。\n公共属性拥有 . twigil, 私有属性拥有 ! twigil。\nhas $.x 就是私有属性 has $!x 加上一个getter方法, 即 method x() { ... }。\nhas $.x is rw 就是私有属性 has $!x 加上一个getter/setter方法。\n. twigil 就是调用了与属性同名的方法 class SaySomething { method a() { say \u0026#34;a\u0026#34;; } method b() { $.a; } method c() { self.a(); } # 这证明了 $.a 的 . twigil 做了一次隐式的实例方法调用。 } SaySomething.b; # 打印 \u0026#34;a\u0026#34; SaySomething.c; # 打印 \u0026#34;a\u0026#34; . twigil 中自动生成的方法可以被子类重写 class Point { has $.x; has $.y; } class Circle is Point { has $!radius; # 重写父类中的 x() 方法和 y() 方法 method x() { \u0026#34;I am x point in a Circle\u0026#34;; } method y() { \u0026#34;I am y point in a Circle\u0026#34;; } } my $circle = Circle.new(radius =\u0026gt; 10); $circle.x().say; # I am x point in a Circle $circle.y.say; # I am y point in a Circle 如果不想子类重写父类中的方法, 那么在父类中声明属性的时候, 使用 ! twigil 替代 . twigil。\n"},"name":"Raku 中的 twigil","published":"2021-07-11T00:00:00Z","summary":"Twigils in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-12-11-twigils-in-raku/"},{"content":{"html":"\u003ch2 id=\"raku-中怎么为已存在的类添加方法\"\u003eRaku 中怎么为已存在的类添加方法\u003c/h2\u003e\n\u003cp\u003eInt 类有一个方法叫做 \u003ccode\u003eis-prime\u003c/code\u003e, 我想为 \u003ccode\u003eInt\u003c/code\u003e 类型添加其它的方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyInt\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eis-even\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool:D\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMyInt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e138\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eis-even\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e通过类的继承也是一种方法, 但是不是我想要的。Swift 中可以通过扩展来实现, Raku 中有一个 \u003ccode\u003eadd_method\u003c/code\u003e 方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eadd_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMetamodel::MethodContainer:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$obj\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这会给元类(meta class)添加一个方法, 使用 \u003ccode\u003e$name\u003c/code\u003e 作为调用的方法名。这只会在类型被组合前使用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eadd_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eis-even\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool:D\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e137\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eis-even\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003emethods\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果我调用 \u003ccode\u003eInt.^methods\u003c/code\u003e 时, \u003ccode\u003eis-even\u003c/code\u003e 没有出现。但是上面的代码能被调用并起作用了。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eadd_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efac\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n     \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n     \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$sum\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efac\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 1\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efac\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 120\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003emethod\u003c/code\u003e 后面的圆括号是方法的签名：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eadd_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epower\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$num\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"nv\"\u003e$num\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\n\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epower\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 8\u003c/span\u003e\n\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epower\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 1024\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"词法方法\"\u003e词法方法\u003c/h2\u003e\n\u003cp\u003e我可以让方法不依附于任何类, 并且能在对象上调用该方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;is-even\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt:D\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003ereturns\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool:D\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这构建了一个 \u003ccode\u003eCallable\u003c/code\u003e（查看以下 \u003ccode\u003e\u0026amp;is-even.WHAT\u003c/code\u003e）。 在签名中, 我把它约束为一个定义了的 Int 类型的值(\u003ccode\u003eInt:D\u003c/code\u003e), 但是没有给它名字。我在类型约束后面添加冒号来说明第一个参数是调用者。现在我能把这个方法应用到任何我想要的对象上:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e137\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003eis-even\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e138\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003eis-even\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003eis-even\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# works, although inside is-even blow up\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"Raku 中怎么为已存在的类添加方法 Int 类有一个方法叫做 is-prime, 我想为 Int 类型添加其它的方法。\nclass MyInt is Int { method is-even () returns Bool:D { return False if self % 2; return True; } } my $n = MyInt.new(138); say $n.is-even; 通过类的继承也是一种方法, 但是不是我想要的。Swift 中可以通过扩展来实现, Raku 中有一个 add_method 方法:\nmethod add_method(Metamodel::MethodContainer: $obj, $name, $code) 这会给元类(meta class)添加一个方法, 使用 $name 作为调用的方法名。这只会在类型被组合前使用。\nInt.^add_method( \u0026#39;is-even\u0026#39;, method () returns Bool:D { return False if self % 2; return True; } ); say 137.is-even; say Int.^methods; 如果我调用 Int.^methods 时, is-even 没有出现。但是上面的代码能被调用并起作用了。\nInt.^add_method(\u0026#39;fac\u0026#39;, method () returns Int:D { return 1 if self == 0; return 1 if self == 1; my $sum = 1; for 1 .. self {$sum *= $_}; return $sum; }); 1.fac # 1 5.fac # 120 method 后面的圆括号是方法的签名：\nInt.^add_method(\u0026#39;power\u0026#39;, method (Int $num) returns Int:D { return self ** $num; }); 2.power(3).say; # 8 2.power(10).say; # 1024 词法方法 我可以让方法不依附于任何类, 并且能在对象上调用该方法:\nmy \u0026amp;is-even = method (Int:D :) returns Bool:D { self %% 2 }; 这构建了一个 Callable（查看以下 \u0026amp;is-even.WHAT）。 在签名中, 我把它约束为一个定义了的 Int 类型的值(Int:D), 但是没有给它名字。我在类型约束后面添加冒号来说明第一个参数是调用者。现在我能把这个方法应用到任何我想要的对象上:\nsay 137.\u0026amp;is-even; say 138.\u0026amp;is-even; say \u0026#34;foo\u0026#34;.\u0026amp;is-even; # works, although inside is-even blow up "},"name":"在 Raku 中怎么为已存在的类添加方法","published":"2021-07-11T00:00:00Z","summary":"Add a Method to an Existing Class in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-11-11-add-a-method-to-an-existing-class-in-raku/"},{"content":{"html":"\u003ch2 id=\"set\"\u003eSet\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$keywords\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eset\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eif for unless while\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# create a set\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ehas-keyword\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@words\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@words\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$word\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e# 依次检查数组中的元素是否属于集合 $keywords\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eTrue\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$word\u003c/span\u003e \u003cspan class=\"ow\"\u003e(elem)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$keywords\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003ehas-keyword\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enot\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eone\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehere\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# False\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003ehas-keyword\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ebut\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehere\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efor\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"series-operator\"\u003eSeries Operator\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eA G C T\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \n  \u003cspan class=\"p\"\u003e((\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003elast\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e倒序的 range:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"flipplop\"\u003eflip/plop\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eflip_flop.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$file\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$line\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e;\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"ow\"\u003eff\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e/);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e$line ~~ m/^\\;/ ff $line ~~ m/^\\\u0026quot;/\u003c/code\u003e 过滤掉 \u003ccode\u003e;\u003c/code\u003e 和 \u003ccode\u003e\u0026quot;\u003c/code\u003e 之间的内容, 再对它进行取反操作就是过滤后剩下的文本。\u003c/p\u003e\n\u003cp\u003eflip_flop.txt 内容如下：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e; next is some lines to skip,include this line\nfuck fuck fuck\ndam dam dam\nmie mie mie\n\u0026quot; next is subject\nThere is more than one way to do it\n                                -- Larry Wall\n\nWe hope Raku is wrote by the hole Socfilia\n                                -- Larry Wall\n; next is some lines to skip,include this line\nfuck fuck fuck\ndam dam dam\nmie mie mie\n\u0026quot; next is subject\nprogramming is hard,Let's go shopping\n                               -- Larry Wall\nRuby is Another Raku\n                               -- Larry Wall\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e输出：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003eThere is more than one way to do it\n                                -- Larry Wall\nWe hope Raku is wrote by the hole Socfilia\n                                -- Larry Wall\nprogramming is hard,Let\u0026#39;s go shopping\n                               -- Larry Wall\nRuby is Another Raku\n                               -- Larry Wall\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eff\u003c/code\u003e 操作符左右两侧的 \u003ccode\u003e^\u003c/code\u003e 表示排除:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"ow\"\u003eff\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"ow\"\u003e^ff\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"ow\"\u003eff^\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"ow\"\u003e^ff\u003c/span\u003e\u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e9\n10\n11\n12\n13\n14\n15\n16\n----------\n10\n11\n12\n13\n14\n15\n16\n----------\n9\n10\n11\n12\n13\n14\n15\n----------\n10\n11\n12\n13\n14\n15\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"grammars\"\u003eGrammars\u003c/h2\u003e\n\u003cp\u003e解析 CSV:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e﻿\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eCSV\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"ni\"\u003e^^\u003c/span\u003e\u003cspan class=\"sr\"\u003e            \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Beginning of a line\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e, \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Any number of \u0026lt;value\u0026gt;s with commas in `between` them\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"ni\"\u003e$$\u003c/span\u003e\u003cspan class=\"sr\"\u003e            \u003c/span\u003e\u003cspan class=\"c1\"\u003e# End of a line\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003evalue\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026#34;,\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Anything not a double quote, comma or newline\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equoted-text\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Or some quoted text\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e              \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Any number of times\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003equoted-text\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026#34;\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Anything not a \u0026#34; or \\\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Or \\\u0026#34;, an escaped quotation mark\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e         \u003c/span\u003e\u003cspan class=\"c1\"\u003e# Any number of times\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026#34;\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# method parse($str, :$rule = \u0026#39;TOP\u0026#39;, :$actions) returns Match:D\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eValid CSV file!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003eCSV\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOCSV/ \u003c/span\u003e\u003cspan class=\"s\"\u003e);\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    Year,Make,Model,Length\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    1997,Ford,E350,2.34\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    2000,Mercury,Cougar,2.38\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003eEOCSV\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eCSV\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOCSV/,\u003c/span\u003e\u003cspan class=\"s\"\u003e \u0026#39;line\u0026#39;, :$actions );\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    Year,Make,Model,Length\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    1997,Ford,E350,2.34\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    2000,Mercury,Cougar,2.38\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003eEOCSV\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e解析天气数据:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eStationDataParser\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e          \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekeyval\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eobservations\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"sr\"\u003e             \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ekeyval\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;key\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;val\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\N\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eobservations\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eObs:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eobservation\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e             \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eobservation\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;year\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003etemp\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003etemp\u003c/span\u003e         \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e. \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e                          \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStationData\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.country\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003esubmethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eBUILD\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e%info\u003c/span\u003e \u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"s\"\u003eName\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eCountry\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!country\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e@!data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStationDataActions\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"n\"\u003eStationData\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"s\"\u003einfo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;keyval\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"s\"\u003edata\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;observations\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ekeyval\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;key\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;val\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eobservations\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;observation\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enone\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e99\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eobservation\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;year\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;temp\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003eNum\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eStationDataParser\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOCSV/,\u003c/span\u003e\u003cspan class=\"s\"\u003e :actions(StationDataActions)).ast\n\u003c/span\u003e\u003cspan class=\"s\"\u003eName= Jan Mayen\n\u003c/span\u003e\u003cspan class=\"s\"\u003eCountry= NORWAY\n\u003c/span\u003e\u003cspan class=\"s\"\u003eLat=   70.9\n\u003c/span\u003e\u003cspan class=\"s\"\u003eLong=    8.7\n\u003c/span\u003e\u003cspan class=\"s\"\u003eHeight= 10\n\u003c/span\u003e\u003cspan class=\"s\"\u003eStart year= 1921\n\u003c/span\u003e\u003cspan class=\"s\"\u003eEnd year= 2009\n\u003c/span\u003e\u003cspan class=\"s\"\u003eObs:\n\u003c/span\u003e\u003cspan class=\"s\"\u003e1921 -4.4 -7.1 -6.8 -4.3 -0.8  2.2  4.7  5.8  2.7 -2.0 -2.1 -4.0  \n\u003c/span\u003e\u003cspan class=\"s\"\u003e1922 -0.9 -1.7 -6.2 -3.7 -1.6  2.9  4.8  6.3  2.7 -0.2 -3.8 -2.6  \n\u003c/span\u003e\u003cspan class=\"s\"\u003e2008 -2.8 -2.7 -4.6 -1.8  1.1  3.3  6.1  6.9  5.8  1.2 -3.5 -0.8  \n\u003c/span\u003e\u003cspan class=\"s\"\u003e2009 -2.3 -5.3 -3.2 -1.6  2.0  2.9  6.7  7.2  3.8  0.6 -0.3 -1.3\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003eEOCSV\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"raku-examples\"\u003eRaku Examples\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e1、生成8位随机密码\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e  \u003cspan class=\"nv\"\u003e@char_set\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eZ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e~\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e@\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e^\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@char_set\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u0026#34;)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 不重复的8位密码\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@char_set\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u0026#34;)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 可以重复\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e2、打印前5个数字\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e[^\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e[^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 这个会无限循环\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e3、排序\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e3.1 按数值排序\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePerl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n           \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n           \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n           \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCMD\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n           \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePhp\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n           \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJava\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e85\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e3.2 按分数排序散列：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePerl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n         \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n             \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e95\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCMD\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePhp\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e80\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n           \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJava\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e85\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"o\"\u003e-.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePython\t100\nGo\t95\nJava\t85\nPerl\t80\nPhp\t80\nCMD\t20\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003exx\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ezz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclassify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# xz yz zz\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e加密：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003erot13\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$^s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etrans\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea..z\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003en..za..m\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eA..Z\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eN..ZA..M\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e4、求 1! + 2! + 3! + 4! +5! + 6! +7! +8! +9! +10!\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003epostfix\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"o\"\u003e[*]\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e[+]\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 4037913\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e5、列出对象所有可用的方法\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e使用元对象协议， 即 \u003ccode\u003e对象名.^methods\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eJZY\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003emethods\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003eBUILD Int Num chomp chop substr pred succ match ords lines samecase samespace tr\nim-leading trim-trailing trim words encode wordcase trans indent codes path WHIC\nH Bool Str Stringy DUMP ACCEPTS Numeric gist perl comb subst split\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e6、 匿名子例程\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e7、字符串翻转与分割\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; 1223.flip\n3221\n\u0026gt; 'abcd'.flip\ndcba\n\u0026gt; 1234.comb\n1 2 3 4\n\u0026gt; 1234.comb(/./)\n1 2 3 4\n\u0026gt; 'abcd'.comb\na b c d\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e8、有这么一个四位数 A，其个位数相加得到 B，将 B 乘以 B 的反转数后得到 A，请求出这个数字。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e举例， 1458 就符合这个条件，1+4+5+8 ＝ 18， 18 ＊ 81 ＝1458\u003c/p\u003e\n\u003cp\u003e请找出另一个符合上面条件的四位数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$r\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$r\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"o\"\u003e[+]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$r\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$r\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e^37\u003c/code\u003e 产生一个范围  0 .. ^37, 就是 0到36之前的数，在表达式中代表 B\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"o\"\u003e..^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e=[+]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflip\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1458\n1729\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e9、 大小写转换\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; my $word= \u0026quot;I Love Raku\u0026quot;\nI Love Raku\n\u0026gt; $word.wordcase()\nI Love Raku\n\u0026gt; my $lowercase = \u0026quot;i love perl 6\u0026quot;\ni love perl 6\n\u0026gt; $lowercase.wordcase()\nI Love Raku\n\u0026gt; $word.samecase('A')\nI LOVE PERL 6\n\u0026gt; $word.samecase('a')\ni love perl 6\n\u0026gt; $word.samecase('a').wordcase()\nI Love Raku\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e10、 多行文本\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/THE END/;\u003c/span\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003cspan class=\"s\"\u003eNorway\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    Oslo : 59.914289,10.738739 : 2\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    Bergen : 60.388533,5.331856 : 4\n\u003c/span\u003e\u003cspan class=\"s\"\u003eUkraine\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    Kiev : 50.456001,30.50384 : 3\n\u003c/span\u003e\u003cspan class=\"s\"\u003eSwitzerland\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    Wengen : 46.608265,7.922065 : 3\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003eTHE END\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$string\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e11、 超运算符与子例程\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e1 2 3 4\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eby2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003epower2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003eby2\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003epower2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 4 16 36 64\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为什么是 \u003ccode\u003e\u0026amp;function\u003c/code\u003e 呢：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003ethe name of the by2 function is \u0026amp;by2, just as the name of the foo scalar is $foo and the name of the foo array is @foo\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cul\u003e\n\u003cli\u003e12、 如何在 Raku 中执行外部命令并捕获输出\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; my $res = qqx{mkdir 123456}\n\n# 或使用 qx{ }\n\u0026gt; my $res = qx{mkdir 112233}\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e13、Does Raku support something equivalent to Perl5\u0026rsquo;s \u003cstrong\u003eDATA\u003c/strong\u003e and \u003cstrong\u003eEND\u003c/strong\u003e sections?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"n\"\u003e=foo\u003c/span\u003e\u003cspan class=\"sd\"\u003e This is a Pod block. A single line one. This Pod block\u0026#39;s name is \u0026#39;foo\u0026#39;.\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003e=begin\u003c/span\u003e\u003cspan class=\"sd\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003equx\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003eThis is another syntax for defining a Pod block.\n\u003c/span\u003e\u003cspan class=\"sd\"\u003eIt allows for multi line content.\n\u003c/span\u003e\u003cspan class=\"sd\"\u003eThis block\u0026#39;s name is \u0026#39;qux\u0026#39;.\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003e=end qux\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003e=data\u003c/span\u003e\u003cspan class=\"sd\"\u003e A data block -- a Pod block with the name \u0026#39;data\u0026#39;.\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e# Data blocks are P6\u0026#39;s version of P5\u0026#39;s __DATA__.\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# But you can have multiple data blocks:\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003e=begin\u003c/span\u003e\u003cspan class=\"sd\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003edata\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003eAnother data block.\n\u003c/span\u003e\u003cspan class=\"sd\"\u003eThis time a multi line one.\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003e=end data\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$=pod\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003econtents\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003econtents\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@$=pod\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003econtents\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003econtents\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e14、生成含有26个英文字母和下划线的 junction\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eZ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e15、判断一个字符是否在某个集合中\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e  \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eZ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"o\"\u003e∈\u003c/span\u003e \u003cspan class=\"nb\"\u003eset\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e12a34\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u0026ldquo;12a34\u0026rdquo;.comb 会把字符串分割为单个字符，返回一个字符数组。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e16、生成 IP 地址范围\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e192.168.10.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e«\u003c/span\u003e\u003cspan class=\"s2\"\u003e~\u003c/span\u003e\u003cspan class=\"p\"\u003e»\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e255\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e17、 生成 OC 中的测试数组\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e@\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e«\u003c/span\u003e\u003cspan class=\"s2\"\u003e~\u003c/span\u003e\u003cspan class=\"p\"\u003e»\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34;Perl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e«\u003c/span\u003e\u003cspan class=\"s2\"\u003e~\u003c/span\u003e\u003cspan class=\"p\"\u003e»\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e \u003cspan class=\"p\"\u003e«\u003c/span\u003e\u003cspan class=\"s2\"\u003e~\u003c/span\u003e\u003cspan class=\"p\"\u003e»\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34;,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode\u003e@\u0026quot;Perl\u0026quot;1\u0026quot;,\n@\u0026quot;Perl\u0026quot;2\u0026quot;,\n@\u0026quot;Perl\u0026quot;3\u0026quot;,\n@\u0026quot;Perl\u0026quot;4\u0026quot;,\n@\u0026quot;Perl\u0026quot;5\u0026quot;,\n…\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e18、我想以 AGCT 4 种字母为基础生成字符串。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e比如希望长度为1，输出A,G,C,T。\u003c/p\u003e\n\u003cp\u003e如果长度为2，输出 AA,AG,AC,AT,GA,GG,GC,GT,CA,CG,CC,CT,TA,TG,TC,TT。这样的结果。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 长度为1\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# 长度为2\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# 长度为3\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 长度为4\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; my @a=\u0026lt;A G C T\u0026gt;\nA G C T\n\u0026gt; my $x=@a\nA G C T\n\u0026gt; $x xx 2\nA G C T A G C T\n\u0026gt; $x xx 3\nA G C T A G C T A G C T\n\u0026gt; ($x xx 3).WHAT\n(List)\n\u0026gt; $x.WHAT\n(Array)\n\n\u0026gt; ([X~] $x xx 2).join(',')\nAA,AG,AC,AT,GA,GG,GC,GT,CA,CG,CC,CT,TA,TG,TC,TT\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e惰性操作符：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eA G C T\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 或者使用 $x = @(\u0026#39;A\u0026#39;,\u0026#39;G\u0026#39;,\u0026#39;C\u0026#39;,\u0026#39;T\u0026#39;)\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e...^\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e{((\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"nb\"\u003elast\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e==\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"best-of-raku\"\u003eBest Of Raku\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eCommand Line 命令行\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e \u003cspan class=\"c1\"\u003e#               Perl 5                                     Raku\u003c/span\u003e\n \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ebananas are good\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e                     \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ebananas are good\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eand I said: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$quotes\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\\\u0026#34;\u003cspan class=\"n\"\u003eme\u003c/span\u003e\\\u0026#34;\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e          \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eand I said: \u003c/span\u003e\u003cspan class=\"nv\"\u003e%quotes\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eme\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;}\u003c/span\u003e\u003cspan class=\"s2\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eand I said: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$quotes\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\\\u0026#34;\u003cspan class=\"n\"\u003eme\u003c/span\u003e\\\u0026#34;\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e          \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eand I said: \u003c/span\u003e\u003cspan class=\"nv\"\u003e%quotes\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026lt;me\u0026gt;.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eWhat is ... \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e                           \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eprompt\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eWhat is ... \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n \u003cspan class=\"nb\"\u003echomp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eFile IO\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e \u003cspan class=\"c1\"\u003e#              Perl 5                                     Raku\u003c/span\u003e\n \u003cspan class=\"nv\"\u003e$content\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003elocal\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                       \u003cspan class=\"nv\"\u003e$content\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eslurp\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003epoetry.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$FH\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003epoetry.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e$FH\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003echomp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@content\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                            \u003cspan class=\"nv\"\u003e@content\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003epoetry.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$FH\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003epoetry.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e$FH\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eAutomatic multithreading\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eApplying operations to junctions and arrays is now syntactically compact and readable.\nRaku will create threads where appropriate to use multiple processors, cores or hyperthreading for high level language SIMD concurrent processing.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e \u003cspan class=\"c1\"\u003e#              Perl 5                                     Raku\u003c/span\u003e\n \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[+]\u003c/span\u003e \u003cspan class=\"nv\"\u003e@numbers\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"nv\"\u003e$sum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@numbers\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"c1\"\u003e#factor1) {                          @product = @factor1 \u0026gt;\u0026gt;*\u0026lt;\u0026lt; @factor2;\u003c/span\u003e\n   \u003cspan class=\"nv\"\u003e$product\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$factor1\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$factor2\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe Perl 5 code is a simplification, of course Raku \u0026ldquo;does the right thing\u0026rdquo; when the arrays have different lengths.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e比较\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere are junctions, then chained comparison operators.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e \u003cspan class=\"c1\"\u003e#            Perl 5                                     Raku\u003c/span\u003e\n \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e                   \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e                  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e^..\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edefined\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                      \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe defined-OR operator eases lot of cases where Perl 5 newbies could fall into traps.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCase 结构\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e  \u003cspan class=\"c1\"\u003e#            Perl 5                                      Raku\u003c/span\u003e\n                                                     \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e}}\u003c/span\u003e\u003cspan class=\"err\"\u003e                      when 2 | 5  {...}\n\u003c/span\u003e\u003cspan class=\"err\"\u003e elsif ($a == 6 or $a == 7 or $a == 8 or $a == 9) {}   when 6 .. 9 {...}\n\u003c/span\u003e\u003cspan class=\"err\"\u003e elsif ($a =~ /g/) {...}                               when \u0026#39;g\u0026#39;    {...}\n\u003c/span\u003e\u003cspan class=\"err\"\u003e else {...}                                            default     {...}\n\u003c/span\u003e\u003cspan class=\"err\"\u003e                                                     }\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThat new construct (backported to 5.10) is clear to read, very versatile and when used in combination with junctions, becomes even clearer.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e强大的循环\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eList iteration via for is now much more versatile.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e \u003cspan class=\"c1\"\u003e#            Perl 5                                     Raku\u003c/span\u003e\n \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e                         \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e16\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i-2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e                \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"o\"\u003e,*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                      \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekv\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$value\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"s2\"\u003e =\u0026gt; \u003c/span\u003e\u003cspan class=\"nv\"\u003e$hash\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e              \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"s2\"\u003e =\u0026gt; \u003c/span\u003e\u003cspan class=\"nv\"\u003e$value\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"c1\"\u003e#a) {                            for zip(@a; @b; @c) -\u0026gt; $a, $b, $c {...}\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@c\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e子例程中的具名参数\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e \u003cspan class=\"c1\"\u003e#            Perl 5                                     Raku\u003c/span\u003e\n \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutine\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                                   \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutine\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@rest\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@rest\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@_\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eObjects with auto generated new and getters and setters\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSimple Object creation is now as easy as it gets.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e \u003cspan class=\"c1\"\u003e#              Perl 5                                     Raku\u003c/span\u003e\n \u003cspan class=\"nb\"\u003epackage\u003c/span\u003e \u003cspan class=\"nn\"\u003eHeart::Gold\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                            \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHeart::Gold\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n                                                   \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.speed\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                                         \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003estop\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.speed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n   \u003cspan class=\"nb\"\u003ebless\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003espeed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                   \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n                                                 \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eHeart::Gold\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hg1\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003espeed\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e                                     \u003cspan class=\"nv\"\u003e$hg1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003espeed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$self\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                             \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hg2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hg1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$speed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edefined\u003c/span\u003e \u003cspan class=\"nv\"\u003e$speed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$self-\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espeed\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$speed\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n   \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$self-\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espeed\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003estop\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$self\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n   \u003cspan class=\"nv\"\u003e$self-\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003espeed\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"raku-variable\"\u003eRaku Variable\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eVariable Types\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eRaku (as Perl 5) knows 3 basic types of variables: Scalars (single values), Arrays (ordered and indexed lists of several values) and Hashes (2 column table, with ID and associated value pairs). They can be easily distinguished, because in front of their name is a special character called sigil (latin for sign). It\u0026rsquo;s the $ (similar to S) for Scalars, @ (like an a) for Arrays and a % (kv pair icon) for a Hash. They are now invariant (not changing), which means for instance, an array vaiable starts always with an @, even if you just want a slice of the content.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e$scalar\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# $array[1]   in Perl 5\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# @array[1,2] in Perl 5\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eba\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;}\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# $hash{\u0026#39;ba\u0026#39;} in Perl 5\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eba\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eda\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ebim\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# @hash{\u0026#39;ba\u0026#39;,\u0026#39;da\u0026#39;,\u0026#39;bim\u0026#39;} in Perl 5\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe sigils also mark distinct namespaces, meaning: in one lexical scope you can have 3 different variables named $stuff, @stuff and %stuff. These sigils can also be used as an operator to enforce a context in which the following data will be seen.\u003c/p\u003e\n\u003cp\u003eThe fourth namespace is for subroutines and similar, even if you don\u0026rsquo;t usually think of them as variables. It\u0026rsquo;s sigil \u0026amp; is used to refer to subroutines without calling them.\u003c/p\u003e\n\u003cp\u003eAll special namespaces from Perl 5 (often marked with special syntax), like tokens (\u003cstrong\u003ePACKAGE\u003c/strong\u003e), formats, file or dir handles, or builtins are now regular variables or routines.\u003c/p\u003e\n\u003cp\u003eBecause all variables contain objects, they have methods. In fact, all operators, including square or curly bracket subscripts, are just methods of an object with a fancy name.\u003c/p\u003e\n\u003cp\u003eThe primary sigil can be followed by a secondary sigil, called a twigil, which indicates a special scope for that variable.\u003c/p\u003e\n\u003ch3 id=\"scalar\"\u003eScalar\u003c/h3\u003e\n\u003cp\u003eThis type stores one value, usually a reference to something: a value of a data type, a code object, an object or a compound of values like a pair, junction, array, hash or capture. The scalar context is now called item context, hence the scalar instruction from Perl 5 was renamed to item.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e$CHAPTER\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# first comment!\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$bin\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mb\"\u003e0b11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# same value in binary format\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$pi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.14159_26535_89793\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# the underscores just ease reading\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$float\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e6.02e-23\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# floating number in scientific notation\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$text\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eWelcome all!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# single quoted string\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# double quoted string, does eval $pi to it\u0026#39;s content\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$text\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e What is \u003c/span\u003e\u003cspan class=\"nv\"\u003e$pi\u003c/span\u003e\u003cspan class=\"s2\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$text\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;EOT\u0026#39;;\u003c/span\u003e\u003cspan class=\"s\"\u003e         # heredoc string\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    handy for multiline text\n\u003c/span\u003e\u003cspan class=\"s\"\u003e    like HTML templates or email\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003eEOT\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$handle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"nv\"\u003e$file_name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# file handle\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# an object from a class with a nested namespace\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$object\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eClass::Name\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$condition\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# a junction, a logical conjunction of values\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$arrayref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# an array stored as a single item\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# a hash stored as a single item\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$hashref\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaudreyt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epugs\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epm\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e      \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epct\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edamian\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003elarrys evil henchman\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# pointing to a callable\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$coderef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003edo_something_completely_diffenent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(For info on some of those terms: comment, binary format, the underscores ease reading, scientific notation, single-quoted string, double-quoted string, heredoc string, file handle, class, junction, list of values, hash, callable.)\u003c/p\u003e\n\u003cp\u003eUnlike Perl 5, references are automatically dereferenced to a fitting context. So you could use these $arrayrefs and $hashrefs similarly to an array or hash, making $ the universal variable prefix, pretty much like in PHP. The primary difference is that $ prefixed lists are not flattened in lists.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# just one iteration\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# three iterations\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"scalar-methods\"\u003eScalar Methods\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chapter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003eundefine\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chapter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003edefined\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# false, returns 0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eArray\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAn array is an ordered and indexed list of scalars. If not specified otherwise, they can be changed, expanded and shortened anytime and used as a list, stack, queue and much more. As in Haskell, lists are processed lazily, which means: the compiler looks only at the part it currently needs. This way Raku can handle infinite lists or do computation on lists that have not been computed yet. The lazy command enforces this and the eager command forces all values to be computed.\u003c/p\u003e\n\u003cp\u003eThe list context is forced with a @() operator or list() command. That\u0026rsquo;s not autoflattening like in Perl 5 (automatically convert a List of Lists into one List). If you still want that, say flat(). Or say lol() to explicitly prevent autoflattening.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# an array gets filled like in Perl 5\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# same thing, since unlike P5 round braces just do group\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e2 3 5 7 11 13 17 19 23\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# ditto, \u0026lt;\u0026gt; is the new qw()\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# same array object just sits in $primes, $primes[0] is 2\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eitem\u003c/span\u003e \u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# same thing, more explicit\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                       \u003cspan class=\"c1\"\u003e# just 2, first element of the Parcel\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                        \u003cspan class=\"c1\"\u003e# array with one element\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e19\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# array with one element (List of Lists - LoL)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@dev\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edan\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eparrot\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# array with one element (a Hash)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@data\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Array of Arrays (LoL)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003elol\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# no change\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eflat\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# returns 1..15\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eArray Slices\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e                       \u003cspan class=\"c1\"\u003e# all values as list\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# same thing\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# list of all indices\u003c/span\u003e\n\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"s2\"\u003e[]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e                   \u003cspan class=\"c1\"\u003e# insert all values in a string, uses [] to distinguish from mail adresses\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$prime\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# get the first prime\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$prime\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# get the last one\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@some\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# get several\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$cell\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# get 8, third value of second value (list)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$cell\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# same thing, shorten syntax\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@numbers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# get a copy of the second subarray (6..10)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@copy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# shallow copy of the array\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eArray Methods\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSome of the more important things you can do with lists. All the methods can also used like ops in \u0026ldquo;elems @array;\u0026rdquo;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# boolean context, Bool::True if array has any value in it, even if it\u0026#39;s a 0\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# numeric context, number of elements (like in Perl 5 scalar @a)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# string context, you get content of all cells, stringified and joined, same as \u0026#34;@primes[]\u0026#34;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# same as + @array\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eend\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# number of the last element, equal to @array.elems-1\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# same ~ @array\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u0026#39;);\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# also same result, you can put another string as parameter that gets between all values\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eunshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# prepend one value to the array\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# remove the first value and return it\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# add one value on the end\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epop\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# remove one value from the end and return it\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplice\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$pos\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e# starting at $pos remove $n values and replace them with values that follow those two\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eparameters\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@ind\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# delete all cells with indices in @ind\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@ind\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# Bool::True if all indices of @ind have a value (can be 0 or \u0026#39;\u0026#39;)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# return $n (default is 1) randomly selected values, without duplication\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# return $n (default is 1) randomly selected values, duplication possible (like roll dice)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# all elements in reversed order\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# returns a list where $n times first item is taken to last\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# position if $n is positive, if negative the other way around\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$coderef\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# returns a list sorted by a user-defined criteria, default is alphanumerical sorting\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# numerical smallest value of that array\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# numerical largest value of that array\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminmax\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# both at once, like in .sort,  .min, or .max, a sorting algorithm can be provided\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$coderef\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# high oder map function, runs $coderef with every value as $_ and returns the list or results\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclassify\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# kind of map, but creates a hash, where keys are the results of $cr and values are from @array\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecategorize\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"c1\"\u003e# kind of classify, but closure can have no (Nil) or several results, so a key can have a list of values\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# high order grep, returns only these elements that pass a condition ($cr returns something positive)\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efirst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$coder\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# kind of grep, return just the first matching value\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ezip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# join arrays by picking first element left successively from here and then there\u003c/span\u003e\n\u003cspan class=\"n\"\u003eThere\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eeven\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003ewhole\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nc\"\u003emetaoperators\u003c/span\u003e \u003cspan class=\"n\"\u003ethat\u003c/span\u003e \u003cspan class=\"n\"\u003ework\u003c/span\u003e \u003cspan class=\"n\"\u003eupon\u003c/span\u003e \u003cspan class=\"n\"\u003elists\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eHash\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn Raku a Hash is an unordered list of Pairs. A Pair is a single key =\u0026gt; value association and appears in many places of the language syntax. A hash allows lookup of values by key using {} or \u0026lt;\u0026gt; syntax.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epugs\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaudreyt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epct\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epm\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eSTD\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003elarry\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003erakudo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ejnthn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003etestsuite\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emoritz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# adverb (pair) syntax works as well\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaudreyt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epugs\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epm\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epct\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003elarry\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eSTD\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# lists get autoconverted in hash context\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%compiler\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eParrot\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003eRakudo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ejnthn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eSMOP\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003eMildew\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eruoso\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# hash of hashes (HoH)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eHash Slices\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e$value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# just give me the value related to that key, like in P5\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003epm\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# \u0026lt;\u0026gt; autoquotes like qw() in P5\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026gt;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# same thing, just with eval\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ekey1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ekey2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ekey1 key2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"s2\"\u003ekey1 key2 \u003c/span\u003e\u003cspan class=\"nv\"\u003e$key3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%compiler\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eParrot\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eRakudo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# value in a HoH, returns \u0026#39;jnthn\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%compiler\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eSMOP\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# returns the Pair: Mildew =\u0026gt; \u0026#39;ruoso\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaudrey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# error, spaces between varname and braces (postcircumfix operator) are no longer allowed\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\\  \u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eallison\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# works, quote the space\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e   \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003edukeleto\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# error\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\\ \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epatrick\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# works too, \u0026#34;long dot style\u0026#34;, because it\u0026#39;s an object in truth\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eHash Methods\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e# bool context, true if hash has any pairs\u003c/span\u003e\n\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e# numeric context, returns number of pairs(keys)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e# string context, nicely formatted 2 column table using \\t and \\n\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$table\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# same as ~ %dev\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# stringified, but only $key and $value are separated by \\t\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@pairs\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# list of all containing pairs\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epairs\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# same thing in all context\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# same as + %dev or + %dev.pairs\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# returns a list of all keys\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# list of all values\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekv\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# flat list with key1, value1, key 2 ...\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003einvert\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# reverse all key =\u0026gt; value relations\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%dev\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@pairs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# inserts a list of pairs, if a key is already present in %dev, both values gets added to an array\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eCallable\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eInternally subroutines, methods and alike are variables with the sigil \u0026amp; and stored in a fourth namespace. Unlike Perl 5, all subroutines can be overwritten or augmented with user defined routines. Of course scalars can also contain routines.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e\u0026amp;function\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# store subroutine in callable namespace\u003c/span\u003e\n\u003cspan class=\"nf\"\u003efunction\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e                      \u003cspan class=\"c1\"\u003e# call/run it\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$coderef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# store it in a scalar\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$coderef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$several\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$parameter\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# run that code\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eData Types\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn contrast to variable types (container types) every value has a type too. These are organized internally as classes or roles and can be categorized into 3 piles: the undefined, immutable, and the mutable types.\u003c/p\u003e\n\u003cp\u003eYou can assign one of these types to scalar, array, or hash variables, which enforces the contents to be that type.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# array of Int\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003ePair\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePairs are new and their syntax is used nearly everywhere in the language where there is an association between a name and a value.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e$pair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ejakub\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehelena\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# \u0026#34;=\u0026gt;\u0026#34; is the pair constructor\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$pair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ejakub\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehelena\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# same in adverbial notation\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$pair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ejakub\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ehelena\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# same using \u0026lt;\u0026gt;, the new qw()\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$pair\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekey\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e# returns \u0026#39;jakub\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$pair\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e                   \u003cspan class=\"c1\"\u003e# returns \u0026#39;helena\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$pair\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eisa\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ePair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# Bool::True\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eCapture\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCaptures are also a new type, which holds the parameters a routine gets. Because Perl now knows both positional and named parameters, it is a mixture of a list and array.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e$cap\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \\\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# creating a capture, \u0026#34;\\\u0026#34; was free since there are no references anymore\u003c/span\u003e\n\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cap\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e# flatten into argument list (without |, it will pass it as a single value)\u003c/span\u003e\n\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cap\u003c/span\u003e                        \u003cspan class=\"c1\"\u003e# flatten into semicolon list (meant for variadic functions that take list of lists)\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOne important difference between a capture and a compound structure of lists and hashes: While assignments with = will copy the complete content of the named variables, this is not so in the case of a capture. When I change sinthelastexample, thecontentofcap changes too, because when parameters to a routine are variables, they are also interpolated in the moment the routine is called, not when it\u0026rsquo;s defined.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eAssignment and Binding\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAssignment\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAs rightfully expected, assignments are done with the equal sign. But unlike Perl 5 you always get a copy of the right side data assigned to the left, no matter how nested the data structure was (lists of lists eg). You never get in Raku a reference with =. The only exception may be seen captures.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@original\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e],[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$copy\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@original\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# $copy points to [1,2]\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@original\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efresh stuff\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# $copy[0] holds still 1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eBinding\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSince every variable in Raku is a reference, programmers can use binding to get 2 variables that point to the same memory location.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mirror\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# normal binding, done on runtime\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e::=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mirror\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# same thing, but done during compile time\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mirror\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# prints 3\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e=:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mirror\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# true, because they\u0026#39;re bound together\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mirror\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# also true, because content and type are equal\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eFP oriented\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ebalanced\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enone\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"o\"\u003e.[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n        \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\\\u003cspan class=\"o\"\u003e+]\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"s1\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e«\u003c/span\u003e\u003cspan class=\"ow\"\u003eleg\u003c/span\u003e\u003cspan class=\"o\"\u003e«\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eprompt\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNumber of bracket pairs: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e[ ]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003ebalanced\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eis\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eis not\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e well-balanced\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eString munging\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ebalanced\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nb\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;//;\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eprompt\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNumber of bracket pairs: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e[ ]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"s2\"\u003e is\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e not\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"nb\"\u003enot\u003c/span\u003e \u003cspan class=\"nf\"\u003ebalanced\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"err\"\u003e, \u0026#34; well-balanced\u0026#34;;\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eParsing with a grammar\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eBalBrack\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eprompt\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNumber of bracket pairs: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eBalBrack\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eis\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eis not\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e well-balanced\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e凯撒加密\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e实现一个凯撒加密， 编码和解码都要有\u003c/p\u003e\n\u003cp\u003ekey 是一个 1 到 25 之间的整数\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alpha\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eZ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eencrypt\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$plaintext\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$plaintext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etrans\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alpha\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alpha\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003edecrypt\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$cyphertext\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$cyphertext\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etrans\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alpha\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alpha\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eTHE FIVE BOXING WIZARDS JUMP QUICKLY\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$en\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003eencrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$de\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003edecrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$en\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$en\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$de\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eOK\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003edecrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003eencrypt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$original\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre\u003e\u003ccode\u003eOutput:\nTHE FIVE BOXING WIZARDS JUMP QUICKLY\nGUR SVIR OBKVAT JVMNEQF WHZC DHVPXYL\nTHE FIVE BOXING WIZARDS JUMP QUICKLY\nOK\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e日期格式化\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e使用 \u0026ldquo;2007-11-10\u0026rdquo; 和 \u0026ldquo;Sunday, November 10, 2007\u0026rdquo; 日期格式显式当前日期:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eUtils\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nf\"\u003estrftime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%Y-%m-%d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nf\"\u003estrftime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%A, %B %d, %Y\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e阶乘\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003en 的阶乘定义为 \u003ccode\u003en*(n-1)*(n-2)…*1\u003c/code\u003e, 零的阶乘为1.\u003c/p\u003e\n\u003cp\u003e定义一个函数返回一个数字的阶乘。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用自定义后缀操作符\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003epostfix\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"o\"\u003e[*]\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e[*]\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\\\u003cspan class=\"o\"\u003e*]\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e标量容器中存储的对象不会在 flattening 上下文中插值，即使那个对象是可迭代的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 5次迭代\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1\n2\n3\n4\n5\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 3次迭代\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1\n2\n3 4 5\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这里，\u003ccode\u003e$s\u003c/code\u003e 和 \u003ccode\u003e@a\u003c/code\u003e 指向同一个数组对象，但是标量容器的出现阻止 \u003ccode\u003e$s\u003c/code\u003e 被展开到 for 循环中。\u003c/p\u003e\n\u003cp\u003e.list 和 .flat 方法能被用于还原展开行为：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# 5次遍历\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 5次遍历，@()会强制为列表上下文\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1\n2\n3\n4\n5\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e相反，\u003ccode\u003e.item\u003c/code\u003e 方法和 \u003ccode\u003e$()\u003c/code\u003e 能用于防止插值：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# @b 有5个元素\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# @c 有3个元素\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# 同上\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e@c\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 3\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eFeed operators\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003efeed 操作符是完全懒惰的，意味着在使用者要求任何元素之前不会执行任何操作。这就是\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-rraku\" data-lang=\"rraku\"\u003emy @a \u0026lt;== grep { ... } \u0026lt;== map { ... } \u0026lt;== grep { ... } \u0026lt;== 1, 2, 3\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e是完全懒惰的。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eGrammars\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e文法是一种强大的工具, 用于拆解文本,并通常返回数据结构\n例如, Raku 是使用 Raku 风格的文法解析和执行的.\n对普通 Raku 用户来说,一个更实用的例子就是 JSON::Simple 模块, 这个模块能反序列化任何有效的 JSON 文件, 反序列化代码还写了不到 100 行, 简单,可扩展.\u003c/p\u003e\n\u003cp\u003e词法允许你组织正则, 就像类允许你组织普通代码的方法一样.\u003c/p\u003e\n\u003ch2 id=\"命名正则\"\u003e命名正则\u003c/h2\u003e\n\u003cp\u003e命名正则有特殊的语法, 与\u003cstrong\u003e子例程\u003c/strong\u003e的定义类似:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003enumber\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e. \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个例子中, 我们必须使用 \u003cstrong\u003emy\u003c/strong\u003e 关键词指定这个正则是词法作用域的, 因为 \u003cstrong\u003e命名正则\u003c/strong\u003e 通常用在 词法中.\n给正则命名后有利于在其他地方\u003ccode\u003e复用\u003c/code\u003e正则:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e32.51\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e    \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;number\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e15 + 4.5\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e首先说下, 使用 \u003ccode\u003eregex/token/rule\u003c/code\u003e 定义了一个正则表达式后怎么去调用它。就像调用一个子例程那样, 使用 \u003ccode\u003e\u0026amp;\u003c/code\u003e 符号:\n\u003ccode\u003e\u0026amp;\u003c/code\u003e 后面跟正则表达式的名字,  即 \u003ccode\u003e\u0026amp;regex_name\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eregex 不是命名正则仅有的标识符 \u0026ndash; 实际上, 它用的不多. 大多数时候, 用的最多的是 \u003ccode\u003etoken\u003c/code\u003e 和 \u003ccode\u003erule\u003c/code\u003e 标识符. 它们都是\u003ccode\u003e不能回溯\u003c/code\u003e的, 这意味着正则引擎在匹配失败时不会备份和重试. 这通常是你想要的, 但不是对所有场合都合适:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003eworks-but-slow\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e q \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003efails-but-fast\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e q \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Tokens 不会沿原路返回, 这让它们更快地失败!\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eTokens won\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;t backtrack, which makes them fail quicker!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;works-but-slow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;fails-but-fast\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# False, the entire string get taken by the .+\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003etoken\u003c/code\u003e 和 \u003ccode\u003erule\u003c/code\u003e 标识符的不同之处在于 \u003ccode\u003erule\u003c/code\u003e 标识符让 \u003ccode\u003eRegex\u003c/code\u003e 的 \u003ccode\u003e:sigspace\u003c/code\u003e 起作用了:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003enon-space-y\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e once upon a time \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003espace-y\u003c/span\u003e      \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e once upon a time \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eonceuponatime\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;non-space-y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eonce upon a time\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;space-y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"action-classes\"\u003eAction Classes\u003c/h2\u003e\n\u003cp\u003e实际上, 命名正则甚至能接受额外的参数, 它使用的语法跟子例程参数列表的语法一样.\u003c/p\u003e\n\u003cp\u003e​写一个程序打印从 1  到 100 的整数，但是对 3 的倍数打印 \u0026ldquo;Fizz\u0026rdquo;, 对 5 的倍数打印 \u0026ldquo;Buzz\u0026rdquo;, 对于即是 3 的倍数，又是 5 的倍数的打印 \u0026ldquo;FizzBuzz\u0026rdquo;.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFizzBuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFizz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edefault\u003c/span\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr abusing multi subs:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efizzbuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFizzBuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efizzbuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efizzbuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFizz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efizzbuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;fizzbuzz\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eMost concisely:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFizz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAnd here\u0026rsquo;s an implementation that never checks for divisibility:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e((\u0026#39;\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFizz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e(\u0026#39;\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBuzz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"err\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"Set my $keywords = set \u0026lt;if for unless while\u0026gt;; # create a set sub has-keyword(*@words) { for @words -\u0026gt; $word { # 依次检查数组中的元素是否属于集合 $keywords return True if $word (elem) $keywords; } False; } say has-keyword \u0026#39;not\u0026#39;, \u0026#39;one\u0026#39;, \u0026#39;here\u0026#39;; # False say has-keyword \u0026#39;but\u0026#39;, \u0026#39;here\u0026#39;, \u0026#39;for\u0026#39;; # True Series Operator my @a=\u0026lt;A G C T\u0026gt;; my $x=@a; for 1 ... * -\u0026gt; $a { (( [X~] $x xx $a )).join(\u0026#39;,\u0026#39;).say; last if $a == 4; } 倒序的 range:\nfor 10 ... 0 { .say; } flip/plop my $file = open \u0026#39;flip_flop.txt\u0026#39;; for $file.lines -\u0026gt; $line { say $line if !($line ~~ m/^\\;/ ff $line ~~ m/^\\\u0026#34;/); } $line ~~ m/^\\;/ ff $line ~~ m/^\\\u0026quot;/ 过滤掉 ; 和 \u0026quot; 之间的内容, 再对它进行取反操作就是过滤后剩下的文本。\nflip_flop.txt 内容如下：\n; next is some lines to skip,include this line fuck fuck fuck dam dam dam mie mie mie \u0026quot; next is subject There is more than one way to do it -- Larry Wall We hope Raku is wrote by the hole Socfilia -- Larry Wall ; next is some lines to skip,include this line fuck fuck fuck dam dam dam mie mie mie \u0026quot; next is subject programming is hard,Let's go shopping -- Larry Wall Ruby is Another Raku -- Larry Wall 输出：\nThere is more than one way to do it -- Larry Wall We hope Raku is wrote by the hole Socfilia -- Larry Wall programming is hard,Let\u0026#39;s go shopping -- Larry Wall Ruby is Another Raku -- Larry Wall ff 操作符左右两侧的 ^ 表示排除:\nfor 1..20 {.say if $_==9 ff $_==16} say \u0026#39;-\u0026#39; x 10; for 1..20 {.say if $_==9 ^ff $_==16} say \u0026#39;-\u0026#39; x 10; for 1..20 {.say if $_==9 ff^ $_==16} say \u0026#39;-\u0026#39; x 10; for 1..20 {.say if $_==9 ^ff^ $_==16} 输出:\n9 10 11 12 13 14 15 16 ---------- 10 11 12 13 14 15 16 ---------- 9 10 11 12 13 14 15 ---------- 10 11 12 13 14 15 Grammars 解析 CSV:\n﻿grammar CSV { token TOP {[\u0026lt;line\u0026gt;\\n?]+} token line {^^# Beginning of a line \u0026lt;value\u0026gt;*%\\, # Any number of \u0026lt;value\u0026gt;s with commas in `between` them $$# End of a line } token value {[|\u0026lt;-[\u0026#34;,\\n]\u0026gt;# Anything not a double quote, comma or newline |\u0026lt;quoted-text\u0026gt;# Or some quoted text ]*# Any number of times } token quoted-text {\\\u0026#34; [|\u0026lt;-[\u0026#34;\\\\]\u0026gt;# Anything not a \u0026#34; or \\ |\u0026#39;\\\u0026#34;\u0026#39;# Or \\\u0026#34;, an escaped quotation mark ]*# Any number of times \\\u0026#34; } } # method parse($str, :$rule = \u0026#39;TOP\u0026#39;, :$actions) returns Match:D say \u0026#34;Valid CSV file!\u0026#34; if CSV.parse( q:to/EOCSV/ ); Year,Make,Model,Length 1997,Ford,E350,2.34 2000,Mercury,Cougar,2.38 EOCSV say CSV.parse( q:to/EOCSV/,\u0026#39;line\u0026#39;, :$actions ); Year,Make,Model,Length 1997,Ford,E350,2.34 2000,Mercury,Cougar,2.38 EOCSV 解析天气数据:\ngrammar StationDataParser { token TOP {^\u0026lt;keyval\u0026gt;+\u0026lt;observations\u0026gt;$} token keyval {$\u0026lt;key\u0026gt;=[\u0026lt;-[=]\u0026gt;+]\u0026#39;=\u0026#39;\\h*$\u0026lt;val\u0026gt;=[\\N+]\\n} token observations {\u0026#39;Obs:\u0026#39;\\h*\\n\u0026lt;observation\u0026gt;+} token observation {$\u0026lt;year\u0026gt;=[\\d+]\\h*\u0026lt;temp\u0026gt;+%%[\\h*]\\n} token temp {\u0026#39;-\u0026#39;?\\d+\\. \\d+} } class StationData { has $.name; has $.country; has @.data; submethod BUILD(:%info (:Name($!name), :Country($!country), *%), :@!data) { } } class StationDataActions { method TOP($/) { make StationData.new( info =\u0026gt; $\u0026lt;keyval\u0026gt;.map(*.ast).hash, data =\u0026gt; $\u0026lt;observations\u0026gt;.ast ); } method keyval($/) { make ~$\u0026lt;key\u0026gt; =\u0026gt; ~$\u0026lt;val\u0026gt;; } method observations($/) { make $\u0026lt;observation\u0026gt;.map(*.ast).grep(*.value.none \u0026lt;= -99); } method observation($/) { make +$\u0026lt;year\u0026gt; =\u0026gt; $\u0026lt;temp\u0026gt;.map(*.Num); } } say StationDataParser.parse( q:to/EOCSV/,:actions(StationDataActions)).ast Name= Jan Mayen Country= NORWAY Lat= 70.9 Long= 8.7 Height= 10 Start year= 1921 End year= 2009 Obs: 1921 -4.4 -7.1 -6.8 -4.3 -0.8 2.2 4.7 5.8 2.7 -2.0 -2.1 -4.0 1922 -0.9 -1.7 -6.2 -3.7 -1.6 2.9 4.8 6.3 2.7 -0.2 -3.8 -2.6 2008 -2.8 -2.7 -4.6 -1.8 1.1 3.3 6.1 6.9 5.8 1.2 -3.5 -0.8 2009 -2.3 -5.3 -3.2 -1.6 2.0 2.9 6.7 7.2 3.8 0.6 -0.3 -1.3 EOCSV Raku Examples  1、生成8位随机密码  my @char_set = (0..9, \u0026#39;a\u0026#39;..\u0026#39;z\u0026#39;, \u0026#39;A\u0026#39;..\u0026#39;Z\u0026#39;,\u0026#39;~\u0026#39;,\u0026#39;!\u0026#39;,\u0026#39;@\u0026#39;,\u0026#39;#\u0026#39;,\u0026#39;$\u0026#39;,\u0026#39;%\u0026#39;,\u0026#39;^\u0026#39;,\u0026#39;\u0026amp;\u0026#39;,\u0026#39;*\u0026#39;); say @char_set.pick(8).join(\u0026#34;\u0026#34;) # 不重复的8位密码 say @char_set.roll(8).join(\u0026#34;\u0026#34;) # 可以重复  2、打印前5个数字  .say for 1..10[^5] .say for 1,2,3,4 ... [^10] # 这个会无限循环   3、排序\n  3.1 按数值排序\n  my %hash = \u0026#39;Perl\u0026#39; =\u0026gt; 100, \u0026#39;Python\u0026#39; =\u0026gt; 100, \u0026#39;Go\u0026#39; =\u0026gt; 100, \u0026#39;CMD\u0026#39; =\u0026gt; 20, \u0026#39;Php\u0026#39; =\u0026gt; 80, \u0026#39;Java\u0026#39; =\u0026gt; 85; %hash.values.sort; %hash.values.sort(-*);  3.2 按分数排序散列：  my %hash = \u0026#39;Perl\u0026#39; =\u0026gt; 80, \u0026#39;Python\u0026#39; =\u0026gt; 100, \u0026#39;Go\u0026#39; =\u0026gt; 95, \u0026#39;CMD\u0026#39; =\u0026gt; 20, \u0026#39;Php\u0026#39; =\u0026gt; 80, \u0026#39;Java\u0026#39; =\u0026gt; 85; for %hash.sort({-.value}).hash.keys -\u0026gt; $key { say $key, \u0026#34;\\t\u0026#34;, %hash{\u0026#34;$key\u0026#34;} } 输出:\nPython\t100 Go\t95 Java\t85 Perl\t80 Php\t80 CMD\t20 (\u0026#39;xx\u0026#39;..\u0026#39;zz\u0026#39;).classify(*.substr(1))\u0026lt;z\u0026gt;; # xz yz zz 加密：\nsub rot13 { $^s.trans(\u0026#39;a..z\u0026#39; =\u0026gt; \u0026#39;n..za..m\u0026#39;, \u0026#39;A..Z\u0026#39; =\u0026gt; \u0026#39;N..ZA..M\u0026#39;) }  4、求 1! + 2! + 3! + 4! +5! + 6! +7! +8! +9! +10!  multi sub postfix:\u0026lt;!\u0026gt;(Int $x){ [*] 1..$x } say [+] 1!,2!,3!,4!,5!,6!,7!,8!,9!,10! # 4037913  5、列出对象所有可用的方法  使用元对象协议， 即 对象名.^methods\n\u0026gt; \u0026#34;JZY\u0026#34;.^methods  BUILD Int Num chomp chop substr pred succ match ords lines samecase samespace tr im-leading trim-trailing trim words encode wordcase trans indent codes path WHIC H Bool Str Stringy DUMP ACCEPTS Numeric gist perl comb subst split\n  6、 匿名子例程  my $x = sub($a){ $a+2 };say $x($_) for 1..4 my $x = -\u0026gt; $a { $a+2 };say $x($_) for 1..4 my $x = * + 2;say $x($_) for 1..4  7、字符串翻转与分割  \u0026gt; 1223.flip 3221 \u0026gt; 'abcd'.flip dcba \u0026gt; 1234.comb 1 2 3 4 \u0026gt; 1234.comb(/./) 1 2 3 4 \u0026gt; 'abcd'.comb a b c d  8、有这么一个四位数 A，其个位数相加得到 B，将 B 乘以 B 的反转数后得到 A，请求出这个数字。  举例， 1458 就符合这个条件，1+4+5+8 ＝ 18， 18 ＊ 81 ＝1458\n请找出另一个符合上面条件的四位数。\n(^37).map: { my $r = $_ * .flip; 1000 \u0026lt; $r and $_ == [+] $r.comb and say $r } ^37 产生一个范围 0 .. ^37, 就是 0到36之前的数，在表达式中代表 B\nmy $b; for 1000..^10000 -\u0026gt; $i { $b=[+] $i.comb; say $i if $b*$b.flip == $i; } 输出:\n1458 1729  9、 大小写转换  \u0026gt; my $word= \u0026quot;I Love Raku\u0026quot; I Love Raku \u0026gt; $word.wordcase() I Love Raku \u0026gt; my $lowercase = \u0026quot;i love perl 6\u0026quot; i love perl 6 \u0026gt; $lowercase.wordcase() I Love Raku \u0026gt; $word.samecase('A') I LOVE PERL 6 \u0026gt; $word.samecase('a') i love perl 6 \u0026gt; $word.samecase('a').wordcase() I Love Raku  10、 多行文本  my $string = q:to/THE END/;Norway Oslo : 59.914289,10.738739 : 2 Bergen : 60.388533,5.331856 : 4 Ukraine Kiev : 50.456001,30.50384 : 3 Switzerland Wengen : 46.608265,7.922065 : 3 THE END say $string;  11、 超运算符与子例程  my @a = \u0026lt;1 2 3 4\u0026gt;; sub by2($n){ return 2*$n; } sub power2($n) { return $n ** 2; } my @b = @a».\u0026amp;by2».\u0026amp;power2; say @b; # 4 16 36 64 为什么是 \u0026amp;function 呢：\n the name of the by2 function is \u0026amp;by2, just as the name of the foo scalar is $foo and the name of the foo array is @foo\n  12、 如何在 Raku 中执行外部命令并捕获输出  \u0026gt; my $res = qqx{mkdir 123456} # 或使用 qx{ } \u0026gt; my $res = qx{mkdir 112233}  13、Does Raku support something equivalent to Perl5\u0026rsquo;s DATA and END sections?  =fooThis is a Pod block. A single line one. This Pod block\u0026#39;s name is \u0026#39;foo\u0026#39;. =beginquxThis is another syntax for defining a Pod block. It allows for multi line content. This block\u0026#39;s name is \u0026#39;qux\u0026#39;. =end qux =dataA data block -- a Pod block with the name \u0026#39;data\u0026#39;. # Data blocks are P6\u0026#39;s version of P5\u0026#39;s __DATA__. # But you can have multiple data blocks: =begindataAnother data block. This time a multi line one. =end data $=pod.grep(*.name eq \u0026#39;data\u0026#39;).map(*.contents[0].contents.say); say \u0026#39;-\u0026#39; x 45; for @$=pod { if .name eq \u0026#39;data\u0026#39; { say .contents[0].contents } }  14、生成含有26个英文字母和下划线的 junction  any(\u0026#39;A\u0026#39;..\u0026#39;Z\u0026#39;,\u0026#39;a\u0026#39;..\u0026#39;z\u0026#39;,\u0026#39;_\u0026#39;);  15、判断一个字符是否在某个集合中  \u0026gt; so any(\u0026#39;A\u0026#39;..\u0026#39;Z\u0026#39;,\u0026#39;a\u0026#39;..\u0026#39;z\u0026#39;) ∈ set(\u0026#34;12a34\u0026#34;.comb) \u0026ldquo;12a34\u0026rdquo;.comb 会把字符串分割为单个字符，返回一个字符数组。\n 16、生成 IP 地址范围  .say for \u0026#34;192.168.10.\u0026#34; «~» (0..255).list  17、 生成 OC 中的测试数组  .say for \u0026#34;@\u0026#34; «~» \u0026#39;\u0026#34;Perl\u0026#39; «~» (1..30).list «~» \u0026#39;\u0026#34;,\u0026#39; @\u0026quot;Perl\u0026quot;1\u0026quot;, @\u0026quot;Perl\u0026quot;2\u0026quot;, @\u0026quot;Perl\u0026quot;3\u0026quot;, @\u0026quot;Perl\u0026quot;4\u0026quot;, @\u0026quot;Perl\u0026quot;5\u0026quot;, …   18、我想以 AGCT 4 种字母为基础生成字符串。  比如希望长度为1，输出A,G,C,T。\n如果长度为2，输出 AA,AG,AC,AT,GA,GG,GC,GT,CA,CG,CC,CT,TA,TG,TC,TT。这样的结果。\n@a X~ \u0026#34;\u0026#34; # 长度为1 (@a X~ @a) # 长度为2 (@a X~ @a) X~ @a # 长度为3 @a X~ @a X~ @a X~ @a # 长度为4 \u0026gt; my @a=\u0026lt;A G C T\u0026gt; A G C T \u0026gt; my $x=@a A G C T \u0026gt; $x xx 2 A G C T A G C T \u0026gt; $x xx 3 A G C T A G C T A G C T \u0026gt; ($x xx 3).WHAT (List) \u0026gt; $x.WHAT (Array) \u0026gt; ([X~] $x xx 2).join(',') AA,AG,AC,AT,GA,GG,GC,GT,CA,CG,CC,CT,TA,TG,TC,TT 惰性操作符：\nmy @a=\u0026lt;A G C T\u0026gt;; my $x=@a; # 或者使用 $x = @(\u0026#39;A\u0026#39;,\u0026#39;G\u0026#39;,\u0026#39;C\u0026#39;,\u0026#39;T\u0026#39;) for 1 ...^ * -\u0026gt; $a {(([X~] $x xx $a)).join(\u0026#39;,\u0026#39;).say;last if $a==4;}; Best Of Raku  Command Line 命令行  # Perl 5 Raku print \u0026#34;bananas are good\\n\u0026#34;; say \u0026#34;bananas are good\u0026#34;; print \u0026#34;and I said: $quotes{\\\u0026#34;me\\\u0026#34;}\\n\u0026#34;; say \u0026#34;and I said: %quotes{\u0026#34;me\u0026#34;}.\u0026#34;; print \u0026#34;and I said: $quotes{\\\u0026#34;me\\\u0026#34;}\\n\u0026#34;; say \u0026#34;and I said: %quotes\u0026lt;me\u0026gt;.\u0026#34;; print \u0026#34;What is ... \u0026#34;; $result = prompt \u0026#34;What is ... \u0026#34;; chomp($result = \u0026lt;\u0026gt;);  File IO  # Perl 5 Raku $content = do { local $/; $content = slurp \u0026#34;poetry.txt\u0026#34;; open my $FH, \u0026#34;poetry.txt\u0026#34;; \u0026lt;$FH\u0026gt; }; chomp(@content = do { @content = lines \u0026#34;poetry.txt\u0026#34;; open my $FH, \u0026#34;poetry.txt\u0026#34;; \u0026lt;$FH\u0026gt; });  Automatic multithreading  Applying operations to junctions and arrays is now syntactically compact and readable. Raku will create threads where appropriate to use multiple processors, cores or hyperthreading for high level language SIMD concurrent processing.\n# Perl 5 Raku my $sum; my $sum = [+] @numbers; $sum += $_ for @numbers; for (0 .. $#factor1) { @product = @factor1 \u0026gt;\u0026gt;*\u0026lt;\u0026lt; @factor2; $product[$] = $factor1[$] * $factor2[$_]; } The Perl 5 code is a simplification, of course Raku \u0026ldquo;does the right thing\u0026rdquo; when the arrays have different lengths.\n 比较  Here are junctions, then chained comparison operators.\n# Perl 5 Raku if ($a == 3 or $a == 4 or $a == 7) {...} if $a = 3 | 4 | 7 {...} if (4 \u0026lt; $a and $a \u0026lt; 12) {...} if 4 \u0026lt; $a \u0026lt; 12 {...} if (4 \u0026lt; $a and $a \u0026lt;= 12) {...} if $a ~~ 4^..12 {...} $a = defined $b ? $b : $c; $a = $b // $c; The defined-OR operator eases lot of cases where Perl 5 newbies could fall into traps.\n Case 结构  # Perl 5 Raku given $a { if ($a == 2 or $a == 5) {...} }}when 2 | 5 {...} elsif ($a == 6 or $a == 7 or $a == 8 or $a == 9) {} when 6 .. 9 {...} elsif ($a =~ /g/) {...} when \u0026#39;g\u0026#39; {...} else {...} default {...} } That new construct (backported to 5.10) is clear to read, very versatile and when used in combination with junctions, becomes even clearer.\n 强大的循环  List iteration via for is now much more versatile.\n# Perl 5 Raku for my $i (0..15) {...} for ^16 -\u0026gt; $i {...} for (my $i=15; $i\u0026gt;1; $i-2) {...} for 15,*-2...1 -\u0026gt; $i {...} for my $key (keys %hash) { for %hash.kv -\u0026gt; $key, $value { print \u0026#34;$key=\u0026gt; $hash{$key}\\n\u0026#34;; ... say \u0026#34;$key=\u0026gt; $value\u0026#34;; ... for my $i (0..$#a) { for zip(@a; @b; @c) -\u0026gt; $a, $b, $c {...} my $a = @a[$i]; my $b = @b[$i]; my $c = @c[$i]; ...  子例程中的具名参数  # Perl 5 Raku sub routine { sub routine ($a, $b, *@rest) {...} my $a = shift; my $b = shift; my @rest = @_; }  Objects with auto generated new and getters and setters  Simple Object creation is now as easy as it gets.\n# Perl 5 Raku package Heart::Gold; class Heart::Gold { has $.speed; sub new { method stop { $.speed = 0 } bless {speed =\u0026gt; 0 }, shift; } } my Heart::Gold $hg1 .= new; sub speed { $hg1.speed = 100; my $self = shift; my $hg2 = $hg1.clone; my $speed = shift; if (defined $speed) { $self-\u0026gt;{speed} = $speed } else { $self-\u0026gt;{speed} } } sub stop { my $self = shift; $self-\u0026gt;{speed} = 0; } Raku Variable  Variable Types  Raku (as Perl 5) knows 3 basic types of variables: Scalars (single values), Arrays (ordered and indexed lists of several values) and Hashes (2 column table, with ID and associated value pairs). They can be easily distinguished, because in front of their name is a special character called sigil (latin for sign). It\u0026rsquo;s the $ (similar to S) for Scalars, @ (like an a) for Arrays and a % (kv pair icon) for a Hash. They are now invariant (not changing), which means for instance, an array vaiable starts always with an @, even if you just want a slice of the content.\n$scalar @array @array[1] # $array[1] in Perl 5 @array[1,2] # @array[1,2] in Perl 5 %hash %hash{\u0026#39;ba\u0026#39;} # $hash{\u0026#39;ba\u0026#39;} in Perl 5 %hash{\u0026#39;ba\u0026#39;,\u0026#39;da\u0026#39;,\u0026#39;bim\u0026#39;} # @hash{\u0026#39;ba\u0026#39;,\u0026#39;da\u0026#39;,\u0026#39;bim\u0026#39;} in Perl 5 The sigils also mark distinct namespaces, meaning: in one lexical scope you can have 3 different variables named $stuff, @stuff and %stuff. These sigils can also be used as an operator to enforce a context in which the following data will be seen.\nThe fourth namespace is for subroutines and similar, even if you don\u0026rsquo;t usually think of them as variables. It\u0026rsquo;s sigil \u0026amp; is used to refer to subroutines without calling them.\nAll special namespaces from Perl 5 (often marked with special syntax), like tokens (PACKAGE), formats, file or dir handles, or builtins are now regular variables or routines.\nBecause all variables contain objects, they have methods. In fact, all operators, including square or curly bracket subscripts, are just methods of an object with a fancy name.\nThe primary sigil can be followed by a secondary sigil, called a twigil, which indicates a special scope for that variable.\nScalar This type stores one value, usually a reference to something: a value of a data type, a code object, an object or a compound of values like a pair, junction, array, hash or capture. The scalar context is now called item context, hence the scalar instruction from Perl 5 was renamed to item.\n$CHAPTER = 3; # first comment! $bin = 0b11; # same value in binary format $pi = 3.14159_26535_89793; # the underscores just ease reading $float = 6.02e-23; # floating number in scientific notation $text = \u0026#39;Welcome all!\u0026#39;; # single quoted string # double quoted string, does eval $pi to it\u0026#39;s content $text = \u0026#34;What is $pi?\u0026#34;; $text = q:to\u0026#39;EOT\u0026#39;;# heredoc string handy for multiline text like HTML templates or email EOT $handle = open $file_name; # file handle # an object from a class with a nested namespace $object = Class::Name.new(); $condition = 3|5|7; # a junction, a logical conjunction of values $arrayref = [0,1,1,2,3,5,8,13,21]; # an array stored as a single item # a hash stored as a single item $hashref = {\u0026#39;audreyt\u0026#39; =\u0026gt; \u0026#39;pugs\u0026#39;, \u0026#39;pm\u0026#39; =\u0026gt; \u0026#39;pct\u0026#39;, \u0026#39;damian\u0026#39; =\u0026gt; \u0026#39;larrys evil henchman\u0026#39;}; # pointing to a callable $coderef = sub { do_something_completely_diffenent(@_) }; (For info on some of those terms: comment, binary format, the underscores ease reading, scientific notation, single-quoted string, double-quoted string, heredoc string, file handle, class, junction, list of values, hash, callable.)\nUnlike Perl 5, references are automatically dereferenced to a fitting context. So you could use these $arrayrefs and $hashrefs similarly to an array or hash, making $ the universal variable prefix, pretty much like in PHP. The primary difference is that $ prefixed lists are not flattened in lists.\nmy $a = (1, 2, 3); my @a = 1, 2, 3; for $a { } # just one iteration for @a { } # three iterations Scalar Methods my $chapter = 3; undefine $chapter; defined $a; # false, returns 0  Array  An array is an ordered and indexed list of scalars. If not specified otherwise, they can be changed, expanded and shortened anytime and used as a list, stack, queue and much more. As in Haskell, lists are processed lazily, which means: the compiler looks only at the part it currently needs. This way Raku can handle infinite lists or do computation on lists that have not been computed yet. The lazy command enforces this and the eager command forces all values to be computed.\nThe list context is forced with a @() operator or list() command. That\u0026rsquo;s not autoflattening like in Perl 5 (automatically convert a List of Lists into one List). If you still want that, say flat(). Or say lol() to explicitly prevent autoflattening.\n@primes = (2,3,5,7,11,13,17,19,23); # an array gets filled like in Perl 5 @primes = 2,3,5,7,11,13,17,19,23 ; # same thing, since unlike P5 round braces just do group @primes = \u0026lt;2 3 5 7 11 13 17 19 23\u0026gt;; # ditto, \u0026lt;\u0026gt; is the new qw() $primes = (2,3,5,7,11,13,17,19,23); # same array object just sits in $primes, $primes[0] is 2 $primes = item @primes; # same thing, more explicit $primes = 2,; # just 2, first element of the Parcel @primes = 2; # array with one element @primes = [2,3,5,7,11,13,17,19,23]; # array with one element (List of Lists - LoL) @dev = {\u0026#39;dan\u0026#39; =\u0026gt; \u0026#39;parrot\u0026#39;}; # array with one element (a Hash) @data = [1..5],[6..10],[11..15]; # Array of Arrays (LoL) @list = lol @data; # no change @list = flat @data; # returns 1..15  Array Slices  @primes # all values as list @primes.values # same thing @primes.keys # list of all indices \u0026#34;@primes[]\u0026#34; # insert all values in a string, uses [] to distinguish from mail adresses $prime = @primes[0]; # get the first prime $prime = @primes[*-1]; # get the last one @some = @primes[2..5]; # get several $cell = @data[1][2]; # get 8, third value of second value (list) $cell = @data[1;2]; # same thing, shorten syntax @numbers = @data[1]; # get a copy of the second subarray (6..10) @copy = @data; # shallow copy of the array  Array Methods  Some of the more important things you can do with lists. All the methods can also used like ops in \u0026ldquo;elems @array;\u0026rdquo;\n? @array; # boolean context, Bool::True if array has any value in it, even if it\u0026#39;s a 0 + @array; # numeric context, number of elements (like in Perl 5 scalar @a) ~ @array; # string context, you get content of all cells, stringified and joined, same as \u0026#34;@primes[]\u0026#34; @array.elems; # same as + @array @array.end; # number of the last element, equal to @array.elems-1 @array.cat; # same ~ @array @array.join(\u0026#39;\u0026#39;); # also same result, you can put another string as parameter that gets between all values @array.unshift; # prepend one value to the array @array.shift; # remove the first value and return it @array.push; # add one value on the end @array.pop; # remove one value from the end and return it @array.splice($pos,$n);# starting at $pos remove $n values and replace them with values that follow those two  parameters  @array.delete(@ind); # delete all cells with indices in @ind @array.exists(@ind); # Bool::True if all indices of @ind have a value (can be 0 or \u0026#39;\u0026#39;) @array.pick([$n]); # return $n (default is 1) randomly selected values, without duplication @array.roll([$n]); # return $n (default is 1) randomly selected values, duplication possible (like roll dice) @array.reverse; # all elements in reversed order # returns a list where $n times first item is taken to last # position if $n is positive, if negative the other way around @array.rotate($n); @array.sort($coderef); # returns a list sorted by a user-defined criteria, default is alphanumerical sorting @array.min; # numerical smallest value of that array @array.max; # numerical largest value of that array $a,$b= @array.minmax; # both at once, like in .sort, .min, or .max, a sorting algorithm can be provided @array.map($coderef); # high oder map function, runs $coderef with every value as $_ and returns the list or results @array.classify($cr); # kind of map, but creates a hash, where keys are the results of $cr and values are from @array @array.categorize($cr);# kind of classify, but closure can have no (Nil) or several results, so a key can have a list of values @array.grep({$_\u0026gt;1}); # high order grep, returns only these elements that pass a condition ($cr returns something positive) @array.first($coder); # kind of grep, return just the first matching value @array.zip; # join arrays by picking first element left successively from here and then there There is even a whole class of metaoperators that work upon lists.  Hash  In Raku a Hash is an unordered list of Pairs. A Pair is a single key =\u0026gt; value association and appears in many places of the language syntax. A hash allows lookup of values by key using {} or \u0026lt;\u0026gt; syntax.\n%dev = \u0026#39;pugs\u0026#39;=\u0026gt;\u0026#39;audreyt\u0026#39;, \u0026#39;pct\u0026#39;=\u0026gt;\u0026#39;pm\u0026#39;, \u0026#34;STD\u0026#34;=\u0026gt;\u0026#39;larry\u0026#39;; %dev = :rakudo(\u0026#39;jnthn\u0026#39;), :testsuite(\u0026#39;moritz\u0026#39;); # adverb (pair) syntax works as well %dev = (\u0026#39;audreyt\u0026#39;, \u0026#39;pugs\u0026#39;, \u0026#39;pm\u0026#39;, \u0026#39;pct\u0026#39;, \u0026#39;larry\u0026#39;, \u0026#34;STD\u0026#34;); # lists get autoconverted in hash context %compiler = Parrot =\u0026gt; {Rakudo =\u0026gt; \u0026#39;jnthn\u0026#39;}, SMOP =\u0026gt; {Mildew =\u0026gt; \u0026#39;ruoso\u0026#39;}; # hash of hashes (HoH)  Hash Slices  $value = %dev{\u0026#39;key\u0026#39;}; # just give me the value related to that key, like in P5 $value = %dev\u0026lt;pm\u0026gt;; # \u0026lt;\u0026gt; autoquotes like qw() in P5 $value = %dev\u0026lt;\u0026lt;$name\u0026gt;\u0026gt;; # same thing, just with eval @values = %dev{\u0026#39;key1\u0026#39;, \u0026#39;key2\u0026#39;}; @values = %dev\u0026lt;key1 key2\u0026gt;; @values = %dev\u0026lt;\u0026lt;key1 key2 $key3\u0026gt;\u0026gt;; %compiler\u0026lt;Parrot\u0026gt;\u0026lt;Rakudo\u0026gt;; # value in a HoH, returns \u0026#39;jnthn\u0026#39; %compiler\u0026lt;SMOP\u0026gt;; # returns the Pair: Mildew =\u0026gt; \u0026#39;ruoso\u0026#39; %dev {\u0026#39;audrey\u0026#39;}; # error, spaces between varname and braces (postcircumfix operator) are no longer allowed %dev\\ {\u0026#39;allison\u0026#39;}; # works, quote the space %dev .\u0026lt;dukeleto\u0026gt;; # error %dev\\ .{\u0026#39;patrick\u0026#39;}; # works too, \u0026#34;long dot style\u0026#34;, because it\u0026#39;s an object in truth  Hash Methods  ? %dev # bool context, true if hash has any pairs + %dev # numeric context, returns number of pairs(keys) ~ %dev # string context, nicely formatted 2 column table using \\t and \\n $table = %dev; # same as ~ %dev %dev.say; # stringified, but only $key and $value are separated by \\t @pairs = %dev; # list of all containing pairs %dev.pairs # same thing in all context %dev.elems # same as + %dev or + %dev.pairs %dev.keys # returns a list of all keys %dev.values # list of all values %dev.kv # flat list with key1, value1, key 2 ... %dev.invert # reverse all key =\u0026gt; value relations %dev.push (@pairs) # inserts a list of pairs, if a key is already present in %dev, both values gets added to an array  Callable  Internally subroutines, methods and alike are variables with the sigil \u0026amp; and stored in a fourth namespace. Unlike Perl 5, all subroutines can be overwritten or augmented with user defined routines. Of course scalars can also contain routines.\n\u0026amp;function = sub { ... }; # store subroutine in callable namespace function(); # call/run it $coderef = sub { ... }; # store it in a scalar $coderef($several, $parameter); # run that code  Data Types  In contrast to variable types (container types) every value has a type too. These are organized internally as classes or roles and can be categorized into 3 piles: the undefined, immutable, and the mutable types.\nYou can assign one of these types to scalar, array, or hash variables, which enforces the contents to be that type.\nmy Int $a; my Int @a; # array of Int  Pair  Pairs are new and their syntax is used nearly everywhere in the language where there is an association between a name and a value.\n$pair = \u0026#39;jakub\u0026#39; =\u0026gt; \u0026#39;helena\u0026#39;; # \u0026#34;=\u0026gt;\u0026#34; is the pair constructor $pair = :jakub(\u0026#39;helena\u0026#39;); # same in adverbial notation $pair = :jakub\u0026lt;helena\u0026gt;; # same using \u0026lt;\u0026gt;, the new qw() $pair.key # returns \u0026#39;jakub\u0026#39; $pair.value # returns \u0026#39;helena\u0026#39; $pair.isa(Pair) # Bool::True  Capture  Captures are also a new type, which holds the parameters a routine gets. Because Perl now knows both positional and named parameters, it is a mixture of a list and array.\n$cap = \\(@a,$s,%h,\u0026#39;a\u0026#39;=\u0026gt;3); # creating a capture, \u0026#34;\\\u0026#34; was free since there are no references anymore |$cap # flatten into argument list (without |, it will pass it as a single value) ||$cap # flatten into semicolon list (meant for variadic functions that take list of lists) One important difference between a capture and a compound structure of lists and hashes: While assignments with = will copy the complete content of the named variables, this is not so in the case of a capture. When I change sinthelastexample, thecontentofcap changes too, because when parameters to a routine are variables, they are also interpolated in the moment the routine is called, not when it\u0026rsquo;s defined.\n  Assignment and Binding\n  Assignment\n  As rightfully expected, assignments are done with the equal sign. But unlike Perl 5 you always get a copy of the right side data assigned to the left, no matter how nested the data structure was (lists of lists eg). You never get in Raku a reference with =. The only exception may be seen captures.\nmy @original = [1,2],[3,4]; my $copy = @original[0]; # $copy points to [1,2] @original[0][0] = \u0026#39;fresh stuff\u0026#39;; # $copy[0] holds still 1  Binding  Since every variable in Raku is a reference, programmers can use binding to get 2 variables that point to the same memory location.\n$original = 5; $original := $mirror; # normal binding, done on runtime $original ::= $mirror; # same thing, but done during compile time $original = 3; say $mirror; # prints 3 $original =:= $mirror # true, because they\u0026#39;re bound together $original === $mirror # also true, because content and type are equal  FP oriented  sub balanced($s) { .none \u0026lt; 0 and .[*-1] == 0 given [\\+] \u0026#39;\\\\\u0026#39; «leg« $s.comb; } my $n = prompt \u0026#34;Number of bracket pairs: \u0026#34;; my $s = \u0026lt;[ ]\u0026gt;.roll($n*2).join; say \u0026#34;$s{ balanced($s) ?? \u0026#34;is\u0026#34; !! \u0026#34;is not\u0026#34; }well-balanced\u0026#34;  String munging  sub balanced($_ is copy) { () while s:g/\u0026#39;[]\u0026#39;//; $_ eq \u0026#39;\u0026#39;; } my $n = prompt \u0026#34;Number of bracket pairs: \u0026#34;; my $s = \u0026lt;[ ]\u0026gt;.roll($n*2).join; say \u0026#34;$sis\u0026#34;, \u0026#39;not\u0026#39; xx not balanced($s)), \u0026#34; well-balanced\u0026#34;;  Parsing with a grammar  grammar BalBrack { token TOP {\u0026#39;[\u0026#39;\u0026lt;TOP\u0026gt;*\u0026#39;]\u0026#39;} } my $n = prompt \u0026#34;Number of bracket pairs: \u0026#34;; my $s = (\u0026#39;[\u0026#39; xx $n, \u0026#39;]\u0026#39; xx $n).pick(*).join; say \u0026#34;$s{ BalBrack.parse($s) ?? \u0026#34;is\u0026#34; !! \u0026#34;is not\u0026#34; }well-balanced\u0026#34;;  凯撒加密  实现一个凯撒加密， 编码和解码都要有\nkey 是一个 1 到 25 之间的整数\nmy @alpha = \u0026#39;A\u0026#39; .. \u0026#39;Z\u0026#39;; sub encrypt ( $key where 1..25, $plaintext ) { $plaintext.trans( @alpha Z=\u0026gt; @alpha.rotate($key) ); } sub decrypt ( $key where 1..25, $cyphertext ) { $cyphertext.trans( @alpha.rotate($key) Z=\u0026gt; @alpha ); } my $original = \u0026#39;THE FIVE BOXING WIZARDS JUMP QUICKLY\u0026#39;; my $en = encrypt( 13, $original ); my $de = decrypt( 13, $en ); .say for $original, $en, $de; say \u0026#39;OK\u0026#39; if $original eq all( map { .\u0026amp;decrypt(.\u0026amp;encrypt($original)) }, 1..25 ); Output: THE FIVE BOXING WIZARDS JUMP QUICKLY GUR SVIR OBKVAT JVMNEQF WHZC DHVPXYL THE FIVE BOXING WIZARDS JUMP QUICKLY OK   日期格式化  使用 \u0026ldquo;2007-11-10\u0026rdquo; 和 \u0026ldquo;Sunday, November 10, 2007\u0026rdquo; 日期格式显式当前日期:\nuse DateTime::Utils; my $dt = DateTime.now; say strftime(\u0026#39;%Y-%m-%d\u0026#39;, $dt); say strftime(\u0026#39;%A, %B %d, %Y\u0026#39;, $dt);  阶乘  n 的阶乘定义为 n*(n-1)*(n-2)…*1, 零的阶乘为1.\n定义一个函数返回一个数字的阶乘。\n 使用自定义后缀操作符  sub postfix:\u0026lt;!\u0026gt;($n where $n \u0026gt; 0) { [*] 2..$n } say 5!  [*]  my @a = 1, [\\*] 1..*; say @a[5]; 标量容器中存储的对象不会在 flattening 上下文中插值，即使那个对象是可迭代的。\nmy @a = 3,4,5; for 1, 2, @a { .say } # 5次迭代 输出:\n1 2 3 4 5 my $s = @a; for 1, 2, $s { ... } # 3次迭代 输出:\n1 2 3 4 5 这里，$s 和 @a 指向同一个数组对象，但是标量容器的出现阻止 $s 被展开到 for 循环中。\n.list 和 .flat 方法能被用于还原展开行为：\nfor 1, 2, $s.list { .say } # 5次遍历 for 1, 2, @($s) { .say } # 5次遍历，@()会强制为列表上下文 输出:\n1 2 3 4 5 相反，.item 方法和 $() 能用于防止插值：\nmy @b = 1,2,@a; # @b 有5个元素 my @c = 1,2,@a.item; # @c 有3个元素 my @c = 1,2,$(@a); # 同上 say +@c; # 3  Feed operators  feed 操作符是完全懒惰的，意味着在使用者要求任何元素之前不会执行任何操作。这就是\nmy @a \u0026lt;== grep { ... } \u0026lt;== map { ... } \u0026lt;== grep { ... } \u0026lt;== 1, 2, 3 是完全懒惰的。\n Grammars  文法是一种强大的工具, 用于拆解文本,并通常返回数据结构 例如, Raku 是使用 Raku 风格的文法解析和执行的. 对普通 Raku 用户来说,一个更实用的例子就是 JSON::Simple 模块, 这个模块能反序列化任何有效的 JSON 文件, 反序列化代码还写了不到 100 行, 简单,可扩展.\n词法允许你组织正则, 就像类允许你组织普通代码的方法一样.\n命名正则 命名正则有特殊的语法, 与子例程的定义类似:\nmy regex number {\\d+[\\. \\d+]?} 这个例子中, 我们必须使用 my 关键词指定这个正则是词法作用域的, 因为 命名正则 通常用在 词法中. 给正则命名后有利于在其他地方复用正则:\nsay \u0026#34;32.51\u0026#34; ~~ \u0026amp;number; say \u0026#34;15 + 4.5\u0026#34; ~~ /\u0026lt;number\u0026gt;\\s*\u0026#39;+\u0026#39;\\s*\u0026lt;number\u0026gt;/ 首先说下, 使用 regex/token/rule 定义了一个正则表达式后怎么去调用它。就像调用一个子例程那样, 使用 \u0026amp; 符号: \u0026amp; 后面跟正则表达式的名字, 即 \u0026amp;regex_name。\nregex 不是命名正则仅有的标识符 \u0026ndash; 实际上, 它用的不多. 大多数时候, 用的最多的是 token 和 rule 标识符. 它们都是不能回溯的, 这意味着正则引擎在匹配失败时不会备份和重试. 这通常是你想要的, 但不是对所有场合都合适:\nmy regex works-but-slow {.+q } my token fails-but-fast {.+q } # Tokens 不会沿原路返回, 这让它们更快地失败! my $s = \u0026#39;Tokens won\\\u0026#39;t backtrack, which makes them fail quicker!\u0026#39;; say so $s ~~ \u0026amp;works-but-slow; # True say so $s ~~ \u0026amp;fails-but-fast; # False, the entire string get taken by the .+ token 和 rule 标识符的不同之处在于 rule 标识符让 Regex 的 :sigspace 起作用了:\nmy token non-space-y {once upon a time } my rule space-y {once upon a time } say \u0026#39;onceuponatime\u0026#39; ~~ \u0026amp;non-space-y; say \u0026#39;once upon a time\u0026#39; ~~ \u0026amp;space-y; Action Classes 实际上, 命名正则甚至能接受额外的参数, 它使用的语法跟子例程参数列表的语法一样.\n​写一个程序打印从 1 到 100 的整数，但是对 3 的倍数打印 \u0026ldquo;Fizz\u0026rdquo;, 对 5 的倍数打印 \u0026ldquo;Buzz\u0026rdquo;, 对于即是 3 的倍数，又是 5 的倍数的打印 \u0026ldquo;FizzBuzz\u0026rdquo;.\nfor 1 .. 100 { when $_ %% (3 \u0026amp; 5) { say \u0026#39;FizzBuzz\u0026#39;; } when $_ %% 3 { say \u0026#39;Fizz\u0026#39;; } when $_ %% 5 { say \u0026#39;Buzz\u0026#39;; } default { .say; } } Or abusing multi subs:\nmulti sub fizzbuzz(Int $ where * %% 15) { \u0026#39;FizzBuzz\u0026#39; } multi sub fizzbuzz(Int $ where * %% 5) { \u0026#39;Buzz\u0026#39; } multi sub fizzbuzz(Int $ where * %% 3) { \u0026#39;Fizz\u0026#39; } multi sub fizzbuzz(Int $number ) { $number } (1 .. 100)».\u0026amp;fizzbuzz.join(\u0026#34;\\n\u0026#34;).say; Most concisely:\nsay \u0026#39;Fizz\u0026#39; x $_ %% 3 ~ \u0026#39;Buzz\u0026#39; x $_ %% 5 || $_ for 1 .. 100; And here\u0026rsquo;s an implementation that never checks for divisibility:\n.say for ((\u0026#39;\u0026#39; xx 2, \u0026#39;Fizz\u0026#39;) xx * Z~ (\u0026#39;\u0026#39; xx 4, \u0026#39;Buzz\u0026#39;) xx *) Z||1 .. 100; "},"name":"Raku 中的特性(二)","published":"2021-07-10T00:00:00Z","summary":"Features in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-03-16-features-in-raku/"},{"content":{"html":"\u003ch2 id=\"sneaking-into-a-loop\"\u003eSneaking into a loop\u003c/h2\u003e\n\u003cp\u003eZoffix 回答了一个关于 Perl 5 的 \u003ccode\u003e\u0026lt;\u0026gt;\u003c/code\u003e 操作符的\u003ca href=\"http://irclog.perlgeek.de/raku/2016-08-09#i_12993090\"\u003e问题\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003eslurp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ewords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eBag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-*.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e%10s3d\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eslurp\u003c/code\u003e 会从 STDIN 中读取整个 \u0026ldquo;file\u0026rdquo; 并返回一个 Str。方法 \u003ccode\u003eStr::words\u003c/code\u003e 会按照某种 Unicode 意义的单词把该字符串分割成一个列表。把列表强转为 Bag 则创建一个计数 Hash, 它是如下表述的快捷方式。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003epeter paul marry\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT«Hash %h = {:marry(1), :paul(1), :peter(1)}␤»\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在关联数组上调用 \u003ccode\u003e.sort(-*.value)\u003c/code\u003e 会按照值的降序排序并返回一个排序后的 Pairs 列表。List::fmt 会调用 Pair::fmt, 它调用 fmt 方法, \u003ccode\u003e.key\u003c/code\u003e 作为其第二个参数, \u003ccode\u003e.value\u003c/code\u003e 也作为参数。say 会会使用一个空格连接各个元素并输出到标准输出。最后一步有一点错误因为除了第一行之外的每一行前面都会有一个额外的空格。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003eslurp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ewords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eBag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-*.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e%10s\u003c/span\u003e\u003cspan class=\"s2\"\u003e =\u0026gt; \u003c/span\u003e\u003cspan class=\"nv\"\u003e%3d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e手动连接字符串更好。这对于简短的单行程序来说有点多了。我们需要找到最长的单词并使用 \u003ccode\u003e.chars\u003c/code\u003e 来获取列宽。\u003c/p\u003e\n\u003cp\u003eslurp 会在 \u003ccode\u003e$*IN\u003c/code\u003e 身上调用 \u003ccode\u003e.slurp-rest\u003c/code\u003e 方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"vg\"\u003e$*IN\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003epeter paul marry peter paul paul\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003ebut\u003c/span\u003e \u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eslurp-rest\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这是一种 hack 因为它会在任何形式的类型检测上失败并且它除了 slurp 之外不会对任何东西起作用。还有, 实际上我们从 \u003ccode\u003e$*IN\u003c/code\u003e 那里解绑 STDIN。不要在工作中使用这个奇淫技巧。\u003c/p\u003e\n\u003cp\u003e现在我们能开心地吞噬并开始计数了。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%counted-words\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eslurp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ewords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eBag\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$word-width\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003e%counted-words\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e并且继续在链子断开的地方继续。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nv\"\u003e%counted-words\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-*.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$word-width\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003es3d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e问题解决了但是很丑陋。我们把一个单行程序拆开了。我们来修复 fmt 以使它再次完整。\u003c/p\u003e\n\u003cp\u003e我们想要的是一个 fmt 方法, 它接收一个位置的(Positional), 一个 printf 风格的格式字符串和一个格式字符串中的 block per \u003ccode\u003e%*\u003c/code\u003e。还有, 我们可能需要在 self.fmt 前面放上一个分隔符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePositional:D:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$fmt-str\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \n                    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@width\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nb\"\u003eCallable\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n                    \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$separator\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;){\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nv\"\u003e$fmt-str\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e%*\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;width\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@width\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e++]\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"nb\"\u003eFailure\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003emissingh block\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;width\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecount\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nf\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"nf\"\u003ewidth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$separator\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e表达式 \u003ccode\u003e*.all ~~ Callable\u003c/code\u003e 检查 \u003ca href=\"https://docs.raku.org/type/Signature#Slurpy_(A.K.A._Variadic)_Parameters\"\u003eslurp array\u003c/a\u003e中的所有元素是否实现了 CALL-ME(那是实际被执行的方法在你执行 foo()的时候)。\u003c/p\u003e\n\u003cp\u003e然后我们在格式字符串上使用了 \u003ccode\u003esubst\u003c/code\u003e 来替换 \u003ccode\u003e%*\u003c/code\u003e, 替换是一个(闭包)块儿, 它每次匹配被调用一次。而且这儿我们有不错的惯用法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e1-a 2-b 3-c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eone two three\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e++]\u003c/span\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# one-a two-b three-c\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e匿名状态变量 \u003ccode\u003e$\u003c/code\u003e 从 0  开始计数, 每次代码块执行时增 1。实际上我们在这儿做的就是移除一个循环并给 subst 偷偷加入一个额外的计数器和数组下标。或者可以说我们注册了一个迭代器到 subst 里面的循环中。有人可能会质疑 subst 应该接收一个 Seq 作为它的第二个位置参数, 它会让调用变得冗长。无论如何, 我们把洞补上了。\u003c/p\u003e\n\u003cp\u003e在第 11 行, 我们从吞噬数组中拿出一个元素或者在没有元素时创建一个 Failure。我们把 block 存储在一个变量中因为我们想在第 12 行中内省。如果那个 block 接收两个位置参数,we feed the topic subst is calling the block with as a 2nd parameter to our stored block. 那碰巧是一个 Match 并且对于影响所匹配的东西可能有用。在我们这个例子中我们对 \u003ccode\u003e%*\u003c/code\u003e 进行匹配并且当前位置由 \u003ccode\u003e$++\u003c/code\u003e 计数。做完那个之后我们得到了一个格式字符串, 它带有一个由用户提供的 fmt 版本的列宽参数。\u003c/p\u003e\n\u003cp\u003e用户提供的块儿使用一组 Pairs 调用。我们不得不深入一层以得到更大的键。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e得到第一列的列宽。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"nv\"\u003e%counted-words\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-*.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nb\"\u003efmt\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e%*s3d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \n    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003emax\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \n    \u003cspan class=\"s\"\u003eseparator\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e那个时髦的 \u003ccode\u003e.\u0026amp;fmt\u003c/code\u003e 调用是必须的因为我们免费的浮点方法不是 List 的方法。\u003c/p\u003e\n","text":"Sneaking into a loop Zoffix 回答了一个关于 Perl 5 的 \u0026lt;\u0026gt; 操作符的问题。\nslurp.words.Bag.sort(-*.value).fmt(\u0026#34;%10s3d\\n\u0026#34;).say; slurp 会从 STDIN 中读取整个 \u0026ldquo;file\u0026rdquo; 并返回一个 Str。方法 Str::words 会按照某种 Unicode 意义的单词把该字符串分割成一个列表。把列表强转为 Bag 则创建一个计数 Hash, 它是如下表述的快捷方式。\nmy %h; %h{$_}++ for \u0026lt;peter paul marry\u0026gt;; dd %h; # OUTPUT«Hash %h = {:marry(1), :paul(1), :peter(1)}␤» 在关联数组上调用 .sort(-*.value) 会按照值的降序排序并返回一个排序后的 Pairs 列表。List::fmt 会调用 Pair::fmt, 它调用 fmt 方法, .key 作为其第二个参数, .value 也作为参数。say 会会使用一个空格连接各个元素并输出到标准输出。最后一步有一点错误因为除了第一行之外的每一行前面都会有一个额外的空格。\nslurp.words.Bag.sort(-*.value).fmt(\u0026#34;%10s=\u0026gt; %3d\u0026#34;).join(\u0026#34;\\n\u0026#34;).say; 手动连接字符串更好。这对于简短的单行程序来说有点多了。我们需要找到最长的单词并使用 .chars 来获取列宽。\nslurp 会在 $*IN 身上调用 .slurp-rest 方法。\n$*IN = \u0026lt;peter paul marry peter paul paul\u0026gt; but role { method slurp-rest { self.Str } }; 这是一种 hack 因为它会在任何形式的类型检测上失败并且它除了 slurp 之外不会对任何东西起作用。还有, 实际上我们从 $*IN 那里解绑 STDIN。不要在工作中使用这个奇淫技巧。\n现在我们能开心地吞噬并开始计数了。\nmy %counted-words = slurp.words.Bag; my $word-width = [max] %counted-words.keys».chars; 并且继续在链子断开的地方继续。\n%counted-words.sort(-*.value).fmt(\u0026#34;%{$word-width}s3d\u0026#34;).join(\u0026#34;\\n\u0026#34;).say; 问题解决了但是很丑陋。我们把一个单行程序拆开了。我们来修复 fmt 以使它再次完整。\n我们想要的是一个 fmt 方法, 它接收一个位置的(Positional), 一个 printf 风格的格式字符串和一个格式字符串中的 block per %*。还有, 我们可能需要在 self.fmt 前面放上一个分隔符。\nmy multi method fmt(Positional:D: $fmt-str, *@width where *.all ~~ Callable, :$separator = \u0026#34;\u0026#34;){ self.fmt( $fmt-str.subst(:g, \u0026#34;%*\u0026#34;, { my \u0026amp;width = @width[$++] // Failure.new(\u0026#34;missingh block\u0026#34;); \u0026#39;%\u0026#39; ~ (\u0026amp;width.count == 2 ?? width(self, $_) !! width(self)) }), $separator); } 表达式 *.all ~~ Callable 检查 slurp array中的所有元素是否实现了 CALL-ME(那是实际被执行的方法在你执行 foo()的时候)。\n然后我们在格式字符串上使用了 subst 来替换 %*, 替换是一个(闭包)块儿, 它每次匹配被调用一次。而且这儿我们有不错的惯用法。\nsay \u0026#34;1-a 2-b 3-c\u0026#34;.subst(:g, /\\d/, {\u0026lt;one two three\u0026gt;[$++]}); # one-a two-b three-c 匿名状态变量 $ 从 0 开始计数, 每次代码块执行时增 1。实际上我们在这儿做的就是移除一个循环并给 subst 偷偷加入一个额外的计数器和数组下标。或者可以说我们注册了一个迭代器到 subst 里面的循环中。有人可能会质疑 subst 应该接收一个 Seq 作为它的第二个位置参数, 它会让调用变得冗长。无论如何, 我们把洞补上了。\n在第 11 行, 我们从吞噬数组中拿出一个元素或者在没有元素时创建一个 Failure。我们把 block 存储在一个变量中因为我们想在第 12 行中内省。如果那个 block 接收两个位置参数,we feed the topic subst is calling the block with as a 2nd parameter to our stored block. 那碰巧是一个 Match 并且对于影响所匹配的东西可能有用。在我们这个例子中我们对 %* 进行匹配并且当前位置由 $++ 计数。做完那个之后我们得到了一个格式字符串, 它带有一个由用户提供的 fmt 版本的列宽参数。\n用户提供的块儿使用一组 Pairs 调用。我们不得不深入一层以得到更大的键。\n{[max] .values».keys».chars} 得到第一列的列宽。\nprint %counted-words.sort(-*.value).\u0026amp;fmt( \u0026#34;%*s3d\u0026#34;, {[max] .values».keys».chars}, separator =\u0026gt; \u0026#34;\\n\u0026#34;); 那个时髦的 .\u0026amp;fmt 调用是必须的因为我们免费的浮点方法不是 List 的方法。\n"},"name":"Sneaking Into a Loop","published":"2021-07-10T00:00:00Z","summary":"Sneaking Into a Loop","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-03-23-sneaking-into-a-loop/"},{"content":{"html":"\u003cp\u003e我不太喜欢上一篇文章中使用匹配的语法。它的参数列表中的逗号看起来很奇怪，不合适。也许是因为我的眼睛习惯了给定的块。睡一觉就好了。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eaccord\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;c\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCALLER::\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;);\u003c/span\u003e \u003cspan class=\"k\"\u003esucceed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;c\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecando\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\\\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCALLER::\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;))\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"n\"\u003eErr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"s\"\u003emsg\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eaccord\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eHold\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eput\u003c/span\u003e „\u003cspan class=\"n\"\u003eholding\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e“\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eaccord\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eErr\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003ewarn\u003c/span\u003e „\u003cspan class=\"n\"\u003eERR:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e“ \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003efail\u003c/span\u003e ‚\u003cspan class=\"n\"\u003eunsupported\u003c/span\u003e‘ \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这是因为 \u003ccode\u003eaccord\u003c/code\u003e 模仿了 \u003ccode\u003ewhen\u003c/code\u003e 的工作。它做了一些匹配，当 True 时调用一个块，并在每个块的结尾添加一个 success（通过抛出一个控制异常）。given 所做的只是设置主题。它还充当了 caller 的角色，所以我们可以通过一个伪包来访问它的 \u003ccode\u003e$_\u003c/code\u003e。利用 pointy 的签名来做\u003ca href=\"https://docs.raku.org/type/Signature#Destructuring_arguments\"\u003e解构\u003c/a\u003e是相当强大的。把这个添加到 CORE 中可能是个好主意。\u003c/p\u003e\n\u003cp\u003e我们可能要把 Raku 的定义改成: \u0026ldquo;Raku 是一种高度可组合的编程语言\u0026rdquo;, 在这里，所有的东西都会落到实处。\u0026quot;\u003c/p\u003e\n\u003cp\u003e更新一下。\u003c/p\u003e\n\u003cp\u003e有些情况下，\u003ccode\u003e$_\u003c/code\u003e 不是动态的。另外，success 正在抛出一个控制异常，而这些的处理程序是由 when 或默认添加的。这种情况是在编译时发生的，目前不能用宏来解决。第一个问题可以用黑魔法解决。后一个问题需要用默认块。我没有找到一种方法来提供一个合理的错误信息，如果缺少这个块。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eaccord\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;c\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003enqp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003enqp::getlexcaller\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"k\"\u003esucceed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;c\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecando\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\\\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@possibilities\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$needle\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$needle\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eaccord\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eHold\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eput\u003c/span\u003e „\u003cspan class=\"n\"\u003eholding\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e“\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eaccord\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eErr\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003ewarn\u003c/span\u003e „\u003cspan class=\"n\"\u003eERR:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e“ \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003ewarn\u003c/span\u003e ‚\u003cspan class=\"n\"\u003eunsopported\u003c/span\u003e‘ \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e原文链接: \u003ca href=\"https://gfldex.wordpress.com/2021/02/25/custom-when/\"\u003ehttps://gfldex.wordpress.com/2021/02/25/custom-when/\u003c/a\u003e\u003c/p\u003e\n","text":"我不太喜欢上一篇文章中使用匹配的语法。它的参数列表中的逗号看起来很奇怪，不合适。也许是因为我的眼睛习惯了给定的块。睡一觉就好了。\nsub accord(\u0026amp;c) { (c(CALLER::\u0026lt;$_\u0026gt;); succeed) if \u0026amp;c.cando(\\(CALLER::\u0026lt;$_\u0026gt;)) } given Err.new(:msg\u0026lt;a\u0026gt;) { accord -\u0026gt; Hold (:$key) { put „holding $key“; } accord -\u0026gt; Err (:$msg) { warn „ERR: $msg“ } default { fail ‚unsupported‘ } } 这是因为 accord 模仿了 when 的工作。它做了一些匹配，当 True 时调用一个块，并在每个块的结尾添加一个 success（通过抛出一个控制异常）。given 所做的只是设置主题。它还充当了 caller 的角色，所以我们可以通过一个伪包来访问它的 $_。利用 pointy 的签名来做解构是相当强大的。把这个添加到 CORE 中可能是个好主意。\n我们可能要把 Raku 的定义改成: \u0026ldquo;Raku 是一种高度可组合的编程语言\u0026rdquo;, 在这里，所有的东西都会落到实处。\u0026quot;\n更新一下。\n有些情况下，$_ 不是动态的。另外，success 正在抛出一个控制异常，而这些的处理程序是由 when 或默认添加的。这种情况是在编译时发生的，目前不能用宏来解决。第一个问题可以用黑魔法解决。后一个问题需要用默认块。我没有找到一种方法来提供一个合理的错误信息，如果缺少这个块。\nmulti sub accord(\u0026amp;c) { use nqp; $_ := nqp::getlexcaller(\u0026#39;$_\u0026#39;); (c($_); succeed) if \u0026amp;c.cando(\\($_)) } for @possibilities.roll(1) -\u0026gt; $needle { given $needle { accord -\u0026gt; Hold (:$key) { put „holding $key“; } accord -\u0026gt; Err (:$msg) { warn „ERR: $msg“ } default { warn ‚unsopported‘ } } } 原文链接: https://gfldex.wordpress.com/2021/02/25/custom-when/\n"},"name":"自定义 when","published":"2021-02-28T00:00:00Z","summary":"Custom When","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-02-28-custom-when/"},{"content":{"html":"\u003cp\u003e[113] 发表于2021年1月30日。\n这是我对 \u003ca href=\"https://perlweeklychallenge.org/blog/perl-weekly-challenge-097/\"\u003ePerl 每周挑战#097\u003c/a\u003e 的回应。\u003c/p\u003e\n\u003ch2 id=\"挑战-0971-凯撒密码\"\u003e挑战 #097.1: 凯撒密码\u003c/h2\u003e\n\u003cp\u003e给你一个只包含字母 \u003ccode\u003eA..Z\u003c/code\u003e 的字符串 \u003ccode\u003e$S\u003c/code\u003e 和一个数字 \u003ccode\u003e$N\u003c/code\u003e。\n写一个脚本，用\u003ca href=\"https://en.wikipedia.org/wiki/Caesar_cipher\"\u003e凯撒密码\u003c/a\u003e对给定的字符串 \u003ccode\u003e$S\u003c/code\u003e 进行加密，左移大小为 \u003ccode\u003e$N\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e例子:\n输入: $S = \u0026ldquo;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u0026rdquo;, $N = 3\n输出: \u0026ldquo;QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD\u0026rdquo;\u003c/p\u003e\n\u003cp\u003ePlain:    ABCDEFGHIJKLMNOPQRSTUVWXYZ\nCipher:   XYZABCDEFGHIJKLMNOPQRSTUVW\u003c/p\u003e\n\u003cp\u003ePlaintext:  THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\nCiphertext: QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;只用字母 \u003ccode\u003eA...Z\u003c/code\u003e\u0026rdquo; 的表述是错误的，因为例子中也有几个空格。因此，应该允许这些空格。\u003c/p\u003e\n\u003cp\u003e文件: caesar-cipher\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"ch\"\u003e#! /usr/bin/env raku\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003eAZ-space\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e/^\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e[ A .. Z \\s ]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# [1]\u003c/span\u003e\n\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003ePosInt\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# [2]\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eunit\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAZ-space\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n               \u003cspan class=\"n\"\u003ePosInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e# [3]\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nf\"\u003ecaesar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# [4]\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ecaesar\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$char\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$shift\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$char\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$char\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e                        \u003cspan class=\"c1\"\u003e# [5]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$char\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eord\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                \u003cspan class=\"c1\"\u003e# [6]\u003c/span\u003e\n\n  \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$shift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                     \u003cspan class=\"c1\"\u003e# [7]\u003c/span\u003e\n\n  \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e65\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# \u0026#39;A\u0026#39;                    # [8]\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# \u0026#39;Z\u0026#39;                    # [8a]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                    \u003cspan class=\"c1\"\u003e# [9]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e[1] 所允许的字符 (或 «特定领域字母»).\u003c/p\u003e\n\u003cp\u003e[2] 挑战说左移值是一个数字。允许除整数以外的任何东西是没有意义的，所以我把值限制在这个类型。负值应该是可以的，它们意味着右移值（而不是左移）。\u003c/p\u003e\n\u003cp\u003e[3] 参数，默认值为挑战中给出的值。\u003c/p\u003e\n\u003cp\u003e[4] 将字符串分割成单个字符（用梳子(comb)，在每个字符上应用 \u0026ldquo;caesar\u0026rdquo; 函数（用map），再次将字符连接成一个字符串（用join），然后打印出来。\u003c/p\u003e\n\u003cp\u003e[5] 不移动空格。\u003c/p\u003e\n\u003cp\u003e[6] 获取字符的代码点。\u003c/p\u003e\n\u003cp\u003e[7] 减去移位值（当我们向左移位时，或在字母表中降低移位值）。\u003c/p\u003e\n\u003cp\u003e[8] 绕回, 如果我们移出A-Z范围，这里为更低 - 或更高的 [8b]。\u003c/p\u003e\n\u003cp\u003e[9] 获取指定代码点的字符。\u003c/p\u003e\n\u003cp\u003e查看 docs.raku.org/routine/ord 获取更多关于 ord 的信息。\u003c/p\u003e\n\u003cp\u003e查看 docs.raku.org/routine/chr 获取更多关于 chr 的信息。\u003c/p\u003e\n\u003cp\u003e运行它:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 3\nQEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD\n\n$ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -3\nWKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ\n\n$ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 13\nGUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT\n\n$ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -13\nGUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRaku 有一个 ords 变体，它接收一整个字符串，而不是一个字符作为 ord。还有 chrs，它接收一个代码点数组，并将它们变成一个字符串，而不是像 chr 那样接收一个字符的代码点。让我们用它们来写一个更短的程序。\u003c/p\u003e\n\u003cp\u003e文件: caesar-cipher-map\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"ch\"\u003e#! /usr/bin/env raku\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003eAZ-space\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e/^\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e[ A .. Z \\s ]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003ePosInt\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eunit\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAZ-space\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eTHE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n               \u003cspan class=\"n\"\u003ePosInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nf\"\u003ecaesar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$S\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ecaesar\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$string\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$shift\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$string\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"mi\"\u003e32\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"nv\"\u003e$shift\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e65\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e65\u003c/span\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echrs\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# #################### # 1a ############# ############ # 1b  # 1c ## 1d\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e[1] 我们使用map来改变各个代码点。我们让代码点为32的空间单独存在[1a]。每一个其他的值我们都还原成0到25之间的数字（通过减去第一个字母的代码点（A：65）和移位值[1b]）。模数运算符 (%) 为我们处理负值，做正确的事情。例如：-2 % 26 -\u0026gt; 24 [1c]。然后我们添加调整值到它们应该在的位置(从A到Z)[1d]，然后我们将整个数组的代码点变成一个字符串。\u003c/p\u003e\n\u003cp\u003e查看 docs.raku.org/routine/ords 获取更多关于 ords 的信息。\u003c/p\u003e\n\u003cp\u003e查看 docs.raku.org/routine/chrs 获取更多关于 chrs 的信息。\u003c/p\u003e\n\u003cp\u003e运行它的结果和之前一样。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 3\nQEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD\n\n$ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -3\nWKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ\n\n$ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 13\nGUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT\n\n$ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -13\nGUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"perl-版本\"\u003ePerl 版本\u003c/h2\u003e\n\u003cp\u003e这是对第一个 Raku 版的直接翻译。\u003c/p\u003e\n\u003cp\u003eFile: caesar-cipher-perl\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"ch\"\u003e#! /usr/bin/env perl\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003estrict\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ewarnings\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003efeature\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;say\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003efeature\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;signatures\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eno\u003c/span\u003e \u003cspan class=\"nn\"\u003ewarnings\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;experimental::signatures\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@ARGV\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"sr\"\u003e//\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Illegal characters\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"o\"\u003e=~\u003c/span\u003e\u003cspan class=\"sr\"\u003e /^[A-Z\\s]+$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@ARGV\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"sr\"\u003e//\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Illegal shift $N\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e \u003cspan class=\"o\"\u003e!~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/^\\-?\\d+$/\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003ecaesar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$N\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e//\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ecaesar\u003c/span\u003e \u003cspan class=\"p\"\u003e($char, $shift)\n\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$char\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$char\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eord\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$char\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n  \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$shift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e65\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# \u0026#39;A\u0026#39;\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"mi\"\u003e26\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$code\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e90\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# \u0026#39;Z\u0026#39;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003echr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$code\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行它的结果和 Raku 版一样。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 3\nQEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD\n\n$ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -3\nWKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ\n\n$ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 13\nGUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT\n\n$ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -13\nGUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"挑战-0972二进制子字符串binary-substrings\"\u003e挑战 #097.2：二进制子字符串(Binary Substrings)\u003c/h2\u003e\n\u003cp\u003e给你一个二进制字符串 \u003ccode\u003e$B\u003c/code\u003e 和一个整数 \u003ccode\u003e$S\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e写一个脚本来拆分大小为 \u003ccode\u003e$S\u003c/code\u003e 的二进制字符串 \u003ccode\u003e$B\u003c/code\u003e，然后找出使其相同的最小翻转次数。\u003c/p\u003e\n\u003cp\u003e例 1:\n输入: $B = “101100101”, $S = 3\n输出: 1\u003c/p\u003e\n\u003cp\u003e二进制子字符串:\n\u0026ldquo;101\u0026rdquo;: 0 flip\n\u0026ldquo;100\u0026rdquo;: 1 flip to make it \u0026ldquo;101\u0026rdquo;\n\u0026ldquo;101\u0026rdquo;: 0 flip\u003c/p\u003e\n\u003cp\u003e例 2:\n输入 $B = “10110111”, $S = 4\n输出: 2\u003c/p\u003e\n\u003cp\u003e二进制子字符串:\n\u0026ldquo;1011\u0026rdquo;: 0 flip\n\u0026ldquo;0111\u0026rdquo;: 2 flips to make it \u0026ldquo;1011\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e我们先从第一个例子中的二进制子字符串中砍掉3个字符块。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; say \u0026quot;101100101\u0026quot;.comb(3);   # -\u0026gt; (101 100 101)\n\u0026gt; say \u0026quot;1011001010\u0026quot;.comb(3);  # -\u0026gt; (101 100 101 0)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e第二行显示了如果长度不匹配会发生什么。这就给了我们一个非法的值，因为我们不能将一位数翻转为三位数的值。所以我们必须添加一个检查。\u003c/p\u003e\n\u003cp\u003e然后我们将第一个子串与其余的子串进行比较，一次一个。在这里使用bitwise XOR（Exclusive OR）运算符是一个合理的选择。这给了我们一个二进制值，其中1的数量就是该子串的翻转次数。Raku确实有一个XOR运算符。+^. 但是它 \u0026ldquo;将两个参数都强制为Int，并进行位智XOR操作\u0026rdquo;(根据文档\u0026quot;；参见docs.raku.org/language/operators#infix_+^)。\u003c/p\u003e\n\u003cp\u003e我们可以在进行XOR操作之前，将二进制值转换为十进制值。让我们试试。\u003c/p\u003e\n\u003cp\u003e获取翻转的次数。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; say (\u0026quot;10101\u0026quot;.parse-base(2) +^ \u0026quot;10111\u0026quot;.parse-base(2)).base(2).comb.sum;  # -\u0026gt; 1\n\u0026gt; say (\u0026quot;11101\u0026quot;.parse-base(2) +^ \u0026quot;10111\u0026quot;.parse-base(2)).base(2).comb.sum;  # -\u0026gt; 2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这当然可行，但需要大量的代码。所以我将使用一个更简单的方法 - 逐个比较每个数字。\u003c/p\u003e\n\u003cp\u003eFile: binary-substring\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"ch\"\u003e#! /usr/bin/env raku\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003eBinaryString\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e/^\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e[01]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# [1]\u003c/span\u003e\n\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003ePosInt\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                           \u003cspan class=\"c1\"\u003e# [2]\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eunit\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBinaryString\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e101100101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# [1]\u003c/span\u003e\n               \u003cspan class=\"n\"\u003ePosInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# [2]\u003c/span\u003e\n\t       \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$verbose\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@B\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$S\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                                \u003cspan class=\"c1\"\u003e# [3]\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$first\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@B\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                       \u003cspan class=\"c1\"\u003e# [4]\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                              \u003cspan class=\"c1\"\u003e# [5]\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@B\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$current\u003c/span\u003e                                          \u003cspan class=\"c1\"\u003e# [6]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003ebit-diff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$first\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$current\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# [7]\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                          \u003cspan class=\"c1\"\u003e# [8]\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$first\u003c/span\u003e\u003cspan class=\"s2\"\u003e -\u0026gt; \u003c/span\u003e\u003cspan class=\"nv\"\u003e$current\u003c/span\u003e\u003cspan class=\"s2\"\u003e -\u0026gt; Flip: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$verbose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                                 \u003cspan class=\"c1\"\u003e# [9]\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ebit-diff\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                                       \u003cspan class=\"c1\"\u003e# [7]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                             \u003cspan class=\"c1\"\u003e# [10]\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e                                   \u003cspan class=\"c1\"\u003e# [11]\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003ene\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# [12]\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e[1] 确保二进制字符串是合法的（只包含 \u0026ldquo;0 \u0026ldquo;和 \u0026ldquo;1\u0026rdquo;）。\u003c/p\u003e\n\u003cp\u003e[2] 确保是一个正整数，同时确保字符串是被它偶数分割的。(例如，\u0026ldquo;4 \u0026ldquo;给我们提供了长度为4的子串，如果最后一个较短，程序将中止。)\u003c/p\u003e\n\u003cp\u003e[3] 梳子通常用于将一个字符串分割成单个字符，但我们可以通过指定长度来获得每个子字符串中的多个字符，比如这样。\u003c/p\u003e\n\u003cp\u003e[4] 例子首先将第一个子串与自己进行比较，给出零翻转。这是愚蠢的(ish)，所以我跳过这一点，把第一个子串移出。\u003c/p\u003e\n\u003cp\u003e[5] 结果会到这里。\u003c/p\u003e\n\u003cp\u003e[6] 对于每一个子串（除了第一个，见[4]）。\u003c/p\u003e\n\u003cp\u003e[7] 获取每个子串的翻转次数。\u003c/p\u003e\n\u003cp\u003e[8] 并将其添加到总数中。\u003c/p\u003e\n\u003cp\u003e[9] 打印它。\u003c/p\u003e\n\u003cp\u003e[10] 翻转的数量会在这里。\u003c/p\u003e\n\u003cp\u003e[11] 对于两个子串中的每个索引（具有相同的长度）。\u003c/p\u003e\n\u003cp\u003e[12] - 如果给定位置上的字符不同，则在总数的基础上加1，意味着移动。\u003c/p\u003e\n\u003cp\u003eSee docs.raku.org/routine/comb for more information about comb.\u003c/p\u003e\n\u003cp\u003e运行它。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ./binary-substring \u0026quot;101100101\u0026quot; 3\n 1\n\n$ ./binary-substring -v \u0026quot;101100101\u0026quot; 3\n: 101 -\u0026gt; 100 -\u0026gt; Flip: 1\n: 101 -\u0026gt; 101 -\u0026gt; Flip: 0\n1\n\n$ ./binary-substring \u0026quot;10110111\u0026quot; 4\n2\n\n$ ./binary-substring -v \u0026quot;10110111\u0026quot; 4\n: 1011 -\u0026gt; 0111 -\u0026gt; Flip: 2\n2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e看起来不错。\u003c/p\u003e\n\u003ch2 id=\"perl\"\u003ePerl\u003c/h2\u003e\n\u003cp\u003e这是对 Raku 版本的直接翻译，只是我必须实现 \u0026ldquo;comb\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e文件： binary-substring-perl\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"ch\"\u003e#! /usr/bin/env perl\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003estrict\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ewarnings\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003efeature\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003efeature\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esignatures\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eGetopt::Long\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eno\u003c/span\u003e \u003cspan class=\"nf\"\u003ewarnings\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eexperimental::signatures\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$verbose\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nf\"\u003eGetOptions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003everbose\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \\\u003cspan class=\"nv\"\u003e$verbose\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@ARGV\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e101100101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNot a binary number\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e \u003cspan class=\"o\"\u003e=~\u003c/span\u003e \u003cspan class=\"o\"\u003e/^[\u003c/span\u003e\u003cspan class=\"mo\"\u003e01\u003c/span\u003e\u003cspan class=\"o\"\u003e]+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@ARGV\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNot an integer\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e \u003cspan class=\"o\"\u003e=~\u003c/span\u003e \u003cspan class=\"o\"\u003e/^[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e][\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]*\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNot a legal length\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nf\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@B\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$S\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$first\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@B\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$current\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@B\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003ebit_diff\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$first\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$current\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$first\u003c/span\u003e\u003cspan class=\"s2\"\u003e -\u0026gt; \u003c/span\u003e\u003cspan class=\"nv\"\u003e$current\u003c/span\u003e\u003cspan class=\"s2\"\u003e -\u0026gt; Flip: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$verbose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$total\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ebit_diff\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"nf\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003ene\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$flip\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$string\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$length\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# [1]\u003c/span\u003e\n\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$string\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@result\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$string\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$length\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$string\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$length\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e[1] 缺失的 Raku 例程 \u0026ldquo;comb\u0026rdquo;。可选的第二个参数指定了它所返回的每个子串中所包含的（第一个参数的）子串长度。\u003c/p\u003e\n\u003cp\u003e运行它的结果与 Raku 版本相同。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ./binary-substring-perl \u0026quot;101100101\u0026quot; 3\n1\n\n$ ./binary-substring-perl -v \u0026quot;101100101\u0026quot; 3\n: 101 -\u0026gt; 100 -\u0026gt; Flip: 1\n: 101 -\u0026gt; 101 -\u0026gt; Flip: 0\n1\n\n$ ./binary-substring-perl \u0026quot;101100111\u0026quot; 3\n2\n\n$ ./binary-substring-perl -v \u0026quot;101100111\u0026quot; 3\n: 101 -\u0026gt; 100 -\u0026gt; Flip: 1\n: 101 -\u0026gt; 111 -\u0026gt; Flip: 1\n2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e就是这样。\u003c/p\u003e\n","text":"[113] 发表于2021年1月30日。 这是我对 Perl 每周挑战#097 的回应。\n挑战 #097.1: 凯撒密码 给你一个只包含字母 A..Z 的字符串 $S 和一个数字 $N。 写一个脚本，用凯撒密码对给定的字符串 $S 进行加密，左移大小为 $N。\n例子: 输入: $S = \u0026ldquo;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u0026rdquo;, $N = 3 输出: \u0026ldquo;QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD\u0026rdquo;\nPlain: ABCDEFGHIJKLMNOPQRSTUVWXYZ Cipher: XYZABCDEFGHIJKLMNOPQRSTUVW\nPlaintext: THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG Ciphertext: QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD\n\u0026ldquo;只用字母 A...Z\u0026rdquo; 的表述是错误的，因为例子中也有几个空格。因此，应该允许这些空格。\n文件: caesar-cipher\n#! /usr/bin/env raku subset AZ-space of Str where /^ \u0026lt;[ A .. Z \\s ]\u0026gt;+ $/; # [1] subset PosInt of Int where -25 \u0026lt;= $_ \u0026lt;= 25; # [2] unit sub MAIN (AZ-space $S = \u0026#39;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u0026#39;, PosInt $N = 3); # [3] say $S.comb.map({ caesar($_, $N) }).join; # [4] sub caesar ($char, $shift) { return $char if $char eq \u0026#34;\u0026#34;; # [5] my $code = $char.ord; # [6] $code -= $shift; # [7] $code += 26 if $code \u0026lt; 65; # \u0026#39;A\u0026#39; # [8] $code -= 26 if $code \u0026gt; 90; # \u0026#39;Z\u0026#39; # [8a] return $code.chr; # [9] } [1] 所允许的字符 (或 «特定领域字母»).\n[2] 挑战说左移值是一个数字。允许除整数以外的任何东西是没有意义的，所以我把值限制在这个类型。负值应该是可以的，它们意味着右移值（而不是左移）。\n[3] 参数，默认值为挑战中给出的值。\n[4] 将字符串分割成单个字符（用梳子(comb)，在每个字符上应用 \u0026ldquo;caesar\u0026rdquo; 函数（用map），再次将字符连接成一个字符串（用join），然后打印出来。\n[5] 不移动空格。\n[6] 获取字符的代码点。\n[7] 减去移位值（当我们向左移位时，或在字母表中降低移位值）。\n[8] 绕回, 如果我们移出A-Z范围，这里为更低 - 或更高的 [8b]。\n[9] 获取指定代码点的字符。\n查看 docs.raku.org/routine/ord 获取更多关于 ord 的信息。\n查看 docs.raku.org/routine/chr 获取更多关于 chr 的信息。\n运行它:\n$ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 3 QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD $ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -3 WKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ $ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 13 GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT $ ./caesar-cipher 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -13 GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT Raku 有一个 ords 变体，它接收一整个字符串，而不是一个字符作为 ord。还有 chrs，它接收一个代码点数组，并将它们变成一个字符串，而不是像 chr 那样接收一个字符的代码点。让我们用它们来写一个更短的程序。\n文件: caesar-cipher-map\n#! /usr/bin/env raku subset AZ-space of Str where /^ \u0026lt;[ A .. Z \\s ]\u0026gt;+ $/; subset PosInt of Int where -25 \u0026lt;= $_ \u0026lt;= 25; unit sub MAIN (AZ-space $S = \u0026#39;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u0026#39;, PosInt $N = 3); say caesar($S, $N); sub caesar ($string, $shift) { return $string.ords.map({$_ == 32 ?? 32 !! (($_ - $shift - 65) % 26 ) + 65}).chrs; # #################### # 1a ############# ############ # 1b # 1c ## 1d } [1] 我们使用map来改变各个代码点。我们让代码点为32的空间单独存在[1a]。每一个其他的值我们都还原成0到25之间的数字（通过减去第一个字母的代码点（A：65）和移位值[1b]）。模数运算符 (%) 为我们处理负值，做正确的事情。例如：-2 % 26 -\u0026gt; 24 [1c]。然后我们添加调整值到它们应该在的位置(从A到Z)[1d]，然后我们将整个数组的代码点变成一个字符串。\n查看 docs.raku.org/routine/ords 获取更多关于 ords 的信息。\n查看 docs.raku.org/routine/chrs 获取更多关于 chrs 的信息。\n运行它的结果和之前一样。\n$ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 3 QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD $ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -3 WKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ $ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 13 GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT $ ./caesar-cipher-map 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -13 GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT Perl 版本 这是对第一个 Raku 版的直接翻译。\nFile: caesar-cipher-perl\n#! /usr/bin/env perl use strict; use warnings; use feature \u0026#39;say\u0026#39;; use feature \u0026#39;signatures\u0026#39;; no warnings \u0026#34;experimental::signatures\u0026#34;; my $S = shift(@ARGV) // \u0026#39;THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG\u0026#39;; die \u0026#34;Illegal characters\u0026#34; unless $S =~/^[A-Z\\s]+$/; my $N = shift(@ARGV) // 3; die \u0026#34;Illegal shift $N\u0026#34; if $N !~ /^\\-?\\d+$/ || $N \u0026lt; -25 || $N \u0026gt; 25; say join(\u0026#34;\u0026#34;, map { caesar($_, $N) } split(//, $S)); sub caesar ($char, $shift) { return $char if $char eq \u0026#34; \u0026#34;; my $code = ord($char); $code -= $shift; $code += 26 if $code \u0026lt; 65; # \u0026#39;A\u0026#39; $code -= 26 if $code \u0026gt; 90; # \u0026#39;Z\u0026#39; return chr($code); } 运行它的结果和 Raku 版一样。\n$ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 3 QEB NRFZH YOLTK CLU GRJMP LSBO QEB IXWV ALD $ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -3 WKH TXLFN EURZQ IRA MXPSV RYHU WKH ODCB GRJ $ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' 13 GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT $ ./caesar-cipher-perl 'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG' -13 GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT 挑战 #097.2：二进制子字符串(Binary Substrings) 给你一个二进制字符串 $B 和一个整数 $S。\n写一个脚本来拆分大小为 $S 的二进制字符串 $B，然后找出使其相同的最小翻转次数。\n例 1: 输入: $B = “101100101”, $S = 3 输出: 1\n二进制子字符串: \u0026ldquo;101\u0026rdquo;: 0 flip \u0026ldquo;100\u0026rdquo;: 1 flip to make it \u0026ldquo;101\u0026rdquo; \u0026ldquo;101\u0026rdquo;: 0 flip\n例 2: 输入 $B = “10110111”, $S = 4 输出: 2\n二进制子字符串: \u0026ldquo;1011\u0026rdquo;: 0 flip \u0026ldquo;0111\u0026rdquo;: 2 flips to make it \u0026ldquo;1011\u0026rdquo;\n我们先从第一个例子中的二进制子字符串中砍掉3个字符块。\n\u0026gt; say \u0026quot;101100101\u0026quot;.comb(3); # -\u0026gt; (101 100 101) \u0026gt; say \u0026quot;1011001010\u0026quot;.comb(3); # -\u0026gt; (101 100 101 0) 第二行显示了如果长度不匹配会发生什么。这就给了我们一个非法的值，因为我们不能将一位数翻转为三位数的值。所以我们必须添加一个检查。\n然后我们将第一个子串与其余的子串进行比较，一次一个。在这里使用bitwise XOR（Exclusive OR）运算符是一个合理的选择。这给了我们一个二进制值，其中1的数量就是该子串的翻转次数。Raku确实有一个XOR运算符。+^. 但是它 \u0026ldquo;将两个参数都强制为Int，并进行位智XOR操作\u0026rdquo;(根据文档\u0026quot;；参见docs.raku.org/language/operators#infix_+^)。\n我们可以在进行XOR操作之前，将二进制值转换为十进制值。让我们试试。\n获取翻转的次数。\n\u0026gt; say (\u0026quot;10101\u0026quot;.parse-base(2) +^ \u0026quot;10111\u0026quot;.parse-base(2)).base(2).comb.sum; # -\u0026gt; 1 \u0026gt; say (\u0026quot;11101\u0026quot;.parse-base(2) +^ \u0026quot;10111\u0026quot;.parse-base(2)).base(2).comb.sum; # -\u0026gt; 2 这当然可行，但需要大量的代码。所以我将使用一个更简单的方法 - 逐个比较每个数字。\nFile: binary-substring\n#! /usr/bin/env raku subset BinaryString where /^ \u0026lt;[01]\u0026gt;+ $/; # [1] subset PosInt of Int where * \u0026gt; 0; # [2] unit sub MAIN (BinaryString $B = \u0026#39;101100101\u0026#39;, # [1] PosInt $S where $B.chars %% $S = 3, # [2] :v(:$verbose)); my @B = $B.comb($S.Int); # [3] my $first = @B.shift; # [4] my $total = 0; # [5] for @B -\u0026gt; $current # [6] { my $flip = bit-diff($first, $current); # [7] $total += $flip; # [8] say \u0026#34;: $first-\u0026gt; $current-\u0026gt; Flip: $flip\u0026#34; if $verbose; } say $total; # [9] sub bit-diff ($a, $b) # [7] { my $flip = 0; # [10] for ^$a.chars -\u0026gt; $index # [11] { $flip++ if $a.substr($index,1) ne $b.substr($index,1); # [12] } return $flip; } [1] 确保二进制字符串是合法的（只包含 \u0026ldquo;0 \u0026ldquo;和 \u0026ldquo;1\u0026rdquo;）。\n[2] 确保是一个正整数，同时确保字符串是被它偶数分割的。(例如，\u0026ldquo;4 \u0026ldquo;给我们提供了长度为4的子串，如果最后一个较短，程序将中止。)\n[3] 梳子通常用于将一个字符串分割成单个字符，但我们可以通过指定长度来获得每个子字符串中的多个字符，比如这样。\n[4] 例子首先将第一个子串与自己进行比较，给出零翻转。这是愚蠢的(ish)，所以我跳过这一点，把第一个子串移出。\n[5] 结果会到这里。\n[6] 对于每一个子串（除了第一个，见[4]）。\n[7] 获取每个子串的翻转次数。\n[8] 并将其添加到总数中。\n[9] 打印它。\n[10] 翻转的数量会在这里。\n[11] 对于两个子串中的每个索引（具有相同的长度）。\n[12] - 如果给定位置上的字符不同，则在总数的基础上加1，意味着移动。\nSee docs.raku.org/routine/comb for more information about comb.\n运行它。\n$ ./binary-substring \u0026quot;101100101\u0026quot; 3 1 $ ./binary-substring -v \u0026quot;101100101\u0026quot; 3 : 101 -\u0026gt; 100 -\u0026gt; Flip: 1 : 101 -\u0026gt; 101 -\u0026gt; Flip: 0 1 $ ./binary-substring \u0026quot;10110111\u0026quot; 4 2 $ ./binary-substring -v \u0026quot;10110111\u0026quot; 4 : 1011 -\u0026gt; 0111 -\u0026gt; Flip: 2 2 看起来不错。\nPerl 这是对 Raku 版本的直接翻译，只是我必须实现 \u0026ldquo;comb\u0026rdquo;。\n文件： binary-substring-perl\n#! /usr/bin/env perl use strict; use warnings; use feature \u0026#39;say\u0026#39;; use feature \u0026#39;signatures\u0026#39;; use Getopt::Long; no warnings \u0026#34;experimental::signatures\u0026#34;; my $verbose = 0; GetOptions(\u0026#34;verbose\u0026#34; =\u0026gt; \\$verbose); my $B = shift(@ARGV) // \u0026#39;101100101\u0026#39;; die \u0026#34;Not a binary number\u0026#34; unless $B =~ /^[01]+$/; my $S = shift(@ARGV) // 3; die \u0026#34;Not an integer\u0026#34; unless $S =~ /^[1-9][0-9]*$/; die \u0026#34;Not a legal length\u0026#34; if length($B) % $S; my @B = comb($B, $S); my $first = shift(@B); my $total = 0; for my $current (@B) { my $flip = bit_diff($first, $current); $total += $flip; say \u0026#34;: $first-\u0026gt; $current-\u0026gt; Flip: $flip\u0026#34; if $verbose; } say $total; sub bit_diff ($a, $b) { my $flip = 0; for my $index (0 .. length($a)) { $flip++ if substr($a, $index,1) ne substr($b, $index,1); } return $flip; } sub comb ($string, $length = 1) # [1] { my @result; while ($string) { push(@result, substr($string, 0, $length)); $string = substr($string, $length); } return @result; } [1] 缺失的 Raku 例程 \u0026ldquo;comb\u0026rdquo;。可选的第二个参数指定了它所返回的每个子串中所包含的（第一个参数的）子串长度。\n运行它的结果与 Raku 版本相同。\n$ ./binary-substring-perl \u0026quot;101100101\u0026quot; 3 1 $ ./binary-substring-perl -v \u0026quot;101100101\u0026quot; 3 : 101 -\u0026gt; 100 -\u0026gt; Flip: 1 : 101 -\u0026gt; 101 -\u0026gt; Flip: 0 1 $ ./binary-substring-perl \u0026quot;101100111\u0026quot; 3 2 $ ./binary-substring-perl -v \u0026quot;101100111\u0026quot; 3 : 101 -\u0026gt; 100 -\u0026gt; Flip: 1 : 101 -\u0026gt; 111 -\u0026gt; Flip: 1 2 就是这样。\n"},"name":"Caesarean Substrings With Raku and Perl","published":"2021-02-07T00:00:00Z","summary":"Caesarean Substrings With Raku and Perl","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-01-30-caesarean-substrings-with-raku-and-perl/"},{"content":{"html":"\u003ch1 id=\"if-sets-would-dwimhttpsdonaldhwtf202101if-sets-would-dwim\"\u003e\u003ca href=\"https://donaldh.wtf/2021/01/if-sets-would-dwim/\"\u003eIf Sets Would DWIM\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e每当我在 Raku 中使用集合的时候，它们经常无法 \u003ca href=\"https://docs.raku.org/language/glossary#DWIM\"\u003eDWIM\u003c/a\u003e。这是一个简短的探索，看看是否可以改进 DWIMminess。\u003c/p\u003e\n\u003cp\u003e我最近重新审视了我前段时间写的一个利用 \u003ccode\u003e(-)\u003c/code\u003e 集差运算符的脚本。这段代码有一个 bug 潜伏在那里，显而易见，因为下面的代码并没有按照我的直觉去做。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@allowed\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003em c i p l o t\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@chars\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eimpolitic\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@remainder\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@allowed\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"nv\"\u003e@chars\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e@remainder\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epangram\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n     \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eunused: [\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e@remainder\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"n\"\u003eunused:\u003c/span\u003e \u003cspan class=\"o\"\u003e[]\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e错误的原因是 \u003ccode\u003e(-)\u003c/code\u003e 产生了一个 Set，而赋值给 \u003ccode\u003e@remainder\u003c/code\u003e 会产生1项的 Array。总是这样。但不方便的是，当它是一个空集合时，它就会字符串化为一个空字符串，这只是帮助掩盖了这个潜伏的错误。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@items\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e \u003cspan class=\"nb\"\u003ee\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@items\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e@items\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[Set.new()]\n1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e解决方法比较简单。只要不赋值给数组就可以了。使用一个标量容器来代替。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$items\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$items\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$items\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eSet.new(\u0026quot;e\u0026quot;,\u0026quot;c\u0026quot;)\n2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e甚至是关联容器也可以。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%items\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%items\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e%items\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{:c(Bool::True), :e(Bool::True)}\n2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e或在赋值前明确地取出键的列表。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@items\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@items\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e@items\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[\u0026quot;e\u0026quot;, \u0026quot;c\u0026quot;]\n2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e很好，起作用了。只是不要用数组容器来处理 \u003ccode\u003eSetty\u003c/code\u003e 这样的东西。只是这并不能阻止我的直觉时不时地碰上这个错误。同一类的 bug 在我的代码中出现过好几次，因为它实在是太容易犯错了。Raku 不会告诉我，我做错了什么，因为也许是故意的。但重要的是， Raku 没有设法 DWIM。\u003c/p\u003e\n\u003cp\u003e我可以采取的另一个方法是养成添加类型信息的习惯。这样确实可以让 Raku 在我掉进这个陷阱的时候告诉我。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eType check failed in assignment to @a; expected Str but got Set (Set.new(\u0026quot;e\u0026quot;,\u0026quot;c\u0026quot;))\n  in sub  at EVAL_0 line 3\n  in block \u0026lt;unit\u0026gt; at EVAL_0 line 5\n  in block \u0026lt;unit\u0026gt; at -e line 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这是一个明显的例子，添加类型信息有助于 Raku 编译器帮助我避免引入这种 bug。\u003c/p\u003e\n\u003ch2 id=\"实验---为-set-自定义数组存储\"\u003e实验 - 为 Set 自定义数组存储\u003c/h2\u003e\n\u003cp\u003e我开始研究核心设置(core setting)，看看可以做什么。我惊喜地发现，我可以在 \u003ccode\u003eArray.STORE\u003c/code\u003e 的多重分派中添加我正在寻找的语义。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eMONKEY\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eaugment\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n   \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eSTORE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eArray\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eSet\u003c/span\u003e \\\u003cspan class=\"nb\"\u003eitem\u003c/span\u003e \u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray:D\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n       \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eSTORE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eitem\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n   \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[\u0026quot;c\u0026quot;, \u0026quot;e\u0026quot;]\n2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e分享这个似乎是谨慎的，看看我的小 DWIM 是否有任何我没有考虑到的问题或缺点。一个可能的缺点是，如果你需要这样做的话，你需要使用 \u003ccode\u003e,\u003c/code\u003e 来强制将一个集合变成一个数组。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[Set.new(\u0026quot;e\u0026quot;,\u0026quot;c\u0026quot;)]\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"下一步是什么\"\u003e下一步是什么\u003c/h2\u003e\n\u003cp\u003e我希望这能引发关于这个问题以及其他我们的直觉和 Raku 的行为不太一致的情况的讨论。也许还有其他相关的语言边缘可以被磨平，以消除这种危害。\u003c/p\u003e\n\u003ch2 id=\"后续\"\u003e后续\u003c/h2\u003e\n\u003cp\u003e在 \u003ca href=\"https://t.co/0QSoMxrSXf?amp=1\"\u003eReddit\u003c/a\u003e 上有一些非常有启发性的讨论，涵盖了语言语义和各种替代方法。公平地说，我建议的方法引入了更多的不一致性，而不是价值，但讨论可能会导致一个语言一致的解决方案。\u003c/p\u003e\n","text":"If Sets Would DWIM 每当我在 Raku 中使用集合的时候，它们经常无法 DWIM。这是一个简短的探索，看看是否可以改进 DWIMminess。\n我最近重新审视了我前段时间写的一个利用 (-) 集差运算符的脚本。这段代码有一个 bug 潜伏在那里，显而易见，因为下面的代码并没有按照我的直觉去做。\nmy @allowed = \u0026lt;m c i p l o t\u0026gt;; my @chars = \u0026#39;impolitic\u0026#39;.comb; my @remainder = @allowed (-) @chars; if +@remainder == 0 { say \u0026#39;pangram\u0026#39;; } else { say \u0026#34;unused: [{@remainder.join(\u0026#39;\u0026#39;)}]\u0026#34;; } unused: [] 错误的原因是 (-) 产生了一个 Set，而赋值给 @remainder 会产生1项的 Array。总是这样。但不方便的是，当它是一个空集合时，它就会字符串化为一个空字符串，这只是帮助掩盖了这个潜伏的错误。\nmy @items = \u0026lt;a b c d e\u0026gt; (-) \u0026lt;a b c d e\u0026gt;; say @items.raku; say +@items; [Set.new()] 1 解决方法比较简单。只要不赋值给数组就可以了。使用一个标量容器来代替。\nmy $items = \u0026lt;a b c d e\u0026gt; (-) \u0026lt;a b d\u0026gt;; say $items.raku; say +$items; Set.new(\u0026quot;e\u0026quot;,\u0026quot;c\u0026quot;) 2 甚至是关联容器也可以。\nmy %items = \u0026lt;a b c d e\u0026gt; (-) \u0026lt;a b d\u0026gt;; say %items.raku; say +%items; {:c(Bool::True), :e(Bool::True)} 2 或在赋值前明确地取出键的列表。\nmy @items = (\u0026lt;a b c d e\u0026gt; (-) \u0026lt;a b d\u0026gt;).keys; say @items.raku; say +@items; [\u0026quot;e\u0026quot;, \u0026quot;c\u0026quot;] 2 很好，起作用了。只是不要用数组容器来处理 Setty 这样的东西。只是这并不能阻止我的直觉时不时地碰上这个错误。同一类的 bug 在我的代码中出现过好几次，因为它实在是太容易犯错了。Raku 不会告诉我，我做错了什么，因为也许是故意的。但重要的是， Raku 没有设法 DWIM。\n我可以采取的另一个方法是养成添加类型信息的习惯。这样确实可以让 Raku 在我掉进这个陷阱的时候告诉我。\nmy Str @a = \u0026lt;a b c d e\u0026gt; (-) \u0026lt;a b d\u0026gt;; Type check failed in assignment to @a; expected Str but got Set (Set.new(\u0026quot;e\u0026quot;,\u0026quot;c\u0026quot;)) in sub at EVAL_0 line 3 in block \u0026lt;unit\u0026gt; at EVAL_0 line 5 in block \u0026lt;unit\u0026gt; at -e line 1 这是一个明显的例子，添加类型信息有助于 Raku 编译器帮助我避免引入这种 bug。\n实验 - 为 Set 自定义数组存储 我开始研究核心设置(core setting)，看看可以做什么。我惊喜地发现，我可以在 Array.STORE 的多重分派中添加我正在寻找的语义。\nuse MONKEY; augment class Array { multi method STORE(Array:D: Set \\item --\u0026gt; Array:D) { self.STORE(item.keys) } } my @a = \u0026lt;a b c d e\u0026gt; (-) \u0026lt;a b d\u0026gt;; say @a.raku; say +@a; [\u0026quot;c\u0026quot;, \u0026quot;e\u0026quot;] 2 分享这个似乎是谨慎的，看看我的小 DWIM 是否有任何我没有考虑到的问题或缺点。一个可能的缺点是，如果你需要这样做的话，你需要使用 , 来强制将一个集合变成一个数组。\nmy @a = \u0026lt;a b c d e\u0026gt; (-) \u0026lt;a b d\u0026gt; , ; say @a.raku; [Set.new(\u0026quot;e\u0026quot;,\u0026quot;c\u0026quot;)] 下一步是什么 我希望这能引发关于这个问题以及其他我们的直觉和 Raku 的行为不太一致的情况的讨论。也许还有其他相关的语言边缘可以被磨平，以消除这种危害。\n后续 在 Reddit 上有一些非常有启发性的讨论，涵盖了语言语义和各种替代方法。公平地说，我建议的方法引入了更多的不一致性，而不是价值，但讨论可能会导致一个语言一致的解决方案。\n"},"name":"如果集合如我所想","published":"2021-02-07T00:00:00Z","summary":"If Sets Would DWIM","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-02-07-if-sets-would-dwim/"}],"name":"rakulang","type":"feed","url":"https://ohmyweekly.github.io/tags/rakulang/"}
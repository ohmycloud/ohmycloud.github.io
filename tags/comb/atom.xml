<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.85.0">Hugo</generator><title type="html"><![CDATA[comb on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/comb/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/comb/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/comb/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/comb/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-07-13T22:14:20+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/comb/</id>
    
        
        <entry>
            <title type="html"><![CDATA[comb - 操作字符串的利器]]></title>
            <link href="https://ohmyweekly.github.io/notes/2016-02-03-comb-in-raku/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2016-02-03-comb-in-raku/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-07-11T00:00:00+08:00</published>
            <updated>2021-07-11T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Comb in Raku</blockquote><p>comb - 操作字符串的利器</p>
<h2 id="comb-子例程">comb 子例程</h2>
<p>comb 子例程的定义为：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">multi</span> <span class="k">sub</span>    <span class="nb">comb</span><span class="p">(</span><span class="nb">Regex</span> <span class="nv">$matcher</span><span class="o">,</span> <span class="nb">Str</span><span class="p">(</span><span class="nb">Cool</span><span class="p">)</span> <span class="nv">$input</span><span class="o">,</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="o">*</span><span class="p">)</span> <span class="k">returns</span> <span class="nb">List:D</span>
<span class="k">multi</span> <span class="k">method</span> <span class="nb">comb</span><span class="p">(</span><span class="nb">Regex</span> <span class="nv">$matcher</span><span class="o">,</span>                   <span class="nv">$limit</span> <span class="o">=</span> <span class="o">*</span><span class="p">)</span> <span class="k">returns</span> <span class="nb">List:D</span>
</code></pre></div><p>用法：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">comb</span> <span class="o">/</span><span class="n">PATTERN</span><span class="o">/,</span> <span class="n">STRING</span><span class="o">,</span> <span class="n">LIMIT</span><span class="o">?</span>  <span class="c1"># 子例程形式</span>
<span class="n">STRING</span><span class="o">.</span><span class="nb">comb</span><span class="p">(/</span><span class="sr">PATTERN</span><span class="p">/</span><span class="o">,</span> <span class="n">LIMIT</span><span class="o">?</span><span class="p">)</span>  <span class="c1"># 方法形式</span>
</code></pre></div><p>返回调用者（方法形式）的所有（或者至多 $limit 个，如果提供了的话）匹配，或者返回第二个参数（sub 形式）与 Regex 相匹配的字符串列表。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">say</span> <span class="p">&#34;</span><span class="s2">6 or 12</span><span class="p">&#34;</span><span class="o">.</span><span class="nb">comb</span><span class="p">(/</span><span class="se">\d</span><span class="o">+</span><span class="p">/)</span><span class="o">.</span><span class="nb">join</span><span class="p">(&#34;</span><span class="s2">, </span><span class="p">&#34;);</span> <span class="c1"># 6, 12</span>
</code></pre></div><h2 id="str-类中的-comb">Str 类中的 comb</h2>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">multi</span> <span class="k">sub</span>    <span class="nb">comb</span><span class="p">(</span><span class="nb">Str:D</span>   <span class="nv">$matcher</span><span class="o">,</span> <span class="nb">Str:D</span> <span class="nv">$input</span><span class="o">,</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="no">Inf</span><span class="p">)</span>
<span class="k">multi</span> <span class="k">sub</span>    <span class="nb">comb</span><span class="p">(</span><span class="nb">Regex:D</span> <span class="nv">$matcher</span><span class="o">,</span> <span class="nb">Str:D</span> <span class="nv">$input</span><span class="o">,</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="no">Inf</span><span class="o">,</span> <span class="nb">Bool</span> <span class="o">:</span><span class="nv">$match</span><span class="p">)</span>
<span class="k">multi</span> <span class="k">sub</span>    <span class="nb">comb</span><span class="p">(</span><span class="nb">Int:D</span> <span class="nv">$size</span><span class="o">,</span> <span class="nb">Str:D</span> <span class="nv">$input</span><span class="o">,</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="no">Inf</span><span class="p">)</span>

<span class="k">multi</span> <span class="k">method</span> <span class="nb">comb</span><span class="p">(</span><span class="nb">Str:D</span> <span class="nv">$input:</span><span class="p">)</span>
<span class="k">multi</span> <span class="k">method</span> <span class="nb">comb</span><span class="p">(</span><span class="nb">Str:D</span> <span class="nv">$input:</span> <span class="nb">Str:D</span>   <span class="nv">$matcher</span><span class="o">,</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="no">Inf</span><span class="p">)</span>
<span class="k">multi</span> <span class="k">method</span> <span class="nb">comb</span><span class="p">(</span><span class="nb">Str:D</span> <span class="nv">$input:</span> <span class="nb">Regex:D</span> <span class="nv">$matcher</span><span class="o">,</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="no">Inf</span><span class="o">,</span> <span class="nb">Bool</span> <span class="o">:</span><span class="nv">$match</span><span class="p">)</span>
<span class="k">multi</span> <span class="k">method</span> <span class="nb">comb</span><span class="p">(</span><span class="nb">Str:D</span> <span class="nv">$input:</span> <span class="nb">Int:D</span> <span class="nv">$size</span><span class="o">,</span> <span class="nv">$limit</span> <span class="o">=</span> <span class="no">Inf</span><span class="p">)</span>
</code></pre></div><p>在 <code>$input</code> 中搜索 <code>$matcher</code> 并返回所有匹配（默认是 Str，或者是 Match 对象，如果 <code>$match</code> 为真的话）的一个列表。<code>$limit</code> 表示至多返回 <code>$limit</code> 个匹配。</p>
<p>如果没有提供 <code>$matcher</code>(匹配器)， 那么会返回字符串中的所有字符的列表。等价于使用了 <code>$matcher = rx/./</code>。</p>
<p>例子：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nb">comb</span><span class="p">(/</span><span class="se">\w</span><span class="p">/</span><span class="o">,</span> <span class="p">&#34;</span><span class="s2">a;b;c</span><span class="p">&#34;)</span><span class="o">.</span><span class="nb">perl</span><span class="p">;</span>        <span class="c1"># (&#34;a&#34;, &#34;b&#34;, &#34;c&#34;).list</span>
<span class="nb">comb</span><span class="p">(/</span><span class="se">\N</span><span class="p">/</span><span class="o">,</span> <span class="p">&#34;</span><span class="s2">a;b;c</span><span class="p">&#34;)</span><span class="o">.</span><span class="nb">perl</span><span class="p">;</span>        <span class="c1"># (&#34;a&#34;, &#34;;&#34;, &#34;b&#34;, &#34;;&#34;, &#34;c&#34;).list</span>
<span class="nb">comb</span><span class="p">(/</span><span class="se">\w</span><span class="p">/</span><span class="o">,</span> <span class="p">&#34;</span><span class="s2">a;b;c</span><span class="p">&#34;</span><span class="o">,</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="nb">perl</span><span class="p">;</span>     <span class="c1"># (&#34;a&#34;, &#34;b&#34;).list</span>
<span class="nb">comb</span><span class="p">(/</span><span class="se">\w</span><span class="sr">\;</span><span class="se">\w</span><span class="p">/</span><span class="o">,</span> <span class="p">&#34;</span><span class="s2">a;b;c</span><span class="p">&#34;</span><span class="o">,</span> <span class="mi">2</span><span class="p">)</span><span class="o">.</span><span class="nb">perl</span><span class="p">;</span> <span class="c1"># (&#34;a;b&#34;,).list</span>

<span class="p">&#34;</span><span class="s2">123abc456def</span><span class="p">&#34;</span><span class="o">.</span><span class="nb">comb</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>           <span class="c1"># (123 abc 456 def)</span>
<span class="p">&#34;</span><span class="s2">123abc456def</span><span class="p">&#34;</span><span class="o">.</span><span class="nb">comb</span><span class="p">(</span><span class="mi">3</span><span class="o">,</span><span class="mi">2</span><span class="p">);</span>        <span class="c1"># (123 abc)</span>
</code></pre></div><p>如果匹配器（matcher）是一个整数值，那么它被认为和 <code>/. ** matcher/</code> 类似，但是这个快了 30 倍。</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/rakulang" term="rakulang" label="rakulang" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/comb" term="comb" label="comb" />
                            
                        
                    
                
            
        </entry>
    
</feed>

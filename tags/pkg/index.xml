<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>
            
                    pkg on
                
            
            焉知非鱼</title>
        <link>https://ohmyweekly.github.io/tags/pkg/</link>
        <description>Recent content  in pkg
            on 焉知非鱼</description>
        <language>en-us</language>
        <lastBuildDate>Wed, 14 Apr 2021 23:11:23 +0800</lastBuildDate>
        <generator>Hugo -- gohugo.io</generator>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
            <atom:link href="https://ohmyweekly.github.io/tags/pkg/index.xml" rel="self" type="application/rss&#43;xml" />
        
            
            <item>
                <title>Julia 中的 Pkg</title>
                <link>https://ohmyweekly.github.io/notes/2020-08-04-pkg-in-julia/</link>
                
                
                <description>&lt;blockquote&gt;Pkg&lt;/blockquote&gt;&lt;h2 id=&#34;进入-pkg-模式&#34;&gt;进入 Pkg 模式&lt;/h2&gt;
&lt;p&gt;Pkg 是 Julia 中包管理工具。Pkg 来自于 REPL, 在 Julia 的 REPL 中按下 &lt;code&gt;]&lt;/code&gt; 就进入 Pkg REPL 了。要回到 Julia REPL, 按退格键或 &lt;code&gt;^C&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;使用-pkg&#34;&gt;使用 Pkg&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;add JSON              &lt;span class=&#34;c1&#34;&gt;# 添加一个 package&lt;/span&gt;
add JSON StaticArrays &lt;span class=&#34;c1&#34;&gt;# 添加多个 package&lt;/span&gt;
rm JSON               &lt;span class=&#34;c1&#34;&gt;# 移除一个 package&lt;/span&gt;
rm JSON StaticArrays  &lt;span class=&#34;c1&#34;&gt;# 移除多个 package&lt;/span&gt;
add https://github.com/JuliaLang/Example.jl &lt;span class=&#34;c1&#34;&gt;# 添加一个未注册的 package&lt;/span&gt;
rm Example            &lt;span class=&#34;c1&#34;&gt;# 按名字移除 package&lt;/span&gt;
update Example        &lt;span class=&#34;c1&#34;&gt;# 升级一个已安装的 package&lt;/span&gt;
update                &lt;span class=&#34;c1&#34;&gt;# 升级所有已安装的 package&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;environments&#34;&gt;environments&lt;/h2&gt;
&lt;p&gt;你可能已经注意到 Pkg REPL 提示符前面的 &lt;code&gt;(@v1.5)&lt;/code&gt; 字符串了。这里的  &lt;code&gt;(@v1.5)&lt;/code&gt; 就是激活环境(&lt;strong&gt;active environment&lt;/strong&gt;)。激活环境是能被诸如 &lt;code&gt;add&lt;/code&gt;、&lt;code&gt;rm&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; 等 Pkg 命令修改的环境。&lt;/p&gt;
&lt;p&gt;我们可以设置一个新的激活环境用于实验。要设置激活环境, 使用 &lt;code&gt;activate&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;@v1.5&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; activate tutorial
Activating new environment at &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Project.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;~/tutorial/Project.toml&lt;/code&gt; 是激活环境的项目文件。项目文件是 Pkg 存储环境的元数据的地方。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;tutorial&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; status
Status &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Project.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;empty project&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在这个新的环境是空的, 我们添加一个 package 观察下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;tutorial&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; add Example
   Updating registry at &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/.julia/registries/General&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
   Updating git-repo &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;https://github.com/JuliaRegistries/General.git&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  Resolving package versions...
    Cloning &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07-990d-54b4-ab0e-23690620f79a&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Example from https://github.com/JuliaLang/Example.jl.git
  Installed Example ─ v0.5.3
Updating &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Project.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; + Example v0.5.3
Updating &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Manifest.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; + Example v0.5.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用 &lt;code&gt;status&lt;/code&gt; 命令查看激活环境的信息:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;tutorial&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; status
Status &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Project.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Example v0.5.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用 &lt;code&gt;develop&lt;/code&gt; 命令设置 &lt;code&gt;Example&lt;/code&gt; package 的 一个 &lt;code&gt;git clone&lt;/code&gt;, 以供我们修改这个本地仓库:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;tutorial&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; develop --local Example
    Cloning git-repo &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;https://github.com/JuliaLang/Example.jl.git&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  Resolving package versions...
Updating &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Project.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; ~ Example v0.5.3 ⇒ v0.5.4 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dev/Example&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
Updating &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Manifest.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; ~ Example v0.5.3 ⇒ v0.5.4 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dev/Example&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用 &lt;code&gt;;&lt;/code&gt; 切换到 shell 模式, 用 vi 修改 &lt;code&gt;~/tutorial/dev/Example/src/Example.jl&lt;/code&gt; 文件, 增加一个 &lt;code&gt;plusone&lt;/code&gt; 函数, 保存。&lt;/p&gt;
&lt;p&gt;在 Julia 的 REPL 中, 导入修改后的 &lt;code&gt;Example&lt;/code&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;julia&amp;gt; import Example
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; Info: Precompiling Example &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07-990d-54b4-ab0e-23690620f79a&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;

julia&amp;gt; Example.plusone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;

julia&amp;gt; Example.plusone&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;4&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到我们添加的函数生效了, 这样就很方便我们添加测试新功能。如果我们已经不再需要本地的 &lt;code&gt;Example&lt;/code&gt; 了, 需要使用 &lt;code&gt;free&lt;/code&gt; 命令以停止使用本地克隆的 package, 转而使用已注册版本代替:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;tutorial&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; free Example
  Resolving package versions...
Updating &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Project.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; ~ Example v0.5.4 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dev/Example&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; ⇒ v0.5.3
Updating &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/tutorial/Manifest.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;7876af07&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; ~ Example v0.5.4 &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;dev/Example&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; ⇒ v0.5.3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果已经用 &lt;code&gt;tutorial&lt;/code&gt; 做完实验了, 可以使用不带参数的 &lt;code&gt;activate&lt;/code&gt; 回到默认环境:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;tutorial&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; activate
 Activating environment at &lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;~/.julia/environments/v1.5/Project.toml&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;@v1.5&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; pkg&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
                
                        <author>焉知非鱼@fakeEmailToMakeValidatorHappy.com (焉知非鱼)</author>
                
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/categories/programming">programming</category>
                                
                            
                        
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/julia">julia</category>
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/pkg">pkg</category>
                                
                            
                        
                    
                
                <guid>https://ohmyweekly.github.io/notes/2020-08-04-pkg-in-julia/</guid>
                <pubDate>Tue, 04 Aug 2020 00:00:00 +0800</pubDate>
            </item>
        
    </channel>
</rss>



{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003ch2 id=\"第八章-函数式编程\"\u003e第八章 函数式编程\u003c/h2\u003e\n\u003cp\u003e在本章中，我们将看看一些有利于函数式编程的功能。\u003c/p\u003e\n\u003ch3 id=\"函数是一等公民\"\u003e函数是一等公民\u003c/h3\u003e\n\u003cp\u003e函数/子例程是一等公民:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e它们能作为参数传递\u003c/li\u003e\n\u003cli\u003e它们能从另外一个函数中返回\u003c/li\u003e\n\u003cli\u003e它们能被赋值给变量\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003emap\u003c/code\u003e 函数是用来说明这个概念的极好例子。\u003ccode\u003emap\u003c/code\u003e 是高阶函数, 它接收另外一个函数作为参数。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e脚本\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e1 2 3 4 5\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003esquared\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;squared\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e输出\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e(1 4 9 16 25)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e我们定义了一个叫做 \u003ccode\u003esquared\u003c/code\u003e 的子例程, 它接收一个数字并返回该数字的二次幂。下一步, 我们使用 \u003ccode\u003emap\u003c/code\u003e 这个高阶函数并传递给它两个参数, 一个子例程和一个数组。结果是所有数组元素的平方组成的列表。\u003c/p\u003e\n\u003cp\u003e注意当传递子例程作为参数时, 我们需要在子例程的名字前添加一个 \u003ccode\u003e\u0026amp;\u003c/code\u003e 符号。\u003c/p\u003e\n\u003ch3 id=\"闭包\"\u003e闭包\u003c/h3\u003e\n\u003cp\u003e　\n在 Raku 中所有的代码对象都是闭包, 这意味着它们能从外部作用域(outer scope)引用词法变量(lexical variables)。\u003c/p\u003e\n\u003ch3 id=\"匿名函数\"\u003e匿名函数\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003e匿名函数\u003c/strong\u003e也叫做 \u003cstrong\u003elambda\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e匿名函数没有绑定到标识符(匿名函数没有名字)。\u003c/p\u003e\n\u003cp\u003e让我们使用匿名函数重写 \u003ccode\u003emap\u003c/code\u003e 那个例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e1 2 3 4 5\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们没有声明子例程并把它作为参数传递给 \u003ccode\u003emap\u003c/code\u003e, 而是在里面直接定义了匿名函数。\u003c/p\u003e\n\u003cp\u003e匿名函数 \u003ccode\u003e-\u0026gt; $x {$x ** 2}\u003c/code\u003e 没有句柄并且不能被调用。\u003c/p\u003e\n\u003cp\u003e按照 Raku 的说法我们把这个标记叫做 \u003cstrong\u003epointy block\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003epointy block 也能用于把函数赋值给变量:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$squared\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$squared\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"链式调用\"\u003e链式调用\u003c/h3\u003e\n\u003cp\u003e　\n在 Raku 中, 方法可以链接起来, 你不再需要把一个方法的结果作为参数传递给另外一个方法了。\u003c/p\u003e\n\u003cp\u003e我们假设你有一个数组。你被要求返回该数组的唯一值, 并且按从大到小的顺序排序。\u003c/p\u003e\n\u003cp\u003e你可能会通过写出近似于这样的代码来解决那个问题:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e7 8 9 0 1 2 4 3 5 6 7 8 9 \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"p\"\u003e)));\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e首先我们在 \u003ccode\u003e@array\u003c/code\u003e 身上调用 \u003ccode\u003eunique\u003c/code\u003e 函数, 然后我们把它的结果作为参数传递给 \u003ccode\u003esort\u003c/code\u003e 函数, 再然后我们把结果传递给 \u003ccode\u003ereverse\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cp\u003e和上面的例子相比, Raku 允许链式方法。\u003c/p\u003e\n\u003cp\u003e上面的例子可以像下面这样写, 利用\u003cstrong\u003e方法链\u003c/strong\u003e的优点:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e7 8 9 0 1 2 4 3 5 6 7 8 9 \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eunique\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你已经看到链式方法看起来有多清爽啦。\u003c/p\u003e\n\u003ch3 id=\"feed-操作符\"\u003eFeed 操作符\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003efeed 操作符\u003c/strong\u003e, 在有些函数式编程语言中也叫\u003cstrong\u003e管道\u003c/strong\u003e, 然而它是链式方法的一个更好的可视化产出。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e向前流\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e7 8 9 0 1 2 4 3 5 6\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n       \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n       \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n       \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e从 @array 开始, 然后返回一个唯一元素的列表\n                 然后 排序它\n                 然后 反转它\n                 然后 把结果保存到 @final-array 中\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e就像你看到的那样, 方法的流向是自上而下的。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e向后流\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e7 8 9 0 1 2 4 3 5 6\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array-v2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;==\u003c/span\u003e \u003cspan class=\"nb\"\u003ereverse\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n                   \u003cspan class=\"o\"\u003e\u0026lt;==\u003c/span\u003e \u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n                   \u003cspan class=\"o\"\u003e\u0026lt;==\u003c/span\u003e \u003cspan class=\"nb\"\u003eunique\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n                   \u003cspan class=\"o\"\u003e\u0026lt;==\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@final-array-v2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e向后流就像向前流一样, 但是是以反转的顺序写的。\u003c/p\u003e\n\u003cp\u003e方法的流动方向是自下而上。\u003c/p\u003e\n\u003ch3 id=\"hyper-操作符\"\u003eHyper 操作符\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003ehyper 操作符\u003c/strong\u003e \u003ccode\u003e».\u003c/code\u003e 会在列表的所有元素身上调用一个方法并返回所有结果的一个列表。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e0 1 2 3 4 5 6 7 8 9 10\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eis-even\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$var\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$var\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;is-even\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用 hyper 操作符我们能调用 Raku 中已经定义过的方法, 例如 \u003ccode\u003eis-prime\u003c/code\u003e 告诉我们一个数字是否是质数。\u003c/p\u003e\n\u003cp\u003e此外我们能定义新的子例程并使用 hyper 操作符调用它们。但是这时我们必须在方法的名字前面加上 \u003ccode\u003e\u0026amp;\u003c/code\u003e 符号。例如 \u003ccode\u003e\u0026amp;is-even\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e这很实用因为它使我们不必写 \u003ccode\u003efor\u003c/code\u003e 循环就可以迭代每个值。\u003c/p\u003e\n\u003ch3 id=\"junctions\"\u003eJunctions\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003ejunction\u003c/strong\u003e 是值的逻辑叠加。\u003c/p\u003e\n\u003cp\u003e在下面的例子中 \u003ccode\u003e1|2|3\u003c/code\u003e 是一个 junction。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$var\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$var\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe variable is 1 or 2 or 3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ejunctions 的使用常常触发\u003cstrong\u003e自动线程化\u003c/strong\u003e; 每个 junction 元素都执行该操作, 并且所有的结果被组合到一个新的 junction 中并返回。\u003c/p\u003e\n\u003ch3 id=\"lazy-lists\"\u003eLazy Lists\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003e惰性列表\u003c/strong\u003e是被惰性求值的列表。\u003c/p\u003e\n\u003cp\u003e惰性求值延迟表达式的计算直到需要时, 并把结果存储到查询表中以避免重复计算。\u003c/p\u003e\n\u003cp\u003e惰性列表的优点包括:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e通过避免不必要的计算带来的性能提升\u003c/li\u003e\n\u003cli\u003e构建潜在的无限数据结构的能力\u003c/li\u003e\n\u003cli\u003e定义控制流的能力\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e我们使用中缀操作符 \u003ccode\u003e...\u003c/code\u003e 来创建惰性列表。\u003c/p\u003e\n\u003cp\u003e惰性列表拥有一个\u003cstrong\u003e初始元素\u003c/strong\u003e, 一个\u003cstrong\u003e发生器\u003c/strong\u003e和一个\u003cstrong\u003e结束点\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e简单的惰性列表\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e初始元素为 1 而结束点为 10。因为没有定义发生器所以默认的发生器为 successor(+1)。换句话说, 这个惰性列表可能返回(如果需要的话)下面的元素 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e无限惰性列表\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"no\"\u003eInf\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该列表可能返回(如果需要的话) 1 到无穷大之间的任何整数, 换句话说, 可以返回任何整数。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e使用推断发生器创建惰性列表\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e初始的元素是 0 和 2 而结束点是 10。虽然没有定义发生器, 但是使用了初始元素, Raku 会把生成器推断为 (+2)。\u003c/p\u003e\n\u003cp\u003e这个惰性列表可能返回(如果需要的话)下面的元素 (0, 2, 4, 6, 8, 10)。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e使用定义的发生器创建惰性列表\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中, 我们在闭合 \u003ccode\u003e{ }\u003c/code\u003e 中显式地定义了一个发生器。\u003c/p\u003e\n\u003cp\u003e这个惰性列表可能返回(如果需要的话)下面的元素 (0, 3, 6, 9, 12)。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e当使用显式的发生器时, 结束点必须是发生器能返回的一个值。\u003c/p\u003e\n\u003cp\u003e如果在上面的例子中我们使用的结束点是 10 而非 12, 那么发生器就不会停止。发生器会跳过那个结束点。\u003c/p\u003e\n\u003cp\u003e二选一, 你可以使用 \u003ccode\u003e0 ...^ * \u0026gt; 10\u003c/code\u003e 代替 \u003ccode\u003e0 ... 10\u003c/code\u003e。你可以把它读作: 从 0 直到第一个大于 10(不包括它)的值\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e这不会使发生器停止\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e这会使发生器停止\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e...^\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lazylist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"第九章-类和对象\"\u003e第九章 类和对象\u003c/h2\u003e\n\u003cp\u003e在上一章中我们学习了 Raku 中函数式编程的便利性。在这一章中我们将看看 Raku 中的面向对象编程。\u003c/p\u003e\n\u003ch3 id=\"介绍\"\u003e介绍\u003c/h3\u003e\n\u003cp\u003e　\n面向对象编程是当今广泛使用的范式之一。\u003cstrong\u003e对象\u003c/strong\u003e是一组绑定在一起的变量和子例程。\u003c/p\u003e\n\u003cp\u003e其中的变量叫做\u003cstrong\u003e属性\u003c/strong\u003e, 而子例程被叫做\u003cstrong\u003e方法\u003c/strong\u003e。属性定义对象的\u003cstrong\u003e状态\u003c/strong\u003e, 而方法定义对象的\u003cstrong\u003e行为\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e类\u003c/strong\u003e定义一组\u003cstrong\u003e对象\u003c/strong\u003e结构。\u003c/p\u003e\n\u003cp\u003e为了理解它们之间的关系, 考虑下面的例子:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003e房间里有 4 个 people\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003e\u003cstrong\u003eobjects\u003c/strong\u003e =\u0026gt; 4 people\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e这 4 个人是 humans\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003eclass\u003c/strong\u003e =\u0026gt; Human\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003e它们有不同的名字,年纪,性别和国籍\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003e\u003cstrong\u003eattribute\u003c/strong\u003e =\u0026gt; name,age,sex,nationality\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e按面向对象的说法, 对象是类的\u003cstrong\u003e实例\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e考虑下面的脚本:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nationality\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e,\n                     \u003cspan class=\"s\"\u003eage\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e,\n                     \u003cspan class=\"s\"\u003esex\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n                     \u003cspan class=\"s\"\u003enationality\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAmerican\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eclass\u003c/code\u003e 关键字用于定义类。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ehas\u003c/code\u003e 关键字用于定义类的属性。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.new\u003c/code\u003e 方法被称之为\u003cstrong\u003e构造函数\u003c/strong\u003e。它创建了对象作为类的实例。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在上面的例子中, 新的变量 \u003ccode\u003e$john\u003c/code\u003e 保存了由 \u003ccode\u003eHuman.new()\u003c/code\u003e 所定义的新 \u0026ldquo;Human\u0026rdquo; 实例。\n传递给 \u003ccode\u003e.new()\u003c/code\u003e 方法的参数用于设置底层对象的属性。\n类可以使用 \u003ccode\u003emy\u003c/code\u003e 来声明一个本地作用域:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"封装\"\u003e封装\u003c/h3\u003e\n\u003cp\u003e　\n封装是一个面向对象的概念, 它把一组数据和方法捆绑在一块。\n对象中的数据(属性)应该是\u003cstrong\u003e私有的\u003c/strong\u003e, 换句话说, 只能从对象内部访问它。\n为了从对象外部访问对象的属性, 我们使用叫做\u003cstrong\u003e存取器\u003c/strong\u003e的方法。\n下面两个脚本拥有同样的结果。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e直接访问变量\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$var\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$var\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e封装\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$var\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003esayvar\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$var\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003esayvar\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003esayvar\u003c/code\u003e 是一个存取器。它让我们通过不直接访问这个变量来访问这个变量。\n在 Raku 中使用  \u003cstrong\u003etwigils\u003c/strong\u003e 使得封装很便利。\nTwigils 是第二 \u003cem\u003e\u003cstrong\u003e符号\u003c/strong\u003e\u003c/em\u003e。它们存在于符号和属性名之间。\n有两个 twigils 用在类中:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e!\u003c/code\u003e 用于显式地声明属性是私有的\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.\u003c/code\u003e 用于为属性自动生成存取器\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e默认地, 所有的属性都是私有的, 但是总是用 \u003ccode\u003e!\u003c/code\u003e twigil 是一个好习惯。\n为了和我说的相一致, 我们应该把上面的类重写成下面这样:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!sex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!nationality\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e, \u003cspan class=\"s\"\u003esex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003enationality\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAmerican\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e给脚本追加这样的的语句: \u003ccode\u003esay $john.age\u003c/code\u003e;\n它会返回这样的错误: \u003ccode\u003eMethod 'age' not found for invocant of class 'Human'\u003c/code\u003e。\n原因是 \u003ccode\u003e$!age\u003c/code\u003e 是私有的并且只能用于对象内部。 尝试在对象外部访问它会返回一个错误。\n现在用 \u003ccode\u003ehas $.age\u003c/code\u003e 代替 \u003ccode\u003e$!age\u003c/code\u003e 并看看 \u003ccode\u003esay $john.age;\u003c/code\u003e 的结果是什么。\u003c/p\u003e\n\u003ch3 id=\"具名参数-vs-位置参数\"\u003e具名参数 vs. 位置参数\u003c/h3\u003e\n\u003cp\u003e　\n在 Raku 中, 所有的类继承了一个默认的 \u003ccode\u003e.new\u003c/code\u003e 构造函数。\n通过为他提供参数, 它能用于创建对象。\n只能提供\u003cstrong\u003e具名参数\u003c/strong\u003e给默认的构造函数。\u003c/p\u003e\n\u003cp\u003e如果你考虑到上面的例子, 你会看到所有提供给 \u003ccode\u003e.new\u003c/code\u003e 方法的参数都是按名字定义的:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ename =\u0026gt; \u0026lsquo;John\u0026rsquo;\u003c/li\u003e\n\u003cli\u003eage     =\u0026gt; 23\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e假如我不想在每次创建新对象的时候为每个属性提供一个名字呢?\n那么我需要创建另外一个接收\u003cstrong\u003e位置参数\u003c/strong\u003e的构造函数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.sex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.nationality\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# 重写默认构造函数的新构造函数\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$age\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sex\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nationality\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$age\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$sex\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$nationality\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAmerican\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e能接收位置参数的构造函数需要按上面那样定义。\u003c/p\u003e\n\u003ch3 id=\"方法\"\u003e方法\u003c/h3\u003e\n\u003cp\u003e　\u003c/p\u003e\n\u003ch4 id=\"介绍-1\"\u003e介绍\u003c/h4\u003e\n\u003cp\u003e　\n方法是对象的子例程。\n像子例程一样, 方法是一种打包一组功能的手段, 它们接收\u003cstrong\u003e参数\u003c/strong\u003e, 拥有\u003cstrong\u003e签名\u003c/strong\u003e并可以被定义为 \u003cstrong\u003emulti\u003c/strong\u003e。\n方法是使用关键字 \u003ccode\u003emethod\u003c/code\u003e 来定义的。\u003c/p\u003e\n\u003cp\u003e正常情况下, 方法被要求在对象的属性身上执行一些动作。这强制了封装的概念。对象的属性只能在对象里面使用方法来操作。在对象外面, 只能和对象的方法交互, 并且不能访问它的属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.sex\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.nationality\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.eligible\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eassess-eligibility\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nv\"\u003e$!eligible\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eNo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nv\"\u003e$!eligible\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eYes\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e, \u003cspan class=\"s\"\u003esex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003enationality\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAmerican\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eassess-eligibility\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeligible\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一旦方法定义在类中, 它们就能在对象身上使用\u003cstrong\u003e点记号\u003c/strong\u003e来调用:\n\u003ccode\u003eobject.method\u003c/code\u003e 或像上面的例子那样: \u003ccode\u003e$john.assess-eligibility\u003c/code\u003e。\n在方法的定义中, 如果我们需要引用对象本身以调用另一个方法, 则使用 \u003ccode\u003eself\u003c/code\u003e 关键字。\n在方法的定义中, 如果我们需要引用属性, 则使用 \u003ccode\u003e!\u003c/code\u003e, 即使属性是使用 \u003ccode\u003e.\u003c/code\u003e 定义的。\n理由是 \u003ccode\u003e.\u003c/code\u003e twigil 做的就是使用 \u003ccode\u003e!\u003c/code\u003e 声明一个属性并自动创建存取器。\u003c/p\u003e\n\u003cp\u003e在上面的例子中, \u003ccode\u003eif self.age \u0026lt; 21\u003c/code\u003e 和  \u003ccode\u003eif $!age \u0026lt; 21\u003c/code\u003e 会有同样的效果, 尽管它们从技术上来讲是不同的:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eself.age\u003c/code\u003e 调用了 \u003ccode\u003e.age\u003c/code\u003e 方法(存取器)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e二选一, 还能写成 \u003ccode\u003e$.age\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e$!age\u003c/code\u003e 是直接调用那个变量\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"私有方法\"\u003e私有方法\u003c/h4\u003e\n\u003cp\u003e　\n正常的方法能从类的外面在对象身上调用。\n\u003cstrong\u003e私有方法\u003c/strong\u003e是只能从类的内部调用的方法。\u003c/p\u003e\n\u003cp\u003e一个可能的使用情况是一个方法调用另外一个执行特定动作的方法。连接外部世界的方法是公共的而被引用的那个方法应该保持私有。我们不想让用户直接调用它, 所以我们把它声明为私有的。\u003c/p\u003e\n\u003cp\u003e私有方法的声明需要在方法的名字前使用 \u003ccode\u003e!\u003c/code\u003e twigil。\n私有方法是使用 \u003ccode\u003e!\u003c/code\u003e 而非 \u003ccode\u003e.\u003c/code\u003e 调用的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003e!iamprivate\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# code goes in here\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eiampublic\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nf\"\u003eiamprivate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# do additional things\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"类属性\"\u003e类属性\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003e类属性\u003c/strong\u003e是属于类自身而非类的对象的属性。\n它们能在定义期间初始化。\n类属性是使用 \u003ccode\u003emy\u003c/code\u003e 关键字而非 \u003ccode\u003ehas\u003c/code\u003e 关键字声明的。\n它们是在类自己身上而非它的对象身上调用的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.counter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecounter\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecounter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"访问类型\"\u003e访问类型\u003c/h3\u003e\n\u003cp\u003e　\n到现在为止我们看到的所以例子都使用存取器来从对象属性中获取信息。\n假如我们需要修改属性的值呢?\n我们需要使用下面的 \u003ccode\u003eis rw\u003c/code\u003e 关键字把它标记为 \u003ccode\u003eread/write\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003erw\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eage\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认地, 所有属性都声明为只读, 但是你可以显式地使用 \u003ccode\u003eis readonly\u003c/code\u003e 来声明。\u003c/p\u003e\n\u003ch3 id=\"继承\"\u003e继承\u003c/h3\u003e\n\u003cp\u003e　\u003c/p\u003e\n\u003ch4 id=\"介绍-2\"\u003e介绍\u003c/h4\u003e\n\u003cp\u003e　\n\u003cstrong\u003e继承\u003c/strong\u003e是面向对象编程的另一个概念。\n当定义类的时候, 很快我们会意思到很多属性/方法在很多类中是共有的。\n我们应该重复代码吗?\u003c/p\u003e\n\u003cp\u003e不! 我们应该使用\u003cstrong\u003e继承\u003c/strong\u003e。\n假设我们想定义两个类, 一个类是 Human, 一个类是 Employees。\nHuman 拥有两个属性: name 和 age。\u003c/p\u003e\n\u003cp\u003eEmployees 拥有 4  个属性: name, age, company 和 salary。\n尝试按下面定义类:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eEmployee\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.company\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.salary\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e虽然上面的代码技术上是正确的, 但是概念上差。\n更好的写法是下面这样:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eEmployee\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.company\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.salary\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eis\u003c/code\u003e 关键字定义了继承。\n按面向对象的说法, Employee 是 Human 的\u003cstrong\u003e孩子\u003c/strong\u003e, 而 Human 是 Employee 的\u003cstrong\u003e父亲\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e所有的子类继承了父类的属性和方法, 所以没有必要重新它们。\u003c/p\u003e\n\u003ch4 id=\"重写\"\u003e重写\u003c/h4\u003e\n\u003cp\u003e　\n类从它们的父类中继承所有的属性和方法。\n有些情况下, 我们需要让子类中的方法表现得和继承的方法不一样。\n为了做到这, 我们在子类中重新定义方法。\u003c/p\u003e\n\u003cp\u003e这个概念就叫做\u003cstrong\u003e重写\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e在下面的例子中, \u003ccode\u003eintroduce-yourself\u003c/code\u003e 方法被 Employee 类继承。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHi 我是人类, 我的名字是 \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eEmployee\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.company\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.salary\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e,\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEmployee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJane\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e, \u003cspan class=\"s\"\u003ecompany\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAcme\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e, \u003cspan class=\"s\"\u003esalary\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e4000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e重写工作如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHi 我是人类, 我的名字是 \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eEmployee\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.company\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.salary\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHi 我是一名员工, 我的名字是 \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e 我工作在: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecomapny\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e,\u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e,\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEmployee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJane\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e,\u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e,\u003cspan class=\"s\"\u003ecompany\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAcme\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e,\u003cspan class=\"s\"\u003esalary\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e4000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据对象所属的类, 会调用正确的方法。\u003c/p\u003e\n\u003ch4 id=\"submethods\"\u003eSubmethods\u003c/h4\u003e\n\u003cp\u003e　\n\u003cstrong\u003eSubmethods\u003c/strong\u003e 是一种子类继承不到的方法。\u003c/p\u003e\n\u003cp\u003e它们只能从所声明的类中访问。\n它们使用 \u003ccode\u003esubmethod\u003c/code\u003e 关键字定义。\u003c/p\u003e\n\u003ch3 id=\"多重继承\"\u003e多重继承\u003c/h3\u003e\n\u003cp\u003e　\n在 Raku 中允许多重继承。一个类可以继承自多个其它的类。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ecombo-chart\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eline-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecombo-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e],\u003c/span\u003e\n                                         \u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e实际的销售: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e预测的销售: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e实际 vs 预测:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e实际的销售:\n[10 9 11 8 7 10]\n预测的销售:\n[9 8 10 7 6 9]\n实际 vs 预测:\n[10 9 11 8 7 10]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecombo-chart\u003c/code\u003e 类应该能持有两个序列, 一个是绘制条形图的实际值, 另一个是绘制折线图的预测值。\u003c/p\u003e\n\u003cp\u003e这就是我们为什么把它定义为 \u003ccode\u003eline-chart\u003c/code\u003e 和 \u003ccode\u003ebar-chart\u003c/code\u003e 的孩子的原因。\u003c/p\u003e\n\u003cp\u003e你应该注意到了, 在 \u003ccode\u003ecombo-chart\u003c/code\u003e 身上调用 \u003ccode\u003eplot\u003c/code\u003e 方法并没有产生所要求的结果。它只绘制了一个序列。\u003c/p\u003e\n\u003cp\u003e发生了什么事?\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecombo-chart\u003c/code\u003e 继承自 \u003ccode\u003eline-chart\u003c/code\u003e 和 \u003ccode\u003ebar-chart\u003c/code\u003e, 它们都有一个叫做 \u003ccode\u003eplot\u003c/code\u003e 的方法。当我们在 \u003ccode\u003ecombo-chart\u003c/code\u003e 身上调用那个方法时, Raku 内部会尝试通过调用其所继承的方法之一来解决冲突。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e纠正\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e为了表现得正确, 我们应该在 \u003ccode\u003ecombo-chart\u003c/code\u003e 中重写 \u003ccode\u003eplot\u003c/code\u003e 方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ecombo-chart\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eline-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecombo-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e],\u003c/span\u003e\n                                         \u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e实际的销售: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e预测的销售: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e实际 vs 预测:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e实际的销售:\n[10 9 11 8 7 10]\n预测的销售:\n[9 8 10 7 6 9]\n实际 vs 预测:\n[10 9 11 8 7 10]\n[9 8 10 7 6 9]\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"roles\"\u003eRoles\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003eRoles\u003c/strong\u003e 在它们是属性和方法的集合这个意义上和类有点类似。\nRoles 使用关键字 \u003ccode\u003erole\u003c/code\u003e 声明, 而想实现该 role 的类可以使用 \u003ccode\u003edoes\u003c/code\u003e 关键字。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e使用 roles 重写多重继承的例子\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ecombo-chart\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eline-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecombo-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e],\u003c/span\u003e\n                                         \u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e实际的销售: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e预测的销售: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e实际 vs 预测:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行上面的脚本你会看到结果是一样的。\u003c/p\u003e\n\u003cp\u003e现在你问问自己, 如果 roles 表现得像类的话那么它们的用途是什么呢?\u003c/p\u003e\n\u003cp\u003e要回答你的问题, 修改第一个用于展示多重继承的脚本,  这个脚本中我们忘记重写 \u003ccode\u003eplot\u003c/code\u003e 方法了。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.bar-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eplot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.line-values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ecombo-chart\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003ebar-chart\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003eline-chart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ebar-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eline-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ecombo-chart\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ebar-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e,\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e],\u003c/span\u003e\n                                         \u003cspan class=\"s\"\u003eline-values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e,\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eActual sales:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eForecast sales:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$forecast-sales\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eActual vs Forecast:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$actual-vs-forecast\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eplot\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e===SORRY!===\nMethod 'plot' must be resolved by class combo-chart because it exists in multiple roles (line-chart, bar-chart)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e如果多个 roles 被应用到同一个类中, 会出现冲突并抛出一个编译时错误。\n这是比多重继承更安全的方法, 其中冲突不被认为是错误并且简单地在运行时解决。\nRoles 会提醒你有冲突。\u003c/p\u003e\n\u003ch3 id=\"内省\"\u003e内省\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003e内省\u003c/strong\u003e是获取诸如对象的类型、属性或方法等对象属性的信息的过程。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.age\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHi i am a human being, my name is \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eEmployee\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.company\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.salary\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eintroduce-yourself\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHi i am a employee, my name is \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e and I work at: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecompany\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e,\u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e23\u003c/span\u003e,\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eEmployee\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJane\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e,\u003cspan class=\"s\"\u003eage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e,\u003cspan class=\"s\"\u003ecompany\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAcme\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e,\u003cspan class=\"s\"\u003esalary\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e4000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eWHAT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eWHAT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eattributes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eattributes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$john\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003emethods\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003emethods\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eparents\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$jane\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003eHuman\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJane is a Human\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e内省使用了:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e.WHAT\u003c/code\u003e  返回已经创建的对象所属的类。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.^attributes\u003c/code\u003e 返回一个包含该对象所有属性的列表。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.^mtethods\u003c/code\u003e 返回能在该对象身上调用的所有方法。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.^parents\u003c/code\u003e 返回该对象所属类的所有父类。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e~~\u003c/code\u003e 叫做智能匹配操作符。如果对象是从它所进行比较的类或任何它继承的类创建的, 则计算为 True。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"第十章-异常处理\"\u003e第十章 异常处理\u003c/h2\u003e\n\u003ch3 id=\"捕获异常\"\u003e捕获异常\u003c/h3\u003e\n\u003cp\u003e　　\n\u003cstrong\u003e异常\u003c/strong\u003e是当某些东西出错时发生在运行时的特殊行为。\u003c/p\u003e\n\u003cp\u003e我们说异常被抛出。考虑下面这个运行正确的脚本:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eJoanna\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHello \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHow are you doing today?\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eHello Joanna\nHow are you doing today?\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e现在让这个脚本抛出异常:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e123\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHello \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHow are you doing today?\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eType check failed in assignment to $name; expected Str but got Int\n   in block \u0026lt;unit\u0026gt; at exceptions.pl6:2\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e你应该看到当错误出现时(在这个例子中把数组赋值给字符串变量)程序会停止并且其它行的代码不会被执行, 即使它们是正确的。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e异常处理\u003c/strong\u003e是捕获已经抛出的异常的过程以使脚本能继续工作。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e123\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHello \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eCATCH\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eCan you tell us your name again, we couldn\u0026#39;t find it in the register.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHow are you doing today?\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eCan you tell us your name again, we couldn't find it in the register.\nHow are you doing today?\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e异常处理是使用 \u003ccode\u003etry-catch\u003c/code\u003e block 完成的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# code goes in here\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 如果有东西出错, 脚本会进入到下面的 CATCH block 中\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 如果什么错误也没有, 那么 CATCH block 会被忽略\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eCATCH\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n            \u003cspan class=\"c1\"\u003e# 只有抛出异常时, 这儿的代码才会被求值\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eCATCH\u003c/code\u003e block 能像定义 \u003ccode\u003egiven\u003c/code\u003e block 那样定义。这意味着我们能捕获并处理各种不同类型的异常。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#code goes in here\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#if anything goes wrong, the script will enter the below CATCH block\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#if nothing goes wrong the CATCH block will be ignored\u003c/span\u003e\n    \u003cspan class=\"k\"\u003eCATCH\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::AdHoc\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e#do something if an exception of type X::AdHoc is thrown }\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::IO\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e#do something if an exception of type X::IO is thrown }\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::OS\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e#do something if an exception of type X::OS is thrown }\u003c/span\u003e\n        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"c1\"\u003e#do something if an exception is thrown and doesn\u0026#39;t belong to the above types }\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"抛出异常\"\u003e抛出异常\u003c/h3\u003e\n\u003cp\u003e　\n和捕获异常相比, Raku 也允许你显式地抛出异常。\n有两种类型的异常可以抛出:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ead-hoc 异常\u003c/li\u003e\n\u003cli\u003e类型异常\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003ead-hoc\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$age\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eError !\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003etyped\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$age\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"ne\"\u003eX::AdHoc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eError !\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ethrow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用 \u003ccode\u003edie\u003c/code\u003e 子例程后面跟着异常消息来抛出 Ad-hoc 异常。\u003c/p\u003e\n\u003cp\u003eTyped 异常是对象, 因此上面的例子中使用了 \u003ccode\u003e.new()\u003c/code\u003e 构造函数。\u003c/p\u003e\n\u003cp\u003e所有类型化的异常都是从类 \u003ccode\u003eX\u003c/code\u003e 开始, 下面是一些例子:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eX::AdHoc\u003c/code\u003e 是最简单的异常类型\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX::IO\u003c/code\u003e 跟 IO 错误有关。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX::OS\u003c/code\u003e 跟 OS 错误有关。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eX::Str::Numeric\u003c/code\u003e 跟把字符串强制转换为数字有关。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e查看异常类型和相关方法的完整列表请到  \u003ca href=\"http://doc.raku.org/type.html\"\u003ehttp://doc.raku.org/type.html\u003c/a\u003e 并导航到以 X 开头的类型。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"第十一章-正则表达式\"\u003e第十一章 正则表达式\u003c/h2\u003e\n\u003cp\u003e正则表达式, 或 \u003cstrong\u003eregex\u003c/strong\u003e 是一个用于模式匹配的字符序列。\u003c/p\u003e\n\u003cp\u003e理解它最简单的一种方式是把它看作模式。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eenlightenment\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e light \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eenlightenment contains the word light\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个例子中, 智能匹配操作符 \u003ccode\u003e~~\u003c/code\u003e 用于检查一个字符串(enlightenment)是否包含一个单词(light)。\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;Enlightenment\u0026rdquo;  与正则表达式 \u003ccode\u003em/ light /\u003c/code\u003e 匹配。\u003c/p\u003e\n\u003ch3 id=\"regex-定义\"\u003eRegex 定义\u003c/h3\u003e\n\u003cp\u003e　\n正则表达式可以按如下方式定义:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e/light/\u003c/li\u003e\n\u003cli\u003em/light/\u003c/li\u003e\n\u003cli\u003erx/light/\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e除非显式地指定, 否则空白是无关紧要的, \u003ccode\u003em/light/\u003c/code\u003e 和 \u003ccode\u003em/ light /\u003c/code\u003e 是相同的。\u003c/p\u003e\n\u003ch3 id=\"匹配字符\"\u003e匹配字符\u003c/h3\u003e\n\u003cp\u003e　\n字母数字字符和下划线 \u003ccode\u003e_\u003c/code\u003e 在正则表达式中是按原样写出的。\u003c/p\u003e\n\u003cp\u003e所有其它字符必须使用反斜线或用引号围起来以转义。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e反斜线\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eTemperature: 13\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \\\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe string provided contains a colon :\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e单引号\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAge = 13\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe string provided contains an equal character = \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e双引号\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ename@company.com\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e@\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThis is a valid email address because it contains an @ character\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"匹配字符类\"\u003e匹配字符类\u003c/h3\u003e\n\u003cp\u003e　\n就像之前章节看到的, 匹配字符类很方便。\u003c/p\u003e\n\u003cp\u003e话虽这么说，更系统的方法是使用 Unicode 属性。\u003c/p\u003e\n\u003cp\u003eUnicode 属性闭合在 \u003ccode\u003e\u0026lt;: \u0026gt;\u003c/code\u003e 中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eJohn123\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eContains a number\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eDoesn\u0026#39;t contain a number\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eJohn-Doe\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eLu\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eContains an uppercase letter\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eDoesn\u0026#39;t contain an upper case letter\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eJohn-Doe\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003ePd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eContains a dash\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eDoesn\u0026#39;t contain a dash\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"通配符\"\u003e通配符\u003c/h3\u003e\n\u003cp\u003e通配符也可以用在正则表达式中。\u003c/p\u003e\n\u003cp\u003e点 \u003ccode\u003e.\u003c/code\u003e 意味着任何单个字符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003ec \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea2c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003ec \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eac\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003ec \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"量词\"\u003e量词\u003c/h3\u003e\n\u003cp\u003e　\n量词在字符后面用于指定我们期望匹配它前面的东西的次数。\u003c/p\u003e\n\u003cp\u003e问号 \u003ccode\u003e?\u003c/code\u003e 意思是 0 或 1 次。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eac\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003ec \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003ec \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e星号 \u003ccode\u003e*\u003c/code\u003e 意思是 0 或多次。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003ez \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003ez \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaaaaaaaaaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003ez / \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e else \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003eif \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e~~\u003c/span\u003e\u003cspan class=\"sr\"\u003e m/ a\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003ez / \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e else \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e+\u003c/code\u003e 意思是至少匹配 1 次。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003ez \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003ez \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaaaaaaaaaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003ez \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003ez / \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMatch\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e else \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo Match\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"匹配结果\"\u003e匹配结果\u003c/h3\u003e\n\u003cp\u003e　\n当匹配字符串的正则表达式成功时, 匹配结果被存储在一个特殊的变量 \u003ccode\u003e$/\u003c/code\u003e 中。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e脚本\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eRakudo is a Raku compiler\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003es\u003c/span\u003e\u003cspan class=\"sr\"\u003e Raku\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe match is: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe string before the match is: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eprematch\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe string after the match is: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epostmatch\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe matching string starts at position: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe matching string ends at position: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eto\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e输出\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"nb\"\u003ematch\u003c/span\u003e \u003cspan class=\"n\"\u003eis:\u003c/span\u003e \u003cspan class=\"nb\"\u003eRaku\u003c/span\u003e\n\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"nb\"\u003ematch\u003c/span\u003e \u003cspan class=\"n\"\u003eis:\u003c/span\u003e \u003cspan class=\"n\"\u003eRakudo\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003ea\u003c/span\u003e\n\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"nb\"\u003eafter\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"nb\"\u003ematch\u003c/span\u003e \u003cspan class=\"n\"\u003eis:\u003c/span\u003e  \u003cspan class=\"nb\"\u003ecompiler\u003c/span\u003e\n\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003ematching\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003estarts\u003c/span\u003e \u003cspan class=\"nb\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003eposition:\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\n\u003cspan class=\"n\"\u003eThe\u003c/span\u003e \u003cspan class=\"n\"\u003ematching\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"n\"\u003eends\u003c/span\u003e \u003cspan class=\"nb\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003eposition:\u003c/span\u003e \u003cspan class=\"mi\"\u003e18\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$/\u003c/code\u003e 返回一个 \u003cstrong\u003eMatch Object\u003c/strong\u003e(匹配 regex 的字符串)。\u003c/p\u003e\n\u003cp\u003e下面的方法可以在 \u003cstrong\u003eMatch Object\u003c/strong\u003e 身上调用:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e.prematch\u003c/code\u003e 返回匹配前面的字符串\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.postmatch\u003c/code\u003e 返回匹配后面的字符串\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.from\u003c/code\u003e 返回匹配的开始位置\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.to\u003c/code\u003e 返回匹配的结束位置\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003e默认地空白在 regex 中是无关紧要的。\n如果我们想在 regex 中包含空白, 我们必须显式地这样做。\nregex \u003ccode\u003em/:s Raku/\u003c/code\u003e 中的 \u003ccode\u003e:s\u003c/code\u003e 强制考虑空白并且不会被删除。\n二选一, 我们能把 regex 写为 \u003ccode\u003em/Perl\\s6/\u003c/code\u003e 并使用 \u003ccode\u003e\\s\u003c/code\u003e 占位符。\n如果 regex 中包含的空白不止一个, 使用 \u003ccode\u003e:s\u003c/code\u003e 比使用 \u003ccode\u003e\\s\u003c/code\u003e 更高效。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"例子\"\u003e例子\u003c/h3\u003e\n\u003cp\u003e　\n让我们检查一个邮件是否合法。\u003c/p\u003e\n\u003cp\u003e我们假设一个合法的电子邮件地址的形式如下:\u003c/p\u003e\n\u003cp\u003efirst name [dot] last name [at] company [dot] (com/org/net)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这个例子中用于电子邮件检测的 regex 不是很准确。它的核心意图是用来解释 Raku 中的 regex 的功能的。 不要在生产中原样使用它。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e脚本\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ejohn.doe@raku.org\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eL\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\\\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eL\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\\\u003c/span\u003e\u003cspan class=\"nv\"\u003e@\u0026lt;:L+:N\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\\\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eL\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$email\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e is a valid email\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThis is not a valid email\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e输出\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ejohn.doe@raku.org is a valid email\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;:L\u0026gt;\u003c/code\u003e 匹配单个字符\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;:L\u0026gt;+\u003c/code\u003e 匹配单个字符或更多字符\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\\.\u003c/code\u003e 匹配单个点号字符\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\\@\u003c/code\u003e 匹配单个  [at] 符号\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;:L+:N\u0026gt;\u003c/code\u003e 匹配一个字母和数字\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;:L+:N\u0026gt;+\u003c/code\u003e 匹配一个或多个字母和数字\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e其中的 regex 可以分解成如下:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003efirst name\u003c/strong\u003e \u003ccode\u003e\u0026lt;:L\u0026gt;+\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e[dot]\u003c/strong\u003e \u003ccode\u003e\\.\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003elast name\u003c/strong\u003e \u003ccode\u003e\u0026lt;:L\u0026gt;+\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e[at]\u003c/strong\u003e \u003ccode\u003e\\@\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ecompany name\u003c/strong\u003e \u003ccode\u003e\u0026lt;:L+:N\u0026gt;+\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e[dot]\u003c/strong\u003e \u003ccode\u003e\\.\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ecom/org/net\u003c/strong\u003e \u003ccode\u003e\u0026lt;:L\u0026gt;+\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e可选地, 一个 regex 可以被分解成多个具名 regexes。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$email\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ejohn.doe@raku.org\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003emany-letters\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eL\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003edot\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \\\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003eat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \\\u003c/span\u003e\u003cspan class=\"nv\"\u003e@\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003emany-letters-numbers\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eL\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$email\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003emany-letters\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edot\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003emany-letters\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eat\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003emany-letters-numbers\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edot\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003emany-letters\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e is a valid email\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThis is not a valid email\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e具名 regex 是使用 \u003ccode\u003emy regex regex-name { regex definition }\u003c/code\u003e 定义的。\u003c/p\u003e\n\u003cp\u003e具名 regex 可以使用 \u003ccode\u003e\u0026lt;regex-name\u0026gt;\u003c/code\u003e 来调用。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e更多关于 regexes 的东西, 查看 \u003ca href=\"http://doc.raku.org/language/regexes\"\u003ehttp://doc.raku.org/language/regexes\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"第十二章-raku-模块\"\u003e第十二章 Raku 模块\u003c/h2\u003e\n\u003cp\u003eRakudo 自带了 Panda 这个模块安装工具。\u003c/p\u003e\n\u003cp\u003e要安装指定的模块, 在终端中键入如下命令:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ezef install \u0026quot;module name\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\u003cblockquote\u003e\n\u003cp\u003eRaku 的模块目录可以在  \u003ca href=\"http://modules.raku.org/\"\u003ehttp://modules.raku.org/\u003c/a\u003e 中找到。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"使用模块\"\u003e使用模块\u003c/h3\u003e\n\u003cp\u003e　\nMD5 是一个关于密码的散列函数，它产生一个128位的散列值。\nMD5 有多种加密存储在数据库中的口令的应用程序。当新用户注册时，其证书并不存储为纯文本，而是散列。这样做的理由是，如果该数据库被破解，攻击者将不能够知道口令是什么。\u003c/p\u003e\n\u003cp\u003e比方说，你需要一个生成密码的MD5哈希以存储在数据库中备用的脚本。\u003c/p\u003e\n\u003cp\u003e幸运的是，Raku 已经有一个能实现MD5算法的模块。我们安装下:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ezef install Digest::MD5\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e现在运行下面的脚本:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eDigest::MD5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$password\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003epassword123\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hashed-password\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDigest::MD5\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emd5_hex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$password\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hashed-password\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了运行创建哈希的 \u003ccode\u003emd5_hex()\u003c/code\u003e 函数, 我们需要加载需要的模块。\u003ccode\u003euse\u003c/code\u003e 关键字用于加载模块。\u003c/p\u003e\n\u003ch2 id=\"第十三章-unicode\"\u003e第十三章 Unicode\u003c/h2\u003e\n\u003cp\u003eUnicode 是编码并表现文本的标准, 它满足了世界上的大部分系统。\u003c/p\u003e\n\u003cp\u003eUTF-8 是能够以Unicode编码所有可能的字符或代码点的字符编码。\u003c/p\u003e\n\u003cp\u003e字符的定义是通过:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e字素\u003c/strong\u003e: 可见的表示\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e代码点\u003c/strong\u003e: 赋值给字符的数字\u003c/p\u003e\n\u003ch3 id=\"使用-unicode\"\u003e使用 Unicode\u003c/h3\u003e\n\u003cp\u003e　\n\u003cstrong\u003e让我们看一下使用 Unicode 能输出什么\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x\u003c/span\u003e\u003cspan class=\"mh\"\u003e0061\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\c\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003eLATIN SMALL LETTER A\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026#34;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面 3 行展示了构建字符的不同方法:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e直接写出字符(字素)\u003c/li\u003e\n\u003cli\u003e使用 \u003ccode\u003e\\x\u003c/code\u003e 和代码点\u003c/li\u003e\n\u003cli\u003e使用 \u003ccode\u003e\\c\u003c/code\u003e 和代码点名字\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e现在我们来输出笑脸\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e☺\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x\u003c/span\u003e\u003cspan class=\"mh\"\u003e263a\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\c\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003eWHITE SMILING FACE\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026#34;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e组合两个代码点的另外一个例子\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eá\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x\u003c/span\u003e\u003cspan class=\"mh\"\u003e00e1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x\u003c/span\u003e\u003cspan class=\"mh\"\u003e0061\u003c/span\u003e\u003cspan class=\"se\"\u003e\\x\u003c/span\u003e\u003cspan class=\"mh\"\u003e0301\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\c\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003eLATIN SMALL LETTER A WITH ACUTE\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026#34;;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字母 \u003ccode\u003eá\u003c/code\u003e 可以被写为:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用它的唯一代码点 \u003ccode\u003e\\x00e1\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e或作为 \u003ccode\u003ea\u003c/code\u003e 和 重音符号 \u003ccode\u003e\\x0061\\x0301\u003c/code\u003e 代码点的组合\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e有些方法可以使用\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eá\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eNFC\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eá\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eNFD\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eá\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euniname\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e输出\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eNFC:0x\u0026lt;00e1\u0026gt;\nNFD:0x\u0026lt;0061 0301\u0026gt;\nLATIN SMALL LETTER A WITH ACUTE\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eNFC\u003c/code\u003e 返回唯一的代码点。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eNFD\u003c/code\u003e 分解(decompose)那个字符并返回每部分的代码点。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003euniname\u003c/code\u003e 返回代码点的名字。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUnicode 字符可以用作标识符\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$Δ\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$Δ\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$Δ\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"第十四章-并行并发和异步\"\u003e第十四章 并行、并发和异步\u003c/h2\u003e\n\u003cp\u003e在正常情况下, 程序中的所有任务都是相继地运行的。\u003c/p\u003e\n\u003cp\u003e这可能不是个事儿除非你正尝试去做的东西需要耗费很多时间。\u003c/p\u003e\n\u003cp\u003e很自然地说, Raku 拥有能让你并行地运行东西的功能。\u003c/p\u003e\n\u003cp\u003e在这个阶段, 注意并行可以是下面两个东西之一是很重要的:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e任务并行化\u003c/strong\u003e: 两个(或更多)独立的表达式并行地运行。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e数据并行化\u003c/strong\u003e: 单个表达式并行地迭代列表中的元素。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e让我们从后者开始。\u003c/p\u003e\n\u003ch3 id=\"数据并行化\"\u003e数据并行化　\u003c/h3\u003e\n\u003cp\u003e　\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e50000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e#Array population\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e   \u003cspan class=\"c1\"\u003e#call is-prime for each array element\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e#Output the time it took for the script to complete\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e考虑上面的例子\u003c/strong\u003e\n　\n我们只做一个操作 \u003ccode\u003e@array.map({is-prime $_})\u003c/code\u003e。\u003ccode\u003eis-prime\u003c/code\u003e 子例程相继被每个数组元素所调用:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eis-prime @array[0] \u003c/code\u003e 然后是 \u003ccode\u003eis-prime @array[1]\u003c/code\u003e 然后是 \u003ccode\u003eis-prime @array[2]\u003c/code\u003e 等等。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e幸运的是, 我们能同时在多个数组元素身上调用 \u003ccode\u003eis-prime\u003c/code\u003e 函数:\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e50000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e#Array population\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erace\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#call is-prime for each array element\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                             \u003cspan class=\"c1\"\u003e#Output the time it took to complete\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意表达式中使用的 \u003ccode\u003erace\u003c/code\u003e。这个方法会使数组元素能够并行地迭代。\u003c/p\u003e\n\u003cp\u003e运行两个例子(使用和不使用 \u003ccode\u003erace\u003c/code\u003e)运行之后, 比较两个脚本运行结束所花费的时间。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003erace\u003c/code\u003e 不会保存元素的顺序。如果你想那样做, 使用 \u003ccode\u003ehyper\u003c/code\u003e 代替。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003erace\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erace\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@result\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003ehyper\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehyper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e@result\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你俩个脚本都运行了, 你应该注意到一个排序了一个没有排序。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"任务并行化\"\u003e任务并行化\u003c/h3\u003e\n\u003cp\u003e　\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e49999\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e50001\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e考虑上面的例子\u003c/strong\u003e:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e我们定义了 2 个数组\u003c/li\u003e\n\u003cli\u003e对每个数组应用不同的操作并保存结果\u003c/li\u003e\n\u003cli\u003e并检查两个结果是否相同\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e该脚本等到 \u003ccode\u003e@array1.map( {is-prime($_ +1)} )\u003c/code\u003e 完成然后计算 \u003ccode\u003e@array1.map( {is-prime($_ +1)} )\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e应用到每个数组的俩个操作彼此间没有依赖。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e为什么不并行地执行呢?\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e49999\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e50001\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$promise1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estart\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$promise2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estart\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eawait\u003c/span\u003e \u003cspan class=\"nv\"\u003e$promise1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eawait\u003c/span\u003e \u003cspan class=\"nv\"\u003e$promise2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result1\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e@result2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003e解释\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003estart\u003c/code\u003e 方法计算它后面的代码并返回\u003cstrong\u003epromise 类型的对象\u003c/strong\u003e或\u003cstrong\u003epromise\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e如果代码被正确地求值, 那么 promise 会被\u003cstrong\u003e保留\u003c/strong\u003e(kept)。\u003c/p\u003e\n\u003cp\u003e如果代码抛出异常, 那么 promise 会被\u003cstrong\u003e破坏\u003c/strong\u003e(broken)。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eawait\u003c/code\u003e 方法等待一个 \u003cstrong\u003epromise\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e如果那个 promise 是被\u003cstrong\u003e保留\u003c/strong\u003e的, await 会获取到返回值。\u003c/p\u003e\n\u003cp\u003e如果那个 promise 是被\u003cstrong\u003e破坏\u003c/strong\u003e的, await 会获取到抛出异常。\u003c/p\u003e\n\u003cp\u003e检查每个脚本完成所花费的时间。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e并行总是添加线程开销。如果开销抵消不了运算速度的增长，那么该脚本会显得较慢。\n这就是为什么，在很简单的脚本中使用 \u003cstrong\u003erace\u003c/strong\u003e，\u003cstrong\u003ehyper\u003c/strong\u003e，\u003cstrong\u003estart\u003c/strong\u003e 和 \u003cstrong\u003eawait\u003c/strong\u003e 实际上可以使它们慢下来。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"并发和异步\"\u003e并发和异步\u003c/h3\u003e\n\u003cp\u003e　\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e关于并发和异步编程的更多信息, 请查看  \u003ca href=\"http://doc.raku.org/language/concurrency\"\u003ehttp://doc.raku.org/language/concurrency\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"第十五章-社区\"\u003e第十五章 社区\u003c/h2\u003e\n\u003cp\u003e很多讨论发生在 \u003ca href=\"irc://irc.freenode.net/#raku\"\u003e#raku\u003c/a\u003e IRC 频道中。你可以到 \u003ca href=\"http://raku.org/community/irc\"\u003ehttp://raku.org/community/irc\u003c/a\u003e 进行任何询问。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://pl6anet.org/\"\u003ehttp://pl6anet.org/\u003c/a\u003e 是一个 Raku 博客聚合器。\u003c/p\u003e\n","text":"第八章 函数式编程 在本章中，我们将看看一些有利于函数式编程的功能。\n函数是一等公民 函数/子例程是一等公民:\n 它们能作为参数传递 它们能从另外一个函数中返回 它们能被赋值给变量  map 函数是用来说明这个概念的极好例子。map 是高阶函数, 它接收另外一个函数作为参数。\n脚本\nmy @array = \u0026lt;1 2 3 4 5\u0026gt;; sub squared($x) { $x ** 2 } say map(\u0026amp;squared, @array); 输出\n(1 4 9 16 25) 解释\n我们定义了一个叫做 squared 的子例程, 它接收一个数字并返回该数字的二次幂。下一步, 我们使用 map 这个高阶函数并传递给它两个参数, 一个子例程和一个数组。结果是所有数组元素的平方组成的列表。\n注意当传递子例程作为参数时, 我们需要在子例程的名字前添加一个 \u0026amp; 符号。\n闭包 　在 Raku 中所有的代码对象都是闭包, 这意味着它们能从外部作用域(outer scope)引用词法变量(lexical variables)。\n匿名函数 　匿名函数也叫做 lambda。\n匿名函数没有绑定到标识符(匿名函数没有名字)。\n让我们使用匿名函数重写 map 那个例子。\nmy @array = \u0026lt;1 2 3 4 5\u0026gt;; say map(-\u0026gt; $x {$x ** 2}, @array); 我们没有声明子例程并把它作为参数传递给 map, 而是在里面直接定义了匿名函数。\n匿名函数 -\u0026gt; $x {$x ** 2} 没有句柄并且不能被调用。\n按照 Raku 的说法我们把这个标记叫做 pointy block。\npointy block 也能用于把函数赋值给变量:\nmy $squared = -\u0026gt; $x { $x ** 2 } say $squared(9); 链式调用 　在 Raku 中, 方法可以链接起来, 你不再需要把一个方法的结果作为参数传递给另外一个方法了。\n我们假设你有一个数组。你被要求返回该数组的唯一值, 并且按从大到小的顺序排序。\n你可能会通过写出近似于这样的代码来解决那个问题:\nmy @array = \u0026lt;7 8 9 0 1 2 4 3 5 6 7 8 9 \u0026gt;; my @final-array = reverse(sort(unique(@array))); say @final-array; 首先我们在 @array 身上调用 unique 函数, 然后我们把它的结果作为参数传递给 sort 函数, 再然后我们把结果传递给 reverse 函数。\n和上面的例子相比, Raku 允许链式方法。\n上面的例子可以像下面这样写, 利用方法链的优点:\nmy @array = \u0026lt;7 8 9 0 1 2 4 3 5 6 7 8 9 \u0026gt;; my @final-array = @array.unique.sort.reverse; say @final-array; 你已经看到链式方法看起来有多清爽啦。\nFeed 操作符 　feed 操作符, 在有些函数式编程语言中也叫管道, 然而它是链式方法的一个更好的可视化产出。\n向前流\nmy @array = \u0026lt;7 8 9 0 1 2 4 3 5 6\u0026gt;; @array ==\u0026gt; unique() ==\u0026gt; sort() ==\u0026gt; reverse() ==\u0026gt; my @final-array; say @final-array; 解释\n从 @array 开始, 然后返回一个唯一元素的列表 然后 排序它 然后 反转它 然后 把结果保存到 @final-array 中 就像你看到的那样, 方法的流向是自上而下的。\n向后流\nmy @array = \u0026lt;7 8 9 0 1 2 4 3 5 6\u0026gt;; my @final-array-v2 \u0026lt;== reverse() \u0026lt;== sort() \u0026lt;== unique() \u0026lt;== @array; say @final-array-v2; 解释\n向后流就像向前流一样, 但是是以反转的顺序写的。\n方法的流动方向是自下而上。\nHyper 操作符 　hyper 操作符 ». 会在列表的所有元素身上调用一个方法并返回所有结果的一个列表。\nmy @array = \u0026lt;0 1 2 3 4 5 6 7 8 9 10\u0026gt;; sub is-even($var) { $var %% 2 }; say @array».is-prime; say @array».\u0026amp;is-even; 使用 hyper 操作符我们能调用 Raku 中已经定义过的方法, 例如 is-prime 告诉我们一个数字是否是质数。\n此外我们能定义新的子例程并使用 hyper 操作符调用它们。但是这时我们必须在方法的名字前面加上 \u0026amp; 符号。例如 \u0026amp;is-even。\n这很实用因为它使我们不必写 for 循环就可以迭代每个值。\nJunctions 　junction 是值的逻辑叠加。\n在下面的例子中 1|2|3 是一个 junction。\nmy $var = 2; if $var == 1|2|3 { say \u0026#34;The variable is 1 or 2 or 3\u0026#34; } junctions 的使用常常触发自动线程化; 每个 junction 元素都执行该操作, 并且所有的结果被组合到一个新的 junction 中并返回。\nLazy Lists 　惰性列表是被惰性求值的列表。\n惰性求值延迟表达式的计算直到需要时, 并把结果存储到查询表中以避免重复计算。\n惰性列表的优点包括:\n 通过避免不必要的计算带来的性能提升 构建潜在的无限数据结构的能力 定义控制流的能力  我们使用中缀操作符 ... 来创建惰性列表。\n惰性列表拥有一个初始元素, 一个发生器和一个结束点。\n简单的惰性列表\nmy $lazylist = (1 ... 10); say $lazylist; 初始元素为 1 而结束点为 10。因为没有定义发生器所以默认的发生器为 successor(+1)。换句话说, 这个惰性列表可能返回(如果需要的话)下面的元素 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)。\n无限惰性列表\nmy $lazylist = (1 ... Inf); say $lazylist; 该列表可能返回(如果需要的话) 1 到无穷大之间的任何整数, 换句话说, 可以返回任何整数。\n使用推断发生器创建惰性列表\nmy $lazylist = (0,2 ... 10); say $lazylist; 初始的元素是 0 和 2 而结束点是 10。虽然没有定义发生器, 但是使用了初始元素, Raku 会把生成器推断为 (+2)。\n这个惰性列表可能返回(如果需要的话)下面的元素 (0, 2, 4, 6, 8, 10)。\n使用定义的发生器创建惰性列表\nmy $lazylist = (0, { $_ + 3 } ... 12); say $lazylist; 在这个例子中, 我们在闭合 { } 中显式地定义了一个发生器。\n这个惰性列表可能返回(如果需要的话)下面的元素 (0, 3, 6, 9, 12)。\n 当使用显式的发生器时, 结束点必须是发生器能返回的一个值。\n如果在上面的例子中我们使用的结束点是 10 而非 12, 那么发生器就不会停止。发生器会跳过那个结束点。\n二选一, 你可以使用 0 ...^ * \u0026gt; 10 代替 0 ... 10。你可以把它读作: 从 0 直到第一个大于 10(不包括它)的值\n这不会使发生器停止\nmy $lazylist = (0, { $_ + 3 } ... 10); say $lazylist; 这会使发生器停止\nmy $lazylist = (0, { $_ + 3 } ...^ * \u0026gt; 10); say $lazylist;  第九章 类和对象 在上一章中我们学习了 Raku 中函数式编程的便利性。在这一章中我们将看看 Raku 中的面向对象编程。\n介绍 　面向对象编程是当今广泛使用的范式之一。对象是一组绑定在一起的变量和子例程。\n其中的变量叫做属性, 而子例程被叫做方法。属性定义对象的状态, 而方法定义对象的行为。\n类定义一组对象结构。\n为了理解它们之间的关系, 考虑下面的例子:\n   房间里有 4 个 people objects =\u0026gt; 4 people     这 4 个人是 humans class =\u0026gt; Human   它们有不同的名字,年纪,性别和国籍 attribute =\u0026gt; name,age,sex,nationality    按面向对象的说法, 对象是类的实例。\n考虑下面的脚本:\nclass Human { has $name; has $age; has $sex; has $nationality; } my $john = Human.new(name =\u0026gt; \u0026#39;John\u0026#39;, age =\u0026gt; 23, sex =\u0026gt; \u0026#39;M\u0026#39; nationality =\u0026gt; \u0026#39;American\u0026#39;) say $john;  class 关键字用于定义类。 has 关键字用于定义类的属性。 .new 方法被称之为构造函数。它创建了对象作为类的实例。  在上面的例子中, 新的变量 $john 保存了由 Human.new() 所定义的新 \u0026ldquo;Human\u0026rdquo; 实例。 传递给 .new() 方法的参数用于设置底层对象的属性。 类可以使用 my 来声明一个本地作用域:\nmy class Human { } 封装 　封装是一个面向对象的概念, 它把一组数据和方法捆绑在一块。 对象中的数据(属性)应该是私有的, 换句话说, 只能从对象内部访问它。 为了从对象外部访问对象的属性, 我们使用叫做存取器的方法。 下面两个脚本拥有同样的结果。\n直接访问变量:\nmy $var = 7; say $var; 封装\nmy $var = 7; sub sayvar { $var; } say sayvar; sayvar 是一个存取器。它让我们通过不直接访问这个变量来访问这个变量。 在 Raku 中使用 twigils 使得封装很便利。 Twigils 是第二 符号。它们存在于符号和属性名之间。 有两个 twigils 用在类中:\n ! 用于显式地声明属性是私有的 . 用于为属性自动生成存取器  默认地, 所有的属性都是私有的, 但是总是用 ! twigil 是一个好习惯。 为了和我说的相一致, 我们应该把上面的类重写成下面这样:\nclass Human { has $!name; has $!age; has $!sex; has $!nationality; } my $john = Human.new(name =\u0026gt; \u0026#39;John\u0026#39;, age =\u0026gt; 23, sex =\u0026gt; \u0026#39;M\u0026#39;, nationality =\u0026gt; \u0026#39;American\u0026#39;); say $john; 给脚本追加这样的的语句: say $john.age; 它会返回这样的错误: Method 'age' not found for invocant of class 'Human'。 原因是 $!age 是私有的并且只能用于对象内部。 尝试在对象外部访问它会返回一个错误。 现在用 has $.age 代替 $!age 并看看 say $john.age; 的结果是什么。\n具名参数 vs. 位置参数 　在 Raku 中, 所有的类继承了一个默认的 .new 构造函数。 通过为他提供参数, 它能用于创建对象。 只能提供具名参数给默认的构造函数。\n如果你考虑到上面的例子, 你会看到所有提供给 .new 方法的参数都是按名字定义的:\n name =\u0026gt; \u0026lsquo;John\u0026rsquo; age =\u0026gt; 23  假如我不想在每次创建新对象的时候为每个属性提供一个名字呢? 那么我需要创建另外一个接收位置参数的构造函数。\nclass Human { has $.name; has $.age; has $.sex; has $.nationality; # 重写默认构造函数的新构造函数 method new ($name, $age, $sex, $nationality) { self.bless(:$name, :$age, :$sex, :$nationality); } } my $john = Human.new(\u0026#39;John\u0026#39;, 23, \u0026#39;M\u0026#39;, \u0026#39;American\u0026#39;); say $john; 能接收位置参数的构造函数需要按上面那样定义。\n方法 　介绍 　方法是对象的子例程。 像子例程一样, 方法是一种打包一组功能的手段, 它们接收参数, 拥有签名并可以被定义为 multi。 方法是使用关键字 method 来定义的。\n正常情况下, 方法被要求在对象的属性身上执行一些动作。这强制了封装的概念。对象的属性只能在对象里面使用方法来操作。在对象外面, 只能和对象的方法交互, 并且不能访问它的属性。\nclass Human { has $.name; has $.age; has $.sex; has $.nationality; has $.eligible; method assess-eligibility { if self.age \u0026lt; 21 { $!eligible = \u0026#39;No\u0026#39; } else { $!eligible = \u0026#39;Yes\u0026#39; } } } my $john = Human.new(name =\u0026gt; \u0026#39;John\u0026#39;, age =\u0026gt; 23, sex =\u0026gt; \u0026#39;M\u0026#39;, nationality =\u0026gt; \u0026#39;American\u0026#39;); $john.assess-eligibility; say $john.eligible; 一旦方法定义在类中, 它们就能在对象身上使用点记号来调用: object.method 或像上面的例子那样: $john.assess-eligibility。 在方法的定义中, 如果我们需要引用对象本身以调用另一个方法, 则使用 self 关键字。 在方法的定义中, 如果我们需要引用属性, 则使用 !, 即使属性是使用 . 定义的。 理由是 . twigil 做的就是使用 ! 声明一个属性并自动创建存取器。\n在上面的例子中, if self.age \u0026lt; 21 和 if $!age \u0026lt; 21 会有同样的效果, 尽管它们从技术上来讲是不同的:\n self.age 调用了 .age 方法(存取器)  二选一, 还能写成 $.age\n $!age 是直接调用那个变量  私有方法 　正常的方法能从类的外面在对象身上调用。 私有方法是只能从类的内部调用的方法。\n一个可能的使用情况是一个方法调用另外一个执行特定动作的方法。连接外部世界的方法是公共的而被引用的那个方法应该保持私有。我们不想让用户直接调用它, 所以我们把它声明为私有的。\n私有方法的声明需要在方法的名字前使用 ! twigil。 私有方法是使用 ! 而非 . 调用的。\nmethod !iamprivate { # code goes in here } method iampublic { self!iamprivate; # do additional things } 类属性 　类属性是属于类自身而非类的对象的属性。 它们能在定义期间初始化。 类属性是使用 my 关键字而非 has 关键字声明的。 它们是在类自己身上而非它的对象身上调用的。\nclass Human { has $.name; my $.counter = 0; method new($name) { Human.counter++; self.bless(:$name); } } my $a = Human.new(\u0026#39;a\u0026#39;); my $b = Human.new(\u0026#39;b\u0026#39;); say Human.counter; 访问类型 　到现在为止我们看到的所以例子都使用存取器来从对象属性中获取信息。 假如我们需要修改属性的值呢? 我们需要使用下面的 is rw 关键字把它标记为 read/write。\nclass Human { has $.name; has $.age is rw; } my $john = Human.new(name =\u0026gt; \u0026#39;John\u0026#39;, age =\u0026gt; 21); say $john.age; $john.age = 23; say $john.age; 默认地, 所有属性都声明为只读, 但是你可以显式地使用 is readonly 来声明。\n继承 　介绍 　继承是面向对象编程的另一个概念。 当定义类的时候, 很快我们会意思到很多属性/方法在很多类中是共有的。 我们应该重复代码吗?\n不! 我们应该使用继承。 假设我们想定义两个类, 一个类是 Human, 一个类是 Employees。 Human 拥有两个属性: name 和 age。\nEmployees 拥有 4 个属性: name, age, company 和 salary。 尝试按下面定义类:\nclass Human { has $.name; has $.age; } class Employee { has $.name; has $.age; has $.company; has $.salary; } 虽然上面的代码技术上是正确的, 但是概念上差。 更好的写法是下面这样:\nclass Human { has $.name; has $.age; } class Employee is Human { has $.company; has $.salary; } is 关键字定义了继承。 按面向对象的说法, Employee 是 Human 的孩子, 而 Human 是 Employee 的父亲。\n所有的子类继承了父类的属性和方法, 所以没有必要重新它们。\n重写 　类从它们的父类中继承所有的属性和方法。 有些情况下, 我们需要让子类中的方法表现得和继承的方法不一样。 为了做到这, 我们在子类中重新定义方法。\n这个概念就叫做重写。\n在下面的例子中, introduce-yourself 方法被 Employee 类继承。\nclass Human { has $.name; has $.age; method introduce-yourself { say \u0026#39;Hi 我是人类, 我的名字是 \u0026#39; ~ self.name; } } class Employee is Human { has $.company; has $.salary; } my $john = Human.new(name =\u0026gt; \u0026#39;John\u0026#39;, age =\u0026gt; 23,); my $jane = Employee.new(name =\u0026gt; \u0026#39;Jane\u0026#39;, age =\u0026gt; 25, company =\u0026gt; \u0026#39;Acme\u0026#39;, salary =\u0026gt; 4000); $john.introduce-yourself; $jane.introduce-yourself; 重写工作如下:\nclass Human { has $.name; has $.age; method introduce-yourself { say \u0026#39;Hi 我是人类, 我的名字是 \u0026#39; ~ self.name; } } class Employee is Human { has $.company; has $.salary; method introduce-yourself { say \u0026#39;Hi 我是一名员工, 我的名字是 \u0026#39; ~ self.name ~ \u0026#39;我工作在: \u0026#39; ~ self.comapny; } } my $john = Human.new(name =\u0026gt;\u0026#39;John\u0026#39;,age =\u0026gt; 23,); my $jane = Employee.new(name =\u0026gt;\u0026#39;Jane\u0026#39;,age =\u0026gt; 25,company =\u0026gt; \u0026#39;Acme\u0026#39;,salary =\u0026gt; 4000); $john.introduce-yourself; $jane.introduce-yourself; 根据对象所属的类, 会调用正确的方法。\nSubmethods 　Submethods 是一种子类继承不到的方法。\n它们只能从所声明的类中访问。 它们使用 submethod 关键字定义。\n多重继承 　在 Raku 中允许多重继承。一个类可以继承自多个其它的类。\nclass bar-chart { has Int @.bar-values; method plot { say @.bar-values; } } class line-chart { has Int @.line-values; method plot { say @.line-values; } } class combo-chart is bar-chart is line-chart { } my $actual-sales = bar-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10]); my $forecast-sales = line-chart.new(line-values =\u0026gt; [9,8,10,7,6,9]); my $actual-vs-forecast = combo-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10], line-values =\u0026gt; [9,8,10,7,6,9]); say \u0026#34;实际的销售: \u0026#34;; $actual-sales.plot; say \u0026#34;预测的销售: \u0026#34;; $forecast-sales.plot; say \u0026#34;实际 vs 预测:\u0026#34;; $actual-vs-forecast.plot; 输出:\n实际的销售: [10 9 11 8 7 10] 预测的销售: [9 8 10 7 6 9] 实际 vs 预测: [10 9 11 8 7 10] 解释\ncombo-chart 类应该能持有两个序列, 一个是绘制条形图的实际值, 另一个是绘制折线图的预测值。\n这就是我们为什么把它定义为 line-chart 和 bar-chart 的孩子的原因。\n你应该注意到了, 在 combo-chart 身上调用 plot 方法并没有产生所要求的结果。它只绘制了一个序列。\n发生了什么事?\ncombo-chart 继承自 line-chart 和 bar-chart, 它们都有一个叫做 plot 的方法。当我们在 combo-chart 身上调用那个方法时, Raku 内部会尝试通过调用其所继承的方法之一来解决冲突。\n纠正\n为了表现得正确, 我们应该在 combo-chart 中重写 plot 方法。\nclass bar-chart { has Int @.bar-values; method plot { say @.bar-values; } } class line-chart { has Int @.line-values; method plot { say @.line-values; } } class combo-chart is bar-chart is line-chart { method plot { say @.bar-values; say @.line-values; } } my $actual-sales = bar-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10]); my $forecast-sales = line-chart.new(line-values =\u0026gt; [9,8,10,7,6,9]); my $actual-vs-forecast = combo-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10], line-values =\u0026gt; [9,8,10,7,6,9]); say \u0026#34;实际的销售: \u0026#34;; $actual-sales.plot; say \u0026#34;预测的销售: \u0026#34;; $forecast-sales.plot; say \u0026#34;实际 vs 预测:\u0026#34;; $actual-vs-forecast.plot; 输出:\n实际的销售: [10 9 11 8 7 10] 预测的销售: [9 8 10 7 6 9] 实际 vs 预测: [10 9 11 8 7 10] [9 8 10 7 6 9] Roles 　Roles 在它们是属性和方法的集合这个意义上和类有点类似。 Roles 使用关键字 role 声明, 而想实现该 role 的类可以使用 does 关键字。\n使用 roles 重写多重继承的例子\nrole bar-chart { has Int @.bar-values; method plot { say @.bar-values; } } role line-chart { has Int @.line-values; method plot { say @.line-values; } } class combo-chart does bar-chart does line-chart { method plot { say @.bar-values; say @.line-values; } } my $actual-sales = bar-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10]); my $forecast-sales = line-chart.new(line-values =\u0026gt; [9,8,10,7,6,9]); my $actual-vs-forecast = combo-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10], line-values =\u0026gt; [9,8,10,7,6,9]); say \u0026#34;实际的销售: \u0026#34;; $actual-sales.plot; say \u0026#34;预测的销售: \u0026#34;; $forecast-sales.plot; say \u0026#34;实际 vs 预测:\u0026#34;; $actual-vs-forecast.plot; 运行上面的脚本你会看到结果是一样的。\n现在你问问自己, 如果 roles 表现得像类的话那么它们的用途是什么呢?\n要回答你的问题, 修改第一个用于展示多重继承的脚本, 这个脚本中我们忘记重写 plot 方法了。\nrole bar-chart { has Int @.bar-values; method plot { say @.bar-values; } } role line-chart { has Int @.line-values; method plot { say @.line-values; } } class combo-chart does bar-chart does line-chart { } my $actual-sales = bar-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10]); my $forecast-sales = line-chart.new(line-values =\u0026gt; [9,8,10,7,6,9]); my $actual-vs-forecast = combo-chart.new(bar-values =\u0026gt; [10,9,11,8,7,10], line-values =\u0026gt; [9,8,10,7,6,9]); say \u0026#34;Actual sales:\u0026#34;; $actual-sales.plot; say \u0026#34;Forecast sales:\u0026#34;; $forecast-sales.plot; say \u0026#34;Actual vs Forecast:\u0026#34;; $actual-vs-forecast.plot; 输出:\n===SORRY!=== Method 'plot' must be resolved by class combo-chart because it exists in multiple roles (line-chart, bar-chart) 解释\n如果多个 roles 被应用到同一个类中, 会出现冲突并抛出一个编译时错误。 这是比多重继承更安全的方法, 其中冲突不被认为是错误并且简单地在运行时解决。 Roles 会提醒你有冲突。\n内省 　内省是获取诸如对象的类型、属性或方法等对象属性的信息的过程。\nclass Human { has Str $.name; has Int $.age; method introduce-yourself { say \u0026#39;Hi i am a human being, my name is \u0026#39; ~ self.name; } } class Employee is Human { has Str $.company; has Int $.salary; method introduce-yourself { say \u0026#39;Hi i am a employee, my name is \u0026#39; ~ self.name ~ \u0026#39;and I work at: \u0026#39; ~ self.company; } } my $john = Human.new(name =\u0026gt;\u0026#39;John\u0026#39;,age =\u0026gt; 23,); my $jane = Employee.new(name =\u0026gt;\u0026#39;Jane\u0026#39;,age =\u0026gt; 25,company =\u0026gt; \u0026#39;Acme\u0026#39;,salary =\u0026gt; 4000); say $john.WHAT; say $jane.WHAT; say $john.^attributes; say $jane.^attributes; say $john.^methods; say $jane.^methods; say $jane.^parents; if $jane ~~ Human {say \u0026#39;Jane is a Human\u0026#39;}; 内省使用了:\n .WHAT 返回已经创建的对象所属的类。 .^attributes 返回一个包含该对象所有属性的列表。 .^mtethods 返回能在该对象身上调用的所有方法。 .^parents 返回该对象所属类的所有父类。 ~~ 叫做智能匹配操作符。如果对象是从它所进行比较的类或任何它继承的类创建的, 则计算为 True。  第十章 异常处理 捕获异常 　异常是当某些东西出错时发生在运行时的特殊行为。\n我们说异常被抛出。考虑下面这个运行正确的脚本:\nmy Str $name; $name = \u0026#34;Joanna\u0026#34;; say \u0026#34;Hello \u0026#34; ~ $name; say \u0026#34;How are you doing today?\u0026#34; 输出:\nHello Joanna How are you doing today? 现在让这个脚本抛出异常:\nmy Str $name; $name = 123; say \u0026#34;Hello \u0026#34; ~ $name; say \u0026#34;How are you doing today?\u0026#34; 输出:\nType check failed in assignment to $name; expected Str but got Int in block \u0026lt;unit\u0026gt; at exceptions.pl6:2 你应该看到当错误出现时(在这个例子中把数组赋值给字符串变量)程序会停止并且其它行的代码不会被执行, 即使它们是正确的。\n异常处理是捕获已经抛出的异常的过程以使脚本能继续工作。\nmy Str $name; try { $name = 123; say \u0026#34;Hello \u0026#34; ~ $name; CATCH { default { say \u0026#34;Can you tell us your name again, we couldn\u0026#39;t find it in the register.\u0026#34;; } } } say \u0026#34;How are you doing today?\u0026#34;; 输出:\nCan you tell us your name again, we couldn't find it in the register. How are you doing today? 异常处理是使用 try-catch block 完成的。\ntry { # code goes in here # 如果有东西出错, 脚本会进入到下面的 CATCH block 中 # 如果什么错误也没有, 那么 CATCH block 会被忽略 CATCH { default { # 只有抛出异常时, 这儿的代码才会被求值 } } } CATCH block 能像定义 given block 那样定义。这意味着我们能捕获并处理各种不同类型的异常。\ntry { #code goes in here #if anything goes wrong, the script will enter the below CATCH block #if nothing goes wrong the CATCH block will be ignored CATCH { when X::AdHoc { #do something if an exception of type X::AdHoc is thrown } when X::IO { #do something if an exception of type X::IO is thrown } when X::OS { #do something if an exception of type X::OS is thrown } default { #do something if an exception is thrown and doesn\u0026#39;t belong to the above types } } } 抛出异常 　和捕获异常相比, Raku 也允许你显式地抛出异常。 有两种类型的异常可以抛出:\n ad-hoc 异常 类型异常  ad-hoc\nmy Int $age = 21; die \u0026#34;Error !\u0026#34;; typed\nmy Int $age = 21; X::AdHoc.new(payload =\u0026gt; \u0026#39;Error !\u0026#39;).throw; 使用 die 子例程后面跟着异常消息来抛出 Ad-hoc 异常。\nTyped 异常是对象, 因此上面的例子中使用了 .new() 构造函数。\n所有类型化的异常都是从类 X 开始, 下面是一些例子:\n X::AdHoc 是最简单的异常类型 X::IO 跟 IO 错误有关。 X::OS 跟 OS 错误有关。 X::Str::Numeric 跟把字符串强制转换为数字有关。   查看异常类型和相关方法的完整列表请到 http://doc.raku.org/type.html 并导航到以 X 开头的类型。\n 第十一章 正则表达式 正则表达式, 或 regex 是一个用于模式匹配的字符序列。\n理解它最简单的一种方式是把它看作模式。\nif \u0026#39;enlightenment\u0026#39; ~~ m/light / { say \u0026#34;enlightenment contains the word light\u0026#34;; } 在这个例子中, 智能匹配操作符 ~~ 用于检查一个字符串(enlightenment)是否包含一个单词(light)。\n\u0026ldquo;Enlightenment\u0026rdquo; 与正则表达式 m/ light / 匹配。\nRegex 定义 　正则表达式可以按如下方式定义:\n /light/ m/light/ rx/light/  除非显式地指定, 否则空白是无关紧要的, m/light/ 和 m/ light / 是相同的。\n匹配字符 　字母数字字符和下划线 _ 在正则表达式中是按原样写出的。\n所有其它字符必须使用反斜线或用引号围起来以转义。\n反斜线\nif \u0026#39;Temperature: 13\u0026#39; ~~ m/\\:/ { say \u0026#34;The string provided contains a colon :\u0026#34;; } 单引号\nif \u0026#39;Age = 13\u0026#39; ~~ m/\u0026#39;=\u0026#39;/ { say \u0026#34;The string provided contains an equal character = \u0026#34;; } 双引号\nif \u0026#39;name@company.com\u0026#39; ~~ m/\u0026#34;@\u0026#34;/ { say \u0026#34;This is a valid email address because it contains an @ character\u0026#34;; } 匹配字符类 　就像之前章节看到的, 匹配字符类很方便。\n话虽这么说，更系统的方法是使用 Unicode 属性。\nUnicode 属性闭合在 \u0026lt;: \u0026gt; 中。\nif \u0026#34;John123\u0026#34; ~~ /\u0026lt;:N\u0026gt;/ { say \u0026#34;Contains a number\u0026#34;; } else { say \u0026#34;Doesn\u0026#39;t contain a number\u0026#34; } if \u0026#34;John-Doe\u0026#34; ~~ /\u0026lt;:Lu\u0026gt;/ { say \u0026#34;Contains an uppercase letter\u0026#34;; } else { say \u0026#34;Doesn\u0026#39;t contain an upper case letter\u0026#34; } if \u0026#34;John-Doe\u0026#34; ~~ /\u0026lt;:Pd\u0026gt;/ { say \u0026#34;Contains a dash\u0026#34;; } else { say \u0026#34;Doesn\u0026#39;t contain a dash\u0026#34; } 通配符 通配符也可以用在正则表达式中。\n点 . 意味着任何单个字符。\nif \u0026#39;abc\u0026#39; ~~ m/a.c / { say \u0026#34;Match\u0026#34;; } if \u0026#39;a2c\u0026#39; ~~ m/a.c / { say \u0026#34;Match\u0026#34;; } if \u0026#39;ac\u0026#39; ~~ m/a.c / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } 量词 　量词在字符后面用于指定我们期望匹配它前面的东西的次数。\n问号 ? 意思是 0 或 1 次。\nif \u0026#39;ac\u0026#39; ~~ m/a?c / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } if \u0026#39;c\u0026#39; ~~ m/a?c / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } 星号 * 意思是 0 或多次。\nif \u0026#39;az\u0026#39; ~~ m/a*z / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } if \u0026#39;aaz\u0026#39; ~~ m/a*z / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } if \u0026#39;aaaaaaaaaaz\u0026#39; ~~ m/a*z / { say \u0026#34;Match\u0026#34;; }else { say \u0026#34;No Match\u0026#34;; }if \u0026#39;z\u0026#39;~~m/ a*z / { say \u0026#34;Match\u0026#34;; }else { say \u0026#34;No Match\u0026#34;; }+ 意思是至少匹配 1 次。\nif \u0026#39;az\u0026#39; ~~ m/a+z / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } if \u0026#39;aaz\u0026#39; ~~ m/a+z / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } if \u0026#39;aaaaaaaaaaz\u0026#39; ~~ m/a+z / { say \u0026#34;Match\u0026#34;; } else { say \u0026#34;No Match\u0026#34;; } if \u0026#39;z\u0026#39; ~~ m/a+z / { say \u0026#34;Match\u0026#34;; }else { say \u0026#34;No Match\u0026#34;; }匹配结果 　当匹配字符串的正则表达式成功时, 匹配结果被存储在一个特殊的变量 $/ 中。\n脚本\nif \u0026#39;Rakudo is a Raku compiler\u0026#39; ~~ m/:sRaku/ { say \u0026#34;The match is: \u0026#34; ~ $/; say \u0026#34;The string before the match is: \u0026#34; ~ $/.prematch; say \u0026#34;The string after the match is: \u0026#34; ~ $/.postmatch; say \u0026#34;The matching string starts at position: \u0026#34; ~ $/.from; say \u0026#34;The matching string ends at position: \u0026#34; ~ $/.to; } 输出\nThe match is: Raku The string before the match is: Rakudo is a The string after the match is: compiler The matching string starts at position: 12 The matching string ends at position: 18 解释\n$/ 返回一个 Match Object(匹配 regex 的字符串)。\n下面的方法可以在 Match Object 身上调用:\n .prematch 返回匹配前面的字符串 .postmatch 返回匹配后面的字符串 .from 返回匹配的开始位置 .to 返回匹配的结束位置   默认地空白在 regex 中是无关紧要的。 如果我们想在 regex 中包含空白, 我们必须显式地这样做。 regex m/:s Raku/ 中的 :s 强制考虑空白并且不会被删除。 二选一, 我们能把 regex 写为 m/Perl\\s6/ 并使用 \\s 占位符。 如果 regex 中包含的空白不止一个, 使用 :s 比使用 \\s 更高效。\n 例子 　让我们检查一个邮件是否合法。\n我们假设一个合法的电子邮件地址的形式如下:\nfirst name [dot] last name [at] company [dot] (com/org/net)\n 这个例子中用于电子邮件检测的 regex 不是很准确。它的核心意图是用来解释 Raku 中的 regex 的功能的。 不要在生产中原样使用它。\n 脚本\nmy $email = \u0026#39;john.doe@raku.org\u0026#39;; my $regex = /\u0026lt;:L\u0026gt;+\\.\u0026lt;:L\u0026gt;+\\@\u0026lt;:L+:N\u0026gt;+\\.\u0026lt;:L\u0026gt;+/; if $email ~~ $regex { say $/ ~ \u0026#34;is a valid email\u0026#34;; } else { say \u0026#34;This is not a valid email\u0026#34;; } 输出\njohn.doe@raku.org is a valid email 解释\n \u0026lt;:L\u0026gt; 匹配单个字符 \u0026lt;:L\u0026gt;+ 匹配单个字符或更多字符 \\. 匹配单个点号字符 \\@ 匹配单个 [at] 符号 \u0026lt;:L+:N\u0026gt; 匹配一个字母和数字 \u0026lt;:L+:N\u0026gt;+ 匹配一个或多个字母和数字  其中的 regex 可以分解成如下:\n first name \u0026lt;:L\u0026gt;+ [dot] \\. last name \u0026lt;:L\u0026gt;+ [at] \\@ company name \u0026lt;:L+:N\u0026gt;+ [dot] \\. com/org/net \u0026lt;:L\u0026gt;+  可选地, 一个 regex 可以被分解成多个具名 regexes。\nmy $email = \u0026#39;john.doe@raku.org\u0026#39;; my regex many-letters {\u0026lt;:L\u0026gt;+}; my regex dot {\\.}; my regex at {\\@}; my regex many-letters-numbers {\u0026lt;:L+:N\u0026gt;+}; if $email ~~ /\u0026lt;many-letters\u0026gt;\u0026lt;dot\u0026gt;\u0026lt;many-letters\u0026gt;\u0026lt;at\u0026gt;\u0026lt;many-letters-numbers\u0026gt;\u0026lt;dot\u0026gt;\u0026lt;many-letters\u0026gt;/ { say $/ ~ \u0026#34;is a valid email\u0026#34;; } else { say \u0026#34;This is not a valid email\u0026#34;; } 具名 regex 是使用 my regex regex-name { regex definition } 定义的。\n具名 regex 可以使用 \u0026lt;regex-name\u0026gt; 来调用。\n 更多关于 regexes 的东西, 查看 http://doc.raku.org/language/regexes\n 第十二章 Raku 模块 Rakudo 自带了 Panda 这个模块安装工具。\n要安装指定的模块, 在终端中键入如下命令:\nzef install \u0026quot;module name\u0026quot;  Raku 的模块目录可以在 http://modules.raku.org/ 中找到。\n 使用模块 　MD5 是一个关于密码的散列函数，它产生一个128位的散列值。 MD5 有多种加密存储在数据库中的口令的应用程序。当新用户注册时，其证书并不存储为纯文本，而是散列。这样做的理由是，如果该数据库被破解，攻击者将不能够知道口令是什么。\n比方说，你需要一个生成密码的MD5哈希以存储在数据库中备用的脚本。\n幸运的是，Raku 已经有一个能实现MD5算法的模块。我们安装下:\nzef install Digest::MD5\n现在运行下面的脚本:\nuse Digest::MD5; my $password = \u0026#34;password123\u0026#34;; my $hashed-password = Digest::MD5.new.md5_hex($password); say $hashed-password; 为了运行创建哈希的 md5_hex() 函数, 我们需要加载需要的模块。use 关键字用于加载模块。\n第十三章 Unicode Unicode 是编码并表现文本的标准, 它满足了世界上的大部分系统。\nUTF-8 是能够以Unicode编码所有可能的字符或代码点的字符编码。\n字符的定义是通过:\n字素: 可见的表示\n代码点: 赋值给字符的数字\n使用 Unicode 　让我们看一下使用 Unicode 能输出什么\nsay \u0026#34;a\u0026#34;; say \u0026#34;\\x0061\u0026#34;; say \u0026#34;\\c[LATIN SMALL LETTER A]\u0026#34;; 上面 3 行展示了构建字符的不同方法:\n 直接写出字符(字素) 使用 \\x 和代码点 使用 \\c 和代码点名字  现在我们来输出笑脸\nsay \u0026#34;☺\u0026#34;; say \u0026#34;\\x263a\u0026#34;; say \u0026#34;\\c[WHITE SMILING FACE]\u0026#34;; 组合两个代码点的另外一个例子\nsay \u0026#34;á\u0026#34;; say \u0026#34;\\x00e1\u0026#34;; say \u0026#34;\\x0061\\x0301\u0026#34;; say \u0026#34;\\c[LATIN SMALL LETTER A WITH ACUTE]\u0026#34;; 字母 á 可以被写为:\n 使用它的唯一代码点 \\x00e1 或作为 a 和 重音符号 \\x0061\\x0301 代码点的组合  有些方法可以使用\nsay \u0026#34;á\u0026#34;.NFC; say \u0026#34;á\u0026#34;.NFD; say \u0026#34;á\u0026#34;.uniname; 输出\nNFC:0x\u0026lt;00e1\u0026gt; NFD:0x\u0026lt;0061 0301\u0026gt; LATIN SMALL LETTER A WITH ACUTE NFC 返回唯一的代码点。\nNFD 分解(decompose)那个字符并返回每部分的代码点。\nuniname 返回代码点的名字。\nUnicode 字符可以用作标识符:\nmy $Δ = 1; $Δ++; say $Δ; 第十四章 并行、并发和异步 在正常情况下, 程序中的所有任务都是相继地运行的。\n这可能不是个事儿除非你正尝试去做的东西需要耗费很多时间。\n很自然地说, Raku 拥有能让你并行地运行东西的功能。\n在这个阶段, 注意并行可以是下面两个东西之一是很重要的:\n 任务并行化: 两个(或更多)独立的表达式并行地运行。 数据并行化: 单个表达式并行地迭代列表中的元素。  让我们从后者开始。\n数据并行化　 　my @array = (0..50000); #Array population my @result = @array.map({ is-prime $_ }); #call is-prime for each array element say now - INIT now; #Output the time it took for the script to complete 考虑上面的例子 我们只做一个操作 @array.map({is-prime $_})。is-prime 子例程相继被每个数组元素所调用:\nis-prime @array[0]  然后是 is-prime @array[1] 然后是 is-prime @array[2] 等等。\n幸运的是, 我们能同时在多个数组元素身上调用 is-prime 函数:\nmy @array = (0..50000); #Array population my @result = @array.race.map({ is-prime $_ }); #call is-prime for each array element say now - INIT now; #Output the time it took to complete 注意表达式中使用的 race。这个方法会使数组元素能够并行地迭代。\n运行两个例子(使用和不使用 race)运行之后, 比较两个脚本运行结束所花费的时间。\n race 不会保存元素的顺序。如果你想那样做, 使用 hyper 代替。\nrace\nmy @array = (1..1000); my @result = @array.race.map( {$_ + 1} ); @result».say; hyper\nmy @array = (1..1000); my @result = @array.hyper.map( {$_ + 1} ); @result».say; 如果你俩个脚本都运行了, 你应该注意到一个排序了一个没有排序。\n 任务并行化 　my @array1 = (0..49999); my @array2 = (2..50001); my @result1 = @array1.map( {is-prime($_ + 1)} ); my @result2 = @array2.map( {is-prime($_ - 1)} ); say @result1 == @result2; say now - INIT now; 考虑上面的例子:\n 我们定义了 2 个数组 对每个数组应用不同的操作并保存结果 并检查两个结果是否相同  该脚本等到 @array1.map( {is-prime($_ +1)} ) 完成然后计算 @array1.map( {is-prime($_ +1)} )。\n应用到每个数组的俩个操作彼此间没有依赖。\n为什么不并行地执行呢?\nmy @array1 = (0..49999); my @array2 = (2..50001); my $promise1 = start @array1.map( {$_ + 1} ); my $promise2 = start @array2.map( {$_ - 1} ); my @result1 = await $promise1; my @result2 = await $promise2; say @result1 == @result2; say now - INIT now; 解释\nstart 方法计算它后面的代码并返回promise 类型的对象或promise。\n如果代码被正确地求值, 那么 promise 会被保留(kept)。\n如果代码抛出异常, 那么 promise 会被破坏(broken)。\nawait 方法等待一个 promise。\n如果那个 promise 是被保留的, await 会获取到返回值。\n如果那个 promise 是被破坏的, await 会获取到抛出异常。\n检查每个脚本完成所花费的时间。\n 并行总是添加线程开销。如果开销抵消不了运算速度的增长，那么该脚本会显得较慢。 这就是为什么，在很简单的脚本中使用 race，hyper，start 和 await 实际上可以使它们慢下来。\n 并发和异步 　 关于并发和异步编程的更多信息, 请查看 http://doc.raku.org/language/concurrency\n 第十五章 社区 很多讨论发生在 #raku IRC 频道中。你可以到 http://raku.org/community/irc 进行任何询问。\nhttp://pl6anet.org/ 是一个 Raku 博客聚合器。\n"},"name":"Raku 入门","published":"2021-07-11T00:00:00+08:00","summary":"Raku Intro","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-12-21-raku-intro/"}],"name":"intro","type":"feed","url":"https://ohmyweekly.github.io/tags/intro/"}
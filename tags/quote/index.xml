<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>
            
                    quote on
                
            
            焉知非鱼</title>
        <link>https://ohmyweekly.github.io/tags/quote/</link>
        <description>Recent content  in quote
            on 焉知非鱼</description>
        <language>en-us</language>
        <lastBuildDate>Mon, 12 Jul 2021 22:13:55 +0800</lastBuildDate>
        <generator>Hugo -- gohugo.io</generator>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
            <atom:link href="https://ohmyweekly.github.io/tags/quote/index.xml" rel="self" type="application/rss&#43;xml" />
        
            
            <item>
                <title>Raku 中的引号</title>
                <link>https://ohmyweekly.github.io/notes/2015-08-24-quote-in-raku/</link>
                
                
                <description>&lt;blockquote&gt;Quote in Raku&lt;/blockquote&gt;&lt;p&gt;除了 q 和 qq 之外，现在还有一种基本形式的 Q，它不会进行插值，除非显式地修改它那样做。所以，q 实际上是 Q:q 的简称，qq 实际上是 &lt;code&gt;Q:qq&lt;/code&gt; 的简称。实际上所有的 quote-like 形式都派生自带有副词的 Q 形式：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L95-L116&#34;&gt;S02-literals/quoting.t lines 95–116&lt;/a&gt;
&lt;a href=&#34;https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L132-L139&#34;&gt;S02-literals/quoting.t lines 132–139&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;q//         Q :q //
qq//        Q :qq //
rx//        Q :regex //
s///        Q :subst ///
tr///       Q :trans ///
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;诸如 &lt;code&gt;:regex&lt;/code&gt; 的副词通过转换到不同的解析器改变了语言的解析。这能完全改变任何之后的副词还有所引起的东西自身的解释。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-raku&#34; data-lang=&#34;raku&#34;&gt;&lt;span class=&#34;k&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;:s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;       Q :q :scalar &lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;rx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt;      Q &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;regex&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;scalar&lt;/span&gt;&lt;span class=&#34;sr&#34;&gt; //
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就像 &lt;code&gt;q[...]&lt;/code&gt; 拥有简写形式的 &amp;lsquo;&amp;hellip;&amp;rsquo;, 并且 &lt;code&gt;qq[...]&lt;/code&gt; 拥有简写形式的 &amp;ldquo;&amp;hellip;&amp;rdquo; 一样，完整的 &lt;code&gt;Q[...]&lt;/code&gt; 引用也有一种使用半角括号 ｢&amp;hellip;｣ 的短形式。&lt;/p&gt;
&lt;h2 id=&#34;引号上的副词&#34;&gt;引号上的副词&lt;/h2&gt;
&lt;p&gt;广义上的引号现在可以接收副词了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L210-L223&#34;&gt;S02-literals/quoting.t lines 210–223&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L55-L69&#34;&gt;S02-literals/quoting.t lines 55–69&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L427-L501&#34;&gt;S02-literals/quoting.t lines 427–501&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Short       Long            Meaning
=====       ====            =======
:x          :exec           作为命令执行并返回结果
:w          :words          按单词分割结果(没有引号保护)


:ww         :quotewords     按单词分割结果 (带有引号保护)
:v          :val            Evaluate word or words for value literals
:q          :single         插值 \\, \q 和 \&#39; (or whatever)


:qq         :double         使用 :s, :a, :h, :f, :c, :b 进行插值
:s          :scalar         插值 $ vars
:a          :array          插值 @ vars
:h          :hash           插值 % vars


:f          :function       插值 &amp;amp; 调用
:c          :closure        插值 {...} 表达式
:b          :backslash      插值 \n, \t, 等. (至少暗示了 :q )
:to         :heredoc        把结果解析为 heredoc 终止符
            :regex          解析为正则表达式
            :subst          解析为置换 (substitution)
            :trans          解析为转换 (transliteration)
            :code           Quasiquoting
:p          :path           返回一个 Path 对象 (查看 S16 获取更多选项)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过在开头加入一个带有短形式的单个副词的 Q，q，或 qq，你可以省略掉第一个冒号，这产生了如下形式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-raku&#34; data-lang=&#34;raku&#34;&gt;&lt;span class=&#34;k&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;a b c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                         &lt;span class=&#34;c1&#34;&gt;# P5-esque qw// meaning q:w&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;# Q:c//, interpolate only closures&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;qq&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$cmd&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt;                   &lt;span class=&#34;c1&#34;&gt;# equivalent to P5&amp;#39;s qx//&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;(注意 &lt;code&gt;qx//&lt;/code&gt; 不插值)&lt;/p&gt;
&lt;p&gt;如果你想进一步缩写，那么定义一个宏：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-raku&#34; data-lang=&#34;raku&#34;&gt;&lt;span class=&#34;n&#34;&gt;macro&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; &amp;#39;qq:x &amp;#39; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;# equivalent to P5&amp;#39;s qx//&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;macro&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qTO&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;qq❌w:to &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;# qq❌w:to//&lt;/span&gt;
&lt;span class=&#34;nf&#34;&gt;macro&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;quote:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;❰ ❱&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;quasi&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}}}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;quoteharder&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所有大写的副词被保留用作用户定义的引号。所有在 Latin-1 上面的 Unicode 分隔符被保留用作用户定义的引号。
&lt;a href=&#34;https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L352-L426&#34;&gt;S02-literals/quoting.t lines 352–426&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于上面我们现在有了一个推论，我们现在能说：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-raku&#34; data-lang=&#34;raku&#34;&gt;&lt;span class=&#34;nv&#34;&gt;%hash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;q&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;w:c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;a b c d &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%hash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-raku&#34; data-lang=&#34;raku&#34;&gt;&lt;span class=&#34;nv&#34;&gt;%hash&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;qq&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;:w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;a b c d &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;@array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;%hash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;把东西(items)插值到 qw 中。默认地，数组和散列在插值时只带有空格分隔符，所以之后的按空格分割仍旧能工作。（但是内置的  «&amp;hellip;»  引号自动进行了等价于 &lt;code&gt;qq:ww:v/.../&lt;/code&gt; 的插值）。 内置的 &lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt; 等价于 &lt;code&gt;q:w:v/.../&lt;/code&gt;。&lt;/p&gt;
</description>
                
                        <author>焉知非鱼@fakeEmailToMakeValidatorHappy.com (焉知非鱼)</author>
                
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/categories/rakulang">rakulang</category>
                                
                            
                        
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/quote">quote</category>
                                
                            
                        
                    
                
                <guid>https://ohmyweekly.github.io/notes/2015-08-24-quote-in-raku/</guid>
                <pubDate>Sun, 11 Jul 2021 00:00:00 +0800</pubDate>
            </item>
        
    </channel>
</rss>



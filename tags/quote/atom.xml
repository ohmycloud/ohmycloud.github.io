<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.85.0">Hugo</generator><title type="html"><![CDATA[quote on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/quote/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/quote/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/quote/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/quote/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-07-11T22:08:29+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/quote/</id>
    
        
        <entry>
            <title type="html"><![CDATA[Raku 中的引号]]></title>
            <link href="https://ohmyweekly.github.io/notes/2015-08-24-quote-in-raku/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2015-08-24-quote-in-raku/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-07-11T00:00:00+08:00</published>
            <updated>2021-07-11T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Quote in Raku</blockquote><p>除了 q 和 qq 之外，现在还有一种基本形式的 Q，它不会进行插值，除非显式地修改它那样做。所以，q 实际上是 Q:q 的简称，qq 实际上是 <code>Q:qq</code> 的简称。实际上所有的 quote-like 形式都派生自带有副词的 Q 形式：</p>
<p><a href="https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L95-L116">S02-literals/quoting.t lines 95–116</a>
<a href="https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L132-L139">S02-literals/quoting.t lines 132–139</a></p>
<pre><code>q//         Q :q //
qq//        Q :qq //
rx//        Q :regex //
s///        Q :subst ///
tr///       Q :trans ///
</code></pre><p>诸如 <code>:regex</code> 的副词通过转换到不同的解析器改变了语言的解析。这能完全改变任何之后的副词还有所引起的东西自身的解释。</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">q</span><span class="sa">:s</span><span class="p">//</span><span class="s">       Q :q :scalar </span>
<span class="k">rx</span><span class="p">:</span><span class="na">s</span><span class="p">//</span><span class="sr">      Q </span><span class="p">:</span><span class="na">regex</span><span class="sr"> </span><span class="p">:</span><span class="na">scalar</span><span class="sr"> //
</span></code></pre></div><p>就像 <code>q[...]</code> 拥有简写形式的 &lsquo;&hellip;&rsquo;, 并且 <code>qq[...]</code> 拥有简写形式的 &ldquo;&hellip;&rdquo; 一样，完整的 <code>Q[...]</code> 引用也有一种使用半角括号 ｢&hellip;｣ 的短形式。</p>
<h2 id="引号上的副词">引号上的副词</h2>
<p>广义上的引号现在可以接收副词了：</p>
<ul>
<li><a href="https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L210-L223">S02-literals/quoting.t lines 210–223</a></li>
<li><a href="https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L55-L69">S02-literals/quoting.t lines 55–69</a></li>
<li><a href="https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L427-L501">S02-literals/quoting.t lines 427–501</a></li>
</ul>
<pre><code>Short       Long            Meaning
=====       ====            =======
:x          :exec           作为命令执行并返回结果
:w          :words          按单词分割结果(没有引号保护)


:ww         :quotewords     按单词分割结果 (带有引号保护)
:v          :val            Evaluate word or words for value literals
:q          :single         插值 \\, \q 和 \' (or whatever)


:qq         :double         使用 :s, :a, :h, :f, :c, :b 进行插值
:s          :scalar         插值 $ vars
:a          :array          插值 @ vars
:h          :hash           插值 % vars


:f          :function       插值 &amp; 调用
:c          :closure        插值 {...} 表达式
:b          :backslash      插值 \n, \t, 等. (至少暗示了 :q )
:to         :heredoc        把结果解析为 heredoc 终止符
            :regex          解析为正则表达式
            :subst          解析为置换 (substitution)
            :trans          解析为转换 (transliteration)
            :code           Quasiquoting
:p          :path           返回一个 Path 对象 (查看 S16 获取更多选项)
</code></pre><p>通过在开头加入一个带有短形式的单个副词的 Q，q，或 qq，你可以省略掉第一个冒号，这产生了如下形式：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="k">q</span><span class="sa">w</span> <span class="p">/</span><span class="s">a b c</span><span class="p">;</span>                         <span class="c1"># P5-esque qw// meaning q:w</span>
<span class="k">Q</span><span class="sa">c</span> <span class="p">&#39;</span><span class="s">...</span><span class="p">{</span><span class="nv">$x</span><span class="p">}</span><span class="s">...</span><span class="p">;</span>                    <span class="c1"># Q:c//, interpolate only closures</span>
<span class="k">qq</span><span class="sa">x</span><span class="p">/</span><span class="nv">$cmd</span><span class="s2"> </span><span class="nv">@args</span><span class="o">[]</span>                   <span class="c1"># equivalent to P5&#39;s qx//</span>
</code></pre></div><p>(注意 <code>qx//</code> 不插值)</p>
<p>如果你想进一步缩写，那么定义一个宏：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="n">macro</span> <span class="k">q</span><span class="sa">x</span> <span class="p">{</span><span class="s"> &#39;qq:x &#39; </span><span class="p">}</span>          <span class="c1"># equivalent to P5&#39;s qx//</span>
<span class="n">macro</span> <span class="n">qTO</span> <span class="p">{</span> <span class="p">&#39;</span><span class="s1">qq❌w:to </span><span class="p">&#39;</span> <span class="p">}</span>    <span class="c1"># qq❌w:to//</span>
<span class="nf">macro</span> <span class="n">quote:</span><span class="p">&lt;</span><span class="s">❰ ❱</span><span class="p">&gt;</span> <span class="p">(</span><span class="nv">$text</span><span class="p">)</span> <span class="p">{</span> <span class="n">quasi</span> <span class="p">{</span> <span class="p">{{{</span><span class="nv">$text</span><span class="p">}}}</span><span class="o">.</span><span class="nf">quoteharder</span> <span class="p">}</span> <span class="p">}</span>
</code></pre></div><p>所有大写的副词被保留用作用户定义的引号。所有在 Latin-1 上面的 Unicode 分隔符被保留用作用户定义的引号。
<a href="https://github.com/raku/roast/blob/master/S02-literals/quoting.t#L352-L426">S02-literals/quoting.t lines 352–426</a></p>
<p>关于上面我们现在有了一个推论，我们现在能说：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nv">%hash</span> <span class="o">=</span> <span class="k">q</span><span class="sa">w:c</span><span class="p">/</span><span class="s">a b c d </span><span class="p">{</span><span class="nv">@array</span><span class="p">}</span><span class="s"> </span><span class="p">{</span><span class="nv">%hash</span><span class="p">};</span>
</code></pre></div><p>或：</p>
<div class="highlight"><pre class="chroma"><code class="language-raku" data-lang="raku"><span class="nv">%hash</span> <span class="o">=</span> <span class="k">qq</span><span class="sa">:w</span><span class="p">/</span><span class="s2">a b c d </span><span class="p">{</span><span class="nv">@array</span><span class="p">}</span><span class="s2"> </span><span class="p">{</span><span class="nv">%hash</span><span class="p">};</span>
</code></pre></div><p>把东西(items)插值到 qw 中。默认地，数组和散列在插值时只带有空格分隔符，所以之后的按空格分割仍旧能工作。（但是内置的  «&hellip;»  引号自动进行了等价于 <code>qq:ww:v/.../</code> 的插值）。 内置的 <code>&lt;...&gt;</code> 等价于 <code>q:w:v/.../</code>。</p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/rakulang" term="rakulang" label="rakulang" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/quote" term="quote" label="quote" />
                            
                        
                    
                
            
        </entry>
    
</feed>

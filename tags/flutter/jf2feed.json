{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003cp\u003eDart 生态系统使用\u003ca href=\"https://dart.dev/guides/packages\"\u003e包\u003c/a\u003e来共享软件，如库和工具。本页告诉你如何创建一个包，重点是最常见的一种包，\u003ca href=\"https://dart.dev/tools/pub/glossary#library-package\"\u003e库包\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"是什么造就了一个库包\"\u003e是什么造就了一个库包\u003c/h2\u003e\n\u003cp\u003e下图是最简单的库包的布局:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://dart.dev/assets/libraries/simple-lib2-81ebdc20fdb53d3abbc4364956141eb0f6f8f275d1636064fc3e1db959b93c1a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e一个库的最低要求是\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003epubspec 文件\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e库的 \u003ccode\u003epubspec.yaml\u003c/code\u003e 文件和应用程序包的文件是一样的-没有特别的名称来表示这个包是一个库。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003elib 目录\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e正如你所期望的那样，库代码存在于 \u003ccode\u003elib\u003c/code\u003e 目录下，对其他包是公开的。你可以根据需要在 \u003ccode\u003elib\u003c/code\u003e 下创建任何层次结构。按照惯例，实现代码被放在 \u003ccode\u003elib/src\u003c/code\u003e 下。\u003ccode\u003elib/src\u003c/code\u003e 下的代码被认为是私有的；其他包不应该需要导入 \u003ccode\u003esrc/...\u003c/code\u003e。要使 \u003ccode\u003elib/src\u003c/code\u003e 下的 API 公开，您可以从直接位于 \u003ccode\u003elib\u003c/code\u003e 下的文件导出 \u003ccode\u003elib/src\u003c/code\u003e 文件。\u003c/p\u003e\n\u003cp\u003e注意：当没有指定 \u003ccode\u003elibrary\u003c/code\u003e 指令时，会根据每个库的路径和文件名为其生成一个唯一的标签。因此，我们建议您从代码中省略 \u003ccode\u003elibrary\u003c/code\u003e 指令，除非您计划\u003ca href=\"https://dart.dev/guides/libraries/create-library-packages#documenting-a-library\"\u003e生成库级文档\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"组织一个库包\"\u003e组织一个库包\u003c/h2\u003e\n\u003cp\u003e当你创建小的、单独的库（称为迷你库）时，库包的维护、扩展和测试是最容易的。在大多数情况下，每个类都应该在自己的迷你库中，除非你有两个类是紧密耦合的情况。\u003c/p\u003e\n\u003cp\u003e注意：你可能听说过 \u003ccode\u003epart\u003c/code\u003e 指令，它允许你将一个库分割成多个 Dart 文件。我们建议你避免使用 \u003ccode\u003epart\u003c/code\u003e 指令，而是创建迷你库。\u003c/p\u003e\n\u003cp\u003e直接在 \u003ccode\u003elib\u003c/code\u003e 下创建一个\u0026quot;主\u0026quot;库文件，\u003ccode\u003elib/\u0026lt;package-name\u0026gt;.dart\u003c/code\u003e，导出所有的公共 API。这样用户就可以通过导入一个文件来获得一个库的所有功能。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003elib\u003c/code\u003e 目录也可能包含其他可导入的、非src的库。例如，也许你的主库可以跨平台使用，但是你创建了单独的库，这些库依赖于 \u003ccode\u003edart:io\u003c/code\u003e 或者 \u003ccode\u003edart:html\u003c/code\u003e。有些包有单独的库，这些库是要用前缀导入的，而主库不是。\u003c/p\u003e\n\u003cp\u003e让我们来看看一个现实世界中的库包的组织： shelf。\u003ca href=\"https://github.com/dart-lang/shelf\"\u003eshelf\u003c/a\u003e 包提供了一种使用 Dart 创建 web 服务器的简单方法，它的布局结构是 Dart 库包常用的:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://dart.dev/assets/libraries/shelf-02e5fd43b660fcef7dbe6a883c40159e0379c8ee2088288ca60ed7dc8781bafd.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e直接在 \u003ccode\u003elib\u003c/code\u003e 下，主库文件 \u003ccode\u003eshelf.dart\u003c/code\u003e 从 \u003ccode\u003elib/src\u003c/code\u003e 导出几个文件:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/cascade.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/handler.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/handlers/logger.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/hijack_exception.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/middleware.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/pipeline.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/request.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/response.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/server.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/server_handler.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eshelf 包还包含一个迷你库： \u003ccode\u003eshelf_io\u003c/code\u003e。这个适配器处理来自 \u003ccode\u003edart:io\u003c/code\u003e 的 \u003ccode\u003eHttpRequest\u003c/code\u003e 对象。\u003c/p\u003e\n\u003cp\u003e对网络应用的提示: 为了在使用 \u003ca href=\"https://dart.dev/tools/dartdevc\"\u003edartdevc\u003c/a\u003e 开发时获得最佳性能，请将\u003ca href=\"https://dart.dev/tools/pub/package-layout#implementation-files\"\u003e实现文件\u003c/a\u003e放在 \u003ccode\u003e/lib/src\u003c/code\u003e 下，而不是放在 \u003ccode\u003e/lib\u003c/code\u003e 下的其他地方。同时，避免导入 \u003ccode\u003epackage:package_name/src/...\u003c/code\u003e 的文件。\u003c/p\u003e\n\u003ch2 id=\"导入库文件\"\u003e导入库文件\u003c/h2\u003e\n\u003cp\u003e当从其他包中导入一个库文件时，使用 \u003ccode\u003epackage:\u003c/code\u003e 指令来指定该文件的 URI。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:utilities/utilities.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当从自己的包中导入一个库文件时，当两个文件都在 lib 内，或者两个文件都在 lib 外时，使用相对路径。使用 \u003ccode\u003e:package\u003c/code\u003e 当导入的文件在 lib 内，而导入者在 lib 外时。\u003c/p\u003e\n\u003cp\u003e下图显示了如何从 lib 和 web 中导入 \u003ccode\u003elib/foo/a.dart\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://dart.dev/assets/libraries/import-lib-rules-e1777e235dd56aa23f770babcccedb6a12be80af2c3e63065640b889d78be595.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch2 id=\"有条件地导入和导出库文件\"\u003e有条件地导入和导出库文件\u003c/h2\u003e\n\u003cp\u003e如果你的库支持多个平台，那么你可能需要有条件地导入或导出库文件。一个常见的用例是一个同时支持 web 和原生平台的库。\u003c/p\u003e\n\u003cp\u003e要有条件的导入或导出，你需要检查 \u003ccode\u003edart:*\u003c/code\u003e 库的存在。下面是一个有条件导出代码的例子，它检查 \u003ccode\u003edart:io\u003c/code\u003e 和 \u003ccode\u003edart:html\u003c/code\u003e 的存在:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/hw_none.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"err\"\u003e/\u003c/span\u003e\u003cspan class=\"err\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003eStub\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eif\u003c/span\u003e \u003cspan class=\"err\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edart\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibrary\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e\u003cspan class=\"err\"\u003e)\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/hw_io.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"err\"\u003e/\u003c/span\u003e\u003cspan class=\"err\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003edart\u003c/span\u003e\u003cspan class=\"err\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eio\u003c/span\u003e \u003cspan class=\"n\"\u003eimplementation\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eif\u003c/span\u003e \u003cspan class=\"err\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003edart\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elibrary\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehtml\u003c/span\u003e\u003cspan class=\"err\"\u003e)\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esrc/hw_html.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// dart:html implementation\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面是这段代码的作用。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在一个可以使用 \u003ccode\u003edart:io\u003c/code\u003e 的应用程序中(例如，一个命令行应用程序)，导出 \u003ccode\u003esrc/hw_io.dart\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e在一个可以使用 \u003ccode\u003edart:html\u003c/code\u003e 的应用程序中(一个 web 应用程序)，导出 \u003ccode\u003esrc/hw_html.dart\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e否则，导出 \u003ccode\u003esrc/hw_none.dart\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要有条件地导入一个文件，使用与上面相同的代码，但将 \u003ccode\u003eexporrt\u003c/code\u003e 改为 \u003ccode\u003eimport\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e注意：有条件的导入或导出只检查库在当前平台上是否可用，而不是检查是否实际导入或使用。\u003c/p\u003e\n\u003cp\u003e所有有条件导出的库都必须实现相同的 API。例如，这里是 \u003ccode\u003edart:io\u003c/code\u003e 的实现:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edart:io\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003ealarm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003estderr\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewriteln\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003etext\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eString\u003c/span\u003e \u003cspan class=\"kd\"\u003eget\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHello World from the VM!\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里是默认的实现，它是一个抛出 UnsupportedErrors 的 stub。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003ealarm\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"kt\"\u003eString\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003eUnsupportedError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehw_none alarm\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003eString\u003c/span\u003e \u003cspan class=\"kd\"\u003eget\u003c/span\u003e \u003cspan class=\"n\"\u003emessage\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003ethrow\u003c/span\u003e \u003cspan class=\"n\"\u003eUnsupportedError\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehw_none message\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在任何平台上，你都可以导入有条件导出代码的库。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:hw_mp/hw_mp.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003emessage\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"提供补充文件\"\u003e提供补充文件\u003c/h2\u003e\n\u003cp\u003e一个设计良好的库包是很容易测试的。我们建议你使用 \u003ca href=\"https://github.com/dart-lang/test\"\u003etest\u003c/a\u003e 包来编写测试，将测试代码放在测试包顶部的 \u003ccode\u003etest\u003c/code\u003e 目录中。\u003c/p\u003e\n\u003cp\u003e如果你创建了任何旨在供公众使用的命令行工具，请将这些工具放在 \u003ccode\u003ebin\u003c/code\u003e 目录下，这是公共的。启用从命令行运行工具，使用 \u003ca href=\"https://dart.dev/tools/pub/cmd/pub-global#activating-a-package\"\u003epub global activate\u003c/a\u003e。将工具列在 pubspec 的\u003ca href=\"https://dart.dev/tools/pub/pubspec#executables\"\u003e可执行文件部分\u003c/a\u003e，允许用户直接运行它，而无需调用 \u003ca href=\"https://dart.dev/tools/pub/cmd/pub-global#running-a-script-using-pub-global-run\"\u003epub global run\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e如果你包含了一个如何使用你的库的例子，这将会很有帮助。这将被放入软件包顶部的 \u003ccode\u003eexample\u003c/code\u003e 目录中。\u003c/p\u003e\n\u003cp\u003e你在开发过程中创建的任何工具或可执行文件，如果不是公开使用的，都会进入 \u003ccode\u003etool\u003c/code\u003e 目录。\u003c/p\u003e\n\u003cp\u003e如果你把你的库发布到 pub.dev 站点，其他需要的文件，如 \u003ccode\u003eREADME.md\u003c/code\u003e 和 \u003ccode\u003eCHANGELOG.md\u003c/code\u003e，将在\u003ca href=\"https://dart.dev/tools/pub/publishing\"\u003e发布软件包\u003c/a\u003e中描述。有关如何组织包目录的更多信息，请参见 \u003ca href=\"https://dart.dev/tools/pub/package-layout\"\u003epub 包布局惯例\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"编写库文档\"\u003e编写库文档\u003c/h2\u003e\n\u003cp\u003e你可以使用 \u003ca href=\"https://github.com/dart-lang/dartdoc#dartdoc\"\u003edartdoc\u003c/a\u003e 工具为你的库生成 API 文档。Dartdoc 解析源码寻找\u003ca href=\"https://dart.dev/guides/language/effective-dart/documentation#doc-comments\"\u003e文档注释\u003c/a\u003e，其中使用了 \u003ccode\u003e///\u003c/code\u003e 语法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"c1\"\u003e/// The event handler responsible for updating the badge in the UI.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003eupdateBadge\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关于生成文档的例子，请看 \u003ca href=\"https://pub.dev/documentation/shelf/latest\"\u003eshelf 文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e注意：要在生成的文档中包含任何库级文档，你必须指定 \u003ccode\u003elibrary\u003c/code\u003e 指令。请参阅 \u003ca href=\"https://github.com/dart-lang/dartdoc/issues/1082\"\u003e问题 1082\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"分发一个开源库\"\u003e分发一个开源库\u003c/h2\u003e\n\u003cp\u003e如果你的库是开源的，我们建议在 \u003ca href=\"https://pub.dev/\"\u003epub.dev\u003c/a\u003e 站点上分享它。要发布或更新库，请使用 \u003ca href=\"https://dart.dev/tools/pub/cmd/pub-lish\"\u003epub publish\u003c/a\u003e，它可以上传您的包并创建或更新其页面。例如，请看 \u003ca href=\"https://pub.dev/packages/shelf\"\u003eshelf 包\u003c/a\u003e的页面。有关如何准备发布软件包的详细信息，请参见\u003ca href=\"https://dart.dev/tools/pub/publishing\"\u003e发布包\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003epub.dev 站点不仅托管您的软件包，而且还生成和托管您软件包的 API 参考文档。最新生成的文档的链接在软件包的 \u003cstrong\u003eAbout\u003c/strong\u003e 框中；例如，请看 shelf 包的 \u003ca href=\"https://pub.dev/documentation/shelf\"\u003eAPI 文档\u003c/a\u003e。到以前版本的文档的链接在软件包页面的版本选项卡中。\u003c/p\u003e\n\u003cp\u003e要确保你的软件包的 API 文档在 pub.dev 网站上看起来不错，请按照以下步骤进行。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在发布你的软件包之前，运行 \u003ca href=\"https://github.com/dart-lang/dartdoc#dartdoc\"\u003edartdoc\u003c/a\u003e 工具，以确保你的 docs 成功生成，并且看起来符合预期。\u003c/li\u003e\n\u003cli\u003e发布软件包后，检查 \u003cstrong\u003eVersions\u003c/strong\u003e 选项卡以确保文档成功生成。\u003c/li\u003e\n\u003cli\u003e如果文档根本没有生成，点击 \u003cstrong\u003eVerrsions\u003c/strong\u003e 选项卡中的 \u003cstrong\u003efailed\u003c/strong\u003e，查看 dartdoc 的输出。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"资源\"\u003e资源\u003c/h2\u003e\n\u003cp\u003e使用以下资源了解更多关于库包的信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/guides/language/language-tour\"\u003e语言之旅\u003c/a\u003e中的\u003ca href=\"https://dart.dev/guides/language/language-tour#libraries-and-visibility\"\u003e库和可见性\u003c/a\u003e包括使用库文件。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/guides/packages\"\u003e包\u003c/a\u003e文档很有用，特别是\u003ca href=\"https://dart.dev/tools/pub/package-layout\"\u003e包的布局约定\u003c/a\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/guides/libraries/private-files\"\u003e不应提交的内容\u003c/a\u003e涵盖了哪些不应该被检查到源代码库中。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/dart-lang\"\u003edart-lang\u003c/a\u003e 组织下的较新的库包倾向于展示最佳实践。可以考虑研究这些例子：\u003ca href=\"https://github.com/dart-lang/dart_style\"\u003edart_style\u003c/a\u003e、\u003ca href=\"https://github.com/dart-lang/path\"\u003epath\u003c/a\u003e、\u003ca href=\"https://github.com/dart-lang/shelf\"\u003eshelf\u003c/a\u003e、\u003ca href=\"https://github.com/dart-lang/source_gen\"\u003esource_gen\u003c/a\u003e 和 \u003ca href=\"https://github.com/dart-lang/test\"\u003etest\u003c/a\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n","text":"Dart 生态系统使用包来共享软件，如库和工具。本页告诉你如何创建一个包，重点是最常见的一种包，库包。\n是什么造就了一个库包 下图是最简单的库包的布局:\n一个库的最低要求是\npubspec 文件\n库的 pubspec.yaml 文件和应用程序包的文件是一样的-没有特别的名称来表示这个包是一个库。\nlib 目录\n正如你所期望的那样，库代码存在于 lib 目录下，对其他包是公开的。你可以根据需要在 lib 下创建任何层次结构。按照惯例，实现代码被放在 lib/src 下。lib/src 下的代码被认为是私有的；其他包不应该需要导入 src/...。要使 lib/src 下的 API 公开，您可以从直接位于 lib 下的文件导出 lib/src 文件。\n注意：当没有指定 library 指令时，会根据每个库的路径和文件名为其生成一个唯一的标签。因此，我们建议您从代码中省略 library 指令，除非您计划生成库级文档。\n组织一个库包 当你创建小的、单独的库（称为迷你库）时，库包的维护、扩展和测试是最容易的。在大多数情况下，每个类都应该在自己的迷你库中，除非你有两个类是紧密耦合的情况。\n注意：你可能听说过 part 指令，它允许你将一个库分割成多个 Dart 文件。我们建议你避免使用 part 指令，而是创建迷你库。\n直接在 lib 下创建一个\u0026quot;主\u0026quot;库文件，lib/\u0026lt;package-name\u0026gt;.dart，导出所有的公共 API。这样用户就可以通过导入一个文件来获得一个库的所有功能。\nlib 目录也可能包含其他可导入的、非src的库。例如，也许你的主库可以跨平台使用，但是你创建了单独的库，这些库依赖于 dart:io 或者 dart:html。有些包有单独的库，这些库是要用前缀导入的，而主库不是。\n让我们来看看一个现实世界中的库包的组织： shelf。shelf 包提供了一种使用 Dart 创建 web 服务器的简单方法，它的布局结构是 Dart 库包常用的:\n直接在 lib 下，主库文件 shelf.dart 从 lib/src 导出几个文件:\nexport \u0026#39;src/cascade.dart\u0026#39;; export \u0026#39;src/handler.dart\u0026#39;; export \u0026#39;src/handlers/logger.dart\u0026#39;; export \u0026#39;src/hijack_exception.dart\u0026#39;; export \u0026#39;src/middleware.dart\u0026#39;; export \u0026#39;src/pipeline.dart\u0026#39;; export \u0026#39;src/request.dart\u0026#39;; export \u0026#39;src/response.dart\u0026#39;; export \u0026#39;src/server.dart\u0026#39;; export \u0026#39;src/server_handler.dart\u0026#39;; shelf 包还包含一个迷你库： shelf_io。这个适配器处理来自 dart:io 的 HttpRequest 对象。\n对网络应用的提示: 为了在使用 dartdevc 开发时获得最佳性能，请将实现文件放在 /lib/src 下，而不是放在 /lib 下的其他地方。同时，避免导入 package:package_name/src/... 的文件。\n导入库文件 当从其他包中导入一个库文件时，使用 package: 指令来指定该文件的 URI。\nimport \u0026#39;package:utilities/utilities.dart\u0026#39;; 当从自己的包中导入一个库文件时，当两个文件都在 lib 内，或者两个文件都在 lib 外时，使用相对路径。使用 :package 当导入的文件在 lib 内，而导入者在 lib 外时。\n下图显示了如何从 lib 和 web 中导入 lib/foo/a.dart。\n有条件地导入和导出库文件 如果你的库支持多个平台，那么你可能需要有条件地导入或导出库文件。一个常见的用例是一个同时支持 web 和原生平台的库。\n要有条件的导入或导出，你需要检查 dart:* 库的存在。下面是一个有条件导出代码的例子，它检查 dart:io 和 dart:html 的存在:\nexport \u0026#39;src/hw_none.dart\u0026#39; // Stub implementation if (dart.library.io) \u0026#39;src/hw_io.dart\u0026#39; // dart:io implementation if (dart.library.html) \u0026#39;src/hw_html.dart\u0026#39;; // dart:html implementation 下面是这段代码的作用。\n 在一个可以使用 dart:io 的应用程序中(例如，一个命令行应用程序)，导出 src/hw_io.dart 在一个可以使用 dart:html 的应用程序中(一个 web 应用程序)，导出 src/hw_html.dart 否则，导出 src/hw_none.dart  要有条件地导入一个文件，使用与上面相同的代码，但将 exporrt 改为 import。\n注意：有条件的导入或导出只检查库在当前平台上是否可用，而不是检查是否实际导入或使用。\n所有有条件导出的库都必须实现相同的 API。例如，这里是 dart:io 的实现:\nimport \u0026#39;dart:io\u0026#39;; void alarm([String text]) { stderr.writeln(text ?? message); } String get message =\u0026gt; \u0026#39;Hello World from the VM!\u0026#39;; 这里是默认的实现，它是一个抛出 UnsupportedErrors 的 stub。\nvoid alarm([String text]) =\u0026gt; throw UnsupportedError(\u0026#39;hw_none alarm\u0026#39;); String get message =\u0026gt; throw UnsupportedError(\u0026#39;hw_none message\u0026#39;); 在任何平台上，你都可以导入有条件导出代码的库。\nimport \u0026#39;package:hw_mp/hw_mp.dart\u0026#39;; void main() { print(message); } 提供补充文件 一个设计良好的库包是很容易测试的。我们建议你使用 test 包来编写测试，将测试代码放在测试包顶部的 test 目录中。\n如果你创建了任何旨在供公众使用的命令行工具，请将这些工具放在 bin 目录下，这是公共的。启用从命令行运行工具，使用 pub global activate。将工具列在 pubspec 的可执行文件部分，允许用户直接运行它，而无需调用 pub global run。\n如果你包含了一个如何使用你的库的例子，这将会很有帮助。这将被放入软件包顶部的 example 目录中。\n你在开发过程中创建的任何工具或可执行文件，如果不是公开使用的，都会进入 tool 目录。\n如果你把你的库发布到 pub.dev 站点，其他需要的文件，如 README.md 和 CHANGELOG.md，将在发布软件包中描述。有关如何组织包目录的更多信息，请参见 pub 包布局惯例。\n编写库文档 你可以使用 dartdoc 工具为你的库生成 API 文档。Dartdoc 解析源码寻找文档注释，其中使用了 /// 语法:\n/// The event handler responsible for updating the badge in the UI. void updateBadge() { ... } 关于生成文档的例子，请看 shelf 文档。\n注意：要在生成的文档中包含任何库级文档，你必须指定 library 指令。请参阅 问题 1082。\n分发一个开源库 如果你的库是开源的，我们建议在 pub.dev 站点上分享它。要发布或更新库，请使用 pub publish，它可以上传您的包并创建或更新其页面。例如，请看 shelf 包的页面。有关如何准备发布软件包的详细信息，请参见发布包。\npub.dev 站点不仅托管您的软件包，而且还生成和托管您软件包的 API 参考文档。最新生成的文档的链接在软件包的 About 框中；例如，请看 shelf 包的 API 文档。到以前版本的文档的链接在软件包页面的版本选项卡中。\n要确保你的软件包的 API 文档在 pub.dev 网站上看起来不错，请按照以下步骤进行。\n 在发布你的软件包之前，运行 dartdoc 工具，以确保你的 docs 成功生成，并且看起来符合预期。 发布软件包后，检查 Versions 选项卡以确保文档成功生成。 如果文档根本没有生成，点击 Verrsions 选项卡中的 failed，查看 dartdoc 的输出。  资源 使用以下资源了解更多关于库包的信息。\n 语言之旅中的库和可见性包括使用库文件。 包文档很有用，特别是包的布局约定。 不应提交的内容涵盖了哪些不应该被检查到源代码库中。 dart-lang 组织下的较新的库包倾向于展示最佳实践。可以考虑研究这些例子：dart_style、path、shelf、source_gen 和 test。  "},"name":"创建包","published":"2020-06-30T00:00:00+08:00","summary":"Creating packages","type":"entry","url":"https://ohmyweekly.github.io/notes/creating-packages/"},{"content":{"html":"\u003cp\u003eDart 生态系统使用包来管理共享软件，如库和工具。要获得 Dart 包，你可以使用 \u003ccode\u003epub\u003c/code\u003e 包管理器。你可以在 \u003ca href=\"https://pub.dev/\"\u003epub.dev\u003c/a\u003e 网站上找到公开的包，也可以从本地文件系统或其他地方加载包，比如 Git 仓库。无论你的包来自哪里，pub 都会管理版本依赖关系，帮助你获得相互之间以及与 SDK 版本兼容的包版本。\u003c/p\u003e\n\u003cp\u003e大多数精通 Dart 的 \u003ca href=\"https://dart.dev/tools#ides-and-editors\"\u003eIDE\u003c/a\u003e 都提供了对 pub 的支持，包括创建、下载、更新和发布包。或者你可以\u003ca href=\"https://dart.dev/tools/pub/cmd\"\u003e在命令行中使用 pub\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e至少，一个 Dart 包是一个包含 \u003ca href=\"https://dart.dev/tools/pub/pubspec\"\u003epubspec 文件\u003c/a\u003e的目录。pubspec 包含一些关于包的元数据。此外，一个包可以包含依赖关系(在 pubspec 中列出)，Dart 库，应用程序，资源，测试，图像和例子。\u003c/p\u003e\n\u003cp\u003e要使用一个包，请执行以下操作:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e创建一个 pubspec(一个名为 \u003ccode\u003epubspec.yaml\u003c/code\u003e 的文件，它列出了软件包的依赖关系，并包含其他元数据，如版本号)。\u003c/li\u003e\n\u003cli\u003e使用 \u003ccode\u003epub\u003c/code\u003e 来获取你的包的依赖关系。\u003c/li\u003e\n\u003cli\u003e如果你的 Dart 代码依赖于软件包中的一个库，则导入该库。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"创建一个-pubspec\"\u003e创建一个 pubspec\u003c/h2\u003e\n\u003cp\u003epubspec 是一个名为 \u003ccode\u003epubspec.yaml\u003c/code\u003e 的文件，它位于你的应用程序的顶级目录中。最简单的 pubspec 只列出了包名:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"nl\"\u003ename:\u003c/span\u003e \u003cspan class=\"n\"\u003emy_app\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面是一个 pubspec 的例子，它声明了两个包(\u003ccode\u003ejs\u003c/code\u003e 和 \u003ccode\u003eintl\u003c/code\u003e)的依赖关系，这两个包都托管在 pub.dev 站点上:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"nl\"\u003ename:\u003c/span\u003e \u003cspan class=\"n\"\u003emy_app\u003c/span\u003e\n\u003cspan class=\"nl\"\u003edependencies:\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003ejs:\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"m\"\u003e0.6\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"m\"\u003e0\u003c/span\u003e\n  \u003cspan class=\"nl\"\u003eintl:\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"m\"\u003e0.15\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"m\"\u003e8\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关于创建 pubspec 的详细信息，请参见 \u003ca href=\"https://dart.dev/tools/pub/pubspec\"\u003epubspec 文档\u003c/a\u003e和你要使用的包的文档。\u003c/p\u003e\n\u003ch2 id=\"获取软件包\"\u003e获取软件包\u003c/h2\u003e\n\u003cp\u003e一旦你有了 pubspec，你就可以从你的应用程序的顶级目录中运行 \u003ccode\u003epub get\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e \u0026lt;path-to-my_app\u0026gt;\n$ pub get\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个过程被称为获取依赖关系。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003epub get\u003c/code\u003e 命令可以确定您的应用程序依赖于哪些软件包，并将它们放在中央\u003ca href=\"https://dart.dev/tools/pub/glossary#system-cache\"\u003e系统缓存\u003c/a\u003e中。如果您的应用程序依赖于已发布的包，pub 会从 \u003ca href=\"https://pub.dev/\"\u003epub.dev\u003c/a\u003e 站点下载该包。对于  \u003ca href=\"https://dart.dev/tools/pub/dependencies#git-packages\"\u003eGit 依赖\u003c/a\u003e，pub 会克隆 Git 仓库。还包括了过渡性依赖。例如，如果 \u003ccode\u003ejs\u003c/code\u003e 包依赖于 \u003ccode\u003etest\u003c/code\u003e 包，\u003ccode\u003epub\u003c/code\u003e 会同时抓取 \u003ccode\u003ejs\u003c/code\u003e 包和 \u003ccode\u003etest\u003c/code\u003e 包。\u003c/p\u003e\n\u003cp\u003ePub 会创建一个 \u003ccode\u003e.packages\u003c/code\u003e 文件(在你的应用程序的顶层目录下)，将你的应用程序所依赖的每个包名映射到系统缓存中的对应包。\u003c/p\u003e\n\u003ch2 id=\"从包中导入库\"\u003e从包中导入库\u003c/h2\u003e\n\u003cp\u003e要导入在包中找到的库，使用 \u003ccode\u003epackage:\u003c/code\u003e 前缀:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:js/js.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"k\"\u003eas\u003c/span\u003e \u003cspan class=\"n\"\u003ejs\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:intl/intl.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDart 运行时在 \u003ccode\u003epackage:\u003c/code\u003e 之后的所有内容都会在应用程序的 \u003ccode\u003e.package\u003c/code\u003e 文件中进行查找。\u003c/p\u003e\n\u003cp\u003e你也可以使用这种风格从你自己的包中导入库。比方说，\u003ccode\u003etransmogrify\u003c/code\u003e 包的布局如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003etransmogrify/\n  lib/\n    transmogrify.dart\n    parser.dart\n  test/\n    parser/\n      parser_test.dart\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eparser_test.dart\u003c/code\u003e 文件可以这样导入 \u003ccode\u003eparser.dart\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:transmogrify/parser.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"升级依赖关系\"\u003e升级依赖关系\u003c/h2\u003e\n\u003cp\u003e当你第一次为你的软件包获取一个新的依赖关系时，pub 会下载与你的其他依赖关系兼容的最新版本。然后，它通过创建一个 \u003cstrong\u003elockfile\u003c/strong\u003e 锁文件来锁定您的软件包，使其始终使用该版本。这是一个名为 \u003ccode\u003epubspec.lock\u003c/code\u003e 的文件，由 pub 创建并存储在 pubspec 的旁边。它列出了您的软件包所使用的每个依赖关系的特定版本 (即时的和过渡的)。\u003c/p\u003e\n\u003cp\u003e如果你的包是一个应用程序包，你应该把这个文件检查到\u003ca href=\"https://dart.dev/guides/libraries/private-files\"\u003e源代码控制\u003c/a\u003e中。这样，在你的应用程序上工作的每个人都会使用所有包的相同版本。在 lockfile 文件中检查也可以确保你部署的应用使用相同版本的代码。\u003c/p\u003e\n\u003cp\u003e当你准备好将你的依赖项升级到最新版本时，使用 \u003ca href=\"https://dart.dev/tools/pub/cmd/pub-upgrade\"\u003epub upgrade\u003c/a\u003e 命令:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epub\u003c/span\u003e \u003cspan class=\"n\"\u003eupgrade\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003epub upgrade\u003c/code\u003e 命令告诉 pub 使用你的包的依赖关系的最新版本来重新生成 lockfile 文件。如果你只想升级一个依赖关系，你可以指定要升级的软件包:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003epub\u003c/span\u003e \u003cspan class=\"n\"\u003eupgrade\u003c/span\u003e \u003cspan class=\"n\"\u003etransmogrify\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该命令将 \u003ccode\u003etransmogrify\u003c/code\u003e 升级到最新版本，但其他一切都保持不变。\u003c/p\u003e\n\u003cp\u003e由于 pubspec 中有冲突的版本限制，\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-upgrade\"\u003epub upgrade\u003c/a\u003e 命令并不能总是将每个软件包升级到最新版本。要识别需要编辑 pubspec 的过期软件包，请使用 \u003ca href=\"https://dart.dev/tools/pub/cmd/pub-outdated\"\u003epub outdated\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"更多信息\"\u003e更多信息\u003c/h2\u003e\n\u003cp\u003e下面的页面有更多关于软件包和 pub 包管理器的信息。\u003c/p\u003e\n\u003cp\u003e如何使用\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/guides/libraries/create-library-packages\"\u003e创建包\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/publishing\"\u003e发布包\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e参考\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/dependencies\"\u003ePub 依赖\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/environment-variables\"\u003ePub 环境变量\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/glossary\"\u003ePub 词汇表\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/package-layout\"\u003ePub 包布局约定\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/versioning\"\u003ePub 版本哲学\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/pubspec\"\u003ePubspec 格式化\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ePub 命令\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003epub\u003c/code\u003e 工具提供了以下命令:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-cache\"\u003epub cache\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-deps\"\u003epub deps\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-downgrade\"\u003epub downgrade\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-get\"\u003epub get\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-global\"\u003epub global\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-outdated\"\u003epub outdated\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-lish\"\u003epub publish\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-run\"\u003epub run\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-upgrade\"\u003epub upgrade\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/tools/pub/cmd/pub-uploader\"\u003epub uploader\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e有关所有 pub 命令的概述，请参阅 \u003ca href=\"https://dart.dev/tools/pub/cmd\"\u003epub 工具文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e疑难解答\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://dart.dev/tools/pub/troubleshoot\"\u003e故障排除 pub\u003c/a\u003e 提供了使用 pub 时可能遇到的问题的解决方案。\u003c/p\u003e\n","text":"Dart 生态系统使用包来管理共享软件，如库和工具。要获得 Dart 包，你可以使用 pub 包管理器。你可以在 pub.dev 网站上找到公开的包，也可以从本地文件系统或其他地方加载包，比如 Git 仓库。无论你的包来自哪里，pub 都会管理版本依赖关系，帮助你获得相互之间以及与 SDK 版本兼容的包版本。\n大多数精通 Dart 的 IDE 都提供了对 pub 的支持，包括创建、下载、更新和发布包。或者你可以在命令行中使用 pub。\n至少，一个 Dart 包是一个包含 pubspec 文件的目录。pubspec 包含一些关于包的元数据。此外，一个包可以包含依赖关系(在 pubspec 中列出)，Dart 库，应用程序，资源，测试，图像和例子。\n要使用一个包，请执行以下操作:\n 创建一个 pubspec(一个名为 pubspec.yaml 的文件，它列出了软件包的依赖关系，并包含其他元数据，如版本号)。 使用 pub 来获取你的包的依赖关系。 如果你的 Dart 代码依赖于软件包中的一个库，则导入该库。  创建一个 pubspec pubspec 是一个名为 pubspec.yaml 的文件，它位于你的应用程序的顶级目录中。最简单的 pubspec 只列出了包名:\nname: my_app 下面是一个 pubspec 的例子，它声明了两个包(js 和 intl)的依赖关系，这两个包都托管在 pub.dev 站点上:\nname: my_app dependencies: js: ^0.6.0 intl: ^0.15.8 关于创建 pubspec 的详细信息，请参见 pubspec 文档和你要使用的包的文档。\n获取软件包 一旦你有了 pubspec，你就可以从你的应用程序的顶级目录中运行 pub get:\n$ cd \u0026lt;path-to-my_app\u0026gt; $ pub get 这个过程被称为获取依赖关系。\npub get 命令可以确定您的应用程序依赖于哪些软件包，并将它们放在中央系统缓存中。如果您的应用程序依赖于已发布的包，pub 会从 pub.dev 站点下载该包。对于 Git 依赖，pub 会克隆 Git 仓库。还包括了过渡性依赖。例如，如果 js 包依赖于 test 包，pub 会同时抓取 js 包和 test 包。\nPub 会创建一个 .packages 文件(在你的应用程序的顶层目录下)，将你的应用程序所依赖的每个包名映射到系统缓存中的对应包。\n从包中导入库 要导入在包中找到的库，使用 package: 前缀:\nimport \u0026#39;package:js/js.dart\u0026#39; as js; import \u0026#39;package:intl/intl.dart\u0026#39;; Dart 运行时在 package: 之后的所有内容都会在应用程序的 .package 文件中进行查找。\n你也可以使用这种风格从你自己的包中导入库。比方说，transmogrify 包的布局如下:\ntransmogrify/ lib/ transmogrify.dart parser.dart test/ parser/ parser_test.dart parser_test.dart 文件可以这样导入 parser.dart:\nimport \u0026#39;package:transmogrify/parser.dart\u0026#39;; 升级依赖关系 当你第一次为你的软件包获取一个新的依赖关系时，pub 会下载与你的其他依赖关系兼容的最新版本。然后，它通过创建一个 lockfile 锁文件来锁定您的软件包，使其始终使用该版本。这是一个名为 pubspec.lock 的文件，由 pub 创建并存储在 pubspec 的旁边。它列出了您的软件包所使用的每个依赖关系的特定版本 (即时的和过渡的)。\n如果你的包是一个应用程序包，你应该把这个文件检查到源代码控制中。这样，在你的应用程序上工作的每个人都会使用所有包的相同版本。在 lockfile 文件中检查也可以确保你部署的应用使用相同版本的代码。\n当你准备好将你的依赖项升级到最新版本时，使用 pub upgrade 命令:\n$ pub upgrade pub upgrade 命令告诉 pub 使用你的包的依赖关系的最新版本来重新生成 lockfile 文件。如果你只想升级一个依赖关系，你可以指定要升级的软件包:\n$ pub upgrade transmogrify 该命令将 transmogrify 升级到最新版本，但其他一切都保持不变。\n由于 pubspec 中有冲突的版本限制，pub upgrade 命令并不能总是将每个软件包升级到最新版本。要识别需要编辑 pubspec 的过期软件包，请使用 pub outdated。\n更多信息 下面的页面有更多关于软件包和 pub 包管理器的信息。\n如何使用\n 创建包 发布包  参考\n Pub 依赖 Pub 环境变量 Pub 词汇表 Pub 包布局约定 Pub 版本哲学 Pubspec 格式化  Pub 命令\npub 工具提供了以下命令:\n pub cache pub deps pub downgrade pub get pub global pub outdated pub publish pub run pub upgrade pub uploader  有关所有 pub 命令的概述，请参阅 pub 工具文档。\n疑难解答\n故障排除 pub 提供了使用 pub 时可能遇到的问题的解决方案。\n"},"name":"如何使用包","published":"2020-06-29T00:00:00+08:00","summary":"Dart 包管理工具 - pub","type":"entry","url":"https://ohmyweekly.github.io/notes/how-to-use-packages/"},{"content":{"html":"\u003cp\u003e本页列出了一些  Dart 开发者发布的最流行和最有用的\u003ca href=\"https://dart.dev/guides/packages\"\u003e包\u003c/a\u003e。要找到更多的软件包\u0026ndash;也可以搜索\u003ca href=\"https://dart.dev/guides/libraries\"\u003e核心库\u003c/a\u003e\u0026ndash;请使用 \u003ca href=\"https://pub.dev/\"\u003epub.dev\u003c/a\u003e 网站。\u003c/p\u003e\n\u003cp\u003e常用的软件包可分为三类:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/guides/libraries/useful-libraries#general-purpose-packages\"\u003e通用包\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/guides/libraries/useful-libraries#packages-that-correspond-to-sdk-libraries\"\u003e扩展 Dart 核心库的包\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dart.dev/guides/libraries/useful-libraries#specialized-packages\"\u003e特定的包\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"通用包\"\u003e通用包\u003c/h2\u003e\n\u003cp\u003e以下包对各种项目都很有用:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e包\u003c/th\u003e\n\u003cth align=\"left\"\u003e描述\u003c/th\u003e\n\u003cth align=\"left\"\u003e常用的 API\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/archive\"\u003earchive\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e对各种档案和压缩格式进行编码和解码。\u003c/td\u003e\n\u003ctd align=\"left\"\u003eArchive, ArchiveFile, TarEncoder, TarDecoder, ZipEncoder, ZipDecoder\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/characters\"\u003echaracters\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e对用户感知的字符进行字符串操作(Unicode 字符簇)\u003c/td\u003e\n\u003ctd align=\"left\"\u003eString.characters, Characters, CharacterRange\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/http\"\u003ehttp\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一组高级的函数和类，使其易于消费 HTTP 资源\u003c/td\u003e\n\u003ctd align=\"left\"\u003edelete(), get(), post(), read()\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/intl\"\u003eintl\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e国际化和本地化设施，支持复数和性别、日期和数字格式化和解析以及双向文本\u003c/td\u003e\n\u003ctd align=\"left\"\u003eBidi, DateFormat, MicroMoney, TextDirection\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/json_serializable\"\u003ejson_serializable\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一个易于使用的代码生成包。更多信息，请参阅 \u003ca href=\"https://dart.dev/guides/json\"\u003eJSON 支持\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e@JsonSerializable\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/logging\"\u003elogging\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一个可配置的机制，为你的应用程序添加消息记录\u003c/td\u003e\n\u003ctd align=\"left\"\u003eLoggerHandler, Level, LogRecord\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/mockito\"\u003emockito\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一个在测试中模拟对象的流行框架。如果你正在编写依赖注入的测试，特别有用。与 \u003ca href=\"https://pub.dev/packages/test\"\u003etest\u003c/a\u003e 包一起使用\u003c/td\u003e\n\u003ctd align=\"left\"\u003eAnswering, Expectation, Verification\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/path\"\u003epath\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e操作不同类型路径的常用操作。更多信息，请参见\u003ca href=\"https://news.dartlang.org/2016/06/unboxing-packages-path.html\"\u003e拆包: path\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eabsolute(), basename(), extension(), join(), normalize(), relative(), split()\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/quiver\"\u003equiver\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e实用工具，使 Dart 核心库的使用更加方便。Quiver 提供额外支持的一些库包括 async、cache、collection、core、iterables、pattern 和 测试\u003c/td\u003e\n\u003ctd align=\"left\"\u003eCountdownTimer (quiver.async); MapCache (quiver.cache); MultiMap, TreeSet (quiver.collection); EnumerateIterable (quiver.iterables); center(), compareIgnoreCase(), isWhiteSpace() (quiver.strings)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/shelf\"\u003eshelf\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eDart 的 Web 服务器中间件。Shelf 使它能轻松地创建和组成 Web 服务器，以及 Web 服务器的一部分\u003c/td\u003e\n\u003ctd align=\"left\"\u003eCascade, Pipeline, Request, Response, Server\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/stack_trace\"\u003estack_trace\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e用于解析、检查和处理由底层 Dart 实现产生的堆栈痕迹的方法。还提供了以比原生 StackTrace 实现更可读的格式生成堆栈跟踪的字符串表示的函数,  更多信息，请参见\u003ca href=\"https://news.dartlang.org/2016/01/unboxing-packages-stacktrace.html\"\u003e拆包: stack_trace\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eTrace.current(), Trace.format(), Trace.from()\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/stagehand\"\u003estagehand\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一个 Dart 项目生成器。当你创建一个新的应用程序时，WebStorm 和 IntelliJ 使用 Stagehand 模板，但你也可以从命令行使用模板\u003c/td\u003e\n\u003ctd align=\"left\"\u003e一般通过 IDE 或 \u003ccode\u003estagehand\u003c/code\u003e 命令来使用\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/test\"\u003etest\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e在 Dart 中编写和运行测试的标准方法\u003c/td\u003e\n\u003ctd align=\"left\"\u003eexpect(), group(), test()\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/yaml\"\u003eyaml\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eYAML 解析器\u003c/td\u003e\n\u003ctd align=\"left\"\u003eloadYaml(), loadYamlStream()\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"扩展-dart-核心库的包\"\u003e扩展 Dart 核心库的包\u003c/h2\u003e\n\u003cp\u003e以下每个包都建立在一个\u003ca href=\"https://dart.dev/guides/libraries\"\u003e核心库\u003c/a\u003e的基础上，增加了功能并填补了缺失的功能:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth align=\"left\"\u003e包\u003c/th\u003e\n\u003cth align=\"left\"\u003e描述\u003c/th\u003e\n\u003cth align=\"left\"\u003e常用的 API\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/async\"\u003easync\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e在 dart:async 的基础上进行了扩展，增加了实用类来处理异步计算。更多信息，请参见\u003ca href=\"https://news.dartlang.org/2016/03/unboxing-packages-async-part-1.html\"\u003e拆包: async 第1部分\u003c/a\u003e、\u003ca href=\"https://news.dartlang.org/2016/03/unboxing-packages-async-part-2.html\"\u003e第2部分\u003c/a\u003e和\u003ca href=\"https://news.dartlang.org/2016/04/unboxing-packages-async-part-3.html\"\u003e第3部分\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eAsyncMemoizer, CancelableOperation, FutureGroup, LazyStream, Result, StreamCompleter, StreamGroup, StreamSplitter\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/collection\"\u003ecollection\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e在 dart:collection 的基础上进行了扩展，增加了实用函数和类，使处理集合的工作变得更加容易。更多信息，请看\u003ca href=\"https://news.dartlang.org/2016/01/unboxing-packages-collection.html\"\u003e拆包：collection\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003eEquality, CanonicalizedMap, MapKeySet, MapValueSet, PriorityQueue, QueueList\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/convert\"\u003econvert\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e在 dart:convert 的基础上，增加了编码器和解码器，用于在不同的数据表现形式之间进行转换。其中一种数据表示方式是百分比编码，也被称为 URL 编码\u003c/td\u003e\n\u003ctd align=\"left\"\u003eHexDecoder, PercentDecoder\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd align=\"left\"\u003e\u003ca href=\"https://pub.dev/packages/io\"\u003eio\u003c/a\u003e\u003c/td\u003e\n\u003ctd align=\"left\"\u003e包含两个库，ansi和io，以简化对文件、标准流和进程的处理。使用 ansi 库可以自定义终端输出。io 库有处理进程、stdin 和文件复制的 API\u003c/td\u003e\n\u003ctd align=\"left\"\u003ecopyPath(), isExecutable(), ExitCode, ProcessManager, sharedStdIn\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"专用包\"\u003e专用包\u003c/h2\u003e\n\u003cp\u003e下面是一些寻找比较专业的包的技巧，比如手机的包(Flutter)和网页开发的包。\u003c/p\u003e\n\u003ch3 id=\"flutter-包\"\u003eFlutter 包\u003c/h3\u003e\n\u003cp\u003e请看 Flutter 网站上的\u003ca href=\"https://flutter.dev/docs/development/packages-and-plugins/using-packages\"\u003e使用包\u003c/a\u003e。或者使用 pub.dev 网站\u003ca href=\"https://pub.dev/flutter\"\u003e搜索 Flutter 包\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"网络包\"\u003e网络包\u003c/h3\u003e\n\u003cp\u003e参见\u003ca href=\"https://dart.dev/web/libraries\"\u003e网络库和包\u003c/a\u003e。或者使用 pub.dev 站点\u003ca href=\"https://pub.dev/web\"\u003e搜索 web 包\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"命令行和服务器软件包\"\u003e命令行和服务器软件包\u003c/h3\u003e\n\u003cp\u003e参见\u003ca href=\"https://dart.dev/server/libraries\"\u003e命令行和服务器库和包\u003c/a\u003e。或者使用 pub.dev 站点\u003ca href=\"https://pub.dev/\"\u003e搜索其他包\u003c/a\u003e。\u003c/p\u003e\n","text":"本页列出了一些 Dart 开发者发布的最流行和最有用的包。要找到更多的软件包\u0026ndash;也可以搜索核心库\u0026ndash;请使用 pub.dev 网站。\n常用的软件包可分为三类:\n 通用包 扩展 Dart 核心库的包 特定的包  通用包 以下包对各种项目都很有用:\n   包 描述 常用的 API     archive 对各种档案和压缩格式进行编码和解码。 Archive, ArchiveFile, TarEncoder, TarDecoder, ZipEncoder, ZipDecoder   characters 对用户感知的字符进行字符串操作(Unicode 字符簇) String.characters, Characters, CharacterRange   http 一组高级的函数和类，使其易于消费 HTTP 资源 delete(), get(), post(), read()   intl 国际化和本地化设施，支持复数和性别、日期和数字格式化和解析以及双向文本 Bidi, DateFormat, MicroMoney, TextDirection   json_serializable 一个易于使用的代码生成包。更多信息，请参阅 JSON 支持 @JsonSerializable   logging 一个可配置的机制，为你的应用程序添加消息记录 LoggerHandler, Level, LogRecord   mockito 一个在测试中模拟对象的流行框架。如果你正在编写依赖注入的测试，特别有用。与 test 包一起使用 Answering, Expectation, Verification   path 操作不同类型路径的常用操作。更多信息，请参见拆包: path absolute(), basename(), extension(), join(), normalize(), relative(), split()   quiver 实用工具，使 Dart 核心库的使用更加方便。Quiver 提供额外支持的一些库包括 async、cache、collection、core、iterables、pattern 和 测试 CountdownTimer (quiver.async); MapCache (quiver.cache); MultiMap, TreeSet (quiver.collection); EnumerateIterable (quiver.iterables); center(), compareIgnoreCase(), isWhiteSpace() (quiver.strings)   shelf Dart 的 Web 服务器中间件。Shelf 使它能轻松地创建和组成 Web 服务器，以及 Web 服务器的一部分 Cascade, Pipeline, Request, Response, Server   stack_trace 用于解析、检查和处理由底层 Dart 实现产生的堆栈痕迹的方法。还提供了以比原生 StackTrace 实现更可读的格式生成堆栈跟踪的字符串表示的函数, 更多信息，请参见拆包: stack_trace Trace.current(), Trace.format(), Trace.from()   stagehand 一个 Dart 项目生成器。当你创建一个新的应用程序时，WebStorm 和 IntelliJ 使用 Stagehand 模板，但你也可以从命令行使用模板 一般通过 IDE 或 stagehand 命令来使用   test 在 Dart 中编写和运行测试的标准方法 expect(), group(), test()   yaml YAML 解析器 loadYaml(), loadYamlStream()    扩展 Dart 核心库的包 以下每个包都建立在一个核心库的基础上，增加了功能并填补了缺失的功能:\n   包 描述 常用的 API     async 在 dart:async 的基础上进行了扩展，增加了实用类来处理异步计算。更多信息，请参见拆包: async 第1部分、第2部分和第3部分 AsyncMemoizer, CancelableOperation, FutureGroup, LazyStream, Result, StreamCompleter, StreamGroup, StreamSplitter   collection 在 dart:collection 的基础上进行了扩展，增加了实用函数和类，使处理集合的工作变得更加容易。更多信息，请看拆包：collection Equality, CanonicalizedMap, MapKeySet, MapValueSet, PriorityQueue, QueueList   convert 在 dart:convert 的基础上，增加了编码器和解码器，用于在不同的数据表现形式之间进行转换。其中一种数据表示方式是百分比编码，也被称为 URL 编码 HexDecoder, PercentDecoder   io 包含两个库，ansi和io，以简化对文件、标准流和进程的处理。使用 ansi 库可以自定义终端输出。io 库有处理进程、stdin 和文件复制的 API copyPath(), isExecutable(), ExitCode, ProcessManager, sharedStdIn    专用包 下面是一些寻找比较专业的包的技巧，比如手机的包(Flutter)和网页开发的包。\nFlutter 包 请看 Flutter 网站上的使用包。或者使用 pub.dev 网站搜索 Flutter 包。\n网络包 参见网络库和包。或者使用 pub.dev 站点搜索 web 包。\n命令行和服务器软件包 参见命令行和服务器库和包。或者使用 pub.dev 站点搜索其他包。\n"},"name":"常用的包","published":"2020-06-29T00:00:00+08:00","summary":"Commonly used packages","type":"entry","url":"https://ohmyweekly.github.io/notes/commonly-used-packages/"},{"content":{"html":"\u003ch2 id=\"介绍\"\u003e介绍\u003c/h2\u003e\n\u003cp\u003eFlutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\u003c/p\u003e\n\u003cp\u003e在这个代码实验室中，你将创建一个简单的手机 Flutter 应用。如果你熟悉面向对象的代码和基本的编程概念-如变量、循环和条件, 那么你就可以完成这个 codelab。你不需要以前有 Dart、手机或 Web 编程的经验。\u003c/p\u003e\n\u003ch3 id=\"你将在第1部分学到什么\"\u003e你将在第1部分学到什么\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？\u003c/li\u003e\n\u003cli\u003eFlutter 应用程序的基本结构。\u003c/li\u003e\n\u003cli\u003e寻找和使用包来扩展功能。\u003c/li\u003e\n\u003cli\u003e使用热重装来加快开发周期。\u003c/li\u003e\n\u003cli\u003e如何实现一个有状态的小组件。\u003c/li\u003e\n\u003cli\u003e如何创建一个无限的、懒加载的列表。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在这个 codelab 的\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/index.html?index=..%2F..%2Findex#0\"\u003e第2部分\u003c/a\u003e中，你将添加交互性，修改应用程序的主题，并添加导航到新页面的能力(在 Flutter 中称为路由)。\u003c/p\u003e\n\u003ch3 id=\"你将在第1部分中构建什么\"\u003e你将在第1部分中构建什么\u003c/h3\u003e\n\u003cp\u003e你将实现一个移动应用，为一家创业公司生成建议的名字。用户可以选择和取消选择名字，保存最好的名字。代码一次懒惰地生成10个名字。随着用户的滚动，会生成更多的名字。用户可以滚动的范围没有限制。\u003c/p\u003e\n\u003cp\u003e下面的 GIF 动画显示了应用程序在完成部分时的工作情况。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/6556f8b61acd6a89.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch2 id=\"设置你的-flutter-环境\"\u003e设置你的 Flutter 环境\u003c/h2\u003e\n\u003cp\u003e你需要两个软件来完成这个实验室-\u003ca href=\"https://flutter.io/get-started/install/\"\u003eFlutter SDK\u003c/a\u003e和\u003ca href=\"https://flutter.io/get-started/editor/\"\u003e一个编辑器\u003c/a\u003e。(codelab 假设你使用 Android Studio，但你可以使用你的首选编辑器。)\u003c/p\u003e\n\u003cp\u003e你可以通过使用以下任何设备来运行 codelab。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个物理的 \u003ca href=\"https://flutter.io/setup-macos/#set-up-your-android-device\"\u003eAndroid\u003c/a\u003e 或 \u003ca href=\"https://flutter.io/setup-macos/#deploy-to-ios-devices\"\u003eiOS\u003c/a\u003e 设备连接到你的计算机并设置为开发者模式。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.io/setup-macos/#set-up-the-ios-simulator\"\u003eiOS 模拟器\u003c/a\u003e(需要安装 Xcode 工具)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.io/setup-macos/#set-up-the-android-emulator\"\u003e安卓模拟器\u003c/a\u003e(需要在 Android Studio 中进行设置)\u003c/li\u003e\n\u003cli\u003e浏览器(调试时需要使用 Chrome 浏览器)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果你想编译你的应用程序以在 web 上运行，你必须启用此功能（目前处于测试阶段）。要启用 web 支持，请使用以下说明。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003eflutter channel beta\nflutter upgrade\nflutter config --enable-web\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你只需要运行一次 \u003ccode\u003econfig\u003c/code\u003e 命令。启用 Web 支持后，你创建的每个 Flutter 应用也会为 Web 编译。在你的 IDE 的\u003cstrong\u003e设备\u003c/strong\u003e下拉菜单下面，或者在命令行使用 \u003ccode\u003eflutter devices\u003c/code\u003e，你现在应该看到 Chrome 和 Web 服务器被列出。\u003cstrong\u003eChrome\u003c/strong\u003e 设备会自动启动 Chrome。Web 服务器会启动一个托管应用程序的服务器，这样你就可以从任何浏览器加载它。在开发过程中使用 \u003cstrong\u003eChrome\u003c/strong\u003e 设备，以便你可以使用 DevTools，而当你要在其他浏览器上进行测试时使用 Web 服务器。有关更多信息，请参阅\u003ca href=\"https://flutter.dev/docs/get-started/web\"\u003e使用 Flutter 构建 Web 应用程序\u003c/a\u003e和\u003ca href=\"https://flutter.dev/docs/get-started/codelab-web\"\u003e在 Web 上编写你的第一个 Flutter 应用程序\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"创建-flutter-应用程序的启动器\"\u003e创建 Flutter 应用程序的启动器\u003c/h2\u003e\n\u003cp\u003e通过使用\u003ca href=\"https://flutter.dev/docs/get-started/test-drive#androidstudio\"\u003e创建应用程序\u003c/a\u003e中的说明来创建一个简单的、模板化的 Flutter 应用程序。输入 \u003ccode\u003estartup_namer\u003c/code\u003e(而不是 \u003ccode\u003eflutter_app\u003c/code\u003e)作为项目名称。您将修改启动器应用程序来创建完成的应用程序。\u003c/p\u003e\n\u003cp\u003e提示：如果你在 IDE 中没有看到能够启动一个新的 Flutter 项目作为一个选项，那么请确保你已经\u003ca href=\"https://flutter.io/get-started/editor/#androidstudio\"\u003e安装了 Flutter 和 Dart 的插件\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e你将主要编辑 \u003ccode\u003elib/main.dart\u003c/code\u003e，Dart 的代码就在这里。\u003c/p\u003e\n\u003cp\u003e替换 \u003ccode\u003elib/main.dart\u003c/code\u003e 的内容。\n删除 \u003ccode\u003elib/main.dart\u003c/code\u003e 中的所有代码，并用下面的代码替换，在屏幕中央显示 \u0026ldquo;Hello World\u0026rdquo;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:flutter/material.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erunApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMyApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eWelcome to Flutter\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eWelcome to Flutter\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eCenter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"nl\"\u003echild:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHello World\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示：当把代码粘贴到你的应用程序中时，缩进会变得歪斜。你可以用以下 Flutter 工具来解决。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAndroid Studio/IntelliJ IDEA: 右键点击 Dart 代码，选择\u003cstrong\u003e用 dartfmt 重格式代码\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003eVS code: 右键点击并选择\u003cstrong\u003e格式化文档\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e终端: 运行 \u003ccode\u003eflutter format \u0026lt;文件名\u0026gt;\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://flutter.io/get-started/test-drive/#androidstudio\"\u003e运行应用程序\u003c/a\u003e。您应该看到 Android，iOS 或 Web 输出，取决于您的设备。\u003c/p\u003e\n\u003cp\u003e安卓系统:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/f9df7832965ede9f.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/20374605026d582.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e小贴士：第一次在物理设备上运行时，可能需要一段时间来加载。之后，你可以使用热重载来快速更新。在支持的 IDE 中，如果应用正在运行，\u003cstrong\u003eSave\u003c/strong\u003e 也会执行热重载。当使用 \u003ccode\u003eflutter run\u003c/code\u003e 直接从控制台运行应用程序时，输入 \u003ccode\u003er\u003c/code\u003e 来执行热重载。\u003c/p\u003e\n\u003cp\u003e观察:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e这个例子创建了一个 Material 应用。\u003ca href=\"https://material.io/guidelines/\"\u003eMaterial\u003c/a\u003e 是一种视觉设计语言，是移动和 Web 的标准。Flutter 提供了一套丰富的 Material 部件。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emain\u003c/code\u003e 方法使用箭头(\u003ccode\u003e=\u0026gt;\u003c/code\u003e)符号。对单行函数或方法使用箭头符号。\u003c/li\u003e\n\u003cli\u003e应用程序扩展了 \u003ccode\u003eStatelessWidget\u003c/code\u003e，这使得应用程序本身成为一个组件。在 Flutter 中，几乎所有的东西都是组件，包括对齐、填充和布局。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eScaffold\u003c/code\u003e 组件来自 Material 库，它提供了一个默认的应用栏、一个标题和一个 body 属性，其中存放着主屏幕的组件树。组件子树可以相当复杂。\u003c/li\u003e\n\u003cli\u003e组件的主要工作是提供一个 \u003ccode\u003ebuild\u003c/code\u003e 方法，描述如何用其他低级组件来显示该组件。\u003c/li\u003e\n\u003cli\u003e本例的主体由包含 \u003ccode\u003eText\u003c/code\u003e 子部件的 \u003ccode\u003eCenter\u003c/code\u003e 部件组成。\u003ccode\u003eCenter\u003c/code\u003e 组件将其组件子树对齐到屏幕的中心。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"使用外部软件包\"\u003e使用外部软件包\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将开始使用一个名为 \u003ccode\u003eenglish_words\u003c/code\u003e 的开源包，它包含了几千个最常用的英语单词，还有一些实用函数。\u003c/p\u003e\n\u003cp\u003e你可以在 \u003ca href=\"https://pub.dev/\"\u003epub.dev\u003c/a\u003e 找到 \u003ccode\u003eenglish_words\u003c/code\u003e 包，以及许多其他开源包。\u003c/p\u003e\n\u003cp\u003epubspec 文件管理着 Flutter 应用的资产。在 \u003ccode\u003epubspec.yaml\u003c/code\u003e 中，附加 \u003ccode\u003eenglish_words: ^3.1.5\u003c/code\u003e(\u003ccode\u003eenglish_words\u003c/code\u003e 3.1.5 或更高)到依赖列表中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"k\"\u003edependencies\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eflutter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003esdk\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eflutter\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003ecupertino_icons\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e^\u003cspan class=\"m\"\u003e0.1\u003c/span\u003e\u003cspan class=\"m\"\u003e.2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eenglish_words\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e^\u003cspan class=\"m\"\u003e3.1\u003c/span\u003e\u003cspan class=\"m\"\u003e.5\u003c/span\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e\u003cspan class=\"c\"\u003e# add this line\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Android Studio 的编辑器视图中查看 pubspec 时，点击 \u003cstrong\u003ePackages get\u003c/strong\u003e。这将把包拉到你的项目中。你应该在控制台中看到以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003eflutter packages get\nRunning \u0026#34;flutter packages get\u0026#34; in startup_namer...\nProcess finished with exit code 0\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e执行 \u003ccode\u003ePub get\u003c/code\u003e 也会自动生成 \u0026ldquo;pubspec.lock\u0026rdquo; 文件，其中包含所有拉入项目的包的列表和它们的版本号。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003elib/main.dart\u003c/code\u003e 中，导入新包:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:flutter/material.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:english_words/english_words.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// Add this line.\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当你输入时，Android Studio 会给你建议导入的库。然后，它将导入的字符串渲染成灰色，让你知道导入的库是未使用的（到目前为止）。\u003c/p\u003e\n\u003cp\u003e接下来，你将使用 \u003ccode\u003eenglish_words\u003c/code\u003e 包来生成文本，而不是使用 \u0026ldquo;Hello World\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e做以下修改。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:flutter/material.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epackage:english_words/english_words.dart\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erunApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMyApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Add this line.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eWelcome to Flutter\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eWelcome to Flutter\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003eCenter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e//child: Text(\u0026#39;Hello World\u0026#39;),   // Replace this text...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"nl\"\u003echild:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// With this text.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示: Pascal 大小写(也称为上驼形大小写)意味着字符串中的每个单词，包括第一个单词，都以大写字母开头。所以，\u003ccode\u003euppercamelcase\u003c/code\u003e 就变成了 \u003ccode\u003eUpperCamelCase\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果应用程序正在运行，热重载来更新正在运行的应用程序。(在命令行中，你可以输入 \u003ccode\u003er\u003c/code\u003e 来热重载。)每次点击热重载或保存项目时，你应该会在运行中的应用程序中看到一个不同的单词对，随机选择。这是因为单词对是在 \u003ccode\u003ebuild\u003c/code\u003e 方法里面生成的，每次 \u003ccode\u003eMaterialApp\u003c/code\u003e 需要渲染时，或者在 Flutter Inspector 中切换 \u003cstrong\u003ePlatform\u003c/strong\u003e 时，都会运行该方法。\u003c/p\u003e\n\u003cp\u003eAndroid:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/57cfbac8f2b50e5b.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/30ed7f83a1500fa9.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"有问题\"\u003e有问题？\u003c/h3\u003e\n\u003cp\u003e如果您的应用程序没有正确运行，请查找错别字。如果需要，请使用以下链接中的代码来恢复正常。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step2_use_package/pubspec.yaml\"\u003epubspec.yaml\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step2_use_package/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"添加一个有状态的组件\"\u003e添加一个有状态的组件\u003c/h2\u003e\n\u003cp\u003e无状态组件是不可改变的，这意味着它们的属性不能改变-所有值都是最终值。\u003c/p\u003e\n\u003cp\u003e有状态组件维护的状态可能在组件的生命周期内发生变化。实现一个有状态的组件至少需要两个类。1) 一个 \u003ca href=\"https://docs.flutter.io/flutter/widgets/StatefulWidget-class.html\"\u003eStatefulWidget\u003c/a\u003e，它可以创建一个 \u003ca href=\"https://docs.flutter.io/flutter/widgets/State-class.html\"\u003eState\u003c/a\u003e 类的实例。\u003ccode\u003eStatefulWidget\u003c/code\u003e 对象本身是不可变的，可以被丢弃和再生，但 \u003ccode\u003eState\u003c/code\u003e 对象会在 widget 的生命周期内持久存在。\u003c/p\u003e\n\u003cp\u003e在这一步骤中，您将添加一个有状态的组件 \u003ccode\u003eRandomWords\u003c/code\u003e，并创建其 \u003ccode\u003eState\u003c/code\u003e 类 \u003ccode\u003e_RandomWordsState\u003c/code\u003e。然后，您将在现有的 MyApp 无状态组件中使用 \u003ccode\u003eRandomWords\u003c/code\u003e 作为子类。\u003c/p\u003e\n\u003cp\u003e为有状态组件创建模板代码。\u003c/p\u003e\n\u003cp\u003e它可以放在 \u003ccode\u003eMyApp\u003c/code\u003e 以外的文件中的任何位置，但解决方案将其放在文件的底部。在 \u003ccode\u003elib/main.dart\u003c/code\u003e 中，将光标定位在所有代码之后，输入回车键几次，重新开始一行。在你的 IDE 中，开始输入 \u003ccode\u003estful\u003c/code\u003e。编辑器会询问你是否要创建一个 \u003ccode\u003eStateful\u003c/code\u003e 的组件。按回车键接受。两个类的模板代码出现了，光标定位让你输入无状态组件的名称。\u003c/p\u003e\n\u003cp\u003e输入 \u003ccode\u003eRandomWords\u003c/code\u003e 作为您的小组件的名称。\u003c/p\u003e\n\u003cp\u003e正如您在下面的代码中所看到的，\u003ccode\u003eRandomWords\u003c/code\u003e 组件除了创建它的 \u003ccode\u003eState\u003c/code\u003e 类之外，几乎没有其他的功能。\u003c/p\u003e\n\u003cp\u003e一旦您输入 \u003ccode\u003eRandomWords\u003c/code\u003e 作为有状态组件的名称，IDE 会自动更新相应的 \u003ccode\u003eState\u003c/code\u003e 类，将其命名为 \u003ccode\u003e_RandomWordState\u003c/code\u003e。默认情况下，\u003ccode\u003eState\u003c/code\u003e 类的名称是以下划线为前缀的。在标识符前加上下划线可以加强 Dart 语言的\u003ca href=\"https://dart.dev/guides/language/language-tour#libraries-and-visibility\"\u003e隐私性\u003c/a\u003e，也是 \u003ccode\u003eState\u003c/code\u003e 对象的最佳实践。\u003c/p\u003e\n\u003cp\u003eIDE 也会自动更新 State 类以扩展 \u003ccode\u003eState\u0026lt;RandomWords\u0026gt;\u003c/code\u003e，表明你正在使用一个专门用于 \u003ccode\u003eRandomWords\u003c/code\u003e 的通用 \u003ca href=\"https://api.flutter.dev/flutter/widgets/State-class.html\"\u003eState\u003c/a\u003e 类。应用程序的大部分逻辑都在这里-它为 \u003ccode\u003eRandomWords\u003c/code\u003e 组件维护状态。这个类保存了生成的词对列表，随着用户的滚动而无限增长，在本实验室的第二部分中，当用户通过切换心形图标从列表中添加或删除这些词对时，该类会对其进行收藏。\u003c/p\u003e\n\u003cp\u003e现在两个类的外观如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRandomWords\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatefulWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"n\"\u003ecreateState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e_RandomWordsState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContainer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更新 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 中的 \u003ccode\u003ebuild()\u003c/code\u003e 方法。\u003c/p\u003e\n\u003cp\u003e用以下两行替换 \u003ccode\u003ereturn Container();\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e                                  \n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e                                         \n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e通过以下修改，删除 \u003ccode\u003eMyApp\u003c/code\u003e 中的文字生成代码:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// DELETE\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eWelcome to Flutter\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eWelcome to Flutter\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003eCenter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e//child: Text(wordPair.asPascalCase), // REPLACE with... \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"nl\"\u003echild:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e// ...this line\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重载应用程序。应用程序应该像以前一样，每次热重载或保存应用程序时都会显示一个单词配对。\u003c/p\u003e\n\u003cp\u003e提示：如果您在热重载时看到警告，表明您可能需要重新启动应用程序，您应该考虑重新启动应用程序。这可能是一个假阳性，但重启可以确保您的更改反映在应用程序的 UI 中。\u003c/p\u003e\n\u003ch3 id=\"遇到问题了\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果您的应用程序没有正确运行，您可以使用以下链接中的代码来恢复正常。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step3_stateful_widget/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"创建一个无限滚动的-listview\"\u003e创建一个无限滚动的 ListView\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将展开 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 来生成并显示单词配对列表。随着用户的滚动，列表（显示在 ListView 小组件中）会无限增长。ListView 中的构建器工厂构造函数允许你按需懒惰地构建一个列表视图。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordState\u003c/code\u003e 类中添加一些状态变量。\u003c/p\u003e\n\u003cp\u003e增加一个 \u003ccode\u003e_suggestions\u003c/code\u003e 列表，用于保存建议的单词配对。另外，添加一个 \u003ccode\u003e_biggerFont\u003c/code\u003e 变量，用于使字体大小变大。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eTextStyle\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTextStyle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003efontSize:\u003c/span\u003e \u003cspan class=\"m\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e接下来，你将在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 类中添加一个 \u003ccode\u003e_buildSuggestions()\u003c/code\u003e 函数。这个方法可以构建显示建议词对的 \u003ccode\u003eListView\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eListView\u003c/code\u003e 类提供了一个构建器属性 \u003ccode\u003eitemBuilder\u003c/code\u003e，它是一个工厂构建器和回调函数，指定为一个匿名函数。两个参数被传递给函数\u0026ndash;\u003ccode\u003eBuildContext\u003c/code\u003e 和行迭代器 \u003ccode\u003ei\u003c/code\u003e。迭代器从0开始，每次调用函数时递增，每一个建议的单词配对都会递增一次。这个模型允许建议列表在用户滚动时继续增长。\u003c/p\u003e\n\u003cp\u003e添加整个 \u003ccode\u003e_buildSuggestions\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 类中，添加以下函数，如果你喜欢，请删除注释:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildSuggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListView\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003epadding:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eEdgeInsets\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"c1\"\u003e// The itemBuilder callback is called once per suggested \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// word pairing, and places each suggestion into a ListTile\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// row. For even rows, the function adds a ListTile row for\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// the word pairing. For odd rows, the function adds a \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// Divider widget to visually separate the entries. Note that\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// the divider may be difficult to see on smaller devices.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nl\"\u003eitemBuilder:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003e_context\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// Add a one-pixel-high divider widget before each row \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// in the ListView.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisOdd\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eDivider\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n        \u003cspan class=\"c1\"\u003e// The syntax \u0026#34;i ~/ 2\u0026#34; divides i by 2 and returns an \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// integer result.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// For example: 1, 2, 3, 4, 5 becomes 0, 1, 1, 2, 2.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// This calculates the actual number of word pairings \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// in the ListView,minus the divider widgets.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// If you\u0026#39;ve reached the end of the available word\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// pairings...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"c1\"\u003e// ...then generate 10 more and add them to the \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"c1\"\u003e// suggestions list.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaddAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egenerateWordPairs\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e_buildSuggestions\u003c/code\u003e 函数对每个词对调用一次 \u003ccode\u003e_buildRow\u003c/code\u003e。该函数在 \u003ccode\u003eListTile\u003c/code\u003e 中显示每一个新的词对，这使得你可以在\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/index.html?index=..%2F..index#0\"\u003e第2部分\u003c/a\u003e中使行更有吸引力。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 中添加一个 \u003ccode\u003e_buildRow\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更新 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 的构建方法。\u003c/p\u003e\n\u003cp\u003e将其改为使用 \u003ccode\u003e_buildSuggestions()\u003c/code\u003e，而不是直接调用单词生成库。(\u003ccode\u003eScaffold\u003c/code\u003e 实现了基本的 Material Design 视觉布局。)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e//final wordPair = WordPair.random(); // Delete these... \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e//return Text(wordPair.asPascalCase); // ... two lines.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e// Add from here... \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eStartup Name Generator\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildSuggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                      \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更新 \u003ccode\u003eMyApp\u003c/code\u003e 的构建方法，更改标题，删除 \u003ccode\u003eAppBar\u003c/code\u003e，并将 home 属性改为 \u003ccode\u003eRandomWords\u003c/code\u003e 部件。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eStartup Name Generator\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e重新启动应用程序。无论你滚动多远，你都应该看到一个单词配对的列表。\u003c/p\u003e\n\u003cp\u003eAndroid:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/df2b3cb779e0020e.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/ae47ef0ac2f492b8.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-1\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step4_infinite_list/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"今后的步骤\"\u003e今后的步骤\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e恭喜你！\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e你已经完成了这个代码实验室的第一部分! 如果你想扩展这款应用，请进入\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/#0\"\u003e第二部分\u003c/a\u003e，你将对应用进行如下修改。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e增加互动性\u003c/li\u003e\n\u003cli\u003e增加导航到新路由的功能。\u003c/li\u003e\n\u003cli\u003e修改主题颜色。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当第2部分完成后，应用程序将是这样的：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/7fcab088cd22cff7.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"其他后续步骤\"\u003e其他后续步骤\u003c/h3\u003e\n\u003cp\u003e通过以下资源了解更多关于 Flutter SDK 的信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/layout\"\u003eFlutter 中的布局\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/interactive\"\u003e增加互动性教程\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/widgets-intro\"\u003e组件介绍\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/android-devs\"\u003e为 Android 开发者提供的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/react-native-devs\"\u003e针对 React Native 开发者的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/web-devs\"\u003eWeb 开发人员的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/flutterdev\"\u003eFlutter YouTube 频道\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e其他资源包括以下几点:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\"\u003e用 Flutter 构建本地移动应用\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codelabs.developers.google.com/codelabs/from-java-to-dart/#1\"\u003e从 Java 到 Dart codelab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/cookbook/\"\u003eFlutter cookbook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/bootstrap-into-dart/\"\u003e融入 Dart 的 Bootstrap：了解更多关于这门语言的信息\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e同时，\u003ca href=\"https://flutter.dev/community\"\u003e与 Flutter 社区联系起来!\u003c/a\u003e\u003c/p\u003e\n","text":"介绍 Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\n在这个代码实验室中，你将创建一个简单的手机 Flutter 应用。如果你熟悉面向对象的代码和基本的编程概念-如变量、循环和条件, 那么你就可以完成这个 codelab。你不需要以前有 Dart、手机或 Web 编程的经验。\n你将在第1部分学到什么  如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？ Flutter 应用程序的基本结构。 寻找和使用包来扩展功能。 使用热重装来加快开发周期。 如何实现一个有状态的小组件。 如何创建一个无限的、懒加载的列表。  在这个 codelab 的第2部分中，你将添加交互性，修改应用程序的主题，并添加导航到新页面的能力(在 Flutter 中称为路由)。\n你将在第1部分中构建什么 你将实现一个移动应用，为一家创业公司生成建议的名字。用户可以选择和取消选择名字，保存最好的名字。代码一次懒惰地生成10个名字。随着用户的滚动，会生成更多的名字。用户可以滚动的范围没有限制。\n下面的 GIF 动画显示了应用程序在完成部分时的工作情况。\n设置你的 Flutter 环境 你需要两个软件来完成这个实验室-Flutter SDK和一个编辑器。(codelab 假设你使用 Android Studio，但你可以使用你的首选编辑器。)\n你可以通过使用以下任何设备来运行 codelab。\n 一个物理的 Android 或 iOS 设备连接到你的计算机并设置为开发者模式。 iOS 模拟器(需要安装 Xcode 工具) 安卓模拟器(需要在 Android Studio 中进行设置) 浏览器(调试时需要使用 Chrome 浏览器)  如果你想编译你的应用程序以在 web 上运行，你必须启用此功能（目前处于测试阶段）。要启用 web 支持，请使用以下说明。\nflutter channel beta flutter upgrade flutter config --enable-web 你只需要运行一次 config 命令。启用 Web 支持后，你创建的每个 Flutter 应用也会为 Web 编译。在你的 IDE 的设备下拉菜单下面，或者在命令行使用 flutter devices，你现在应该看到 Chrome 和 Web 服务器被列出。Chrome 设备会自动启动 Chrome。Web 服务器会启动一个托管应用程序的服务器，这样你就可以从任何浏览器加载它。在开发过程中使用 Chrome 设备，以便你可以使用 DevTools，而当你要在其他浏览器上进行测试时使用 Web 服务器。有关更多信息，请参阅使用 Flutter 构建 Web 应用程序和在 Web 上编写你的第一个 Flutter 应用程序。\n创建 Flutter 应用程序的启动器 通过使用创建应用程序中的说明来创建一个简单的、模板化的 Flutter 应用程序。输入 startup_namer(而不是 flutter_app)作为项目名称。您将修改启动器应用程序来创建完成的应用程序。\n提示：如果你在 IDE 中没有看到能够启动一个新的 Flutter 项目作为一个选项，那么请确保你已经安装了 Flutter 和 Dart 的插件。\n你将主要编辑 lib/main.dart，Dart 的代码就在这里。\n替换 lib/main.dart 的内容。 删除 lib/main.dart 中的所有代码，并用下面的代码替换，在屏幕中央显示 \u0026ldquo;Hello World\u0026rdquo;。\nimport \u0026#39;package:flutter/material.dart\u0026#39;; void main() =\u0026gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( title: \u0026#39;Welcome to Flutter\u0026#39;, home: Scaffold( appBar: AppBar( title: const Text(\u0026#39;Welcome to Flutter\u0026#39;), ), body: const Center( child: const Text(\u0026#39;Hello World\u0026#39;), ), ), ); } } 提示：当把代码粘贴到你的应用程序中时，缩进会变得歪斜。你可以用以下 Flutter 工具来解决。\n Android Studio/IntelliJ IDEA: 右键点击 Dart 代码，选择用 dartfmt 重格式代码。 VS code: 右键点击并选择格式化文档。 终端: 运行 flutter format \u0026lt;文件名\u0026gt;。  运行应用程序。您应该看到 Android，iOS 或 Web 输出，取决于您的设备。\n安卓系统:\niOS:\n小贴士：第一次在物理设备上运行时，可能需要一段时间来加载。之后，你可以使用热重载来快速更新。在支持的 IDE 中，如果应用正在运行，Save 也会执行热重载。当使用 flutter run 直接从控制台运行应用程序时，输入 r 来执行热重载。\n观察:\n 这个例子创建了一个 Material 应用。Material 是一种视觉设计语言，是移动和 Web 的标准。Flutter 提供了一套丰富的 Material 部件。 main 方法使用箭头(=\u0026gt;)符号。对单行函数或方法使用箭头符号。 应用程序扩展了 StatelessWidget，这使得应用程序本身成为一个组件。在 Flutter 中，几乎所有的东西都是组件，包括对齐、填充和布局。 Scaffold 组件来自 Material 库，它提供了一个默认的应用栏、一个标题和一个 body 属性，其中存放着主屏幕的组件树。组件子树可以相当复杂。 组件的主要工作是提供一个 build 方法，描述如何用其他低级组件来显示该组件。 本例的主体由包含 Text 子部件的 Center 部件组成。Center 组件将其组件子树对齐到屏幕的中心。  使用外部软件包 在这一步中，您将开始使用一个名为 english_words 的开源包，它包含了几千个最常用的英语单词，还有一些实用函数。\n你可以在 pub.dev 找到 english_words 包，以及许多其他开源包。\npubspec 文件管理着 Flutter 应用的资产。在 pubspec.yaml 中，附加 english_words: ^3.1.5(english_words 3.1.5 或更高)到依赖列表中。\ndependencies:flutter:sdk:fluttercupertino_icons:^0.1.2english_words:^3.1.5# add this line在 Android Studio 的编辑器视图中查看 pubspec 时，点击 Packages get。这将把包拉到你的项目中。你应该在控制台中看到以下内容。\nflutter packages get Running \u0026#34;flutter packages get\u0026#34; in startup_namer... Process finished with exit code 0 执行 Pub get 也会自动生成 \u0026ldquo;pubspec.lock\u0026rdquo; 文件，其中包含所有拉入项目的包的列表和它们的版本号。\n在 lib/main.dart 中，导入新包:\nimport \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:english_words/english_words.dart\u0026#39;; // Add this line. 当你输入时，Android Studio 会给你建议导入的库。然后，它将导入的字符串渲染成灰色，让你知道导入的库是未使用的（到目前为止）。\n接下来，你将使用 english_words 包来生成文本，而不是使用 \u0026ldquo;Hello World\u0026rdquo;。\n做以下修改。\nimport \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:english_words/english_words.dart\u0026#39;; void main() =\u0026gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { final wordPair = WordPair.random(); // Add this line.  return MaterialApp( title: \u0026#39;Welcome to Flutter\u0026#39;, home: Scaffold( appBar: AppBar( title: Text(\u0026#39;Welcome to Flutter\u0026#39;), ), body: Center( //child: Text(\u0026#39;Hello World\u0026#39;), // Replace this text...  child: Text(wordPair.asPascalCase), // With this text.  ), ), ); } } 提示: Pascal 大小写(也称为上驼形大小写)意味着字符串中的每个单词，包括第一个单词，都以大写字母开头。所以，uppercamelcase 就变成了 UpperCamelCase。\n如果应用程序正在运行，热重载来更新正在运行的应用程序。(在命令行中，你可以输入 r 来热重载。)每次点击热重载或保存项目时，你应该会在运行中的应用程序中看到一个不同的单词对，随机选择。这是因为单词对是在 build 方法里面生成的，每次 MaterialApp 需要渲染时，或者在 Flutter Inspector 中切换 Platform 时，都会运行该方法。\nAndroid:\niOS:\n有问题？ 如果您的应用程序没有正确运行，请查找错别字。如果需要，请使用以下链接中的代码来恢复正常。\n pubspec.yaml lib/main.dart  添加一个有状态的组件 无状态组件是不可改变的，这意味着它们的属性不能改变-所有值都是最终值。\n有状态组件维护的状态可能在组件的生命周期内发生变化。实现一个有状态的组件至少需要两个类。1) 一个 StatefulWidget，它可以创建一个 State 类的实例。StatefulWidget 对象本身是不可变的，可以被丢弃和再生，但 State 对象会在 widget 的生命周期内持久存在。\n在这一步骤中，您将添加一个有状态的组件 RandomWords，并创建其 State 类 _RandomWordsState。然后，您将在现有的 MyApp 无状态组件中使用 RandomWords 作为子类。\n为有状态组件创建模板代码。\n它可以放在 MyApp 以外的文件中的任何位置，但解决方案将其放在文件的底部。在 lib/main.dart 中，将光标定位在所有代码之后，输入回车键几次，重新开始一行。在你的 IDE 中，开始输入 stful。编辑器会询问你是否要创建一个 Stateful 的组件。按回车键接受。两个类的模板代码出现了，光标定位让你输入无状态组件的名称。\n输入 RandomWords 作为您的小组件的名称。\n正如您在下面的代码中所看到的，RandomWords 组件除了创建它的 State 类之外，几乎没有其他的功能。\n一旦您输入 RandomWords 作为有状态组件的名称，IDE 会自动更新相应的 State 类，将其命名为 _RandomWordState。默认情况下，State 类的名称是以下划线为前缀的。在标识符前加上下划线可以加强 Dart 语言的隐私性，也是 State 对象的最佳实践。\nIDE 也会自动更新 State 类以扩展 State\u0026lt;RandomWords\u0026gt;，表明你正在使用一个专门用于 RandomWords 的通用 State 类。应用程序的大部分逻辑都在这里-它为 RandomWords 组件维护状态。这个类保存了生成的词对列表，随着用户的滚动而无限增长，在本实验室的第二部分中，当用户通过切换心形图标从列表中添加或删除这些词对时，该类会对其进行收藏。\n现在两个类的外观如下:\nclass RandomWords extends StatefulWidget { @override _RandomWordsState createState() =\u0026gt; _RandomWordsState(); } class _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { @override Widget build(BuildContext context) { return Container(); } } 更新 _RandomWordsState 中的 build() 方法。\n用以下两行替换 return Container();:\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { @override Widget build(BuildContext context) { final wordPair = WordPair.random(); // NEW  return Text(wordPair.asPascalCase); // NEW  } } 通过以下修改，删除 MyApp 中的文字生成代码:\nclass MyApp extends StatelessWidget { @override Widget build(BuildContext context) { final wordPair = WordPair.random(); // DELETE  return MaterialApp( title: \u0026#39;Welcome to Flutter\u0026#39;, home: Scaffold( appBar: AppBar( title: Text(\u0026#39;Welcome to Flutter\u0026#39;), ), body: Center( //child: Text(wordPair.asPascalCase), // REPLACE with...  child: RandomWords(), // ...this line  ), ), ); } } 热重载应用程序。应用程序应该像以前一样，每次热重载或保存应用程序时都会显示一个单词配对。\n提示：如果您在热重载时看到警告，表明您可能需要重新启动应用程序，您应该考虑重新启动应用程序。这可能是一个假阳性，但重启可以确保您的更改反映在应用程序的 UI 中。\n遇到问题了？ 如果您的应用程序没有正确运行，您可以使用以下链接中的代码来恢复正常。\n lib/main.dart  创建一个无限滚动的 ListView 在这一步中，您将展开 _RandomWordsState 来生成并显示单词配对列表。随着用户的滚动，列表（显示在 ListView 小组件中）会无限增长。ListView 中的构建器工厂构造函数允许你按需懒惰地构建一个列表视图。\n在 _RandomWordState 类中添加一些状态变量。\n增加一个 _suggestions 列表，用于保存建议的单词配对。另外，添加一个 _biggerFont 变量，用于使字体大小变大。\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { final List\u0026lt;WordPair\u0026gt; _suggestions = \u0026lt;WordPair\u0026gt;[]; // NEW  final TextStyle _biggerFont = const TextStyle(fontSize: 18); // NEW  ... } 接下来，你将在 _RandomWordsState 类中添加一个 _buildSuggestions() 函数。这个方法可以构建显示建议词对的 ListView。\nListView 类提供了一个构建器属性 itemBuilder，它是一个工厂构建器和回调函数，指定为一个匿名函数。两个参数被传递给函数\u0026ndash;BuildContext 和行迭代器 i。迭代器从0开始，每次调用函数时递增，每一个建议的单词配对都会递增一次。这个模型允许建议列表在用户滚动时继续增长。\n添加整个 _buildSuggestions 函数。\n在 _RandomWordsState 类中，添加以下函数，如果你喜欢，请删除注释:\nWidget _buildSuggestions() { return ListView.builder( padding: const EdgeInsets.all(16), // The itemBuilder callback is called once per suggested  // word pairing, and places each suggestion into a ListTile  // row. For even rows, the function adds a ListTile row for  // the word pairing. For odd rows, the function adds a  // Divider widget to visually separate the entries. Note that  // the divider may be difficult to see on smaller devices.  itemBuilder: (BuildContext _context, int i) { // Add a one-pixel-high divider widget before each row  // in the ListView.  if (i.isOdd) { return Divider(); } // The syntax \u0026#34;i ~/ 2\u0026#34; divides i by 2 and returns an  // integer result.  // For example: 1, 2, 3, 4, 5 becomes 0, 1, 1, 2, 2.  // This calculates the actual number of word pairings  // in the ListView,minus the divider widgets.  final int index = i ~/ 2; // If you\u0026#39;ve reached the end of the available word  // pairings...  if (index \u0026gt;= _suggestions.length) { // ...then generate 10 more and add them to the  // suggestions list.  _suggestions.addAll(generateWordPairs().take(10)); } return _buildRow(_suggestions[index]); } ); } _buildSuggestions 函数对每个词对调用一次 _buildRow。该函数在 ListTile 中显示每一个新的词对，这使得你可以在第2部分中使行更有吸引力。\n在 _RandomWordsState 中添加一个 _buildRow 函数。\nWidget _buildRow(WordPair pair) { return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), ); } 更新 _RandomWordsState 的构建方法。\n将其改为使用 _buildSuggestions()，而不是直接调用单词生成库。(Scaffold 实现了基本的 Material Design 视觉布局。)\n@override Widget build(BuildContext context) { //final wordPair = WordPair.random(); // Delete these...  //return Text(wordPair.asPascalCase); // ... two lines.  return Scaffold ( // Add from here...  appBar: AppBar( title: Text(\u0026#39;Startup Name Generator\u0026#39;), ), body: _buildSuggestions(), ); // ... to here.  } 更新 MyApp 的构建方法，更改标题，删除 AppBar，并将 home 属性改为 RandomWords 部件。\n@override Widget build(BuildContext context) { return MaterialApp( title: \u0026#39;Startup Name Generator\u0026#39;, home: RandomWords(), ); } 重新启动应用程序。无论你滚动多远，你都应该看到一个单词配对的列表。\nAndroid:\niOS:\n遇到问题了？ 如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\n lib/main.dart  今后的步骤 恭喜你！\n你已经完成了这个代码实验室的第一部分! 如果你想扩展这款应用，请进入第二部分，你将对应用进行如下修改。\n 增加互动性 增加导航到新路由的功能。 修改主题颜色。  当第2部分完成后，应用程序将是这样的：\n其他后续步骤 通过以下资源了解更多关于 Flutter SDK 的信息。\n Flutter 中的布局 增加互动性教程 组件介绍 为 Android 开发者提供的 Flutter 针对 React Native 开发者的 Flutter Web 开发人员的 Flutter Flutter YouTube 频道  其他资源包括以下几点:\n 用 Flutter 构建本地移动应用 从 Java 到 Dart codelab Flutter cookbook 融入 Dart 的 Bootstrap：了解更多关于这门语言的信息  同时，与 Flutter 社区联系起来!\n"},"name":"编写你的第一个 Flutter 应用，第一部分","published":"2020-06-26T00:00:00+08:00","summary":"Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起使用，被世界各地的开发者和组织使用，并且是免费和开源的。","type":"entry","url":"https://ohmyweekly.github.io/notes/write-your-first-flutter-app/"},{"content":{"html":"\u003ch2 id=\"介绍\"\u003e介绍\u003c/h2\u003e\n\u003cp\u003eFlutter 是 Google 的 UI 工具包，用于从单一代码库中为移动、Web 和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\u003c/p\u003e\n\u003cp\u003e在这个代码实验室中，您将扩展一个基本的、移动的 Flutter 应用程序，以包含交互性。您还将创建一个用户可以导航到的第二个页面（称为路由）。最后，您将修改应用程序的主题（颜色）。这个代码实验室扩展了第1部分，在这部分中，你将\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/\"\u003e创建一个无限的懒惰加载的列表\u003c/a\u003e，但如果你想从第2部分开始，我们将提供起始代码。\u003c/p\u003e\n\u003ch3 id=\"你将在第二部分学到什么\"\u003e你将在第二部分学到什么\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？\u003c/li\u003e\n\u003cli\u003e如何使用热重装，加快开发周期？\u003c/li\u003e\n\u003cli\u003e如何为有状态的 widget 添加交互性？\u003c/li\u003e\n\u003cli\u003e如何创建并导航到第二个屏幕？\u003c/li\u003e\n\u003cli\u003e如何使用主题来改变应用程序的外观？\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"你将在第二部分建立什么\"\u003e你将在第二部分建立什么\u003c/h3\u003e\n\u003cp\u003e您将从一个简单的移动应用程序开始，为创业公司生成一个无尽的建议名称列表。在代码实验室结束时，您的最终用户可以选择和取消选择名称，保存最好的名称。点击应用栏右上角的列表图标可以导航到一个新的页面（称为路由），该页面只列出了最喜欢的名字。\u003c/p\u003e\n\u003cp\u003e下面的 GIF 动画显示了完成的应用程序将如何工作。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/7fcab088cd22cff7.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch2 id=\"设置您的-flutter-环境\"\u003e设置您的 Flutter 环境\u003c/h2\u003e\n\u003cp\u003e如果你还没有完成第1部分，请看\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/#1\"\u003e设置你的 Flutter 环境\u003c/a\u003e，在\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/\"\u003e编写你的第一个Flutter应用，第1部分\u003c/a\u003e，设置你的 Flutter 开发环境。\u003c/p\u003e\n\u003ch2 id=\"获取启动应用程序\"\u003e获取启动应用程序\u003c/h2\u003e\n\u003cp\u003e如果你已经完成了这个 codelab 的第一部分，你已经有了启动应用程序，\u003ccode\u003estartup_namer\u003c/code\u003e。你可以进行下一步。\u003c/p\u003e\n\u003cp\u003e如果你没有 \u003ccode\u003estartup_namer\u003c/code\u003e，不要害怕，你可以使用下面的说明得到它。\u003c/p\u003e\n\u003cp\u003e使用\u003ca href=\"https://flutter.dev/get-started/test-drive/#create-app\"\u003e创建应用程序\u003c/a\u003e中的说明创建一个简单的模板化 Flutter 应用程序。将项目命名为 \u003ccode\u003estartup_namer\u003c/code\u003e（而不是 \u003ccode\u003eflutter_app\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e删除 \u003ccode\u003elib/main.dart\u003c/code\u003e 中的所有代码。用这个\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step4_infinite_list/lib/main.dart\"\u003e文件\u003c/a\u003e中的代码替换，它显示了一个无限的，懒惰加载的建议启动名称列表。\u003c/p\u003e\n\u003cp\u003e更新 \u003ccode\u003epubspec.yaml\u003c/code\u003e，加入英文单词包。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"k\"\u003edependencies\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eflutter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003esdk\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003eflutter\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003ecupertino_icons\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e^\u003cspan class=\"m\"\u003e0.1\u003c/span\u003e\u003cspan class=\"m\"\u003e.2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"k\"\u003eenglish_words\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e^\u003cspan class=\"m\"\u003e3.1\u003c/span\u003e\u003cspan class=\"m\"\u003e.5\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e//\u003cspan class=\"w\"\u003e \u003c/span\u003eNEW\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e英文单词包会生成一对随机的单词，作为潜在的启动名称。\u003c/p\u003e\n\u003cp\u003e在 Android Studio 的编辑器视图中查看 pubspec 时，点击右上角的 \u003cstrong\u003ePub get\u003c/strong\u003e，这将包拉到你的项目中。你应该在控制台中看到以下内容:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003eflutter pub get\nRunning \u003cspan class=\"s2\"\u003e\u0026#34;flutter pub get\u0026#34;\u003c/span\u003e in startup_namer...\nProcess finished with \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e code \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行该应用。\u003c/p\u003e\n\u003cp\u003e随意滚动，查看持续供应的拟创业公司名称。\u003c/p\u003e\n\u003ch2 id=\"将图标添加到列表中\"\u003e将图标添加到列表中\u003c/h2\u003e\n\u003cp\u003e在这一步中，你将为每一行添加心形图标。在下一步中，您将使它们可点击并保存收藏夹。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 中添加一个 \u003ccode\u003e_saved\u003c/code\u003e Set。这个 \u003ccode\u003eSet\u003c/code\u003e 存储了用户收藏的单词配对。\u003ccode\u003eSet\u003c/code\u003e 比 \u003ccode\u003eList\u003c/code\u003e 更受欢迎，因为一个正确实现的 \u003ccode\u003eSet\u003c/code\u003e 不允许重复的条目。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSet\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextStyle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003efontSize:\u003c/span\u003e \u003cspan class=\"m\"\u003e18.0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 \u003ccode\u003e_buildRow\u003c/code\u003e 函数中，添加一个 \u003ccode\u003ealreadySaved\u003c/code\u003e 检查，以确保一个单词配对还没有被添加到收藏夹中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 \u003ccode\u003e_buildRow()\u003c/code\u003e 中，你还将为 \u003ccode\u003eListTile\u003c/code\u003e 对象添加心形图标以实现收藏夹。在下一步中，你将添加与心形图标交互的功能。\u003c/p\u003e\n\u003cp\u003e在文本之后添加图标，如下图所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etrailing:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// NEW from here... \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite_border\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ecolor:\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eColors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ered\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e                \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重新加载应用程序。\u003c/p\u003e\n\u003cp\u003e你现在应该看到每一行都有空心，但它们还没有互动。\u003c/p\u003e\n\u003cp\u003eAndroid\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/819e2ff89da9421a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/4df48933551e7c48.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step5_add_icons/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"增加互动性\"\u003e增加互动性\u003c/h2\u003e\n\u003cp\u003e在这一步中，你将使心形图标可以点击。当用户点击列表中的一个条目，切换其收藏状态时，该词对就会从一组保存的收藏夹中添加或删除。\u003c/p\u003e\n\u003cp\u003e要做到这一点，你将修改 \u003ccode\u003e_buildRow\u003c/code\u003e 函数。如果一个词条已经被添加到收藏夹中，再次点击它就会将其从收藏夹中删除。当一个磁贴被点击后，函数会调用 \u003ccode\u003esetState()\u003c/code\u003e 来通知框架状态已经改变。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_buildRow\u003c/code\u003e 方法中加入 \u003ccode\u003eonTap\u003c/code\u003e，如下图所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etrailing:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite_border\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ecolor:\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eColors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ered\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003eonTap:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// NEW lines from here...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"n\"\u003esetState\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n          \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \n      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e               \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示：在 Flutter 的反应式框架中，调用 \u003ccode\u003esetState()\u003c/code\u003e 会触发对 \u003ccode\u003eState\u003c/code\u003e 对象的 \u003ccode\u003ebuild()\u003c/code\u003e 方法的调用，导致 UI 的更新。\u003c/p\u003e\n\u003cp\u003e热重载应用。\u003c/p\u003e\n\u003cp\u003e你应该能够点击任何磁贴来收藏或不收藏该条目。点击瓷砖会产生一个隐含的从点击点发出的泼墨动画。\u003c/p\u003e\n\u003cp\u003eAndroid\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/43dfc7ba5f728e8f.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/e7a99a1b94bea7d4.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-1\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step6_add_interactivity/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"导航到一个新的屏幕\"\u003e导航到一个新的屏幕\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将添加一个新的页面（在 Flutter 中称为路由），显示收藏夹。您将学习如何在主页路线和新路由之间进行导航。\u003c/p\u003e\n\u003cp\u003e在 Flutter 中，\u003ccode\u003eNavigator\u003c/code\u003e 管理着一个包含应用程序路由的堆栈。将一个路由推到 \u003ccode\u003eNavigator\u003c/code\u003e 的堆栈上，会将显示更新到该路由。从 \u003ccode\u003eNavigator\u003c/code\u003e 的堆栈中弹出一条路由，会将显示返回到之前的路由。\u003c/p\u003e\n\u003cp\u003e接下来，您将在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 的 \u003ccode\u003ebuild\u003c/code\u003e 方法中为 \u003ccode\u003eAppBar\u003c/code\u003e 添加一个列表图标。当用户点击列表图标时，一个包含保存的收藏夹的新路由会被推送到 \u003ccode\u003eNavigator\u003c/code\u003e，显示图标。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003ebuild\u003c/code\u003e 方法中添加图标及其对应的操作:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eStartup Name Generator\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003eactions:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e              \u003cspan class=\"c1\"\u003e// NEW lines from here...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003eIconButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eicon:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nl\"\u003eonPressed:\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e                      \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示：一些小组件属性会取一个小组件(\u003ccode\u003echild\u003c/code\u003e)，而其他属性，如 \u003ccode\u003eaction\u003c/code\u003e，会取一组小组件(\u003ccode\u003echildren\u003c/code\u003e), 如方括号(\u003ccode\u003e[]\u003c/code\u003e)所示。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 类中添加一个 \u003ccode\u003e_pushSaved()\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重新加载应用程序。\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/a114478ae13b853.png\"\u003e列表图标\u003c/a\u003e出现在应用栏中。点击它还没有任何作用，因为 \u003ccode\u003e_pushSaved\u003c/code\u003e 函数是空的。\u003c/p\u003e\n\u003cp\u003e接下来，你将建立一条路由，并将其推送到 \u003ccode\u003eNavigator\u003c/code\u003e 的栈中。这个操作会改变屏幕以显示新的路由。新页面的内容是在 \u003ccode\u003eMaterialPageRoute\u003c/code\u003e 的构建器属性中以匿名函数的方式构建的。\u003c/p\u003e\n\u003cp\u003e调用 \u003ccode\u003eNavigator.push\u003c/code\u003e，如下图所示，它将路由推送到 \u003ccode\u003eNavigator\u003c/code\u003e 的堆栈中。IDE 会抱怨无效代码，但你会在下一节中解决这个问题。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eNavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e接下来，你将添加 \u003ccode\u003eMaterialPageRoute\u003c/code\u003e 和它的构建器。现在，添加生成 \u003ccode\u003eListTile\u003c/code\u003e 行的代码。\u003ccode\u003eListTile\u003c/code\u003e 的 \u003ccode\u003edivideTiles()\u003c/code\u003e 方法在每个 \u003ccode\u003eListTile\u003c/code\u003e 之间增加了水平间距。被划分的变量持有通过方便函数 \u003ccode\u003etoList()\u003c/code\u003e 转换为列表的最终行。\u003c/p\u003e\n\u003cp\u003e添加代码，如下面的代码片段所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eNavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eMaterialPageRoute\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// NEW lines from here...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"nl\"\u003ebuilder:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003etiles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n              \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                  \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n              \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n          \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003edivided\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edivideTiles\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003econtext:\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003etiles:\u003c/span\u003e \u003cspan class=\"n\"\u003etiles\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etoList\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n              \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eSaved Suggestions\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003eListView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003echildren:\u003c/span\u003e \u003cspan class=\"n\"\u003edivided\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ...to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003ebuilder\u003c/code\u003e 属性返回一个 \u003ccode\u003eScaffold\u003c/code\u003e，包含名为 \u003ccode\u003eSavedSuggestions\u003c/code\u003e 的新路由的应用栏。新路由的主体由一个包含 \u003ccode\u003eListTiles\u003c/code\u003e 行的 \u003ccode\u003eListView\u003c/code\u003e 组成。每一行都由一个分隔符隔开。\u003c/p\u003e\n\u003cp\u003e热重载应用。将一些选择收藏起来，然后点击应用栏中的列表图标。新的路由出现，包含收藏夹。请注意，Navigator 在应用栏中增加了一个\u0026quot;返回\u0026quot;按钮。你不必明确地实现 \u003ccode\u003eNavigator.pop\u003c/code\u003e。点击\u0026quot;返回\u0026quot;按钮就可以返回到主路由。\u003c/p\u003e\n\u003cp\u003eiOS - Main route\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/928693968b8e482a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS - Saved suggestions route\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/2245376356747d5a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-2\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序没有正确运行，那么你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step7_navigate_route/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"使用主题改变用户界面\"\u003e使用主题改变用户界面\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将修改应用程序的主题。主题控制你的应用程序的外观和感觉。您可以使用默认主题，这取决于物理设备或模拟器，或者自定义主题以反映您的品牌。\u003c/p\u003e\n\u003cp\u003e您可以通过配置 \u003ca href=\"https://docs.flutter.io/flutter/material/ThemeData-class.html\"\u003eThemeData\u003c/a\u003e 类轻松更改应用程序的主题。应用程序使用默认主题，但你会将应用程序的主色调改为白色。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003eMyApp\u003c/code\u003e 类中更改颜色:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eStartup Name Generator\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etheme:\u003c/span\u003e \u003cspan class=\"n\"\u003eThemeData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e          \u003cspan class=\"c1\"\u003e// Add the 3 lines from here... \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"nl\"\u003eprimaryColor:\u003c/span\u003e \u003cspan class=\"n\"\u003eColors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewhite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重载应用。现在整个背景都是白色的，甚至应用栏也是白色的。\u003c/p\u003e\n\u003cp\u003e作为一个练习，使用 \u003ccode\u003eThemeData\u003c/code\u003e 来改变 UI 的其他方面。Material 库中的 \u003ca href=\"https://docs.flutter.io/flutter/material/Colors-class.html\"\u003eColors\u003c/a\u003e 类提供了许多你可以玩的颜色常量。热重载使得对 UI 的实验变得快速而简单。\u003c/p\u003e\n\u003cp\u003eAndroid\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/5d4ed8aeea9e4d0a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/c325151f1ae4820d.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-3\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你已经偏离了轨道，那么使用下面链接中的代码来查看最终应用的代码。\u003c/p\u003e\n\u003cp\u003e= \u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step8_themes/lib/main.darts\"\u003elib/main.dart\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"做得很好\"\u003e做得很好！\u003c/h2\u003e\n\u003cp\u003e你写了一个交互式的 Flutter 应用，可以在 iOS 和 Android 上运行，具体做法如下\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e编写 Dart 代码。\u003c/li\u003e\n\u003cli\u003e使用热重载来加快开发周期。\u003c/li\u003e\n\u003cli\u003e实现一个有状态的 widget，为你的应用添加交互性。\u003c/li\u003e\n\u003cli\u003e创建途径并添加在原途径和新途径之间移动的逻辑。\u003c/li\u003e\n\u003cli\u003e学习如何使用主题改变你的应用程序的 UI 外观。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"今后的步骤\"\u003e今后的步骤\u003c/h2\u003e\n\u003cp\u003e从以下资源中了解更多关于 Flutter SDK 的信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/layout\"\u003eFlutter 中的布局\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/interactive\"\u003e增加互动性教程\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/widgets-intro\"\u003e组件介绍\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/android-devs\"\u003e为 Android 开发者提供的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/react-native-devs\"\u003e针对 React Native 开发者的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/web-devs\"\u003eWeb 开发人员的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/flutterdev\"\u003eFlutter YouTube 频道\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e其他资源包括以下几点:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\"\u003e用 Flutter 构建本地移动应用\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codelabs.developers.google.com/codelabs/from-java-to-dart/#1\"\u003e从 Java 到 Dart codelab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/cookbook/\"\u003eFlutter cookbook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/bootstrap-into-dart/\"\u003e融入 Dart 的 Bootstrap：了解更多关于这门语言的信息\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e同时，\u003ca href=\"https://flutter.dev/community\"\u003e与 Flutter 社区联系起来!\u003c/a\u003e\u003c/p\u003e\n","text":"介绍 Flutter 是 Google 的 UI 工具包，用于从单一代码库中为移动、Web 和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\n在这个代码实验室中，您将扩展一个基本的、移动的 Flutter 应用程序，以包含交互性。您还将创建一个用户可以导航到的第二个页面（称为路由）。最后，您将修改应用程序的主题（颜色）。这个代码实验室扩展了第1部分，在这部分中，你将创建一个无限的懒惰加载的列表，但如果你想从第2部分开始，我们将提供起始代码。\n你将在第二部分学到什么  如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？ 如何使用热重装，加快开发周期？ 如何为有状态的 widget 添加交互性？ 如何创建并导航到第二个屏幕？ 如何使用主题来改变应用程序的外观？  你将在第二部分建立什么 您将从一个简单的移动应用程序开始，为创业公司生成一个无尽的建议名称列表。在代码实验室结束时，您的最终用户可以选择和取消选择名称，保存最好的名称。点击应用栏右上角的列表图标可以导航到一个新的页面（称为路由），该页面只列出了最喜欢的名字。\n下面的 GIF 动画显示了完成的应用程序将如何工作。\n设置您的 Flutter 环境 如果你还没有完成第1部分，请看设置你的 Flutter 环境，在编写你的第一个Flutter应用，第1部分，设置你的 Flutter 开发环境。\n获取启动应用程序 如果你已经完成了这个 codelab 的第一部分，你已经有了启动应用程序，startup_namer。你可以进行下一步。\n如果你没有 startup_namer，不要害怕，你可以使用下面的说明得到它。\n使用创建应用程序中的说明创建一个简单的模板化 Flutter 应用程序。将项目命名为 startup_namer（而不是 flutter_app）。\n删除 lib/main.dart 中的所有代码。用这个文件中的代码替换，它显示了一个无限的，懒惰加载的建议启动名称列表。\n更新 pubspec.yaml，加入英文单词包。\ndependencies:flutter:sdk:fluttercupertino_icons:^0.1.2english_words:^3.1.5//NEW英文单词包会生成一对随机的单词，作为潜在的启动名称。\n在 Android Studio 的编辑器视图中查看 pubspec 时，点击右上角的 Pub get，这将包拉到你的项目中。你应该在控制台中看到以下内容:\nflutter pub get Running \u0026#34;flutter pub get\u0026#34; in startup_namer... Process finished with exit code 0 运行该应用。\n随意滚动，查看持续供应的拟创业公司名称。\n将图标添加到列表中 在这一步中，你将为每一行添加心形图标。在下一步中，您将使它们可点击并保存收藏夹。\n在 _RandomWordsState 中添加一个 _saved Set。这个 Set 存储了用户收藏的单词配对。Set 比 List 更受欢迎，因为一个正确实现的 Set 不允许重复的条目。\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { final _suggestions = \u0026lt;WordPair\u0026gt;[]; final _saved = Set\u0026lt;WordPair\u0026gt;(); // NEW  final _biggerFont = TextStyle(fontSize: 18.0); ... } 在 _buildRow 函数中，添加一个 alreadySaved 检查，以确保一个单词配对还没有被添加到收藏夹中。\nWidget _buildRow(WordPair pair) { final alreadySaved = _saved.contains(pair); // NEW  ... } 在 _buildRow() 中，你还将为 ListTile 对象添加心形图标以实现收藏夹。在下一步中，你将添加与心形图标交互的功能。\n在文本之后添加图标，如下图所示。\nWidget _buildRow(WordPair pair) { final alreadySaved = _saved.contains(pair); return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), trailing: Icon( // NEW from here...  alreadySaved ? Icons.favorite : Icons.favorite_border, color: alreadySaved ? Colors.red : null, ), // ... to here.  ); } 热重新加载应用程序。\n你现在应该看到每一行都有空心，但它们还没有互动。\nAndroid\niOS\n遇到问题了？ 如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\n lib/main.dart  增加互动性 在这一步中，你将使心形图标可以点击。当用户点击列表中的一个条目，切换其收藏状态时，该词对就会从一组保存的收藏夹中添加或删除。\n要做到这一点，你将修改 _buildRow 函数。如果一个词条已经被添加到收藏夹中，再次点击它就会将其从收藏夹中删除。当一个磁贴被点击后，函数会调用 setState() 来通知框架状态已经改变。\n在 _buildRow 方法中加入 onTap，如下图所示:\nWidget _buildRow(WordPair pair) { final alreadySaved = _saved.contains(pair); return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), trailing: Icon( alreadySaved ? Icons.favorite : Icons.favorite_border, color: alreadySaved ? Colors.red : null, ), onTap: () { // NEW lines from here...  setState(() { if (alreadySaved) { _saved.remove(pair); } else { _saved.add(pair); } }); }, // ... to here.  ); } 提示：在 Flutter 的反应式框架中，调用 setState() 会触发对 State 对象的 build() 方法的调用，导致 UI 的更新。\n热重载应用。\n你应该能够点击任何磁贴来收藏或不收藏该条目。点击瓷砖会产生一个隐含的从点击点发出的泼墨动画。\nAndroid\niOS\n遇到问题了？ 如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\n lib/main.dart  导航到一个新的屏幕 在这一步中，您将添加一个新的页面（在 Flutter 中称为路由），显示收藏夹。您将学习如何在主页路线和新路由之间进行导航。\n在 Flutter 中，Navigator 管理着一个包含应用程序路由的堆栈。将一个路由推到 Navigator 的堆栈上，会将显示更新到该路由。从 Navigator 的堆栈中弹出一条路由，会将显示返回到之前的路由。\n接下来，您将在 _RandomWordsState 的 build 方法中为 AppBar 添加一个列表图标。当用户点击列表图标时，一个包含保存的收藏夹的新路由会被推送到 Navigator，显示图标。\n在 build 方法中添加图标及其对应的操作:\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { ... @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: Text(\u0026#39;Startup Name Generator\u0026#39;), actions: [ // NEW lines from here...  IconButton(icon: Icon(Icons.list), onPressed: _pushSaved), ], // ... to here.  ), home: RandomWords(), ); } ... } 提示：一些小组件属性会取一个小组件(child)，而其他属性，如 action，会取一组小组件(children), 如方括号([])所示。\n在 _RandomWordsState 类中添加一个 _pushSaved() 函数。\nvoid _pushSaved() { } 热重新加载应用程序。列表图标出现在应用栏中。点击它还没有任何作用，因为 _pushSaved 函数是空的。\n接下来，你将建立一条路由，并将其推送到 Navigator 的栈中。这个操作会改变屏幕以显示新的路由。新页面的内容是在 MaterialPageRoute 的构建器属性中以匿名函数的方式构建的。\n调用 Navigator.push，如下图所示，它将路由推送到 Navigator 的堆栈中。IDE 会抱怨无效代码，但你会在下一节中解决这个问题。\nvoid _pushSaved() { Navigator.of(context).push( ); } 接下来，你将添加 MaterialPageRoute 和它的构建器。现在，添加生成 ListTile 行的代码。ListTile 的 divideTiles() 方法在每个 ListTile 之间增加了水平间距。被划分的变量持有通过方便函数 toList() 转换为列表的最终行。\n添加代码，如下面的代码片段所示:\nvoid _pushSaved() { Navigator.of(context).push( MaterialPageRoute\u0026lt;void\u0026gt;( // NEW lines from here...  builder: (BuildContext context) { final tiles = _saved.map( (WordPair pair) { return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), ); }, ); final divided = ListTile.divideTiles( context: context, tiles: tiles, ).toList(); return Scaffold( appBar: AppBar( title: Text(\u0026#39;Saved Suggestions\u0026#39;), ), body: ListView(children: divided), ); }, // ...to here.  ), ); } } builder 属性返回一个 Scaffold，包含名为 SavedSuggestions 的新路由的应用栏。新路由的主体由一个包含 ListTiles 行的 ListView 组成。每一行都由一个分隔符隔开。\n热重载应用。将一些选择收藏起来，然后点击应用栏中的列表图标。新的路由出现，包含收藏夹。请注意，Navigator 在应用栏中增加了一个\u0026quot;返回\u0026quot;按钮。你不必明确地实现 Navigator.pop。点击\u0026quot;返回\u0026quot;按钮就可以返回到主路由。\niOS - Main route\niOS - Saved suggestions route\n遇到问题了？ 如果你的应用程序没有正确运行，那么你可以使用下面链接中的代码来回到正轨。\n lib/main.dart  使用主题改变用户界面 在这一步中，您将修改应用程序的主题。主题控制你的应用程序的外观和感觉。您可以使用默认主题，这取决于物理设备或模拟器，或者自定义主题以反映您的品牌。\n您可以通过配置 ThemeData 类轻松更改应用程序的主题。应用程序使用默认主题，但你会将应用程序的主色调改为白色。\n在 MyApp 类中更改颜色:\nclass MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( title: \u0026#39;Startup Name Generator\u0026#39;, theme: ThemeData( // Add the 3 lines from here...  primaryColor: Colors.white, ), // ... to here.  home: RandomWords(), ); } } 热重载应用。现在整个背景都是白色的，甚至应用栏也是白色的。\n作为一个练习，使用 ThemeData 来改变 UI 的其他方面。Material 库中的 Colors 类提供了许多你可以玩的颜色常量。热重载使得对 UI 的实验变得快速而简单。\nAndroid\niOS\n遇到问题了？ 如果你已经偏离了轨道，那么使用下面链接中的代码来查看最终应用的代码。\n= lib/main.dart\n做得很好！ 你写了一个交互式的 Flutter 应用，可以在 iOS 和 Android 上运行，具体做法如下\n 编写 Dart 代码。 使用热重载来加快开发周期。 实现一个有状态的 widget，为你的应用添加交互性。 创建途径并添加在原途径和新途径之间移动的逻辑。 学习如何使用主题改变你的应用程序的 UI 外观。  今后的步骤 从以下资源中了解更多关于 Flutter SDK 的信息。\n Flutter 中的布局 增加互动性教程 组件介绍 为 Android 开发者提供的 Flutter 针对 React Native 开发者的 Flutter Web 开发人员的 Flutter Flutter YouTube 频道  其他资源包括以下几点:\n 用 Flutter 构建本地移动应用 从 Java 到 Dart codelab Flutter cookbook 融入 Dart 的 Bootstrap：了解更多关于这门语言的信息  同时，与 Flutter 社区联系起来!\n"},"name":"编写你的第一个 Flutter 应用，第二部分","published":"2020-06-26T00:00:00+08:00","summary":"Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起使用，被世界各地的开发者和组织使用，并且是免费和开源的。","type":"entry","url":"https://ohmyweekly.github.io/notes/write-your-first-flutter-app-part-two/"}],"name":"flutter","type":"feed","url":"https://ohmyweekly.github.io/tags/flutter/"}
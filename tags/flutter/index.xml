<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>
            
                    flutter on
                
            
            焉知非鱼</title>
        <link>https://ohmyweekly.github.io/tags/flutter/</link>
        <description>Recent content  in flutter
            on 焉知非鱼</description>
        <language>en-us</language>
        <lastBuildDate>Mon, 29 Jun 2020 21:48:32 +0800</lastBuildDate>
        <generator>Hugo -- gohugo.io</generator>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
            <atom:link href="https://ohmyweekly.github.io/tags/flutter/index.xml" rel="self" type="application/rss&#43;xml" />
        
            
            <item>
                <title>如何使用包</title>
                <link>https://ohmyweekly.github.io/notes/how-to-use-packages/</link>
                
                
                <description>&lt;blockquote&gt;Dart 包管理工具 - pub&lt;/blockquote&gt;&lt;p&gt;Dart 生态系统使用包来管理共享软件，如库和工具。要获得 Dart 包，你可以使用 &lt;code&gt;pub&lt;/code&gt; 包管理器。你可以在 &lt;a href=&#34;https://pub.dev/&#34;&gt;pub.dev&lt;/a&gt; 网站上找到公开的包，也可以从本地文件系统或其他地方加载包，比如 Git 仓库。无论你的包来自哪里，pub 都会管理版本依赖关系，帮助你获得相互之间以及与 SDK 版本兼容的包版本。&lt;/p&gt;
&lt;p&gt;大多数精通 Dart 的 &lt;a href=&#34;https://dart.dev/tools#ides-and-editors&#34;&gt;IDE&lt;/a&gt; 都提供了对 pub 的支持，包括创建、下载、更新和发布包。或者你可以&lt;a href=&#34;https://dart.dev/tools/pub/cmd&#34;&gt;在命令行中使用 pub&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;至少，一个 Dart 包是一个包含 &lt;a href=&#34;https://dart.dev/tools/pub/pubspec&#34;&gt;pubspec 文件&lt;/a&gt;的目录。pubspec 包含一些关于包的元数据。此外，一个包可以包含依赖关系(在 pubspec 中列出)，Dart 库，应用程序，资源，测试，图像和例子。&lt;/p&gt;
&lt;p&gt;要使用一个包，请执行以下操作:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建一个 pubspec(一个名为 &lt;code&gt;pubspec.yaml&lt;/code&gt; 的文件，它列出了软件包的依赖关系，并包含其他元数据，如版本号)。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;pub&lt;/code&gt; 来获取你的包的依赖关系。&lt;/li&gt;
&lt;li&gt;如果你的 Dart 代码依赖于软件包中的一个库，则导入该库。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;创建一个-pubspec&#34;&gt;创建一个 pubspec&lt;/h2&gt;
&lt;p&gt;pubspec 是一个名为 &lt;code&gt;pubspec.yaml&lt;/code&gt; 的文件，它位于你的应用程序的顶级目录中。最简单的 pubspec 只列出了包名:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;nl&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面是一个 pubspec 的例子，它声明了两个包(&lt;code&gt;js&lt;/code&gt; 和 &lt;code&gt;intl&lt;/code&gt;)的依赖关系，这两个包都托管在 pub.dev 站点上:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;nl&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_app&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;dependencies:&lt;/span&gt;
  &lt;span class=&#34;nl&#34;&gt;js:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
  &lt;span class=&#34;nl&#34;&gt;intl:&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0.15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;关于创建 pubspec 的详细信息，请参见 &lt;a href=&#34;https://dart.dev/tools/pub/pubspec&#34;&gt;pubspec 文档&lt;/a&gt;和你要使用的包的文档。&lt;/p&gt;
&lt;h2 id=&#34;获取软件包&#34;&gt;获取软件包&lt;/h2&gt;
&lt;p&gt;一旦你有了 pubspec，你就可以从你的应用程序的顶级目录中运行 &lt;code&gt;pub get&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; &amp;lt;path-to-my_app&amp;gt;
$ pub get
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个过程被称为获取依赖关系。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pub get&lt;/code&gt; 命令可以确定您的应用程序依赖于哪些软件包，并将它们放在中央&lt;a href=&#34;https://dart.dev/tools/pub/glossary#system-cache&#34;&gt;系统缓存&lt;/a&gt;中。如果您的应用程序依赖于已发布的包，pub 会从 &lt;a href=&#34;https://pub.dev/&#34;&gt;pub.dev&lt;/a&gt; 站点下载该包。对于  &lt;a href=&#34;https://dart.dev/tools/pub/dependencies#git-packages&#34;&gt;Git 依赖&lt;/a&gt;，pub 会克隆 Git 仓库。还包括了过渡性依赖。例如，如果 &lt;code&gt;js&lt;/code&gt; 包依赖于 &lt;code&gt;test&lt;/code&gt; 包，&lt;code&gt;pub&lt;/code&gt; 会同时抓取 &lt;code&gt;js&lt;/code&gt; 包和 &lt;code&gt;test&lt;/code&gt; 包。&lt;/p&gt;
&lt;p&gt;Pub 会创建一个 &lt;code&gt;.packages&lt;/code&gt; 文件(在你的应用程序的顶层目录下)，将你的应用程序所依赖的每个包名映射到系统缓存中的对应包。&lt;/p&gt;
&lt;h2 id=&#34;从包中导入库&#34;&gt;从包中导入库&lt;/h2&gt;
&lt;p&gt;要导入在包中找到的库，使用 &lt;code&gt;package:&lt;/code&gt; 前缀:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:js/js.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;js&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:intl/intl.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Dart 运行时在 &lt;code&gt;package:&lt;/code&gt; 之后的所有内容都会在应用程序的 &lt;code&gt;.package&lt;/code&gt; 文件中进行查找。&lt;/p&gt;
&lt;p&gt;你也可以使用这种风格从你自己的包中导入库。比方说，&lt;code&gt;transmogrify&lt;/code&gt; 包的布局如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;transmogrify/
  lib/
    transmogrify.dart
    parser.dart
  test/
    parser/
      parser_test.dart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;parser_test.dart&lt;/code&gt; 文件可以这样导入 &lt;code&gt;parser.dart&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:transmogrify/parser.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;升级依赖关系&#34;&gt;升级依赖关系&lt;/h2&gt;
&lt;p&gt;当你第一次为你的软件包获取一个新的依赖关系时，pub 会下载与你的其他依赖关系兼容的最新版本。然后，它通过创建一个 &lt;strong&gt;lockfile&lt;/strong&gt; 锁文件来锁定您的软件包，使其始终使用该版本。这是一个名为 &lt;code&gt;pubspec.lock&lt;/code&gt; 的文件，由 pub 创建并存储在 pubspec 的旁边。它列出了您的软件包所使用的每个依赖关系的特定版本 (即时的和过渡的)。&lt;/p&gt;
&lt;p&gt;如果你的包是一个应用程序包，你应该把这个文件检查到&lt;a href=&#34;https://dart.dev/guides/libraries/private-files&#34;&gt;源代码控制&lt;/a&gt;中。这样，在你的应用程序上工作的每个人都会使用所有包的相同版本。在 lockfile 文件中检查也可以确保你部署的应用使用相同版本的代码。&lt;/p&gt;
&lt;p&gt;当你准备好将你的依赖项升级到最新版本时，使用 &lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-upgrade&#34;&gt;pub upgrade&lt;/a&gt; 命令:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;n&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pub&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;upgrade&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;pub upgrade&lt;/code&gt; 命令告诉 pub 使用你的包的依赖关系的最新版本来重新生成 lockfile 文件。如果你只想升级一个依赖关系，你可以指定要升级的软件包:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;n&#34;&gt;$&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pub&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;upgrade&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transmogrify&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该命令将 &lt;code&gt;transmogrify&lt;/code&gt; 升级到最新版本，但其他一切都保持不变。&lt;/p&gt;
&lt;p&gt;由于 pubspec 中有冲突的版本限制，&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-upgrade&#34;&gt;pub upgrade&lt;/a&gt; 命令并不能总是将每个软件包升级到最新版本。要识别需要编辑 pubspec 的过期软件包，请使用 &lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-outdated&#34;&gt;pub outdated&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;更多信息&#34;&gt;更多信息&lt;/h2&gt;
&lt;p&gt;下面的页面有更多关于软件包和 pub 包管理器的信息。&lt;/p&gt;
&lt;p&gt;如何使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/guides/libraries/create-library-packages&#34;&gt;创建包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/publishing&#34;&gt;发布包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/dependencies&#34;&gt;Pub 依赖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/environment-variables&#34;&gt;Pub 环境变量&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/glossary&#34;&gt;Pub 词汇表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/package-layout&#34;&gt;Pub 包布局约定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/versioning&#34;&gt;Pub 版本哲学&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/pubspec&#34;&gt;Pubspec 格式化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pub 命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pub&lt;/code&gt; 工具提供了以下命令:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-cache&#34;&gt;pub cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-deps&#34;&gt;pub deps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-downgrade&#34;&gt;pub downgrade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-get&#34;&gt;pub get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-global&#34;&gt;pub global&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-outdated&#34;&gt;pub outdated&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-lish&#34;&gt;pub publish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-run&#34;&gt;pub run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-upgrade&#34;&gt;pub upgrade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/tools/pub/cmd/pub-uploader&#34;&gt;pub uploader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关所有 pub 命令的概述，请参阅 &lt;a href=&#34;https://dart.dev/tools/pub/cmd&#34;&gt;pub 工具文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;疑难解答&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dart.dev/tools/pub/troubleshoot&#34;&gt;故障排除 pub&lt;/a&gt; 提供了使用 pub 时可能遇到的问题的解决方案。&lt;/p&gt;
</description>
                
                        <author>焉知非鱼@fakeEmailToMakeValidatorHappy.com (焉知非鱼)</author>
                
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/categories/programming">programming</category>
                                
                            
                        
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/flutter">flutter</category>
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/packages">packages</category>
                                
                            
                        
                    
                
                <guid>https://ohmyweekly.github.io/notes/how-to-use-packages/</guid>
                <pubDate>Mon, 29 Jun 2020 00:00:00 +0800</pubDate>
            </item>
        
            
            <item>
                <title>常用的包</title>
                <link>https://ohmyweekly.github.io/notes/commonly-used-packages/</link>
                
                
                <description>&lt;blockquote&gt;Commonly used packages&lt;/blockquote&gt;&lt;p&gt;本页列出了一些  Dart 开发者发布的最流行和最有用的&lt;a href=&#34;https://dart.dev/guides/packages&#34;&gt;包&lt;/a&gt;。要找到更多的软件包&amp;ndash;也可以搜索&lt;a href=&#34;https://dart.dev/guides/libraries&#34;&gt;核心库&lt;/a&gt;&amp;ndash;请使用 &lt;a href=&#34;https://pub.dev/&#34;&gt;pub.dev&lt;/a&gt; 网站。&lt;/p&gt;
&lt;p&gt;常用的软件包可分为三类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/guides/libraries/useful-libraries#general-purpose-packages&#34;&gt;通用包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/guides/libraries/useful-libraries#packages-that-correspond-to-sdk-libraries&#34;&gt;扩展 Dart 核心库的包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dart.dev/guides/libraries/useful-libraries#specialized-packages&#34;&gt;特定的包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;通用包&#34;&gt;通用包&lt;/h2&gt;
&lt;p&gt;以下包对各种项目都很有用:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;包&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;常用的 API&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/archive&#34;&gt;archive&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;对各种档案和压缩格式进行编码和解码。&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Archive, ArchiveFile, TarEncoder, TarDecoder, ZipEncoder, ZipDecoder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/characters&#34;&gt;characters&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;对用户感知的字符进行字符串操作(Unicode 字符簇)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;String.characters, Characters, CharacterRange&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/http&#34;&gt;http&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一组高级的函数和类，使其易于消费 HTTP 资源&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;delete(), get(), post(), read()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/intl&#34;&gt;intl&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;国际化和本地化设施，支持复数和性别、日期和数字格式化和解析以及双向文本&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Bidi, DateFormat, MicroMoney, TextDirection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/json_serializable&#34;&gt;json_serializable&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一个易于使用的代码生成包。更多信息，请参阅 &lt;a href=&#34;https://dart.dev/guides/json&#34;&gt;JSON 支持&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;@JsonSerializable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/logging&#34;&gt;logging&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一个可配置的机制，为你的应用程序添加消息记录&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LoggerHandler, Level, LogRecord&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/mockito&#34;&gt;mockito&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一个在测试中模拟对象的流行框架。如果你正在编写依赖注入的测试，特别有用。与 &lt;a href=&#34;https://pub.dev/packages/test&#34;&gt;test&lt;/a&gt; 包一起使用&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Answering, Expectation, Verification&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/path&#34;&gt;path&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;操作不同类型路径的常用操作。更多信息，请参见&lt;a href=&#34;https://news.dartlang.org/2016/06/unboxing-packages-path.html&#34;&gt;拆包: path&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;absolute(), basename(), extension(), join(), normalize(), relative(), split()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/quiver&#34;&gt;quiver&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;实用工具，使 Dart 核心库的使用更加方便。Quiver 提供额外支持的一些库包括 async、cache、collection、core、iterables、pattern 和 测试&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CountdownTimer (quiver.async); MapCache (quiver.cache); MultiMap, TreeSet (quiver.collection); EnumerateIterable (quiver.iterables); center(), compareIgnoreCase(), isWhiteSpace() (quiver.strings)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/shelf&#34;&gt;shelf&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Dart 的 Web 服务器中间件。Shelf 使它能轻松地创建和组成 Web 服务器，以及 Web 服务器的一部分&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cascade, Pipeline, Request, Response, Server&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/stack_trace&#34;&gt;stack_trace&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;用于解析、检查和处理由底层 Dart 实现产生的堆栈痕迹的方法。还提供了以比原生 StackTrace 实现更可读的格式生成堆栈跟踪的字符串表示的函数,  更多信息，请参见&lt;a href=&#34;https://news.dartlang.org/2016/01/unboxing-packages-stacktrace.html&#34;&gt;拆包: stack_trace&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Trace.current(), Trace.format(), Trace.from()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/stagehand&#34;&gt;stagehand&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一个 Dart 项目生成器。当你创建一个新的应用程序时，WebStorm 和 IntelliJ 使用 Stagehand 模板，但你也可以从命令行使用模板&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;一般通过 IDE 或 &lt;code&gt;stagehand&lt;/code&gt; 命令来使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/test&#34;&gt;test&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在 Dart 中编写和运行测试的标准方法&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;expect(), group(), test()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/yaml&#34;&gt;yaml&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;YAML 解析器&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;loadYaml(), loadYamlStream()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;扩展-dart-核心库的包&#34;&gt;扩展 Dart 核心库的包&lt;/h2&gt;
&lt;p&gt;以下每个包都建立在一个&lt;a href=&#34;https://dart.dev/guides/libraries&#34;&gt;核心库&lt;/a&gt;的基础上，增加了功能并填补了缺失的功能:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;包&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;描述&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;常用的 API&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/async&#34;&gt;async&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在 dart:async 的基础上进行了扩展，增加了实用类来处理异步计算。更多信息，请参见&lt;a href=&#34;https://news.dartlang.org/2016/03/unboxing-packages-async-part-1.html&#34;&gt;拆包: async 第1部分&lt;/a&gt;、&lt;a href=&#34;https://news.dartlang.org/2016/03/unboxing-packages-async-part-2.html&#34;&gt;第2部分&lt;/a&gt;和&lt;a href=&#34;https://news.dartlang.org/2016/04/unboxing-packages-async-part-3.html&#34;&gt;第3部分&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AsyncMemoizer, CancelableOperation, FutureGroup, LazyStream, Result, StreamCompleter, StreamGroup, StreamSplitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/collection&#34;&gt;collection&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在 dart:collection 的基础上进行了扩展，增加了实用函数和类，使处理集合的工作变得更加容易。更多信息，请看&lt;a href=&#34;https://news.dartlang.org/2016/01/unboxing-packages-collection.html&#34;&gt;拆包：collection&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Equality, CanonicalizedMap, MapKeySet, MapValueSet, PriorityQueue, QueueList&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/convert&#34;&gt;convert&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;在 dart:convert 的基础上，增加了编码器和解码器，用于在不同的数据表现形式之间进行转换。其中一种数据表示方式是百分比编码，也被称为 URL 编码&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HexDecoder, PercentDecoder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://pub.dev/packages/io&#34;&gt;io&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;包含两个库，ansi和io，以简化对文件、标准流和进程的处理。使用 ansi 库可以自定义终端输出。io 库有处理进程、stdin 和文件复制的 API&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;copyPath(), isExecutable(), ExitCode, ProcessManager, sharedStdIn&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;专用包&#34;&gt;专用包&lt;/h2&gt;
&lt;p&gt;下面是一些寻找比较专业的包的技巧，比如手机的包(Flutter)和网页开发的包。&lt;/p&gt;
&lt;h3 id=&#34;flutter-包&#34;&gt;Flutter 包&lt;/h3&gt;
&lt;p&gt;请看 Flutter 网站上的&lt;a href=&#34;https://flutter.dev/docs/development/packages-and-plugins/using-packages&#34;&gt;使用包&lt;/a&gt;。或者使用 pub.dev 网站&lt;a href=&#34;https://pub.dev/flutter&#34;&gt;搜索 Flutter 包&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;网络包&#34;&gt;网络包&lt;/h3&gt;
&lt;p&gt;参见&lt;a href=&#34;https://dart.dev/web/libraries&#34;&gt;网络库和包&lt;/a&gt;。或者使用 pub.dev 站点&lt;a href=&#34;https://pub.dev/web&#34;&gt;搜索 web 包&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;命令行和服务器软件包&#34;&gt;命令行和服务器软件包&lt;/h3&gt;
&lt;p&gt;参见&lt;a href=&#34;https://dart.dev/server/libraries&#34;&gt;命令行和服务器库和包&lt;/a&gt;。或者使用 pub.dev 站点&lt;a href=&#34;https://pub.dev/&#34;&gt;搜索其他包&lt;/a&gt;。&lt;/p&gt;
</description>
                
                        <author>焉知非鱼@fakeEmailToMakeValidatorHappy.com (焉知非鱼)</author>
                
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/categories/programming">programming</category>
                                
                            
                        
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/flutter">flutter</category>
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/packages">packages</category>
                                
                            
                        
                    
                
                <guid>https://ohmyweekly.github.io/notes/commonly-used-packages/</guid>
                <pubDate>Mon, 29 Jun 2020 00:00:00 +0800</pubDate>
            </item>
        
            
            <item>
                <title>编写你的第一个 Flutter 应用，第一部分</title>
                <link>https://ohmyweekly.github.io/notes/write-your-first-flutter-app/</link>
                
                
                <description>&lt;blockquote&gt;Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起使用，被世界各地的开发者和组织使用，并且是免费和开源的。&lt;/blockquote&gt;&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。&lt;/p&gt;
&lt;p&gt;在这个代码实验室中，你将创建一个简单的手机 Flutter 应用。如果你熟悉面向对象的代码和基本的编程概念-如变量、循环和条件, 那么你就可以完成这个 codelab。你不需要以前有 Dart、手机或 Web 编程的经验。&lt;/p&gt;
&lt;h3 id=&#34;你将在第1部分学到什么&#34;&gt;你将在第1部分学到什么&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？&lt;/li&gt;
&lt;li&gt;Flutter 应用程序的基本结构。&lt;/li&gt;
&lt;li&gt;寻找和使用包来扩展功能。&lt;/li&gt;
&lt;li&gt;使用热重装来加快开发周期。&lt;/li&gt;
&lt;li&gt;如何实现一个有状态的小组件。&lt;/li&gt;
&lt;li&gt;如何创建一个无限的、懒加载的列表。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这个 codelab 的&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/index.html?index=..%2F..%2Findex#0&#34;&gt;第2部分&lt;/a&gt;中，你将添加交互性，修改应用程序的主题，并添加导航到新页面的能力(在 Flutter 中称为路由)。&lt;/p&gt;
&lt;h3 id=&#34;你将在第1部分中构建什么&#34;&gt;你将在第1部分中构建什么&lt;/h3&gt;
&lt;p&gt;你将实现一个移动应用，为一家创业公司生成建议的名字。用户可以选择和取消选择名字，保存最好的名字。代码一次懒惰地生成10个名字。随着用户的滚动，会生成更多的名字。用户可以滚动的范围没有限制。&lt;/p&gt;
&lt;p&gt;下面的 GIF 动画显示了应用程序在完成部分时的工作情况。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/6556f8b61acd6a89.gif&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;设置你的-flutter-环境&#34;&gt;设置你的 Flutter 环境&lt;/h2&gt;
&lt;p&gt;你需要两个软件来完成这个实验室-&lt;a href=&#34;https://flutter.io/get-started/install/&#34;&gt;Flutter SDK&lt;/a&gt;和&lt;a href=&#34;https://flutter.io/get-started/editor/&#34;&gt;一个编辑器&lt;/a&gt;。(codelab 假设你使用 Android Studio，但你可以使用你的首选编辑器。)&lt;/p&gt;
&lt;p&gt;你可以通过使用以下任何设备来运行 codelab。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个物理的 &lt;a href=&#34;https://flutter.io/setup-macos/#set-up-your-android-device&#34;&gt;Android&lt;/a&gt; 或 &lt;a href=&#34;https://flutter.io/setup-macos/#deploy-to-ios-devices&#34;&gt;iOS&lt;/a&gt; 设备连接到你的计算机并设置为开发者模式。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.io/setup-macos/#set-up-the-ios-simulator&#34;&gt;iOS 模拟器&lt;/a&gt;(需要安装 Xcode 工具)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.io/setup-macos/#set-up-the-android-emulator&#34;&gt;安卓模拟器&lt;/a&gt;(需要在 Android Studio 中进行设置)&lt;/li&gt;
&lt;li&gt;浏览器(调试时需要使用 Chrome 浏览器)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你想编译你的应用程序以在 web 上运行，你必须启用此功能（目前处于测试阶段）。要启用 web 支持，请使用以下说明。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;flutter channel beta
flutter upgrade
flutter config --enable-web
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你只需要运行一次 &lt;code&gt;config&lt;/code&gt; 命令。启用 Web 支持后，你创建的每个 Flutter 应用也会为 Web 编译。在你的 IDE 的&lt;strong&gt;设备&lt;/strong&gt;下拉菜单下面，或者在命令行使用 &lt;code&gt;flutter devices&lt;/code&gt;，你现在应该看到 Chrome 和 Web 服务器被列出。&lt;strong&gt;Chrome&lt;/strong&gt; 设备会自动启动 Chrome。Web 服务器会启动一个托管应用程序的服务器，这样你就可以从任何浏览器加载它。在开发过程中使用 &lt;strong&gt;Chrome&lt;/strong&gt; 设备，以便你可以使用 DevTools，而当你要在其他浏览器上进行测试时使用 Web 服务器。有关更多信息，请参阅&lt;a href=&#34;https://flutter.dev/docs/get-started/web&#34;&gt;使用 Flutter 构建 Web 应用程序&lt;/a&gt;和&lt;a href=&#34;https://flutter.dev/docs/get-started/codelab-web&#34;&gt;在 Web 上编写你的第一个 Flutter 应用程序&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;创建-flutter-应用程序的启动器&#34;&gt;创建 Flutter 应用程序的启动器&lt;/h2&gt;
&lt;p&gt;通过使用&lt;a href=&#34;https://flutter.dev/docs/get-started/test-drive#androidstudio&#34;&gt;创建应用程序&lt;/a&gt;中的说明来创建一个简单的、模板化的 Flutter 应用程序。输入 &lt;code&gt;startup_namer&lt;/code&gt;(而不是 &lt;code&gt;flutter_app&lt;/code&gt;)作为项目名称。您将修改启动器应用程序来创建完成的应用程序。&lt;/p&gt;
&lt;p&gt;提示：如果你在 IDE 中没有看到能够启动一个新的 Flutter 项目作为一个选项，那么请确保你已经&lt;a href=&#34;https://flutter.io/get-started/editor/#androidstudio&#34;&gt;安装了 Flutter 和 Dart 的插件&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;你将主要编辑 &lt;code&gt;lib/main.dart&lt;/code&gt;，Dart 的代码就在这里。&lt;/p&gt;
&lt;p&gt;替换 &lt;code&gt;lib/main.dart&lt;/code&gt; 的内容。
删除 &lt;code&gt;lib/main.dart&lt;/code&gt; 中的所有代码，并用下面的代码替换，在屏幕中央显示 &amp;ldquo;Hello World&amp;rdquo;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:flutter/material.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyApp&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MaterialApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Welcome to Flutter&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scaffold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;appBar:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AppBar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Welcome to Flutter&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;body:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;nl&#34;&gt;child:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Hello World&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提示：当把代码粘贴到你的应用程序中时，缩进会变得歪斜。你可以用以下 Flutter 工具来解决。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android Studio/IntelliJ IDEA: 右键点击 Dart 代码，选择&lt;strong&gt;用 dartfmt 重格式代码&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;VS code: 右键点击并选择&lt;strong&gt;格式化文档&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;终端: 运行 &lt;code&gt;flutter format &amp;lt;文件名&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://flutter.io/get-started/test-drive/#androidstudio&#34;&gt;运行应用程序&lt;/a&gt;。您应该看到 Android，iOS 或 Web 输出，取决于您的设备。&lt;/p&gt;
&lt;p&gt;安卓系统:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/f9df7832965ede9f.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;iOS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/20374605026d582.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;小贴士：第一次在物理设备上运行时，可能需要一段时间来加载。之后，你可以使用热重载来快速更新。在支持的 IDE 中，如果应用正在运行，&lt;strong&gt;Save&lt;/strong&gt; 也会执行热重载。当使用 &lt;code&gt;flutter run&lt;/code&gt; 直接从控制台运行应用程序时，输入 &lt;code&gt;r&lt;/code&gt; 来执行热重载。&lt;/p&gt;
&lt;p&gt;观察:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个例子创建了一个 Material 应用。&lt;a href=&#34;https://material.io/guidelines/&#34;&gt;Material&lt;/a&gt; 是一种视觉设计语言，是移动和 Web 的标准。Flutter 提供了一套丰富的 Material 部件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;main&lt;/code&gt; 方法使用箭头(&lt;code&gt;=&amp;gt;&lt;/code&gt;)符号。对单行函数或方法使用箭头符号。&lt;/li&gt;
&lt;li&gt;应用程序扩展了 &lt;code&gt;StatelessWidget&lt;/code&gt;，这使得应用程序本身成为一个组件。在 Flutter 中，几乎所有的东西都是组件，包括对齐、填充和布局。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Scaffold&lt;/code&gt; 组件来自 Material 库，它提供了一个默认的应用栏、一个标题和一个 body 属性，其中存放着主屏幕的组件树。组件子树可以相当复杂。&lt;/li&gt;
&lt;li&gt;组件的主要工作是提供一个 &lt;code&gt;build&lt;/code&gt; 方法，描述如何用其他低级组件来显示该组件。&lt;/li&gt;
&lt;li&gt;本例的主体由包含 &lt;code&gt;Text&lt;/code&gt; 子部件的 &lt;code&gt;Center&lt;/code&gt; 部件组成。&lt;code&gt;Center&lt;/code&gt; 组件将其组件子树对齐到屏幕的中心。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用外部软件包&#34;&gt;使用外部软件包&lt;/h2&gt;
&lt;p&gt;在这一步中，您将开始使用一个名为 &lt;code&gt;english_words&lt;/code&gt; 的开源包，它包含了几千个最常用的英语单词，还有一些实用函数。&lt;/p&gt;
&lt;p&gt;你可以在 &lt;a href=&#34;https://pub.dev/&#34;&gt;pub.dev&lt;/a&gt; 找到 &lt;code&gt;english_words&lt;/code&gt; 包，以及许多其他开源包。&lt;/p&gt;
&lt;p&gt;pubspec 文件管理着 Flutter 应用的资产。在 &lt;code&gt;pubspec.yaml&lt;/code&gt; 中，附加 &lt;code&gt;english_words: ^3.1.5&lt;/code&gt;(&lt;code&gt;english_words&lt;/code&gt; 3.1.5 或更高)到依赖列表中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;k&#34;&gt;dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;flutter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sdk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;flutter&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cupertino_icons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;^&lt;span class=&#34;m&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;english_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;^&lt;span class=&#34;m&#34;&gt;3.1&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# add this line&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 Android Studio 的编辑器视图中查看 pubspec 时，点击 &lt;strong&gt;Packages get&lt;/strong&gt;。这将把包拉到你的项目中。你应该在控制台中看到以下内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;flutter packages get
Running &amp;#34;flutter packages get&amp;#34; in startup_namer...
Process finished with exit code 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行 &lt;code&gt;Pub get&lt;/code&gt; 也会自动生成 &amp;ldquo;pubspec.lock&amp;rdquo; 文件，其中包含所有拉入项目的包的列表和它们的版本号。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;lib/main.dart&lt;/code&gt; 中，导入新包:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:flutter/material.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:english_words/english_words.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Add this line.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当你输入时，Android Studio 会给你建议导入的库。然后，它将导入的字符串渲染成灰色，让你知道导入的库是未使用的（到目前为止）。&lt;/p&gt;
&lt;p&gt;接下来，你将使用 &lt;code&gt;english_words&lt;/code&gt; 包来生成文本，而不是使用 &amp;ldquo;Hello World&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;做以下修改。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:flutter/material.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;package:english_words/english_words.dart&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;runApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MyApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyApp&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordPair&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Add this line.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MaterialApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Welcome to Flutter&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scaffold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;appBar:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AppBar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Welcome to Flutter&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;body:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;c1&#34;&gt;//child: Text(&amp;#39;Hello World&amp;#39;),   // Replace this text...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;nl&#34;&gt;child:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordPair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asPascalCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// With this text.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提示: Pascal 大小写(也称为上驼形大小写)意味着字符串中的每个单词，包括第一个单词，都以大写字母开头。所以，&lt;code&gt;uppercamelcase&lt;/code&gt; 就变成了 &lt;code&gt;UpperCamelCase&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果应用程序正在运行，热重载来更新正在运行的应用程序。(在命令行中，你可以输入 &lt;code&gt;r&lt;/code&gt; 来热重载。)每次点击热重载或保存项目时，你应该会在运行中的应用程序中看到一个不同的单词对，随机选择。这是因为单词对是在 &lt;code&gt;build&lt;/code&gt; 方法里面生成的，每次 &lt;code&gt;MaterialApp&lt;/code&gt; 需要渲染时，或者在 Flutter Inspector 中切换 &lt;strong&gt;Platform&lt;/strong&gt; 时，都会运行该方法。&lt;/p&gt;
&lt;p&gt;Android:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/57cfbac8f2b50e5b.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;iOS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/30ed7f83a1500fa9.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;有问题&#34;&gt;有问题？&lt;/h3&gt;
&lt;p&gt;如果您的应用程序没有正确运行，请查找错别字。如果需要，请使用以下链接中的代码来恢复正常。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step2_use_package/pubspec.yaml&#34;&gt;pubspec.yaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step2_use_package/lib/main.dart&#34;&gt;lib/main.dart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;添加一个有状态的组件&#34;&gt;添加一个有状态的组件&lt;/h2&gt;
&lt;p&gt;无状态组件是不可改变的，这意味着它们的属性不能改变-所有值都是最终值。&lt;/p&gt;
&lt;p&gt;有状态组件维护的状态可能在组件的生命周期内发生变化。实现一个有状态的组件至少需要两个类。1) 一个 &lt;a href=&#34;https://docs.flutter.io/flutter/widgets/StatefulWidget-class.html&#34;&gt;StatefulWidget&lt;/a&gt;，它可以创建一个 &lt;a href=&#34;https://docs.flutter.io/flutter/widgets/State-class.html&#34;&gt;State&lt;/a&gt; 类的实例。&lt;code&gt;StatefulWidget&lt;/code&gt; 对象本身是不可变的，可以被丢弃和再生，但 &lt;code&gt;State&lt;/code&gt; 对象会在 widget 的生命周期内持久存在。&lt;/p&gt;
&lt;p&gt;在这一步骤中，您将添加一个有状态的组件 &lt;code&gt;RandomWords&lt;/code&gt;，并创建其 &lt;code&gt;State&lt;/code&gt; 类 &lt;code&gt;_RandomWordsState&lt;/code&gt;。然后，您将在现有的 MyApp 无状态组件中使用 &lt;code&gt;RandomWords&lt;/code&gt; 作为子类。&lt;/p&gt;
&lt;p&gt;为有状态组件创建模板代码。&lt;/p&gt;
&lt;p&gt;它可以放在 &lt;code&gt;MyApp&lt;/code&gt; 以外的文件中的任何位置，但解决方案将其放在文件的底部。在 &lt;code&gt;lib/main.dart&lt;/code&gt; 中，将光标定位在所有代码之后，输入回车键几次，重新开始一行。在你的 IDE 中，开始输入 &lt;code&gt;stful&lt;/code&gt;。编辑器会询问你是否要创建一个 &lt;code&gt;Stateful&lt;/code&gt; 的组件。按回车键接受。两个类的模板代码出现了，光标定位让你输入无状态组件的名称。&lt;/p&gt;
&lt;p&gt;输入 &lt;code&gt;RandomWords&lt;/code&gt; 作为您的小组件的名称。&lt;/p&gt;
&lt;p&gt;正如您在下面的代码中所看到的，&lt;code&gt;RandomWords&lt;/code&gt; 组件除了创建它的 &lt;code&gt;State&lt;/code&gt; 类之外，几乎没有其他的功能。&lt;/p&gt;
&lt;p&gt;一旦您输入 &lt;code&gt;RandomWords&lt;/code&gt; 作为有状态组件的名称，IDE 会自动更新相应的 &lt;code&gt;State&lt;/code&gt; 类，将其命名为 &lt;code&gt;_RandomWordState&lt;/code&gt;。默认情况下，&lt;code&gt;State&lt;/code&gt; 类的名称是以下划线为前缀的。在标识符前加上下划线可以加强 Dart 语言的&lt;a href=&#34;https://dart.dev/guides/language/language-tour#libraries-and-visibility&#34;&gt;隐私性&lt;/a&gt;，也是 &lt;code&gt;State&lt;/code&gt; 对象的最佳实践。&lt;/p&gt;
&lt;p&gt;IDE 也会自动更新 State 类以扩展 &lt;code&gt;State&amp;lt;RandomWords&amp;gt;&lt;/code&gt;，表明你正在使用一个专门用于 &lt;code&gt;RandomWords&lt;/code&gt; 的通用 &lt;a href=&#34;https://api.flutter.dev/flutter/widgets/State-class.html&#34;&gt;State&lt;/a&gt; 类。应用程序的大部分逻辑都在这里-它为 &lt;code&gt;RandomWords&lt;/code&gt; 组件维护状态。这个类保存了生成的词对列表，随着用户的滚动而无限增长，在本实验室的第二部分中，当用户通过切换心形图标从列表中添加或删除这些词对时，该类会对其进行收藏。&lt;/p&gt;
&lt;p&gt;现在两个类的外观如下:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;RandomWords&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StatefulWidget&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;_RandomWordsState&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;createState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_RandomWordsState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_RandomWordsState&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Container&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更新 &lt;code&gt;_RandomWordsState&lt;/code&gt; 中的 &lt;code&gt;build()&lt;/code&gt; 方法。&lt;/p&gt;
&lt;p&gt;用以下两行替换 &lt;code&gt;return Container();&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_RandomWordsState&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;                                  
  &lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordPair&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// NEW
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wordPair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asPascalCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// NEW
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;                                         
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过以下修改，删除 &lt;code&gt;MyApp&lt;/code&gt; 中的文字生成代码:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyApp&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordPair&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;random&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// DELETE
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MaterialApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Welcome to Flutter&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scaffold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;appBar:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AppBar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Welcome to Flutter&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;body:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
          &lt;span class=&#34;c1&#34;&gt;//child: Text(wordPair.asPascalCase), // REPLACE with... 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;nl&#34;&gt;child:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;// ...this line
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;热重载应用程序。应用程序应该像以前一样，每次热重载或保存应用程序时都会显示一个单词配对。&lt;/p&gt;
&lt;p&gt;提示：如果您在热重载时看到警告，表明您可能需要重新启动应用程序，您应该考虑重新启动应用程序。这可能是一个假阳性，但重启可以确保您的更改反映在应用程序的 UI 中。&lt;/p&gt;
&lt;h3 id=&#34;遇到问题了&#34;&gt;遇到问题了？&lt;/h3&gt;
&lt;p&gt;如果您的应用程序没有正确运行，您可以使用以下链接中的代码来恢复正常。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step3_stateful_widget/lib/main.dart&#34;&gt;lib/main.dart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;创建一个无限滚动的-listview&#34;&gt;创建一个无限滚动的 ListView&lt;/h2&gt;
&lt;p&gt;在这一步中，您将展开 &lt;code&gt;_RandomWordsState&lt;/code&gt; 来生成并显示单词配对列表。随着用户的滚动，列表（显示在 ListView 小组件中）会无限增长。ListView 中的构建器工厂构造函数允许你按需懒惰地构建一个列表视图。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;_RandomWordState&lt;/code&gt; 类中添加一些状态变量。&lt;/p&gt;
&lt;p&gt;增加一个 &lt;code&gt;_suggestions&lt;/code&gt; 列表，用于保存建议的单词配对。另外，添加一个 &lt;code&gt;_biggerFont&lt;/code&gt; 变量，用于使字体大小变大。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_RandomWordsState&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_suggestions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;// NEW
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TextStyle&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_biggerFont&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TextStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;fontSize:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// NEW
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，你将在 &lt;code&gt;_RandomWordsState&lt;/code&gt; 类中添加一个 &lt;code&gt;_buildSuggestions()&lt;/code&gt; 函数。这个方法可以构建显示建议词对的 &lt;code&gt;ListView&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ListView&lt;/code&gt; 类提供了一个构建器属性 &lt;code&gt;itemBuilder&lt;/code&gt;，它是一个工厂构建器和回调函数，指定为一个匿名函数。两个参数被传递给函数&amp;ndash;&lt;code&gt;BuildContext&lt;/code&gt; 和行迭代器 &lt;code&gt;i&lt;/code&gt;。迭代器从0开始，每次调用函数时递增，每一个建议的单词配对都会递增一次。这个模型允许建议列表在用户滚动时继续增长。&lt;/p&gt;
&lt;p&gt;添加整个 &lt;code&gt;_buildSuggestions&lt;/code&gt; 函数。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;_RandomWordsState&lt;/code&gt; 类中，添加以下函数，如果你喜欢，请删除注释:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_buildSuggestions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;padding:&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EdgeInsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;c1&#34;&gt;// The itemBuilder callback is called once per suggested 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// word pairing, and places each suggestion into a ListTile
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// row. For even rows, the function adds a ListTile row for
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// the word pairing. For odd rows, the function adds a 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// Divider widget to visually separate the entries. Note that
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// the divider may be difficult to see on smaller devices.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nl&#34;&gt;itemBuilder:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// Add a one-pixel-high divider widget before each row 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// in the ListView.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isOdd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Divider&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;// The syntax &amp;#34;i ~/ 2&amp;#34; divides i by 2 and returns an 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// integer result.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// For example: 1, 2, 3, 4, 5 becomes 0, 1, 1, 2, 2.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// This calculates the actual number of word pairings 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// in the ListView,minus the divider widgets.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// If you&amp;#39;ve reached the end of the available word
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// pairings...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_suggestions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;c1&#34;&gt;// ...then generate 10 more and add them to the 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// suggestions list.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;_suggestions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addAll&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;generateWordPairs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;take&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_buildRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_suggestions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;_buildSuggestions&lt;/code&gt; 函数对每个词对调用一次 &lt;code&gt;_buildRow&lt;/code&gt;。该函数在 &lt;code&gt;ListTile&lt;/code&gt; 中显示每一个新的词对，这使得你可以在&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/index.html?index=..%2F..index#0&#34;&gt;第2部分&lt;/a&gt;中使行更有吸引力。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;_RandomWordsState&lt;/code&gt; 中添加一个 &lt;code&gt;_buildRow&lt;/code&gt; 函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_buildRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListTile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asPascalCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;style:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_biggerFont&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更新 &lt;code&gt;_RandomWordsState&lt;/code&gt; 的构建方法。&lt;/p&gt;
&lt;p&gt;将其改为使用 &lt;code&gt;_buildSuggestions()&lt;/code&gt;，而不是直接调用单词生成库。(&lt;code&gt;Scaffold&lt;/code&gt; 实现了基本的 Material Design 视觉布局。)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//final wordPair = WordPair.random(); // Delete these... 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//return Text(wordPair.asPascalCase); // ... two lines.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scaffold&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;                     &lt;span class=&#34;c1&#34;&gt;// Add from here... 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nl&#34;&gt;appBar:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AppBar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Startup Name Generator&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;body:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_buildSuggestions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;                                      &lt;span class=&#34;c1&#34;&gt;// ... to here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更新 &lt;code&gt;MyApp&lt;/code&gt; 的构建方法，更改标题，删除 &lt;code&gt;AppBar&lt;/code&gt;，并将 home 属性改为 &lt;code&gt;RandomWords&lt;/code&gt; 部件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MaterialApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Startup Name Generator&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重新启动应用程序。无论你滚动多远，你都应该看到一个单词配对的列表。&lt;/p&gt;
&lt;p&gt;Android:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/df2b3cb779e0020e.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;iOS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/ae47ef0ac2f492b8.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;遇到问题了-1&#34;&gt;遇到问题了？&lt;/h3&gt;
&lt;p&gt;如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step4_infinite_list/lib/main.dart&#34;&gt;lib/main.dart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;今后的步骤&#34;&gt;今后的步骤&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;恭喜你！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你已经完成了这个代码实验室的第一部分! 如果你想扩展这款应用，请进入&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/#0&#34;&gt;第二部分&lt;/a&gt;，你将对应用进行如下修改。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加互动性&lt;/li&gt;
&lt;li&gt;增加导航到新路由的功能。&lt;/li&gt;
&lt;li&gt;修改主题颜色。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当第2部分完成后，应用程序将是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/7fcab088cd22cff7.gif&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他后续步骤&#34;&gt;其他后续步骤&lt;/h3&gt;
&lt;p&gt;通过以下资源了解更多关于 Flutter SDK 的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/layout&#34;&gt;Flutter 中的布局&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/interactive&#34;&gt;增加互动性教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/widgets-intro&#34;&gt;组件介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/flutter-for/android-devs&#34;&gt;为 Android 开发者提供的 Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/flutter-for/react-native-devs&#34;&gt;针对 React Native 开发者的 Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/flutter-for/web-devs&#34;&gt;Web 开发人员的 Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/flutterdev&#34;&gt;Flutter YouTube 频道&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他资源包括以下几点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905&#34;&gt;用 Flutter 构建本地移动应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/from-java-to-dart/#1&#34;&gt;从 Java 到 Dart codelab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/cookbook/&#34;&gt;Flutter cookbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/bootstrap-into-dart/&#34;&gt;融入 Dart 的 Bootstrap：了解更多关于这门语言的信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，&lt;a href=&#34;https://flutter.dev/community&#34;&gt;与 Flutter 社区联系起来!&lt;/a&gt;&lt;/p&gt;
</description>
                
                        <author>焉知非鱼@fakeEmailToMakeValidatorHappy.com (焉知非鱼)</author>
                
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/categories/programming">programming</category>
                                
                            
                        
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/flutter">flutter</category>
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/app">app</category>
                                
                            
                        
                    
                
                <guid>https://ohmyweekly.github.io/notes/write-your-first-flutter-app/</guid>
                <pubDate>Fri, 26 Jun 2020 00:00:00 +0800</pubDate>
            </item>
        
            
            <item>
                <title>编写你的第一个 Flutter 应用，第二部分</title>
                <link>https://ohmyweekly.github.io/notes/write-your-first-flutter-app-part-two/</link>
                
                
                <description>&lt;blockquote&gt;Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起使用，被世界各地的开发者和组织使用，并且是免费和开源的。&lt;/blockquote&gt;&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;Flutter 是 Google 的 UI 工具包，用于从单一代码库中为移动、Web 和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。&lt;/p&gt;
&lt;p&gt;在这个代码实验室中，您将扩展一个基本的、移动的 Flutter 应用程序，以包含交互性。您还将创建一个用户可以导航到的第二个页面（称为路由）。最后，您将修改应用程序的主题（颜色）。这个代码实验室扩展了第1部分，在这部分中，你将&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/&#34;&gt;创建一个无限的懒惰加载的列表&lt;/a&gt;，但如果你想从第2部分开始，我们将提供起始代码。&lt;/p&gt;
&lt;h3 id=&#34;你将在第二部分学到什么&#34;&gt;你将在第二部分学到什么&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？&lt;/li&gt;
&lt;li&gt;如何使用热重装，加快开发周期？&lt;/li&gt;
&lt;li&gt;如何为有状态的 widget 添加交互性？&lt;/li&gt;
&lt;li&gt;如何创建并导航到第二个屏幕？&lt;/li&gt;
&lt;li&gt;如何使用主题来改变应用程序的外观？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;你将在第二部分建立什么&#34;&gt;你将在第二部分建立什么&lt;/h3&gt;
&lt;p&gt;您将从一个简单的移动应用程序开始，为创业公司生成一个无尽的建议名称列表。在代码实验室结束时，您的最终用户可以选择和取消选择名称，保存最好的名称。点击应用栏右上角的列表图标可以导航到一个新的页面（称为路由），该页面只列出了最喜欢的名字。&lt;/p&gt;
&lt;p&gt;下面的 GIF 动画显示了完成的应用程序将如何工作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/7fcab088cd22cff7.gif&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;设置您的-flutter-环境&#34;&gt;设置您的 Flutter 环境&lt;/h2&gt;
&lt;p&gt;如果你还没有完成第1部分，请看&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/#1&#34;&gt;设置你的 Flutter 环境&lt;/a&gt;，在&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/&#34;&gt;编写你的第一个Flutter应用，第1部分&lt;/a&gt;，设置你的 Flutter 开发环境。&lt;/p&gt;
&lt;h2 id=&#34;获取启动应用程序&#34;&gt;获取启动应用程序&lt;/h2&gt;
&lt;p&gt;如果你已经完成了这个 codelab 的第一部分，你已经有了启动应用程序，&lt;code&gt;startup_namer&lt;/code&gt;。你可以进行下一步。&lt;/p&gt;
&lt;p&gt;如果你没有 &lt;code&gt;startup_namer&lt;/code&gt;，不要害怕，你可以使用下面的说明得到它。&lt;/p&gt;
&lt;p&gt;使用&lt;a href=&#34;https://flutter.dev/get-started/test-drive/#create-app&#34;&gt;创建应用程序&lt;/a&gt;中的说明创建一个简单的模板化 Flutter 应用程序。将项目命名为 &lt;code&gt;startup_namer&lt;/code&gt;（而不是 &lt;code&gt;flutter_app&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;删除 &lt;code&gt;lib/main.dart&lt;/code&gt; 中的所有代码。用这个&lt;a href=&#34;https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step4_infinite_list/lib/main.dart&#34;&gt;文件&lt;/a&gt;中的代码替换，它显示了一个无限的，懒惰加载的建议启动名称列表。&lt;/p&gt;
&lt;p&gt;更新 &lt;code&gt;pubspec.yaml&lt;/code&gt;，加入英文单词包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;k&#34;&gt;dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;flutter&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;sdk&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;flutter&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cupertino_icons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;^&lt;span class=&#34;m&#34;&gt;0.1&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;english_words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;^&lt;span class=&#34;m&#34;&gt;3.1&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;.5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;//&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;NEW&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;英文单词包会生成一对随机的单词，作为潜在的启动名称。&lt;/p&gt;
&lt;p&gt;在 Android Studio 的编辑器视图中查看 pubspec 时，点击右上角的 &lt;strong&gt;Pub get&lt;/strong&gt;，这将包拉到你的项目中。你应该在控制台中看到以下内容:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;flutter pub get
Running &lt;span class=&#34;s2&#34;&gt;&amp;#34;flutter pub get&amp;#34;&lt;/span&gt; in startup_namer...
Process finished with &lt;span class=&#34;nb&#34;&gt;exit&lt;/span&gt; code &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行该应用。&lt;/p&gt;
&lt;p&gt;随意滚动，查看持续供应的拟创业公司名称。&lt;/p&gt;
&lt;h2 id=&#34;将图标添加到列表中&#34;&gt;将图标添加到列表中&lt;/h2&gt;
&lt;p&gt;在这一步中，你将为每一行添加心形图标。在下一步中，您将使它们可点击并保存收藏夹。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;_RandomWordsState&lt;/code&gt; 中添加一个 &lt;code&gt;_saved&lt;/code&gt; Set。这个 &lt;code&gt;Set&lt;/code&gt; 存储了用户收藏的单词配对。&lt;code&gt;Set&lt;/code&gt; 比 &lt;code&gt;List&lt;/code&gt; 更受欢迎，因为一个正确实现的 &lt;code&gt;Set&lt;/code&gt; 不允许重复的条目。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_RandomWordsState&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_suggestions&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_saved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;     &lt;span class=&#34;c1&#34;&gt;// NEW
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_biggerFont&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TextStyle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;fontSize:&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;18.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;_buildRow&lt;/code&gt; 函数中，添加一个 &lt;code&gt;alreadySaved&lt;/code&gt; 检查，以确保一个单词配对还没有被添加到收藏夹中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_buildRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_saved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// NEW
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;_buildRow()&lt;/code&gt; 中，你还将为 &lt;code&gt;ListTile&lt;/code&gt; 对象添加心形图标以实现收藏夹。在下一步中，你将添加与心形图标交互的功能。&lt;/p&gt;
&lt;p&gt;在文本之后添加图标，如下图所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_buildRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_saved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListTile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asPascalCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;style:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_biggerFont&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nl&#34;&gt;trailing:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Icon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;// NEW from here... 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Icons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favorite&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Icons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favorite_border&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;color:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Colors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;red&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// ... to here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;热重新加载应用程序。&lt;/p&gt;
&lt;p&gt;你现在应该看到每一行都有空心，但它们还没有互动。&lt;/p&gt;
&lt;p&gt;Android&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/819e2ff89da9421a.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;iOS&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/4df48933551e7c48.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;遇到问题了&#34;&gt;遇到问题了？&lt;/h3&gt;
&lt;p&gt;如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/blob/master/startup_namer/step5_add_icons/lib/main.dart&#34;&gt;lib/main.dart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;增加互动性&#34;&gt;增加互动性&lt;/h2&gt;
&lt;p&gt;在这一步中，你将使心形图标可以点击。当用户点击列表中的一个条目，切换其收藏状态时，该词对就会从一组保存的收藏夹中添加或删除。&lt;/p&gt;
&lt;p&gt;要做到这一点，你将修改 &lt;code&gt;_buildRow&lt;/code&gt; 函数。如果一个词条已经被添加到收藏夹中，再次点击它就会将其从收藏夹中删除。当一个磁贴被点击后，函数会调用 &lt;code&gt;setState()&lt;/code&gt; 来通知框架状态已经改变。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;_buildRow&lt;/code&gt; 方法中加入 &lt;code&gt;onTap&lt;/code&gt;，如下图所示:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_buildRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_saved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListTile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asPascalCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;style:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_biggerFont&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nl&#34;&gt;trailing:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Icon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Icons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favorite&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Icons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;favorite_border&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;color:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Colors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;red&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nl&#34;&gt;onTap:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;      &lt;span class=&#34;c1&#34;&gt;// NEW lines from here...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;n&#34;&gt;setState&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alreadySaved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;n&#34;&gt;_saved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; 
          &lt;span class=&#34;n&#34;&gt;_saved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; 
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; 
      &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;               &lt;span class=&#34;c1&#34;&gt;// ... to here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提示：在 Flutter 的反应式框架中，调用 &lt;code&gt;setState()&lt;/code&gt; 会触发对 &lt;code&gt;State&lt;/code&gt; 对象的 &lt;code&gt;build()&lt;/code&gt; 方法的调用，导致 UI 的更新。&lt;/p&gt;
&lt;p&gt;热重载应用。&lt;/p&gt;
&lt;p&gt;你应该能够点击任何磁贴来收藏或不收藏该条目。点击瓷砖会产生一个隐含的从点击点发出的泼墨动画。&lt;/p&gt;
&lt;p&gt;Android&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/43dfc7ba5f728e8f.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;iOS&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/e7a99a1b94bea7d4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;遇到问题了-1&#34;&gt;遇到问题了？&lt;/h3&gt;
&lt;p&gt;如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/blob/master/startup_namer/step6_add_interactivity/lib/main.dart&#34;&gt;lib/main.dart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;导航到一个新的屏幕&#34;&gt;导航到一个新的屏幕&lt;/h2&gt;
&lt;p&gt;在这一步中，您将添加一个新的页面（在 Flutter 中称为路由），显示收藏夹。您将学习如何在主页路线和新路由之间进行导航。&lt;/p&gt;
&lt;p&gt;在 Flutter 中，&lt;code&gt;Navigator&lt;/code&gt; 管理着一个包含应用程序路由的堆栈。将一个路由推到 &lt;code&gt;Navigator&lt;/code&gt; 的堆栈上，会将显示更新到该路由。从 &lt;code&gt;Navigator&lt;/code&gt; 的堆栈中弹出一条路由，会将显示返回到之前的路由。&lt;/p&gt;
&lt;p&gt;接下来，您将在 &lt;code&gt;_RandomWordsState&lt;/code&gt; 的 &lt;code&gt;build&lt;/code&gt; 方法中为 &lt;code&gt;AppBar&lt;/code&gt; 添加一个列表图标。当用户点击列表图标时，一个包含保存的收藏夹的新路由会被推送到 &lt;code&gt;Navigator&lt;/code&gt;，显示图标。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;build&lt;/code&gt; 方法中添加图标及其对应的操作:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;_RandomWordsState&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;State&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scaffold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;appBar:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AppBar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Startup Name Generator&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;nl&#34;&gt;actions:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;// NEW lines from here...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;n&#34;&gt;IconButton&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;icon:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Icon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Icons&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;onPressed:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_pushSaved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                      &lt;span class=&#34;c1&#34;&gt;// ... to here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提示：一些小组件属性会取一个小组件(&lt;code&gt;child&lt;/code&gt;)，而其他属性，如 &lt;code&gt;action&lt;/code&gt;，会取一组小组件(&lt;code&gt;children&lt;/code&gt;), 如方括号(&lt;code&gt;[]&lt;/code&gt;)所示。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;_RandomWordsState&lt;/code&gt; 类中添加一个 &lt;code&gt;_pushSaved()&lt;/code&gt; 函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_pushSaved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;热重新加载应用程序。&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/a114478ae13b853.png&#34;&gt;列表图标&lt;/a&gt;出现在应用栏中。点击它还没有任何作用，因为 &lt;code&gt;_pushSaved&lt;/code&gt; 函数是空的。&lt;/p&gt;
&lt;p&gt;接下来，你将建立一条路由，并将其推送到 &lt;code&gt;Navigator&lt;/code&gt; 的栈中。这个操作会改变屏幕以显示新的路由。新页面的内容是在 &lt;code&gt;MaterialPageRoute&lt;/code&gt; 的构建器属性中以匿名函数的方式构建的。&lt;/p&gt;
&lt;p&gt;调用 &lt;code&gt;Navigator.push&lt;/code&gt;，如下图所示，它将路由推送到 &lt;code&gt;Navigator&lt;/code&gt; 的堆栈中。IDE 会抱怨无效代码，但你会在下一节中解决这个问题。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_pushSaved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，你将添加 &lt;code&gt;MaterialPageRoute&lt;/code&gt; 和它的构建器。现在，添加生成 &lt;code&gt;ListTile&lt;/code&gt; 行的代码。&lt;code&gt;ListTile&lt;/code&gt; 的 &lt;code&gt;divideTiles()&lt;/code&gt; 方法在每个 &lt;code&gt;ListTile&lt;/code&gt; 之间增加了水平间距。被划分的变量持有通过方便函数 &lt;code&gt;toList()&lt;/code&gt; 转换为列表的最终行。&lt;/p&gt;
&lt;p&gt;添加代码，如下面的代码片段所示:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_pushSaved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;Navigator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;n&#34;&gt;MaterialPageRoute&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;// NEW lines from here...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nl&#34;&gt;builder:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tiles&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_saved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WordPair&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
              &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListTile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
                &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
                  &lt;span class=&#34;n&#34;&gt;pair&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asPascalCase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                  &lt;span class=&#34;nl&#34;&gt;style:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_biggerFont&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
              &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
          &lt;span class=&#34;kd&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;divided&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListTile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;divideTiles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;nl&#34;&gt;context:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nl&#34;&gt;tiles:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tiles&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;toList&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

          &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Scaffold&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
            &lt;span class=&#34;nl&#34;&gt;appBar:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AppBar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
              &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Saved Suggestions&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;nl&#34;&gt;body:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ListView&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;children:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;divided&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// ...to here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;builder&lt;/code&gt; 属性返回一个 &lt;code&gt;Scaffold&lt;/code&gt;，包含名为 &lt;code&gt;SavedSuggestions&lt;/code&gt; 的新路由的应用栏。新路由的主体由一个包含 &lt;code&gt;ListTiles&lt;/code&gt; 行的 &lt;code&gt;ListView&lt;/code&gt; 组成。每一行都由一个分隔符隔开。&lt;/p&gt;
&lt;p&gt;热重载应用。将一些选择收藏起来，然后点击应用栏中的列表图标。新的路由出现，包含收藏夹。请注意，Navigator 在应用栏中增加了一个&amp;quot;返回&amp;quot;按钮。你不必明确地实现 &lt;code&gt;Navigator.pop&lt;/code&gt;。点击&amp;quot;返回&amp;quot;按钮就可以返回到主路由。&lt;/p&gt;
&lt;p&gt;iOS - Main route&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/928693968b8e482a.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;iOS - Saved suggestions route&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/2245376356747d5a.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;遇到问题了-2&#34;&gt;遇到问题了？&lt;/h3&gt;
&lt;p&gt;如果你的应用程序没有正确运行，那么你可以使用下面链接中的代码来回到正轨。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/flutter/codelabs/blob/master/startup_namer/step7_navigate_route/lib/main.dart&#34;&gt;lib/main.dart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用主题改变用户界面&#34;&gt;使用主题改变用户界面&lt;/h2&gt;
&lt;p&gt;在这一步中，您将修改应用程序的主题。主题控制你的应用程序的外观和感觉。您可以使用默认主题，这取决于物理设备或模拟器，或者自定义主题以反映您的品牌。&lt;/p&gt;
&lt;p&gt;您可以通过配置 &lt;a href=&#34;https://docs.flutter.io/flutter/material/ThemeData-class.html&#34;&gt;ThemeData&lt;/a&gt; 类轻松更改应用程序的主题。应用程序使用默认主题，但你会将应用程序的主色调改为白色。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;MyApp&lt;/code&gt; 类中更改颜色:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;MyApp&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StatelessWidget&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;err&#34;&gt;@&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;override&lt;/span&gt;
  &lt;span class=&#34;n&#34;&gt;Widget&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;BuildContext&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;context&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MaterialApp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;Startup Name Generator&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;nl&#34;&gt;theme:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ThemeData&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;// Add the 3 lines from here... 
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nl&#34;&gt;primaryColor:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Colors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;white&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;                         &lt;span class=&#34;c1&#34;&gt;// ... to here.
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;nl&#34;&gt;home:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;RandomWords&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;热重载应用。现在整个背景都是白色的，甚至应用栏也是白色的。&lt;/p&gt;
&lt;p&gt;作为一个练习，使用 &lt;code&gt;ThemeData&lt;/code&gt; 来改变 UI 的其他方面。Material 库中的 &lt;a href=&#34;https://docs.flutter.io/flutter/material/Colors-class.html&#34;&gt;Colors&lt;/a&gt; 类提供了许多你可以玩的颜色常量。热重载使得对 UI 的实验变得快速而简单。&lt;/p&gt;
&lt;p&gt;Android&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/5d4ed8aeea9e4d0a.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;iOS&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/c325151f1ae4820d.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;遇到问题了-3&#34;&gt;遇到问题了？&lt;/h3&gt;
&lt;p&gt;如果你已经偏离了轨道，那么使用下面链接中的代码来查看最终应用的代码。&lt;/p&gt;
&lt;p&gt;= &lt;a href=&#34;https://github.com/flutter/codelabs/blob/master/startup_namer/step8_themes/lib/main.darts&#34;&gt;lib/main.dart&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;做得很好&#34;&gt;做得很好！&lt;/h2&gt;
&lt;p&gt;你写了一个交互式的 Flutter 应用，可以在 iOS 和 Android 上运行，具体做法如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;编写 Dart 代码。&lt;/li&gt;
&lt;li&gt;使用热重载来加快开发周期。&lt;/li&gt;
&lt;li&gt;实现一个有状态的 widget，为你的应用添加交互性。&lt;/li&gt;
&lt;li&gt;创建途径并添加在原途径和新途径之间移动的逻辑。&lt;/li&gt;
&lt;li&gt;学习如何使用主题改变你的应用程序的 UI 外观。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;今后的步骤&#34;&gt;今后的步骤&lt;/h2&gt;
&lt;p&gt;从以下资源中了解更多关于 Flutter SDK 的信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/layout&#34;&gt;Flutter 中的布局&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/interactive&#34;&gt;增加互动性教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/development/ui/widgets-intro&#34;&gt;组件介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/flutter-for/android-devs&#34;&gt;为 Android 开发者提供的 Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/flutter-for/react-native-devs&#34;&gt;针对 React Native 开发者的 Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/flutter-for/web-devs&#34;&gt;Web 开发人员的 Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/flutterdev&#34;&gt;Flutter YouTube 频道&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他资源包括以下几点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905&#34;&gt;用 Flutter 构建本地移动应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/from-java-to-dart/#1&#34;&gt;从 Java 到 Dart codelab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/cookbook/&#34;&gt;Flutter cookbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://flutter.dev/bootstrap-into-dart/&#34;&gt;融入 Dart 的 Bootstrap：了解更多关于这门语言的信息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，&lt;a href=&#34;https://flutter.dev/community&#34;&gt;与 Flutter 社区联系起来!&lt;/a&gt;&lt;/p&gt;
</description>
                
                        <author>焉知非鱼@fakeEmailToMakeValidatorHappy.com (焉知非鱼)</author>
                
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/categories/programming">programming</category>
                                
                            
                        
                     
                        
                             
                            
                                
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/flutter">flutter</category>
                                 
                                    <category domain="https://ohmyweekly.github.io/tags/app">app</category>
                                
                            
                        
                    
                
                <guid>https://ohmyweekly.github.io/notes/write-your-first-flutter-app-part-two/</guid>
                <pubDate>Fri, 26 Jun 2020 00:00:00 +0800</pubDate>
            </item>
        
    </channel>
</rss>



{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003ch1 id=\"扩展-raku-中的类型\"\u003e扩展 Raku 中的类型\u003c/h1\u003e\n\u003ch2 id=\"使用继承\"\u003e使用继承\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBetterInt\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eeven\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eBetterInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e71\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# False\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# 113\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003emy BetterInt $x\u003c/code\u003e 约束 \u003ccode\u003e$x\u003c/code\u003e 只能包含  \u003cem\u003eBetterInt\u003c/em\u003e 或它的子类这种类型的对象。\u003ccode\u003e.= new: 42\u003c/code\u003e 等价于 \u003ccode\u003e= BetterInt.new: 42\u003c/code\u003e。\n下面的子例程期望接收一个 \u003cem\u003eInt\u003c/em\u003e 型的参数，但是你给它传递一个 \u003cem\u003eBetterInt\u003c/em\u003e 类型的参数它会很高兴:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\$x is \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eBetterInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003efoo\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# $x is 42\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"but-but-but\"\u003eBut\u0026hellip; But\u0026hellip; But\u0026hellip;\u003c/h2\u003e\n\u003cp\u003e另外一个选择是掺合进一个角色(role)。\u003cem\u003ebut\u003c/em\u003e 中缀操作符创建对象的一份拷贝并为该对象添加一个方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e \u003cspan class=\"k\"\u003ebut\u003c/span\u003e \u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eeven\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当然角色不一定是内联的。这儿有另外一个例子使用了一个预定义的角色并且还展示了我们的对象确实被拷贝了一份：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003eBetter\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ebetter\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eYes, I am better\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFoo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.attr\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003erw\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eoriginal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$copy\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e \u003cspan class=\"k\"\u003ebut\u003c/span\u003e \u003cspan class=\"nc\"\u003eBetter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$copy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eattr\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecopy\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# still \u0026#39;original\u0026#39;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$copy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eattr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# this one is \u0026#39;copy\u0026#39;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$copy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebetter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$original\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebetter\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# fatal error: can\u0026#39;t find method\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# original\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# copy\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Yes, I am better\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Method \u0026#39;better\u0026#39; not found for invocant of class \u0026#39;Foo\u0026#39;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#   in block \u0026lt;unit\u0026gt; at test.p6 line 18\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这看起来挺不错的，但是对于我们原来的目标来说，这个方法还是相当弱的：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e \u003cspan class=\"k\"\u003ebut\u003c/span\u003e \u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eeven\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e72\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# No such method!\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e那个角色被混合进我们容器里面存储的对象中了；所以一旦我们在容器中放进了一个新的值，或高级点的东西，那么 \u003cem\u003e.even\u003c/em\u003e 方法就不见了，除非我们再次把那个角色混合进来。\u003c/p\u003e\n\u003ch2 id=\"子例程\"\u003e子例程\u003c/h2\u003e\n\u003cp\u003e你知道你可以把子例程当做方法用嘛？ 你接收那个对象作为子例程的第一个位置参数并且你甚至能继续使用链式方法调用，但是不能把那些链子分解成多行：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eeven\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$^a\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u0026amp;\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# TRUE\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这确实是为核心类型添加额外功能的一种得体方式。我们的子例程定义中的 \u003ccode\u003e$^a\u003c/code\u003e 引用第一个参数（我们在调用的那个对象）并且整个子例程也可以被写为：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"飞龙在天\"\u003e飞龙在天\u003c/h2\u003e\n\u003cp\u003e不管\u003ca href=\"http://shop.oreilly.com/product/9780596517748.do\"\u003eJavaccript 的那些人们怎么跟你说\u003c/a\u003e, 然而扩充原生类型是危险的。因为你正影响程序的所有部分。甚至看不到你的扩充的模块也受到影响。\u003c/p\u003e\n\u003cp\u003e现在我有权告诉你，我跟你说过，你工作的核电厂融化了，让我们看看一些代码：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"c1\"\u003e# Foo.pm6\u003c/span\u003e\n\u003cspan class=\"k\"\u003eunit\u003c/span\u003e \u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eFoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"n\"\u003efob\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# Bar.pm6\u003c/span\u003e\n\u003cspan class=\"k\"\u003eunit\u003c/span\u003e \u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eBar\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003eMONKEY-TYPING\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eaugment\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eeven\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# test.p6\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eFoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eBar\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e72\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"n\"\u003efob\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所有的行为都发生在 \u003cem\u003eBar.pm6\u003c/em\u003e 中。首先，我们写了一行 \u003cem\u003euse MONKEY-TYPING\u003c/em\u003e 声明，它告诉我们正在做一些危险的行为。然后我们在类 \u003cstrong\u003eclass Int\u003c/strong\u003e 的前面使用了 \u003cem\u003eaugment\u003c/em\u003e 关键字以扩充这个已经存在的类。我们的扩充添加了一个叫 \u003cem\u003eeven\u003c/em\u003e 的方法以告诉我们那个 Int 是否是偶数。\u003c/p\u003e\n\u003cp\u003e所有的整数都可以使用 \u003cem\u003eeven\u003c/em\u003e 方法了，这虽然达到了我们的要求但是有点危险。\u003c/p\u003e\n\u003ch2 id=\"我邪恶了\"\u003e我邪恶了\u003c/h2\u003e\n\u003cp\u003e我们来扩充 \u003ca href=\"http://docs.raku.org/type/Cool\"\u003eCool 类型\u003c/a\u003e以涵盖所有的西文排版行长单位：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003eMONKEY-TYPING\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eaugment\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nb\"\u003eCool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eeven\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e72\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e72\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003epi\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e ½\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# Method \u0026#39;even\u0026#39; not found for invocant of class \u0026#39;Int\u0026#39;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# in block \u0026lt;unit\u0026gt; at test.p6 line 8\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e糟糕，程序奔溃了！原因是在我们扩充 \u003cstrong\u003eCool\u003c/strong\u003e 类型的时候，派生自 \u003cstrong\u003eCool\u003c/strong\u003e 的所有类型已经成型了(composed)。所以为了让它能工作，我们必须使用 \u003ccode\u003e.^compose\u003c/code\u003e 元对象协议方法来重新构成它们：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003eMONKEY-TYPING\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eaugment\u003c/span\u003e \u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nb\"\u003eCool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eeven\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003ecompose\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNum\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eRat\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eIntStr\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eNumStr\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eRatStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e72\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e72\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"no\"\u003epi\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e ½\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eeven\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# False\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# False\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它现在能工作了！Int, Num, Rat, Str, IntStr, NumStr, RatStr 类型拥有了 \u003ccode\u003e.even\u003c/code\u003e 方法(注意：这些不是继承自 Cool 的仅有的类型)! 这既邪恶又让人吃惊。\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e结论\u003c/h2\u003e\n\u003cp\u003e当扩充 Raku 的核心类型或其它任意类的功能时，你有几种选择。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用 \u003cstrong\u003eis Class\u003c/strong\u003e 子类\u003c/li\u003e\n\u003cli\u003e使用 \u003cstrong\u003ebut Role\u003c/strong\u003e 混合一个角色\u003c/li\u003e\n\u003cli\u003e使用 \u003ccode\u003e$objec.\u0026amp;sub\u003c/code\u003e 调用子例程作为方法使用\u003c/li\u003e\n\u003cli\u003e使用  augment（注意安全）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"http://blogs.perl.org/users/zoffix_znet/2016/04/extra-typical-perl-6.html\"\u003ehttp://blogs.perl.org/users/zoffix_znet/2016/04/extra-typical-perl-6.html\u003c/a\u003e\u003c/p\u003e\n","text":"扩展 Raku 中的类型 使用继承 class BetterInt is Int { method even { self %% 2 } } my BetterInt $x .= new: 42; say $x.even; $x .= new: 71; say $x.even; say $x + 42; # OUTPUT: # True # False # 113 my BetterInt $x 约束 $x 只能包含 BetterInt 或它的子类这种类型的对象。.= new: 42 等价于 = BetterInt.new: 42。 下面的子例程期望接收一个 Int 型的参数，但是你给它传递一个 BetterInt 类型的参数它会很高兴:\nsub foo(Int $x) { say \u0026#34;\\$x is $x\u0026#34;} my BetterInt $x .= new: 42; foo $x; # OUTPUT: # $x is 42 But\u0026hellip; But\u0026hellip; But\u0026hellip; 另外一个选择是掺合进一个角色(role)。but 中缀操作符创建对象的一份拷贝并为该对象添加一个方法:\nmy $x = 42 but role { method even { self %% 2 } }; say $x.even; # OUTPUT: # True 当然角色不一定是内联的。这儿有另外一个例子使用了一个预定义的角色并且还展示了我们的对象确实被拷贝了一份：\nrole Better { method better { \u0026#34;Yes, I am better\u0026#34; } } class Foo { has $.attr is rw } my $original = Foo.new: :attr\u0026lt;original\u0026gt;; my $copy = $original but Better; $copy.attr = \u0026#39;copy\u0026#39;; say $original.attr; # still \u0026#39;original\u0026#39; say $copy.attr; # this one is \u0026#39;copy\u0026#39; say $copy.better; say $original.better; # fatal error: can\u0026#39;t find method # OUTPUT: # original # copy # Yes, I am better # Method \u0026#39;better\u0026#39; not found for invocant of class \u0026#39;Foo\u0026#39; # in block \u0026lt;unit\u0026gt; at test.p6 line 18 这看起来挺不错的，但是对于我们原来的目标来说，这个方法还是相当弱的：\nmy $x = 42 but role { method even { self %% 2 } }; say $x.even; # True $x = 72; say $x.even; # No such method! 那个角色被混合进我们容器里面存储的对象中了；所以一旦我们在容器中放进了一个新的值，或高级点的东西，那么 .even 方法就不见了，除非我们再次把那个角色混合进来。\n子例程 你知道你可以把子例程当做方法用嘛？ 你接收那个对象作为子例程的第一个位置参数并且你甚至能继续使用链式方法调用，但是不能把那些链子分解成多行：\nsub even { $^a %% 2 }; say 42.\u0026amp;even.uc; # OUTPUT: # TRUE 这确实是为核心类型添加额外功能的一种得体方式。我们的子例程定义中的 $^a 引用第一个参数（我们在调用的那个对象）并且整个子例程也可以被写为：\nsub ($x) { $x %% 2 } 飞龙在天 不管Javaccript 的那些人们怎么跟你说, 然而扩充原生类型是危险的。因为你正影响程序的所有部分。甚至看不到你的扩充的模块也受到影响。\n现在我有权告诉你，我跟你说过，你工作的核电厂融化了，让我们看看一些代码：\n# Foo.pm6 unit module Foo; sub fob is export { say 42.even; } # Bar.pm6 unit module Bar; use MONKEY-TYPING; augment class Int { method even { self %% 2 } } # test.p6 use Foo; use Bar; say 72.even; fob; # OUTPUT: # True # True 所有的行为都发生在 Bar.pm6 中。首先，我们写了一行 use MONKEY-TYPING 声明，它告诉我们正在做一些危险的行为。然后我们在类 class Int 的前面使用了 augment 关键字以扩充这个已经存在的类。我们的扩充添加了一个叫 even 的方法以告诉我们那个 Int 是否是偶数。\n所有的整数都可以使用 even 方法了，这虽然达到了我们的要求但是有点危险。\n我邪恶了 我们来扩充 Cool 类型以涵盖所有的西文排版行长单位：\nuse MONKEY-TYPING; augment class Cool { method even { self %% 2 } } .say for 72.even, \u0026#39;72\u0026#39;.even, pi.even, ½.even; # OUTPUT: # Method \u0026#39;even\u0026#39; not found for invocant of class \u0026#39;Int\u0026#39; # in block \u0026lt;unit\u0026gt; at test.p6 line 8 糟糕，程序奔溃了！原因是在我们扩充 Cool 类型的时候，派生自 Cool 的所有类型已经成型了(composed)。所以为了让它能工作，我们必须使用 .^compose 元对象协议方法来重新构成它们：\nuse MONKEY-TYPING; augment class Cool { method even { self %% 2 } } .^compose for Int, Num, Rat, Str, IntStr, NumStr, RatStr; .say for 72.even, \u0026#39;72\u0026#39;.even, pi.even, ½.even; # OUTPUT: # True # True # False # False 它现在能工作了！Int, Num, Rat, Str, IntStr, NumStr, RatStr 类型拥有了 .even 方法(注意：这些不是继承自 Cool 的仅有的类型)! 这既邪恶又让人吃惊。\n结论 当扩充 Raku 的核心类型或其它任意类的功能时，你有几种选择。\n 使用 is Class 子类 使用 but Role 混合一个角色 使用 $objec.\u0026amp;sub 调用子例程作为方法使用 使用 augment（注意安全）  http://blogs.perl.org/users/zoffix_znet/2016/04/extra-typical-perl-6.html\n"},"name":"扩展 Raku 中的类型","published":"2021-07-11T00:00:00Z","summary":"There Is More Than One Way to Extend It","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-11-25-there-is-more-than-one-way-to-extend-it/"}],"name":"compose","type":"feed","url":"https://ohmyweekly.github.io/tags/compose/"}
{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003cp\u003eRaku 有非常好的 Unicode 支持, 但是输入 Unicode 一直是一个很大的问题。在 REPL 中, 输入 Unicode 都不太方便。下面介绍几种方法来方便地输入 Unicode。\u003c/p\u003e\n\u003ch1 id=\"comma\"\u003eComma\u003c/h1\u003e\n\u003cp\u003e最方便的是使用 Raku 自己的 IDE, \u003ca href=\"http://commaide.com\"\u003eComma\u003c/a\u003e。但是需要做两个设置:\u003c/p\u003e\n\u003cp\u003e首先, 切换到 Comma IDE, 点击左上角菜单栏的 \u003cstrong\u003eComma\u003c/strong\u003e 选项, 在弹出的 \u003cstrong\u003ePreference\u003c/strong\u003e 窗口中, 找到左侧菜单栏中的 \u003cstrong\u003eEditor\u003c/strong\u003e 选项, 点击 \u003cstrong\u003eCode Style\u003c/strong\u003e 中的 \u003cstrong\u003eRaku\u003c/strong\u003e, 在右侧的窗口的最上面, 找到 \u003cstrong\u003eSchema\u003c/strong\u003e 一行, 点击倒三角图标, 在下拉菜单中选择 \u003cstrong\u003eProject\u003c/strong\u003e。然后在第二行文字中找到 \u003cstrong\u003eEditor Behavior\u003c/strong\u003e, 勾选 \u003cstrong\u003eConvert operators to Unicode\u003c/strong\u003e。完成后点击右下角的 \u003cstrong\u003eApply\u003c/strong\u003e, 然后点击 \u003cstrong\u003eOK\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e这样当你在 Comma 中键入 \u003ccode\u003e\u0026gt;\u0026gt;\u003c/code\u003e 这样的运算符后, Comma 会自动把它转为 Unicode 形式的 \u003ccode\u003e»\u003c/code\u003e。目前已支持大部分 Unicode 运算符了。Comma 是跨平台的 Raku 编辑器, 支持 Windows、Linux 和 MacOS, 所以你想跨平台开发的话, Comma 值得一试。\u003c/p\u003e\n\u003ch1 id=\"kitty\"\u003eKitty\u003c/h1\u003e\n\u003cp\u003e如果你想在 Vim 中开发 Raku, 又不想失去输入 Unicode 的乐趣, 请使用 \u003ca href=\"https://github.com/kovidgoyal/kitty\"\u003eKitty\u003c/a\u003e 终端。点开 Kitty 终端, 使用快捷键 Ctrl + Shift + U 即可触发输入 Unnicode 的界面(也可以键入命令 kitty +kitten unicode_input 来触发)。再通过快捷键  F1、F2、F3 和 F4 (或通过 Ctrl+[ 和 Ctrl+] 切换标签)可以分别按代码搜索 Unicode、按名字搜索 Unicode、按表情搜索和收藏。\u003c/p\u003e\n\u003cp\u003e例如在 REPL 中键入 Unicode 字符:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ raku\nWelcome to 𝐑𝐚𝐤𝐮𝐝𝐨™ v2021.02.\nImplementing the 𝐑𝐚𝐤𝐮™ programming language v6.d.\nBuilt on MoarVM version 2021.02.\n\nTo \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;exit\u0026#39;\u003c/span\u003e or \u003cspan class=\"s1\"\u003e\u0026#39;^D\u0026#39;\u003c/span\u003e\n\u0026gt; my @a \u003cspan class=\"o\"\u003e=\u003c/span\u003e 1..5\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u0026gt; @a».sin\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e借助 Kitty, 数组 \u003ccode\u003e@a\u003c/code\u003e 后面的 \u003ccode\u003e»\u003c/code\u003e 可以这样输入, 先输入 \u003ccode\u003e@a\u003c/code\u003e, 然后使用快捷键 Shift + Ctrl + U 调出 Kitty 的 \u003cstrong\u003eUnicode input\u003c/strong\u003e 界面, 一般有两种方法, 第一种是通过快捷键 F1, 然后输入对应的 Unicode 编码, 再回车。第二种是通过快捷键 F2, 通过名字搜索, 例如输入单词 quota, 会出现一堆引号符号供你选择, 按上下方向键选中 \u003ccode\u003e»\u003c/code\u003e, 再回车即可。Vim 中同理。\u003c/p\u003e\n\u003ch1 id=\"julia-repl\"\u003eJulia REPL\u003c/h1\u003e\n\u003cp\u003e在 REPL 中输入 \u003ccode\u003e\\′ + 单词 + Tab, 例如输入 \u003c/code\u003e\\heartsuit` 再按 Tab, 就会自动变成 ♡\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003ejulia\u0026gt; \u003cspan class=\"se\"\u003e\\h\u003c/span\u003eeartsuit\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"ipython\"\u003eIPython\u003c/h1\u003e\n\u003cp\u003e\u003ccode\u003e\\^\u003c/code\u003e 输入上标, \u003ccode\u003e\\_p\u003c/code\u003e 输入下标。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e$ ipython\n\u003cspan class=\"se\"\u003e\\^\u003c/span\u003ea\n\u003cspan class=\"se\"\u003e\\_\u003c/span\u003ep\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"vscode\"\u003eVScode\u003c/h1\u003e\n\u003cp\u003e\u003ccode\u003e\\\\′ + 完整的单词 + Tab, VsCode 会自动转换为 Unicode。 例如 \u003c/code\u003e^a\u003ccode\u003e和\u003c/code\u003e_p`\u003c/p\u003e\n\u003ch1 id=\"dmenu\"\u003edmenu\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/perl\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#use strict;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#use warnings;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#use autodie;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#use utf8;\u003c/span\u003e\n\n\n\u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"nv\"\u003e$FH\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; | dmenu -i -l 30 -fn \u0026#39;-xos4-terminus-medium-r-*-*-10-*\u0026#39; | sed \u0026#39;s/^\\\\(.\\\\).*/\\\\1/\u0026#39; | tr -d \u0026#39;\\n\u0026#39; | { pbcopy; pbpaste; } \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# if you do not have the xos4-terminus font that makes characters a little bigger :\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# uncoment this line and use the second here document\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#open $FH, \u0026#34; | dmenu -i -l 30 | sed \u0026#39;s/^\\\\(.\\\\).*/\\\\1/\u0026#39; | tr -d \u0026#39;\\n\u0026#39; | { xsel -ib; xsel -ip; } \u0026#34;;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# also you can compile dmenu from source and change the font size directly in the C done\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# in the file config.h / config.def.h\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# this heredoc is well aligned with the -xos4-terminus-medium-r-*-*-10-* font\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"nv\"\u003e$FH\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026lt;\u0026lt;\u0026#39;\u003c/span\u003e\u003cspan class=\"dl\"\u003eEOF\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\n\u003c/span\u003e\u003cspan class=\"s\"\u003e«         hyper operator\n\u003c/span\u003e\u003cspan class=\"s\"\u003e»         hyper operator\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∈        membership\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∉        non-membership\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∪         set union\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∩         set intersection\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∖         set difference\n\u003c/span\u003e\u003cspan class=\"s\"\u003e≡         set equality\n\u003c/span\u003e\u003cspan class=\"s\"\u003e≢        set inequality\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊖        symmetric set difference\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊍         baggy multiplication\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊎         baggy addition\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∅        empty set\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊆        subset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊈         not a subset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊂        strict subset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊄        not a strict subset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∋        reverse membership\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∌          reverse non-membership\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊇        superset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊉         not a superset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊃        strict superset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⊅        not a strict superset\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∞         infinity\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⚛        atomic operator\n\u003c/span\u003e\u003cspan class=\"s\"\u003eπ        pi\n\u003c/span\u003e\u003cspan class=\"s\"\u003eτ         tau\n\u003c/span\u003e\u003cspan class=\"s\"\u003e𝑒         Euler\u0026#39;s number\n\u003c/span\u003e\u003cspan class=\"s\"\u003e∘         function composition\n\u003c/span\u003e\u003cspan class=\"s\"\u003e×        multiplication \n\u003c/span\u003e\u003cspan class=\"s\"\u003e÷        division\n\u003c/span\u003e\u003cspan class=\"s\"\u003e≤         inferior or equal\n\u003c/span\u003e\u003cspan class=\"s\"\u003e≥         greater or equal\n\u003c/span\u003e\u003cspan class=\"s\"\u003e≠   \t     inequality\n\u003c/span\u003e\u003cspan class=\"s\"\u003e−        substraction\n\u003c/span\u003e\u003cspan class=\"s\"\u003e≅       approximatively equal\n\u003c/span\u003e\u003cspan class=\"s\"\u003e…      sequence operator\n\u003c/span\u003e\u003cspan class=\"s\"\u003e‘         left single quotation mark\n\u003c/span\u003e\u003cspan class=\"s\"\u003e’         right single quotation mark\n\u003c/span\u003e\u003cspan class=\"s\"\u003e‚         single low-9 quotation mark \n\u003c/span\u003e\u003cspan class=\"s\"\u003e”         right double quotation mark\n\u003c/span\u003e\u003cspan class=\"s\"\u003e“         left double quotation mark\n\u003c/span\u003e\u003cspan class=\"s\"\u003e„         double low-9 quotation mark\n\u003c/span\u003e\u003cspan class=\"s\"\u003e｢         halfwidth left corner bracket\n\u003c/span\u003e\u003cspan class=\"s\"\u003e｣         halfwidth right corner bracket\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁺         plus superscript\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁻         minus superscript\n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁰         0 superscript\n\u003c/span\u003e\u003cspan class=\"s\"\u003e¹         1 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e²         2 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e³         3 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁴         4 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁵         5 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁶         6 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁷         7 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁸         8 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e⁹         9 superscript \n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u003c/span\u003e\u003cspan class=\"dl\"\u003eEOF\u003c/span\u003e\n\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# use this without -xos4-terminus-medium-r-*-*-10-* font\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e# the default font may change given which font packages are installed and given the font configurations\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e#print $FH \u0026lt;\u0026lt;\u0026#39;EOF\u0026#39;\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#«         hyper operator\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#»         hyper operator\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∈         membership\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∉         non-membership\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∪         set union\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∩         set intersection\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∖         set difference\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#≡         set equality\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#≢         set inequality\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊖         symmetric set difference\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊍         baggy multiplication\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊎         baggy addition\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∅         empty set\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊆         subset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊈         not a subset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊂         strict subset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊄         not a strict subset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∋         reverse membership\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∌         reverse non-membership\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊇         superset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊉         not a superset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊃         strict superset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⊅         not a strict superset\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∞         infinity\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⚛         atomic operator\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#π         pi\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#τ         tau\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#𝑒         Euler\u0026#39;s number\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#∘         function composition\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#×         multiplication \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#÷         division\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#≤         inferior or equal\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#≥         greater or equal\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#≠         inequality\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#−         substraction\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#≅         approximatively equal\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#…         sequence operator\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#‘         left single quotation mark\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#’         right single quotation mark\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#‚         single low-9 quotation mark \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#”         right double quotation mark\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#“         left double quotation mark\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#„         double low-9 quotation mark\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#｢         halfwidth left corner bracket\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#｣         halfwidth right corner bracket\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁺         plus superscript\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁻         minus superscript\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁰         0 superscript\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#¹         1 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#²         2 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#³         3 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁴         4 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁵         5 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁶         6 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁷         7 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁸         8 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#⁹         9 superscript \u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#EOF\u003c/span\u003e\n\u003cspan class=\"c1\"\u003e#;\u003c/span\u003e\n\n\n\n\u003cspan class=\"nb\"\u003eclose\u003c/span\u003e \u003cspan class=\"nv\"\u003e$FH\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n\n\n\u003cspan class=\"cp\"\u003e__END__\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=pod \n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head1 NAME\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003elazy_raku_unicode.pl\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head1 SYNOPSIS\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eThis script allows you to select a Unicode symbol from a drop-down menu that you can simply paste into your text editor, terminal or IDE.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eAll it does is send a heredoc through a pipe to dmenu, and copy to the clipboard the character that you selected.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eDmenu is a program that reads lines from stdin, display them in a menu, and write to stdout the lines selected.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eIt is not practical to execute this script from a terminal each time you want a character though. This is why it should be executed by sxhkd.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eSxhkd is the program that will call this script each time you press the right key combination.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eOnly the most useful Unicode characters are present to not make dmenu get too slow. (It is usually very fast when there is only ascii text.)\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eThis include most of the Raku operators that have a Unicode version, plus some quoting characters, superscripts, and mathematical constants.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head1 MANUAL INSTALLATION STEPS\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head2 INSTALLING DMENU\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eB\u0026lt;On Debian or Ubuntu :\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tsudo apt install suckless-tools\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eB\u0026lt;On Archlinux :\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tsudo pacman -Sy dmenu\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eB\u0026lt;Compile it from source :\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\thttps://tools.suckless.org/dmenu/\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head2 CHANGING DMENU FONT SIZE (OPTIIONAL)\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eYou have only two ways of changing the font size :\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eChange the default font with the B\u0026lt;-fn\u0026gt; flag (See dmenu(1) for the specifics).\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\t\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tdmenu -l 30 -fn \u0026#39;-xos4-terminus-medium-r-*-*-10-*\u0026#39;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eModify directly the C source code of dmenu. Only the files B\u0026lt;config.h / config.def.h\u0026gt;.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eSimply edit this line and change 10 by 14 for example.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tstatic const char *fonts[] = {\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\t\t\u0026#34;monospace:size=10\u0026#34;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\t};\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eThen execute sudo make install and you\u0026#39;re ready to go.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head2 INSTALLING SXHKD\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eB\u0026lt;On Debian or Ubuntu :\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tsudo apt install sxhkd\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eB\u0026lt;On Archlinux :\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tsudo pacman -Sy sxhkd\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head2 CONFIGURING SXHKD\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eB\u0026lt;Autostarting sxhkd at startup :\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003esimply put this line in B\u0026lt;~/.xprofile\u0026gt; :\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tsxhkd \u0026amp;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eB\u0026lt;Setting the keybinding :\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\t\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eAdd these two lines in B\u0026lt;~/.config/sxhkd/sxhkdrc\u0026gt;\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tctrl + apostrophe\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\t\t/path/to/lazy_raku_unicode.pl\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eThe keybinding have to start at the beginning of a line, and the command has to follow on the next line and be preceded by a tabulation.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eTo make sxhkd reload the config file, either kill it and relaunch it, or send a SIGUSR1 signal. This command can do it :\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\tpidof sxhkd | kill -SIGUSR1 $(cat /dev/stdin)\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eIf you want to use a different keybinding, please see sxhkd(1) and use xev(1) to find the name of keys.\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003eHere the name of some of the keys : ctrl, super, alt, Return .\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=head1 SEE ALSO\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003edmenu(1), sxhkd(1), xev(1)\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e\n\u003c/span\u003e\u003cspan class=\"cp\"\u003e=cut\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e参考链接: \u003ca href=\"https://docs.raku.org/language/unicode_entry\"\u003ehttps://docs.raku.org/language/unicode_entry\u003c/a\u003e\u003c/p\u003e\n","text":"Raku 有非常好的 Unicode 支持, 但是输入 Unicode 一直是一个很大的问题。在 REPL 中, 输入 Unicode 都不太方便。下面介绍几种方法来方便地输入 Unicode。\nComma 最方便的是使用 Raku 自己的 IDE, Comma。但是需要做两个设置:\n首先, 切换到 Comma IDE, 点击左上角菜单栏的 Comma 选项, 在弹出的 Preference 窗口中, 找到左侧菜单栏中的 Editor 选项, 点击 Code Style 中的 Raku, 在右侧的窗口的最上面, 找到 Schema 一行, 点击倒三角图标, 在下拉菜单中选择 Project。然后在第二行文字中找到 Editor Behavior, 勾选 Convert operators to Unicode。完成后点击右下角的 Apply, 然后点击 OK。\n这样当你在 Comma 中键入 \u0026gt;\u0026gt; 这样的运算符后, Comma 会自动把它转为 Unicode 形式的 »。目前已支持大部分 Unicode 运算符了。Comma 是跨平台的 Raku 编辑器, 支持 Windows、Linux 和 MacOS, 所以你想跨平台开发的话, Comma 值得一试。\nKitty 如果你想在 Vim 中开发 Raku, 又不想失去输入 Unicode 的乐趣, 请使用 Kitty 终端。点开 Kitty 终端, 使用快捷键 Ctrl + Shift + U 即可触发输入 Unnicode 的界面(也可以键入命令 kitty +kitten unicode_input 来触发)。再通过快捷键 F1、F2、F3 和 F4 (或通过 Ctrl+[ 和 Ctrl+] 切换标签)可以分别按代码搜索 Unicode、按名字搜索 Unicode、按表情搜索和收藏。\n例如在 REPL 中键入 Unicode 字符:\n$ raku Welcome to 𝐑𝐚𝐤𝐮𝐝𝐨™ v2021.02. Implementing the 𝐑𝐚𝐤𝐮™ programming language v6.d. Built on MoarVM version 2021.02. To exit type \u0026#39;exit\u0026#39; or \u0026#39;^D\u0026#39; \u0026gt; my @a = 1..5; \u0026gt; @a».sin 借助 Kitty, 数组 @a 后面的 » 可以这样输入, 先输入 @a, 然后使用快捷键 Shift + Ctrl + U 调出 Kitty 的 Unicode input 界面, 一般有两种方法, 第一种是通过快捷键 F1, 然后输入对应的 Unicode 编码, 再回车。第二种是通过快捷键 F2, 通过名字搜索, 例如输入单词 quota, 会出现一堆引号符号供你选择, 按上下方向键选中 », 再回车即可。Vim 中同理。\nJulia REPL 在 REPL 中输入 \\′ + 单词 + Tab, 例如输入 \\heartsuit` 再按 Tab, 就会自动变成 ♡\njulia\u0026gt; \\heartsuit IPython \\^ 输入上标, \\_p 输入下标。\n$ ipython \\^a \\_p VScode \\\\′ + 完整的单词 + Tab, VsCode 会自动转换为 Unicode。 例如 ^a和_p`\ndmenu #!/usr/bin/perl #use strict; #use warnings; #use autodie; #use utf8; open $FH, \u0026#34; | dmenu -i -l 30 -fn \u0026#39;-xos4-terminus-medium-r-*-*-10-*\u0026#39; | sed \u0026#39;s/^\\\\(.\\\\).*/\\\\1/\u0026#39; | tr -d \u0026#39;\\n\u0026#39; | { pbcopy; pbpaste; } \u0026#34;; # if you do not have the xos4-terminus font that makes characters a little bigger : # uncoment this line and use the second here document #open $FH, \u0026#34; | dmenu -i -l 30 | sed \u0026#39;s/^\\\\(.\\\\).*/\\\\1/\u0026#39; | tr -d \u0026#39;\\n\u0026#39; | { xsel -ib; xsel -ip; } \u0026#34;; # also you can compile dmenu from source and change the font size directly in the C done # in the file config.h / config.def.h # this heredoc is well aligned with the -xos4-terminus-medium-r-*-*-10-* font print $FH \u0026lt;\u0026lt;\u0026#39;EOF\u0026#39; « hyper operator » hyper operator ∈ membership ∉ non-membership ∪ set union ∩ set intersection ∖ set difference ≡ set equality ≢ set inequality ⊖ symmetric set difference ⊍ baggy multiplication ⊎ baggy addition ∅ empty set ⊆ subset ⊈ not a subset ⊂ strict subset ⊄ not a strict subset ∋ reverse membership ∌ reverse non-membership ⊇ superset ⊉ not a superset ⊃ strict superset ⊅ not a strict superset ∞ infinity ⚛ atomic operator π pi τ tau 𝑒 Euler\u0026#39;s number ∘ function composition × multiplication ÷ division ≤ inferior or equal ≥ greater or equal ≠ inequality − substraction ≅ approximatively equal … sequence operator ‘ left single quotation mark ’ right single quotation mark ‚ single low-9 quotation mark ” right double quotation mark “ left double quotation mark „ double low-9 quotation mark ｢ halfwidth left corner bracket ｣ halfwidth right corner bracket ⁺ plus superscript ⁻ minus superscript ⁰ 0 superscript ¹ 1 superscript ² 2 superscript ³ 3 superscript ⁴ 4 superscript ⁵ 5 superscript ⁶ 6 superscript ⁷ 7 superscript ⁸ 8 superscript ⁹ 9 superscript EOF ; # use this without -xos4-terminus-medium-r-*-*-10-* font # the default font may change given which font packages are installed and given the font configurations #print $FH \u0026lt;\u0026lt;\u0026#39;EOF\u0026#39; #« hyper operator #» hyper operator #∈ membership #∉ non-membership #∪ set union #∩ set intersection #∖ set difference #≡ set equality #≢ set inequality #⊖ symmetric set difference #⊍ baggy multiplication #⊎ baggy addition #∅ empty set #⊆ subset #⊈ not a subset #⊂ strict subset #⊄ not a strict subset #∋ reverse membership #∌ reverse non-membership #⊇ superset #⊉ not a superset #⊃ strict superset #⊅ not a strict superset #∞ infinity #⚛ atomic operator #π pi #τ tau #𝑒 Euler\u0026#39;s number #∘ function composition #× multiplication  #÷ division #≤ inferior or equal #≥ greater or equal #≠ inequality #− substraction #≅ approximatively equal #… sequence operator #‘ left single quotation mark #’ right single quotation mark #‚ single low-9 quotation mark  #” right double quotation mark #“ left double quotation mark #„ double low-9 quotation mark #｢ halfwidth left corner bracket #｣ halfwidth right corner bracket #⁺ plus superscript #⁻ minus superscript #⁰ 0 superscript #¹ 1 superscript  #² 2 superscript  #³ 3 superscript  #⁴ 4 superscript  #⁵ 5 superscript  #⁶ 6 superscript  #⁷ 7 superscript  #⁸ 8 superscript  #⁹ 9 superscript  #EOF #; close $FH; __END__ =pod =head1 NAME lazy_raku_unicode.pl =head1 SYNOPSIS This script allows you to select a Unicode symbol from a drop-down menu that you can simply paste into your text editor, terminal or IDE. All it does is send a heredoc through a pipe to dmenu, and copy to the clipboard the character that you selected. Dmenu is a program that reads lines from stdin, display them in a menu, and write to stdout the lines selected. It is not practical to execute this script from a terminal each time you want a character though. This is why it should be executed by sxhkd. Sxhkd is the program that will call this script each time you press the right key combination. Only the most useful Unicode characters are present to not make dmenu get too slow. (It is usually very fast when there is only ascii text.) This include most of the Raku operators that have a Unicode version, plus some quoting characters, superscripts, and mathematical constants. =head1 MANUAL INSTALLATION STEPS =head2 INSTALLING DMENU B\u0026lt;On Debian or Ubuntu :\u0026gt; sudo apt install suckless-tools B\u0026lt;On Archlinux :\u0026gt; sudo pacman -Sy dmenu B\u0026lt;Compile it from source :\u0026gt; https://tools.suckless.org/dmenu/ =head2 CHANGING DMENU FONT SIZE (OPTIIONAL) You have only two ways of changing the font size : Change the default font with the B\u0026lt;-fn\u0026gt; flag (See dmenu(1) for the specifics). dmenu -l 30 -fn \u0026#39;-xos4-terminus-medium-r-*-*-10-*\u0026#39; Modify directly the C source code of dmenu. Only the files B\u0026lt;config.h / config.def.h\u0026gt;. Simply edit this line and change 10 by 14 for example. static const char *fonts[] = { \u0026#34;monospace:size=10\u0026#34; }; Then execute sudo make install and you\u0026#39;re ready to go. =head2 INSTALLING SXHKD B\u0026lt;On Debian or Ubuntu :\u0026gt; sudo apt install sxhkd B\u0026lt;On Archlinux :\u0026gt; sudo pacman -Sy sxhkd =head2 CONFIGURING SXHKD B\u0026lt;Autostarting sxhkd at startup :\u0026gt; simply put this line in B\u0026lt;~/.xprofile\u0026gt; : sxhkd \u0026amp; B\u0026lt;Setting the keybinding :\u0026gt; Add these two lines in B\u0026lt;~/.config/sxhkd/sxhkdrc\u0026gt; ctrl + apostrophe /path/to/lazy_raku_unicode.pl The keybinding have to start at the beginning of a line, and the command has to follow on the next line and be preceded by a tabulation. To make sxhkd reload the config file, either kill it and relaunch it, or send a SIGUSR1 signal. This command can do it : pidof sxhkd | kill -SIGUSR1 $(cat /dev/stdin) If you want to use a different keybinding, please see sxhkd(1) and use xev(1) to find the name of keys. Here the name of some of the keys : ctrl, super, alt, Return . =head1 SEE ALSO dmenu(1), sxhkd(1), xev(1) =cut 参考链接: https://docs.raku.org/language/unicode_entry\n"},"name":"如何在 Raku 中输入 Unicode","published":"2021-03-01T00:00:00+08:00","summary":"How to Type Unicode in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-03-01-how-to-type-unicode-in-raku/"}],"name":"Unicode","type":"feed","url":"https://ohmyweekly.github.io/tags/unicode/"}
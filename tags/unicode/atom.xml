<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.79.0">Hugo</generator><title type="html"><![CDATA[Unicode on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/unicode/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/unicode/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/unicode/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/unicode/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2021-06-19T21:58:43+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/unicode/</id>
    
        
        <entry>
            <title type="html"><![CDATA[如何在 Raku 中输入 Unicode]]></title>
            <link href="https://ohmyweekly.github.io/notes/2021-03-01-how-to-type-unicode-in-raku/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
                <link href="https://ohmyweekly.github.io/notes/2021-02-17-method-isd/?utm_source=atom_feed" rel="related" type="text/html" title="Method-ish" />
                <link href="https://ohmyweekly.github.io/notes/2021-02-28-pattern-dispatch/?utm_source=atom_feed" rel="related" type="text/html" title="模式分派" />
                <link href="https://ohmyweekly.github.io/notes/2021-02-28-custom-when/?utm_source=atom_feed" rel="related" type="text/html" title="自定义 when" />
                <link href="https://ohmyweekly.github.io/notes/2021-02-16-contributing-to-raku/?utm_source=atom_feed" rel="related" type="text/html" title="为最年轻的 Raku 贡献力量" />
                <link href="https://ohmyweekly.github.io/notes/2021-01-30-caesarean-substrings-with-raku-and-perl/?utm_source=atom_feed" rel="related" type="text/html" title="Caesarean Substrings With Raku and Perl" />
            
                <id>https://ohmyweekly.github.io/notes/2021-03-01-how-to-type-unicode-in-raku/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2021-03-01T00:00:00+08:00</published>
            <updated>2021-03-01T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>How to Type Unicode in Raku</blockquote><p>Raku 有非常好的 Unicode 支持, 但是输入 Unicode 一直是一个很大的问题。在 REPL 中, 输入 Unicode 都不太方便。下面介绍几种方法来方便地输入 Unicode。</p>
<h1 id="comma">Comma</h1>
<p>最方便的是使用 Raku 自己的 IDE, <a href="http://commaide.com">Comma</a>。但是需要做两个设置:</p>
<p>首先, 切换到 Comma IDE, 点击左上角菜单栏的 <strong>Comma</strong> 选项, 在弹出的 <strong>Preference</strong> 窗口中, 找到左侧菜单栏中的 <strong>Editor</strong> 选项, 点击 <strong>Code Style</strong> 中的 <strong>Raku</strong>, 在右侧的窗口的最上面, 找到 <strong>Schema</strong> 一行, 点击倒三角图标, 在下拉菜单中选择 <strong>Project</strong>。然后在第二行文字中找到 <strong>Editor Behavior</strong>, 勾选 <strong>Convert operators to Unicode</strong>。完成后点击右下角的 <strong>Apply</strong>, 然后点击 <strong>OK</strong>。</p>
<p>这样当你在 Comma 中键入 <code>&gt;&gt;</code> 这样的运算符后, Comma 会自动把它转为 Unicode 形式的 <code>»</code>。目前已支持大部分 Unicode 运算符了。Comma 是跨平台的 Raku 编辑器, 支持 Windows、Linux 和 MacOS, 所以你想跨平台开发的话, Comma 值得一试。</p>
<h1 id="kitty">Kitty</h1>
<p>如果你想在 Vim 中开发 Raku, 又不想失去输入 Unicode 的乐趣, 请使用 <a href="https://github.com/kovidgoyal/kitty">Kitty</a> 终端。点开 Kitty 终端, 使用快捷键 Ctrl + Shift + U 即可触发输入 Unnicode 的界面(也可以键入命令 kitty +kitten unicode_input 来触发)。再通过快捷键  F1、F2、F3 和 F4 (或通过 Ctrl+[ 和 Ctrl+] 切换标签)可以分别按代码搜索 Unicode、按名字搜索 Unicode、按表情搜索和收藏。</p>
<p>例如在 REPL 中键入 Unicode 字符:</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ raku
Welcome to 𝐑𝐚𝐤𝐮𝐝𝐨™ v2021.02.
Implementing the 𝐑𝐚𝐤𝐮™ programming language v6.d.
Built on MoarVM version 2021.02.

To <span class="nb">exit</span> <span class="nb">type</span> <span class="s1">&#39;exit&#39;</span> or <span class="s1">&#39;^D&#39;</span>
&gt; my @a <span class="o">=</span> 1..5<span class="p">;</span>
&gt; @a».sin
</code></pre></div><p>借助 Kitty, 数组 <code>@a</code> 后面的 <code>»</code> 可以这样输入, 先输入 <code>@a</code>, 然后使用快捷键 Shift + Ctrl + U 调出 Kitty 的 <strong>Unicode input</strong> 界面, 一般有两种方法, 第一种是通过快捷键 F1, 然后输入对应的 Unicode 编码, 再回车。第二种是通过快捷键 F2, 通过名字搜索, 例如输入单词 quota, 会出现一堆引号符号供你选择, 按上下方向键选中 <code>»</code>, 再回车即可。Vim 中同理。</p>
<h1 id="julia-repl">Julia REPL</h1>
<p>在 REPL 中输入 <code>\′ + 单词 + Tab, 例如输入 </code>\heartsuit` 再按 Tab, 就会自动变成 ♡</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">julia&gt; <span class="se">\h</span>eartsuit
</code></pre></div><h1 id="ipython">IPython</h1>
<p><code>\^</code> 输入上标, <code>\_p</code> 输入下标。</p>
<div class="highlight"><pre class="chroma"><code class="language-bash" data-lang="bash">$ ipython
<span class="se">\^</span>a
<span class="se">\_</span>p
</code></pre></div><h1 id="vscode">VScode</h1>
<p><code>\\′ + 完整的单词 + Tab, VsCode 会自动转换为 Unicode。 例如 </code>^a<code>和</code>_p`</p>
<h1 id="dmenu">dmenu</h1>
<div class="highlight"><pre class="chroma"><code class="language-perl" data-lang="perl"><span class="ch">#!/usr/bin/perl</span>

<span class="c1">#use strict;</span>
<span class="c1">#use warnings;</span>
<span class="c1">#use autodie;</span>
<span class="c1">#use utf8;</span>


<span class="nb">open</span> <span class="nv">$FH</span><span class="p">,</span> <span class="s">&#34; | dmenu -i -l 30 -fn &#39;-xos4-terminus-medium-r-*-*-10-*&#39; | sed &#39;s/^\\(.\\).*/\\1/&#39; | tr -d &#39;\n&#39; | { pbcopy; pbpaste; } &#34;</span><span class="p">;</span>

<span class="c1"># if you do not have the xos4-terminus font that makes characters a little bigger :</span>
<span class="c1"># uncoment this line and use the second here document</span>
<span class="c1">#open $FH, &#34; | dmenu -i -l 30 | sed &#39;s/^\\(.\\).*/\\1/&#39; | tr -d &#39;\n&#39; | { xsel -ib; xsel -ip; } &#34;;</span>

<span class="c1"># also you can compile dmenu from source and change the font size directly in the C done</span>
<span class="c1"># in the file config.h / config.def.h</span>

<span class="c1"># this heredoc is well aligned with the -xos4-terminus-medium-r-*-*-10-* font</span>

<span class="k">print</span> <span class="nv">$FH</span> <span class="s">&lt;&lt;&#39;</span><span class="dl">EOF</span><span class="s">&#39;
</span><span class="s">«         hyper operator
</span><span class="s">»         hyper operator
</span><span class="s">∈        membership
</span><span class="s">∉        non-membership
</span><span class="s">∪         set union
</span><span class="s">∩         set intersection
</span><span class="s">∖         set difference
</span><span class="s">≡         set equality
</span><span class="s">≢        set inequality
</span><span class="s">⊖        symmetric set difference
</span><span class="s">⊍         baggy multiplication
</span><span class="s">⊎         baggy addition
</span><span class="s">∅        empty set
</span><span class="s">⊆        subset
</span><span class="s">⊈         not a subset
</span><span class="s">⊂        strict subset
</span><span class="s">⊄        not a strict subset
</span><span class="s">∋        reverse membership
</span><span class="s">∌          reverse non-membership
</span><span class="s">⊇        superset
</span><span class="s">⊉         not a superset
</span><span class="s">⊃        strict superset
</span><span class="s">⊅        not a strict superset
</span><span class="s">∞         infinity
</span><span class="s">⚛        atomic operator
</span><span class="s">π        pi
</span><span class="s">τ         tau
</span><span class="s">𝑒         Euler&#39;s number
</span><span class="s">∘         function composition
</span><span class="s">×        multiplication 
</span><span class="s">÷        division
</span><span class="s">≤         inferior or equal
</span><span class="s">≥         greater or equal
</span><span class="s">≠   	     inequality
</span><span class="s">−        substraction
</span><span class="s">≅       approximatively equal
</span><span class="s">…      sequence operator
</span><span class="s">‘         left single quotation mark
</span><span class="s">’         right single quotation mark
</span><span class="s">‚         single low-9 quotation mark 
</span><span class="s">”         right double quotation mark
</span><span class="s">“         left double quotation mark
</span><span class="s">„         double low-9 quotation mark
</span><span class="s">｢         halfwidth left corner bracket
</span><span class="s">｣         halfwidth right corner bracket
</span><span class="s">⁺         plus superscript
</span><span class="s">⁻         minus superscript
</span><span class="s">⁰         0 superscript
</span><span class="s">¹         1 superscript 
</span><span class="s">²         2 superscript 
</span><span class="s">³         3 superscript 
</span><span class="s">⁴         4 superscript 
</span><span class="s">⁵         5 superscript 
</span><span class="s">⁶         6 superscript 
</span><span class="s">⁷         7 superscript 
</span><span class="s">⁸         8 superscript 
</span><span class="s">⁹         9 superscript 
</span><span class="s"></span><span class="dl">EOF</span>
<span class="p">;</span>

<span class="c1"># use this without -xos4-terminus-medium-r-*-*-10-* font</span>
<span class="c1"># the default font may change given which font packages are installed and given the font configurations</span>

<span class="c1">#print $FH &lt;&lt;&#39;EOF&#39;</span>
<span class="c1">#«         hyper operator</span>
<span class="c1">#»         hyper operator</span>
<span class="c1">#∈         membership</span>
<span class="c1">#∉         non-membership</span>
<span class="c1">#∪         set union</span>
<span class="c1">#∩         set intersection</span>
<span class="c1">#∖         set difference</span>
<span class="c1">#≡         set equality</span>
<span class="c1">#≢         set inequality</span>
<span class="c1">#⊖         symmetric set difference</span>
<span class="c1">#⊍         baggy multiplication</span>
<span class="c1">#⊎         baggy addition</span>
<span class="c1">#∅         empty set</span>
<span class="c1">#⊆         subset</span>
<span class="c1">#⊈         not a subset</span>
<span class="c1">#⊂         strict subset</span>
<span class="c1">#⊄         not a strict subset</span>
<span class="c1">#∋         reverse membership</span>
<span class="c1">#∌         reverse non-membership</span>
<span class="c1">#⊇         superset</span>
<span class="c1">#⊉         not a superset</span>
<span class="c1">#⊃         strict superset</span>
<span class="c1">#⊅         not a strict superset</span>
<span class="c1">#∞         infinity</span>
<span class="c1">#⚛         atomic operator</span>
<span class="c1">#π         pi</span>
<span class="c1">#τ         tau</span>
<span class="c1">#𝑒         Euler&#39;s number</span>
<span class="c1">#∘         function composition</span>
<span class="c1">#×         multiplication </span>
<span class="c1">#÷         division</span>
<span class="c1">#≤         inferior or equal</span>
<span class="c1">#≥         greater or equal</span>
<span class="c1">#≠         inequality</span>
<span class="c1">#−         substraction</span>
<span class="c1">#≅         approximatively equal</span>
<span class="c1">#…         sequence operator</span>
<span class="c1">#‘         left single quotation mark</span>
<span class="c1">#’         right single quotation mark</span>
<span class="c1">#‚         single low-9 quotation mark </span>
<span class="c1">#”         right double quotation mark</span>
<span class="c1">#“         left double quotation mark</span>
<span class="c1">#„         double low-9 quotation mark</span>
<span class="c1">#｢         halfwidth left corner bracket</span>
<span class="c1">#｣         halfwidth right corner bracket</span>
<span class="c1">#⁺         plus superscript</span>
<span class="c1">#⁻         minus superscript</span>
<span class="c1">#⁰         0 superscript</span>
<span class="c1">#¹         1 superscript </span>
<span class="c1">#²         2 superscript </span>
<span class="c1">#³         3 superscript </span>
<span class="c1">#⁴         4 superscript </span>
<span class="c1">#⁵         5 superscript </span>
<span class="c1">#⁶         6 superscript </span>
<span class="c1">#⁷         7 superscript </span>
<span class="c1">#⁸         8 superscript </span>
<span class="c1">#⁹         9 superscript </span>
<span class="c1">#EOF</span>
<span class="c1">#;</span>



<span class="nb">close</span> <span class="nv">$FH</span><span class="p">;</span>



<span class="cp">__END__
</span><span class="cp">
</span><span class="cp">
</span><span class="cp">=pod 
</span><span class="cp">
</span><span class="cp">=head1 NAME
</span><span class="cp">
</span><span class="cp">lazy_raku_unicode.pl
</span><span class="cp">
</span><span class="cp">=head1 SYNOPSIS
</span><span class="cp">
</span><span class="cp">This script allows you to select a Unicode symbol from a drop-down menu that you can simply paste into your text editor, terminal or IDE.
</span><span class="cp">
</span><span class="cp">All it does is send a heredoc through a pipe to dmenu, and copy to the clipboard the character that you selected.
</span><span class="cp">
</span><span class="cp">Dmenu is a program that reads lines from stdin, display them in a menu, and write to stdout the lines selected.
</span><span class="cp">
</span><span class="cp">It is not practical to execute this script from a terminal each time you want a character though. This is why it should be executed by sxhkd.
</span><span class="cp">
</span><span class="cp">Sxhkd is the program that will call this script each time you press the right key combination.
</span><span class="cp">
</span><span class="cp">Only the most useful Unicode characters are present to not make dmenu get too slow. (It is usually very fast when there is only ascii text.)
</span><span class="cp">
</span><span class="cp">This include most of the Raku operators that have a Unicode version, plus some quoting characters, superscripts, and mathematical constants.
</span><span class="cp">
</span><span class="cp">=head1 MANUAL INSTALLATION STEPS
</span><span class="cp">
</span><span class="cp">
</span><span class="cp">=head2 INSTALLING DMENU
</span><span class="cp">
</span><span class="cp">B&lt;On Debian or Ubuntu :&gt;
</span><span class="cp">
</span><span class="cp">	sudo apt install suckless-tools
</span><span class="cp">
</span><span class="cp">B&lt;On Archlinux :&gt;
</span><span class="cp">
</span><span class="cp">	sudo pacman -Sy dmenu
</span><span class="cp">
</span><span class="cp">B&lt;Compile it from source :&gt;
</span><span class="cp">
</span><span class="cp">	https://tools.suckless.org/dmenu/
</span><span class="cp">
</span><span class="cp">=head2 CHANGING DMENU FONT SIZE (OPTIIONAL)
</span><span class="cp">
</span><span class="cp">You have only two ways of changing the font size :
</span><span class="cp">
</span><span class="cp">Change the default font with the B&lt;-fn&gt; flag (See dmenu(1) for the specifics).
</span><span class="cp">	
</span><span class="cp">	dmenu -l 30 -fn &#39;-xos4-terminus-medium-r-*-*-10-*&#39;
</span><span class="cp">
</span><span class="cp">
</span><span class="cp">Modify directly the C source code of dmenu. Only the files B&lt;config.h / config.def.h&gt;.
</span><span class="cp">
</span><span class="cp">Simply edit this line and change 10 by 14 for example.
</span><span class="cp">
</span><span class="cp">	static const char *fonts[] = {
</span><span class="cp">		&#34;monospace:size=10&#34;
</span><span class="cp">	};
</span><span class="cp">
</span><span class="cp">Then execute sudo make install and you&#39;re ready to go.
</span><span class="cp">
</span><span class="cp">=head2 INSTALLING SXHKD
</span><span class="cp">
</span><span class="cp">
</span><span class="cp">B&lt;On Debian or Ubuntu :&gt;
</span><span class="cp">
</span><span class="cp">	sudo apt install sxhkd
</span><span class="cp">
</span><span class="cp">B&lt;On Archlinux :&gt;
</span><span class="cp">
</span><span class="cp">	sudo pacman -Sy sxhkd
</span><span class="cp">
</span><span class="cp">
</span><span class="cp">=head2 CONFIGURING SXHKD
</span><span class="cp">
</span><span class="cp">B&lt;Autostarting sxhkd at startup :&gt;
</span><span class="cp">
</span><span class="cp">simply put this line in B&lt;~/.xprofile&gt; :
</span><span class="cp">
</span><span class="cp">	sxhkd &amp;
</span><span class="cp">
</span><span class="cp">
</span><span class="cp">B&lt;Setting the keybinding :&gt;
</span><span class="cp">	
</span><span class="cp">
</span><span class="cp">Add these two lines in B&lt;~/.config/sxhkd/sxhkdrc&gt;
</span><span class="cp">
</span><span class="cp">	ctrl + apostrophe
</span><span class="cp">		/path/to/lazy_raku_unicode.pl
</span><span class="cp">
</span><span class="cp">The keybinding have to start at the beginning of a line, and the command has to follow on the next line and be preceded by a tabulation.
</span><span class="cp">
</span><span class="cp">To make sxhkd reload the config file, either kill it and relaunch it, or send a SIGUSR1 signal. This command can do it :
</span><span class="cp">
</span><span class="cp">	pidof sxhkd | kill -SIGUSR1 $(cat /dev/stdin)
</span><span class="cp">
</span><span class="cp">If you want to use a different keybinding, please see sxhkd(1) and use xev(1) to find the name of keys.
</span><span class="cp">
</span><span class="cp">Here the name of some of the keys : ctrl, super, alt, Return .
</span><span class="cp">
</span><span class="cp">=head1 SEE ALSO
</span><span class="cp">
</span><span class="cp">dmenu(1), sxhkd(1), xev(1)
</span><span class="cp">
</span><span class="cp">
</span><span class="cp">=cut
</span></code></pre></div><p>参考链接: <a href="https://docs.raku.org/language/unicode_entry">https://docs.raku.org/language/unicode_entry</a></p>
]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/raku" term="raku" label="Raku" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/raku" term="raku" label="Raku" />
                             
                                <category scheme="https://ohmyweekly.github.io/tags/unicode" term="unicode" label="Unicode" />
                            
                        
                    
                
            
        </entry>
    
</feed>

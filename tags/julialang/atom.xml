<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us">
    <generator uri="https://gohugo.io/" version="0.79.0">Hugo</generator><title type="html"><![CDATA[julialang on 焉知非鱼]]></title>
    
        <subtitle type="html"><![CDATA[rakulang, dartlang, nimlang, golang, rustlang, lang lang no see]]></subtitle>
    
    
    
            <link href="https://ohmyweekly.github.io/tags/julialang/" rel="alternate" type="text/html" title="HTML" />
            <link href="https://ohmyweekly.github.io/tags/julialang/index.xml" rel="alternate" type="application/rss+xml" title="RSS" />
            <link href="https://ohmyweekly.github.io/tags/julialang/atom.xml" rel="self" type="application/atom+xml" title="Atom" />
            <link href="https://ohmyweekly.github.io/tags/julialang/jf2feed.json" rel="alternate" type="application/jf2feed+json" title="jf2feed" />
    <updated>2020-12-23T23:27:22+08:00</updated>
    
    
    
    
        <id>https://ohmyweekly.github.io/tags/julialang/</id>
    
        
        <entry>
            <title type="html"><![CDATA[Julia 语言学习笔记]]></title>
            <link href="https://ohmyweekly.github.io/notes/2020-07-27-learning-julialang/?utm_source=atom_feed" rel="alternate" type="text/html" />
            
            
                <id>https://ohmyweekly.github.io/notes/2020-07-27-learning-julialang/</id>
            
            
                    <author>
                        <name>焉知非鱼</name>
                    </author>
            <published>2020-07-26T00:00:00+08:00</published>
            <updated>2020-07-26T00:00:00+08:00</updated>
            
            
            <content type="html"><![CDATA[<blockquote>Learning Julia</blockquote><h2 id="语法">语法</h2>
<h3 id="数值字面量系数">数值字面量系数</h3>
<p>在标识符或圆括号前面直接放一个数字, 例如 <code>2x</code> 或 <code>2(x+y)</code>, 会被认为是把标识符和它前面的数字相乘。这样写多项式就很方便了。</p>
<h3 id="向量化的点号运算符">向量化的点号运算符</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="o">.+</span> <span class="mi">3</span>

<span class="mi">3</span><span class="o">-</span><span class="n">element</span> <span class="kt">Array</span><span class="p">{</span><span class="kt">Int64</span><span class="p">,</span><span class="mi">1</span><span class="p">}</span><span class="o">:</span>
 <span class="mi">4</span>
 <span class="mi">5</span>
 <span class="mi">6</span>
</code></pre></div><p><code>.+</code> 类似于 Raku 中的 <code>»+»</code> 超运算符:</p>
<pre><code class="language-raku" data-lang="raku">[1,2,3] »+» 3
[4 5 6]
</code></pre><p>但是 Julia 的 <code>Vectorized &quot;dot&quot;</code> 语法没有 Raku 的超运算符语法清晰。</p>
<p>类似的例子还有:</p>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="n">sin</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span> <span class="c"># 0.479425538604203</span>

<span class="n">A</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.5</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">]</span>
<span class="n">sin</span><span class="o">.</span><span class="p">(</span><span class="n">A</span><span class="p">)</span>

<span class="mi">3</span><span class="o">-</span><span class="n">element</span> <span class="kt">Array</span><span class="p">{</span><span class="kt">Float64</span><span class="p">,</span><span class="mi">1</span><span class="p">}</span><span class="o">:</span>
 <span class="mf">0.479425538604203</span>
 <span class="mf">0.8414709848078965</span>
 <span class="mf">0.9974949866040544</span>
</code></pre></div><div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span> <span class="o">=</span> <span class="mi">3</span><span class="n">x</span> <span class="o">+</span> <span class="mi">4</span><span class="n">y</span><span class="p">;</span>
<span class="n">A</span> <span class="o">=</span> <span class="p">[</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">];</span>
<span class="n">B</span> <span class="o">=</span> <span class="p">[</span><span class="mf">4.0</span><span class="p">,</span> <span class="mf">5.0</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">];</span>
<span class="n">f</span><span class="o">.</span><span class="p">(</span><span class="nb">pi</span><span class="p">,</span> <span class="n">A</span><span class="p">)</span>
<span class="mi">3</span><span class="o">-</span><span class="n">element</span> <span class="kt">Array</span><span class="p">{</span><span class="kt">Float64</span><span class="p">,</span><span class="mi">1</span><span class="p">}</span><span class="o">:</span>
 <span class="mf">13.42477796076938</span>
 <span class="mf">17.42477796076938</span>
 <span class="mf">21.42477796076938</span>

<span class="n">f</span><span class="o">.</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="nb">pi</span><span class="p">)</span>
<span class="mi">3</span><span class="o">-</span><span class="n">element</span> <span class="kt">Array</span><span class="p">{</span><span class="kt">Float64</span><span class="p">,</span><span class="mi">1</span><span class="p">}</span><span class="o">:</span>
 <span class="mf">15.566370614359172</span>
 <span class="mf">18.566370614359172</span>
 <span class="mf">21.566370614359172</span>

<span class="n">f</span><span class="o">.</span><span class="p">(</span><span class="n">A</span><span class="p">,</span><span class="n">B</span><span class="p">)</span>
<span class="mi">3</span><span class="o">-</span><span class="n">element</span> <span class="kt">Array</span><span class="p">{</span><span class="kt">Float64</span><span class="p">,</span><span class="mi">1</span><span class="p">}</span><span class="o">:</span>
 <span class="mf">19.0</span>
 <span class="mf">26.0</span>
 <span class="mf">33.0</span>
</code></pre></div><p>等价的 Raku 写法为:</p>
<pre><code class="language-raku" data-lang="raku">sub f(\x, \y) { 3*x + 4*y};

my \A = [1.0, 2.0, 3.0];
my \B = [4.0, 5.0, 6.0];

A».&amp;f(pi)
[15.566370614359172 18.566370614359172 21.566370614359172]
</code></pre><h3 id="链式比较">链式比较</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="mi">1</span> <span class="o">&lt;</span> <span class="mi">2</span> <span class="o">&lt;=</span> <span class="mi">2</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="o">==</span> <span class="mi">3</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">&lt;</span> <span class="mi">3</span> <span class="o">!=</span> <span class="mi">5</span>
<span class="kc">true</span>
</code></pre></div><p>Raku 同样支持这种链式比较。</p>
<h3 id="虚数">虚数</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="n">real</span><span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span><span class="nb">im</span><span class="p">)</span>         <span class="c"># 1</span>
<span class="n">imag</span><span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span><span class="nb">im</span><span class="p">)</span>         <span class="c"># 2</span>
<span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span><span class="nb">im</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span> <span class="o">-</span> <span class="mi">2</span><span class="nb">im</span><span class="p">)</span> <span class="c"># 5 + 0im</span>
</code></pre></div><pre><code class="language-raku" data-lang="raku">(1 + 2i).re         # 1
(1 + 2i).im         # 2
(1 + 2i) * (1 - 2i) # 5+0i
</code></pre><h3 id="命名参数">命名参数</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="k">function</span> <span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">;</span> <span class="n">style</span><span class="o">=</span><span class="s">&#34;solid&#34;</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">&#34;black&#34;</span><span class="p">)</span>
    <span class="c">###</span>
<span class="k">end</span>

<span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">width</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="o">:</span><span class="n">width</span> <span class="o">=&gt;</span> <span class="mi">2</span><span class="p">)</span>
</code></pre></div><h3 id="函数组合">函数组合</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="p">(</span><span class="n">sqrt</span> <span class="n">∘</span> <span class="o">+</span><span class="p">)(</span><span class="mi">3</span><span class="p">,</span><span class="mi">6</span><span class="p">)</span> <span class="c"># 3.0</span>

<span class="n">map</span><span class="p">(</span><span class="n">first</span> <span class="n">∘</span> <span class="n">reverse</span> <span class="n">∘</span> <span class="n">uppercase</span><span class="p">,</span> <span class="n">split</span><span class="p">(</span><span class="s">&#34;you can compose functions like this&#34;</span><span class="p">))</span>
<span class="mi">6</span><span class="o">-</span><span class="n">element</span> <span class="kt">Array</span><span class="p">{</span><span class="kt">Char</span><span class="p">,</span><span class="mi">1</span><span class="p">}</span><span class="o">:</span>
 <span class="sc">&#39;U&#39;</span>
 <span class="sc">&#39;N&#39;</span>
 <span class="sc">&#39;E&#39;</span>
 <span class="sc">&#39;S&#39;</span>
 <span class="sc">&#39;E&#39;</span>
 <span class="sc">&#39;S&#39;</span>
</code></pre></div><h3 id="piping">Piping</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="mi">1</span><span class="o">:</span><span class="mi">10</span> <span class="o">|&gt;</span> <span class="n">sum</span> <span class="o">|&gt;</span> <span class="n">sqrt</span> <span class="c"># 7.416198487095663</span>

<span class="c"># 等价于</span>
<span class="p">(</span><span class="n">sqrt</span> <span class="n">∘</span> <span class="n">sum</span><span class="p">)(</span><span class="mi">1</span><span class="o">:</span><span class="mi">10</span><span class="p">)</span>  <span class="c"># 7.416198487095663</span>
</code></pre></div><h3 id="广播和管道一起使用">广播和管道一起使用</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="p">[</span><span class="s">&#34;a&#34;</span><span class="p">,</span> <span class="s">&#34;list&#34;</span><span class="p">,</span> <span class="s">&#34;of&#34;</span><span class="p">,</span> <span class="s">&#34;strings&#34;</span><span class="p">]</span> <span class="o">.|&gt;</span> <span class="p">[</span><span class="n">uppercase</span><span class="p">,</span> <span class="n">reverse</span><span class="p">,</span> <span class="n">titlecase</span><span class="p">,</span> <span class="n">length</span><span class="p">]</span>
<span class="mi">4</span><span class="o">-</span><span class="n">element</span> <span class="kt">Array</span><span class="p">{</span><span class="kt">Any</span><span class="p">,</span><span class="mi">1</span><span class="p">}</span><span class="o">:</span>
  <span class="s">&#34;A&#34;</span>
  <span class="s">&#34;tsil&#34;</span>
  <span class="s">&#34;Of&#34;</span>
 <span class="mi">7</span>
</code></pre></div><h3 id="组合类型">组合类型</h3>
<ul>
<li>不可变组合类型</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="k">struct</span> <span class="n">Foo</span>
    <span class="n">bar</span>
    <span class="n">baz</span><span class="o">::</span><span class="kt">Int</span>
    <span class="n">qux</span><span class="o">::</span><span class="kt">Float64</span>
<span class="k">end</span>

<span class="n">foo</span> <span class="o">=</span> <span class="n">Foo</span><span class="p">(</span><span class="s">&#34;rakulang&#34;</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span>
<span class="n">typeof</span><span class="p">(</span><span class="n">foo</span><span class="p">)</span> <span class="c"># Foo</span>
<span class="n">typeof</span><span class="p">(</span><span class="n">Foo</span><span class="p">)</span> <span class="c"># DataType</span>

<span class="n">foo</span><span class="o">.</span><span class="n">bar</span>     <span class="c"># rakulang</span>
<span class="n">foo</span><span class="o">.</span><span class="n">qux</span>     <span class="c"># 1.5</span>
<span class="n">foo</span><span class="o">.</span><span class="n">qux</span> <span class="o">=</span> <span class="mi">1</span> <span class="c"># ERROR: setfield! immutable struct of type Foo cannot be changed</span>
</code></pre></div><ul>
<li>可变组合类型</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="k">mutable</span> <span class="k">struct</span> <span class="n">Bar</span>
    <span class="n">baz</span>
    <span class="n">qux</span><span class="o">::</span><span class="kt">Float64</span>
<span class="k">end</span>

<span class="n">bar</span> <span class="o">=</span> <span class="n">Bar</span><span class="p">(</span><span class="s">&#34;rakudo&#34;</span><span class="p">,</span> <span class="mf">6.0</span><span class="p">)</span>
<span class="n">bar</span><span class="o">.</span><span class="n">baz</span> <span class="o">=</span> <span class="mi">1</span><span class="o">//</span><span class="mi">2</span>
<span class="n">bar</span><span class="o">.</span><span class="n">qux</span> <span class="o">=</span> <span class="mf">2.0</span>
</code></pre></div><h3 id="联合类型">联合类型</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="n">IntOrString</span> <span class="o">=</span> <span class="kt">Union</span><span class="p">{</span><span class="kt">Int</span><span class="p">,</span><span class="kt">AbstractString</span><span class="p">}</span>
<span class="mi">1</span> <span class="o">::</span> <span class="n">IntOrString</span>          <span class="c"># 1</span>
<span class="s">&#34;rakulang&#34;</span> <span class="o">::</span> <span class="n">IntOrString</span> <span class="c"># rakulang</span>
</code></pre></div><h3 id="参数化类型">参数化类型</h3>
<ul>
<li>参数化组合类型</li>
</ul>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="k">struct</span> <span class="n">Point</span><span class="p">{</span><span class="n">T</span><span class="p">}</span>
    <span class="n">x</span><span class="o">::</span><span class="n">T</span>
    <span class="n">y</span><span class="o">::</span><span class="n">T</span>
<span class="k">end</span>

<span class="n">point</span><span class="o">=</span><span class="n">Point</span><span class="p">{</span><span class="kt">Float64</span><span class="p">}(</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">2.0</span><span class="p">)</span>
<span class="n">point</span><span class="o">.</span><span class="n">x</span> <span class="c"># 1.0</span>
<span class="n">point</span><span class="o">.</span><span class="n">y</span> <span class="c"># 2.0</span>


<span class="k">struct</span> <span class="n">Circle</span><span class="p">{</span><span class="n">T</span><span class="p">,</span><span class="n">U</span><span class="p">}</span>
    <span class="n">x</span><span class="o">::</span><span class="n">T</span>
    <span class="n">y</span><span class="o">::</span><span class="n">U</span>
<span class="k">end</span>

<span class="n">c</span> <span class="o">=</span> <span class="n">Circle</span><span class="p">{</span><span class="kt">Float64</span><span class="p">,</span><span class="kt">AbstractString</span><span class="p">}(</span><span class="mf">6.0</span><span class="p">,</span> <span class="s">&#34;rakulang&#34;</span><span class="p">)</span>
<span class="n">c</span><span class="o">.</span><span class="n">x</span> <span class="c"># 6.0</span>
<span class="n">c</span><span class="o">.</span><span class="n">y</span> <span class="c"># rakulang</span>
</code></pre></div><h3 id="多重分派">多重分派</h3>
<div class="highlight"><pre class="chroma"><code class="language-julia" data-lang="julia"><span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="o">::</span><span class="kt">Float64</span><span class="p">,</span> <span class="n">y</span><span class="o">::</span><span class="kt">Float64</span><span class="p">)</span> <span class="o">=</span> <span class="mi">2</span><span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
<span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="o">::</span><span class="kt">Number</span><span class="p">,</span> <span class="n">y</span><span class="o">::</span><span class="kt">Number</span><span class="p">)</span> <span class="o">=</span> <span class="mi">2</span><span class="n">x</span> <span class="o">-</span> <span class="n">y</span>

<span class="n">methods</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
<span class="c"># 2 methods for generic function &#34;f&#34;:</span>
<span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="o">::</span><span class="kt">Float64</span><span class="p">,</span> <span class="n">y</span><span class="o">::</span><span class="kt">Float64</span><span class="p">)</span> <span class="kp">in</span> <span class="n">Main</span> <span class="n">at</span> <span class="n">REPL</span><span class="p">[</span><span class="mi">33</span><span class="p">]</span><span class="o">:</span><span class="mi">1</span>
<span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="n">f</span><span class="p">(</span><span class="n">x</span><span class="o">::</span><span class="kt">Number</span><span class="p">,</span> <span class="n">y</span><span class="o">::</span><span class="kt">Number</span><span class="p">)</span> <span class="kp">in</span> <span class="n">Main</span> <span class="n">at</span> <span class="n">REPL</span><span class="p">[</span><span class="mi">34</span><span class="p">]</span><span class="o">:</span><span class="mi">1</span>

<span class="n">f</span><span class="p">(</span><span class="mf">2.0</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">)</span> <span class="c"># 7</span>
<span class="n">f</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">)</span>   <span class="c"># 1</span>
</code></pre></div>]]></content>
            
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/categories/programming" term="programming" label="programming" />
                            
                        
                    
                 
                    
                         
                        
                            
                             
                                <category scheme="https://ohmyweekly.github.io/tags/julialang" term="julialang" label="julialang" />
                             
                                <category scheme="https://ohmyweekly.github.io/tags/julia" term="julia" label="julia" />
                            
                        
                    
                
            
        </entry>
    
</feed>

{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"children":[{"content":{"html":"\u003ch2 id=\"例子-ini\"\u003e例子: INI\u003c/h2\u003e\n\u003cp\u003eINI(initialization 的简称)文件是简单的配置文件。由于没有标准的格式，我们将编写一个能够解析这个例子文件的程序。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan class=\"na\"\u003eusername\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003enoha\u003c/span\u003e\n\u003cspan class=\"na\"\u003epassword\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eplain_text\u003c/span\u003e\n\u003cspan class=\"na\"\u003esalt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eNaCl\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003e[server_1]\u003c/span\u003e\n\u003cspan class=\"na\"\u003einterface\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eeth0\u003c/span\u003e\n\u003cspan class=\"na\"\u003eip\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e127.0.0.1\u003c/span\u003e\n\u003cspan class=\"na\"\u003edocument_root\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e/var/www/example.org\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003e[empty_section]\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003e[second_server]\u003c/span\u003e\n\u003cspan class=\"na\"\u003edocument_root\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003e/var/www/example.com\u003c/span\u003e\n\u003cspan class=\"na\"\u003eip\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\n\u003cspan class=\"na\"\u003einterface\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s\"\u003eeth1\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e每一行都包含一个键和值，中间用等号隔开；或者包含一个用方括号括起来的章节名；或者是空白，没有任何意义。\u003c/p\u003e\n\u003cp\u003e每当出现一个节名，下面的键和值就属于该节，直到下一个节名。文件开头的键值对属于一个隐式的 \u0026ldquo;空\u0026quot;节。\u003c/p\u003e\n\u003ch2 id=\"编写-grammar\"\u003e编写 grammar\u003c/h2\u003e\n\u003cp\u003e首先使用 Cargo \u003ca href=\"https://pest.rs/book/examples/csv.html#setup\"\u003e初始化一个新项目\u003c/a\u003e，添加依赖关系 \u003ccode\u003epest = \u0026quot;2.0\u0026quot;\u003c/code\u003e 和  \u003ccode\u003epest_derive = \u0026quot;2.0\u0026quot;\u003c/code\u003e。创建一个新文件 \u003ccode\u003esrc/ini.pest\u003c/code\u003e 来保存 grammar。\u003c/p\u003e\n\u003cp\u003e我们文件中感兴趣的文本 - \u003ccode\u003eusername\u003c/code\u003e、\u003ccode\u003e/var/www/example.org\u003c/code\u003e 等 - 只由几个字符组成。让我们制定一个规则来识别该集合中的单个字符。内置的规则 \u003ccode\u003eASCII_ALPHANUMERIC\u003c/code\u003e 是表示任何大写或小写 ASCII 字母或任何数字的快捷方式。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003echar = { ASCII_ALPHANUMERIC | \u0026quot;.\u0026quot; | \u0026quot;_\u0026quot; | \u0026quot;/\u0026quot; }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e节名和属性键不能为空，但属性值可以为空（如上文中的 \u003ccode\u003eip=\u003c/code\u003e 行）。也就是说，前者由一个或多个字符组成，\u003ccode\u003echar+\u003c/code\u003e; 后者由零或多个字符组成，\u003ccode\u003echar*\u003c/code\u003e。我们将其含义分为两条规则。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ename = { char+ }\nvalue = { char* }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e现在很容易表达这两种输入行。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003esection = { \u0026quot;[\u0026quot; ~ name ~ \u0026quot;]\u0026quot; }\nproperty = { name ~ \u0026quot;=\u0026quot; ~ value }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e最后，我们需要一个规则来表示整个输入文件。表达式 \u003ccode\u003e(section | property)?\u003c/code\u003e 匹配 \u003ccode\u003esection\u003c/code\u003e、\u003ccode\u003eproperty\u003c/code\u003e，否则什么也不匹配。使用内置规则 \u003ccode\u003eNEWLINE\u003c/code\u003e 来匹配行尾。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efile = {\n    SOI ~\n    ((section | property)? ~ NEWLINE)* ~\n    EOI\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e要将解析器编译成 Rust，我们需要在 \u003ccode\u003esrc/main.rs\u003c/code\u003e 中添加以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan class=\"k\"\u003eextern\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ecrate\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epest\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e#[macro_use]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003eextern\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ecrate\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epest_derive\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003epest\u003c/span\u003e::\u003cspan class=\"n\"\u003eParser\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e#[derive(Parser)]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"cp\"\u003e#[grammar = \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ini.pest\u0026#34;\u003c/span\u003e\u003cspan class=\"cp\"\u003e]\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003epub\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eINIParser\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"程序初始化\"\u003e程序初始化\u003c/h2\u003e\n\u003cp\u003e现在我们可以读取文件，并用 \u003ccode\u003epest\u003c/code\u003e 进行解析。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e::\u003cspan class=\"n\"\u003ecollections\u003c/span\u003e::\u003cspan class=\"n\"\u003eHashMap\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003estd\u003c/span\u003e::\u003cspan class=\"n\"\u003efs\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eunparsed_file\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efs\u003c/span\u003e::\u003cspan class=\"n\"\u003eread_to_string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;config.ini\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003eexpect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;cannot read file\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eINIParser\u003c/span\u003e::\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eRule\u003c/span\u003e::\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"n\"\u003eunparsed_file\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eexpect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;unsuccessful parse\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// unwrap the parse result\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// get and unwrap the `file` rule; never fails\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们将使用嵌套的 \u003ccode\u003eHashMap\u003c/code\u003e 来表达属性列表。外层哈希 map 将以章节名称作为键，以章节内容（内部哈希 map）作为值。每个内部哈希 map 将有属性键和属性值。例如，要访问 \u003ccode\u003eserver_1\u003c/code\u003e 的 \u003ccode\u003edocument_root\u003c/code\u003e，我们可以写 \u003ccode\u003eproperties[\u0026quot;server_1\u0026quot;][\u0026quot;document_root\u0026quot;]\u003c/code\u003e。隐含的 \u0026ldquo;空\u0026quot;节将由常规部分表示，名称为空字符串 \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e，这样 \u003ccode\u003eproperties[\u0026quot;\u0026quot;][\u0026quot;salt\u0026quot;]\u003c/code\u003e 就是有效的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003emut\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eproperties\u003c/span\u003e: \u003cspan class=\"nc\"\u003eHashMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026amp;\u003c/span\u003e\u003cspan class=\"kt\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eHashMap\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026amp;\u003c/span\u003e\u003cspan class=\"kt\"\u003estr\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"kt\"\u003estr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eHashMap\u003c/span\u003e::\u003cspan class=\"n\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，哈希 map 的键和值都是 \u003ccode\u003e\u0026amp;str\u003c/code\u003e，即借用的字符串。\u003ccode\u003epest\u003c/code\u003e 解析器不会复制他们解析的输入，而是借用。所有用于检查解析结果的方法都会返回从原始解析字符串中借用字符串。\u003c/p\u003e\n\u003ch2 id=\"主循环\"\u003e主循环\u003c/h2\u003e\n\u003cp\u003e现在我们解释解析结果。我们循环浏览文件的每一行，这一行要么是节名，要么是键值属性对。如果遇到一个节名，我们更新一个变量。如果遇到一个属性对，我们就获取一个对当前章节的哈希 map 的引用，然后把这个属性对插入到这个哈希 map 中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003emut\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_section_name\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ein\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003efile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einto_inner\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"k\"\u003ematch\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eas_rule\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eRule\u003c/span\u003e::\u003cspan class=\"n\"\u003esection\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003emut\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003einner_rules\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einto_inner\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// { name }\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_section_name\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003einner_rules\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eas_str\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eRule\u003c/span\u003e::\u003cspan class=\"n\"\u003eproperty\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003emut\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003einner_rules\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einto_inner\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e// { name ~ \u0026#34;=\u0026#34; ~ value }\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e: \u003cspan class=\"kp\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"kt\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003einner_rules\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eas_str\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e: \u003cspan class=\"kp\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"kt\"\u003estr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003einner_rules\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enext\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eunwrap\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003eas_str\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"c1\"\u003e// Insert an empty inner hash map if the outer hash map hasn\u0026#39;t\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"c1\"\u003e// seen this section name before.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"kd\"\u003elet\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003esection\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eentry\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ecurrent_section_name\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003eor_default\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e                \u003c/span\u003e\u003cspan class=\"n\"\u003esection\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003einsert\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003eRule\u003c/span\u003e::\u003cspan class=\"n\"\u003eEOI\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e            \u003c/span\u003e\u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eunreachable\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在输出方面，我们用\u003ca href=\"https://doc.rust-lang.org/std/fmt/index.html#sign0\"\u003e漂亮的打印\u003c/a\u003e \u003ccode\u003eDebug\u003c/code\u003e 格式简单地转储哈希 map。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-rust\" data-lang=\"rust\"\u003e\u003cspan class=\"k\"\u003efn\u003c/span\u003e \u003cspan class=\"nf\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e// ...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"n\"\u003eprintln\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;{:#?}\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eproperties\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"空白\"\u003e空白\u003c/h2\u003e\n\u003cp\u003e如果你把本章顶部的例子 INI 文件复制到 \u003ccode\u003econfig.ini\u003c/code\u003e 文件中并运行程序，它将无法解析。我们已经忘记了等号周围的可选空格!\u003c/p\u003e\n\u003cp\u003e对于大型 grammar 来说，处理空白会很不方便。显示地编写 \u003ccode\u003ewhitespace\u003c/code\u003e 规则并手动插入空白会让 grammar 变得难以阅读和修改。\u003ccode\u003epest\u003c/code\u003e 提供了一个\u003ca href=\"https://pest.rs/book/grammars/syntax.html#implicit-whitespace\"\u003e特殊规则 \u003ccode\u003eWHITESPACE\u003c/code\u003e\u003c/a\u003e 的解决方案。如果定义了 \u003ccode\u003eWHITESPACE\u003c/code\u003e，它将被隐式地运行，尽可能多次地在每个波浪号 \u003ccode\u003e~\u003c/code\u003e 和每个重复之间运行（例如，\u003ccode\u003e*\u003c/code\u003e 和 \u003ccode\u003e+\u003c/code\u003e）。对于我们的 INI 解析器，只有空格才是合法的 whitespace。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eWHITESPACE = _{ \u0026quot; \u0026quot; }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e我们用一个前导的下划线 \u003ccode\u003e_{ ... }\u003c/code\u003e 来标记 \u003ccode\u003eWHITESPACE\u003c/code\u003e 规则的\u003ca href=\"https://pest.rs/book/grammars/syntax.html#silent-and-atomic-rules\"\u003e静默\u003c/a\u003e。}. 这样，即使它匹配，也不会出现在其他规则中。如果它不是静默的，解析就会复杂得多，因为对  \u003ccode\u003ePairs::next(...)\u003c/code\u003e 的每次调用都有可能返回 \u003ccode\u003eRule::WHITESPACE\u003c/code\u003e 而不是想要的下一条规则。\u003c/p\u003e\n\u003cp\u003e但是等等! 节名、键或值中不应该有空格！目前，空格是自动插入的。目前，在 \u003ccode\u003ename = { char+ }\u003c/code\u003e 中，空格会自动插入字符之间。对空格敏感的规则需要用前导符号 \u003ccode\u003e@{ ... }\u003c/code\u003e 来标记\u003ca href=\"https://pest.rs/book/grammars/syntax.html#atomic\"\u003e原子\u003c/a\u003e。}. 在原子规则中，自动的空白处理是被禁用的，而内部规则是静默的。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ename = @{ char+ }\nvalue = @{ char* }\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"完工\"\u003e完工\u003c/h2\u003e\n\u003cp\u003e试试吧！确保文件 \u003ccode\u003econfig.ini\u003c/code\u003e 存在，然后运行程序! 你应该看到这样的东西。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$ cargo run\n  [ ... ]\n{\n    \u0026quot;\u0026quot;: {\n        \u0026quot;password\u0026quot;: \u0026quot;plain_text\u0026quot;,\n        \u0026quot;username\u0026quot;: \u0026quot;noha\u0026quot;,\n        \u0026quot;salt\u0026quot;: \u0026quot;NaCl\u0026quot;\n    },\n    \u0026quot;second_server\u0026quot;: {\n        \u0026quot;ip\u0026quot;: \u0026quot;\u0026quot;,\n        \u0026quot;document_root\u0026quot;: \u0026quot;/var/www/example.com\u0026quot;,\n        \u0026quot;interface\u0026quot;: \u0026quot;eth1\u0026quot;\n    },\n    \u0026quot;server_1\u0026quot;: {\n        \u0026quot;interface\u0026quot;: \u0026quot;eth0\u0026quot;,\n        \u0026quot;document_root\u0026quot;: \u0026quot;/var/www/example.org\u0026quot;,\n        \u0026quot;ip\u0026quot;: \u0026quot;127.0.0.1\u0026quot;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e","text":"例子: INI INI(initialization 的简称)文件是简单的配置文件。由于没有标准的格式，我们将编写一个能够解析这个例子文件的程序。\nusername = noha password = plain_text salt = NaCl [server_1] interface=eth0 ip=127.0.0.1 document_root=/var/www/example.org [empty_section] [second_server] document_root=/var/www/example.com ip= interface=eth1 每一行都包含一个键和值，中间用等号隔开；或者包含一个用方括号括起来的章节名；或者是空白，没有任何意义。\n每当出现一个节名，下面的键和值就属于该节，直到下一个节名。文件开头的键值对属于一个隐式的 \u0026ldquo;空\u0026quot;节。\n编写 grammar 首先使用 Cargo 初始化一个新项目，添加依赖关系 pest = \u0026quot;2.0\u0026quot; 和 pest_derive = \u0026quot;2.0\u0026quot;。创建一个新文件 src/ini.pest 来保存 grammar。\n我们文件中感兴趣的文本 - username、/var/www/example.org 等 - 只由几个字符组成。让我们制定一个规则来识别该集合中的单个字符。内置的规则 ASCII_ALPHANUMERIC 是表示任何大写或小写 ASCII 字母或任何数字的快捷方式。\nchar = { ASCII_ALPHANUMERIC | \u0026quot;.\u0026quot; | \u0026quot;_\u0026quot; | \u0026quot;/\u0026quot; } 节名和属性键不能为空，但属性值可以为空（如上文中的 ip= 行）。也就是说，前者由一个或多个字符组成，char+; 后者由零或多个字符组成，char*。我们将其含义分为两条规则。\nname = { char+ } value = { char* } 现在很容易表达这两种输入行。\nsection = { \u0026quot;[\u0026quot; ~ name ~ \u0026quot;]\u0026quot; } property = { name ~ \u0026quot;=\u0026quot; ~ value } 最后，我们需要一个规则来表示整个输入文件。表达式 (section | property)? 匹配 section、property，否则什么也不匹配。使用内置规则 NEWLINE 来匹配行尾。\nfile = { SOI ~ ((section | property)? ~ NEWLINE)* ~ EOI } 要将解析器编译成 Rust，我们需要在 src/main.rs 中添加以下内容。\nexterncratepest;#[macro_use]externcratepest_derive;usepest::Parser;#[derive(Parser)]#[grammar = \u0026#34;ini.pest\u0026#34;]pubstruct INIParser;程序初始化 现在我们可以读取文件，并用 pest 进行解析。\nusestd::collections::HashMap;usestd::fs;fn main(){letunparsed_file=fs::read_to_string(\u0026#34;config.ini\u0026#34;).expect(\u0026#34;cannot read file\u0026#34;);letfile=INIParser::parse(Rule::file,\u0026amp;unparsed_file).expect(\u0026#34;unsuccessful parse\u0026#34;)// unwrap the parse result .next().unwrap();// get and unwrap the `file` rule; never fails // ... }我们将使用嵌套的 HashMap 来表达属性列表。外层哈希 map 将以章节名称作为键，以章节内容（内部哈希 map）作为值。每个内部哈希 map 将有属性键和属性值。例如，要访问 server_1 的 document_root，我们可以写 properties[\u0026quot;server_1\u0026quot;][\u0026quot;document_root\u0026quot;]。隐含的 \u0026ldquo;空\u0026quot;节将由常规部分表示，名称为空字符串 \u0026quot;\u0026quot;，这样 properties[\u0026quot;\u0026quot;][\u0026quot;salt\u0026quot;] 就是有效的。\nfn main(){// ... letmutproperties: HashMap\u0026lt;\u0026amp;str,HashMap\u0026lt;\u0026amp;str,\u0026amp;str\u0026gt;\u0026gt;=HashMap::new();// ... }请注意，哈希 map 的键和值都是 \u0026amp;str，即借用的字符串。pest 解析器不会复制他们解析的输入，而是借用。所有用于检查解析结果的方法都会返回从原始解析字符串中借用字符串。\n主循环 现在我们解释解析结果。我们循环浏览文件的每一行，这一行要么是节名，要么是键值属性对。如果遇到一个节名，我们更新一个变量。如果遇到一个属性对，我们就获取一个对当前章节的哈希 map 的引用，然后把这个属性对插入到这个哈希 map 中。\n// ... letmutcurrent_section_name=\u0026#34;\u0026#34;;forlineinfile.into_inner(){matchline.as_rule(){Rule::section=\u0026gt;{letmutinner_rules=line.into_inner();// { name } current_section_name=inner_rules.next().unwrap().as_str();}Rule::property=\u0026gt;{letmutinner_rules=line.into_inner();// { name ~ \u0026#34;=\u0026#34; ~ value } letname: \u0026amp;str =inner_rules.next().unwrap().as_str();letvalue: \u0026amp;str =inner_rules.next().unwrap().as_str();// Insert an empty inner hash map if the outer hash map hasn\u0026#39;t // seen this section name before. letsection=properties.entry(current_section_name).or_default();section.insert(name,value);}Rule::EOI=\u0026gt;(),_=\u0026gt;unreachable!(),}}// ... 在输出方面，我们用漂亮的打印 Debug 格式简单地转储哈希 map。\nfn main(){// ... println!(\u0026#34;{:#?}\u0026#34;,properties);}空白 如果你把本章顶部的例子 INI 文件复制到 config.ini 文件中并运行程序，它将无法解析。我们已经忘记了等号周围的可选空格!\n对于大型 grammar 来说，处理空白会很不方便。显示地编写 whitespace 规则并手动插入空白会让 grammar 变得难以阅读和修改。pest 提供了一个特殊规则 WHITESPACE 的解决方案。如果定义了 WHITESPACE，它将被隐式地运行，尽可能多次地在每个波浪号 ~ 和每个重复之间运行（例如，* 和 +）。对于我们的 INI 解析器，只有空格才是合法的 whitespace。\nWHITESPACE = _{ \u0026quot; \u0026quot; } 我们用一个前导的下划线 _{ ... } 来标记 WHITESPACE 规则的静默。}. 这样，即使它匹配，也不会出现在其他规则中。如果它不是静默的，解析就会复杂得多，因为对 Pairs::next(...) 的每次调用都有可能返回 Rule::WHITESPACE 而不是想要的下一条规则。\n但是等等! 节名、键或值中不应该有空格！目前，空格是自动插入的。目前，在 name = { char+ } 中，空格会自动插入字符之间。对空格敏感的规则需要用前导符号 @{ ... } 来标记原子。}. 在原子规则中，自动的空白处理是被禁用的，而内部规则是静默的。\nname = @{ char+ } value = @{ char* } 完工 试试吧！确保文件 config.ini 存在，然后运行程序! 你应该看到这样的东西。\n$ cargo run [ ... ] { \u0026quot;\u0026quot;: { \u0026quot;password\u0026quot;: \u0026quot;plain_text\u0026quot;, \u0026quot;username\u0026quot;: \u0026quot;noha\u0026quot;, \u0026quot;salt\u0026quot;: \u0026quot;NaCl\u0026quot; }, \u0026quot;second_server\u0026quot;: { \u0026quot;ip\u0026quot;: \u0026quot;\u0026quot;, \u0026quot;document_root\u0026quot;: \u0026quot;/var/www/example.com\u0026quot;, \u0026quot;interface\u0026quot;: \u0026quot;eth1\u0026quot; }, \u0026quot;server_1\u0026quot;: { \u0026quot;interface\u0026quot;: \u0026quot;eth0\u0026quot;, \u0026quot;document_root\u0026quot;: \u0026quot;/var/www/example.org\u0026quot;, \u0026quot;ip\u0026quot;: \u0026quot;127.0.0.1\u0026quot; } } "},"name":"Parser API - 解析 INI","published":"2021-01-19T00:00:00+08:00","summary":"Parser API - Example: INI","type":"entry","url":"https://ohmyweekly.github.io/notes/2021-01-19-parser-api-example-ini/"}],"name":"Rust","type":"feed","url":"https://ohmyweekly.github.io/categories/rust/"}
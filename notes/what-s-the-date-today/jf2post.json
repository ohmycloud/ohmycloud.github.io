{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cp\u003e欢迎来到这个可爱的 \u003cstrong\u003eRaku One-Liner Advent Calendar\u003c/strong\u003e 的第\u003ca href=\"https://raku.online/2018/12/05/what-is-the-date-today-in-raku/\"\u003e5\u003c/a\u003e天！\u003c/p\u003e\n\u003cp\u003e今天，我们将回答今天是什么日期的问题（如果你愿意的话，明天我们可以谈论回文）。\u003c/p\u003e\n\u003cp\u003e因此，要打印答案，您可以使用以下Raku代码行：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eyyyy\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emm\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它看起来显而易见，并以YYYY-MM-DD的格式打印日期。 好的部分是 \u003ccode\u003eDateTime\u003c/code\u003e 类可以直接使用，例如，您不需要像在Perl 5中那样包含模块。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"nv\"\u003eraku\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;DateTime.now.yyyy-mm-dd.say\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2018\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mo\"\u003e05\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e正如您在日历的前几天已经看到的那样，链式方法调用是典型的Raku惯用法。 另一种选择是使用\u003ccode\u003esay\u003c/code\u003e作为子例程并使用括号来标记方法调用：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eyyyy\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emm\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这段代码也有效; 它完全正确，但看起来很重。\u003c/p\u003e\n\u003cp\u003e您还应该注意并告诉您的朋友，在Raku中，您可以在标识符中使用短划线和撇号。\u003c/p\u003e\n\u003cp\u003e好吧，也许使用撇号不是一个好主意，但是在Raku的源代码中已经广泛使用了连字符。只需确保在表达式中的减法运算符周围放置空格以避免解析中的任何冲突。\u003c/p\u003e\n\u003cp\u003e浏览\u003ca href=\"https://github.com/rakudo/rakudo/blob/master/src/core/DateTime.pm6\"\u003e源代码\u003c/a\u003e或\u003ca href=\"https://docs.raku.org/type/DateTime\"\u003e阅读文档\u003c/a\u003e，您将找到以相同方式命名的另一种方法： \u003ccode\u003ehh-mm-ss\u003c/code\u003e。 我打赌你明白它的作用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehh\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emm\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ess\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mo\"\u003e00\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mo\"\u003e01\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，对于不同的输出格式，您将找不到类似的方法，例如 \u003ccode\u003edd-mm-yy\u003c/code\u003e 或 \u003ccode\u003ehh-mm\u003c/code\u003e。 请改用 \u003ca href=\"https://docs.raku.org/type/DateTime#(Dateish)_method_formatter\"\u003eformatter\u003c/a\u003e 程序。 它不是方法，而是在 \u003ccode\u003eDatish\u003c/code\u003e 角色中定义的属性。 \u003ccode\u003eDateTime\u003c/code\u003e 类中有一个默认格式化程序，但您可以通过为构造函数提供自己的子例程来重新定义它，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eformatter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;%02d.%02d.%04d\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eday\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emonth\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eyear\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里的格式化程序接收一个带有参数 \u003ccode\u003e$dt\u003c/code\u003e 的匿名子例程（由箭头引入）。\u003c/p\u003e\n\u003cp\u003e我希望这段代码与我们的初始单行打印相同的日期，因为您最有可能在一天内阅读整篇文章。\u003c/p\u003e\n\u003cp\u003e不过，明天见一下测试回文的代码！\u003c/p\u003e\n","text":"欢迎来到这个可爱的 Raku One-Liner Advent Calendar 的第5天！\n今天，我们将回答今天是什么日期的问题（如果你愿意的话，明天我们可以谈论回文）。\n因此，要打印答案，您可以使用以下Raku代码行：\nDateTime.now.yyyy-mm-dd.say 它看起来显而易见，并以YYYY-MM-DD的格式打印日期。 好的部分是 DateTime 类可以直接使用，例如，您不需要像在Perl 5中那样包含模块。\n$ raku -e\u0026#39;DateTime.now.yyyy-mm-dd.say\u0026#39; 2018-12-05 正如您在日历的前几天已经看到的那样，链式方法调用是典型的Raku惯用法。 另一种选择是使用say作为子例程并使用括号来标记方法调用：\nsay(DateTime.now().yyyy-mm-dd()); 这段代码也有效; 它完全正确，但看起来很重。\n您还应该注意并告诉您的朋友，在Raku中，您可以在标识符中使用短划线和撇号。\n好吧，也许使用撇号不是一个好主意，但是在Raku的源代码中已经广泛使用了连字符。只需确保在表达式中的减法运算符周围放置空格以避免解析中的任何冲突。\n浏览源代码或阅读文档，您将找到以相同方式命名的另一种方法： hh-mm-ss。 我打赌你明白它的作用。\n\u0026gt; DateTime.now.hh-mm-ss.say 00:12:01 请注意，对于不同的输出格式，您将找不到类似的方法，例如 dd-mm-yy 或 hh-mm。 请改用 formatter 程序。 它不是方法，而是在 Datish 角色中定义的属性。 DateTime 类中有一个默认格式化程序，但您可以通过为构造函数提供自己的子例程来重新定义它，例如：\nDateTime.now(formatter =\u0026gt; -\u0026gt; $dt { sprintf \u0026#39;%02d.%02d.%04d\u0026#39;, $dt.day, $dt.month, $dt.year }).say 这里的格式化程序接收一个带有参数 $dt 的匿名子例程（由箭头引入）。\n我希望这段代码与我们的初始单行打印相同的日期，因为您最有可能在一天内阅读整篇文章。\n不过，明天见一下测试回文的代码！\n"},"name":"🎄 5/25. 在 Raku 中今天是什么日期?","published":"2018-12-05T14:28:23Z","summary":"欢迎来到这个可爱的 Raku One-Liner Advent Calendar 的第5天！\n今天，我们将回答今天是什么日期的问题（如果你愿意的话，明天我们可以谈论回文）。\n因此，要打印答案，您可以使用以下Raku代码行：\nDateTime.now.yyyy-mm-dd.say 它看起来显而易见，并以YYYY-MM-DD的格式打印日期。 好的部分是 DateTime 类可以直接使用，例如，您不需要像在Perl 5中那样包含模块。\n$ raku -e\u0026#39;DateTime.now.yyyy-mm-dd.say\u0026#39; 2018-12-05 正如您在日历的前几天已经看到的那样，链式方法调用是典型的Raku惯用法。 另一种选择是使用say作为子例程并使用括号来标记方法调用：\nsay(DateTime.now().yyyy-mm-dd()); 这段代码也有效; 它完全正确，但看起来很重。\n您还应该注意并告诉您的朋友，在Raku中，您可以在标识符中使用短划线和撇号。\n好吧，也许使用撇号不是一个好主意，但是在Raku的源代码中已经广泛使用了连字符。只需确保在表达式中的减法运算符周围放置空格以避免解析中的任何冲突。\n浏览源代码或阅读文档，您将找到以相同方式命名的另一种方法： hh-mm-ss。 我打赌你明白它的作用。\n\u0026gt; DateTime.now.hh-mm-ss.say 00:12:01 请注意，对于不同的输出格式，您将找不到类似的方法，例如 dd-mm-yy 或 hh-mm。 请改用 formatter 程序。 它不是方法，而是在 Datish 角色中定义的属性。 DateTime 类中有一个默认格式化程序，但您可以通过为构造函数提供自己的子例程来重新定义它，例如：\nDateTime.now(formatter =\u0026gt; -\u0026gt; $dt { sprintf \u0026#39;%02d.%02d.%04d\u0026#39;, $dt.day, $dt.month, $dt.year }).say 这里的格式化程序接收一个带有参数 $dt 的匿名子例程（由箭头引入）。\n我希望这段代码与我们的初始单行打印相同的日期，因为您最有可能在一天内阅读整篇文章。\n不过，明天见一下测试回文的代码！","type":"entry","url":"https://ohmyweekly.github.io/notes/what-s-the-date-today/"}
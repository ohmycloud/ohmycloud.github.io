{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003ch2 id=\"前所未有的表现力-图片不可用httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceimages128px-cameliasvgpng\"\u003e\u003cstrong\u003e前所未有的表现力\u003c/strong\u003e \u003cimg src=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/images/128px-Camelia.svg.png\" alt=\"图片不可用\"\u003e\u003c/h2\u003e\n\u003cp\u003ePerl 5 正则表达式的强大功能使该语言成为分析文本数据的首选工具。从那时起，许多其他编程语言都复制了 Perl 的正则表达式，这部分地削弱了 Perl 在该领域中优于其他语言的优势。\u003c/p\u003e\n\u003cp\u003e从 Perl 5 派生的新 Raku 语言创建了一个新的文本匹配模型，该模型源自正则表达式，但功能强大且富有表现力，并且从常规正则表达式中删除它已决定给它们一个新名称，正则表达式。\u003c/p\u003e\n\u003cp\u003e不仅 Perl 的正则表达式6的机理是它大大高于现有的所有系统的正则表达式更强大，但它被设计成正则表达式相结合，构建 Grammar 语境，也就是说能够实现词汇和语法分析（系统词法和解析）到更复杂的数据，例如 HTML 文本，XML，XHTML，JSON，YAML，其中，不包括简单的情形，都超出正则表达式的范围。这些 Grammar 甚至可以分析所有级别的计算机程序。Raku 程序本身是用 Raku 自己编写的 Grammar 编译的。\u003c/p\u003e\n\u003cp\u003e虽然它们远不是 Raku 的唯一创新，但我们相信 Raku 正则表达式和 Grammar 将至少与 Perl 的正则表达式一样彻底改变计算机语言，甚至可能更多。他们现在还没有时间这样做。\u003c/p\u003e\n\u003cp\u003e本教程的讨论在 Perl 论坛上公开，地址如下： \u003ca href=\"http://www.developpez.net/forums/showthread.php?t=1551654\"\u003e评论\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"笔者\"\u003e笔者\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"http://www.developpez.net/forums/u510897/lolo78/\"\u003e劳伦特罗森菲尔德\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"文章\"\u003e文章\u003c/h1\u003e\n\u003cp\u003e发表于  2015年11月6日  - 更新于2018年  11月4日\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/grammaires_raku.pdf\"\u003ePDF\u003c/a\u003e, \u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/grammaires_raku.zip\"\u003e版离线版\u003c/a\u003e, \u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/grammaires_raku.epub\"\u003eePub\u003c/a\u003e, \u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/grammaires_raku.azw\"\u003eAzw\u003c/a\u003e, \u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/grammaires_raku.mobi\"\u003eMobi\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"社交链接\"\u003e社交链接\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"http://www.viadeo.com/shareit/share/?url=http%3A%2F%2Flaurent-rosenfeld.developpez.com%2Ftutoriels%2Fperl%2Fraku%2Fregex-grammaire-puissance%2F\u0026amp;Title=Les+regex+et+grammaires+de+Perl+6\"\u003e\u003cimg src=\"https://www.developpez.com/template/kit/kitbm-viadeo.png\" alt=\"Viadeo\"\u003e\u003c/a\u003e \u003ca href=\"http://twitter.com/timeline/home?status=http%3A%2F%2Flaurent-rosenfeld.developpez.com%2Ftutoriels%2Fperl%2Fraku%2Fregex-grammaire-puissance%2F\"\u003e\u003cimg src=\"https://www.developpez.com/template/kit/kitbm-twitter.png\" alt=\"叽叽喳喳\"\u003e\u003c/a\u003e \u003ca href=\"http://www.facebook.com/sharer.php?u=http%3A%2F%2Flaurent-rosenfeld.developpez.com%2Ftutoriels%2Fperl%2Fraku%2Fregex-grammaire-puissance%2F\"\u003e\u003cimg src=\"https://www.developpez.com/template/kit/kitbm-facebook.png\" alt=\"Facebook的\"\u003e\u003c/a\u003e \u003ca href=\"https://plus.google.com/share?url=http%3A%2F%2Flaurent-rosenfeld.developpez.com%2Ftutoriels%2Fperl%2Fraku%2Fregex-grammaire-puissance%2F\"\u003e\u003cimg src=\"https://www.gstatic.com/images/icons/gplus-16.png\" alt=\"在Google+上分享\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"1-正则表达式入门httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e1. \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e正则表达式入门\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e在正则表达式（或正则表达式）从数学和将字符串通常已知的形式语言的计算机科学理论概念模式（或模式）来描述一个整体（成品或不）字符串由模式定义的共同特征，根据预定义的语法并且不考虑上下文。的图案（匹配图案匹配）是应用这些模式到文本的样本，以试图找到对应于这些模式的文本片段的过程。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e在你的计算机上安装Raku\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e如果你想使用 Raku，我们建议你在\u003ca href=\"http://rakudo.org/downloads/star/\"\u003e此地址\u003c/a\u003e下载 Rakudo Star。有关安装的更多信息，请参阅\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-bases/#L1-2\"\u003ePerl 5到Raku\u003c/a\u003e教程的第一部分\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-bases/#L1-2\"\u003e- 第1部分：语言基础知识\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e在我们更新本文档（2018年10月）时，建议你选择 MoarVM 虚拟机。\u003c/p\u003e\n\u003ch2 id=\"1-1-与文件搜索类比httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e1-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e与文件搜索类比\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e要在目录中搜索名称以字母 “a” 开头且扩展名为 .txt 的所有文件，可以在系统的提示符下写入：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003els  a*.txt    # shell Unix, Linux, etc.\n# ou :\ndir a*.txt    # console DOS/cmd ou Powershell Windows, VMS, etc.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e使用的命令名称（ls或dir）因操作系统而异，但此处使用的原因相同：a*.txt。更确切地说，它意味着字母 “a”，后跟任意数量的字符，后跟字符串 “.txt  ”。\u003c/p\u003e\n\u003cp\u003e使用的命令将在屏幕上显示当前目录中名称与模式 a*.txt 相关的所有文件 。过滤文件的名称在目录（或这样夹有图案 DOS/Windows 的术语）是正则表达式的工作原理：该模式所描述的，一般由左到右，一系列的元素必须在目标字符串中遇到（这里是文件名）：首先是字母  “a”，然后是任何字符，然后是字符串 “.txt”。\u003c/p\u003e\n\u003cp\u003e类比结束于此，因为编程语言中常用的正则表达式的语法赋予元字符 “*” 不同的含义（见第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-4\"\u003e2.4\u003c/a\u003e节  ）。\u003c/p\u003e\n\u003ch2 id=\"1-2-正则表达式简史httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e1-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e正则表达式简史\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e正则表达式的使用是在1970年由计算机科学家 Ken Thompson，UNIX 的创作者第一个实现的，在 QED 和 ED 编辑器中（其很少使用）和 Unix 命令 grep，现在还很常用。\u003c/p\u003e\n\u003cp\u003e例如，在 Unix 或 Linux上，以下 grep 命令显示 text.txt 文件中包含字母“ab”的所有行，后跟任何字符，后跟字母“d”：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$\u0026gt; grep ab.d texte.txt\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e在ab.d中，元字符 \u0026ldquo;.\u0026rdquo; 表示“任何单个字符”，上面的命令可以显示文件的以下行：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eabcd\nabvd ...\n... abyd\n... xyabcdz ...\nxyab3dgh\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e现在仍在广泛使用的其他使用正则表达式的 Unix 实用程序也快速出现了：sed，vi，awk， lex，emacs，egrep 等。\u003c/p\u003e\n\u003cp\u003ePerl 语言（Perl 1出现于1987年12月）可能是第一个通用编程语言（除了awk，它不是通用语言，并且非常特别）具有集成的正则表达式，随后其它语言跟随。\u003c/p\u003e\n\u003cp\u003e很快，Perl（尤其是自1994年以来的Perl 5）大大扩展了它的正则表达式，以至于他们早已不再是严格意义上的“常规”或“理性”，而是提供另一方面，由于它们被许多编程语言（如Tcl，Python，PHP，Ruby，.NET，Java，JavaScript，Delphi等）复制而增加了表现力。Perl 5 对这些语言的影响是这样的，他们大多使用一种叫做“Perl兼容的正则表达式”（PCRE）库：简而言之，吸引用户，有必要强调的事实，提出的解决方案遵循 Perl 的“扩展正则表达式”的语法。\u003c/p\u003e\n\u003ch2 id=\"1-3-raku-正则表达式的新功能httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e1-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eRaku 正则表达式的新功能\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e使用 Raku 时，正则表达式总是使用从模式的左到右相同的渐进式匹配方法，但它们更不规则（严格意义上是原始的非上下文形式语言）并且甚至比那些更强大从Perl 5开始，所以决定放弃术语“正则表达式”来引用它们并将它们命名为正则表达式。随着时间的推移添加新功能最终使 Perl 的正则表达式语法有些蓬松，这在很大程度上是因为 Perl 5 一直专注于尽可能保持向后兼容。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRaku 的正则表达式不再是 Perl 5 的正则表达式\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ePerl 的正则表达式（尤其是Perl 5）已经显着影响了许多其他编程语言，以至于它们已成为事实上通常采用的标准（由PCRE库证明）。\u003c/p\u003e\n\u003cp\u003e注意，虽然他们保持清晰的相似性，Raku 的正则表达式重新制作，不再遵循 Perl 5 建立的标准。这种重新设计使它们更清晰，最重要的是更强大。因此，与PCRE不同，Raku 的正则表达式与 Perl 5 的正则表达式不兼容。\u003c/p\u003e\n\u003cp\u003e未来将告诉我们这个彻底打破常规的决定是否会被其他语言所遵循，以及 Raku 正则表达式是否会成为事实上的标准。我们认为 Raku 值得。\u003c/p\u003e\n\u003cp\u003e注意 ：但是，可以在 Raku 程序中使用副词 \u003cstrong\u003e:P5\u003c/strong\u003e 或 \u003cstrong\u003e:Perl5\u003c/strong\u003e 以使用 Perl 5 正则表达式语法（参见  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1-3\"\u003e2.9.1.3。\u003c/a\u003e）。然后我们找到与Perl 5兼容的正则表达式。\u003c/p\u003e\n\u003cp\u003eRaku 决定成为一种新语言并放弃这种向后兼容的要求，它允许相当深入地重写正则表达式的语言，使其大大扩展并使其更加连贯和合乎逻辑。\u003c/p\u003e\n\u003cp\u003e此外，下面的许多示例将显示如何构建简单的正则表达式并给正则表达式起个名字，以便它们可以像组装块一样组装成模式。越研究就越复杂。例如，IPv4 地址由四个字节组成（通常由十进制表示的四个整数表示，在0到255之间，由点号分隔）。这是很容易编写的第一个 Raku 正则表达式，因为这样的被称为字节，并检查它具有令人满意的数量在适当的条件，则装配一个新的正则表达式匹配那些字节四个，用点号分隔（见第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-2-4\"\u003e4.2.4\u003c/a\u003e节)\u003c/p\u003e\n\u003cp\u003e但是，Raku 正则表达式带来的真正革命是它们可以构建更强大的实体，即 Grammar（见 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3\"\u003e§3\u003c/a\u003e）。Grammar 是定义语法的形式主义，因此也是一种形式语言。在 Raku 中，它采用一组规则的形式，并命名为正则表达式，并允许逐步构建一个文本匹配系统，其结构远远少于正则表达式所能匹配的结构（甚至扩展）因此，Grammar 允许对文本进行词法和句法分析，例如计算机程序的源代码，以便编译它。Raku 有自己的 Raku Grammar，用 Raku编写。\u003c/p\u003e\n\u003cp\u003e正则表达式有时被认为是抽象的，难以理解。正则表达式使用简单的概念是比较难比的条件，了解构造，如果和循环，同时或为Perl语言本身。事实上，学习正则表达式的真正挑战在于理解通常用于表达这些概念的非常简洁，甚至是简洁的符号。事实上，Raku 通过提供插入空格，注释等能力，可以大大简化对正则表达式的理解。总是可以继续编写正则表达式非常简洁，有时候有点难以破译，有时候对于简单的问题就足够了，但没有人有义务。在本文档末尾附近\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-1\"\u003e格式化代码\u003c/a\u003e一章的示例中，显而易见。\u003c/p\u003e\n\u003ch2 id=\"1-4-与正则表达式相关联的功能和方法httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e1-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e与正则表达式相关联的功能和方法\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e虽然这不是本教程的主题，但使用正则表达式之前简要回顾一些 Raku 运算符很有用。\u003c/p\u003e\n\u003cp\u003e在 Raku 中，基体操作者检查的字符串是否匹配的模式是操作员~~智能匹配（智能操作者匹配）。例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Reconnu\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcdef\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ab.d/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# -\u0026gt; Affiche : Reconnu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里，要解析的字符串是“abcdef”和正则表达式/ab.d/的模式。动机得到认可，因为人们可以在动机的四个原子之间建立对应关系（点“  。  ”匹配一个任意的角色，因此，在这里，它匹配“c”）和角色链的一部分; 该模式描述了链的这一部分。当然，/ ab.d /模式也会匹配出例如字符串“  \u003cstrong\u003eabwd\u003c/strong\u003e ef”，“  \u003cstrong\u003eab7d\u003c/strong\u003e ef”或“su \u003cstrong\u003eabZd\u003c/strong\u003e a”。\u003c/p\u003e\n\u003cp\u003e需要注意的是智能匹配的操作~~这里用来连接字符串，用于在Raku的许多其他事情正则表达式模式（例如检查的项目在数组中，或检查变量与类型的兼容性等），但这不是本文档的目的（参见例如 \u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/annexe-01/#L2-2\"\u003e智能匹配操作员\u003c/a\u003e）。\u003c/p\u003e\n\u003cp\u003e如果要解析的字符串存储在默认变量$ _中，则不需要存在智能匹配运算符，并且可以直接在布尔上下文中评估正则表达式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ ^ab /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;La chaîne $_ commence par les lettres \u0026#39;ab\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可以使用智能匹配操作符的否定形式 \u003ccode\u003e!~~\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Chaîne \u0026#39;ab\u0026#39; non trouvée\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fedcba\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e!~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ab/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                      \u003cspan class=\"c1\"\u003e# -\u0026gt; Chaîne \u0026#39;ab\u0026#39; non-trouvée\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Équivalent à :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Chaîne \u0026#39;ab\u0026#39; non trouvée\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;fedcba\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ab/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku 还允许使用 \u003ccode\u003e.match\u003c/code\u003e 这种面向对象的语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Reconnu\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abdcef\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/c.f/\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# -\u0026gt; Reconnu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e正则表达式还允许你进行替换：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcde\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003es/bc/CB/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                              \u003cspan class=\"c1\"\u003e# -\u0026gt; affiche aCBde\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e还有一个 \u003ccode\u003e.subst\u003c/code\u003e 方法来执行替换（但不是就地替换 ///）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcde\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emodifiée\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/cd/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;DC\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# -\u0026gt; abDCe\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是，可以直接修改 \u003ccode\u003e$string\u003c/code\u003e 变量（不创建新变量），也可以将其放在赋值的左侧部分：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcde\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/cd/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;DC\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# -\u0026gt; abDCe\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e.subst\u003c/code\u003e 方法的第一个参数可以是正则表达式或字符串。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003esplit\u003c/strong\u003e 函数和 \u003cstrong\u003e.split\u003c/strong\u003e 方法按照分割符将字符串划分为子字符串列表, 其第一个参数也可以使用字符串或正则表达式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a;b;c,d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c,d\u0026#34;).Seq\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\\;/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a;b;c,d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c,d\u0026#34;).Seq\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u0026lt;[;,]\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a;b;c,d\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;).Seq\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Version syntaxe de méthode orientée objet :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;a;b;c,d\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\u0026lt;[;,]\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;).Seq\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003ecomb\u003c/strong\u003e 函数和 \u003cstrong\u003e.comb\u003c/strong\u003e 方法返回字符串上模式的匹配（贪婪）列表：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esay join \u0026#34; \u0026#34;, comb /\\d+/, \u0026#34;jeu du 7, 14 et 21\u0026#34;;    # -\u0026gt; 7 14 21\n# syntaxe de méthode :\nsay \u0026#34;3 fois 6 font 18\u0026#34;.comb(/\\d+/).join(\u0026#34; \u0026#34;);      # -\u0026gt; 3 6 18\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e在不特定于正则表达式的情况下，建立布尔条件的其他函数或方法可以使用正则表达式模式（或其他内容，例如数字比较）来定义此条件。因此，函数 \u003cstrong\u003efirst\u003c/strong\u003e 返回满足条件的列表的第一个元素，函数 \u003cstrong\u003egrep\u003c/strong\u003e 返回满足条件的列表的所有元素，正则表达式可写为：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efirst\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ma/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ejan\u003c/span\u003e \u003cspan class=\"n\"\u003efév\u003c/span\u003e \u003cspan class=\"n\"\u003emar\u003c/span\u003e \u003cspan class=\"n\"\u003eavr\u003c/span\u003e \u003cspan class=\"n\"\u003emai\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# -\u0026gt; mar\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003egrep\u003c/span\u003e  \u003cspan class=\"sr\"\u003e/ma/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ejan\u003c/span\u003e \u003cspan class=\"n\"\u003efév\u003c/span\u003e \u003cspan class=\"n\"\u003emar\u003c/span\u003e \u003cspan class=\"n\"\u003eavr\u003c/span\u003e \u003cspan class=\"n\"\u003emai\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# -\u0026gt; (mar mai)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ejan\u003c/span\u003e \u003cspan class=\"n\"\u003efév\u003c/span\u003e \u003cspan class=\"n\"\u003emar\u003c/span\u003e \u003cspan class=\"n\"\u003eavr\u003c/span\u003e \u003cspan class=\"n\"\u003emai\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e/v/\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# -\u0026gt; (fév avr)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003egiven-when\u003c/strong\u003e构造（Raku 的“switch”）也经常使用正则表达式：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $var = \u0026#39;42\u0026#39;;\ngiven $var { \n    when /^4/   { say \u0026#34;Commence par \u0026#39;4\u0026#39;\u0026#34;; proceed}; \n    when /2$/   { say \u0026#34;Finit par \u0026#39;2\u0026#39;\u0026#34;; proceed}; \n    when /^42$/ { say \u0026#34;Réponse à la Grande Question sur l\u0026#39;Univers\u0026#34; }\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"2-raku的正则表达式httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2. \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eRaku的正则表达式\u003c/a\u003e\u003c/h1\u003e\n\u003ch2 id=\"2-1-惯用法httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e惯用法\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eRaku 提供了以下用于编写正则表达式的语法结构：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003em/abc/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# 立即应用于 $_ 的正则表达式\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erx\u003c/span\u003e\u003cspan class=\"sr\"\u003e/abc/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# Regex 类型的正则表达式对象\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/abc/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# Regex 类型的正则表达式对象\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前两个语法可以使用除斜杠之外的其他分隔符：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003em{abc}\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# 或者 m[abc];\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# 或者 rx!abc!;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但请注意，冒号（“:”）不能用作正则表达式的分隔符。普通括号 \u0026ldquo;( \u0026quot; 和 \u0026ldquo;)\u0026rdquo; 只能作为分隔符，如果左括号由前面的rx 运算符的至少一个空格分隔（这是 Raku 的一般规则：括号前面标识符旁边的开头被分析为函数调用的开头）：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $regex = rx(toto);  # 错误，解释为函数调用\nmy $regex = rx (toto); # OK\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e通常，默认情况下会忽略模式中的空格，除非使用（显式或隐式）副词 \u003cstrong\u003e:s\u003c/strong\u003e 或 \u003cstrong\u003e:sigspace\u003c/strong\u003e，请参见第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1-2\"\u003e2.9.1.2\u003c/a\u003e节 （下文）。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esay \u0026#34;Reconnu\u0026#34; if \u0026#34;abc\u0026#34; ~~ /a b  c /;    # -\u0026gt; \u0026#34;Reconnu\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e正如在 Raku 的注释，注释通常以 \u003ccode\u003e#\u003c/code\u003e 字符开始（通常称为字符英镑错误，英镑是不同的：“  ♯  ‘），除非蜘蛛被转义字符保护’ \\“，并转到行的末尾（除非括号用作分隔符，在这种情况下，最好不要尝试将其用作注释开始字符）。\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-bases/#L2-2-1\"\u003e多行注释\u003c/a\u003e也是可能的。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# Commentaires unilignes :\nmy $regex = rx {\n                 abc         # chaîne littérale \u0026#39;abc\u0026#39;\n                 \\d          # suivie d\u0026#39;un chiffre\n                 \\w          # puis d\u0026#39;un caractère alphanumérique.\n};\n\n# Commentaire multiligne :\nmy $regex = rx { \n                 abc \\d \\w   #`[ chaîne littérale \u0026#39;abc\u0026#39; suivie d\u0026#39;un\n                                 chiffre puis d\u0026#39;un caractère\n                                 alphanumérique quelconque.\n                               ]\n};\nsay \u0026#34;Reconnu\u0026#34; if \u0026#34;XYabc6QUVW\u0026#34; ~~ /\u0026lt;$regex\u0026gt;/; # reconnaît \u0026#39;abc6Q\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"2-2-字面量httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e字面量\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e正则表达式的匹配模式的最简单情况是常量字符串。在这种情况下，匹配模式是将模式作为字符串的子字符串查找：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Esperluette est le nom parfois donné au signe \u0026amp;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003em/ perl /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;$chaîne contient \u0026#34;perl\u0026#34;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -\u0026gt; $chaîne contient \u0026#34;perl\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所有字母数字字符（Unicode）和带下划线或下划线的字符（“  _  ”）都是字面匹配。所有其他字符（标点符号，符号等）必须由反斜杠转义字符（“  \\  ”）保护或引用单引号（或单引号）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ \u0026#39;deux mots\u0026#39; /\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# reconnaît \u0026#39;deux mots\u0026#39;, espace blanc compris\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ \u0026#34;a:b\u0026#34;       /\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# reconnaît \u0026#39;a:b\u0026#39;, caractère deux-points compris\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ \u0026#39;#\u0026#39; /\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# reconnaît le caractère croisillon (ou hash)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/moi\\@gmail\\.com/\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# échappements pour protéger l\u0026#39;@ et le .\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/\u0026#39;moi@gmail.com\u0026#39;/\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# équivalent à : /moi\\@gmail\\.com/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当受转义字符保护时，字母数字字符通常具有特定含义：例如，元字符\\ d表示可以表示任意数字（Unicode）的字符类; 稍后将给出许多例子（特别是在第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-3-1\"\u003e2.3.1\u003c/a\u003e节中  ）。\u003c/p\u003e\n\u003cp\u003e从左到右搜索字符串，因此，例如，子字符串等于模式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abcdefg\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ de /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# de -\u0026gt; motif reconnu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eprematch\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# abc -\u0026gt; ce qui précède le motif reconnu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epostmatch\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# fg -\u0026gt; ce qui suit le motif reconnu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 3 -\u0026gt; position du début de la reconnaissance\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eto\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# 5 -\u0026gt; position de ce qui suit la reconnaissance\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e匹配结果存储在变量$ /中（表示匹配对象，即使英文单词有时也意味着“ 匹配类型的对象”，它将在本文档中被“匹配对象”翻译 ），以及也通过承认来提及。如果匹配成功，则结果为Match类型，否则为Nil。\u003c/p\u003e\n\u003ch2 id=\"2-3-元字符和字符类httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e元字符和字符类\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e甲字符类是不能匹配的单个特定的字符正则表达式语法元素，但一个字符属于范围可能与共同的特征的字符（例如匹配任何数字0至9，或任何小写字母字符）。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e点\u003c/strong\u003e（“  。  ”）匹配任何简单字符（除非前面有转义字符，在这种情况下它匹配文字点）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#39;perl\u0026#39;\u003c/span\u003e   \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/per./\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# Reconnaît toute la chaîne\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#39;perl\u0026#39;\u003c/span\u003e   \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ per . /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# Idem (espaces blancs ignorés);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#39;perl\u0026#39;\u003c/span\u003e   \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ pe.l /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# Idem: le . reconnaît le r\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#39;Épelle\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ pe.l/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# Idem: le . reconnaît le premier l\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#39;perl\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/. per /\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# Pas de reconnaissance: \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                          \u003cspan class=\"c1\"\u003e# le . ne reconnaît rien avant la chaîne per\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e与Perl 5和许多其正则表达式系统派生自Perl 5的语言不同，点也始终匹配换行符。\u003c/p\u003e\n\u003ch3 id=\"2-3-1-转义字符和预定义的字符类httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-3-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e转义字符和预定义的字符类\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e反斜杠（或反斜杠）形式的预定义字符类后跟一个字母，例如\\ w。如果字母是大写的（\\ W），则它是对应于相同小写字母的字符类的否定（即\\ W识别\\ w无法匹配的任何字符）：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e字母数字字母\u003c/strong\u003e（字母，数字和_）：\\ w（补码：\\ W）; 匹配例如一个，Ç，Ž，7个字符的Unicode 0041甲LATIN CAPITAL LETTER甲，0031 1一个数字，03B4δGREEK小写字母DELTA或0409ЉCYRILLIC CAPITAL LETTER LJE）;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e数字字符\u003c/strong\u003e  ：\\ d，和\\ d（以Unicode意义上，不只是我们的阿拉伯数字单位数字：例如，U + 0E53 3 DIGIT三泰（泰图3）是由\\ d识别）;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e水平空间\u003c/strong\u003e l：\\ h和\\ H（白色空格，制表符，U + 00A0 NO-BREAK SPACE）;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e垂直空间\u003c/strong\u003e  ：\\ n和\\ N;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e空间（水平或垂直）\u003c/strong\u003e  ：\\ s和\\ S  ; 例如，在字符串\u0026rsquo;包含以m开头的单词\u0026rsquo;中，表达式/ m \\ S + /匹配\u0026rsquo;word\u0026rsquo;。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e制表\u003c/strong\u003e（U + 0009）：\\ t和\\ T  ;\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e垂直空间\u003c/strong\u003e  ：\\ v和\\ V（例如U + 000A LINE FEED，U + 000C CARRIAGE RETURN等）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-3-2-unicode属性httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-3-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eUnicode属性\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e上面看到的字符类对常见情况很有用。Unicode 属性的使用允许更系统和更精细的方法。调用语法的格式为 \u003ccode\u003e\u0026lt;:property\u0026gt;\u003c/code\u003e，其中 “property” 可以是 Unicode 属性的短名称或长名称。Unicode 属性本身的确切含义不是由Perl 定义的，而是由 Unicode 标准定义的。\u003c/p\u003e\n\u003cp\u003e以下是最常见的Unicode属性列表：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e简称\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e长名\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e意思和评论\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eL\u003c/td\u003e\n\u003ctd\u003eLetter\u003c/td\u003e\n\u003ctd\u003e字母\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLC\u003c/td\u003e\n\u003ctd\u003eCased_Letter\u003c/td\u003e\n\u003ctd\u003e带大小写的字母（区分大小写）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLu\u003c/td\u003e\n\u003ctd\u003eUpper_Cased_Letter或Upper\u003c/td\u003e\n\u003ctd\u003e大写字母（大写）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eLl\u003c/td\u003e\n\u003ctd\u003eLower_Cased_Letter或Lower\u003c/td\u003e\n\u003ctd\u003e小写字母（小写）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eN\u003c/td\u003e\n\u003ctd\u003eNumber\u003c/td\u003e\n\u003ctd\u003e数字\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eNd\u003c/td\u003e\n\u003ctd\u003eDecimal_Number或数字\u003c/td\u003e\n\u003ctd\u003e十进制数（数字）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eNl\u003c/td\u003e\n\u003ctd\u003eLETTER_NUMBER\u003c/td\u003e\n\u003ctd\u003e号码信\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eP\u003c/td\u003e\n\u003ctd\u003ePunctuation or punct\u003c/td\u003e\n\u003ctd\u003e标点符号\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePd\u003c/td\u003e\n\u003ctd\u003eDash_Punctuation\u003c/td\u003e\n\u003ctd\u003e标点符号类型破折号\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePs\u003c/td\u003e\n\u003ctd\u003eOpen_Punctuation\u003c/td\u003e\n\u003ctd\u003e打开标点符号\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003ePe\u003c/td\u003e\n\u003ctd\u003eClose_Punctuation\u003c/td\u003e\n\u003ctd\u003e结束标点符号\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eS\u003c/td\u003e\n\u003ctd\u003eSymbol\u003c/td\u003e\n\u003ctd\u003e符号\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSm\u003c/td\u003e\n\u003ctd\u003eMath_Symbol\u003c/td\u003e\n\u003ctd\u003e数学符号\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSc\u003c/td\u003e\n\u003ctd\u003eCURRENCY_SYMBOL\u003c/td\u003e\n\u003ctd\u003e货币符号（例如$，£或€）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eZ\u003c/td\u003e\n\u003ctd\u003eSeparator\u003c/td\u003e\n\u003ctd\u003e分隔符\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eZs\u003c/td\u003e\n\u003ctd\u003eSPACE_SEPARATOR\u003c/td\u003e\n\u003ctd\u003e空白分隔符\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eZl\u003c/td\u003e\n\u003ctd\u003eLINE_SEPARATOR\u003c/td\u003e\n\u003ctd\u003e行分隔符\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eZp\u003c/td\u003e\n\u003ctd\u003eParagraph_Separator\u003c/td\u003e\n\u003ctd\u003e段落分隔符\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e例如，\u003ccode\u003e\u0026lt;:Lu\u0026gt;\u003c/code\u003e 匹配单个大写字母。\u003c/p\u003e\n\u003cp\u003e使用 \u003ccode\u003e\u0026lt;:!property\u0026gt;\u003c/code\u003e 形式获取否定的 Unicode 属性，例如 \u003ccode\u003e\u0026lt;:!Lu\u0026gt;\u003c/code\u003e 将匹配任何不是大写字母的单个字符。\u003c/p\u003e\n\u003cp\u003e可以使用以下固定运算符组合多个属性：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003e操作者\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e意\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e备注\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e+\u003c/td\u003e\n\u003ctd\u003e设置联盟\u003c/td\u003e\n\u003ctd\u003e或属性之间的逻辑（金）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e|\u003c/td\u003e\n\u003ctd\u003e设置联盟\u003c/td\u003e\n\u003ctd\u003e或属性之间的逻辑（金）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e＆\u003c/td\u003e\n\u003ctd\u003e设置交叉点\u003c/td\u003e\n\u003ctd\u003e和属性之间的逻辑（和）\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e-\u003c/td\u003e\n\u003ctd\u003e设定差异\u003c/td\u003e\n\u003ctd\u003e拥有第一个属性而不是第二个属性\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e^\u003c/td\u003e\n\u003ctd\u003e交点对称集\u003c/td\u003e\n\u003ctd\u003e或属性之间的独占逻辑（XOR）\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e例如，要匹配小写字母或数字，可以写入：\u0026lt;：Ll +：N\u0026gt;或\u0026lt;：Ll +：Number\u0026gt;或甚至\u0026lt;+：Lowercase_Letter +：Number\u0026gt;。\u003c/p\u003e\n\u003cp\u003e也可以使用括号对类别和类别组进行分组，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#39;raku\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003em{\\w+(\u0026lt;:Ll+:N\u0026gt;)}\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 0 =\u0026gt; ｢6｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-3-3-枚举的字符类和间隔httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-3-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e枚举的字符类和间隔\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e有时，元字符和预定义的字符类是不够的。幸运的是，通过放置\u0026lt;[\u0026hellip;]\u0026gt;任意数量的字符和字符间隔（在这些间隔的边界之间有两个点“  ..  ”）来定义一个人自己的字符类很容易，或者没有空格：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#34;abacabadabacaba\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ \u0026lt;[ a .. d 1 2 3 ]\u0026gt; /\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Vrai\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可以在\u0026lt;\u0026hellip;\u0026gt;中使用与Unicode类别（+，|，＆，-，^）相同的运算符来组合多个区间定义，甚至可以将它们与上面的Unicode类别; 我们也可以在括号中使用用反斜杠定义的字符类：/ \u0026lt;[\\ d]  -  [13579]\u0026gt; /，顺便说一下，它与/ \u0026lt;[02468]不同。 \u0026gt; /，因为第一个也匹配非阿拉伯数字。\u003c/p\u003e\n\u003cp\u003e在开放的V形符号之后用“ - ”符号获得这类字符的否定：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;pas de guillemets\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/  \u0026lt;-[ \u0026#34; ]\u0026gt; + /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e# reconnaît les caractères autres que \u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e解析用引号分隔的字符串，使用使用字符类否定的模式是很常见的：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;entre guillemets\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ \u0026#39;\u0026#34;\u0026#39; \u0026lt;-[ \u0026#34; ]\u0026gt; * \u0026#39;\u0026#34;\u0026#39;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e# un guillemet, suivi de non-guillemets, suivi d\u0026#39;un guillemet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-4-量词httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e量词\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e量化器使得有可能匹配，而不是一次，而是固定或可变次数，即它之前的原子。例如，量化器“  +  ”试图匹配上述中的一个或多个。\u003c/p\u003e\n\u003cp\u003e量化器具有比串联更高的优先级，因此/ ab + /匹配字母a后跟字母b的一倍或多倍。使用撇号反转情况：/\u0026lsquo;ab\u0026rsquo;+ /匹配字符串\u0026rsquo;ab\u0026rsquo;，\u0026lsquo;abab\u0026rsquo;\u0026lsquo;ababab\u0026rsquo;等。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003e量词\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e意\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e注释或示例\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e+\u003c/td\u003e\n\u003ctd\u003e一个或多个\u003c/td\u003e\n\u003ctd\u003e匹配前面的原子一次或多次，没有上限\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e*\u003c/td\u003e\n\u003ctd\u003e0次或更多次\u003c/td\u003e\n\u003ctd\u003e例如，要在a和b之间允许一个或多个可选空格：/ a \\ s * b /\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e？\u003c/td\u003e\n\u003ctd\u003e0或1次\u003c/td\u003e\n\u003ctd\u003e例如，对于单个可选字符\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e** min..max\u003c/td\u003e\n\u003ctd\u003emin和max之间的任意次数\u003c/td\u003e\n\u003ctd\u003e说Bool（\u0026lsquo;a\u0026rsquo;~~ / a ** 2..5 /）; ＃ - \u0026gt;   假说Bool（\u0026lsquo;aaa\u0026rsquo;~~ / a ** 2..5 /）; ＃ - \u0026gt;是的\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e**\u003c/td\u003e\n\u003ctd\u003e恰好n次\u003c/td\u003e\n\u003ctd\u003e说Bool（\u0026lsquo;yyyy\u0026rsquo;~~ / a ** 5 /）; ＃ - \u0026gt;   假说Bool（\u0026lsquo;aaaaa\u0026rsquo;~~ / a ** 5 /）; ＃ - \u0026gt;是的\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e％\u003c/td\u003e\n\u003ctd\u003e量化器修改\u003c/td\u003e\n\u003ctd\u003e为了更容易使用CSV，应用于上述量词之一的％修饰符允许匹配指定重复确认之间必须存在的分隔符。例如：/ a +％\u0026rsquo;，\u0026rsquo;/匹配\u0026rsquo;a，a\u0026rsquo;或\u0026rsquo;a，a，a\u0026rsquo;等，但ni\u0026rsquo;a，\u0026rsquo;，ni\u0026rsquo;a，a，\u0026rsquo;。\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"2-4-1-量词的亲和力和节俭httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-4-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e量词的亲和力和节俭\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e默认情况下，+和*量化器是贪婪或贪婪的，也就是说，它们在链中寻找最长的匹配。例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;aabaababa\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ .+ b /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# -\u0026gt; aabaabab\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这里，子正则表达式。+搜索的任何字符，最长的可能字符串尚未承认正则表达式的其余部分，即原子b，这可能是目标。但经常发生这是初学者的错误，而且目标是匹配“任何角色直到第一个b  ”。在这种情况下，优选使用量词非贪婪（或“节俭”），得到通过用问号加上后缀原始计数，给予任+？那是*？。例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;aabaababa\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ .+? b /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# -\u0026gt; aab\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-5-替代品认识这个或那个httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e替代品（认识这个或那个）\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e要匹配几种可能性中的一种，必须用“  ||  ”将它们分开 “; 发现的第一个匹配（从左到右）获胜。例如，初始化文件（config.ini样式）通常具有以下形式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003esection\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclef\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从这样的文件中读取一行时，它可以是一个段或一个键值对。作为第一种方法，用于读取此类文件的正则表达式可以是：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ \u0026#39;[\u0026#39; \\w+ \u0026#39;]\u0026#39; || \\S+ \\s* \u0026#39;=\u0026#39; \\s* \\S* /\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也就是说：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e括号中的一个词;\u003c/li\u003e\n\u003cli\u003e是由比白空间的其他字符，接着0或多个空格的字符串，然后等号“=”随后再次可选的空间，随后除白色空间的其他字符的进一步的字符串。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e还有另一种形式的替代方案，使用分隔符“  | （而不是“  ||  ”）。我们的想法是一样的，但是这是最长的匹配（无论是在第一），其被保留（只要你开始在同一位置），这意味着它们必须全部（可能并行测试）并进行比较。\u003c/p\u003e\n\u003cp\u003e以下示例说明了两个运算符之间的区别：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcdef\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ab || abcde/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# -\u0026gt; ab\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ab |  abcde/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# -\u0026gt; abcde\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ab |  bcde/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# -\u0026gt; ab\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# dans ce dernier cas, la reconnaissance la plus à gauche l\u0026#39;emporte\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最长匹配的规则对于属于例如Perl代码的字符串的词法分析特别有用。因此，它允许Perl语法匹配包含连字符的标识符（变量，函数等）（假设它们后跟字母字符）：Perl能够匹配由于这种最长匹配规则，这样的标识符（并且例如将其与较少放置在两个不同符号之间的算术运算符区分开）。\u003c/p\u003e\n\u003ch3 id=\"2-5-1-连词认识到这一点和那个httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-5-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e连词（认识到这一点和那个）\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e替代方案在由运算符“  |  ”分隔的替代项的术语之间建立逻辑或（分离）»或««  | ”。\u003c/p\u003e\n\u003cp\u003e还有运算符“  ＆  ”和“  \u0026amp;\u0026amp;  ” 在它们分开的术语之间建立逻辑和（结合）。如果两个术语都被匹配并且它们匹配相同的子串（匹配的相同开头和相同末尾），则正则表达式只会成功：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $regex = rx/a..d \u0026amp; .bcd/;\nsay \u0026#34;Reconnu\u0026#34; if \u0026#34;XZabcdZ\u0026#34; ~~ /$regex/;    # -\u0026gt; Reconnu\nsay ~$/;                                   # -\u0026gt; abcd\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"2-6-锚点httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-6 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e锚点\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e正则表达式引擎尝试通过从左到右搜索来查找字符串中的匹配项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;Saperlipopette\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ perl /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# True \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#         ^^^^\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# (so renvoie une évaluation booléenne, donc, en fait True ou False)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但这并不总是你想要的。例如，我们可能想要匹配整个字符串，整行，或一个或多个整个单词，或者重视发生匹配的字符串的位置（例如，仅在字符串的开头） 。锚（以及后面第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-10\"\u003e2.10\u003c/a\u003e节中讨论的断言  ）允许指定匹配将在何处发生。\u003c/p\u003e\n\u003cp\u003e必须为整个正则表达式匹配正则表达式的锚点，但锚点不会消耗链中的字符。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003e\u003cstrong\u003e锚\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e意\u003c/strong\u003e\u003c/th\u003e\n\u003cth\u003e\u003cstrong\u003e注释或示例\u003c/strong\u003e\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e^\u003c/td\u003e\n\u003ctd\u003e字符串的开头\u003c/td\u003e\n\u003ctd\u003e\u0026lsquo;Saperlipopette\u0026rsquo;~~ / perl /; #   True \u0026lsquo;Soperlipopette\u0026rsquo;~~ / ^ perl /; #False   \u0026lsquo;perl\u0026rsquo;~~ / ^ perl /; #True\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e^^\u003c/td\u003e\n\u003ctd\u003e行首\u003c/td\u003e\n\u003ctd\u003e^^匹配字符串的开头或返回字符后面的内容\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$$\u003c/td\u003e\n\u003ctd\u003e行尾\u003c/td\u003e\n\u003ctd\u003e$$匹配字符串的结尾或后跟新行的字符\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026laquo;\u003c/td\u003e\n\u003ctd\u003e限于单词的左侧\u003c/td\u003e\n\u003ctd\u003e换句话说，这个词的开头。或者，更准确地说：左边的非单词字符和右边的单词字符之间的边界。\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026raquo;\u003c/td\u003e\n\u003ctd\u003e限于单词的右侧\u003c/td\u003e\n\u003ctd\u003e或者结尾。例如： \u0026lsquo;Carpe diem\u0026rsquo;~~ / arpe \u0026raquo; /; #  true\u0026rsquo;Carpe diem\u0026rsquo;~~ / die \u0026raquo; /; ＃fake\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e$\u003c/td\u003e\n\u003ctd\u003e字符串的末尾\u003c/td\u003e\n\u003ctd\u003e\u0026lsquo;Carpe diem\u0026rsquo;~~ / arpe $/; #   false \u0026lsquo;Carpe diem\u0026rsquo;~~ / diem $/; #true\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"2-7-分组和捕获httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-7 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e分组和捕获\u003c/a\u003e\u003c/h2\u003e\n\u003ch3 id=\"2-7-1-分组httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-7-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e分组\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e在常规 Raku 代码中（对于正则表达式），圆括号用于对表达式进行分组，通常用于更改执行优先级：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 9, 解析为: 1 + (4 * 2)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# 10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们可以使用相同的想法对正则表达式的元素进行分组：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ a || b c /\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# 匹配 \u0026#39;a\u0026#39; 或 \u0026#39;bc\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ ( a || b ) c /\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# 匹配 \u0026#39;ac\u0026#39; 或 \u0026#39;bc\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e相同的分组技术可以应用于量词：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ a b+ /\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# 匹配一个 \u0026#39;a\u0026#39;, 后跟一个或多个 \u0026#39;b\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ (a b)+ /\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# 匹配一个或多个 \u0026#39;ab\u0026#39; 序列\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ (a || b)+ /\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 匹配 \u0026#39;a\u0026#39; 和 \u0026#39;b\u0026#39; 的任何序列\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"c1\"\u003e# 至少一个字符 \u0026#39;b\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-7-2-捕获httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-7-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e捕获\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e圆括号不仅用于分组，它们还用于捕获，也就是说，它们将被匹配的部分存储在可重用变量的括号中，以及对象元素的形式认可。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"s\"\u003e\u0026#39;nombre 42\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026#39;nombre \u0026#39; (\\d+) /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;The number is $0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# The number is 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# 或\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;The number is $/[0]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# The number is 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果有几对括号，它们从左到右编号，从零（\u003ccode\u003e$0\u003c/code\u003e，\u003ccode\u003e$1\u003c/code\u003e，\u003ccode\u003e$2\u003c/code\u003e 等）开始，与 Perl 5 不同，其捕获从\u003ccode\u003e$1\u003c/code\u003e开始。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/(a) b (c)/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;0: $0; 1: $1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 0: a; 1: c\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e变量 \u003ccode\u003e$0\u003c/code\u003e，\u003ccode\u003e$1\u003c/code\u003e 等 实际上是捷径语法。\u003ccode\u003e$/\u003c/code\u003e 匹配对象作为一个列表，以至于 \u003ccode\u003e$0\u003c/code\u003e实际上是语法糖\u003ccode\u003e$/[0]\u003c/code\u003e ，\u003ccode\u003e$1\u003c/code\u003e 是\u003ccode\u003e$/[1]\u003c/code\u003e 等等。\u003c/p\u003e\n\u003cp\u003e强制匹配对象到列表上下文允许轻松访问所有元素：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abcdef\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/(a) b (c) (d) e (f)/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;, \u0026#39;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# a, c, d, f\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-7-3-非捕获分组httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-7-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e非捕获分组\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e圆括号提供双重功能：它们对正则表达式中的元素进行分组，并捕获括号内已匹配的内容。\u003c/p\u003e\n\u003cp\u003e为了仅保留分组行为（不捕获），我们可以使用方括号而不是圆括号：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ [a||b] (c) /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# c\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不需要捕获，那么使用非捕获组有三个优点：开发人员的意图更清晰，更容易计算你需要的捕获组，速度更快一点。\u003c/p\u003e\n\u003ch3 id=\"2-7-4-捕获编号httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-7-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e捕获编号\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e上面已经说过，捕获组从左到右编号。这在原则上是正确的，但它有点过于简化。列出以下规则以使本文档尽可能完整，但如果你发现自己经常使用它，那么最好考虑\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-7-5\"\u003e命名捕获\u003c/a\u003e（第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-7-5\"\u003e2.7.5\u003c/a\u003e节  ）或甚至\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-8\"\u003eSub - 命名规则\u003c/a\u003e（第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-8\"\u003e2.8\u003c/a\u003e节  ）。\u003c/p\u003e\n\u003cp\u003e备选分支将捕获的编号重置为0：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ (x) (y)  || (a) (.) (.) /\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# $0  $1      $0  $1  $2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/(x)(y) || (a) (.) (.)/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#                       $0  $1  $2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# b\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果备选分支的不同选项（或多或少有点复杂）具有不同数量的捕获，则具有最大捕获编号的那个选项（逻辑上）确定下一个捕获的索引。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abcd\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$chaîne\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ a [ b (.) || (x) (y) ] (.) /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#              $0     $0  $1    $2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# d\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e捕获可以嵌套，在这种情况下，它们按级别编号。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ ( a (.) (.) ) /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Outer: $0\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# Outer: abc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Inner: $0[0] and $0[1]\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Inner: b and c\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-7-5-命名捕获httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-7-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e命名捕获\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e可以给捕获命名，而不是对捕获进行编号。命名捕获的通用（有点健谈）方式是：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ $\u0026lt;my_name\u0026gt; = [ \\w+ ] /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003emy_name\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# abc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e访问命名快照 \u003ccode\u003e$\u0026lt;myname\u0026gt;\u003c/code\u003e 实际上是一个快捷方式，可以将匹配对象作为散列值访问，即\u003ccode\u003e$/{'my_name'}\u003c/code\u003e 或 \u003ccode\u003e$/\u0026lt;my_name\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e强制匹配对象在散列上下文中提供了一种访问所有命名快照的简单方法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;count=23\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ $\u0026lt;variable\u0026gt;=\\w+ \u0026#39;=\u0026#39; $\u0026lt;value\u0026gt;=\\w+ /\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;, \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «value, variable␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;, \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# OUTPUT: «23, count␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nn\"\u003ekv\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$k\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$v\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Found value \u0026#39;$v\u0026#39; with key \u0026#39;$k\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# outputs two lines: \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e#   Found value \u0026#39;count\u0026#39; with key \u0026#39;variable\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e#   Found value \u0026#39;23\u0026#39; with key \u0026#39;value\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下一节（\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-8\"\u003e子规则或命名规则\u003c/a\u003e）提供了访问命名捕获的通常更方便的方法。\u003c/p\u003e\n\u003ch2 id=\"2-8-助理规则或规则命名httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-8 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e助理规则或规则命名\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e可以将正则表达式放入命名规则中，就像你可以将代码片段放入函数（或子例程）或方法中一样。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eligne\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e*\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abc\\ndef\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;ligne\u0026gt; def/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Première ligne: \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eligne\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"nb\"\u003echomp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# Première ligne: abc\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e命名正则表达式可以使用语法my regex regexname {正则表达式的主体}声明自己，然后使用\u003c!-- raw HTML omitted --\u003e调用。此外，调用命名的regex ipso facto会创建一个具有相同名称的命名快照（上例中的$ \u003c!-- raw HTML omitted --\u003e）。\u003c/p\u003e\n\u003cp\u003e但是，如果需要，可以使用以下调用语法\u0026lt;capture_name = regexname\u0026gt;为捕获提供另一个名称 ; 然后，你可以使用符号$ \u0026lt;capture_name\u0026gt;访问捕获。我们举例说明在第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-1\"\u003e3.9.1\u003c/a\u003e节的语法MultDiv中  使用此功能\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-1\"\u003e。\u003c/a\u003e（\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-1\"\u003e角色的组成\u003c/a\u003e）。\u003c/p\u003e\n\u003cp\u003e如果你不需要捕获，则前缀\u0026lt;.name_regex\u0026gt;的点的正则表达式的名称将删除捕获。\u003c/p\u003e\n\u003cp\u003e这里是一个小全码（但仍然还相当有限）的摘录，分析文件类型的config.ini的§  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-5\"\u003e2.5\u003c/a\u003e ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eheader\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eidentifier\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;key=identifier\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;value=identifier\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003esection\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;header\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;kvpair\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$contents\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sx\"\u003eq:to/EOI/; \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e    [passwords]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        jack=password1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        joy=muchmoresecure123\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e    [quotas]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        jack=123\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        joy=42\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003eEOI\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003emy %config;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003eif $contents ~~ /\u0026lt;section\u0026gt;*/ {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e    for $\u0026lt;section\u0026gt;.list -\u0026gt; $section {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        my %section;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        for $section\u0026lt;kvpair\u0026gt;.list -\u0026gt; $p {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e            %section{ $p\u0026lt;key\u0026gt; } = ~$p\u0026lt;value\u0026gt;;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e        %config{ $section\u0026lt;header\u0026gt;[0] } = %section;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003esay %config.perl;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sx\"\u003e# OUTPUT:\u003c/span\u003e \u003cspan class=\"err\"\u003e«\u003c/span\u003e\u003cspan class=\"p\"\u003e{:\u003c/span\u003e\u003cspan class=\"n\"\u003epasswords\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e{:\u003c/span\u003e\u003cspan class=\"n\"\u003ejack\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;password1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ejoy\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;muchmoresecure123\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}),\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#           :quotas(${:jack(\u0026#34;123\u0026#34;), :joy(\u0026#34;42\u0026#34;)})}» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e命名正则表达式可以分组为语法（见第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3\"\u003e3\u003c/a\u003e节  ），并且通常需要这样做（命名正则表达式的目的正是为了构建语法）。\u003c/p\u003e\n\u003cp\u003e有预定义的子规则，或多或少对应于之前看到的字符类，例如：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;ident\u0026gt; \u003c/code\u003e ：标识符;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;upper\u0026gt;\u003c/code\u003e  ：单个大写字母;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;lower\u0026gt;\u003c/code\u003e  ：单个小写字母;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;alpha\u0026gt;\u003c/code\u003e  ：单个字母字符或带下划线的字符（对于没有带下划线字符的Unicode字母字符，请使用 \u003ccode\u003e\u0026lt;:alpha\u0026gt;\u003c/code\u003e  ;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;digit\u0026gt;\u003c/code\u003e  ：单个十进制数;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;xdigit\u0026gt;\u003c/code\u003e  ：单个十六进制数;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;print\u0026gt;\u003c/code\u003e  ：单个可打印字符;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;punct\u0026gt;\u003c/code\u003e  ：一个标点字符;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;alnum\u0026gt;\u003c/code\u003e  ：单个字母数字字符（相当于\u003ccode\u003e\u0026lt;alpha\u0026gt;\u003c/code\u003e + \u003ccode\u003e\u0026lt;digit\u0026gt;\u003c/code\u003e）;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;wb\u0026gt;\u003c/code\u003e  ：单词边界，零长度断言;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\u0026lt;space\u0026gt;\u003c/code\u003e  ：单个空格（与 \u003ccode\u003e\\s\u003c/code\u003e 相同）;\u003c/li\u003e\n\u003cli\u003e在 pattern 之前  ：在null length 之前断言，也就是说，验证一个是否处于匹配模式的位置，并且如果成功则返回零大小的已匹配对象（同样存在一个子排除离职后的图案向后）。另见第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-10\"\u003e2.10\u003c/a\u003e节）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在Synopse \u003ca href=\"http://design.raku.org/S05.html#Predefined_Subrules\"\u003eS05中\u003c/a\u003e可以找到更完整的列表。\u003c/p\u003e\n\u003cp\u003e如在下一章讨论的，名为正则表达式或子规则也可以与关键字定义的 token 或 rule（而不是 regex），其改变方式的正则表达式引擎将分析链隐式使用副词：棘轮和/或（视情况而定）：sigspace（参见下面的\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1-1\"\u003e2.9.1.1\u003c/a\u003e和\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1-2\"\u003e2.9.1.2\u003c/a\u003e节）。声明的语法如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ede\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003erègle\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 或:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003erule\u003c/span\u003e  \u003cspan class=\"n\"\u003enom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ede\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003erègle\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-9-副词httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e该副词（对应于所谓的改性剂在Perl 5 Perl的正则表达式5和包在其他语言如使用PCRE）改变工作方式正则表达式，并允许一些非常方便的快捷键重复的任务。\u003c/p\u003e\n\u003cp\u003e有两种副词：正则表达式副词适用于定义正则表达式的地方，以及匹配副词，其中模式匹配字符串。区别有时是模糊的，因为匹配和定义通常是文本近似的，但使用方法匹配的语法有助于澄清差异。\u003c/p\u003e\n\u003cp\u003e\u0026lsquo;abc\u0026rsquo;~~ /../大致相当于\u0026rsquo;abc\u0026rsquo;.match（/../），甚至可以用两个不同的行更清楚地写出来：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sr\"\u003e/../\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# définition, deux caractères quelconques\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# reconnaissance\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\u0026#39;abc\u0026#39; a au moins deux caractères\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e正则表达式副词如：i（忽略大小写，即大写和小写字母之间的区别）进入定义，而匹配副词如：重叠被添加到调用匹配：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"sr\"\u003e/:i . a/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;baA\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eoverlap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$m\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$m\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Affiche :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#     ba\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#     aA\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"2-9-1-正则表达式副词httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e正则表达式副词\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e声明正则表达式时出现的副词是正则表达式的一部分，并影响Raku编译器如何将正则表达式转换为二进制代码。\u003c/p\u003e\n\u003cp\u003e例如，副词：ignorecase或：i（忽略大小写）告诉编译器忽略大写和小写字母之间的区别。因此，\u0026lsquo;a\u0026rsquo;~~ / A /是假，而\u0026rsquo;a\u0026rsquo;~~ /：i A /被成功匹配。（有一个变体：ii或：samecase，在替换的情况下，确保替换字符串与匹配的字符串在相同的情况下。）\u003c/p\u003e\n\u003cp\u003e正则表达式的副词可以放在正则表达式语句之前或之内，并且只会影响下一个正则表达式的那部分。\u003c/p\u003e\n\u003cp\u003e这两个正则表达式是等价的：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erx:i\u003c/span\u003e\u003cspan class=\"sr\"\u003e/a/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# avant\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erx\u003c/span\u003e\u003cspan class=\"sr\"\u003e/:i a/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# à l\u0026#39;intérieur\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但这些不是：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erx\u003c/span\u003e\u003cspan class=\"sr\"\u003e/a :i b/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# insensible à la casse seulement pour b\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003erx\u003c/span\u003e\u003cspan class=\"sr\"\u003e/:i a b/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# complètement insensible à la casse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e括号和括号限制了副词的范围：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ (:i a b) c /\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# reconnaît \u0026#39;ABc\u0026#39; mais pas \u0026#39;ABC\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ [:i a b] c /\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# reconnaît \u0026#39;ABc\u0026#39; mais pas \u0026#39;ABC\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-9-1-1-副词棘轮没有回溯httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-1-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词“棘轮”：没有回溯\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e副词：棘轮或：r告诉正则表达式引擎不要返回（回溯）。英语单词棘轮指非回捕（如棘轮扳手），机械系统，防止设备回去（并迫使从而隐含前进）。\u003c/p\u003e\n\u003cp\u003e如果没有这个副词，正则表达式的不同部分将尝试不同的方式来匹配字符串以允许正则表达式的其他部分匹配。例如，使用正则表达式\u0026rsquo;abc\u0026rsquo;~~ / w + ./，\\ w +部分以消耗整个字符串abc开始，然后在“  。 以下是。然后有退格（或返回跟踪），也就是说\\ w +放弃最后一个字符并且只识别ab，这允许“  。 “成功确认Ç。删除一个字符（或几个）以开始新的匹配尝试的过程称为回溯（有时回溯）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ \\w+ . /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# Vrai\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ :r \\w+ . /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# Faux\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用这种棘轮可以是优化，因为回溯通常是昂贵的。但兴趣在于，没有回溯的匹配与人类分析他们阅读的文本的方式密切相关。使用正则表达式我的正则表达式标识符{\\ w +}和我的正则表达式关键字{if | 别的| endif}，我们直观地等待标识符吸收完整的单词，而不需要恢复该单词的结尾以满足以下规则。例如，没有人希望将单词reason解析为单词标识符，后跟if关键字 ; 我们等待而不是因为它被解析为一个标识符，如果解析器等待该单词，则它会失败，而不是解析输入数据与预期的不同。\u003c/p\u003e\n\u003cp\u003e我们可以认为回溯一般期望行为分析低级别的一个字符，一个字符串，但研究棘爪（棘轮）通常更符合我们想要做的用于结构化文本的词法或句法分析。\u003c/p\u003e\n\u003cp\u003e由于棘轮的行为是如此经常在词法分析器（可取的词法分析器）和句法（解析器），存在一个正则表达式棘轮一个快捷方式：使用所述关键字设置的分则令牌而不是正则表达式  ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003etruc\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e....\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# raccourci pour :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003etruc\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003er\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用关键字规则的子规则（参见  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1-2\"\u003e§2.9.1.2。\u003c/a\u003e）也会起到防止回溯的作用。\u003c/p\u003e\n\u003cp\u003e这些规则的存在令牌和规则的副词：棘轮还算是很少明确使用：它通常最好使用隐含定义子规则作为标记或规则。\u003c/p\u003e\n\u003ch4 id=\"2-9-1-2-副词sigspace显着的空格httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-1-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词“sigspace”（显着的空格）\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e副词：sigspace其中：s在正则表达式中创建重要的空格（到目前为止，它们不再被忽略）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;J\u0026#39;ai utilisé Photoshop®\u0026#34;\u003c/span\u003e  \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003em:i\u003c/span\u003e\u003cspan class=\"sr\"\u003e/   photo shop /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Vrai\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;J\u0026#39;ai utilisé photo shop\u0026#34;\u003c/span\u003e  \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003em:i:s\u003c/span\u003e\u003cspan class=\"sr\"\u003e/ photo shop /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Vrai\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;J\u0026#39;ai utilisé Photoshop®\u0026#34;\u003c/span\u003e  \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003em:i:s\u003c/span\u003e\u003cspan class=\"sr\"\u003e/ photo shop /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Faux\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003em：s / photo shop /好像我们写了m / photo \u0026lt;.ws\u0026gt; shop \u0026lt;.ws\u0026gt; /。默认情况下，\u0026lt;。ws\u0026gt;确保单词是分开的，因此“a b”将被\u0026lt;.ws\u0026gt;识别，而不是“ab”。\u003c/p\u003e\n\u003cp\u003e正则表达式中的空格根据前面的空格转换为\u0026lt;.ws\u0026gt;或不转换为\u0026lt;.ws\u0026gt;。在上面的示例中，正则表达式开头的空格不会更改为\u0026lt;.ws\u0026gt;，而是字符后面的空格。通常，规则是如果术语可以匹配某些内容，则该术语后面的空格将转换为\u0026lt;.ws\u0026gt;。\u003c/p\u003e\n\u003cp\u003e另外，如果结束之后的空间中，但在此之前量词（+，*或？），\u0026lt;.WS\u0026gt;将这个术语的每个匹配后匹配，从而使富+变为[富\u0026lt;。 ws\u0026gt;] +。另一方面，量化器之后的空间表现得像正常有意义的空间，例如“foo +”变为foo + \u0026lt;.ws\u0026gt;。\u003c/p\u003e\n\u003cp\u003e最后，这段代码：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erx\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e^^\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Pas de sigspace après ceci\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;.assertion_puis_ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ecaractères_puis_ws\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ecaractères_séparés_par_ws\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003edes\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;trucs\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"vg\"\u003e$$\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$toto\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pas de ws après ceci\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$toto\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e变为：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erx\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e^^\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Pas d\u0026#39;espace après ceci\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;.assertion_puis_ws\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ecaractères_puis_ws\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"n\"\u003ecaractères_séparés_par_ws\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003edes\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;trucs\u0026#34;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"vg\"\u003e$$\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$toto\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;pas de ws après ceci\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$toto\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.ws\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e就像使用token关键字声明的正则表达式隐含adverb ：ratchet一样，使用关键字rule声明的正则表达式意味着副词：ratchet和：sigspace。\u003c/p\u003e\n\u003cp\u003e语法提供了一种简单的方法来重新定义\u0026lt;.ws\u0026gt;将匹配的内容：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eDemo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;!ww\u0026gt;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# reconnaissance si pas à l\u0026#39;intérieur d\u0026#39;un mot\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# reconnaît seulement les espaces horizontaux\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# appelée par Demo.parse;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"n\"\u003eDemo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;ab.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# Faux (espace requis entre a et b)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"n\"\u003eDemo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a b.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# Vrai\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"n\"\u003eDemo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\\tb .\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# Vrai\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"n\"\u003eDemo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;a\\tb\\n.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# Faux (\\n est un espace vertical)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在解析某些类型的空白（例如，垂直空间）很重要的文件格式时，通常需要重新定义ws。\u003c/p\u003e\n\u003ch4 id=\"2-9-1-3-和perl-5-兼容的副词httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-1-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e和Perl 5 兼容的副词\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e副词 \u003ccode\u003e:P5\u003c/code\u003e 和 \u003ccode\u003e:Perl5\u003c/code\u003e 允许你在 Raku 程序中使用 Perl 5 正则表达式语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003enext\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ligne\u003c/span\u003e \u003cspan class=\"o\"\u003e=~\u003c/span\u003e \u003cspan class=\"sr\"\u003em/[aeiou]/\u003c/span\u003e   \u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# Classe de caractères Perl 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003enext\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ligne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003em:P5\u003c/span\u003e\u003cspan class=\"sr\"\u003e/[aeiou]/\u003c/span\u003e   \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Raku, avec l\u0026#39;adverbe P5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003enext\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ligne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003em:Perl5\u003c/span\u003e\u003cspan class=\"sr\"\u003e/[aeiou]/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Raku, avec l\u0026#39;adverbe Perl5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003enext\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ligne\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003em/  \u0026lt;[aeiou]\u0026gt; /\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Raku, nouvelle syntaxe des\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                    \u003cspan class=\"c1\"\u003e# classes de caractères\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这可用于迁移方案或那些还没有习惯 Raku 正则表达式的情况，但我们没有更多的是住在我们对这种可能性在本教程旨在介绍Perl的正则表达式6的语法。\u003c/p\u003e\n\u003ch3 id=\"2-9-2-认可副词httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e认可副词\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e与正则表达式副词（第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1\"\u003e2.9.1\u003c/a\u003e节  ）不同，它与正则表达式的声明相关，只有当你想匹配字符串和正则表达式时，匹配副词才有意义。\u003c/p\u003e\n\u003cp\u003e它们永远不会出现在正则表达式中，但只能出现在它之外，作为识别m / \u0026hellip; /的一部分，或者作为匹配方法的参数。\u003c/p\u003e\n\u003ch4 id=\"2-9-2-1-副词continue匹配的起始位置httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-2-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词“continue”（匹配的起始位置）\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e副词 \u003ccode\u003e:continue\u003c/code\u003e 或 \u003ccode\u003e:c\u003c/code\u003e 接受一个参数：正则表达式开始搜索的位置。默认情况下，搜索从字符串的开头开始，但是副词 \u003ccode\u003e:c\u003c/code\u003e 会修改此行为。如果没有指定位置，则搜索将从位置0开始，除非定义了匹配对象 \u003ccode\u003e$\\\u003c/code\u003e，在这种情况下，搜索将从位置 \u003ccode\u003e$/\u003c/code\u003e（在前一次匹配结束后的位置）开始。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;a1xa2\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"sr\"\u003em/a./\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# a1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"n\"\u003em:c\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e/a./\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# a2 (搜索从x的位置开始)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-9-2-2-副词exhaustive所有匹配httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-2-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词“exhaustive”（所有匹配）\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e要查找正则表达式的所有可能匹配 - 包括重叠的那些 - 以及从相同位置开始的多个匹配，请使用副词 \u003ccode\u003e:exhaustive\u003c/code\u003e 或 \u003ccode\u003e:ex\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abracadabra\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003em:exhaustive\u003c/span\u003e\u003cspan class=\"sr\"\u003e/ a .* a /\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面的代码显示以下结果：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eabracadabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eabracada\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eabraca\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"n\"\u003eacadabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"n\"\u003eacada\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"n\"\u003eaca\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"n\"\u003eadabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"n\"\u003eada\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003eabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-9-2-3-副词global所有匹配httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-2-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词“global”（所有匹配）\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e不是搜索单个匹配并返回匹配对象，而是可以搜索每个匹配而不重叠，并使用副词 \u003ccode\u003e:global\u003c/code\u003e 或 \u003ccode\u003e:g\u003c/code\u003e 将结果作为列表返回 ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;Trois mots ici\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@matches\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003em:global\u003c/span\u003e\u003cspan class=\"sr\"\u003e/\\w+/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@matches\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eelems\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e@matches\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# ici\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-9-2-4-副词poshttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-2-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词“pos”\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e副词 \u003ccode\u003e:pos\u003c/code\u003e 或 \u003ccode\u003e:p\u003c/code\u003e 锚点匹配字符串中的特定位置：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abcdef\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$trouvé\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003em:pos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e/.*/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$trouvé\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$trouvé\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# cdef\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"2-9-2-5-副词overlap带重叠httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-9-2-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e副词“overlap”（带重叠）\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e要获得多个匹配，包括重叠匹配，但每个起始位置只有一个（最长），可以使用副词 \u003ccode\u003e:overlap\u003c/code\u003e 或 \u003ccode\u003e:ov\u003c/code\u003e ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abracadabra\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003em:overlap\u003c/span\u003e\u003cspan class=\"sr\"\u003e/ a .* a /\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个显示：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eabracadabra\n   acadabra\n     adabra\n       abra\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"2-10-向前查看和向后查看断言httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-10 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e向前查看和向后查看（断言）\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e断言可以搜索向前或向后匹配，但不会像锚点那样消耗目标字符串（保持在相同位置）。\u003c/p\u003e\n\u003ch3 id=\"2-10-1-before-断言httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-10-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003ebefore 断言\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e要检查模式之前，另一模式出现，它可以使用 before 断言，在下面的形式：\u003ccode\u003e\u0026lt;?before\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e因此，要搜索紧跟在字符串 titi 之后的字符串 foo，我们可以使用正则表达式 \u003ccode\u003erx {foo \u0026lt;?before titi\u0026gt;}\u003c/code\u003e，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;tototiti\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003etoto\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"n\"\u003ebefore\u003c/span\u003e \u003cspan class=\"n\"\u003etiti\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# -\u0026gt; toto\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e相反，如果要搜索未紧跟其他模式的模式，则必须在断言以下形式之前使用否定： \u003ccode\u003e\u0026lt;!before pattern\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e例如，要查找不紧跟字符串titi的字符串foo，我们可以使用正则表达式 \u003ccode\u003erx {foo \u0026lt;!before titi\u0026gt;}\u003c/code\u003e  ; 使用上面示例的字符串，此正则表达式将失败，因为foo后跟titi。\u003c/p\u003e\n\u003ch3 id=\"2-10-2-after-断言httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e2-10-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eafter 断言\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e要检查模式是否出现在另一个模式之后，我们可以使用以下形式之后的断言 ：\u003ccode\u003e\u0026lt;?after pattern\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e例如，要找到紧跟在字符串titi之前的字符串foo，我们可以使用正则表达式 \u003ccode\u003erx {foo \u0026lt;?after titi\u0026gt;}\u003c/code\u003e，如下所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;tititoto\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"n\"\u003eafter\u003c/span\u003e \u003cspan class=\"n\"\u003etiti\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003etoto\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# -\u0026gt; toto\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e相反，如果要搜索不是紧接其他模式的模式，则必须使用以下形式的负数： \u003ccode\u003e\u0026lt;!after pattern\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e例如，要搜索的字符串FOO没有紧跟字符串蒂蒂，你可以使用正则表达式 \u003ccode\u003erx {\u0026lt;!after\u0026gt; foo}\u003c/code\u003e ，其失败，上面的例子中的字符串（这是我们的目标）。\u003c/p\u003e\n\u003ch1 id=\"3-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3. \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eGrammar\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e语法是一种强大的工具，用于将文本分解为单个元素，并且通常返回通过解释该文本而创建的数据结构。\u003c/p\u003e\n\u003cp\u003e例如，使用Raku语法解释和执行Raku程序。\u003c/p\u003e\n\u003cp\u003e当前Raku用户的一个更实用的范围示例是Raku \u003ca href=\"https://github.com/moritz/json\"\u003eJSON::Tiny\u003c/a\u003e模块，它可以反序列化任何有效的JSON文件。执行此反序列化的代码用不到100行简单代码编写，易于扩展。我们在下面描述（§3.6  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-6\"\u003e。\u003c/a\u003e）这种语法的详细构造能够分析JSON。\u003c/p\u003e\n\u003cp\u003e如果你不喜欢在学校学习语法，不要逃避。Raku语法实际上是一种对正则表达式进行分组的简单方法，就像类可以将普通代码方法组合在一起一样（而且这个类比远比人们乍看之下想象的要多得多，因为它是稍后会看到）。\u003c/p\u003e\n\u003ch2 id=\"3-1-该砖以建立一个语法httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e该“砖”，以建立一个语法\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e上面已经看到了编写语法所需要知道和理解的大部分内容，特别是在第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-8\"\u003e2.8\u003c/a\u003e 章中\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-8\"\u003e。\u003c/a\u003e\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-8\"\u003e子规则或命名规则\u003c/a\u003e，以及子章节\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1-1\"\u003e2.9.1.1。\u003c/a\u003e和\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-9-1-2\"\u003e2.9.1.2。\u003c/a\u003e以上。这些子规则或命名规则是语法的基本构建块。实际上，语法的主要目的之一是将命名的子表达或正则表达式（正则表达式，标记和规则类型）分组到明确定义的名称空间中，以避免标识符名称的冲突。在代码中的其他地方使用其他正则表达式。\u003c/p\u003e\n\u003cp\u003e回想一下， 正则表达式，标记和规则是非常相似的实体，用于以类似于函数或方法的定义的形式声明命名的正则表达式。在本章中，我们现在将它们统称为规则，而不管用于声明它们的关键字。它们声明如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003ema_regex\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# regex ordinaire\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003emon_token\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# regex avec adverbe :ratchet implicite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003ema_règle\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# regex avec :ratchet et :sigspace implicites\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e记录：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e关键字regex表示普通的正则表达式;\u003c/li\u003e\n\u003cli\u003e关键字令牌隐含了副词：棘轮（“棘轮”），也就是说这种规则不会回溯（没有回溯）;\u003c/li\u003e\n\u003cli\u003e关键字规则隐式指示副词：棘轮（无后退空间）和：sigspace（模式的空格不被忽略）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e以下是我们定义第一个数字规则的示例，并使用它来定义第二个十进制数  ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003echiffres\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003edécimal\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chiffres\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\.\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chiffres\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; Cet objet coûte 13.45 euros\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;décimal\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -\u0026gt; True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# (so renvoie une évaluation booléenne, donc, en fait True ou False)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                              \u003cspan class=\"c1\"\u003e# -\u0026gt; 13.45\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们在上面看到规则可以调用另一个规则，就像函数可以调用另一个函数一样。规则也可以递归调用自身。这个关键机制是Raku正则表达式的核心功能及其创建语法的能力。\u003c/p\u003e\n\u003cp\u003e令牌规则不会回滚：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003elettres\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eabc\u003c/span\u003e \u003cspan class=\"o\"\u003e.+\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcdefg\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;lettres\u0026gt;/\u003c/span\u003e \u003cspan class=\"p\"\u003e??\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Réussit\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Échoue\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -\u0026gt;  Échoue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这条规则在这里失败，因为子模式。+，凭借其贪婪的量词“  +  ”消费链中的所有终端，包括最后一个字母“G”，所以该规则不再能匹配“G “最后已经消耗：因为她是不允许回去砸” G“，为了取得成功，离开它的处置模式的最后一个原子，它失败。\u003c/p\u003e\n\u003cp\u003e使用非贪婪（或节俭）量化器，修改后的字母规则成功：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003elettres\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eabc\u003c/span\u003e \u003cspan class=\"o\"\u003e.+\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcdefg\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;lettres\u0026gt;/\u003c/span\u003e \u003cspan class=\"p\"\u003e??\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Réussit\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Échoue\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -\u0026gt;  Réussit\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用相同的定义，类型规则规则将失败：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003erule\u003c/span\u003e  \u003cspan class=\"n\"\u003elettres\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eabc\u003c/span\u003e \u003cspan class=\"o\"\u003e.+\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eg\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;abcdefg\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;lettres\u0026gt;/\u003c/span\u003e \u003cspan class=\"p\"\u003e??\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Réussit\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Échoue\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -\u0026gt;  Échoue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因为模式中的空格不再被忽略（并且在链中找不到）。\u003c/p\u003e\n\u003cp\u003e三种命名规则的名称，正则表达式，标记和规则，反映了这样一种观点，即在一种非常通用和模糊的方式中，正则表达式是关于通常所期望的。一个正则表达式（低级别分析，逐个字符），而一个令牌通常用于词法分析（将输入文本划分为“单词”或单个词位），并且规则将更频繁分析句法（分析lexemes之间的关系，可能取决于上下文）。这种理论上的任务划分受到许多例外的限制，并且不得在教条上遵循，但在决定不同类型的规则时，要牢记这一点。\u003c/p\u003e\n\u003ch2 id=\"3-2-创建-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e创建 Grammar\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e语法创建了一个合适的命名空间，并引入了关键字语法。\u003c/p\u003e\n\u003ch3 id=\"3-2-1-语法的语法定义httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-2-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e语法的语法定义\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e就像一个类可以对命名的动作或方法进行分组：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003eIdentité\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003enom\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Nom = $!nom\u0026#34;\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eâge\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Âge = $!âge\u0026#34;\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eadresse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Adr = $!adresse\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003edesc\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eprint\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;.\u003c/span\u003e\u003cspan class=\"n\"\u003enom\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e     \u003cspan class=\"s\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"o\"\u003e\u0026amp;.\u003c/span\u003e\u003cspan class=\"n\"\u003eâge\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e     \u003cspan class=\"s\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"o\"\u003e\u0026amp;.\u003c/span\u003e\u003cspan class=\"n\"\u003eadresse\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# etc.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一个名为规则的语法组：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eIdentité\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003enom\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eNom\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# chaîne de caractères quelconques\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                   \u003cspan class=\"c1\"\u003e# autres que des retours à la ligne\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eadresse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eAdr\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# idem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eâge\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eAge\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# des chiffres\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003edesc\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;nom\u0026gt;\u003c/span\u003e     \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;âge\u0026gt;\u003c/span\u003e     \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;adresse\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# etc.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里使用其他地方定义的其他规则（名称，年龄和地址）来定义desc规则。这使得逐渐建立越来越高的抽象水平成为可能。\u003c/p\u003e\n\u003cp\u003e这将创建一个语法类型对象，其类型表示正在分析的语言，并且可以以扩展语言的形式从中派生其他语法。\u003c/p\u003e\n\u003cp\u003e然后，新对象作为调用TOP方法（正则表达式，标记或规则）传递。这个默认的TOP方法可以被另一个传递给命名参数的规则替换：rule，这对于测试语法尤其有用。\u003c/p\u003e\n\u003cp\u003e请注意，不再需要使用my运算符声明规则，因为语法创建了必要的命名空间和词法范围。\u003c/p\u003e\n\u003ch3 id=\"3-2-2-grammar-的继承httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-2-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eGrammar 的继承\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e语法可以从另一个（父）语法继承，就像一个类可以从另一个类继承一样：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003etexte\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;salutation\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ecorps\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;ligne\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;fin\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003esalutation\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eSalut\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eBonjour\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003edest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\\\u003c/span\u003e\u003cspan class=\"n\"\u003eS\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003efin\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eà\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;@\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"n\"\u003eplus\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eauteur\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=.+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eligne\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eMessageFormel\u003c/span\u003e \u003cspan class=\"n\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eMessage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003esalutation\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eCher\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eChère\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003edest\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\\\u003c/span\u003e\u003cspan class=\"n\"\u003eS\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003efin\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eBien\u003c/span\u003e \u003cspan class=\"n\"\u003ecordialement\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eauteur\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=.+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里，MessageFormel语法继承父语法消息。与类的方法一样，规则继承自父语法（和多态），因此无需重新定义不更改的文本和行规则。我们只重载改变的规则。\u003c/p\u003e\n\u003cp\u003e所有语法都是从语法类派生的，语法类除其他外提供了所有语法共有的方法，如.parse和.fileparse，如下所述。\u003c/p\u003e\n\u003cp\u003e语法从其他语法继承的能力是一种极其强大的工具，是允许Raku语言可扩展性的重要因素（见第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9\"\u003e3.9\u003c/a\u003e节  ）。\u003c/p\u003e\n\u003ch2 id=\"3-3-使用-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e使用 Grammar\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e可以通过在该语法上调用.parse方法并可选地将操作对象作为参数传递来解析带有语法的字符串（参见下面的第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-4\"\u003e3.4\u003c/a\u003e节  ）。同样，.parsefile方法用于解析文件。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eMaGrammaire.parse($chaîne, :actions($objet-action))\nMaGrammar.parsefile($nom-fic, :actions($objet-action))\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e.parse和.parsefile方法锚定在文本的开头和结尾，如果未到达文本末尾则失败。\u003c/p\u003e\n\u003cp\u003e原则上，有必要使用语法来执行文本的实际词法和句法分析。要提取复杂数据，建议将操作对象与语法结合使用。\u003c/p\u003e\n\u003ch2 id=\"3-4-类和对象的股票httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e类和对象的股票\u003c/a\u003e\u003c/h2\u003e\n\u003ch3 id=\"3-4-1-在确认期间执行代码httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-4-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e在确认期间执行代码\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e当语法成功解析文本时，它返回一个匹配对象的语法树。这棵树越深（并且它通常变得非常快），并且这棵树中的分支越多，探索这棵树以找到正在寻找的信息就越困难。\u003c/p\u003e\n\u003cp\u003e为了避免必须对匹配树进行这种探索，可以提供一个行动对象。在对命名的语法规则进行每次成功分析之后，它会尝试调用此操作对象的方法，该方法具有与规则相同的名称，方法是将其作为刚刚匹配的对象的位置参数提供创建。此方法（如果存在）可以特别用于构建抽象语法树（Astract语法树或AST）或执行将来可能需要的各种其他事物。如果此方法不存在，则忽略此步骤。\u003c/p\u003e\n\u003cp\u003e这是一个极简主义，有点人为的语法和动作一起工作的例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ev6\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eGrammaireTest\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003eActionsTest\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eActionsTest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eGrammaireTest\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;40\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# -\u0026gt; ｢40｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# -\u0026gt; 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eActiontest类的$ action对象被实例化，并在调用.parse方法时作为参数传递。当TOP规则匹配出该参数时，语法通过将匹配的对象作为参数传递给它来自动调用TOP方法。\u003c/p\u003e\n\u003cp\u003e类Match的make方法使用其参数提供结构$ / .Med（用户决定其内容，但通常是一个抽象的语法树）。\u003c/p\u003e\n\u003cp\u003e为了证明参数是一个公认的对象，该示例使用 \u003ccode\u003e$/\u003c/code\u003e 作为传递给action方法的参数名称，但这只是一个方便的约定，没有任何内在的必要条件在这里。通过认可的 \u003ccode\u003e$\u003c/code\u003e 也会起作用。（但请注意，使用 \u003ccode\u003e$/\u003c/code\u003e 可以提供快捷方式 \u003ccode\u003e$\u0026lt;capture\u0026gt;\u003c/code\u003e 而不是 \u003ccode\u003e$/\u0026lt;capture\u0026gt;\u003c/code\u003e。）\u003c/p\u003e\n\u003cp\u003e这是一个稍微更具体的例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ev6\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003ePairesClésValeurs\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;paire\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003epaire\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;clé=.identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;valeur=.identifiant\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eidentifiant\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003ePairesClésValeursActions\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eidentifiant\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e                           \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003epaire\u003c/span\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eclé\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evaleur\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003epaire\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"err\"\u003e»\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$res\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePairesClésValeurs\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sx\"\u003eq:to/EOI/, :\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ePairesClésValeursActions\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ephase\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ePerl\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eEOI\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@$res\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$p\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Clef : $p.clé()\\tValeur : $p.valeur()\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中显示以下结果：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eClef : phase      Valeur : b\nClef : points     Valeur : 42\nClef : Perl       Valeur : 6\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e规则对，其中分析一对由等于字符分隔的标识符，提供的别名规则的两个呼叫标识符来区分渔获的名称和使它们可更容易地且直观地。相应的action-method构造一个Pair类型的对象，并使用已匹配的子对象的属性.made。因此（以及TOP -action方法），它利用了子匹配的动作方法在对应于边界正则表达式之前被调用的事实。因此，以所需顺序调用动作方法。\u003c/p\u003e\n\u003cp\u003eTOP动作方法简单地收集由偶数规则的多个匹配生成的所有对象，并将它们作为列表返回。\u003c/p\u003e\n\u003cp\u003e另请注意，PairsKeyActionList在此作为类型对象（而不是对象的实例）传递给.parse方法，这是可能的，因为没有一个action-methods使用属性（仅在正确初始化的实例中可用）。\u003c/p\u003e\n\u003cp\u003e在某些情况下，可能需要将状态保留在属性中。在这种情况下，它是一个必须传递给.parse方法的实例化对象。\u003c/p\u003e\n\u003cp\u003eaction-methods还可用于调试顽固语法，例如通过显示解析的中间状态。但是动作方法的基本作用是将简单语法转换为真正的解析工具，生成一个抽象语法树，Perl解释器（或其他工具）可以使用它来生成，例如可执行代码。\u003c/p\u003e\n\u003ch3 id=\"3-4-2-在语法中执行代码的其他方法httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-4-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e在语法中执行代码的其他方法\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e在上面的例子中，action-methods是在一个与语法本身不同的动作中定义的，这通常是任何扩展的语法。\u003c/p\u003e\n\u003cp\u003e但是，对于简单的情况，也可以在语法本身中定义方法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eToto\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003etiti\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;.configurer\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eblah\u003c/span\u003e \u003cspan class=\"n\"\u003eblah\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003econfigurer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# faire quelque chose ici\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e是的，语法可以定义方法（他们甚至可以使用角色，我们将在第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-1\"\u003e3.9.1\u003c/a\u003e节中详细介绍），它们实际上是类\u0026hellip;\u0026hellip;\u003c/p\u003e\n\u003cp\u003e通过在大括号之间插入代码，也可以在规则中执行代码：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003etoto\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003etiti\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eblah\u003c/span\u003e \u003cspan class=\"n\"\u003eblah\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Je suis arrivé ici\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003eblah\u003c/span\u003e \u003cspan class=\"n\"\u003eblah\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果匹配出代码块之前的模式部分，则立即执行该块。\u003c/p\u003e\n\u003cp\u003e本工程以真理的任何正则表达式（名为或非规则，甚至外的语法），这可以用于调试正则表达式的例子帮助（见 §  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-6\"\u003e4.6。\u003c/a\u003e \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-6\"\u003e调试Perl的正则表达式语法或6\u003c/a\u003e）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003elettres\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;reconnu ab\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e  \u003cspan class=\"s\"\u003e\u0026#34;abc\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;lettres\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -\u0026gt; reconnu ab / False\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# la regex ci-dessus a reconnu ab et l\u0026#39;affiche et n\u0026#39;a échoué qu\u0026#39;ensuite\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e  \u003cspan class=\"s\"\u003e\u0026#34;abcde\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;lettres\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# -\u0026gt; reconnu ab / True - ici, succès\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是要小心：如果正则表达式是回溯，则可能会多次执行代码块：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;aaa\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/ a { say \u0026#34;Bonjour\u0026#34; } b /\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个显示：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eBonjour\nBonjour\nBonjour\nFalse\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"3-5-验证perl模块名称的-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e验证Perl模块名称的 Grammar\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e此示例的目的是验证Perl模块名称。\u003c/p\u003e\n\u003cp\u003ePerl模块的名称可以分解为由冒号对分隔的标识符：“::”，例如\u003ca href=\"http://search.cpan.org/~pevans/Scalar-List-Utils-1.42/lib/List/Util.pm\"\u003eList::Util\u003c/a\u003e或\u003ca href=\"http://search.cpan.org/~rehsack/List-MoreUtils-0.413/lib/List/MoreUtils.pm\"\u003eList::MoreUtils\u003c/a\u003e（这里提供的模块名称示例是模块Perl 5）。标识符必须以字母字符（az）或带下划线的字符开头，后跟零个，一个或多个字母数字字符。\u003c/p\u003e\n\u003cp\u003e到目前为止没有什么非常复杂，但这有点复杂，因为有些模块有一个标识符（\u003ca href=\"http://search.cpan.org/~mjd/Memoize-1.01/Memoize.pm\"\u003eMemoize\u003c/a\u003e），因此没有冒号，而其他模块可能有“扩展”名称：\u003ca href=\"http://search.cpan.org/dist/Regexp-Common-Email-Address/lib/Regexp/Common/Email/Address.pm\"\u003eRegexp::Common::Email::Address\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e他不是一个很好的语法候选人吗？\u003c/p\u003e\n\u003ch3 id=\"3-5-1-验证-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-5-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e验证 Grammar\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e例如，足以定义保证上面的命名规则和分隔符规则的标识符规则，并在语法中正确地组合它们。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;séparateur\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eidentifiant\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;[A..Za..z_]\u0026gt;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# \u0026#39;mot\u0026#39; commençant par un caractère \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                           \u003cspan class=\"c1\"\u003e# alphabétique ou un caractère souligné \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;[A..Za..z0..9_]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 0 ou plusieurs caractères alphanumériques\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eséparateur\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;::\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# paire de caractères deux-points\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们现在可以使用一些有效的模块名来测试这个语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e  \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eSuper:Nouveau::Module\u003c/span\u003e \u003cspan class=\"n\"\u003eSuper\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eNouveau\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nn\"\u003eSuper::\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"nn\"\u003eouveau::\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e \u003cspan class=\"nn\"\u003eSuper::Nouveau::\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nom\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$nom\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;nom\\t\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"p\"\u003e??\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Nom de module invalide\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个显示：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eSuper:Nouveau::Module   Nom de module invalide\nSuper.Nouveau.Module    Nom de module invalide\nSuper::6ouveau::Module  Nom de module invalide\nSuper::Nouveau::Module  ｢Super::Nouveau::Module｣\n identifiant =\u0026gt; ｢Super｣\n séparateur =\u0026gt; ｢::｣\n identifiant =\u0026gt; ｢Nouveau｣\n séparateur =\u0026gt; ｢::｣\n identifiant =\u0026gt; ｢Module｣\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e只匹配出有效的模块名称，其他三个名称被正确拒绝。\u003c/p\u003e\n\u003cp\u003e有时，通过用短划线替换色列对来汇总模块名称。例如，官方名称是\u003ca href=\"http://search.cpan.org/dist/Regexp-Common-Email-Address/lib/Regexp/Common/Email/Address.pm\"\u003eRegexp::Common::Email::Address\u003c/a\u003e，也可以是\u003ca href=\"http://search.cpan.org/~cwest/Regexp-Common-Email-Address/\"\u003eRegexp-Common-Email-Address\u003c/a\u003e。如果想要验证第二次写作，只需修改分隔符以便它也授权破折号：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eséparateur\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;::\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e\\-\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# deux car. deux-points ou tiret\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e通过使用名称“Super-New-Module”测试语法，我们获得：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eSuper-Nouveau-Module  ｢Super-Nouveau-Module｣\n identifiant =\u0026gt; ｢Super｣\n séparateur =\u0026gt; ｢-｣\n identifiant =\u0026gt; ｢Nouveau｣\n séparateur =\u0026gt; ｢-｣\n identifiant =\u0026gt; ｢Module｣\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e修改分隔符规则就足以使修改扩展到所有语法，直到规则TOP。\u003c/p\u003e\n\u003ch3 id=\"3-5-2-添加动作对象httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-5-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e添加动作对象\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e上述语法可以确定Perl模块名称是否有效。\u003c/p\u003e\n\u003cp\u003e我们现在想要在模块名称太长（超过5个标识符）时添加警告; 在这种情况下，模块的名称仍然有效，但建议模块的作者尝试选择较短的名称。\u003c/p\u003e\n\u003cp\u003e例如，只需添加如下定义的 Valide-Name-Module-Actions操作类：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eActions\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eidentifiant\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003eelems\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003ewarn\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Nom de module très long! Peut-être le réduire ?\\n\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该类的定义并不特殊，它是一个普通的Raku类。重要的特征是这里定义的唯一方法与其中一个语法规则具有相同的名称（在本例中，语法中的输入规则为TOP）。如果标识符的数量超过5，将发送警告，但这不会阻止验证模块的名称。\u003c/p\u003e\n\u003cp\u003e调用语法的语法更改如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$nom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eActions\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果我们使用模块名称“ Super::New::Module  ”（或“  Super-New-Module  ”）调用语法，结果与之前相同  ，这是令人放心的。\u003c/p\u003e\n\u003cp\u003e但是使用Mary Poppins的模块名称：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nom\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Mon::Module::Super::Cali::Fragi::Listi::Cexpi::Delilicieux\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$nom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eActions\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们收到警告：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; raku grammaire_nom_module.pl\nNom de module très long! Peut-être le réduire ?\n  in method TOP at raku_grammaire_module.pl:15\n｢Mon::Module::Super::Cali::Fragi::Listi::Cexpi::Delilicieux｣\n identifiant =\u0026gt; ｢Mon｣\n séparateur =\u0026gt; ｢::｣\n identifiant =\u0026gt; ｢Module｣\n séparateur =\u0026gt; ｢::｣\n identifiant =\u0026gt; ｢Super｣\n(...)\n identifiant =\u0026gt; ｢Delilicieux｣\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e然后显示已匹配的对象。\u003c/p\u003e\n\u003cp\u003e请注意，语法调用直接作为操作类的参数传递给上面。如  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-4-1\"\u003e3.4.1中所述\u003c/a\u003e，如有必要，可以传递此类的实例化对象：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nom\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Mon::Module::Super::Cali::Fragi::Listi::Cexpi::Delilicieux\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eActions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"n\"\u003eValide\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eNom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eModule\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$nom\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个显示：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eraku grammaire_nom_module.pl\nNom de module très long! Peut-être le réduire ?\n  in method TOP at raku_grammaire_module.pl:15\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这个验证模块名称的例子非常松散地基于 David Farrell的文章\u003ca href=\"http://perltricks.com/article/144/2015/1/13/How-to-create-a-grammar-in-Perl-6\"\u003e如何在Raku中创建语法\u003c/a\u003e 。\u003c/p\u003e\n\u003ch2 id=\"3-6-分析json的-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e分析JSON的 Grammar\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eJavaScript Object Notation（JSON ）是从JavaScript对象表示法派生的文本数据格式。他成为（连同其他如XML和YAML）通常用于序列化的数据结构，例如允许平台或不同语言之间的交流，或将它们存储持久标准（例如，在文件中）。\u003c/p\u003e\n\u003ch3 id=\"3-6-1-json文档的结构httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-1\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e JSON文档的结构\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e\u003ca href=\"https://fr.wikipedia.org/wiki/JavaScript_Object_Notation\"\u003eJSON\u003c/a\u003e格式具有简单的优点。JSON文档包括两种类型的结构实体：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对象或名称/值对列表（基本上对应于JavaScript对象或Perl散列表）;\u003c/li\u003e\n\u003cli\u003e有序的值列表（表）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e值本身可以是（递归）对象或数组，如上所述，或基本通用数据：布尔值（true或false），数字，字符串或null（空值或无定义值） 。\u003c/p\u003e\n\u003cp\u003e字符串是包含整数（可能为零）unicode字符的序列。数字的格式为带符号的小数，可能包含小数或高功率部分（E表示法）。JSON不区分整数和浮点数。\u003c/p\u003e\n\u003ch3 id=\"3-6-2-示例json文档httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e示例JSON文档\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e作为本教程的一部分，我们将使用以下JSON文档来检查语法的工作原理：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;prénom\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Martine\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;nom\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Unetelle\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;enVie\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;âge\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e28\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;sexe\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;F\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;adresse\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;NumRue\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;21 rue Pasteur\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;Ville\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Lyon\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;CodePostal\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;F-69000\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;NumérosTéléphone\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;domicile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;num\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;04 05 06 07 08\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;professionnel\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;num\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;04 08 07 06 05\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;type\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;mobile\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nt\"\u003e\u0026#34;num\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;06 12 34 56 78\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;enfants\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;Conjoint\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;Profession\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;sage-femme\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nt\"\u003e\u0026#34;Hobbies\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;GRS\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;surf\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;peinture\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e已经使用可用工具验证了本文档符合JSON标准，并且可以看出它包含上述所有类型数据的示例。\u003c/p\u003e\n\u003ch3 id=\"3-6-3-逐步写出json-grammar-的元素httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e逐步写出JSON Grammar 的元素\u003c/a\u003e\u003c/h3\u003e\n\u003ch4 id=\"3-6-3-1-数字httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-3-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e数字\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e选择的示例JSON文档仅包含整数，但是数字实体的描述（第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-6-1\"\u003e3.6.1\u003c/a\u003e节）表明必须能够匹配具有例如以下格式的数字：“17”， “-138.27”，“1.2e-3”等\u003c/p\u003e\n\u003cp\u003e这可能会导致以下规则：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\+|\\-\u003c/span\u003e\u003cspan class=\"p\"\u003e]?\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# signe optionnel\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# chiffres optionnels (partie entière)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e\\.\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# séparateur décimal et partie fractionnaire\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[eE]\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\+|\\-\u003c/span\u003e\u003cspan class=\"p\"\u003e]?\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# exposant optionnel\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"3-6-3-2-字符串httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-3-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e字符串\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e可以想象许多通过模式定义字符串的方法。对于选择的示例JSON文档，以下规则就足够了：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003echaîne\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e  \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;+\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# caractères alphanumériques, espaces et\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                          \u003cspan class=\"c1\"\u003e# tirets, le tout entre des guillemets\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于真正的JSON解析器，我们可能更喜欢使用负字符类的规则，该字符类不包括任何不属于字符串的内容，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003echaîne\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; \u0026lt;-[\\n \u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;*\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# tous caractères sauf guillemets, retours à\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                         \u003cspan class=\"c1\"\u003e# la ligne et tabulations, entre guillemets\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e应该查看JSON标准的细节，以精确地细化JSON字符串中可接受或不可接受的内容。上面引用的第一条规则足以满足所选的例子。\u003c/p\u003e\n\u003ch4 id=\"3-6-3-3-json对象httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-3-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eJSON对象\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003eJSON对象是键/值对的列表。这些列表由大括号框起，并且这些对用逗号分隔。键/值对是标识符（字符串，上面已定义的规则），后跟冒号，后跟值。这可以翻译如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eobjet\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;{\u0026#39;\u003c/span\u003e  \u003cspan class=\"sr\"\u003e\u0026lt;listepaires\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;}\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003elistepaires\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;paire\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e         \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003epaire\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chaîne\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;valeur\u0026gt;\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了理解{\u0026lt;对\u0026gt; *％} ，它是值得记住的修饰语“  ％  ”施加到量词指定的隔膜必须被重复认可之间存在（见第  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-4\"\u003e2.4。 \u003c/a\u003e）。此修饰符可以轻松指定对以逗号分隔。如果没有此修饰符，则必须编写，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003elistepaires\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;paire\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;,\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;paire\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这不太方便，可读性也差一点。\u003c/p\u003e\n\u003ch4 id=\"3-6-3-4-json表httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-3-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eJSON表\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e表是值列表。列表用方括号括起来，值用逗号分隔：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003etableau\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;listeTableaux\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003elisteTableaux\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"sr\"\u003e\u0026lt;valeur\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e[\u003c/span\u003e \u003cspan class=\"err\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"3-6-3-5-值httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-3-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e值\u003c/a\u003e\u003c/h4\u003e\n\u003cp\u003e值可以是对象，数组，字符串，数字，布尔值或null。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;objet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chaîne\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e               \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003etrue\u003c/span\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003efalse\u003c/span\u003e     \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这种语法非常有效，但是目前可以考虑一种有些先进的句法符号，这种符号在本文档中尚未解决，后面将在第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-4\"\u003e3.9.4\u003c/a\u003e节中讨论\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-4\"\u003e原型规则\u003c/a\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eproto\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e  \u003cspan class=\"s\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;+\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e\\.\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[eE]\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\+|\\-\u003c/span\u003e\u003cspan class=\"p\"\u003e]?\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003echaîne\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e  \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;+\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;true\u0026gt;\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e     \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;false\u0026gt;\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e     \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;null\u0026gt;\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e     \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;objet\u0026gt;\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;objet\u0026gt;\u003c/span\u003e   \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;chaîne\u0026gt;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chaîne\u0026gt;\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这种不那么简洁的符号具有促进语法扩展的优点，但是这里的兴趣相当有限，因为JSON标准是严格且相对不可变的。上面引用的第一条规则足以满足所选的例子。\u003c/p\u003e\n\u003ch3 id=\"3-6-4-json-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eJSON Grammar\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e现在可以组合上面描述的不同元素并添加TOP规则来编写整个语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eGrammaire\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e          \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;objet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eobjet\u003c/span\u003e         \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;{\u0026#39;\u003c/span\u003e  \u003cspan class=\"sr\"\u003e\u0026lt;listepaires\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;}\u0026#39;\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003elistepaires\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;paire\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e          \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003epaire\u003c/span\u003e         \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chaîne\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;valeur\u0026gt;\u003c/span\u003e   \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003etableau\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;listeTableaux\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003elisteTableaux\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"sr\"\u003e\u0026lt;valeur\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e[\u003c/span\u003e \u003cspan class=\"err\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003echaîne\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\+\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e\\-\u003c/span\u003e\u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e\\.\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[eE]\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\+\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e\\-\u003c/span\u003e\u003cspan class=\"p\"\u003e]?\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;objet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chaîne\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003etrue\u003c/span\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003efalse\u003c/span\u003e     \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要测试，只需调用语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eGrammaire\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$chaîne_json\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将显示包含整个原始JSON的已匹配对象：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"nv\"\u003eraku\u003c/span\u003e \u003cspan class=\"n\"\u003ejson_grammaire\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epl\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;prénom\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Martine\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;nom\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Unetelle\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;enVie\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003etrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;âge\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"mi\"\u003e28\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e               \u003cspan class=\"c1\"\u003e# [ ... affichage abrégé pour des raisons de place ] \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;Profession\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;sage-femme\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;Hobbies\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;GRS\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;surf\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;peinture\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eJSON文档已得到充分认可。这个JSON语法完全适用于作为示例选择的JSON文档，并且适用于少于20行。鼓励读者测试它。它还能够通过在JSON文档中引入错误来验证（例如，删除列表的两个值之间的逗号），不再进行匹配。\u003c/p\u003e\n\u003cp\u003e有人可能会反对这个语法只涵盖JSON的一个子集。实际情况并非如此。当然不建议在生产环境中使用此语法来解析任何JSON，因为它是作为教学示例完成的，但没有检查JSON标准的更精细细节，但是然而，上面的语法几乎完成了。\u003c/p\u003e\n\u003cp\u003eRaku 的\u003ca href=\"https://github.com/moritz/json\"\u003eJSON::Tiny\u003c/a\u003e模块的语法可以解析任何有效的JSON文件，因为它可以容纳大约35行。\u003c/p\u003e\n\u003ch3 id=\"3-6-5-添加动作httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-6-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e添加动作\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e该JSON语法的工作，但如果打印是为JSON文档获得认可的对象树中使用例如大约300行文字，因为它提供的是已经认识到了一切的所有细节，而不是不是子模式的子模式。这对于理解语法的作用（例如在发生故障时）非常有用，但是探索这个树来提取数据可能会非常痛苦。\u003c/p\u003e\n\u003cp\u003e可以添加一类动作来构建抽象语法树（AST）。下面的类代码部分受到\u003ca href=\"https://github.com/moritz/json\"\u003eJSON::Tiny\u003c/a\u003e模块的action类的启发 ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eobjet\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003elistepaires\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ehash\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003elistepaires\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003epaire\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eflat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003epaire\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003echaîne\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evaleur\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003etableau\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003elisteTableaux\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eitem\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003elisteTableaux\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evaleur\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e)];\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003echaîne\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;true\u0026#34;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nn\"\u003eBool::\u003c/span\u003e\u003cspan class=\"n\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;false\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nn\"\u003eBool::\u003c/span\u003e\u003cspan class=\"n\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;null\u0026#34;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"n\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e;}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# équivalent d\u0026#39;undef en Perl5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003edefault\u003c/span\u003e      \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eval\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e此操作类在value方法中使用名为 \u003ccode\u003e$\u0026lt;val\u0026gt;\u003c/code\u003e 的正则表达式，这使我们稍微修改语法的值规则：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=objet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=chaîne\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=nombre\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003etrue\u003c/span\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003efalse\u003c/span\u003e     \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在可以按如下方式调用语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$j\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eGrammaire\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$chaîne_json\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$j\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对象$ reconnu.made现在有一个抽象语法树（AST），一个Perl数据结构6，它现在更容易发掘和利用。下面这棵树的显示略有重新格式化，其唯一目的是提高可读性：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eConjoint\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eHobbies\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eGRS\u003c/span\u003e \u003cspan class=\"n\"\u003esurf\u003c/span\u003e \u003cspan class=\"n\"\u003epeinture\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eNumérosTéléphone\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mo\"\u003e04\u003c/span\u003e \u003cspan class=\"mo\"\u003e05\u003c/span\u003e \u003cspan class=\"mo\"\u003e06\u003c/span\u003e \u003cspan class=\"mo\"\u003e07\u003c/span\u003e \u003cspan class=\"mi\"\u003e08\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003edomicile\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mo\"\u003e04\u003c/span\u003e \u003cspan class=\"mi\"\u003e08\u003c/span\u003e \u003cspan class=\"mo\"\u003e07\u003c/span\u003e \u003cspan class=\"mo\"\u003e06\u003c/span\u003e \u003cspan class=\"mo\"\u003e05\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eprofessionnel\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003enum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mo\"\u003e06\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"mi\"\u003e34\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e \u003cspan class=\"mi\"\u003e78\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003emobile\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e],\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eProfession\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003esage\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003efemme\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eadresse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eCodePostal\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eF\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e69000\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eComplément_Adr\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eNumRue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e21\u003c/span\u003e \u003cspan class=\"n\"\u003erue\u003c/span\u003e \u003cspan class=\"n\"\u003ePasteur\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eVille\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eLyon\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e},\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eenVie\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eenfants\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003enom\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eUnetelle\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eprénom\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMartine\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esexe\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eF\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eâge\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e28\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在可以轻松访问单个值，例如：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esay $reconnu.made\u0026lt;adresse\u0026gt;\u0026lt;CodePostal Ville\u0026gt;;     # -\u0026gt; (F-69000 Lyon)\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"3-7-用于分析伪xml的-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-7 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e用于分析（伪）XML的 Grammar\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e一个\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/approfondissements/#L2\"\u003e语法章\u003c/a\u003e节\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/approfondissements\"\u003e在Perl 5到Raku的：深化\u003c/a\u003e介绍一步一步写语法解析文本尊重XML的一个子集。\u003c/p\u003e\n\u003cp\u003e该子集由以下测试套件定义：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tests\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;abc\u0026#39;\u003c/span\u003e                       \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a\u0026gt;\u0026lt;/a\u0026gt;\u0026#39;\u003c/span\u003e                   \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;..\u0026lt;ab\u0026gt;foo\u0026lt;/ab\u0026gt;dd\u0026#39;\u003c/span\u003e          \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a\u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt;\u0026#39;\u003c/span\u003e           \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a href=\u0026#34;foo\u0026#34;\u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a empty=\u0026#34;\u0026#34; \u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt;\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a\u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;c\u0026gt;\u0026lt;/c\u0026gt;\u0026lt;/a\u0026gt;\u0026#39;\u003c/span\u003e    \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 7\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;\u0026#39;\u003c/span\u003e                         \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 8\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a\u0026gt;b\u0026lt;/b\u0026gt;\u0026#39;\u003c/span\u003e                  \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 9\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a\u0026gt;b\u0026lt;/a\u0026#39;\u003c/span\u003e                   \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a\u0026gt;b\u0026lt;/a href=\u0026#34;\u0026#34;\u0026gt;\u0026#39;\u003c/span\u003e          \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 11\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a/\u0026gt;\u0026#39;\u003c/span\u003e                      \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 12\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;a /\u0026gt;\u0026#39;\u003c/span\u003e                     \u003cspan class=\"p\"\u003e],\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 13\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中与第一个字段相关联的字符串等于1的字符串被认为是格式良好的XML字符串，而第一个字段为0的字符串被认为是格式不正确的。\u003c/p\u003e\n\u003cp\u003e强烈建议有兴趣的读者阅读本章，其中只引用最终语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eXML\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;xml\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"err\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003exml\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;text\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;tag\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;text\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003etext\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"sr\"\u003e\u0026lt;-[\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;*\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003etag\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;attributes\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;/\u0026gt;\u0026#39;\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# a single tag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026gt;\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;xml\u0026gt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u0026lt;/\u0026#39;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026gt;\u0026#39;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# an opening and a closing tag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eattributes\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;-[\u0026#34;\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;*\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-8-计算算术表达式计算器httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-8 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e计算算术表达式（计算器）\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e这是一个使用计算器语法的程序的简单示例，该计算器语法可以评估基本的算术表达式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ev6\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eGrammaireArithmétique\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;operation\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eoperation\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[^*+/-]\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\\.\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e\\.\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003eActionsArithmétiques\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eoperation\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;*\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;+\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e([\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;^\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;   6*7  \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;46.2 -4.2\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;28+ 14.0 \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003e\u0026#39;70 * .6 \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;126   /3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;6.4807407 ^ 2\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$op\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eGrammaireArithmétique\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$op\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eActionsArithmétiques\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;$reconnu\\t= \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$reconnu\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e语法GrammaireArithmétique是特别简单：我们试图匹配号码，然后按算术运算符（四个基本操作幂），其次是另一个号码。\u003c/p\u003e\n\u003cp\u003e算术动作库存类本身不产生AST，而只是评估在两个数字项之间执行的算术运算的结果。\u003c/p\u003e\n\u003cp\u003e在运行时，这将显示以下结果：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"nv\"\u003eraku\u003c/span\u003e \u003cspan class=\"n\"\u003egrammaire_arithm\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epl6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e          \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mf\"\u003e46.2\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mf\"\u003e4.2\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e28\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mf\"\u003e14.0\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e70\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mf\"\u003e.6\u003c/span\u003e         \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e126\u003c/span\u003e   \u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e        \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mf\"\u003e6.4807407\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mf\"\u003e42.00000002063649\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们发现它工作得很好，但我们希望能够处理包含多个操作的更复杂的算术表达式，同时考虑操作之间的通常优先级规则，以及通常用于修改这些优先级的括号。\u003c/p\u003e\n\u003cp\u003e特别是，我们想要正确处理以下算术表达式：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e3 + 4 + 5;\u003c/li\u003e\n\u003cli\u003e3 + 4 * 5; ＃预期的结果是23\u003c/li\u003e\n\u003cli\u003e（3 + 4）* 5; ＃预期的结果是35\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e要实现这种结果，我们必须以不同的方式对待具有不同优先级的运营商。在下面的语法中，表达式（expr）由几个由+或-运算符分隔的术语组成。甲术语由一个原子或多个原子 S按运算符分隔*或/。并且原子是括号中的简单数字或算术表达式。\u003c/p\u003e\n\u003cp\u003e这确保符合优先的规则：乘法和除法的分析过程中的加法和减法，因为之前评估，EXPR，考虑长期的个性化，才能完成评估一个表达。类似地，由于带括号的表达式是原子，因此有必要在完成对该术语中包含括号表达式的术语的评估之前评估原子的值。\u003c/p\u003e\n\u003cp\u003e语法比以前复杂一点，但至少在外观上仍然相对简单：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eCalculette\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;expr\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e           \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;terme\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eplus\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emoins\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eop\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eplus\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emoins\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eop\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eterme\u003c/span\u003e           \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;atome\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003emult\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ediv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eop\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003emult\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ediv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eop\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eatome\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;expr-parenth\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eexpr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparenth\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\\.\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e\\.\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparenth\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;(\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;expr\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;)\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigne\u003c/span\u003e          \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意，在括号中的表达式的情况下，可以递归地调用expr规则。这种递归调用的可能性是语法能力的重要组成部分，但必须采取一些预防措施来避免进入无限递归的风险; 这些预防措施将在\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-5\"\u003e4.5\u003c/a\u003e节中详细讨论  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-5\"\u003e。\u003c/a\u003e（\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-5\"\u003e避免左递归的陷阱\u003c/a\u003e）。\u003c/p\u003e\n\u003cp\u003e我们还可以注意到，我们在语法中集成了两个动作（在原子规则中））。我们特别出于实际原因做出了这样的选择：由于原子规则包含非常不同的命名子规则，因此更容易将操作直接集成到子规则的上下文中。如果这些股票被放置在一类股票中，则有必要确定哪些子规则已得到承认。这并不难，但它会使代码更复杂一些。第二个原因是教学法：尽管创建一个单独的一类行动通常会更好（我们将在本例中很快完成此操作），但有必要知道可以偶尔直接集成行动。用语法。对于一个非常简单的语法，它可能是过度工程 而不是仅为一个或两个动作创建一个动作类。\u003c/p\u003e\n\u003cp\u003e以下是与此语法相关的操作类：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003eCalcActions\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eexpr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003ecalculer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eterme\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eplus\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003emoins\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eop\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eterme\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003ecalculer\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eatome\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003emult\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ediv\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eop\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparenth\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eexpr\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003ecalculer\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$operandes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$operateurs\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e \u003cspan class=\"nv\"\u003e$operandes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$op\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eshift\u003c/span\u003e \u003cspan class=\"nv\"\u003e$operateurs\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nombre\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e \u003cspan class=\"nv\"\u003e$operandes\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$op\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;+\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nombre\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e-=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nombre\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;*\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nombre\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003ewhen\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e/=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nombre\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003edefault\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;operateur inconnu \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e计算方法从左到右确定表达式（由加法或减法运算符分隔的项）和项（由乘法或除法运算符分隔的原子）的值，因为这些运算符在左侧都是关联的。\u003c/p\u003e\n\u003cp\u003e可以使用以下代码片段测试此语法和与其关联的操作类：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"sr\"\u003e/6 3+5 74-32 5+7/\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"sr\"\u003e/5 4+(3-1)/\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003e\u0026#34;12 + 6 * 5\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; 7 + 12 + 23\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; 2 + (10 * 4) \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;3 * (7 + 7)\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$résultat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCalculette\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCalcActions\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# say $résultat;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;%-15s %.3f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$résultat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$résultat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中显示以下结果：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ raku grammaire_arithm_2.pl6\n3*4             12.000\n5/6             0.833\n3+5             8.000\n74-32           42.000\n5+7/3           7.333\n5*3*2           30.000\n(4*5)           20.000\n(3*2)+5         11.000\n4+3-1/5         6.800\n4+(3-1)/4       4.500\n12 + 6 * 5      42.000\n 7 + 12 + 23    42.000\n 2 + (10 * 4)   42.000\n3 * (7 + 7)     42.000\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e有人可能想知道这个程序是否适用于嵌套括号。当我编写这段代码时，我问自己这个问题，我认为在这种情况下它可能无法正常工作，并且我可能需要添加一些东西以正确分析表达式嵌套括号。事实证明它不是，它适用于嵌套括号：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;(((2+3)*(5-2))-1)*3\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;2 * ((4-1)*((3*7) - (5+2)))\u0026#34;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$résultat\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCalculette\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003eactions\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eCalcActions\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;%-30s %.3f\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$résultat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$résultat\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个显示正确的结果：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(((\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e            \u003cspan class=\"mf\"\u003e42.000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e    \u003cspan class=\"mf\"\u003e84.000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"3-9-grammar先进的理念和观点httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003eGrammar：先进的理念和观点\u003c/a\u003e\u003c/h2\u003e\n\u003ch3 id=\"3-9-1-角色构成httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e角色构成\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e在面向对象的编程中，角色对可以由不同类共享的行为（通常是方法）进行分组。角色在技术上与类非常相似，但最大的区别在于不期望直接从角色实例化对象。在OOP中，可以将角色添加到整个类，或仅添加到类的各个对象。将角色功能添加到类中称为角色组合。\u003c/p\u003e\n\u003cp\u003e使用关键字do将角色添加到类（或对象） ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erole\u003c/span\u003e \u003cspan class=\"n\"\u003ePersonne\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edetails\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eAdresse\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003eadresse\u003c/span\u003e \u003cspan class=\"n\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003erw\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Adresse : type défini préalablement\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eNumString\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003etelephone\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003efixe\u003c/span\u003e \u003cspan class=\"n\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003erw\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# idem pour NumString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003emethod\u003c/span\u003e \u003cspan class=\"n\"\u003edéménage\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eAdresse\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nouvelle\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eadresse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003eadresse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$nouvelle\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eadresse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# … autres méthodes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eclass\u003c/span\u003e \u003cspan class=\"n\"\u003ePersonne\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eprivée\u003c/span\u003e \u003cspan class=\"n\"\u003edoes\u003c/span\u003e \u003cspan class=\"n\"\u003ePersonne\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edetails\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003enom\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ehas\u003c/span\u003e \u003cspan class=\"n\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e.\u003c/span\u003e\u003cspan class=\"nv\"\u003eprénom\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# autres attributs et méthodes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e角色是在OOP中重用代码的一种非常强大的方法。有关OOB角色组成的更多信息，请参阅\u003cimg src=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/images/100000000000000C0000000C8ED6566A.jpg\" alt=\"图片不可用\"\u003e\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/objets/\"\u003ePerl对象，类和角色教程6 - 面向对象编程教程\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e读者已经理解Raku的语法最终只是一种特定的类形式，并不会惊讶于我们也可以在语法中添加角色。这些角色最终可能包含OOP中使用的属性和方法，但它们通常包含命名规则。\u003c/p\u003e\n\u003cp\u003e通常，角色将是从较小的独立组件汇编语法的好方法。例如，匹配引号（或撇号）中的数字和字符串是一种非常常见的需求，对于分析JSON，YAML，HTML，配置文件或数学表达式非常有用。因此，我们可以想象将角色形式的通用组件添加到更具体的语法（或添加到语法中的其他角色）。\u003c/p\u003e\n\u003cp\u003e在下面的示例中，我们定义了第一个角色Integer，它提供了用于匹配有符号或无符号整数的规则; 然后我们使用Integer角色的一些规则定义第二个角色Floating：感谢子句Do Integer并提供匹配浮点数的规则：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erole\u003c/span\u003e \u003cspan class=\"n\"\u003eEntier\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enon\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esigné\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..9]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigne\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;+\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;-\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eentier\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003esigné\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;non-signé\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erole\u003c/span\u003e \u003cspan class=\"n\"\u003eFlottant\u003c/span\u003e \u003cspan class=\"n\"\u003edoes\u003c/span\u003e \u003cspan class=\"n\"\u003eEntier\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eexposant\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;entier-signé\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003epoint\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edécimal\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003efractionnaire\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;entier-signé\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;point-décimal\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;entier-signé\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;point-décimal\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;entier-signé\u0026gt;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;entier-signé\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;point-décimal\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eflottant\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;nombre-fractionnaire\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;exposant\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e   \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这为我们提供了以下语法分析简单算术表达式中的重用组件：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eMultDiv\u003c/span\u003e \u003cspan class=\"n\"\u003edoes\u003c/span\u003e \u003cspan class=\"n\"\u003eFlottant\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;dividende=nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;diviseur=nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003edividende\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ediviseur\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e\\*\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003emake\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003enombre\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;entier-signé\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;flottant\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;7 * 6\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;3*2*7\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;126/3\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;147.0 / 3.5\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$expr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eMultDiv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$expr\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprintf\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;%-20s %s %d \\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;La réponse est: \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFloating Does子句将Floating角色中定义的规则和Integer角色都导入到MultDiv语法中。\u003c/p\u003e\n\u003cp\u003e显示的结果符合预期：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"nv\"\u003eraku\u003c/span\u003e \u003cspan class=\"n\"\u003egrammaire_roles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003epl6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e                \u003cspan class=\"n\"\u003eLa\u003c/span\u003e \u003cspan class=\"n\"\u003eréponse\u003c/span\u003e \u003cspan class=\"n\"\u003eest:\u003c/span\u003e  \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e                \u003cspan class=\"n\"\u003eLa\u003c/span\u003e \u003cspan class=\"n\"\u003eréponse\u003c/span\u003e \u003cspan class=\"n\"\u003eest:\u003c/span\u003e  \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e126\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e                \u003cspan class=\"n\"\u003eLa\u003c/span\u003e \u003cspan class=\"n\"\u003eréponse\u003c/span\u003e \u003cspan class=\"n\"\u003eest:\u003c/span\u003e  \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mf\"\u003e147.0\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"mf\"\u003e3.5\u003c/span\u003e          \u003cspan class=\"n\"\u003eLa\u003c/span\u003e \u003cspan class=\"n\"\u003eréponse\u003c/span\u003e \u003cspan class=\"n\"\u003eest:\u003c/span\u003e  \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，我们再次将操作直接插入到语法中，并在此处使用为命名规则的捕获提供特定名称的可能性（参见\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-8\"\u003e§2.8  \u003c/a\u003e）以区分规则提供的捕获在分割的情况下的数字。\u003c/p\u003e\n\u003cp\u003e现在我们已经构建了这些软件块，它们是由Integer和Floating角色提供的整数签名和浮动规则，我们也可以重用它们来匹配我们语法中用于解析\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-6-4\"\u003e3.6\u003c/a\u003e JSON的相同类型的实体。  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-6-4\"\u003e0.4\u003c/a\u003e ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eGrammaire\u003c/span\u003e \u003cspan class=\"n\"\u003edoes\u003c/span\u003e \u003cspan class=\"n\"\u003eFlottant\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e          \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;objet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"err\"\u003e#\u003c/span\u003e \u003cspan class=\"err\"\u003e…\u003c/span\u003e \u003cspan class=\"nv\"\u003eRègles\u003c/span\u003e \u003cspan class=\"n\"\u003edéfinissant\u003c/span\u003e \u003cspan class=\"n\"\u003eles\u003c/span\u003e \u003cspan class=\"n\"\u003eobjets\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003epaires\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003etableaux\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003echaînes\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eetc\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;entier-signé\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;flottant\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003evaleur\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;objet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;tableau\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chaîne\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003etrue\u003c/span\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003efalse\u003c/span\u003e     \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"n\"\u003enull\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们发现构建可重用的角色软件库以简化语法编写变得非常容易。\u003c/p\u003e\n\u003cp\u003e与继承相关，角色组合具有从编译而不是执行中检测命名冲突的优点。这迫使你解决这些冲突，并使角色组合比继承更可靠和安全，无论是面向对象的编程还是语法创建。\u003c/p\u003e\n\u003ch3 id=\"3-9-2-设定规则httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e设定规则\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e可以使用参数定义规则（名为类型正则表达式，标记或规则的正则表达式），从而使用参数调用：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003edate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$mois\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$mois\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;En juin\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;13 juin 2015\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;date(\u0026#34;juin\u0026#34;)\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# -\u0026gt; En juin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;En mai\u0026#34;\u003c/span\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;13 juin 2015\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;date(\u0026#34;mai\u0026#34;)\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# (échec)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;13 $_ 2015\u0026#34;\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;date(\u0026#34;mai\u0026#34;)\u0026gt;/\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e??\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Date $date en $_\u0026#34;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Date $date pas en $_\u0026#34;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003emars\u003c/span\u003e \u003cspan class=\"n\"\u003eavril\u003c/span\u003e \u003cspan class=\"n\"\u003emai\u003c/span\u003e \u003cspan class=\"n\"\u003ejuin\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# affiche :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Date 13 mars 2015 pas en mars\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Date 13 avril 2015 pas en avril\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Date 13 mai 2015 en mai\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Date 13 juin 2015 pas en juin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这是一个稍微复杂的带有参数规则的更复杂结构的示例：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003emots\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e \u003cspan class=\"o\"\u003e\\-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eentre\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003ecrochets\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;start(\u0026#34;[\u0026#34;)\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;ident\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;end(\u0026#34;]\u0026#34;)\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eentre\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparen\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;start(\u0026#34;(\u0026#34;)\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;mots\u0026gt;\u003c/span\u003e  \u003cspan class=\"sr\"\u003e\u0026lt;end(\u0026#34;)\u0026#34;)\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eentre\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003echevrons\u003c/span\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;start(\u0026#34;\u0026lt;\u0026#34;)\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;ident\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;end(\u0026#34;\u0026gt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;)\u0026gt; }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003emy token start($début) { $début }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003emy token end($fin) { $fin }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003esay ~$\u0026lt;entre-crochets\u0026gt; if \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eCapitaine_Crochet\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; ~~ /\u0026lt;entre-crochets\u0026gt;/;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e# Affiche : [Capitaine_Crochet]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003esay $\u0026lt;entre-paren\u0026gt; if \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003epar\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparenthèse\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; ~~ /\u0026lt;entre-paren\u0026gt;/;  # -\u0026gt; () \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e# (échec puisqu\u0026#39;il y a des crochets et non des parenthèses\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003esay $\u0026lt;entre-paren\u0026gt; if \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epar\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparenthèse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;entre-paren\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Affiche :  \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# ｢(par-parenthèse)｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#  start =\u0026gt; ｢(｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#  mots =\u0026gt; ｢par-parenthèse｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#  end =\u0026gt; ｢)｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-9-3-递归规则和动态变量httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e递归规则和动态变量\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e语法规则本质上通常是递归的。例如，要匹配嵌套括号，你可能希望编写此样式的递归语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eG\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;(\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;)\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003eint\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;=\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;TOP\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eG\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;(22 (43 45))\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Affiche :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# ｢(22 (43 45))｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#  int =\u0026gt; ｢22｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#  TOP =\u0026gt; ｢(43 45)｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#   int =\u0026gt; ｢43｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#   int =\u0026gt; ｢45｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里，递归调用TOP规则来解析嵌套括号。它可以很容易地分析具有较高嵌套级别的字符串，例如“（22（43（46 45（41）））”。\u003c/p\u003e\n\u003cp\u003e将上下文传递给递归调用的规则时，这会变得更加棘手。\u003c/p\u003e\n\u003cp\u003e人们可以使用原则参数规则（见第  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-2\"\u003e3.9.2\u003c/a\u003e上图）可以更改上下文，但它可能很快就会变得非常冗长。也正是在原则上可以使用全局变量，但是全局变量通常被认为是不好的做法（可能除了一些特殊情况，如环境变量，这是全球性的），因为全局变量经常违反结构化编程的原则，不清楚，不健壮和危险，并且它通常不适用于线程。\u003c/p\u003e\n\u003cp\u003e无论是语法还是简单的函数调用或普通的方法，因为它使用递归调用机制，语法可以是艰巨的，当你需要管理多个变量传递回调用函数或函数的返回值。\u003c/p\u003e\n\u003cp\u003e动态变量（使用twigil *）解决了这个问题。他们是词法声明，但他们不仅在窝寻求词汇包容性，而且在窝动态的包容性。\u003c/p\u003e\n\u003cp\u003e例如，考虑一个计算数字阶乘的简单递归函数，可以写成如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efact\u003c/span\u003e\u003cspan class=\"p\"\u003e($n){\u003c/span\u003e\u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ecallfact\u003c/span\u003e\u003cspan class=\"p\"\u003e(Int $n){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Factorielle non définie pour nombre négatif\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Factorielle = \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecallfact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# -\u0026gt; 120\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e假设我们还想计算低于所考虑数的整数之和。参数和多个返回值的通过可能变得相当快速且不可读。以下是将部分和存储在动态变量中的可能语法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efact\u003c/span\u003e\u003cspan class=\"p\"\u003e($n){\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"n\"\u003efact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ecallfact\u003c/span\u003e\u003cspan class=\"p\"\u003e(Int $n){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Factorielle non définie pour nombre négatif\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003esum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Fact = \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003efact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Somme = \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecallfact\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# -\u0026gt; Fact = 120 \\n Somme = 15\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e动态变量 \u003ccode\u003e$*sum\u003c/code\u003e 在调用函数callfact中声明并初始化为0 。它在词法上是callfact函数的本地，但它在函数事实中是可见的和可修改的，因为事实是由callfact调用的，因此它驻留在callfact的动态范围内。这个变量成为这两个函数的全局变量（可能是它们可能调用的函数），这消除了传递参数或在它们之间返回值的需要，但它仍然是一个变量。词汇变量“私有”，因为它在程序的其余部分是不可见的。\u003c/p\u003e\n\u003cp\u003e动态变量不一定是标量，可以类似地定义数组（例如，\u003ccode\u003e@*\u003c/code\u003e数组）或动态散列。\u003c/p\u003e\n\u003cp\u003e当语法变得有点复杂时，动态变量通常可以简化实现。\u003c/p\u003e\n\u003cp\u003e语法\u003ca href=\"https://github.com/raku/std/blob/master/STD.pm6\"\u003eSTD.pm\u003c/a\u003e Raku的大量使用动态变量，尤其是定义将被传递给函数词法或句法分析上下文，调用的方法或规则，而不需要建立天然气厂的真实通道参数和返回值。例如，有一种动态散列％* LANG定义了不同的“子语言”的Raku（基本Raku中，正则表达式，Perl的正则表达式5等）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;MAIN\u0026gt;\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"nn\"\u003eSTD::\u003c/span\u003e\u003cspan class=\"n\"\u003eP6\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;Q\u0026gt;\u003c/span\u003e       \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"nn\"\u003eSTD::\u003c/span\u003e\u003cspan class=\"n\"\u003eQ\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;Quasi\u0026gt;\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"nn\"\u003eSTD::\u003c/span\u003e\u003cspan class=\"n\"\u003eQuasi\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;Regex\u0026gt;\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"nn\"\u003eSTD::\u003c/span\u003e\u003cspan class=\"n\"\u003eRegex\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;P5\u0026gt;\u003c/span\u003e      \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"n\"\u003eSTD5\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eLANG\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;P5Regex\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e\u003cspan class=\"nn\"\u003eSTD5::\u003c/span\u003e\u003cspan class=\"n\"\u003eRegex\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"3-9-4-所谓原类型的规则httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e所谓原类型的规则\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e同样有可能，由于关键字多，写几个函数或方法的倍数相同的名字，但是编译器可以用不同的签名区分，我们可以写，用的是-clef 原，名称相同的规则，但适用于不同的实体。\u003c/p\u003e\n\u003cp\u003e例如，当前的Raku语法使用以下构造来定义sigils：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eproto\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;$\u0026gt;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;@\u0026gt;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;%\u0026gt;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;\u0026amp;\u0026gt;\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# ... une petite dizaine d\u0026#39;autres définitions de sigils\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这将创建一个名为sigil（proto）的组和（在此示例中）属于该组的四个规则（它们属于该组，因为它们具有相同的名称）作为参数接收sym标识符。这些规则中的第一个将sym分配给$，然后在规则的主体中匹配此符号（带有符号 \u003ccode\u003e\u0026lt;sym\u0026gt;\u003c/code\u003e）。第二条规则与@相同，依此类推。\u003c/p\u003e\n\u003cp\u003e如果语法调用规则\u003ccode\u003e\u0026lt;sigil\u0026gt;\u003c/code\u003e，我们会得到这五个规则的列表，它们之间有一个或逻辑。这与你编写规则的方法大致相同，如下所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;$\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;@\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;%\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;\u0026amp;\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是，使用这些原型或protoregex，可以更容易地扩展语法，如下所示（第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-6\"\u003e3.9.6\u003c/a\u003e节  ）。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-6-3-5\"\u003e为了§3.6.3.5\u003c/a\u003e\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-6-3-5\"\u003e的\u003c/a\u003e记忆，已经给出了可能使用原型规则的另一个例子  。\u003c/p\u003e\n\u003ch3 id=\"3-9-5-继承和可变语法httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e继承和可变语法\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e继承了语法的可能性提供了一种没有料到的表达能力和巨大的前景：它是可能的，例如作为模块的一部分，写语法的“子语法”语法或女儿重载操作符，添加功能甚至修改语法元素，并使用此本地修改语法运行具有相同Raku编译器的Perl程序。\u003c/p\u003e\n\u003cp\u003e正是由于这种基本机制，Raku的语法是动态的，例如，很容易定义自己的运算符（请参阅\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-nouveautes/#L6\"\u003e创建自己\u003c/a\u003e的教程\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-nouveautes/#L6\"\u003e操作符\u003c/a\u003e\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-nouveautes\"\u003e从Perl到Raku - Part 2：新奇事物\u003c/a\u003e）。然而，没有必要控制继承和语法的可变性，以建立自己的运营商，因为语言提供了最高级别的一个简单的机制来做到这一点，如在运营商的定义因子 “  ！ “\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003epostfix\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u0026lt;!\u0026gt;(Int $x) {\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$factorielle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$factorielle\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$factorielle\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# -\u0026gt; imprime 120\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku宏（在编译时运行的各种函数）也使用Raku语法的可变性作为底层机制。\u003c/p\u003e\n\u003ch3 id=\"3-9-6-语法和语言可扩展性的变化httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9-6 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e语法和语言可扩展性的变化\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e对语法进行低级修改以扩展语言可能看起来像是白魔法，但实际上并不像看起来那么神秘。\u003c/p\u003e\n\u003cp\u003e通过采用允许定义语言符号的proto类型规则（第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-9-4\"\u003e3.9.4\u003c/a\u003e节  ），可以很容易地将新的符号添加到Raku的子语法中。例如，假设编译器使用的Raku的语法称为“Raku”（其实名实际上类似于STD：ver \u003c!-- raw HTML omitted --\u003e，其中xxx是版本号），我们可以添加sigil“  μ  ”：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eNouveauSigilP6\u003c/span\u003e \u003cspan class=\"n\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eRaku\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;µ\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;sym\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者，对于系统使用“  $  ”违背亲欧洲信念的读者，修改现有的印记：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eEuroRaku\u003c/span\u003e \u003cspan class=\"n\"\u003eis\u003c/span\u003e \u003cspan class=\"n\"\u003eRaku\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigil:sym\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;$\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;€\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e语法EuroRaku现在允许使用的印记“  €  ”为标量，但因为它是用相同的参数相同的规则（：印记符号 \u003ccode\u003e\u0026lt;$\u0026gt;\u003c/code\u003e ，原来的语法，编译器没有）难以知道该怎么做。英国的欧洲怀疑论者可能，如果他们希望通过印记“  £  ”音乐爱好者“  ♪  ”，也是过敏反全球化“  $  ”的锤子和镰刀（“  ☭  ”）或符号变就变。\u003c/p\u003e\n\u003ch3 id=\"3-9-7-展望httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e3-9-7 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e展望\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e还有许多其他真正令人惊叹和惊人的扩展可能性，但它们更倾向于极客或语言专家，而不是普通用户。在这里探索它们是不可能的，因为它可能需要几十个额外的页面，并且不属于本教程的范围。\u003c/p\u003e\n\u003cp\u003e在撰写这些页面的时候，目前几乎没有关于这个主题的文档（实际上关于Raku语法，甚至是英语），最丰富的信息来源可能是参考Raku和现有模块的标准语法（以及实验）。然而，感兴趣的读者可以通过咨询以下链接加深：Patrick Michaud的\u003ca href=\"https://rakuadvent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/\"\u003eThe Raku标准语法\u003c/a\u003e r和Moritz Lenz的\u003ca href=\"http://perlgeek.de/en/article/mutable-grammar-for-perl-6\"\u003eRaku的可变语法\u003c/a\u003e。不幸的是，这些来源很老，但如果某些细节点可能已经过时，那么概念性讨论仍然非常重要。\u003c/p\u003e\n\u003cp\u003e前款规定原文为2015年和可用的文件已经在优秀图书的2017年12月以来的出版物明确扩大解析Raku个语法和的正则表达式-一个递归下降到解析由莫里茨伦茨（Apress出版，201页）。如果你读英语，那你有兴趣，请不要犹豫一秒，这真的是我的书也喜欢看，当我开始学习正则表达式，特别是Raku语法。\u003c/p\u003e\n\u003ch1 id=\"4-最佳实践和陷阱httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4. \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e最佳实践和陷阱\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003eRaku正则表达式和语法单独形成一个真正的编程模型，通常至少部分是新的，因此需要掌握。\u003c/p\u003e\n\u003cp\u003e为了帮助读者编写强大的正则表达式和语法，这里有一些好的做法，应用似乎是明智的（从常识来看，这些不是盲目遵循的规则）。这些良好实践的范围从简单的小规模代码格式到对匹配的精细理解，包括帮助避免可能的陷阱和不可读的代码。\u003c/p\u003e\n\u003ch2 id=\"4-1-格式化代码httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e格式化代码\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e当不使用副词：sigspace时，在Raku正则表达式中忽略空格（和注释）。这具有插入空格和注释以提高可读性的优点。\u003c/p\u003e\n\u003cp\u003e比较这个非常紧凑的正则表达式来匹配浮点数（浮点数）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;[+-]\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ee\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;[+-]\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]?}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e用它，等价，但更具可读性：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"sr\"\u003e\u0026lt;[+-]\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# signe optionnel\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# chiffres de début, optionnels\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"s\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# séparateur décimal\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"p\"\u003e[\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# exposant optionnel\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ee\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[+-]\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e  \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e（上面这个非常简单的例子只是为了说明格式化，我们之前已经给出了更好的方法来匹配浮点数，我们将把它提高一点。）\u003c/p\u003e\n\u003cp\u003e通常，希望：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用原子周围和群内空间;\u003c/li\u003e\n\u003cli\u003e将量词直接放在原子之后，不插入空格，并且;\u003c/li\u003e\n\u003cli\u003e垂直对齐括号和括号打开或关闭。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e同样，垂直条“  | 分离替代方案的不同可能性：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy regex exemple {\n    \u0026lt;début\u0026gt;\n    [\n    || \u0026lt;choix_1\u0026gt;\n    || \u0026lt;choix_2\u0026gt;\n    || \u0026lt;choix_3\u0026gt;\n    ]+\n    \u0026lt;fin\u0026gt;\n}\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"4-2-限制尺寸httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e限制尺寸\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e正则表达式需要非常少的装饰或船码，因此它们通常比普通代码更紧凑。保持足够小是很重要的。\u003c/p\u003e\n\u003cp\u003e当捕获量变高或者我们使用命名捕获量来更好地理解它时，我们应该问自己是否应该更进一步并转到命名的正则表达式。\u003c/p\u003e\n\u003ch3 id=\"4-2-1-识别浮点数httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-2-1 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e识别浮点数\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e例如，前一章（第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-1\"\u003e4.1\u003c/a\u003e节  ）的正则表达式浮点数可以分解为更小的部分：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esigne\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[+-]\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003edécimal\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eexposant\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;e\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;exposant\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当正则表达式变得更复杂时，这会有所帮助。例如，如果要在有指数时使小数点（“逗号”）可选：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e  \u003cspan class=\"s\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;exposant\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;exposant\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这也允许更好地重用代码。上面定义的符号和小数规则（标记）也可以非常简单地定义一个整数：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eentier\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"4-2-2-识别复数httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-2-2 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e识别复数\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e类似地，再次通过重用上面定义的符号和十进制规则（标记），我们可以定义一个复数（用笛卡尔代数表示法），如下所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003enombre\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;float\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;décimal\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003ecomplexe\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;signe\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e]?\u003c/span\u003e  \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;i\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nombre\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Reconnu\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;3+4i\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;complexe\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# -\u0026gt; Reconnu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Accéder aux différents éléments du nombre complexe reconnu :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;complexe\u0026gt;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;3.5e-7 + 4.17i\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;complexe\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 3.5e-7 + 4.17i\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;complexe\u0026gt;\u0026lt;nombre\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# -\u0026gt;  3.5e-7\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;complexe\u0026gt;\u0026lt;nombre\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e];\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# -\u0026gt;  4.17\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;complexe\u0026gt;\u0026lt;nombre\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;float\u0026gt;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# -\u0026gt;  3.5e-7\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;complexe\u0026gt;\u0026lt;signe\u0026gt;\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# -\u0026gt;  +\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e很明显，即使不使用语法（至少对于这个非常简单的情况），人们也可以使用命名规则构建真正的乐高游戏的砖块。识别IP地址将给出另一个例子。\u003c/p\u003e\n\u003ch3 id=\"4-2-3-识别urlhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-2-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e识别URL\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e我们将在此考虑简化URL（Web地址）可以是IP地址（由句点分隔的四个数字的系列），也可以是表示协议和域名的字符串，后跟路径访问资源。\u003c/p\u003e\n\u003cp\u003e我们可以从尝试识别IP地址开始。\u003c/p\u003e\n\u003ch3 id=\"4-2-4-识别ip地址httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-2-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e识别IP地址\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003eIPv4地址由4个数字组成，由1到3位数字以点分隔。\u003c/p\u003e\n\u003cp\u003e正则表达式首次尝试识别IP地址可能是：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/(\\d**1..3) \\. (\\d**1..3) \\. (\\d**1..3) \\. (\\d**1..3)/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但它至少相当费力和笨拙。\u003c/p\u003e\n\u003cp\u003e应用于量化器的％修饰符（参见上面的第\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2-4\"\u003e2.4\u003c/a\u003e节  ）允许你指定重复确认之间必须存在的分隔符：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e/ (\\d ** 1..3) ** 4 % \u0026#39;.\u0026#39; /\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它已经好多了，但遗憾的是从某种观点来看是错误的：这个正则表达式会毫无问题地匹配字符串“125.266.742.12”，这不是有效的IP地址（四个数字中的每一个都必须表示一个字节，因此可以用十进制表示法理解，在0到255之间。这一切当然取决于我们究竟要做什么，上面的正则表达式足以捕获我们正在寻找的东西，但它并不能完全确保输入数据的验证。\u003c/p\u003e\n\u003cp\u003e要验证一个字节是否捕获好字节（数字低于255），可以构建一个正则表达式（或令牌）字节，它将检查这些条件，然后使用字节的正则表达式ip  ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eoctet\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..5]\u0026gt;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# 250 à 255\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..4]\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 200 à 249\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e                   \u003cspan class=\"c1\"\u003e# 100 à 199\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# 0 à 99 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eip\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;octet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;Reconnu\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;244.7.245.23\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"sr\"\u003e/\u0026lt;ip\u0026gt;/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# -\u0026gt; Reconnu\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"vg\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                       \u003cspan class=\"c1\"\u003e# -\u0026gt; 244.7.245.23\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，通过使用代码类型断言（结束），可以显着简化正则表达式字节：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eoctet\u003c/span\u003e \u003cspan class=\"p\"\u003e{(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?{\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e255\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最后两个版本的正则表达式字节仍然存在一些缺陷，在某些情况下可能会出现在字符串的最后一个八位字节：字符串“244.7.245.263”（不是IP地址）正确，因为最后一个数字大于255），IP正则表达式 将识别IP地址显然是正确的，但可能不需要：“244.7.245.26”。为了避免这个问题，我们可以在字节定义中关于少于三位数字节的部分断言之前添加否定值（\u0026lt;！Before \u0026hellip;\u0026gt;）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eoctet\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e25\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..5]\u0026gt;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# 250 à 255\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;[0..4]\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 200 à 249\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# 100 à 199\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;!\u003c/span\u003e\u003cspan class=\"n\"\u003ebefore\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 0 à 99 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003eip\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;octet\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e\u0026#39;.\u0026#39;\u003c/span\u003e \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e同样，简单IP地址的情况非常简单，我们可能不用编写语法，因为上面的正则表达式的组合基本上就足够了。\u003c/p\u003e\n\u003cp\u003e但为什么我们要避免语法的定义呢？编写和使用语法并不复杂（只要你习惯了），而不是组装一系列命名规则，并且可以更容易地将语法扩展到其他元素，例如URL。如有必要，这也将受益于与语法相关的额外优势（受限命名空间，继承，方法操作，.parse和.fileparse方法等）\u003c/p\u003e\n\u003ch3 id=\"4-2-5-识别url的-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-2-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e识别URL的 Grammar\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e解析URL的语法（相当基础）可以具有以下形式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eURL\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;schéma\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;://\u0026#39;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;ip\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;nom-domaine\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;:\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;port\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e]?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;chemin\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eoctet\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e256\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eip\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;octet\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\.\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;octet\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eschéma\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# Ce pourrait aussi être : [http | https | ftp | ...]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003enom\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003edomaine\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"o\"\u003e\\.\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003echemin\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"n\"\u003ez\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"n\"\u003eZ\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"o\"\u003e\\-\u003c/span\u003e\u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"o\"\u003e.!~*\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;():@\u0026amp;=+$,/ ]\u0026gt;+\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003emy $cible = URL.parse(\u0026#39;\u003c/span\u003e\u003cspan class=\"n\"\u003ehttp:\u003c/span\u003e\u003cspan class=\"sr\"\u003e//\u003c/span\u003e\u003cspan class=\"n\"\u003eraku\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eorg\u003c/span\u003e\u003cspan class=\"sr\"\u003e/documentation/\u003c/span\u003e\u003cspan class=\"err\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$cible\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;nom-domaine\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# -\u0026gt; raku.org\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"4-3-要匹配什么httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-3 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e要匹配什么？\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e通常，输入数据的格式没有明确指定，或者规范（如果存在）是程序员不知道的。对于预期的内容，相当自由或灵活通常是有用的，但仅限于没有模棱两可的风险。\u003c/p\u003e\n\u003cp\u003e如果我们以.ini文件为例：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[section]\nkey=value\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e部分标题中可以包含哪些内容？只允许一个单词可能限制太多，也许有人会写[两个单词]，或者使用破折号，或者只有上帝知道还有什么\u0026hellip;\u0026hellip;而不是问什么是允许的在此标题内，询问不允许的内容可能会有所帮助。\u003c/p\u003e\n\u003cp\u003e很明显，禁止关闭钩子，因为[a] b]至少可以说是模棱两可的。从同一观点来看，必须禁止开口钩。哪个可以给我们以下规则：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eentête\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果我们分析一行，这似乎运作良好。但如果我们处理整个文件，突然规则分析：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"n\"\u003eavec\u003c/span\u003e \u003cspan class=\"n\"\u003eun\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eretour\u003c/span\u003e \u003cspan class=\"n\"\u003eà\u003c/span\u003e \u003cspan class=\"n\"\u003ela\u003c/span\u003e \u003cspan class=\"n\"\u003eligne\u003c/span\u003e \u003cspan class=\"n\"\u003eentre\u003c/span\u003e \u003cspan class=\"n\"\u003edeux\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e作为一个正确的标题，这可能不是一个好主意。务实的妥协可能是写：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eentête\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;+\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然后，在后处理中，消除空格，制表符等。在节标题的开头和结尾处。\u003c/p\u003e\n\u003ch2 id=\"4-4-匹配空白httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-4 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e匹配空白\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e副词：sigspace（或使用规则，而不是正则表达式或令牌）对于分析可能出现在多个位置的空间非常有用。\u003c/p\u003e\n\u003cp\u003e如果我们回到ini文件分析的例子，规则可以是：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;clef=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这原则上有效，但可能不像人们希望的那样灵活。由于用户可以决定在等号周围放置空格，可能应该是：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eregex\u003c/span\u003e \u003cspan class=\"n\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;clef=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这很快就会变得不切实际。所以我们可以尝试使用规则而不是正则表达式并写：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;clef=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但要小心！在值消耗所有可用空间（包括换行符）后隐式匹配空格，因此\\ n + final无法匹配。并且通常禁用回溯，它不起作用。\u003c/p\u003e\n\u003cp\u003e这是将隐式空间重新定义为输入格式中不重要的空间非常有用的地方，这可以通过重新定义ws 令牌 来完成（但它只能起作用） \u0026lsquo;语法内部）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eIniFormat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;!ww\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eentête\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;[\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eidentifiant\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;clef=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;=\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;val=identifiant\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003esection\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;entête\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;kvpair\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"sr\"\u003e\u0026lt;section\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Exemple de fichier ini dans un document \u0026#34;ici même\u0026#34; :\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$contenu\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eq:to\u003c/span\u003e\u003cspan class=\"sr\"\u003e/FIN_INI/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003epasswords\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ejean\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003emdp1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eanne\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"n\"\u003eplusfiable123\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003equotas\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003ejean\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e123\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003eanne\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eFIN_INI\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eso\u003c/span\u003e \u003cspan class=\"n\"\u003eIniFormat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$contenu\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了把所有的正则表达式语法，使他们成为的想法令牌或规则（正则表达式，因为这些不需要反正回溯），以及有趣的新点定义如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003ews\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;!ww\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eh\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在隐式空间分析期间调用。它匹配零个或多个不在单词类型的两个字符之间的水平空格（\u0026lt;！Ww\u0026gt;，否定单词中的断言“）。对水平空间的限制是必要的，因为换行符（它们是垂直空格）界定了记录，因此不应该隐式匹配为仅仅空格。\u003c/p\u003e\n\u003cp\u003e弯道周围的空间可能仍然存在问题。正则表达式\\ n +将无法匹配字符串，例如\\ n \\ n，因为两个换行符之间有一个空格。要匹配这种输入字符串，可以用 \\ n \\ s *替换 \\ n +。\u003c/p\u003e\n\u003ch2 id=\"4-5-避免递归左陷阱httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-5 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e避免递归左陷阱\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e所谓的左递归（递归或左），其中如果规则称自己年初模式，不一定消耗分析系统的字符语法可能进入无限循环的情况下（例如，因为像？或*这样的量化器允许匹配空字符串。\u003c/p\u003e\n\u003cp\u003e例如，请考虑以下规则：\u003c/p\u003e\n\u003cp\u003e避免\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;x\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;x\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有人可能认为这个规则等同于x +模式，但事实并非如此，这个规则将进入无限递归，因为量词？允许它匹配一个空字符串，然后在递归调用自身时不消耗已解析字符串的元素。\u003c/p\u003e\n\u003cp\u003e要避免此陷阱，必须确保每个递归调用使正则表达式引擎的光标前进至少一个字符。\u003c/p\u003e\n\u003cp\u003e在间接递归的情况下也可能出现左递归情况：例如，如果规则\u003c!-- raw HTML omitted --\u003e调用规则\u003c!-- raw HTML omitted --\u003e，它本身调用规则\u003c!-- raw HTML omitted --\u003e，并且规则\u003c!-- raw HTML omitted --\u003e调用反过来规则\u003c!-- raw HTML omitted --\u003e：如果某些字符串可能发生三个规则都不会消耗字符，那么我们再次冒险进入无限递归循环。同样，游行是为了保证这三个规则中至少有一个消耗链中的至少一个字符。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-8\"\u003e3.8\u003c/a\u003e节中计算器的语法  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-8\"\u003e。\u003c/a\u003e提出这种间接递归。例如，你可以使用以下规则调用序列找到自己：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"err\"\u003e→\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e \u003cspan class=\"err\"\u003e→\u003c/span\u003e \u003cspan class=\"n\"\u003eterme\u003c/span\u003e \u003cspan class=\"err\"\u003e→\u003c/span\u003e \u003cspan class=\"n\"\u003eatome\u003c/span\u003e \u003cspan class=\"err\"\u003e→\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparenth\u003c/span\u003e \u003cspan class=\"err\"\u003e→\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e \u003cspan class=\"err\"\u003e…\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中expr规则本身是间接调用的。\u003c/p\u003e\n\u003cp\u003e但是在这个语法中没有无限递归的风险，因为这个递归链中的一个规则在它可以调用下一个字符串之前在解析后的字符串中消耗至少一个字符; 更确切地说，规则expr-parenth  ：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003eexpr\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eparenth\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;(\u0026#39;\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;expr\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;)\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在调用递归expr之前，必须使用已解析字符串的左括号。\u003c/p\u003e\n\u003ch2 id=\"4-6-调试正则表达式或raku-grammarhttpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e4-6 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e调试正则表达式或Raku Grammar\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e当你开始学习编程时，你会因为愚蠢的小错误而浪费很多时间。凭借经验，你可以学会减少错误并编写更快的代码。\u003c/p\u003e\n\u003cp\u003e随着语法（以及更普遍的正则表达式），一切似乎都重新开始：即使是有经验的程序员在处理语法时也会开始犯愚蠢的错误。编写正则表达式以及更多的语法与开发普通程序程序没有太大关系，需要一个新的学习阶段。\u003c/p\u003e\n\u003cp\u003e以下是一些帮助编写和调试语法的方法（部分加入了上面已经给出的一些提示）：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e**小规模地继续，**按规则统治，并在你去的时候测试规则;\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e单独测试规则\u003c/strong\u003e  ：如果你的语法不起作用，请逐个测试每个规则以确定规则是错误的，错误命名（或从未调用过），等等。：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eMaGrammaire\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;commentaire\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;truc\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"err\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003ecommentaire\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003e\u0026#39;#\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"vg\"\u003e$$\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003etruc\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e^^\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eS\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\\=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eS\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"vg\"\u003e$$\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Essayer de parser l\u0026#39;ensemble:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"n\"\u003eMaGrammaire\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;#commentaire\\ntoto = titi\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# La grammaire ne reconnaît pas le test, voyons les règles une à une\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"n\"\u003eMaGrammaire\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;#commentaire\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;commentaire\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 1 - OK\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"n\"\u003eMaGrammaire\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;toto = titi\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;truc\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# 0 - KO\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# C\u0026#39;est la règle \u0026lt;truc\u0026gt; qui ne fonctionne pas.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e插入显示\u003c/strong\u003e（打印或说）; 只需将它们放在大括号中，这些显示就可以作为普通代码运行（参见  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L3-4-2\"\u003e3.4.2。\u003c/a\u003e）。让我们回到上一个我们到达的例子（\u003ccode\u003e\u0026lt;trick\u0026gt;\u003c/code\u003e规则不起作用）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003egrammar\u003c/span\u003e \u003cspan class=\"n\"\u003eMaGrammaire\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etoken\u003c/span\u003e \u003cspan class=\"n\"\u003etruc\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;truc: appelé\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e^^\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;truc: trouvé début de ligne\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eS\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;truc: trouvé premier identifiant: $0\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\\=\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;truc: trouvé =\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e\\\u003c/span\u003e\u003cspan class=\"n\"\u003eS\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"vg\"\u003e$$\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e?\u003c/span\u003e\u003cspan class=\"n\"\u003eMaGrammaire\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;toto = titi\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026lt;truc\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Affichage:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# truc: appelé\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# truc: trouvé début de ligne\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# truc: trouvé premier identifiant: toto\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# C\u0026#39;est le signe égal qui n\u0026#39;est pas reconnu. Pourquoi? À cause\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# de l\u0026#39;espace qui le précède et qui n\u0026#39;est pas dans la règle. Il\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# suffit par exemple de transformer le token en rule\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e注意回溯\u003c/strong\u003e ：许多习惯于Perl 5或相关正则表达式系统的程序员都熟悉回溯的使用，非常自然且非常强大，只需要简单的正则表达式。但是在嵌套语法（甚至是一组正则表达式）中很难掌握回溯。大多数词汇和句法问题都可以用不需要（或很少）回溯的方式来表达，因此强烈建议避免在语法中回溯，以及有效性的原因只是作为开发者心理健康的保障。也就是说，使用退格键更容易编写一些模式; 如果你使用它们，请务必将范围限制为唯一需要的正则表达式，\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003erule\u003c/span\u003e \u003cspan class=\"n\"\u003everbatim\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003e\u0026#39;[%\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;%]\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003everbatim\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Autorise le retour arrière à partir d\u0026#39;ici seulement\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"n\"\u003eratchet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.*\u003c/span\u003e\u003cspan class=\"p\"\u003e?\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;[%\u0026#39;\u003c/span\u003e \u003cspan class=\"n\"\u003eendverbatim\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;%]\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Le retour arrière sera activé dans la regex finale, mais, dès \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# qu\u0026#39;une reconnaissance aura été trouvée, on n\u0026#39;en essaiera pas d\u0026#39;autre\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e最后，让我们提一下 Jonathan Worthington 在 Rakudo/Raku 下的\u003cstrong\u003e优秀\u003c/strong\u003e\u003ca href=\"https://github.com/jnthn/grammar-debugger/\"\u003e语法和正则表达式调试\u003c/a\u003e\u003cstrong\u003e模块\u003c/strong\u003e。添加一个使用 Regex::Tracer; 在你的代码中，词法范围内的所有语法都会显示颜色详细的调试信息，特别显示调用哪些规则，哪些规则有效以及哪些规则失败。 \u003ca href=\"https://rakuadvent.wordpress.com/2011/12/02/grammartracer-and-grammardebugger/\"\u003eAdvent Calendar Raku\u003c/a\u003e提供了示例和更多详细信息。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e本节中的信息  \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-6\"\u003e4.6 \u003c/a\u003e \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L4-6\"\u003e调试正则表达式或Raku语法\u003c/a\u003e基本上是基于 Moritz Lenz的\u003ca href=\"http://perlgeek.de/en/article/debug-a-perl-6-grammar\"\u003e如何调试Raku语法\u003c/a\u003e。\u003c/p\u003e\n\u003ch1 id=\"5-结论httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e5. \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e结论\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e正则表达式和Raku级的语法是远不是唯一的新的Raku，但他们对自己的完全新的机会开放，既为文字记录功能丰富度分析语言的表现力和可扩展性。我们很可能会发现，经验使用很难在今天进行思考。在我们看来，语法是应该使Raku成为一种语言的一部分，这种语言将在20年或更长时间内保持坚定的现代性。\u003c/p\u003e\n\u003ch1 id=\"6-另见来源httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e6. \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e另见/来源\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e关于Raku的文档取得了相当大的进展，但有时仍然不完整。\u003c/p\u003e\n\u003cp\u003e章\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2\"\u003e2\u003c/a\u003e。 \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#L2\"\u003ePerl的正则表达式6\u003c/a\u003e这份文件在很大程度上是官方文档的法国适应\u003ca href=\"http://doc.raku.org/language/regexes\"\u003e的正则表达式\u003c/a\u003e（匿名者），这是我们添加了来自下面的Raku次的测试中，信息剧情简介 \u003ca href=\"http://design.raku.org/S05.html\"\u003eS05\u003c/a\u003e和一些官方文档的其他外围文档，此处和那里找到的文章以及个人实验产生的元素。\u003c/p\u003e\n\u003cp\u003e当我们最初撰写本文档时，官方英语语法文档（\u003ca href=\"http://doc.raku.org/language/grammars\"\u003eGrammars\u003c/a\u003e）在当时（2015年底）非常不完整。在2018年，情况现在好多了。\u003c/p\u003e\n\u003cp\u003e在我们发布本文档的第一个版本时，毫无疑问是关于该主题的最完整的文档，无论是法语还是英语。在这种情况下，我们将此文档置于知识共享许可 “署名CC BY”下，以授权（甚至鼓励）任何想要自由恢复内容的人，同时希望尽可能引用来源及其作者。即使导致我们做出这种选择的情况不再具有真正的相关性（官方文档已经说过，我们已经说过，已经有了很大的改进），我们认为没有理由改变我们的想法和因此，我们保留此知识共享许可证 “Attribution CC BY”。\u003c/p\u003e\n\u003cp\u003e与我们在2015年撰写本文档的第一版时相比，另一个重大变化是2017年在Raku上发布了大量的六本书，从我自己的书，Think Raku - 如何像计算机科学家一样思考（450页，O\u0026rsquo;Reilly，2017年5月），可以\u003ca href=\"https://greenteapress.com/wp/think-perl-6/\"\u003e电子\u003c/a\u003e格式\u003ca href=\"https://greenteapress.com/wp/think-perl-6/\"\u003e免费\u003c/a\u003e打印和\u003ca href=\"https://greenteapress.com/wp/think-perl-6/\"\u003e下载\u003c/a\u003e。在2018年，这本书已被Luis F. Uceta翻译成西班牙语，可以免费下载：\u003ca href=\"https://uzluisf.gitlab.io/piensaraku/\"\u003ePiensa en Raku\u003c/a\u003e。在我们写这些专栏的那天（2018年10月底），这本书已经完全翻译，但它仍在等待最后的重读。\u003c/p\u003e\n\u003cp\u003e其中一个新的书，发表在2017年12月，是专门讨论正则表达式和语法：用Raku的正则表达式和语法解析-一个递归下降到解析，莫里茨伦茨（215页，Apress出版）。我只能非常热情地向所有希望深化这一主题的人推荐这本优秀的书籍。\u003c/p\u003e\n\u003ch1 id=\"7-致谢httpslaurent-rosenfelddeveloppezcomtutorielsperlrakuregex-grammaire-puissanceutm_sourcedlvritutm_mediumtwitter\"\u003e7. \u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/regex-grammaire-puissance/?utm_source=dlvr.it\u0026amp;utm_medium=twitter#\"\u003e致谢\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e我感谢\u003ca href=\"http://doc.raku.org/\"\u003e官方Raku文档\u003c/a\u003e的匿名作者，\u003ca href=\"http://doc.raku.org/\"\u003e本文档的\u003c/a\u003e某些部分部分是法语的免费改编。\u003c/p\u003e\n\u003cp\u003e我感谢\u003ca href=\"http://www.developpez.net/forums/u35657/djibril/\"\u003eDjibril\u003c/a\u003e，\u003ca href=\"http://www.developpez.net/forums/u471763/roland-chastain/\"\u003eRoland Chastain\u003c/a\u003e，\u003ca href=\"http://www.developpez.net/forums/u124512/claudeleloup/\"\u003eClaude Leloup\u003c/a\u003e和\u003ca href=\"http://www.developpez.net/forums/u940069/cognominal/\"\u003eCognominal\u003c/a\u003e的校对以及他们非常有用的改进建议。还要感谢\u003ca href=\"https://www.developpez.net/forums/u293449/cosmoknacki/\"\u003eCosmoKnacki\u003c/a\u003e和\u003ca href=\"https://www.developpez.net/forums/u970486/pyramidev/\"\u003ePyramidev\u003c/a\u003e，他们在出版后亲切地报道了一些 bug。\u003c/p\u003e\n\u003cp\u003e除了 Developpez.com 还有如下教程可供参考:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-bases/\"\u003ePerl 5到Raku-第1部分：基础知识\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/les-nouveautes/\"\u003ePerl 5到Raku - 第2部分：最新消息\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/approfondissements/\"\u003ePerl 5到Raku：深入\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/annexe-01/\"\u003ePerl 5到Raku - 附录1：Perl 5和Raku之间有什么变化\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/annexe-02/\"\u003ePerl 5到Raku - 附录2：Raku中的新功能\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://laurent-rosenfeld.developpez.com/tutoriels/perl/raku/objets/\"\u003eRaku中的对象，类和角色 - 面向对象的编程教程\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://naoumhankache.developpez.com/tutoriels/raku/rakuintro/\"\u003eRaku简介 - Naoum Hankache和Romuald Nuguet的教程\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","text":"前所未有的表现力 Perl 5 正则表达式的强大功能使该语言成为分析文本数据的首选工具。从那时起，许多其他编程语言都复制了 Perl 的正则表达式，这部分地削弱了 Perl 在该领域中优于其他语言的优势。\n从 Perl 5 派生的新 Raku 语言创建了一个新的文本匹配模型，该模型源自正则表达式，但功能强大且富有表现力，并且从常规正则表达式中删除它已决定给它们一个新名称，正则表达式。\n不仅 Perl 的正则表达式6的机理是它大大高于现有的所有系统的正则表达式更强大，但它被设计成正则表达式相结合，构建 Grammar 语境，也就是说能够实现词汇和语法分析（系统词法和解析）到更复杂的数据，例如 HTML 文本，XML，XHTML，JSON，YAML，其中，不包括简单的情形，都超出正则表达式的范围。这些 Grammar 甚至可以分析所有级别的计算机程序。Raku 程序本身是用 Raku 自己编写的 Grammar 编译的。\n虽然它们远不是 Raku 的唯一创新，但我们相信 Raku 正则表达式和 Grammar 将至少与 Perl 的正则表达式一样彻底改变计算机语言，甚至可能更多。他们现在还没有时间这样做。\n本教程的讨论在 Perl 论坛上公开，地址如下： 评论\n笔者 劳伦特罗森菲尔德\n文章 发表于 2015年11月6日 - 更新于2018年 11月4日\nPDF, 版离线版, ePub, Azw, Mobi\n社交链接 1. 正则表达式入门 在正则表达式（或正则表达式）从数学和将字符串通常已知的形式语言的计算机科学理论概念模式（或模式）来描述一个整体（成品或不）字符串由模式定义的共同特征，根据预定义的语法并且不考虑上下文。的图案（匹配图案匹配）是应用这些模式到文本的样本，以试图找到对应于这些模式的文本片段的过程。\n在你的计算机上安装Raku\n如果你想使用 Raku，我们建议你在此地址下载 Rakudo Star。有关安装的更多信息，请参阅Perl 5到Raku教程的第一部分- 第1部分：语言基础知识。\n在我们更新本文档（2018年10月）时，建议你选择 MoarVM 虚拟机。\n1-1 与文件搜索类比 要在目录中搜索名称以字母 “a” 开头且扩展名为 .txt 的所有文件，可以在系统的提示符下写入：\nls a*.txt # shell Unix, Linux, etc. # ou : dir a*.txt # console DOS/cmd ou Powershell Windows, VMS, etc. 使用的命令名称（ls或dir）因操作系统而异，但此处使用的原因相同：a*.txt。更确切地说，它意味着字母 “a”，后跟任意数量的字符，后跟字符串 “.txt ”。\n使用的命令将在屏幕上显示当前目录中名称与模式 a*.txt 相关的所有文件 。过滤文件的名称在目录（或这样夹有图案 DOS/Windows 的术语）是正则表达式的工作原理：该模式所描述的，一般由左到右，一系列的元素必须在目标字符串中遇到（这里是文件名）：首先是字母 “a”，然后是任何字符，然后是字符串 “.txt”。\n类比结束于此，因为编程语言中常用的正则表达式的语法赋予元字符 “*” 不同的含义（见第2.4节 ）。\n1-2 正则表达式简史 正则表达式的使用是在1970年由计算机科学家 Ken Thompson，UNIX 的创作者第一个实现的，在 QED 和 ED 编辑器中（其很少使用）和 Unix 命令 grep，现在还很常用。\n例如，在 Unix 或 Linux上，以下 grep 命令显示 text.txt 文件中包含字母“ab”的所有行，后跟任何字符，后跟字母“d”：\n$\u0026gt; grep ab.d texte.txt 在ab.d中，元字符 \u0026ldquo;.\u0026rdquo; 表示“任何单个字符”，上面的命令可以显示文件的以下行：\nabcd abvd ... ... abyd ... xyabcdz ... xyab3dgh 现在仍在广泛使用的其他使用正则表达式的 Unix 实用程序也快速出现了：sed，vi，awk， lex，emacs，egrep 等。\nPerl 语言（Perl 1出现于1987年12月）可能是第一个通用编程语言（除了awk，它不是通用语言，并且非常特别）具有集成的正则表达式，随后其它语言跟随。\n很快，Perl（尤其是自1994年以来的Perl 5）大大扩展了它的正则表达式，以至于他们早已不再是严格意义上的“常规”或“理性”，而是提供另一方面，由于它们被许多编程语言（如Tcl，Python，PHP，Ruby，.NET，Java，JavaScript，Delphi等）复制而增加了表现力。Perl 5 对这些语言的影响是这样的，他们大多使用一种叫做“Perl兼容的正则表达式”（PCRE）库：简而言之，吸引用户，有必要强调的事实，提出的解决方案遵循 Perl 的“扩展正则表达式”的语法。\n1-3 Raku 正则表达式的新功能 使用 Raku 时，正则表达式总是使用从模式的左到右相同的渐进式匹配方法，但它们更不规则（严格意义上是原始的非上下文形式语言）并且甚至比那些更强大从Perl 5开始，所以决定放弃术语“正则表达式”来引用它们并将它们命名为正则表达式。随着时间的推移添加新功能最终使 Perl 的正则表达式语法有些蓬松，这在很大程度上是因为 Perl 5 一直专注于尽可能保持向后兼容。\nRaku 的正则表达式不再是 Perl 5 的正则表达式\nPerl 的正则表达式（尤其是Perl 5）已经显着影响了许多其他编程语言，以至于它们已成为事实上通常采用的标准（由PCRE库证明）。\n注意，虽然他们保持清晰的相似性，Raku 的正则表达式重新制作，不再遵循 Perl 5 建立的标准。这种重新设计使它们更清晰，最重要的是更强大。因此，与PCRE不同，Raku 的正则表达式与 Perl 5 的正则表达式不兼容。\n未来将告诉我们这个彻底打破常规的决定是否会被其他语言所遵循，以及 Raku 正则表达式是否会成为事实上的标准。我们认为 Raku 值得。\n注意 ：但是，可以在 Raku 程序中使用副词 :P5 或 :Perl5 以使用 Perl 5 正则表达式语法（参见 2.9.1.3。）。然后我们找到与Perl 5兼容的正则表达式。\nRaku 决定成为一种新语言并放弃这种向后兼容的要求，它允许相当深入地重写正则表达式的语言，使其大大扩展并使其更加连贯和合乎逻辑。\n此外，下面的许多示例将显示如何构建简单的正则表达式并给正则表达式起个名字，以便它们可以像组装块一样组装成模式。越研究就越复杂。例如，IPv4 地址由四个字节组成（通常由十进制表示的四个整数表示，在0到255之间，由点号分隔）。这是很容易编写的第一个 Raku 正则表达式，因为这样的被称为字节，并检查它具有令人满意的数量在适当的条件，则装配一个新的正则表达式匹配那些字节四个，用点号分隔（见第4.2.4节)\n但是，Raku 正则表达式带来的真正革命是它们可以构建更强大的实体，即 Grammar（见 §3）。Grammar 是定义语法的形式主义，因此也是一种形式语言。在 Raku 中，它采用一组规则的形式，并命名为正则表达式，并允许逐步构建一个文本匹配系统，其结构远远少于正则表达式所能匹配的结构（甚至扩展）因此，Grammar 允许对文本进行词法和句法分析，例如计算机程序的源代码，以便编译它。Raku 有自己的 Raku Grammar，用 Raku编写。\n正则表达式有时被认为是抽象的，难以理解。正则表达式使用简单的概念是比较难比的条件，了解构造，如果和循环，同时或为Perl语言本身。事实上，学习正则表达式的真正挑战在于理解通常用于表达这些概念的非常简洁，甚至是简洁的符号。事实上，Raku 通过提供插入空格，注释等能力，可以大大简化对正则表达式的理解。总是可以继续编写正则表达式非常简洁，有时候有点难以破译，有时候对于简单的问题就足够了，但没有人有义务。在本文档末尾附近格式化代码一章的示例中，显而易见。\n1-4 与正则表达式相关联的功能和方法 虽然这不是本教程的主题，但使用正则表达式之前简要回顾一些 Raku 运算符很有用。\n在 Raku 中，基体操作者检查的字符串是否匹配的模式是操作员~~智能匹配（智能操作者匹配）。例如：\nsay \u0026#34;Reconnu\u0026#34; if \u0026#34;abcdef\u0026#34; ~~ /ab.d/; # -\u0026gt; Affiche : Reconnu 这里，要解析的字符串是“abcdef”和正则表达式/ab.d/的模式。动机得到认可，因为人们可以在动机的四个原子之间建立对应关系（点“ 。 ”匹配一个任意的角色，因此，在这里，它匹配“c”）和角色链的一部分; 该模式描述了链的这一部分。当然，/ ab.d /模式也会匹配出例如字符串“ abwd ef”，“ ab7d ef”或“su abZd a”。\n需要注意的是智能匹配的操作~~这里用来连接字符串，用于在Raku的许多其他事情正则表达式模式（例如检查的项目在数组中，或检查变量与类型的兼容性等），但这不是本文档的目的（参见例如 智能匹配操作员）。\n如果要解析的字符串存储在默认变量$ _中，则不需要存在智能匹配运算符，并且可以直接在布尔上下文中评估正则表达式：\nif / ^ab / { say \u0026#34;La chaîne $_ commence par les lettres \u0026#39;ab\u0026#39;\u0026#34;; } 可以使用智能匹配操作符的否定形式 !~~\nsay \u0026#34;Chaîne \u0026#39;ab\u0026#39; non trouvée\u0026#34; if \u0026#34;fedcba\u0026#34; !~~ /ab/; # -\u0026gt; Chaîne \u0026#39;ab\u0026#39; non-trouvée # Équivalent à : say \u0026#34;Chaîne \u0026#39;ab\u0026#39; non trouvée\u0026#34; unless \u0026#34;fedcba\u0026#34; ~~ /ab/; Raku 还允许使用 .match 这种面向对象的语法：\nsay \u0026#34;Reconnu\u0026#34; if \u0026#34;abdcef\u0026#34;.match(/c.f/); # -\u0026gt; Reconnu 正则表达式还允许你进行替换：\nmy $chaîne = \u0026#34;abcde\u0026#34;; $chaîne ~~ s/bc/CB/; say $chaîne; # -\u0026gt; affiche aCBde 还有一个 .subst 方法来执行替换（但不是就地替换 ///）：\nmy $chaîne = \u0026#34;abcde\u0026#34;; my $chaîne-modifiée = $chaîne.subst(/cd/, \u0026#34;DC\u0026#34;); # -\u0026gt; abDCe 但是，可以直接修改 $string 变量（不创建新变量），也可以将其放在赋值的左侧部分：\nmy $chaîne = \u0026#34;abcde\u0026#34;; $chaîne = $chaîne.subst(/cd/, \u0026#34;DC\u0026#34;) # -\u0026gt; abDCe .subst 方法的第一个参数可以是正则表达式或字符串。\nsplit 函数和 .split 方法按照分割符将字符串划分为子字符串列表, 其第一个参数也可以使用字符串或正则表达式：\nsay split(\u0026#39;;\u0026#39;, \u0026#34;a;b;c,d\u0026#34;).perl; # (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c,d\u0026#34;).Seq say split(/\\;/, \u0026#34;a;b;c,d\u0026#34;).perl; # (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c,d\u0026#34;).Seq say split(/\u0026lt;[;,]\u0026gt;/, \u0026#34;a;b;c,d\u0026#34;).perl; # (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;).Seq # Version syntaxe de méthode orientée objet : say \u0026#34;a;b;c,d\u0026#34;.split(/\u0026lt;[;,]\u0026gt;/).perl; # (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;).Seq comb 函数和 .comb 方法返回字符串上模式的匹配（贪婪）列表：\nsay join \u0026#34; \u0026#34;, comb /\\d+/, \u0026#34;jeu du 7, 14 et 21\u0026#34;; # -\u0026gt; 7 14 21 # syntaxe de méthode : say \u0026#34;3 fois 6 font 18\u0026#34;.comb(/\\d+/).join(\u0026#34; \u0026#34;); # -\u0026gt; 3 6 18 在不特定于正则表达式的情况下，建立布尔条件的其他函数或方法可以使用正则表达式模式（或其他内容，例如数字比较）来定义此条件。因此，函数 first 返回满足条件的列表的第一个元素，函数 grep 返回满足条件的列表的所有元素，正则表达式可写为：\nsay first /ma/, \u0026lt;jan fév mar avr mai\u0026gt;; # -\u0026gt; mar say grep /ma/, \u0026lt;jan fév mar avr mai\u0026gt;; # -\u0026gt; (mar mai) say \u0026lt;jan fév mar avr mai\u0026gt;.grep(/v/); # -\u0026gt; (fév avr) given-when构造（Raku 的“switch”）也经常使用正则表达式：\nmy $var = \u0026#39;42\u0026#39;; given $var { when /^4/ { say \u0026#34;Commence par \u0026#39;4\u0026#39;\u0026#34;; proceed}; when /2$/ { say \u0026#34;Finit par \u0026#39;2\u0026#39;\u0026#34;; proceed}; when /^42$/ { say \u0026#34;Réponse à la Grande Question sur l\u0026#39;Univers\u0026#34; } } 2. Raku的正则表达式 2-1 惯用法 Raku 提供了以下用于编写正则表达式的语法结构：\nm/abc/; # 立即应用于 $_ 的正则表达式 rx/abc/; # Regex 类型的正则表达式对象 /abc/; # Regex 类型的正则表达式对象 前两个语法可以使用除斜杠之外的其他分隔符：\nm{abc}; # 或者 m[abc]; rx{abc}; # 或者 rx!abc!; 但请注意，冒号（“:”）不能用作正则表达式的分隔符。普通括号 \u0026ldquo;( \u0026quot; 和 \u0026ldquo;)\u0026rdquo; 只能作为分隔符，如果左括号由前面的rx 运算符的至少一个空格分隔（这是 Raku 的一般规则：括号前面标识符旁边的开头被分析为函数调用的开头）：\nmy $regex = rx(toto); # 错误，解释为函数调用 my $regex = rx (toto); # OK 通常，默认情况下会忽略模式中的空格，除非使用（显式或隐式）副词 :s 或 :sigspace，请参见第2.9.1.2节 （下文）。\nsay \u0026#34;Reconnu\u0026#34; if \u0026#34;abc\u0026#34; ~~ /a b c /; # -\u0026gt; \u0026#34;Reconnu\u0026#34; 正如在 Raku 的注释，注释通常以 # 字符开始（通常称为字符英镑错误，英镑是不同的：“ ♯ ‘），除非蜘蛛被转义字符保护’ \\“，并转到行的末尾（除非括号用作分隔符，在这种情况下，最好不要尝试将其用作注释开始字符）。多行注释也是可能的。\n# Commentaires unilignes : my $regex = rx { abc # chaîne littérale \u0026#39;abc\u0026#39; \\d # suivie d\u0026#39;un chiffre \\w # puis d\u0026#39;un caractère alphanumérique. }; # Commentaire multiligne : my $regex = rx { abc \\d \\w #`[ chaîne littérale \u0026#39;abc\u0026#39; suivie d\u0026#39;un chiffre puis d\u0026#39;un caractère alphanumérique quelconque. ] }; say \u0026#34;Reconnu\u0026#34; if \u0026#34;XYabc6QUVW\u0026#34; ~~ /\u0026lt;$regex\u0026gt;/; # reconnaît \u0026#39;abc6Q\u0026#39; 2-2 字面量 正则表达式的匹配模式的最简单情况是常量字符串。在这种情况下，匹配模式是将模式作为字符串的子字符串查找：\nmy $chaîne = \u0026#34;Esperluette est le nom parfois donné au signe \u0026amp;\u0026#34;; if $chaîne ~~ m/ perl / { say \u0026#39;$chaîne contient \u0026#34;perl\u0026#34;\u0026#39;; # -\u0026gt; $chaîne contient \u0026#34;perl\u0026#34; } 所有字母数字字符（Unicode）和带下划线或下划线的字符（“ _ ”）都是字面匹配。所有其他字符（标点符号，符号等）必须由反斜杠转义字符（“ \\ ”）保护或引用单引号（或单引号）：\n/ \u0026#39;deux mots\u0026#39; / # reconnaît \u0026#39;deux mots\u0026#39;, espace blanc compris / \u0026#34;a:b\u0026#34; / # reconnaît \u0026#39;a:b\u0026#39;, caractère deux-points compris / \u0026#39;#\u0026#39; / # reconnaît le caractère croisillon (ou hash) /moi\\@gmail\\.com/ # échappements pour protéger l\u0026#39;@ et le . /\u0026#39;moi@gmail.com\u0026#39;/ # équivalent à : /moi\\@gmail\\.com/ 当受转义字符保护时，字母数字字符通常具有特定含义：例如，元字符\\ d表示可以表示任意数字（Unicode）的字符类; 稍后将给出许多例子（特别是在第2.3.1节中 ）。\n从左到右搜索字符串，因此，例如，子字符串等于模式：\nif \u0026#39;abcdefg\u0026#39; ~~ / de / { say ~$/; # de -\u0026gt; motif reconnu say $/.prematch; # abc -\u0026gt; ce qui précède le motif reconnu say $/.postmatch; # fg -\u0026gt; ce qui suit le motif reconnu say $/.from; # 3 -\u0026gt; position du début de la reconnaissance say $/.to; # 5 -\u0026gt; position de ce qui suit la reconnaissance }; 匹配结果存储在变量$ /中（表示匹配对象，即使英文单词有时也意味着“ 匹配类型的对象”，它将在本文档中被“匹配对象”翻译 ），以及也通过承认来提及。如果匹配成功，则结果为Match类型，否则为Nil。\n2-3 元字符和字符类 甲字符类是不能匹配的单个特定的字符正则表达式语法元素，但一个字符属于范围可能与共同的特征的字符（例如匹配任何数字0至9，或任何小写字母字符）。\n点（“ 。 ”）匹配任何简单字符（除非前面有转义字符，在这种情况下它匹配文字点）：\n\u0026#39;perl\u0026#39; ~~ /per./; # Reconnaît toute la chaîne \u0026#39;perl\u0026#39; ~~ / per . /; # Idem (espaces blancs ignorés); \u0026#39;perl\u0026#39; ~~ / pe.l /; # Idem: le . reconnaît le r \u0026#39;Épelle\u0026#39; ~~ / pe.l/; # Idem: le . reconnaît le premier l \u0026#39;perl\u0026#39; ~~ /. per / # Pas de reconnaissance: # le . ne reconnaît rien avant la chaîne per 与Perl 5和许多其正则表达式系统派生自Perl 5的语言不同，点也始终匹配换行符。\n2-3-1 转义字符和预定义的字符类 反斜杠（或反斜杠）形式的预定义字符类后跟一个字母，例如\\ w。如果字母是大写的（\\ W），则它是对应于相同小写字母的字符类的否定（即\\ W识别\\ w无法匹配的任何字符）：\n字母数字字母（字母，数字和_）：\\ w（补码：\\ W）; 匹配例如一个，Ç，Ž，7个字符的Unicode 0041甲LATIN CAPITAL LETTER甲，0031 1一个数字，03B4δGREEK小写字母DELTA或0409ЉCYRILLIC CAPITAL LETTER LJE）; 数字字符 ：\\ d，和\\ d（以Unicode意义上，不只是我们的阿拉伯数字单位数字：例如，U + 0E53 3 DIGIT三泰（泰图3）是由\\ d识别）; 水平空间 l：\\ h和\\ H（白色空格，制表符，U + 00A0 NO-BREAK SPACE）; 垂直空间 ：\\ n和\\ N; 空间（水平或垂直） ：\\ s和\\ S ; 例如，在字符串\u0026rsquo;包含以m开头的单词\u0026rsquo;中，表达式/ m \\ S + /匹配\u0026rsquo;word\u0026rsquo;。 制表（U + 0009）：\\ t和\\ T ; 垂直空间 ：\\ v和\\ V（例如U + 000A LINE FEED，U + 000C CARRIAGE RETURN等）。 2-3-2 Unicode属性 上面看到的字符类对常见情况很有用。Unicode 属性的使用允许更系统和更精细的方法。调用语法的格式为 \u0026lt;:property\u0026gt;，其中 “property” 可以是 Unicode 属性的短名称或长名称。Unicode 属性本身的确切含义不是由Perl 定义的，而是由 Unicode 标准定义的。\n以下是最常见的Unicode属性列表：\n简称 长名 意思和评论 L Letter 字母 LC Cased_Letter 带大小写的字母（区分大小写） Lu Upper_Cased_Letter或Upper 大写字母（大写） Ll Lower_Cased_Letter或Lower 小写字母（小写） N Number 数字 Nd Decimal_Number或数字 十进制数（数字） Nl LETTER_NUMBER 号码信 P Punctuation or punct 标点符号 Pd Dash_Punctuation 标点符号类型破折号 Ps Open_Punctuation 打开标点符号 Pe Close_Punctuation 结束标点符号 S Symbol 符号 Sm Math_Symbol 数学符号 Sc CURRENCY_SYMBOL 货币符号（例如$，£或€） Z Separator 分隔符 Zs SPACE_SEPARATOR 空白分隔符 Zl LINE_SEPARATOR 行分隔符 Zp Paragraph_Separator 段落分隔符 例如，\u0026lt;:Lu\u0026gt; 匹配单个大写字母。\n使用 \u0026lt;:!property\u0026gt; 形式获取否定的 Unicode 属性，例如 \u0026lt;:!Lu\u0026gt; 将匹配任何不是大写字母的单个字符。\n可以使用以下固定运算符组合多个属性：\n操作者 意 备注 + 设置联盟 或属性之间的逻辑（金） | 设置联盟 或属性之间的逻辑（金） ＆ 设置交叉点 和属性之间的逻辑（和） - 设定差异 拥有第一个属性而不是第二个属性 ^ 交点对称集 或属性之间的独占逻辑（XOR） 例如，要匹配小写字母或数字，可以写入：\u0026lt;：Ll +：N\u0026gt;或\u0026lt;：Ll +：Number\u0026gt;或甚至\u0026lt;+：Lowercase_Letter +：Number\u0026gt;。\n也可以使用括号对类别和类别组进行分组，例如：\n\u0026#39;raku\u0026#39; ~~ m{\\w+(\u0026lt;:Ll+:N\u0026gt;)} # 0 =\u0026gt; ｢6｣ 2-3-3 枚举的字符类和间隔 有时，元字符和预定义的字符类是不够的。幸运的是，通过放置\u0026lt;[\u0026hellip;]\u0026gt;任意数量的字符和字符间隔（在这些间隔的边界之间有两个点“ .. ”）来定义一个人自己的字符类很容易，或者没有空格：\n\u0026#34;abacabadabacaba\u0026#34; ~~ / \u0026lt;[ a .. d 1 2 3 ]\u0026gt; / # Vrai 可以在\u0026lt;\u0026hellip;\u0026gt;中使用与Unicode类别（+，|，＆，-，^）相同的运算符来组合多个区间定义，甚至可以将它们与上面的Unicode类别; 我们也可以在括号中使用用反斜杠定义的字符类：/ \u0026lt;[\\ d] - [13579]\u0026gt; /，顺便说一下，它与/ \u0026lt;[02468]不同。 \u0026gt; /，因为第一个也匹配非阿拉伯数字。\n在开放的V形符号之后用“ - ”符号获得这类字符的否定：\nsay \u0026#39;pas de guillemets\u0026#39; ~~ / \u0026lt;-[ \u0026#34; ]\u0026gt; + /; # reconnaît les caractères autres que \u0026#34; 解析用引号分隔的字符串，使用使用字符类否定的模式是很常见的：\nsay \u0026#39;entre guillemets\u0026#39; ~~ / \u0026#39;\u0026#34;\u0026#39; \u0026lt;-[ \u0026#34; ]\u0026gt; * \u0026#39;\u0026#34;\u0026#39;/; # un guillemet, suivi de non-guillemets, suivi d\u0026#39;un guillemet 2-4 量词 量化器使得有可能匹配，而不是一次，而是固定或可变次数，即它之前的原子。例如，量化器“ + ”试图匹配上述中的一个或多个。\n量化器具有比串联更高的优先级，因此/ ab + /匹配字母a后跟字母b的一倍或多倍。使用撇号反转情况：/\u0026lsquo;ab\u0026rsquo;+ /匹配字符串\u0026rsquo;ab\u0026rsquo;，\u0026lsquo;abab\u0026rsquo;\u0026lsquo;ababab\u0026rsquo;等。\n量词 意 注释或示例 + 一个或多个 匹配前面的原子一次或多次，没有上限 * 0次或更多次 例如，要在a和b之间允许一个或多个可选空格：/ a \\ s * b / ？ 0或1次 例如，对于单个可选字符 ** min..max min和max之间的任意次数 说Bool（\u0026lsquo;a\u0026rsquo;~~ / a ** 2..5 /）; ＃ - \u0026gt; 假说Bool（\u0026lsquo;aaa\u0026rsquo;~~ / a ** 2..5 /）; ＃ - \u0026gt;是的 ** 恰好n次 说Bool（\u0026lsquo;yyyy\u0026rsquo;~~ / a ** 5 /）; ＃ - \u0026gt; 假说Bool（\u0026lsquo;aaaaa\u0026rsquo;~~ / a ** 5 /）; ＃ - \u0026gt;是的 ％ 量化器修改 为了更容易使用CSV，应用于上述量词之一的％修饰符允许匹配指定重复确认之间必须存在的分隔符。例如：/ a +％\u0026rsquo;，\u0026rsquo;/匹配\u0026rsquo;a，a\u0026rsquo;或\u0026rsquo;a，a，a\u0026rsquo;等，但ni\u0026rsquo;a，\u0026rsquo;，ni\u0026rsquo;a，a，\u0026rsquo;。 2-4-1 量词的亲和力和节俭 默认情况下，+和*量化器是贪婪或贪婪的，也就是说，它们在链中寻找最长的匹配。例如：\nsay ~$/ if \u0026#39;aabaababa\u0026#39; ~~ / .+ b /; # -\u0026gt; aabaabab 在这里，子正则表达式。+搜索的任何字符，最长的可能字符串尚未承认正则表达式的其余部分，即原子b，这可能是目标。但经常发生这是初学者的错误，而且目标是匹配“任何角色直到第一个b ”。在这种情况下，优选使用量词非贪婪（或“节俭”），得到通过用问号加上后缀原始计数，给予任+？那是*？。例如：\nsay ~$/ if \u0026#39;aabaababa\u0026#39; ~~ / .+? b /; # -\u0026gt; aab 2-5 替代品（认识这个或那个） 要匹配几种可能性中的一种，必须用“ || ”将它们分开 “; 发现的第一个匹配（从左到右）获胜。例如，初始化文件（config.ini样式）通常具有以下形式：\n[section] clef = valeur 从这样的文件中读取一行时，它可以是一个段或一个键值对。作为第一种方法，用于读取此类文件的正则表达式可以是：\n/ \u0026#39;[\u0026#39; \\w+ \u0026#39;]\u0026#39; || \\S+ \\s* \u0026#39;=\u0026#39; \\s* \\S* / 也就是说：\n括号中的一个词; 是由比白空间的其他字符，接着0或多个空格的字符串，然后等号“=”随后再次可选的空间，随后除白色空间的其他字符的进一步的字符串。 还有另一种形式的替代方案，使用分隔符“ | （而不是“ || ”）。我们的想法是一样的，但是这是最长的匹配（无论是在第一），其被保留（只要你开始在同一位置），这意味着它们必须全部（可能并行测试）并进行比较。\n以下示例说明了两个运算符之间的区别：\nmy $chaîne = \u0026#34;abcdef\u0026#34;; say ~$/ if $chaîne ~~ /ab || abcde/; # -\u0026gt; ab say ~$/ if $chaîne ~~ /ab | abcde/; # -\u0026gt; abcde say ~$/ if $chaîne ~~ /ab | bcde/; # -\u0026gt; ab # dans ce dernier cas, la reconnaissance la plus à gauche l\u0026#39;emporte 最长匹配的规则对于属于例如Perl代码的字符串的词法分析特别有用。因此，它允许Perl语法匹配包含连字符的标识符（变量，函数等）（假设它们后跟字母字符）：Perl能够匹配由于这种最长匹配规则，这样的标识符（并且例如将其与较少放置在两个不同符号之间的算术运算符区分开）。\n2-5-1 连词（认识到这一点和那个） 替代方案在由运算符“ | ”分隔的替代项的术语之间建立逻辑或（分离）»或«« | ”。\n还有运算符“ ＆ ”和“ \u0026amp;\u0026amp; ” 在它们分开的术语之间建立逻辑和（结合）。如果两个术语都被匹配并且它们匹配相同的子串（匹配的相同开头和相同末尾），则正则表达式只会成功：\nmy $regex = rx/a..d \u0026amp; .bcd/; say \u0026#34;Reconnu\u0026#34; if \u0026#34;XZabcdZ\u0026#34; ~~ /$regex/; # -\u0026gt; Reconnu say ~$/; # -\u0026gt; abcd 2-6 锚点 正则表达式引擎尝试通过从左到右搜索来查找字符串中的匹配项。\nsay so \u0026#39;Saperlipopette\u0026#39; ~~ / perl /; # True # ^^^^ # (so renvoie une évaluation booléenne, donc, en fait True ou False) 但这并不总是你想要的。例如，我们可能想要匹配整个字符串，整行，或一个或多个整个单词，或者重视发生匹配的字符串的位置（例如，仅在字符串的开头） 。锚（以及后面第2.10节中讨论的断言 ）允许指定匹配将在何处发生。\n必须为整个正则表达式匹配正则表达式的锚点，但锚点不会消耗链中的字符。\n锚 意 注释或示例 ^ 字符串的开头 \u0026lsquo;Saperlipopette\u0026rsquo;~~ / perl /; # True \u0026lsquo;Soperlipopette\u0026rsquo;~~ / ^ perl /; #False \u0026lsquo;perl\u0026rsquo;~~ / ^ perl /; #True ^^ 行首 ^^匹配字符串的开头或返回字符后面的内容 $$ 行尾 $$匹配字符串的结尾或后跟新行的字符 \u0026laquo; 限于单词的左侧 换句话说，这个词的开头。或者，更准确地说：左边的非单词字符和右边的单词字符之间的边界。 \u0026raquo; 限于单词的右侧 或者结尾。例如： \u0026lsquo;Carpe diem\u0026rsquo;~~ / arpe \u0026raquo; /; # true\u0026rsquo;Carpe diem\u0026rsquo;~~ / die \u0026raquo; /; ＃fake $ 字符串的末尾 \u0026lsquo;Carpe diem\u0026rsquo;~~ / arpe $/; # false \u0026lsquo;Carpe diem\u0026rsquo;~~ / diem $/; #true 2-7 分组和捕获 2-7-1 分组 在常规 Raku 代码中（对于正则表达式），圆括号用于对表达式进行分组，通常用于更改执行优先级：\nsay 1 + 4 * 2; # 9, 解析为: 1 + (4 * 2) say (1 + 4) * 2; # 10 我们可以使用相同的想法对正则表达式的元素进行分组：\n/ a || b c / # 匹配 \u0026#39;a\u0026#39; 或 \u0026#39;bc\u0026#39; / ( a || b ) c / # 匹配 \u0026#39;ac\u0026#39; 或 \u0026#39;bc\u0026#39; 相同的分组技术可以应用于量词：\n/ a b+ / # 匹配一个 \u0026#39;a\u0026#39;, 后跟一个或多个 \u0026#39;b\u0026#39; / (a b)+ / # 匹配一个或多个 \u0026#39;ab\u0026#39; 序列 / (a || b)+ / # 匹配 \u0026#39;a\u0026#39; 和 \u0026#39;b\u0026#39; 的任何序列 # 至少一个字符 \u0026#39;b\u0026#39; 2-7-2 捕获 圆括号不仅用于分组，它们还用于捕获，也就是说，它们将被匹配的部分存储在可重用变量的括号中，以及对象元素的形式认可。\nmy $str = \u0026#39;nombre 42\u0026#39;; if $str ~~ /\u0026#39;nombre \u0026#39; (\\d+) / { say \u0026#34;The number is $0\u0026#34;; # The number is 42 # 或 say \u0026#34;The number is $/[0]\u0026#34;; # The number is 42 } 如果有几对括号，它们从左到右编号，从零（$0，$1，$2 等）开始，与 Perl 5 不同，其捕获从$1开始。\nif \u0026#39;abc\u0026#39; ~~ /(a) b (c)/ { say \u0026#34;0: $0; 1: $1\u0026#34;; # 0: a; 1: c } 变量 $0，$1 等 实际上是捷径语法。$/ 匹配对象作为一个列表，以至于 $0实际上是语法糖$/[0] ，$1 是$/[1] 等等。\n强制匹配对象到列表上下文允许轻松访问所有元素：\nif \u0026#39;abcdef\u0026#39; ~~ /(a) b (c) (d) e (f)/ { say $/.list.join: \u0026#39;, \u0026#39; # a, c, d, f } 2-7-3 非捕获分组 圆括号提供双重功能：它们对正则表达式中的元素进行分组，并捕获括号内已匹配的内容。\n为了仅保留分组行为（不捕获），我们可以使用方括号而不是圆括号：\nif \u0026#39;abc\u0026#39; ~~ / [a||b] (c) / { say ~$0; # c } 如果你不需要捕获，那么使用非捕获组有三个优点：开发人员的意图更清晰，更容易计算你需要的捕获组，速度更快一点。\n2-7-4 捕获编号 上面已经说过，捕获组从左到右编号。这在原则上是正确的，但它有点过于简化。列出以下规则以使本文档尽可能完整，但如果你发现自己经常使用它，那么最好考虑命名捕获（第2.7.5节 ）或甚至Sub - 命名规则（第2.8节 ）。\n备选分支将捕获的编号重置为0：\n/ (x) (y) || (a) (.) (.) / # $0 $1 $0 $1 $2 例如：\nif \u0026#39;abc\u0026#39; ~~ /(x)(y) || (a) (.) (.)/ { # $0 $1 $2 say ~$1; # b } 如果备选分支的不同选项（或多或少有点复杂）具有不同数量的捕获，则具有最大捕获编号的那个选项（逻辑上）确定下一个捕获的索引。\n$chaîne = \u0026#39;abcd\u0026#39;; if $chaîne / a [ b (.) || (x) (y) ] (.) / { # $0 $0 $1 $2 say ~$2; # d } 捕获可以嵌套，在这种情况下，它们按级别编号。\nif \u0026#39;abc\u0026#39; ~~ / ( a (.) (.) ) / { say \u0026#34;Outer: $0\u0026#34;; # Outer: abc say \u0026#34;Inner: $0[0] and $0[1]\u0026#34;; # Inner: b and c } 2-7-5 命名捕获 可以给捕获命名，而不是对捕获进行编号。命名捕获的通用（有点健谈）方式是：\nif \u0026#39;abc\u0026#39; ~~ / $\u0026lt;my_name\u0026gt; = [ \\w+ ] / { say ~$\u0026lt;my_name\u0026gt; # abc } 访问命名快照 $\u0026lt;myname\u0026gt; 实际上是一个快捷方式，可以将匹配对象作为散列值访问，即$/{'my_name'} 或 $/\u0026lt;my_name\u0026gt;。\n强制匹配对象在散列上下文中提供了一种访问所有命名快照的简单方法：\nif \u0026#39;count=23\u0026#39; ~~ / $\u0026lt;variable\u0026gt;=\\w+ \u0026#39;=\u0026#39; $\u0026lt;value\u0026gt;=\\w+ / { my %h = $/.hash; say %h.keys.sort.join: \u0026#39;, \u0026#39;; # OUTPUT: «value, variable␤» say %h.values.sort.join: \u0026#39;, \u0026#39;; # OUTPUT: «23, count␤» for %h.kv -\u0026gt; $k, $v { say \u0026#34;Found value \u0026#39;$v\u0026#39; with key \u0026#39;$k\u0026#39;\u0026#34;; # outputs two lines: # Found value \u0026#39;count\u0026#39; with key \u0026#39;variable\u0026#39; # Found value \u0026#39;23\u0026#39; with key \u0026#39;value\u0026#39; } } 下一节（子规则或命名规则）提供了访问命名捕获的通常更方便的方法。\n2-8 助理规则或规则命名 可以将正则表达式放入命名规则中，就像你可以将代码片段放入函数（或子例程）或方法中一样。\nmy regex ligne { \\N*\\n } if \u0026#34;abc\\ndef\u0026#34; ~~ /\u0026lt;ligne\u0026gt; def/ { say \u0026#34;Première ligne: \u0026#34;, $\u0026lt;ligne\u0026gt;.chomp; # Première ligne: abc } 命名正则表达式可以使用语法my regex regexname {正则表达式的主体}声明自己，然后使用调用。此外，调用命名的regex ipso facto会创建一个具有相同名称的命名快照（上例中的$ ）。\n但是，如果需要，可以使用以下调用语法\u0026lt;capture_name = regexname\u0026gt;为捕获提供另一个名称 ; 然后，你可以使用符号$ \u0026lt;capture_name\u0026gt;访问捕获。我们举例说明在第3.9.1节的语法MultDiv中 使用此功能。（角色的组成）。\n如果你不需要捕获，则前缀\u0026lt;.name_regex\u0026gt;的点的正则表达式的名称将删除捕获。\n这里是一个小全码（但仍然还相当有限）的摘录，分析文件类型的config.ini的§ 2.5 ：\nmy regex header { \\s* \u0026#39;[\u0026#39; (\\w+) \u0026#39;]\u0026#39; \\h* \\n+ } my regex identifier { \\w+ } my regex kvpair { \\s* \u0026lt;key=identifier\u0026gt; \u0026#39;=\u0026#39; \u0026lt;value=identifier\u0026gt; \\n+ } my regex section { \u0026lt;header\u0026gt; \u0026lt;kvpair\u0026gt;* } my $contents = q:to/EOI/; [passwords] jack=password1 joy=muchmoresecure123 [quotas] jack=123 joy=42 EOI my %config; if $contents ~~ /\u0026lt;section\u0026gt;*/ { for $\u0026lt;section\u0026gt;.list -\u0026gt; $section { my %section; for $section\u0026lt;kvpair\u0026gt;.list -\u0026gt; $p { %section{ $p\u0026lt;key\u0026gt; } = ~$p\u0026lt;value\u0026gt;; } %config{ $section\u0026lt;header\u0026gt;[0] } = %section; } } say %config.perl; # OUTPUT: «{:passwords(${:jack(\u0026#34;password1\u0026#34;), :joy(\u0026#34;muchmoresecure123\u0026#34;)}), # :quotas(${:jack(\u0026#34;123\u0026#34;), :joy(\u0026#34;42\u0026#34;)})}» 命名正则表达式可以分组为语法（见第3节 ），并且通常需要这样做（命名正则表达式的目的正是为了构建语法）。\n有预定义的子规则，或多或少对应于之前看到的字符类，例如：\n\u0026lt;ident\u0026gt; ：标识符; \u0026lt;upper\u0026gt; ：单个大写字母; \u0026lt;lower\u0026gt; ：单个小写字母; \u0026lt;alpha\u0026gt; ：单个字母字符或带下划线的字符（对于没有带下划线字符的Unicode字母字符，请使用 \u0026lt;:alpha\u0026gt; ; \u0026lt;digit\u0026gt; ：单个十进制数; \u0026lt;xdigit\u0026gt; ：单个十六进制数; \u0026lt;print\u0026gt; ：单个可打印字符; \u0026lt;punct\u0026gt; ：一个标点字符; \u0026lt;alnum\u0026gt; ：单个字母数字字符（相当于\u0026lt;alpha\u0026gt; + \u0026lt;digit\u0026gt;）; \u0026lt;wb\u0026gt; ：单词边界，零长度断言; \u0026lt;space\u0026gt; ：单个空格（与 \\s 相同）; 在 pattern 之前 ：在null length 之前断言，也就是说，验证一个是否处于匹配模式的位置，并且如果成功则返回零大小的已匹配对象（同样存在一个子排除离职后的图案向后）。另见第2.10节）。 在Synopse S05中可以找到更完整的列表。\n如在下一章讨论的，名为正则表达式或子规则也可以与关键字定义的 token 或 rule（而不是 regex），其改变方式的正则表达式引擎将分析链隐式使用副词：棘轮和/或（视情况而定）：sigspace（参见下面的2.9.1.1和2.9.1.2节）。声明的语法如下：\nmy token nom-de-règle { ... } # 或: my rule nom-de-règle { ... } 2-9 副词 该副词（对应于所谓的改性剂在Perl 5 Perl的正则表达式5和包在其他语言如使用PCRE）改变工作方式正则表达式，并允许一些非常方便的快捷键重复的任务。\n有两种副词：正则表达式副词适用于定义正则表达式的地方，以及匹配副词，其中模式匹配字符串。区别有时是模糊的，因为匹配和定义通常是文本近似的，但使用方法匹配的语法有助于澄清差异。\n\u0026lsquo;abc\u0026rsquo;~~ /../大致相当于\u0026rsquo;abc\u0026rsquo;.match（/../），甚至可以用两个不同的行更清楚地写出来：\nmy $regex = /../; # définition, deux caractères quelconques if \u0026#39;abc\u0026#39;.match($regex) { # reconnaissance say \u0026#34;\u0026#39;abc\u0026#39; a au moins deux caractères\u0026#34;; } 正则表达式副词如：i（忽略大小写，即大写和小写字母之间的区别）进入定义，而匹配副词如：重叠被添加到调用匹配：\nmy $regex = /:i . a/; for \u0026#39;baA\u0026#39;.match($regex, :overlap) -\u0026gt; $m { say ~$m; } # Affiche : # ba # aA 2-9-1 正则表达式副词 声明正则表达式时出现的副词是正则表达式的一部分，并影响Raku编译器如何将正则表达式转换为二进制代码。\n例如，副词：ignorecase或：i（忽略大小写）告诉编译器忽略大写和小写字母之间的区别。因此，\u0026lsquo;a\u0026rsquo;~~ / A /是假，而\u0026rsquo;a\u0026rsquo;~~ /：i A /被成功匹配。（有一个变体：ii或：samecase，在替换的情况下，确保替换字符串与匹配的字符串在相同的情况下。）\n正则表达式的副词可以放在正则表达式语句之前或之内，并且只会影响下一个正则表达式的那部分。\n这两个正则表达式是等价的：\nmy $rx1 = rx:i/a/; # avant my $rx2 = rx/:i a/; # à l\u0026#39;intérieur 但这些不是：\nmy $rx3 = rx/a :i b/; # insensible à la casse seulement pour b my $rx4 = rx/:i a b/; # complètement insensible à la casse 括号和括号限制了副词的范围：\n/ (:i a b) c / # reconnaît \u0026#39;ABc\u0026#39; mais pas \u0026#39;ABC\u0026#39; / [:i a b] c / # reconnaît \u0026#39;ABc\u0026#39; mais pas \u0026#39;ABC\u0026#39; 2-9-1-1 副词“棘轮”：没有回溯 副词：棘轮或：r告诉正则表达式引擎不要返回（回溯）。英语单词棘轮指非回捕（如棘轮扳手），机械系统，防止设备回去（并迫使从而隐含前进）。\n如果没有这个副词，正则表达式的不同部分将尝试不同的方式来匹配字符串以允许正则表达式的其他部分匹配。例如，使用正则表达式\u0026rsquo;abc\u0026rsquo;~~ / w + ./，\\ w +部分以消耗整个字符串abc开始，然后在“ 。 以下是。然后有退格（或返回跟踪），也就是说\\ w +放弃最后一个字符并且只识别ab，这允许“ 。 “成功确认Ç。删除一个字符（或几个）以开始新的匹配尝试的过程称为回溯（有时回溯）。\nsay so \u0026#39;abc\u0026#39; ~~ / \\w+ . /; # Vrai say so \u0026#39;abc\u0026#39; ~~ / :r \\w+ . /; # Faux 使用这种棘轮可以是优化，因为回溯通常是昂贵的。但兴趣在于，没有回溯的匹配与人类分析他们阅读的文本的方式密切相关。使用正则表达式我的正则表达式标识符{\\ w +}和我的正则表达式关键字{if | 别的| endif}，我们直观地等待标识符吸收完整的单词，而不需要恢复该单词的结尾以满足以下规则。例如，没有人希望将单词reason解析为单词标识符，后跟if关键字 ; 我们等待而不是因为它被解析为一个标识符，如果解析器等待该单词，则它会失败，而不是解析输入数据与预期的不同。\n我们可以认为回溯一般期望行为分析低级别的一个字符，一个字符串，但研究棘爪（棘轮）通常更符合我们想要做的用于结构化文本的词法或句法分析。\n由于棘轮的行为是如此经常在词法分析器（可取的词法分析器）和句法（解析器），存在一个正则表达式棘轮一个快捷方式：使用所述关键字设置的分则令牌而不是正则表达式 ：\nmy token truc { .... } # raccourci pour : my regex truc { :r ... } 使用关键字规则的子规则（参见 §2.9.1.2。）也会起到防止回溯的作用。\n这些规则的存在令牌和规则的副词：棘轮还算是很少明确使用：它通常最好使用隐含定义子规则作为标记或规则。\n2-9-1-2 副词“sigspace”（显着的空格） 副词：sigspace其中：s在正则表达式中创建重要的空格（到目前为止，它们不再被忽略）：\nsay so \u0026#34;J\u0026#39;ai utilisé Photoshop®\u0026#34; ~~ m:i/ photo shop /; # Vrai say so \u0026#34;J\u0026#39;ai utilisé photo shop\u0026#34; ~~ m:i:s/ photo shop /; # Vrai say so \u0026#34;J\u0026#39;ai utilisé Photoshop®\u0026#34; ~~ m:i:s/ photo shop /; # Faux m：s / photo shop /好像我们写了m / photo \u0026lt;.ws\u0026gt; shop \u0026lt;.ws\u0026gt; /。默认情况下，\u0026lt;。ws\u0026gt;确保单词是分开的，因此“a b”将被\u0026lt;.ws\u0026gt;识别，而不是“ab”。\n正则表达式中的空格根据前面的空格转换为\u0026lt;.ws\u0026gt;或不转换为\u0026lt;.ws\u0026gt;。在上面的示例中，正则表达式开头的空格不会更改为\u0026lt;.ws\u0026gt;，而是字符后面的空格。通常，规则是如果术语可以匹配某些内容，则该术语后面的空格将转换为\u0026lt;.ws\u0026gt;。\n另外，如果结束之后的空间中，但在此之前量词（+，*或？），\u0026lt;.WS\u0026gt;将这个术语的每个匹配后匹配，从而使富+变为[富\u0026lt;。 ws\u0026gt;] +。另一方面，量化器之后的空间表现得像正常有意义的空间，例如“foo +”变为foo + \u0026lt;.ws\u0026gt;。\n最后，这段代码：\nrx :s { ^^ { say \u0026#34;Pas de sigspace après ceci\u0026#34;; } \u0026lt;.assertion_puis_ws\u0026gt; caractères_puis_ws+ caractères_séparés_par_ws * [ | des \u0026#34;trucs\u0026#34; .. . | $$ ] :my $toto = \u0026#34;pas de ws après ceci\u0026#34;; $toto } 变为：\nrx { ^^ \u0026lt;.ws\u0026gt; { say \u0026#34;Pas d\u0026#39;espace après ceci\u0026#34;; } \u0026lt;.assertion_puis_ws\u0026gt; \u0026lt;.ws\u0026gt; caractères_puis_ws++ \u0026lt;.ws\u0026gt; [ caractères_séparés_par_ws \u0026lt;.ws\u0026gt;]* \u0026lt;.ws\u0026gt; [ | des \u0026lt;.ws\u0026gt; \u0026#34;trucs\u0026#34; \u0026lt;.ws\u0026gt; .. \u0026lt;.ws\u0026gt; . \u0026lt;.ws\u0026gt; | $$ \u0026lt;.ws\u0026gt; ] \u0026lt;.ws\u0026gt; :my $toto = \u0026#34;pas de ws après ceci\u0026#34;; $toto \u0026lt;.ws\u0026gt; } 就像使用token关键字声明的正则表达式隐含adverb ：ratchet一样，使用关键字rule声明的正则表达式意味着副词：ratchet和：sigspace。\n语法提供了一种简单的方法来重新定义\u0026lt;.ws\u0026gt;将匹配的内容：\ngrammar Demo { token ws { \u0026lt;!ww\u0026gt; # reconnaissance si pas à l\u0026#39;intérieur d\u0026#39;un mot \\h* # reconnaît seulement les espaces horizontaux } rule TOP { # appelée par Demo.parse; a b \u0026#39;.\u0026#39; } } say so Demo.parse(\u0026#34;ab.\u0026#34;); # Faux (espace requis entre a et b) say so Demo.parse(\u0026#34;a b.\u0026#34;); # Vrai say so Demo.parse(\u0026#34;a\\tb .\u0026#34;); # Vrai say so Demo.parse(\u0026#34;a\\tb\\n.\u0026#34;); # Faux (\\n est un espace vertical) 在解析某些类型的空白（例如，垂直空间）很重要的文件格式时，通常需要重新定义ws。\n2-9-1-3 和Perl 5 兼容的副词 副词 :P5 和 :Perl5 允许你在 Raku 程序中使用 Perl 5 正则表达式语法：\nnext if $ligne =~ m/[aeiou]/ ; # Classe de caractères Perl 5 next if $ligne ~~ m:P5/[aeiou]/ ; # Raku, avec l\u0026#39;adverbe P5 next if $ligne ~~ m:Perl5/[aeiou]/; # Raku, avec l\u0026#39;adverbe Perl5 next if $ligne ~~ m/ \u0026lt;[aeiou]\u0026gt; / ; # Raku, nouvelle syntaxe des # classes de caractères 这可用于迁移方案或那些还没有习惯 Raku 正则表达式的情况，但我们没有更多的是住在我们对这种可能性在本教程旨在介绍Perl的正则表达式6的语法。\n2-9-2 认可副词 与正则表达式副词（第2.9.1节 ）不同，它与正则表达式的声明相关，只有当你想匹配字符串和正则表达式时，匹配副词才有意义。\n它们永远不会出现在正则表达式中，但只能出现在它之外，作为识别m / \u0026hellip; /的一部分，或者作为匹配方法的参数。\n2-9-2-1 副词“continue”（匹配的起始位置） 副词 :continue 或 :c 接受一个参数：正则表达式开始搜索的位置。默认情况下，搜索从字符串的开头开始，但是副词 :c 会修改此行为。如果没有指定位置，则搜索将从位置0开始，除非定义了匹配对象 $\\，在这种情况下，搜索将从位置 $/（在前一次匹配结束后的位置）开始。\ngiven \u0026#39;a1xa2\u0026#39; { say ~m/a./; # a1 say ~m:c(2)/a./; # a2 (搜索从x的位置开始) } 2-9-2-2 副词“exhaustive”（所有匹配） 要查找正则表达式的所有可能匹配 - 包括重叠的那些 - 以及从相同位置开始的多个匹配，请使用副词 :exhaustive 或 :ex。\ngiven \u0026#39;abracadabra\u0026#39; { for m:exhaustive/ a .* a / -\u0026gt; $match { say \u0026#39; \u0026#39; x $match.from, ~$match; } } 上面的代码显示以下结果：\nabracadabra abracada abraca abra acadabra acada aca adabra ada abra 2-9-2-3 副词“global”（所有匹配） 不是搜索单个匹配并返回匹配对象，而是可以搜索每个匹配而不重叠，并使用副词 :global 或 :g 将结果作为列表返回 ：\ngiven \u0026#39;Trois mots ici\u0026#39; { my @matches = m:global/\\w+/; say @matches.elems; # 3 say ~@matches[2]; # ici } 2-9-2-4 副词“pos” 副词 :pos 或 :p 锚点匹配字符串中的特定位置：\ngiven \u0026#39;abcdef\u0026#39; { my $trouvé = m:pos(2)/.*/; say $trouvé.from; # 2 say ~$trouvé; # cdef } 2-9-2-5 副词“overlap”（带重叠） 要获得多个匹配，包括重叠匹配，但每个起始位置只有一个（最长），可以使用副词 :overlap 或 :ov ：\ngiven \u0026#39;abracadabra\u0026#39; { for m:overlap/ a .* a / -\u0026gt; $match { say \u0026#39; \u0026#39; x $match.from, ~$match; } } 这个显示：\nabracadabra acadabra adabra abra 2-10 向前查看和向后查看（断言） 断言可以搜索向前或向后匹配，但不会像锚点那样消耗目标字符串（保持在相同位置）。\n2-10-1 before 断言 要检查模式之前，另一模式出现，它可以使用 before 断言，在下面的形式：\u0026lt;?before\u0026gt;。\n因此，要搜索紧跟在字符串 titi 之后的字符串 foo，我们可以使用正则表达式 rx {foo \u0026lt;?before titi\u0026gt;}，例如：\nsay \u0026#34;tototiti\u0026#34; ~~ rx{ toto \u0026lt;?before titi\u0026gt;}; # -\u0026gt; toto 相反，如果要搜索未紧跟其他模式的模式，则必须在断言以下形式之前使用否定： \u0026lt;!before pattern\u0026gt;。\n例如，要查找不紧跟字符串titi的字符串foo，我们可以使用正则表达式 rx {foo \u0026lt;!before titi\u0026gt;} ; 使用上面示例的字符串，此正则表达式将失败，因为foo后跟titi。\n2-10-2 after 断言 要检查模式是否出现在另一个模式之后，我们可以使用以下形式之后的断言 ：\u0026lt;?after pattern\u0026gt;。\n例如，要找到紧跟在字符串titi之前的字符串foo，我们可以使用正则表达式 rx {foo \u0026lt;?after titi\u0026gt;}，如下所示：\nsay \u0026#34;tititoto\u0026#34; ~~ rx{ \u0026lt;?after titi\u0026gt; toto }; # -\u0026gt; toto 相反，如果要搜索不是紧接其他模式的模式，则必须使用以下形式的负数： \u0026lt;!after pattern\u0026gt;。\n例如，要搜索的字符串FOO没有紧跟字符串蒂蒂，你可以使用正则表达式 rx {\u0026lt;!after\u0026gt; foo} ，其失败，上面的例子中的字符串（这是我们的目标）。\n3. Grammar 语法是一种强大的工具，用于将文本分解为单个元素，并且通常返回通过解释该文本而创建的数据结构。\n例如，使用Raku语法解释和执行Raku程序。\n当前Raku用户的一个更实用的范围示例是Raku JSON::Tiny模块，它可以反序列化任何有效的JSON文件。执行此反序列化的代码用不到100行简单代码编写，易于扩展。我们在下面描述（§3.6 。）这种语法的详细构造能够分析JSON。\n如果你不喜欢在学校学习语法，不要逃避。Raku语法实际上是一种对正则表达式进行分组的简单方法，就像类可以将普通代码方法组合在一起一样（而且这个类比远比人们乍看之下想象的要多得多，因为它是稍后会看到）。\n3-1 该“砖”，以建立一个语法 上面已经看到了编写语法所需要知道和理解的大部分内容，特别是在第2.8 章中。子规则或命名规则，以及子章节2.9.1.1。和2.9.1.2。以上。这些子规则或命名规则是语法的基本构建块。实际上，语法的主要目的之一是将命名的子表达或正则表达式（正则表达式，标记和规则类型）分组到明确定义的名称空间中，以避免标识符名称的冲突。在代码中的其他地方使用其他正则表达式。\n回想一下， 正则表达式，标记和规则是非常相似的实体，用于以类似于函数或方法的定义的形式声明命名的正则表达式。在本章中，我们现在将它们统称为规则，而不管用于声明它们的关键字。它们声明如下：\nregex ma_regex { ... } # regex ordinaire token mon_token { ... } # regex avec adverbe :ratchet implicite rule ma_règle { ... } # regex avec :ratchet et :sigspace implicites 记录：\n关键字regex表示普通的正则表达式; 关键字令牌隐含了副词：棘轮（“棘轮”），也就是说这种规则不会回溯（没有回溯）; 关键字规则隐式指示副词：棘轮（无后退空间）和：sigspace（模式的空格不被忽略）。 以下是我们定义第一个数字规则的示例，并使用它来定义第二个十进制数 ：\nmy regex chiffres { \\d+ } my regex décimal { \u0026lt;chiffres\u0026gt; \\. \u0026lt;chiffres\u0026gt; } say so \u0026#34; Cet objet coûte 13.45 euros\u0026#34; ~~ /\u0026lt;décimal\u0026gt;/; # -\u0026gt; True # (so renvoie une évaluation booléenne, donc, en fait True ou False) say ~$/; # -\u0026gt; 13.45 我们在上面看到规则可以调用另一个规则，就像函数可以调用另一个函数一样。规则也可以递归调用自身。这个关键机制是Raku正则表达式的核心功能及其创建语法的能力。\n令牌规则不会回滚：\nmy token lettres { abc .+ g }; say \u0026#34;abcdefg\u0026#34; ~~ /\u0026lt;lettres\u0026gt;/ ?? \u0026#34;Réussit\u0026#34; !! \u0026#34;Échoue\u0026#34;; # -\u0026gt; Échoue 这条规则在这里失败，因为子模式。+，凭借其贪婪的量词“ + ”消费链中的所有终端，包括最后一个字母“G”，所以该规则不再能匹配“G “最后已经消耗：因为她是不允许回去砸” G“，为了取得成功，离开它的处置模式的最后一个原子，它失败。\n使用非贪婪（或节俭）量化器，修改后的字母规则成功：\nmy token lettres { abc .+? g }; say \u0026#34;abcdefg\u0026#34; ~~ /\u0026lt;lettres\u0026gt;/ ?? \u0026#34;Réussit\u0026#34; !! \u0026#34;Échoue\u0026#34;; # -\u0026gt; Réussit 使用相同的定义，类型规则规则将失败：\nmy rule lettres { abc .+? g }; say \u0026#34;abcdefg\u0026#34; ~~ /\u0026lt;lettres\u0026gt;/ ?? \u0026#34;Réussit\u0026#34; !! \u0026#34;Échoue\u0026#34;; # -\u0026gt; Échoue 因为模式中的空格不再被忽略（并且在链中找不到）。\n三种命名规则的名称，正则表达式，标记和规则，反映了这样一种观点，即在一种非常通用和模糊的方式中，正则表达式是关于通常所期望的。一个正则表达式（低级别分析，逐个字符），而一个令牌通常用于词法分析（将输入文本划分为“单词”或单个词位），并且规则将更频繁分析句法（分析lexemes之间的关系，可能取决于上下文）。这种理论上的任务划分受到许多例外的限制，并且不得在教条上遵循，但在决定不同类型的规则时，要牢记这一点。\n3-2 创建 Grammar 语法创建了一个合适的命名空间，并引入了关键字语法。\n3-2-1 语法的语法定义 就像一个类可以对命名的动作或方法进行分组：\nclass Identité { method nom { \u0026#34;Nom = $!nom\u0026#34; } method âge { \u0026#34;Âge = $!âge\u0026#34; } method adresse { \u0026#34;Adr = $!adresse\u0026#34; } method desc { print \u0026amp;.nom(), \u0026#34;\\n\u0026#34;, \u0026amp;.âge(), \u0026#34;\\n\u0026#34;, \u0026amp;.adresse(), \u0026#34;\\n\u0026#34;; } # etc. } 一个名为规则的语法组：\ngrammar Identité { rule nom { Nom \u0026#39;=\u0026#39; (\\N+) } # chaîne de caractères quelconques # autres que des retours à la ligne rule adresse { Adr \u0026#39;=\u0026#39; (\\N+) } # idem rule âge { Age \u0026#39;=\u0026#39; (\\d+) } # des chiffres rule desc { \u0026lt;nom\u0026gt; \\n \u0026lt;âge\u0026gt; \\n \u0026lt;adresse\u0026gt; \\n } # etc. } 这里使用其他地方定义的其他规则（名称，年龄和地址）来定义desc规则。这使得逐渐建立越来越高的抽象水平成为可能。\n这将创建一个语法类型对象，其类型表示正在分析的语言，并且可以以扩展语言的形式从中派生其他语法。\n然后，新对象作为调用TOP方法（正则表达式，标记或规则）传递。这个默认的TOP方法可以被另一个传递给命名参数的规则替换：rule，这对于测试语法尤其有用。\n请注意，不再需要使用my运算符声明规则，因为语法创建了必要的命名空间和词法范围。\n3-2-2 Grammar 的继承 语法可以从另一个（父）语法继承，就像一个类可以从另一个类继承一样：\ngrammar Message { rule texte { \u0026lt;salutation\u0026gt; $\u0026lt;corps\u0026gt;=\u0026lt;ligne\u0026gt;+? \u0026lt;fin\u0026gt; } rule salutation { [Salut|Bonjour] $\u0026lt;dest\u0026gt;=\\S+? \u0026#39;,\u0026#39; } rule fin { [à|\u0026#39;@\u0026#39;] plus \u0026#39;,\u0026#39; $\u0026lt;auteur\u0026gt;=.+ } token ligne { \\N* \\n} } grammar MessageFormel is Message { rule salutation { [Cher|Chère] $\u0026lt;dest\u0026gt;=\\S+? \u0026#39;,\u0026#39; } rule fin { Bien cordialement \u0026#39;,\u0026#39; $\u0026lt;auteur\u0026gt;=.+ } } 这里，MessageFormel语法继承父语法消息。与类的方法一样，规则继承自父语法（和多态），因此无需重新定义不更改的文本和行规则。我们只重载改变的规则。\n所有语法都是从语法类派生的，语法类除其他外提供了所有语法共有的方法，如.parse和.fileparse，如下所述。\n语法从其他语法继承的能力是一种极其强大的工具，是允许Raku语言可扩展性的重要因素（见第3.9节 ）。\n3-3 使用 Grammar 可以通过在该语法上调用.parse方法并可选地将操作对象作为参数传递来解析带有语法的字符串（参见下面的第3.4节 ）。同样，.parsefile方法用于解析文件。\nMaGrammaire.parse($chaîne, :actions($objet-action)) MaGrammar.parsefile($nom-fic, :actions($objet-action)) .parse和.parsefile方法锚定在文本的开头和结尾，如果未到达文本末尾则失败。\n原则上，有必要使用语法来执行文本的实际词法和句法分析。要提取复杂数据，建议将操作对象与语法结合使用。\n3-4 类和对象的股票 3-4-1 在确认期间执行代码 当语法成功解析文本时，它返回一个匹配对象的语法树。这棵树越深（并且它通常变得非常快），并且这棵树中的分支越多，探索这棵树以找到正在寻找的信息就越困难。\n为了避免必须对匹配树进行这种探索，可以提供一个行动对象。在对命名的语法规则进行每次成功分析之后，它会尝试调用此操作对象的方法，该方法具有与规则相同的名称，方法是将其作为刚刚匹配的对象的位置参数提供创建。此方法（如果存在）可以特别用于构建抽象语法树（Astract语法树或AST）或执行将来可能需要的各种其他事物。如果此方法不存在，则忽略此步骤。\n这是一个极简主义，有点人为的语法和动作一起工作的例子：\nuse v6; grammar GrammaireTest { token TOP { ^ \\d+ $ } } class ActionsTest { method TOP($/) { $/.make(2 + ~$/); } } my $actions = ActionsTest.new; my $reconnu = GrammaireTest.parse(\u0026#39;40\u0026#39;, :$actions); say $reconnu; # -\u0026gt; ｢40｣ say $reconnu.made; # -\u0026gt; 42 Actiontest类的$ action对象被实例化，并在调用.parse方法时作为参数传递。当TOP规则匹配出该参数时，语法通过将匹配的对象作为参数传递给它来自动调用TOP方法。\n类Match的make方法使用其参数提供结构$ / .Med（用户决定其内容，但通常是一个抽象的语法树）。\n为了证明参数是一个公认的对象，该示例使用 $/ 作为传递给action方法的参数名称，但这只是一个方便的约定，没有任何内在的必要条件在这里。通过认可的 $ 也会起作用。（但请注意，使用 $/ 可以提供快捷方式 $\u0026lt;capture\u0026gt; 而不是 $/\u0026lt;capture\u0026gt;。）\n这是一个稍微更具体的例子：\nuse v6; grammar PairesClésValeurs { token TOP { [\u0026lt;paire\u0026gt; \\n+]* } token ws { \\h* } rule paire { \u0026lt;clé=.identifiant\u0026gt; \u0026#39;=\u0026#39; \u0026lt;valeur=.identifiant\u0026gt; } token identifiant { \\w+ } } class PairesClésValeursActions { method identifiant($/) { $/.make: ~$/ } method paire ($/) { $/.make: $\u0026lt;clé\u0026gt;.made =\u0026gt; $\u0026lt;valeur\u0026gt;.made } method TOP ($/) { $/.make: $\u0026lt;paire\u0026gt;».made } } my $res = PairesClésValeurs.parse(q:to/EOI/, :actions(PairesClésValeursActions)).made; phase=b points=42 Perl=6 EOI for @$res -\u0026gt; $p { say \u0026#34;Clef : $p.clé()\\tValeur : $p.valeur()\u0026#34;; } 其中显示以下结果：\nClef : phase Valeur : b Clef : points Valeur : 42 Clef : Perl Valeur : 6 规则对，其中分析一对由等于字符分隔的标识符，提供的别名规则的两个呼叫标识符来区分渔获的名称和使它们可更容易地且直观地。相应的action-method构造一个Pair类型的对象，并使用已匹配的子对象的属性.made。因此（以及TOP -action方法），它利用了子匹配的动作方法在对应于边界正则表达式之前被调用的事实。因此，以所需顺序调用动作方法。\nTOP动作方法简单地收集由偶数规则的多个匹配生成的所有对象，并将它们作为列表返回。\n另请注意，PairsKeyActionList在此作为类型对象（而不是对象的实例）传递给.parse方法，这是可能的，因为没有一个action-methods使用属性（仅在正确初始化的实例中可用）。\n在某些情况下，可能需要将状态保留在属性中。在这种情况下，它是一个必须传递给.parse方法的实例化对象。\naction-methods还可用于调试顽固语法，例如通过显示解析的中间状态。但是动作方法的基本作用是将简单语法转换为真正的解析工具，生成一个抽象语法树，Perl解释器（或其他工具）可以使用它来生成，例如可执行代码。\n3-4-2 在语法中执行代码的其他方法 在上面的例子中，action-methods是在一个与语法本身不同的动作中定义的，这通常是任何扩展的语法。\n但是，对于简单的情况，也可以在语法本身中定义方法：\ngrammar Toto { regex titi { \u0026lt;.configurer\u0026gt; blah blah } method configurer { # faire quelque chose ici } } 是的，语法可以定义方法（他们甚至可以使用角色，我们将在第3.9.1节中详细介绍），它们实际上是类\u0026hellip;\u0026hellip;\n通过在大括号之间插入代码，也可以在规则中执行代码：\ngrammar toto { regex titi { blah blah { say \u0026#34;Je suis arrivé ici\u0026#34;} blah blah} } 如果匹配出代码块之前的模式部分，则立即执行该块。\n本工程以真理的任何正则表达式（名为或非规则，甚至外的语法），这可以用于调试正则表达式的例子帮助（见 § 4.6。 调试Perl的正则表达式语法或6）：\nmy regex lettres { a b {say \u0026#34;reconnu ab\u0026#34;} c d} say so \u0026#34;abc\u0026#34; ~~ /\u0026lt;lettres\u0026gt;/; # -\u0026gt; reconnu ab / False # la regex ci-dessus a reconnu ab et l\u0026#39;affiche et n\u0026#39;a échoué qu\u0026#39;ensuite say so \u0026#34;abcde\u0026#34; ~~ /\u0026lt;lettres\u0026gt;/; # -\u0026gt; reconnu ab / True - ici, succès 但是要小心：如果正则表达式是回溯，则可能会多次执行代码块：\nsay so \u0026#34;aaa\u0026#34; ~~ / a { say \u0026#34;Bonjour\u0026#34; } b /; 这个显示：\nBonjour Bonjour Bonjour False 3-5 验证Perl模块名称的 Grammar 此示例的目的是验证Perl模块名称。\nPerl模块的名称可以分解为由冒号对分隔的标识符：“::”，例如List::Util或List::MoreUtils（这里提供的模块名称示例是模块Perl 5）。标识符必须以字母字符（az）或带下划线的字符开头，后跟零个，一个或多个字母数字字符。\n到目前为止没有什么非常复杂，但这有点复杂，因为有些模块有一个标识符（Memoize），因此没有冒号，而其他模块可能有“扩展”名称：Regexp::Common::Email::Address。\n他不是一个很好的语法候选人吗？\n3-5-1 验证 Grammar 例如，足以定义保证上面的命名规则和分隔符规则的标识符规则，并在语法中正确地组合它们。\ngrammar Valide-Nom-Module { token TOP { ^ \u0026lt;identifiant\u0026gt; [ \u0026lt;séparateur\u0026gt; \u0026lt;identifiant\u0026gt; ]* $} token identifiant { \u0026lt;[A..Za..z_]\u0026gt; # \u0026#39;mot\u0026#39; commençant par un caractère # alphabétique ou un caractère souligné \u0026lt;[A..Za..z0..9_]\u0026gt;* # 0 ou plusieurs caractères alphanumériques } rule séparateur { \u0026#39;::\u0026#39; } # paire de caractères deux-points } 我们现在可以使用一些有效的模块名来测试这个语法：\nfor \u0026lt;Super:Nouveau::Module Super.Nouveau.Module Super::6ouveau::Module Super::Nouveau::Module\u0026gt; -\u0026gt; $nom { my $reconnu = Valide-Nom-Module.parse($nom); say \u0026#34;nom\\t\u0026#34;, $reconnu ?? $reconnu !! \u0026#34;Nom de module invalide\u0026#34;; } 这个显示：\nSuper:Nouveau::Module Nom de module invalide Super.Nouveau.Module Nom de module invalide Super::6ouveau::Module Nom de module invalide Super::Nouveau::Module ｢Super::Nouveau::Module｣ identifiant =\u0026gt; ｢Super｣ séparateur =\u0026gt; ｢::｣ identifiant =\u0026gt; ｢Nouveau｣ séparateur =\u0026gt; ｢::｣ identifiant =\u0026gt; ｢Module｣ 只匹配出有效的模块名称，其他三个名称被正确拒绝。\n有时，通过用短划线替换色列对来汇总模块名称。例如，官方名称是Regexp::Common::Email::Address，也可以是Regexp-Common-Email-Address。如果想要验证第二次写作，只需修改分隔符以便它也授权破折号：\nrule séparateur { \u0026#39;::\u0026#39; || \\- } # deux car. deux-points ou tiret 通过使用名称“Super-New-Module”测试语法，我们获得：\nSuper-Nouveau-Module ｢Super-Nouveau-Module｣ identifiant =\u0026gt; ｢Super｣ séparateur =\u0026gt; ｢-｣ identifiant =\u0026gt; ｢Nouveau｣ séparateur =\u0026gt; ｢-｣ identifiant =\u0026gt; ｢Module｣ 修改分隔符规则就足以使修改扩展到所有语法，直到规则TOP。\n3-5-2 添加动作对象 上述语法可以确定Perl模块名称是否有效。\n我们现在想要在模块名称太长（超过5个标识符）时添加警告; 在这种情况下，模块的名称仍然有效，但建议模块的作者尝试选择较短的名称。\n例如，只需添加如下定义的 Valide-Name-Module-Actions操作类：\nclass Valide-Nom-Module-Actions { method TOP($/) { if $\u0026lt;identifiant\u0026gt;.elems \u0026gt; 5 { warn \u0026#34;Nom de module très long! Peut-être le réduire ?\\n\u0026#34; } } } 该类的定义并不特殊，它是一个普通的Raku类。重要的特征是这里定义的唯一方法与其中一个语法规则具有相同的名称（在本例中，语法中的输入规则为TOP）。如果标识符的数量超过5，将发送警告，但这不会阻止验证模块的名称。\n调用语法的语法更改如下：\nmy $reconnu = Valide-Nom-Module.parse($nom, :actions(Valide-Nom-Module-Actions)); 如果我们使用模块名称“ Super::New::Module ”（或“ Super-New-Module ”）调用语法，结果与之前相同 ，这是令人放心的。\n但是使用Mary Poppins的模块名称：\nmy $nom = \u0026#34;Mon::Module::Super::Cali::Fragi::Listi::Cexpi::Delilicieux\u0026#34;; my $reconnu = Valide-Nom-Module.parse($nom, :actions(Valide-Nom-Module-Actions)); say $reconnu if $reconnu; 我们收到警告：\n\u0026gt; raku grammaire_nom_module.pl Nom de module très long! Peut-être le réduire ? in method TOP at raku_grammaire_module.pl:15 ｢Mon::Module::Super::Cali::Fragi::Listi::Cexpi::Delilicieux｣ identifiant =\u0026gt; ｢Mon｣ séparateur =\u0026gt; ｢::｣ identifiant =\u0026gt; ｢Module｣ séparateur =\u0026gt; ｢::｣ identifiant =\u0026gt; ｢Super｣ (...) identifiant =\u0026gt; ｢Delilicieux｣ 然后显示已匹配的对象。\n请注意，语法调用直接作为操作类的参数传递给上面。如 3.4.1中所述，如有必要，可以传递此类的实例化对象：\nmy $nom = \u0026#34;Mon::Module::Super::Cali::Fragi::Listi::Cexpi::Delilicieux\u0026#34;; my $actions = Valide-Nom-Module-Actions.new(); my $reconnu = Valide-Nom-Module.parse($nom, :actions($actions)); 这个显示：\nraku grammaire_nom_module.pl Nom de module très long! Peut-être le réduire ? in method TOP at raku_grammaire_module.pl:15 这个验证模块名称的例子非常松散地基于 David Farrell的文章如何在Raku中创建语法 。\n3-6 分析JSON的 Grammar JavaScript Object Notation（JSON ）是从JavaScript对象表示法派生的文本数据格式。他成为（连同其他如XML和YAML）通常用于序列化的数据结构，例如允许平台或不同语言之间的交流，或将它们存储持久标准（例如，在文件中）。\n3-6-1 JSON文档的结构 JSON格式具有简单的优点。JSON文档包括两种类型的结构实体：\n对象或名称/值对列表（基本上对应于JavaScript对象或Perl散列表）; 有序的值列表（表）。 值本身可以是（递归）对象或数组，如上所述，或基本通用数据：布尔值（true或false），数字，字符串或null（空值或无定义值） 。\n字符串是包含整数（可能为零）unicode字符的序列。数字的格式为带符号的小数，可能包含小数或高功率部分（E表示法）。JSON不区分整数和浮点数。\n3-6-2 示例JSON文档 作为本教程的一部分，我们将使用以下JSON文档来检查语法的工作原理：\n{ \u0026#34;prénom\u0026#34;: \u0026#34;Martine\u0026#34;, \u0026#34;nom\u0026#34;: \u0026#34;Unetelle\u0026#34;, \u0026#34;enVie\u0026#34;: true, \u0026#34;âge\u0026#34;: 28, \u0026#34;sexe\u0026#34;: \u0026#34;F\u0026#34;, \u0026#34;adresse\u0026#34;: { \u0026#34;NumRue\u0026#34;: \u0026#34;21 rue Pasteur\u0026#34;, \u0026#34;Ville\u0026#34;: \u0026#34;Lyon\u0026#34;, \u0026#34;CodePostal\u0026#34;: \u0026#34;F-69000\u0026#34; }, \u0026#34;NumérosTéléphone\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;domicile\u0026#34;, \u0026#34;num\u0026#34;: \u0026#34;04 05 06 07 08\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;professionnel\u0026#34;, \u0026#34;num\u0026#34;: \u0026#34;04 08 07 06 05\u0026#34; }, { \u0026#34;type\u0026#34;: \u0026#34;mobile\u0026#34;, \u0026#34;num\u0026#34;: \u0026#34;06 12 34 56 78\u0026#34; } ], \u0026#34;enfants\u0026#34;: [], \u0026#34;Conjoint\u0026#34;: null, \u0026#34;Profession\u0026#34;: \u0026#34;sage-femme\u0026#34;, \u0026#34;Hobbies\u0026#34;: [\u0026#34;GRS\u0026#34;, \u0026#34;surf\u0026#34;, \u0026#34;peinture\u0026#34;] } 已经使用可用工具验证了本文档符合JSON标准，并且可以看出它包含上述所有类型数据的示例。\n3-6-3 逐步写出JSON Grammar 的元素 3-6-3-1 数字 选择的示例JSON文档仅包含整数，但是数字实体的描述（第3.6.1节）表明必须能够匹配具有例如以下格式的数字：“17”， “-138.27”，“1.2e-3”等\n这可能会导致以下规则：\ntoken nombre { [\\+|\\-]? # signe optionnel [ \u0026lt;[0..9]\u0026gt;* ] # chiffres optionnels (partie entière) [ \\. \u0026lt;[0..9]\u0026gt;+ ]? # séparateur décimal et partie fractionnaire [ \u0026lt;[eE]\u0026gt; [\\+|\\-]? \u0026lt;[0..9]\u0026gt;+ ]? # exposant optionnel } 3-6-3-2 字符串 可以想象许多通过模式定义字符串的方法。对于选择的示例JSON文档，以下规则就足够了：\ntoken chaîne { \\\u0026#34; \u0026lt;[ \\w \\s - ]\u0026gt;+ \\\u0026#34; # caractères alphanumériques, espaces et # tirets, le tout entre des guillemets } 对于真正的JSON解析器，我们可能更喜欢使用负字符类的规则，该字符类不包括任何不属于字符串的内容，例如：\ntoken chaîne { \\\u0026#34; \u0026lt;-[\\n \u0026#34; \\t]\u0026gt;* \\\u0026#34; # tous caractères sauf guillemets, retours à # la ligne et tabulations, entre guillemets } 应该查看JSON标准的细节，以精确地细化JSON字符串中可接受或不可接受的内容。上面引用的第一条规则足以满足所选的例子。\n3-6-3-3 JSON对象 JSON对象是键/值对的列表。这些列表由大括号框起，并且这些对用逗号分隔。键/值对是标识符（字符串，上面已定义的规则），后跟冒号，后跟值。这可以翻译如下：\nrule objet { \u0026#39;{\u0026#39; \u0026lt;listepaires\u0026gt; \u0026#39;}\u0026#39; } rule listepaires { \u0026lt;paire\u0026gt; * % \\, } rule paire { \u0026lt;chaîne\u0026gt; \u0026#39;:\u0026#39; \u0026lt;valeur\u0026gt; } 为了理解{\u0026lt;对\u0026gt; *％} ，它是值得记住的修饰语“ ％ ”施加到量词指定的隔膜必须被重复认可之间存在（见第 2.4。 ）。此修饰符可以轻松指定对以逗号分隔。如果没有此修饰符，则必须编写，例如：\nrule listepaires { \\s* | [\u0026lt;paire\u0026gt; [\u0026#39;,\u0026#39; \u0026lt;paire\u0026gt;]*] } 这不太方便，可读性也差一点。\n3-6-3-4 JSON表 表是值列表。列表用方括号括起来，值用逗号分隔：\nrule tableau { \u0026#39;[\u0026#39; \u0026lt;listeTableaux\u0026gt; \u0026#39;]\u0026#39;} rule listeTableaux { \u0026lt;valeur\u0026gt; * % [ \\, ] } 3-6-3-5 值 值可以是对象，数组，字符串，数字，布尔值或null。\ntoken valeur { | \u0026lt;objet\u0026gt; | \u0026lt;tableau\u0026gt; | \u0026lt;chaîne\u0026gt; | \u0026lt;nombre\u0026gt; | true | false | null } 这种语法非常有效，但是目前可以考虑一种有些先进的句法符号，这种符号在本文档中尚未解决，后面将在第3.9.4节中讨论原型规则：\nproto token valeur {*}; token valeur:sym\u0026lt;nombre\u0026gt; { [ \u0026#39;-\u0026#39; | \u0026#39;+\u0026#39; ]? [ \u0026lt;[0..9]\u0026gt;* ] [ \\. \u0026lt;[0..9]\u0026gt;+ ]? [ \u0026lt;[eE]\u0026gt; [\\+|\\-]? \u0026lt;[0..9]\u0026gt;+ ]? } token chaîne { \\\u0026#34; \u0026lt;[ \\w \\s - ]\u0026gt;+ \\\u0026#34; } token valeur:sym\u0026lt;true\u0026gt; { \u0026lt;sym\u0026gt; }; token valeur:sym\u0026lt;false\u0026gt; { \u0026lt;sym\u0026gt; }; token valeur:sym\u0026lt;null\u0026gt; { \u0026lt;sym\u0026gt; }; token valeur:sym\u0026lt;objet\u0026gt; { \u0026lt;objet\u0026gt; }; token valeur:sym\u0026lt;tableau\u0026gt; { \u0026lt;tableau\u0026gt; }; token valeur:sym\u0026lt;chaîne\u0026gt; { \u0026lt;chaîne\u0026gt; } 这种不那么简洁的符号具有促进语法扩展的优点，但是这里的兴趣相当有限，因为JSON标准是严格且相对不可变的。上面引用的第一条规则足以满足所选的例子。\n3-6-4 JSON Grammar 现在可以组合上面描述的不同元素并添加TOP规则来编写整个语法：\ngrammar JSON-Grammaire { token TOP { ^ \\s* [ \u0026lt;objet\u0026gt; | \u0026lt;tableau\u0026gt; ] \\s* $ } rule objet { \u0026#39;{\u0026#39; \u0026lt;listepaires\u0026gt; \u0026#39;}\u0026#39; } rule listepaires { \u0026lt;paire\u0026gt; * % \\, } rule paire { \u0026lt;chaîne\u0026gt; \u0026#39;:\u0026#39; \u0026lt;valeur\u0026gt; } rule tableau { \u0026#39;[\u0026#39; \u0026lt;listeTableaux\u0026gt; \u0026#39;]\u0026#39; } rule listeTableaux { \u0026lt;valeur\u0026gt; * % [ \\, ] } token chaîne { \\\u0026#34; (\u0026lt;[ \\w \\s - ]\u0026gt;+) \\\u0026#34; } token nombre { [\\+ | \\-]? [ \u0026lt;[0..9]\u0026gt;* ] [ \\. \u0026lt;[0..9]\u0026gt;+ ]? [ \u0026lt;[eE]\u0026gt; [\\+ | \\-]? \u0026lt;[0..9]\u0026gt;+ ]? } token valeur { | \u0026lt;objet\u0026gt; | \u0026lt;tableau\u0026gt; | \u0026lt;chaîne\u0026gt; | \u0026lt;nombre\u0026gt; | true | false | null } } 要测试，只需调用语法：\nmy $reconnu = JSON-Grammaire.parse($chaîne_json); say ~$reconnu if $reconnu; 这将显示包含整个原始JSON的已匹配对象：\n$ raku json_grammaire.pl { \u0026#34;prénom\u0026#34;: \u0026#34;Martine\u0026#34;, \u0026#34;nom\u0026#34;: \u0026#34;Unetelle\u0026#34;, \u0026#34;enVie\u0026#34;: true, \u0026#34;âge\u0026#34;: 28, # [ ... affichage abrégé pour des raisons de place ] \u0026#34;Profession\u0026#34;: \u0026#34;sage-femme\u0026#34;, \u0026#34;Hobbies\u0026#34;: [\u0026#34;GRS\u0026#34;, \u0026#34;surf\u0026#34;, \u0026#34;peinture\u0026#34;] } JSON文档已得到充分认可。这个JSON语法完全适用于作为示例选择的JSON文档，并且适用于少于20行。鼓励读者测试它。它还能够通过在JSON文档中引入错误来验证（例如，删除列表的两个值之间的逗号），不再进行匹配。\n有人可能会反对这个语法只涵盖JSON的一个子集。实际情况并非如此。当然不建议在生产环境中使用此语法来解析任何JSON，因为它是作为教学示例完成的，但没有检查JSON标准的更精细细节，但是然而，上面的语法几乎完成了。\nRaku 的JSON::Tiny模块的语法可以解析任何有效的JSON文件，因为它可以容纳大约35行。\n3-6-5 添加动作 该JSON语法的工作，但如果打印是为JSON文档获得认可的对象树中使用例如大约300行文字，因为它提供的是已经认识到了一切的所有细节，而不是不是子模式的子模式。这对于理解语法的作用（例如在发生故障时）非常有用，但是探索这个树来提取数据可能会非常痛苦。\n可以添加一类动作来构建抽象语法树（AST）。下面的类代码部分受到JSON::Tiny模块的action类的启发 ：\nclass JSON-actions { method TOP($/) { make $/.values.[0].made; }; method objet($/) { make $\u0026lt;listepaires\u0026gt;.made.hash.item; } method listepaires($/) { make $\u0026lt;paire\u0026gt;\u0026gt;\u0026gt;.made.flat; } method paire($/) { make $\u0026lt;chaîne\u0026gt;.made =\u0026gt; $\u0026lt;valeur\u0026gt;.made; } method tableau($/) { make $\u0026lt;listeTableaux\u0026gt;.made.item; } method listeTableaux($/) { make [$\u0026lt;valeur\u0026gt;.map(*.made)]; } method chaîne($/) { make ~$0 } method nombre($/) { make +$/.Str; } method valeur($/) { given ~$/ { when \u0026#34;true\u0026#34; {make Bool::True;} when \u0026#34;false\u0026#34; {make Bool::False;} when \u0026#34;null\u0026#34; {make Any;} # équivalent d\u0026#39;undef en Perl5 default {make $\u0026lt;val\u0026gt;.made} } } } 此操作类在value方法中使用名为 $\u0026lt;val\u0026gt; 的正则表达式，这使我们稍微修改语法的值规则：\ntoken valeur { | \u0026lt;val=objet\u0026gt; | \u0026lt;val=tableau\u0026gt; | \u0026lt;val=chaîne\u0026gt; | \u0026lt;val=nombre\u0026gt; | true | false | null } 现在可以按如下方式调用语法：\nmy $j-actions = JSON-actions.new(); my $reconnu = JSON-Grammaire.parse($chaîne_json, :actions($j-actions)); say $reconnu.made if $reconnu; 对象$ reconnu.made现在有一个抽象语法树（AST），一个Perl数据结构6，它现在更容易发掘和利用。下面这棵树的显示略有重新格式化，其唯一目的是提高可读性：\n{ Conjoint =\u0026gt; (Any), Hobbies =\u0026gt; [GRS surf peinture], NumérosTéléphone =\u0026gt; [ {num =\u0026gt; 04 05 06 07 08, type =\u0026gt; domicile} {num =\u0026gt; 04 08 07 06 05, type =\u0026gt; professionnel} {num =\u0026gt; 06 12 34 56 78, type =\u0026gt; mobile} ], Profession =\u0026gt; sage-femme, adresse =\u0026gt; { CodePostal =\u0026gt; F-69000 Complément_Adr =\u0026gt; (Any), NumRue =\u0026gt; 21 rue Pasteur, Ville =\u0026gt; Lyon }, enVie =\u0026gt; True, enfants =\u0026gt; [0], nom =\u0026gt; Unetelle, prénom =\u0026gt; Martine, sexe =\u0026gt; F, âge =\u0026gt; 28 } 现在可以轻松访问单个值，例如：\nsay $reconnu.made\u0026lt;adresse\u0026gt;\u0026lt;CodePostal Ville\u0026gt;; # -\u0026gt; (F-69000 Lyon) 3-7 用于分析（伪）XML的 Grammar 一个语法章节在Perl 5到Raku的：深化介绍一步一步写语法解析文本尊重XML的一个子集。\n该子集由以下测试套件定义：\nmy @tests = ( [1, \u0026#39;abc\u0026#39; ], # 1 [1, \u0026#39;\u0026lt;a\u0026gt;\u0026lt;/a\u0026gt;\u0026#39; ], # 2 [1, \u0026#39;..\u0026lt;ab\u0026gt;foo\u0026lt;/ab\u0026gt;dd\u0026#39; ], # 3 [1, \u0026#39;\u0026lt;a\u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt;\u0026#39; ], # 4 [1, \u0026#39;\u0026lt;a href=\u0026#34;foo\u0026#34;\u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt;\u0026#39;], # 5 [1, \u0026#39;\u0026lt;a empty=\u0026#34;\u0026#34; \u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;/a\u0026gt;\u0026#39; ], # 6 [1, \u0026#39;\u0026lt;a\u0026gt;\u0026lt;b\u0026gt;c\u0026lt;/b\u0026gt;\u0026lt;c\u0026gt;\u0026lt;/c\u0026gt;\u0026lt;/a\u0026gt;\u0026#39; ], # 7 [0, \u0026#39;\u0026lt;\u0026#39; ], # 8 [0, \u0026#39;\u0026lt;a\u0026gt;b\u0026lt;/b\u0026gt;\u0026#39; ], # 9 [0, \u0026#39;\u0026lt;a\u0026gt;b\u0026lt;/a\u0026#39; ], # 10 [0, \u0026#39;\u0026lt;a\u0026gt;b\u0026lt;/a href=\u0026#34;\u0026#34;\u0026gt;\u0026#39; ], # 11 [1, \u0026#39;\u0026lt;a/\u0026gt;\u0026#39; ], # 12 [1, \u0026#39;\u0026lt;a /\u0026gt;\u0026#39; ], # 13 ); 其中与第一个字段相关联的字符串等于1的字符串被认为是格式良好的XML字符串，而第一个字段为0的字符串被认为是格式不正确的。\n强烈建议有兴趣的读者阅读本章，其中只引用最终语法：\ngrammar XML { token TOP { ^ \u0026lt;xml\u0026gt; $ }; token xml { \u0026lt;text\u0026gt; [ \u0026lt;tag\u0026gt; \u0026lt;text\u0026gt; ]* }; token text { \u0026lt;-[\u0026lt;\u0026gt;\u0026amp;]\u0026gt;* }; rule tag { \u0026#39;\u0026lt;\u0026#39;(\\w+) \u0026lt;attributes\u0026gt;* [ | \u0026#39;/\u0026gt;\u0026#39; # a single tag | \u0026#39;\u0026gt;\u0026#39;\u0026lt;xml\u0026gt;\u0026#39;\u0026lt;/\u0026#39; $0 \u0026#39;\u0026gt;\u0026#39; # an opening and a closing tag ] }; token attributes { \\w+ \u0026#39;=\u0026#34;\u0026#39; \u0026lt;-[\u0026#34;\u0026lt;\u0026gt;]\u0026gt;* \u0026#39;\u0026#34;\u0026#39; }; }; 3-8 计算算术表达式（计算器） 这是一个使用计算器语法的程序的简单示例，该计算器语法可以评估基本的算术表达式：\nuse v6.c; grammar GrammaireArithmétique { token TOP { \\s* \u0026lt;nombre\u0026gt; \\s* \u0026lt;operation\u0026gt; \\s* \u0026lt;nombre\u0026gt; \\s*} token operation { \u0026lt;[^*+/-]\u0026gt; } token nombre { \\d+ | \\d+\\.\\d+ | \\.\\d+ } } class ActionsArithmétiques { method TOP($/) { given $\u0026lt;operation\u0026gt; { when \u0026#39;*\u0026#39; { $/.make([*] $/\u0026lt;nombre\u0026gt;)} when \u0026#39;+\u0026#39; { $/.make([+] $\u0026lt;nombre\u0026gt;)} when \u0026#39;/\u0026#39; { $/.make($\u0026lt;nombre\u0026gt;[0] / $\u0026lt;nombre\u0026gt;[1]) } when \u0026#39;-\u0026#39; { $/.make([-] $\u0026lt;nombre\u0026gt;) } when \u0026#39;^\u0026#39; { $/.make($\u0026lt;nombre\u0026gt;[0] ** $\u0026lt;nombre\u0026gt;[1]) } } } } for \u0026#39; 6*7 \u0026#39;, \u0026#39;46.2 -4.2\u0026#39;, \u0026#39;28+ 14.0 \u0026#39;, \u0026#39;70 * .6 \u0026#39;, \u0026#39;126 /3\u0026#39;, \u0026#39;6.4807407 ^ 2\u0026#39; -\u0026gt; $op { my $reconnu = GrammaireArithmétique.parse($op, :actions(ActionsArithmétiques)); say \u0026#34;$reconnu\\t= \u0026#34;, $reconnu.made; } 语法GrammaireArithmétique是特别简单：我们试图匹配号码，然后按算术运算符（四个基本操作幂），其次是另一个号码。\n算术动作库存类本身不产生AST，而只是评估在两个数字项之间执行的算术运算的结果。\n在运行时，这将显示以下结果：\n$ raku grammaire_arithm.pl6 6*7 = 42 46.2 -4.2 = 42 28+ 14.0 = 42 70 * .6 = 42 126 /3 = 42 6.4807407 ^ 2 = 42.00000002063649 我们发现它工作得很好，但我们希望能够处理包含多个操作的更复杂的算术表达式，同时考虑操作之间的通常优先级规则，以及通常用于修改这些优先级的括号。\n特别是，我们想要正确处理以下算术表达式：\n3 + 4 + 5; 3 + 4 * 5; ＃预期的结果是23 （3 + 4）* 5; ＃预期的结果是35 要实现这种结果，我们必须以不同的方式对待具有不同优先级的运营商。在下面的语法中，表达式（expr）由几个由+或-运算符分隔的术语组成。甲术语由一个原子或多个原子 S按运算符分隔*或/。并且原子是括号中的简单数字或算术表达式。\n这确保符合优先的规则：乘法和除法的分析过程中的加法和减法，因为之前评估，EXPR，考虑长期的个性化，才能完成评估一个表达。类似地，由于带括号的表达式是原子，因此有必要在完成对该术语中包含括号表达式的术语的评估之前评估原子的值。\n语法比以前复杂一点，但至少在外观上仍然相对简单：\nmy grammar Calculette { rule TOP { \u0026lt;expr\u0026gt; } rule expr { \u0026lt;terme\u0026gt; + % \u0026lt;plus-moins-op\u0026gt; } token plus-moins-op { [\u0026lt; + - \u0026gt;] } rule terme { \u0026lt;atome\u0026gt; + % \u0026lt;mult-div-op\u0026gt; } token mult-div-op { [\u0026lt; * / \u0026gt;] } rule atome { | \u0026lt;nombre\u0026gt; { make +$\u0026lt;nombre\u0026gt; } | \u0026lt;expr-parenth\u0026gt; { make $\u0026lt;expr-parenth\u0026gt;.made} } rule nombre { \u0026lt;signe\u0026gt; ? [\\d+ | \\d+\\.\\d+ | \\.\\d+ ] } rule expr-parenth { \u0026#39;(\u0026#39; \u0026lt;expr\u0026gt; \u0026#39;)\u0026#39; } token signe { [\u0026lt; + - \u0026gt;] } } 注意，在括号中的表达式的情况下，可以递归地调用expr规则。这种递归调用的可能性是语法能力的重要组成部分，但必须采取一些预防措施来避免进入无限递归的风险; 这些预防措施将在4.5节中详细讨论 。（避免左递归的陷阱）。\n我们还可以注意到，我们在语法中集成了两个动作（在原子规则中））。我们特别出于实际原因做出了这样的选择：由于原子规则包含非常不同的命名子规则，因此更容易将操作直接集成到子规则的上下文中。如果这些股票被放置在一类股票中，则有必要确定哪些子规则已得到承认。这并不难，但它会使代码更复杂一些。第二个原因是教学法：尽管创建一个单独的一类行动通常会更好（我们将在本例中很快完成此操作），但有必要知道可以偶尔直接集成行动。用语法。对于一个非常简单的语法，它可能是过度工程 而不是仅为一个或两个动作创建一个动作类。\n以下是与此语法相关的操作类：\nclass CalcActions { method TOP ($/) { make $\u0026lt;expr\u0026gt;.made } method expr ($/) { $.calculer($/, $\u0026lt;terme\u0026gt;, $\u0026lt;plus-moins-op\u0026gt;) } method terme ($/) { $.calculer($/, $\u0026lt;atome\u0026gt;, $\u0026lt;mult-div-op\u0026gt;) } method expr-parenth ($/) { make $\u0026lt;expr\u0026gt;.made; } method calculer ($/, $operandes, $operateurs) { my $result = (shift $operandes).made; while my $op = shift $operateurs { my $nombre = (shift $operandes).made; given $op { when \u0026#39;+\u0026#39; { $result += $nombre; } when \u0026#39;-\u0026#39; { $result -= $nombre; } when \u0026#39;*\u0026#39; { $result *= $nombre; } when \u0026#39;/\u0026#39; { $result /= $nombre; } default { die \u0026#34;operateur inconnu \u0026#34;} } } make $result; } } 计算方法从左到右确定表达式（由加法或减法运算符分隔的项）和项（由乘法或除法运算符分隔的原子）的值，因为这些运算符在左侧都是关联的。\n可以使用以下代码片段测试此语法和与其关联的操作类：\nfor |\u0026lt; 3*4 5/6 3+5 74-32 5+7/3 5*3*2 (4*5) (3*2)+5 4+3-1/5 4+(3-1)/4 \u0026gt;, \u0026#34;12 + 6 * 5\u0026#34;, \u0026#34; 7 + 12 + 23\u0026#34;, \u0026#34; 2 + (10 * 4) \u0026#34;, \u0026#34;3 * (7 + 7)\u0026#34; { my $résultat = Calculette.parse($_, :actions(CalcActions)); # say $résultat; printf \u0026#34;%-15s %.3f\\n\u0026#34;, $/, $résultat.made if $résultat; } 其中显示以下结果：\n$ raku grammaire_arithm_2.pl6 3*4 12.000 5/6 0.833 3+5 8.000 74-32 42.000 5+7/3 7.333 5*3*2 30.000 (4*5) 20.000 (3*2)+5 11.000 4+3-1/5 6.800 4+(3-1)/4 4.500 12 + 6 * 5 42.000 7 + 12 + 23 42.000 2 + (10 * 4) 42.000 3 * (7 + 7) 42.000 有人可能想知道这个程序是否适用于嵌套括号。当我编写这段代码时，我问自己这个问题，我认为在这种情况下它可能无法正常工作，并且我可能需要添加一些东西以正确分析表达式嵌套括号。事实证明它不是，它适用于嵌套括号：\nfor \u0026#34;(((2+3)*(5-2))-1)*3\u0026#34;, \u0026#34;2 * ((4-1)*((3*7) - (5+2)))\u0026#34; { my $résultat = Calculette.parse($_, :actions(CalcActions)); printf \u0026#34;%-30s %.3f\\n\u0026#34;, $/, $résultat.made if $résultat; } 这个显示正确的结果：\n(((2+3)*(5-2))-1)*3 42.000 2 * ((4-1)*((3*7) - (5+2))) 84.000 3-9 Grammar：先进的理念和观点 3-9-1 角色构成 在面向对象的编程中，角色对可以由不同类共享的行为（通常是方法）进行分组。角色在技术上与类非常相似，但最大的区别在于不期望直接从角色实例化对象。在OOP中，可以将角色添加到整个类，或仅添加到类的各个对象。将角色功能添加到类中称为角色组合。\n使用关键字do将角色添加到类（或对象） ：\nrole Personne-details { has Adresse $.adresse is rw; # Adresse : type défini préalablement has NumString $.telephone-fixe is rw; # idem pour NumString method déménage (Adresse $nouvelle-adresse) { $.adresse = $nouvelle-adresse; } # … autres méthodes } class Personne-privée does Personne-details { has Str $.nom; has Str $.prénom; # autres attributs et méthodes } 角色是在OOP中重用代码的一种非常强大的方法。有关OOB角色组成的更多信息，请参阅Perl对象，类和角色教程6 - 面向对象编程教程。\n读者已经理解Raku的语法最终只是一种特定的类形式，并不会惊讶于我们也可以在语法中添加角色。这些角色最终可能包含OOP中使用的属性和方法，但它们通常包含命名规则。\n通常，角色将是从较小的独立组件汇编语法的好方法。例如，匹配引号（或撇号）中的数字和字符串是一种非常常见的需求，对于分析JSON，YAML，HTML，配置文件或数学表达式非常有用。因此，我们可以想象将角色形式的通用组件添加到更具体的语法（或添加到语法中的其他角色）。\n在下面的示例中，我们定义了第一个角色Integer，它提供了用于匹配有符号或无符号整数的规则; 然后我们使用Integer角色的一些规则定义第二个角色Floating：感谢子句Do Integer并提供匹配浮点数的规则：\nrole Entier { token non-signé { \u0026lt;[0..9]\u0026gt;+ } token signe { [ \u0026#39;+\u0026#39; | \u0026#39;-\u0026#39; ] } token entier-signé { \u0026lt;signe\u0026gt;? \u0026lt;non-signé\u0026gt; } } role Flottant does Entier { token exposant { :i e \\s* \u0026lt;entier-signé\u0026gt; } token point-décimal { \u0026#39;.\u0026#39; } token nombre-fractionnaire { || \u0026lt;entier-signé\u0026gt; \u0026lt;point-décimal\u0026gt; \u0026lt;entier-signé\u0026gt; || \u0026lt;point-décimal\u0026gt; \u0026lt;entier-signé\u0026gt; || \u0026lt;entier-signé\u0026gt; \u0026lt;point-décimal\u0026gt;? } token flottant { \u0026lt;nombre-fractionnaire\u0026gt; \u0026lt;exposant\u0026gt;? } } 这为我们提供了以下语法分析简单算术表达式中的重用组件：\ngrammar MultDiv does Flottant { rule TOP { || \u0026lt;dividende=nombre\u0026gt; \u0026#39;/\u0026#39; \u0026lt;diviseur=nombre\u0026gt; { make $\u0026lt;dividende\u0026gt; / $\u0026lt;diviseur\u0026gt; } || [ \u0026lt;nombre\u0026gt; ]+ % \\* { make [*] $\u0026lt;nombre\u0026gt; } } token nombre { \\s* [\u0026lt;entier-signé\u0026gt; | \u0026lt;flottant\u0026gt; ] \\s*} } for \u0026#39;7 * 6\u0026#39;, \u0026#39;3*2*7\u0026#39;, \u0026#39;126/3\u0026#39;, \u0026#39;147.0 / 3.5\u0026#39; -\u0026gt; $expr { my $match = MultDiv.parse($expr); printf \u0026#34;%-20s %s %d \\n\u0026#34;, $match, \u0026#34;La réponse est: \u0026#34;, $match.made; } Floating Does子句将Floating角色中定义的规则和Integer角色都导入到MultDiv语法中。\n显示的结果符合预期：\n$ raku grammaire_roles.pl6 7 * 6 La réponse est: 42 3*2*7 La réponse est: 42 126/3 La réponse est: 42 147.0 / 3.5 La réponse est: 42 请注意，我们再次将操作直接插入到语法中，并在此处使用为命名规则的捕获提供特定名称的可能性（参见§2.8 ）以区分规则提供的捕获在分割的情况下的数字。\n现在我们已经构建了这些软件块，它们是由Integer和Floating角色提供的整数签名和浮动规则，我们也可以重用它们来匹配我们语法中用于解析3.6 JSON的相同类型的实体。 0.4 ：\ngrammar JSON-Grammaire does Flottant { token TOP { ^ \\s* [ \u0026lt;objet\u0026gt; | \u0026lt;tableau\u0026gt; ] \\s* $ } # … Règles définissant les objets, paires, tableaux, chaînes, etc. token nombre { \u0026lt;entier-signé\u0026gt; | \u0026lt;flottant\u0026gt; } token valeur { | \u0026lt;objet\u0026gt; | \u0026lt;tableau\u0026gt; | \u0026lt;chaîne\u0026gt; | \u0026lt;nombre\u0026gt; | true | false | null } } 我们发现构建可重用的角色软件库以简化语法编写变得非常容易。\n与继承相关，角色组合具有从编译而不是执行中检测命名冲突的优点。这迫使你解决这些冲突，并使角色组合比继承更可靠和安全，无论是面向对象的编程还是语法创建。\n3-9-2 设定规则 可以使用参数定义规则（名为类型正则表达式，标记或规则的正则表达式），从而使用参数调用：\nmy token date($mois) { \\d\\d? \\s+ $mois \\s+ \\d**4 } say \u0026#34;En juin\u0026#34; if \u0026#34;13 juin 2015\u0026#34; ~~ /\u0026lt;date(\u0026#34;juin\u0026#34;)\u0026gt;/; # -\u0026gt; En juin say \u0026#34;En mai\u0026#34; if \u0026#34;13 juin 2015\u0026#34; ~~ /\u0026lt;date(\u0026#34;mai\u0026#34;)\u0026gt;/; # (échec) my $date = \u0026#34;13 $_ 2015\u0026#34; and say $date ~~ /\u0026lt;date(\u0026#34;mai\u0026#34;)\u0026gt;/ ?? \u0026#34;Date $date en $_\u0026#34; !! \u0026#34;Date $date pas en $_\u0026#34; for \u0026lt;mars avril mai juin\u0026gt;; # affiche : # Date 13 mars 2015 pas en mars # Date 13 avril 2015 pas en avril # Date 13 mai 2015 en mai # Date 13 juin 2015 pas en juin 这是一个稍微复杂的带有参数规则的更复杂结构的示例：\nmy token mots { \u0026lt;[ \\w \\s \\-]\u0026gt;+ } my token entre-crochets { \u0026lt;start(\u0026#34;[\u0026#34;)\u0026gt; \u0026lt;ident\u0026gt; \u0026lt;end(\u0026#34;]\u0026#34;)\u0026gt; } my token entre-paren { \u0026lt;start(\u0026#34;(\u0026#34;)\u0026gt; \u0026lt;mots\u0026gt; \u0026lt;end(\u0026#34;)\u0026#34;)\u0026gt; } my token entre-chevrons { \u0026lt;start(\u0026#34;\u0026lt;\u0026#34;)\u0026gt; \u0026lt;ident\u0026gt; \u0026lt;end(\u0026#34;\u0026gt;\u0026#34;)\u0026gt; } my token start($début) { $début } my token end($fin) { $fin } say ~$\u0026lt;entre-crochets\u0026gt; if \u0026#34;[Capitaine_Crochet]\u0026#34; ~~ /\u0026lt;entre-crochets\u0026gt;/; # Affiche : [Capitaine_Crochet] say $\u0026lt;entre-paren\u0026gt; if \u0026#34;[par-parenthèse]\u0026#34; ~~ /\u0026lt;entre-paren\u0026gt;/; # -\u0026gt; () # (échec puisqu\u0026#39;il y a des crochets et non des parenthèses say $\u0026lt;entre-paren\u0026gt; if \u0026#34;(par-parenthèse)\u0026#34; ~~ /\u0026lt;entre-paren\u0026gt;/; # Affiche : # ｢(par-parenthèse)｣ # start =\u0026gt; ｢(｣ # mots =\u0026gt; ｢par-parenthèse｣ # end =\u0026gt; ｢)｣ 3-9-3 递归规则和动态变量 语法规则本质上通常是递归的。例如，要匹配嵌套括号，你可能希望编写此样式的递归语法：\ngrammar G { rule TOP { \u0026#39;(\u0026#39; ~ \u0026#39;)\u0026#39; [ [ $\u0026lt;int\u0026gt;=\\d+ ]+| \u0026lt;TOP\u0026gt; ] + } } say G.parse(\u0026#34;(22 (43 45))\u0026#34;); # Affiche : # ｢(22 (43 45))｣ # int =\u0026gt; ｢22｣ # TOP =\u0026gt; ｢(43 45)｣ # int =\u0026gt; ｢43｣ # int =\u0026gt; ｢45｣ 这里，递归调用TOP规则来解析嵌套括号。它可以很容易地分析具有较高嵌套级别的字符串，例如“（22（43（46 45（41）））”。\n将上下文传递给递归调用的规则时，这会变得更加棘手。\n人们可以使用原则参数规则（见第 3.9.2上图）可以更改上下文，但它可能很快就会变得非常冗长。也正是在原则上可以使用全局变量，但是全局变量通常被认为是不好的做法（可能除了一些特殊情况，如环境变量，这是全球性的），因为全局变量经常违反结构化编程的原则，不清楚，不健壮和危险，并且它通常不适用于线程。\n无论是语法还是简单的函数调用或普通的方法，因为它使用递归调用机制，语法可以是艰巨的，当你需要管理多个变量传递回调用函数或函数的返回值。\n动态变量（使用twigil *）解决了这个问题。他们是词法声明，但他们不仅在窝寻求词汇包容性，而且在窝动态的包容性。\n例如，考虑一个计算数字阶乘的简单递归函数，可以写成如下：\nsub fact($n){return 1 if $n \u0026lt;= 1; return $n*fact($n-1)} sub callfact(Int $n){ die \u0026#34;Factorielle non définie pour nombre négatif\u0026#34; if $n \u0026lt; 0; say \u0026#34;Factorielle = \u0026#34;, fact($n); } callfact(5); # -\u0026gt; 120 假设我们还想计算低于所考虑数的整数之和。参数和多个返回值的通过可能变得相当快速且不可读。以下是将部分和存储在动态变量中的可能语法：\nsub fact($n){$*sum += $n; return 1 if $n \u0026lt;= 1; return $n*fact($n-1);} sub callfact(Int $n){ die \u0026#34;Factorielle non définie pour nombre négatif\u0026#34; if $n \u0026lt; 0; my $*sum = 0; say \u0026#34;Fact = \u0026#34;, fact($n); say \u0026#34;Somme = \u0026#34;, $*sum; } callfact(5); # -\u0026gt; Fact = 120 \\n Somme = 15 动态变量 $*sum 在调用函数callfact中声明并初始化为0 。它在词法上是callfact函数的本地，但它在函数事实中是可见的和可修改的，因为事实是由callfact调用的，因此它驻留在callfact的动态范围内。这个变量成为这两个函数的全局变量（可能是它们可能调用的函数），这消除了传递参数或在它们之间返回值的需要，但它仍然是一个变量。词汇变量“私有”，因为它在程序的其余部分是不可见的。\n动态变量不一定是标量，可以类似地定义数组（例如，@*数组）或动态散列。\n当语法变得有点复杂时，动态变量通常可以简化实现。\n语法STD.pm Raku的大量使用动态变量，尤其是定义将被传递给函数词法或句法分析上下文，调用的方法或规则，而不需要建立天然气厂的真实通道参数和返回值。例如，有一种动态散列％* LANG定义了不同的“子语言”的Raku（基本Raku中，正则表达式，Perl的正则表达式5等）：\n%*LANG\u0026lt;MAIN\u0026gt; = ::STD::P6 ; %*LANG\u0026lt;Q\u0026gt; = ::STD::Q ; %*LANG\u0026lt;Quasi\u0026gt; = ::STD::Quasi ; %*LANG\u0026lt;Regex\u0026gt; = ::STD::Regex ; %*LANG\u0026lt;P5\u0026gt; = ::STD5 ; %*LANG\u0026lt;P5Regex\u0026gt; = ::STD5::Regex ; 3-9-4 所谓原类型的规则 同样有可能，由于关键字多，写几个函数或方法的倍数相同的名字，但是编译器可以用不同的签名区分，我们可以写，用的是-clef 原，名称相同的规则，但适用于不同的实体。\n例如，当前的Raku语法使用以下构造来定义sigils：\nproto token sigil {*} # ... token sigil:sym\u0026lt;$\u0026gt; { \u0026lt;sym\u0026gt; } token sigil:sym\u0026lt;@\u0026gt; { \u0026lt;sym\u0026gt; } token sigil:sym\u0026lt;%\u0026gt; { \u0026lt;sym\u0026gt; } token sigil:sym\u0026lt;\u0026amp;\u0026gt; { \u0026lt;sym\u0026gt; } # ... une petite dizaine d\u0026#39;autres définitions de sigils 这将创建一个名为sigil（proto）的组和（在此示例中）属于该组的四个规则（它们属于该组，因为它们具有相同的名称）作为参数接收sym标识符。这些规则中的第一个将sym分配给$，然后在规则的主体中匹配此符号（带有符号 \u0026lt;sym\u0026gt;）。第二条规则与@相同，依此类推。\n如果语法调用规则\u0026lt;sigil\u0026gt;，我们会得到这五个规则的列表，它们之间有一个或逻辑。这与你编写规则的方法大致相同，如下所示：\ntoken sigil { \u0026#39;$\u0026#39; | \u0026#39;@\u0026#39; | \u0026#39;%\u0026#39; | \u0026#39;\u0026amp;\u0026#39; } 但是，使用这些原型或protoregex，可以更容易地扩展语法，如下所示（第3.9.6节 ）。\n为了§3.6.3.5的记忆，已经给出了可能使用原型规则的另一个例子 。\n3-9-5 继承和可变语法 继承了语法的可能性提供了一种没有料到的表达能力和巨大的前景：它是可能的，例如作为模块的一部分，写语法的“子语法”语法或女儿重载操作符，添加功能甚至修改语法元素，并使用此本地修改语法运行具有相同Raku编译器的Perl程序。\n正是由于这种基本机制，Raku的语法是动态的，例如，很容易定义自己的运算符（请参阅创建自己的教程操作符从Perl到Raku - Part 2：新奇事物）。然而，没有必要控制继承和语法的可变性，以建立自己的运营商，因为语言提供了最高级别的一个简单的机制来做到这一点，如在运营商的定义因子 “ ！ “\nmulti sub postfix:\u0026lt;!\u0026gt;(Int $x) { my $factorielle = 1; $factorielle *= $_ for 2..$x; return $factorielle; } say 5!; # -\u0026gt; imprime 120 Raku宏（在编译时运行的各种函数）也使用Raku语法的可变性作为底层机制。\n3-9-6 语法和语言可扩展性的变化 对语法进行低级修改以扩展语言可能看起来像是白魔法，但实际上并不像看起来那么神秘。\n通过采用允许定义语言符号的proto类型规则（第3.9.4节 ），可以很容易地将新的符号添加到Raku的子语法中。例如，假设编译器使用的Raku的语法称为“Raku”（其实名实际上类似于STD：ver ，其中xxx是版本号），我们可以添加sigil“ μ ”：\ngrammar NouveauSigilP6 is Raku { token sigil:sym\u0026lt;µ\u0026gt; { \u0026lt;sym\u0026gt; } } 或者，对于系统使用“ $ ”违背亲欧洲信念的读者，修改现有的印记：\ngrammar EuroRaku is Raku { token sigil:sym\u0026lt;$\u0026gt; { \u0026#39;€\u0026#39; } } 语法EuroRaku现在允许使用的印记“ € ”为标量，但因为它是用相同的参数相同的规则（：印记符号 \u0026lt;$\u0026gt; ，原来的语法，编译器没有）难以知道该怎么做。英国的欧洲怀疑论者可能，如果他们希望通过印记“ £ ”音乐爱好者“ ♪ ”，也是过敏反全球化“ $ ”的锤子和镰刀（“ ☭ ”）或符号变就变。\n3-9-7 展望 还有许多其他真正令人惊叹和惊人的扩展可能性，但它们更倾向于极客或语言专家，而不是普通用户。在这里探索它们是不可能的，因为它可能需要几十个额外的页面，并且不属于本教程的范围。\n在撰写这些页面的时候，目前几乎没有关于这个主题的文档（实际上关于Raku语法，甚至是英语），最丰富的信息来源可能是参考Raku和现有模块的标准语法（以及实验）。然而，感兴趣的读者可以通过咨询以下链接加深：Patrick Michaud的The Raku标准语法 r和Moritz Lenz的Raku的可变语法。不幸的是，这些来源很老，但如果某些细节点可能已经过时，那么概念性讨论仍然非常重要。\n前款规定原文为2015年和可用的文件已经在优秀图书的2017年12月以来的出版物明确扩大解析Raku个语法和的正则表达式-一个递归下降到解析由莫里茨伦茨（Apress出版，201页）。如果你读英语，那你有兴趣，请不要犹豫一秒，这真的是我的书也喜欢看，当我开始学习正则表达式，特别是Raku语法。\n4. 最佳实践和陷阱 Raku正则表达式和语法单独形成一个真正的编程模型，通常至少部分是新的，因此需要掌握。\n为了帮助读者编写强大的正则表达式和语法，这里有一些好的做法，应用似乎是明智的（从常识来看，这些不是盲目遵循的规则）。这些良好实践的范围从简单的小规模代码格式到对匹配的精细理解，包括帮助避免可能的陷阱和不可读的代码。\n4-1 格式化代码 当不使用副词：sigspace时，在Raku正则表达式中忽略空格（和注释）。这具有插入空格和注释以提高可读性的优点。\n比较这个非常紧凑的正则表达式来匹配浮点数（浮点数）：\nmy regex float {\u0026lt;[+-]\u0026gt;?\\d*\u0026#39;.\u0026#39;\\d+[e\u0026lt;[+-]\u0026gt;?\\d+]?} 用它，等价，但更具可读性：\nmy regex float { \u0026lt;[+-]\u0026gt;? # signe optionnel \\d* # chiffres de début, optionnels \u0026#39;.\u0026#39; # séparateur décimal \\d+ [ # exposant optionnel e \u0026lt;[+-]\u0026gt;? \\d+ ]? } （上面这个非常简单的例子只是为了说明格式化，我们之前已经给出了更好的方法来匹配浮点数，我们将把它提高一点。）\n通常，希望：\n使用原子周围和群内空间; 将量词直接放在原子之后，不插入空格，并且; 垂直对齐括号和括号打开或关闭。 同样，垂直条“ | 分离替代方案的不同可能性：\nmy regex exemple { \u0026lt;début\u0026gt; [ || \u0026lt;choix_1\u0026gt; || \u0026lt;choix_2\u0026gt; || \u0026lt;choix_3\u0026gt; ]+ \u0026lt;fin\u0026gt; } 4-2 限制尺寸 正则表达式需要非常少的装饰或船码，因此它们通常比普通代码更紧凑。保持足够小是很重要的。\n当捕获量变高或者我们使用命名捕获量来更好地理解它时，我们应该问自己是否应该更进一步并转到命名的正则表达式。\n4-2-1 识别浮点数 例如，前一章（第4.1节 ）的正则表达式浮点数可以分解为更小的部分：\nmy token signe { \u0026lt;[+-]\u0026gt; } my token décimal { \\d+ } my token exposant { \u0026#39;e\u0026#39; \u0026lt;signe\u0026gt;? \u0026lt;décimal\u0026gt; } my regex float { \u0026lt;signe\u0026gt;? \u0026lt;décimal\u0026gt;? \u0026#39;.\u0026#39; \u0026lt;décimal\u0026gt; \u0026lt;exposant\u0026gt;? } 当正则表达式变得更复杂时，这会有所帮助。例如，如果要在有指数时使小数点（“逗号”）可选：\nmy regex float { \u0026lt;signe\u0026gt;? [ || \u0026lt;décimal\u0026gt;? \u0026#39;.\u0026#39; \u0026lt;décimal\u0026gt; \u0026lt;exposant\u0026gt;? || \u0026lt;décimal\u0026gt; \u0026lt;exposant\u0026gt; ] } 这也允许更好地重用代码。上面定义的符号和小数规则（标记）也可以非常简单地定义一个整数：\nmy regex entier { \u0026lt;signe\u0026gt;? \u0026lt;décimal\u0026gt; } 4-2-2 识别复数 类似地，再次通过重用上面定义的符号和十进制规则（标记），我们可以定义一个复数（用笛卡尔代数表示法），如下所示：\nmy rule nombre { \u0026lt;float\u0026gt; || \u0026lt;signe\u0026gt;? \u0026lt;décimal\u0026gt; } my regex complexe { [ || [\u0026lt;nombre\u0026gt; \\s* \u0026lt;signe\u0026gt; \\s* ]? \u0026lt;nombre\u0026gt; \\s* \u0026#39;i\u0026#39; || \u0026lt;nombre\u0026gt; ] } say \u0026#34;Reconnu\u0026#34; if \u0026#39;3+4i\u0026#39; ~~ /\u0026lt;complexe\u0026gt;/; # -\u0026gt; Reconnu # Accéder aux différents éléments du nombre complexe reconnu : say ~$/\u0026lt;complexe\u0026gt; if \u0026#39;3.5e-7 + 4.17i\u0026#39; ~~ /\u0026lt;complexe\u0026gt;/; # 3.5e-7 + 4.17i say ~$/\u0026lt;complexe\u0026gt;\u0026lt;nombre\u0026gt;[0]; # -\u0026gt; 3.5e-7 say ~$/\u0026lt;complexe\u0026gt;\u0026lt;nombre\u0026gt;[1]; # -\u0026gt; 4.17 say ~$/\u0026lt;complexe\u0026gt;\u0026lt;nombre\u0026gt;[0]\u0026lt;float\u0026gt; # -\u0026gt; 3.5e-7 say ~$/\u0026lt;complexe\u0026gt;\u0026lt;signe\u0026gt; # -\u0026gt; + 很明显，即使不使用语法（至少对于这个非常简单的情况），人们也可以使用命名规则构建真正的乐高游戏的砖块。识别IP地址将给出另一个例子。\n4-2-3 识别URL 我们将在此考虑简化URL（Web地址）可以是IP地址（由句点分隔的四个数字的系列），也可以是表示协议和域名的字符串，后跟路径访问资源。\n我们可以从尝试识别IP地址开始。\n4-2-4 识别IP地址 IPv4地址由4个数字组成，由1到3位数字以点分隔。\n正则表达式首次尝试识别IP地址可能是：\n/(\\d**1..3) \\. (\\d**1..3) \\. (\\d**1..3) \\. (\\d**1..3)/ 但它至少相当费力和笨拙。\n应用于量化器的％修饰符（参见上面的第2.4节 ）允许你指定重复确认之间必须存在的分隔符：\n/ (\\d ** 1..3) ** 4 % \u0026#39;.\u0026#39; / 它已经好多了，但遗憾的是从某种观点来看是错误的：这个正则表达式会毫无问题地匹配字符串“125.266.742.12”，这不是有效的IP地址（四个数字中的每一个都必须表示一个字节，因此可以用十进制表示法理解，在0到255之间。这一切当然取决于我们究竟要做什么，上面的正则表达式足以捕获我们正在寻找的东西，但它并不能完全确保输入数据的验证。\n要验证一个字节是否捕获好字节（数字低于255），可以构建一个正则表达式（或令牌）字节，它将检查这些条件，然后使用字节的正则表达式ip ：\nmy regex octet { || (25 \u0026lt;[0..5]\u0026gt; # 250 à 255 || 2 \u0026lt;[0..4]\u0026gt; \\d # 200 à 249 || 1 \\d**2 # 100 à 199 || \\d**1..2) # 0 à 99 } my regex ip { \u0026lt;octet\u0026gt; ** 4 % \u0026#39;.\u0026#39; } say \u0026#34;Reconnu\u0026#34; if \u0026#34;244.7.245.23\u0026#34; ~~ /\u0026lt;ip\u0026gt;/; # -\u0026gt; Reconnu say ~$/; # -\u0026gt; 244.7.245.23 请注意，通过使用代码类型断言（结束），可以显着简化正则表达式字节：\nmy regex octet {(\\d ** 1..3) \u0026lt;?{0 \u0026lt;= $0 \u0026lt;= 255 }\u0026gt; } 最后两个版本的正则表达式字节仍然存在一些缺陷，在某些情况下可能会出现在字符串的最后一个八位字节：字符串“244.7.245.263”（不是IP地址）正确，因为最后一个数字大于255），IP正则表达式 将识别IP地址显然是正确的，但可能不需要：“244.7.245.26”。为了避免这个问题，我们可以在字节定义中关于少于三位数字节的部分断言之前添加否定值（\u0026lt;！Before \u0026hellip;\u0026gt;）：\nmy regex octet { || (25 \u0026lt;[0..5]\u0026gt; # 250 à 255 || 2 \u0026lt;[0..4]\u0026gt; \\d # 200 à 249 || 1\\d**2 # 100 à 199 || \\d**1..2) \u0026lt;!before \\d\u0026gt;) # 0 à 99 } my regex ip { \u0026lt;octet\u0026gt; ** 4 % \u0026#39;.\u0026#39; } 同样，简单IP地址的情况非常简单，我们可能不用编写语法，因为上面的正则表达式的组合基本上就足够了。\n但为什么我们要避免语法的定义呢？编写和使用语法并不复杂（只要你习惯了），而不是组装一系列命名规则，并且可以更容易地将语法扩展到其他元素，例如URL。如有必要，这也将受益于与语法相关的额外优势（受限命名空间，继承，方法操作，.parse和.fileparse方法等）\n4-2-5 识别URL的 Grammar 解析URL的语法（相当基础）可以具有以下形式：\ngrammar URL { token TOP { \u0026lt;schéma\u0026gt; \u0026#39;://\u0026#39; [\u0026lt;ip\u0026gt; | \u0026lt;nom-domaine\u0026gt; ] [ \u0026#39;:\u0026#39; \u0026lt;port\u0026gt;]? \u0026#39;/\u0026#39; \u0026lt;chemin\u0026gt;? } token octet { (\\d**1..3) \u0026lt;?{ $0 \u0026lt; 256 }\u0026gt; } token ip { \u0026lt;octet\u0026gt; [\\. \u0026lt;octet\u0026gt; ] ** 3 } token schéma { \\w+ # Ce pourrait aussi être : [http | https | ftp | ...] } token nom-domaine { (\\w+) ( \\. \\w+ )* } token port { \\d+ } token chemin { \u0026lt;[ a..z A..Z 0..9 \\-_.!~*\u0026#39;():@\u0026amp;=+$,/ ]\u0026gt;+ } } my $cible = URL.parse(\u0026#39;http://raku.org/documentation/\u0026#39;); say $cible\u0026lt;nom-domaine\u0026gt;; # -\u0026gt; raku.org 4-3 要匹配什么？ 通常，输入数据的格式没有明确指定，或者规范（如果存在）是程序员不知道的。对于预期的内容，相当自由或灵活通常是有用的，但仅限于没有模棱两可的风险。\n如果我们以.ini文件为例：\n[section] key=value 部分标题中可以包含哪些内容？只允许一个单词可能限制太多，也许有人会写[两个单词]，或者使用破折号，或者只有上帝知道还有什么\u0026hellip;\u0026hellip;而不是问什么是允许的在此标题内，询问不允许的内容可能会有所帮助。\n很明显，禁止关闭钩子，因为[a] b]至少可以说是模棱两可的。从同一观点来看，必须禁止开口钩。哪个可以给我们以下规则：\ntoken entête { \u0026#39;[\u0026#39; \u0026lt;-[ \\[\\] ]\u0026gt;+ \u0026#39;]\u0026#39; } 如果我们分析一行，这似乎运作良好。但如果我们处理整个文件，突然规则分析：\n[ avec un retour à la ligne entre deux] 作为一个正确的标题，这可能不是一个好主意。务实的妥协可能是写：\ntoken entête { \u0026#39;[\u0026#39; \u0026lt;-[ \\[\\] \\n ]\u0026gt;+ \u0026#39;]\u0026#39; } 然后，在后处理中，消除空格，制表符等。在节标题的开头和结尾处。\n4-4 匹配空白 副词：sigspace（或使用规则，而不是正则表达式或令牌）对于分析可能出现在多个位置的空间非常有用。\n如果我们回到ini文件分析的例子，规则可以是：\nmy regex kvpair { \\s* \u0026lt;clef=identifiant\u0026gt; \u0026#39;=\u0026#39; \u0026lt;val=identifiant\u0026gt; \\n+ } 这原则上有效，但可能不像人们希望的那样灵活。由于用户可以决定在等号周围放置空格，可能应该是：\nmy regex kvpair { \\s* \u0026lt;clef=identifiant\u0026gt; \\s* \u0026#39;=\u0026#39; \\s* \u0026lt;val=identifiant\u0026gt; \\n+ } 这很快就会变得不切实际。所以我们可以尝试使用规则而不是正则表达式并写：\nmy rule kvpair { \u0026lt;clef=identifiant\u0026gt; \u0026#39;=\u0026#39; \u0026lt;val=identifiant\u0026gt; \\n+ } 但要小心！在值消耗所有可用空间（包括换行符）后隐式匹配空格，因此\\ n + final无法匹配。并且通常禁用回溯，它不起作用。\n这是将隐式空间重新定义为输入格式中不重要的空间非常有用的地方，这可以通过重新定义ws 令牌 来完成（但它只能起作用） \u0026lsquo;语法内部）：\ngrammar IniFormat { token ws { \u0026lt;!ww\u0026gt; \\h* } rule entête { \u0026#39;[\u0026#39; (\\w+) \u0026#39;]\u0026#39; \\n+ } token identifiant { \\w+ } rule kvpair { \\s* \u0026lt;clef=identifiant\u0026gt; \u0026#39;=\u0026#39; \u0026lt;val=identifiant\u0026gt; \\n+ } token section { \u0026lt;entête\u0026gt; \u0026lt;kvpair\u0026gt;* } token TOP { \u0026lt;section\u0026gt;* } } # Exemple de fichier ini dans un document \u0026#34;ici même\u0026#34; : my $contenu = q:to/FIN_INI/; [passwords] jean=mdp1 anne=plusfiable123 [quotas] jean=123 anne=42 FIN_INI say so IniFormat.parse($contenu); 除了把所有的正则表达式语法，使他们成为的想法令牌或规则（正则表达式，因为这些不需要反正回溯），以及有趣的新点定义如下：\ntoken ws { \u0026lt;!ww\u0026gt; \\h* } 在隐式空间分析期间调用。它匹配零个或多个不在单词类型的两个字符之间的水平空格（\u0026lt;！Ww\u0026gt;，否定单词中的断言“）。对水平空间的限制是必要的，因为换行符（它们是垂直空格）界定了记录，因此不应该隐式匹配为仅仅空格。\n弯道周围的空间可能仍然存在问题。正则表达式\\ n +将无法匹配字符串，例如\\ n \\ n，因为两个换行符之间有一个空格。要匹配这种输入字符串，可以用 \\ n \\ s *替换 \\ n +。\n4-5 避免递归左陷阱 所谓的左递归（递归或左），其中如果规则称自己年初模式，不一定消耗分析系统的字符语法可能进入无限循环的情况下（例如，因为像？或*这样的量化器允许匹配空字符串。\n例如，请考虑以下规则：\n避免\ntoken x { \u0026lt;x\u0026gt;? \u0026#39;x\u0026#39; } 有人可能认为这个规则等同于x +模式，但事实并非如此，这个规则将进入无限递归，因为量词？允许它匹配一个空字符串，然后在递归调用自身时不消耗已解析字符串的元素。\n要避免此陷阱，必须确保每个递归调用使正则表达式引擎的光标前进至少一个字符。\n在间接递归的情况下也可能出现左递归情况：例如，如果规则调用规则，它本身调用规则，并且规则调用反过来规则：如果某些字符串可能发生三个规则都不会消耗字符，那么我们再次冒险进入无限递归循环。同样，游行是为了保证这三个规则中至少有一个消耗链中的至少一个字符。\n3.8节中计算器的语法 。提出这种间接递归。例如，你可以使用以下规则调用序列找到自己：\nTOP → expr → terme → atome → expr-parenth → expr … 其中expr规则本身是间接调用的。\n但是在这个语法中没有无限递归的风险，因为这个递归链中的一个规则在它可以调用下一个字符串之前在解析后的字符串中消耗至少一个字符; 更确切地说，规则expr-parenth ：\nrule expr-parenth { \u0026#39;(\u0026#39; \u0026lt;expr\u0026gt; \u0026#39;)\u0026#39; } 在调用递归expr之前，必须使用已解析字符串的左括号。\n4-6 调试正则表达式或Raku Grammar 当你开始学习编程时，你会因为愚蠢的小错误而浪费很多时间。凭借经验，你可以学会减少错误并编写更快的代码。\n随着语法（以及更普遍的正则表达式），一切似乎都重新开始：即使是有经验的程序员在处理语法时也会开始犯愚蠢的错误。编写正则表达式以及更多的语法与开发普通程序程序没有太大关系，需要一个新的学习阶段。\n以下是一些帮助编写和调试语法的方法（部分加入了上面已经给出的一些提示）：\n**小规模地继续，**按规则统治，并在你去的时候测试规则;\n单独测试规则 ：如果你的语法不起作用，请逐个测试每个规则以确定规则是错误的，错误命名（或从未调用过），等等。：\ngrammar MaGrammaire { token TOP { ^ [ \u0026lt;commentaire\u0026gt; | \u0026lt;truc\u0026gt; ]* $ } token commentaire { \u0026#39;#\u0026#39; \\N* $$ } token truc { ^^(\\S+) \\= (\\S+) $$ } } # Essayer de parser l\u0026#39;ensemble: say ?MaGrammaire.parse(\u0026#34;#commentaire\\ntoto = titi\u0026#34;); # 0 # La grammaire ne reconnaît pas le test, voyons les règles une à une say ?MaGrammaire.parse(\u0026#34;#commentaire\\n\u0026#34;, :rule\u0026lt;commentaire\u0026gt;); # 1 - OK say ?MaGrammaire.parse(\u0026#34;toto = titi\u0026#34;, :rule\u0026lt;truc\u0026gt;); # 0 - KO # C\u0026#39;est la règle \u0026lt;truc\u0026gt; qui ne fonctionne pas. 插入显示（打印或说）; 只需将它们放在大括号中，这些显示就可以作为普通代码运行（参见 3.4.2。）。让我们回到上一个我们到达的例子（\u0026lt;trick\u0026gt;规则不起作用）：\ngrammar MaGrammaire { token truc { { say \u0026#34;truc: appelé\u0026#34; } ^^ { say \u0026#34;truc: trouvé début de ligne\u0026#34; } (\\S+) { say \u0026#34;truc: trouvé premier identifiant: $0\u0026#34; } \\= { say \u0026#34;truc: trouvé =\u0026#34; } (\\S+) $$ } } say ?MaGrammaire.parse(\u0026#34;toto = titi\u0026#34;, :rule\u0026lt;truc\u0026gt;); # Affichage: # # truc: appelé # truc: trouvé début de ligne # truc: trouvé premier identifiant: toto # 0 # C\u0026#39;est le signe égal qui n\u0026#39;est pas reconnu. Pourquoi? À cause # de l\u0026#39;espace qui le précède et qui n\u0026#39;est pas dans la règle. Il # suffit par exemple de transformer le token en rule 注意回溯 ：许多习惯于Perl 5或相关正则表达式系统的程序员都熟悉回溯的使用，非常自然且非常强大，只需要简单的正则表达式。但是在嵌套语法（甚至是一组正则表达式）中很难掌握回溯。大多数词汇和句法问题都可以用不需要（或很少）回溯的方式来表达，因此强烈建议避免在语法中回溯，以及有效性的原因只是作为开发者心理健康的保障。也就是说，使用退格键更容易编写一些模式; 如果你使用它们，请务必将范围限制为唯一需要的正则表达式，\nrule verbatim { \u0026#39;[%\u0026#39; ~ \u0026#39;%]\u0026#39; verbatim # Autorise le retour arrière à partir d\u0026#39;ici seulement :!ratchet .*? \u0026#39;[%\u0026#39; endverbatim \u0026#39;%]\u0026#39; } # Le retour arrière sera activé dans la regex finale, mais, dès # qu\u0026#39;une reconnaissance aura été trouvée, on n\u0026#39;en essaiera pas d\u0026#39;autre 最后，让我们提一下 Jonathan Worthington 在 Rakudo/Raku 下的优秀语法和正则表达式调试模块。添加一个使用 Regex::Tracer; 在你的代码中，词法范围内的所有语法都会显示颜色详细的调试信息，特别显示调用哪些规则，哪些规则有效以及哪些规则失败。 Advent Calendar Raku提供了示例和更多详细信息。\n本节中的信息 4.6 调试正则表达式或Raku语法基本上是基于 Moritz Lenz的如何调试Raku语法。\n5. 结论 正则表达式和Raku级的语法是远不是唯一的新的Raku，但他们对自己的完全新的机会开放，既为文字记录功能丰富度分析语言的表现力和可扩展性。我们很可能会发现，经验使用很难在今天进行思考。在我们看来，语法是应该使Raku成为一种语言的一部分，这种语言将在20年或更长时间内保持坚定的现代性。\n6. 另见/来源 关于Raku的文档取得了相当大的进展，但有时仍然不完整。\n章2。 Perl的正则表达式6这份文件在很大程度上是官方文档的法国适应的正则表达式（匿名者），这是我们添加了来自下面的Raku次的测试中，信息剧情简介 S05和一些官方文档的其他外围文档，此处和那里找到的文章以及个人实验产生的元素。\n当我们最初撰写本文档时，官方英语语法文档（Grammars）在当时（2015年底）非常不完整。在2018年，情况现在好多了。\n在我们发布本文档的第一个版本时，毫无疑问是关于该主题的最完整的文档，无论是法语还是英语。在这种情况下，我们将此文档置于知识共享许可 “署名CC BY”下，以授权（甚至鼓励）任何想要自由恢复内容的人，同时希望尽可能引用来源及其作者。即使导致我们做出这种选择的情况不再具有真正的相关性（官方文档已经说过，我们已经说过，已经有了很大的改进），我们认为没有理由改变我们的想法和因此，我们保留此知识共享许可证 “Attribution CC BY”。\n与我们在2015年撰写本文档的第一版时相比，另一个重大变化是2017年在Raku上发布了大量的六本书，从我自己的书，Think Raku - 如何像计算机科学家一样思考（450页，O\u0026rsquo;Reilly，2017年5月），可以电子格式免费打印和下载。在2018年，这本书已被Luis F. Uceta翻译成西班牙语，可以免费下载：Piensa en Raku。在我们写这些专栏的那天（2018年10月底），这本书已经完全翻译，但它仍在等待最后的重读。\n其中一个新的书，发表在2017年12月，是专门讨论正则表达式和语法：用Raku的正则表达式和语法解析-一个递归下降到解析，莫里茨伦茨（215页，Apress出版）。我只能非常热情地向所有希望深化这一主题的人推荐这本优秀的书籍。\n7. 致谢 我感谢官方Raku文档的匿名作者，本文档的某些部分部分是法语的免费改编。\n我感谢Djibril，Roland Chastain，Claude Leloup和Cognominal的校对以及他们非常有用的改进建议。还要感谢CosmoKnacki和Pyramidev，他们在出版后亲切地报道了一些 bug。\n除了 Developpez.com 还有如下教程可供参考:\nPerl 5到Raku-第1部分：基础知识 Perl 5到Raku - 第2部分：最新消息 Perl 5到Raku：深入 Perl 5到Raku - 附录1：Perl 5和Raku之间有什么变化 Perl 5到Raku - 附录2：Raku中的新功能 Raku中的对象，类和角色 - 面向对象的编程教程 Raku简介 - Naoum Hankache和Romuald Nuguet的教程 "},"name":"Raku 的正则表达式和文法","published":"2018-12-15T17:51:05Z","summary":"前所未有的表现力 Perl 5 正则表达式的强大功能使该语言成为分析文本数据的首选工具。从那时起，许多其他编程语言都复制了 Perl 的正则表达式，这部分地削弱了 Perl 在该领域中优于其他语言的优势。\n从 Perl 5 派生的新 Raku 语言创建了一个新的文本匹配模型，该模型源自正则表达式，但功能强大且富有表现力，并且从常规正则表达式中删除它已决定给它们一个新名称，正则表达式。\n不仅 Perl 的正则表达式6的机理是它大大高于现有的所有系统的正则表达式更强大，但它被设计成正则表达式相结合，构建 Grammar 语境，也就是说能够实现词汇和语法分析（系统词法和解析）到更复杂的数据，例如 HTML 文本，XML，XHTML，JSON，YAML，其中，不包括简单的情形，都超出正则表达式的范围。这些 Grammar 甚至可以分析所有级别的计算机程序。Raku 程序本身是用 Raku 自己编写的 Grammar 编译的。\n虽然它们远不是 Raku 的唯一创新，但我们相信 Raku 正则表达式和 Grammar 将至少与 Perl 的正则表达式一样彻底改变计算机语言，甚至可能更多。他们现在还没有时间这样做。\n本教程的讨论在 Perl 论坛上公开，地址如下： 评论\n笔者 劳伦特罗森菲尔德\n文章 发表于 2015年11月6日 - 更新于2018年 11月4日\nPDF, 版离线版, ePub, Azw, Mobi\n社交链接 1. 正则表达式入门 在正则表达式（或正则表达式）从数学和将字符串通常已知的形式语言的计算机科学理论概念模式（或模式）来描述一个整体（成品或不）字符串由模式定义的共同特征，根据预定义的语法并且不考虑上下文。的图案（匹配图案匹配）是应用这些模式到文本的样本，以试图找到对应于这些模式的文本片段的过程。\n在你的计算机上安装Raku\n如果你想使用 Raku，我们建议你在此地址下载 Rakudo Star。有关安装的更多信息，请参阅Perl 5到Raku教程的第一部分- 第1部分：语言基础知识。\n在我们更新本文档（2018年10月）时，建议你选择 MoarVM 虚拟机。\n1-1 与文件搜索类比 要在目录中搜索名称以字母 “a” 开头且扩展名为 .","type":"entry","url":"http://localhost:1313/notes/raku%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%92%8C%E6%96%87%E6%B3%95/"}
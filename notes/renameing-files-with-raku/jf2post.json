{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cp\u003e欢迎来到\u003cstrong\u003eRaku One-Liner Advent Calendar的\u003c/strong\u003e第\u003ca href=\"https://raku.online/2018/12/18/renaming-files-in-perl-6/\"\u003e18\u003c/a\u003e天！今天，将会有一个真正的单行程序，在某种意义上说，你要作为一个运维从终端中运行它。\u003c/p\u003e\n\u003cp\u003e我们的任务是重命名命令行参数中传递的所有文件，并以偏爱的格式提供文件序列号。以下是命令行的示例：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ raku rename.pl * .jpg img_0000.jpg\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e在此示例中，当前目录中的所有图像文件将重命名为img_0001.jpg，img_0002.jpg等。\u003c/p\u003e\n\u003cp\u003e这是 Raku 中可能的解决方案：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eARGS\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"n\"\u003eStr\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erename\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"nv\"\u003e@\u003c/span\u003e\u003cspan class=\"err\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003eARGS\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e预定义的动态变量\u003ccode\u003e@*ARGS\u003c/code\u003e包含命令行中的参数。在上面的示例中，shell 将 *.jpg 掩码展开到文件列表中，因此数组中包含所有这些掩码。最后一个元素是重命名样本 img_0000.jpg。\u003c/p\u003e\n\u003cp\u003e请注意，与 Perl 5 不同，该变量称为 ARGS，而不是 ARGV。\u003c/p\u003e\n\u003cp\u003e为了遍历所有文件（并使用文件掩码跳过最后一个文件项），我们正在进行\u003ccode\u003e@*ARGS\u003c/code\u003e的切片。\u003ccode\u003e0..*-2\u003c/code\u003e 结构创建了索引范围以接收除了最后一个元素的所有元素。\u003c/p\u003e\n\u003cp\u003e然后对列表进行排序（原始的\u003ccode\u003e@*ARGS\u003c/code\u003e数组保持不变），我们使用\u003ccode\u003emap\u003c/code\u003e  方法迭代文件名  。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003emap\u003c/code\u003e 主体包含一个\u003ca href=\"https://rakuadvent.wordpress.com/2017/12/11/all-the-stars-of-perl-6/\"\u003eWhateveCode块\u003c/a\u003e ; 它接受当前值的字符串表示形式，从中生成\u003ca href=\"https://docs.raku.org/routine/IO\"\u003e一个\u003ccode\u003eIO::Path\u003c/code\u003e对象\u003c/a\u003e，并调用 \u003ccode\u003erename\u003c/code\u003e \u003ca href=\"https://docs.raku.org/routine/rename\"\u003e方法\u003c/a\u003e。请注意，\u003ccode\u003eIO\u003c/code\u003e方法创建\u003ccode\u003eIO::Path\u003c/code\u003e类的对象; 而裸  \u003ccode\u003eIO\u003c/code\u003e是Raku对象系统层次结构中的一个\u003ca href=\"https://docs.raku.org/language/glossary#index-entry-role\"\u003e\u003cem\u003e角色\u003c/em\u003e\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e最后，增量运算符\u003ccode\u003e++\u003c/code\u003e更改重命名样本（保存在\u003ccode\u003e@*ARGS\u003c/code\u003e 中的最后一个, 即 \u003ccode\u003e*-1 \u003c/code\u003e 元素）。当操作符应用于字符串时，它会\u003ca href=\"https://docs.raku.org/routine/++\"\u003e增加\u003c/a\u003e它\u003ca href=\"https://docs.raku.org/routine/++\"\u003e的数字部分\u003c/a\u003e，因此我们得到 img_0001.jpg，img_0002.jpg等。\u003c/p\u003e\n\u003cp\u003e我希望 Raku 不会被称为 \u003cem\u003estar-noise\u003c/em\u003e  语言 🙂 。尽管如此，明天还会有另一篇关于 Raku 的短篇小文！\u003c/p\u003e\n","text":"欢迎来到Raku One-Liner Advent Calendar的第18天！今天，将会有一个真正的单行程序，在某种意义上说，你要作为一个运维从终端中运行它。\n我们的任务是重命名命令行参数中传递的所有文件，并以偏爱的格式提供文件序列号。以下是命令行的示例：\n$ raku rename.pl * .jpg img_0000.jpg 在此示例中，当前目录中的所有图像文件将重命名为img_0001.jpg，img_0002.jpg等。\n这是 Raku 中可能的解决方案：\n@*ARGS[0..*-2].sort.map: *.Str.IO.rename(++@*ARGS[*-1]) 预定义的动态变量@*ARGS包含命令行中的参数。在上面的示例中，shell 将 *.jpg 掩码展开到文件列表中，因此数组中包含所有这些掩码。最后一个元素是重命名样本 img_0000.jpg。\n请注意，与 Perl 5 不同，该变量称为 ARGS，而不是 ARGV。\n为了遍历所有文件（并使用文件掩码跳过最后一个文件项），我们正在进行@*ARGS的切片。0..*-2 结构创建了索引范围以接收除了最后一个元素的所有元素。\n然后对列表进行排序（原始的@*ARGS数组保持不变），我们使用map 方法迭代文件名 。\nmap 主体包含一个WhateveCode块 ; 它接受当前值的字符串表示形式，从中生成一个IO::Path对象，并调用 rename 方法。请注意，IO方法创建IO::Path类的对象; 而裸 IO是Raku对象系统层次结构中的一个角色。\n最后，增量运算符++更改重命名样本（保存在@*ARGS 中的最后一个, 即 *-1 元素）。当操作符应用于字符串时，它会增加它的数字部分，因此我们得到 img_0001.jpg，img_0002.jpg等。\n我希望 Raku 不会被称为 star-noise 语言 🙂 。尽管如此，明天还会有另一篇关于 Raku 的短篇小文！\n"},"name":"🎄 18/25. 使用 Raku 重命名文件","published":"2018-12-18T09:16:49Z","summary":"欢迎来到Raku One-Liner Advent Calendar的第18天！今天，将会有一个真正的单行程序，在某种意义上说，你要作为一个运维从终端中运行它。\n我们的任务是重命名命令行参数中传递的所有文件，并以偏爱的格式提供文件序列号。以下是命令行的示例：\n$ raku rename.pl * .jpg img_0000.jpg 在此示例中，当前目录中的所有图像文件将重命名为img_0001.jpg，img_0002.jpg等。\n这是 Raku 中可能的解决方案：\n@*ARGS[0..*-2].sort.map: *.Str.IO.rename(++@*ARGS[*-1]) 预定义的动态变量@*ARGS包含命令行中的参数。在上面的示例中，shell 将 *.jpg 掩码展开到文件列表中，因此数组中包含所有这些掩码。最后一个元素是重命名样本 img_0000.jpg。\n请注意，与 Perl 5 不同，该变量称为 ARGS，而不是 ARGV。\n为了遍历所有文件（并使用文件掩码跳过最后一个文件项），我们正在进行@*ARGS的切片。0..*-2 结构创建了索引范围以接收除了最后一个元素的所有元素。\n然后对列表进行排序（原始的@*ARGS数组保持不变），我们使用map 方法迭代文件名 。\nmap 主体包含一个WhateveCode块 ; 它接受当前值的字符串表示形式，从中生成一个IO::Path对象，并调用 rename 方法。请注意，IO方法创建IO::Path类的对象; 而裸 IO是Raku对象系统层次结构中的一个角色。\n最后，增量运算符++更改重命名样本（保存在@*ARGS 中的最后一个, 即 *-1 元素）。当操作符应用于字符串时，它会增加它的数字部分，因此我们得到 img_0001.jpg，img_0002.jpg等。\n我希望 Raku 不会被称为 star-noise 语言 🙂 。尽管如此，明天还会有另一篇关于 Raku 的短篇小文！","type":"entry","url":"https://ohmyweekly.github.io/notes/renameing-files-with-raku/"}
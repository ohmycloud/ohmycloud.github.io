{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003cp\u003e欢迎来到\u003cstrong\u003eRaku One-Liner Advent Calendar的\u003c/strong\u003e第\u003ca href=\"https://raku.online/2018/12/19/using-map-and-seq-to-compute-the-value-of-pi-in-perl-6/\"\u003e19\u003c/a\u003e天！今天，我们将使用两种不同的方法计算π的值。这篇博文的目的是使用不同的方法来生成数字序列。\u003c/p\u003e\n\u003ch2 id=\"pre-party\"\u003ePre-party\u003c/h2\u003e\n\u003cp\u003e当然，在 Raku 中你不需要自己计算 \u003cem\u003eπ\u003c/em\u003e 的值，因为 Raku 给出了一些\u003ccode\u003eπ\u003c/code\u003e和\u003ccode\u003epi\u003c/code\u003e 形式的预定义常数，以及双倍的值\u003ccode\u003eτ\u003c/code\u003e和\u003ccode\u003etau\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e但为了演示 map 和序列的用法，让我们实现一种最简单的算法来计算 \u003cem\u003eπ\u003c/em\u003e：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://inraku.files.wordpress.com/2018/12/Screen-Shot-2018-12-18-at-23.00.41.png?w=223\u0026amp;h=61\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这是检查答案的草案代码：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$pi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sign\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$k\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$sign\u003c/span\u003e \u003cspan class=\"o\"\u003e*=\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$pi\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sign\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$k\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$pi\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"第1部分\"\u003e第1部分\u003c/h2\u003e\n\u003cp\u003e现在，让我们使用\u003ccode\u003emap\u003c/code\u003e来使答案紧凑一点。最好使公式更通用：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://inraku.files.wordpress.com/2018/12/Screen-Shot-2018-12-18-at-23.34.31.png?w=162\u0026amp;h=60\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这是我们的第一个单行程序：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我希望你能理解这段代码里的所有东西。我们在今年的 Advent Calendar 的前几天介绍了该答案的不同部分，例如，在\u003ca href=\"https://raku.online/2018/12/11/solving-the-problem-34-in-perl-6/\"\u003e第11天的帖子中\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e但是，我仍然想强调你需要\u003ccode\u003e-1\u003c/code\u003e周围的圆括号。如果输入\u003ccode\u003e-1 ** $_\u003c/code\u003e，则总是得到 \u003cem\u003e-1\u003c/em\u003e，因为减号前缀应用于取幂的结果。所以正确的代码是\u003ccode\u003e(-1) ** $_\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"第2部分\"\u003e第2部分\u003c/h2\u003e\n\u003cp\u003e尝试使用序列运算符\u003ccode\u003e...\u003c/code\u003e根据上述公式生成行也很有趣。此外，我们将使用有理数（见\u003ca href=\"https://raku.online/2018/12/12/displaying-a-zero-in-perl-6/\"\u003e第12天\u003c/a\u003e）来创建分数⅓，⅕等。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;1/1\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"n\"\u003eRat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e^\u003c/span\u003e\u003cspan class=\"nv\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003enumerator\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"err\"\u003e^\u003c/span\u003e\u003cspan class=\"nv\"\u003en\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edenominator\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003eabs\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mf\"\u003e1E-5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个序列以有理数\u003ccode\u003e\u0026lt;1/1\u0026gt;\u003c/code\u003e 开始，这很方便，因为我们可以立即取其分子和分母。序列的生成器块使用此数字来创建新的有理数，其分母在每次迭代时加2。\u003c/p\u003e\n\u003cp\u003e你可能会问为什么我引用 \u003ccode\u003e$^n.numerator\u003c/code\u003e，它总是 1。这是必需的，因为要改变符号，我们需要知道当前值的符号，并且符号保存在有理数值的分子部分中。\u003c/p\u003e\n\u003cp\u003e该\u003ca href=\"https://docs.raku.org/language/variables#The_%5E_twigil\"\u003e占位符变量\u003c/a\u003e \u003ccode\u003e$^n\u003c/code\u003e 自动取生成器代码块的第一个(并且是仅有的)参数。\u003c/p\u003e\n\u003cp\u003e生成序列，直到当前值的绝对值变得足够小。用 \u003ccode\u003e* ≅ 0\u003c/code\u003e 替换最终条件可能很诱人，但该程序运行时间太长而无法看到结果，因为\u003ca href=\"https://docs.raku.org/routine/=~=\"\u003e近似相等运算符\u003c/a\u003e的默认容差为 10−15，而行不会快速收敛。\u003c/p\u003e\n\u003cp\u003e此外，你不能使用\u003ccode\u003e\u0026lt;... / ...\u0026gt;\u003c/code\u003e语法在生成器中创建\u003ccode\u003eRat\u003c/code\u003e 数字：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e{ \u0026lt;$^n.numerator / $^n.denominator + 2\u0026gt; }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e在这种情况下，Raku 会将其视为\u003ca href=\"https://docs.raku.org/language/quoting\"\u003e引号构造，\u003c/a\u003e例如\u003ccode\u003e\u0026lt;red green blue\u0026gt;\u003c/code\u003e，而不是代码块，你将获得字符串列表。\u003c/p\u003e\n\u003cp\u003e这就是今天的一切。明天见！\u003c/p\u003e\n","text":"欢迎来到Raku One-Liner Advent Calendar的第19天！今天，我们将使用两种不同的方法计算π的值。这篇博文的目的是使用不同的方法来生成数字序列。\nPre-party 当然，在 Raku 中你不需要自己计算 π 的值，因为 Raku 给出了一些π和pi 形式的预定义常数，以及双倍的值τ和tau。\n但为了演示 map 和序列的用法，让我们实现一种最简单的算法来计算 π：\n这是检查答案的草案代码：\nmy $pi = 1; my $sign = 1; for 1..10000 -\u0026gt; $k { $sign *= -1; $pi += $sign / ($k * 2 + 1); } say 4 * $pi; 第1部分 现在，让我们使用map来使答案紧凑一点。最好使公式更通用：\n这是我们的第一个单行程序：\nsay 4 * [+] (^1000).map({(-1) ** $_ / (2 * $_ + 1)}) 我希望你能理解这段代码里的所有东西。我们在今年的 Advent Calendar 的前几天介绍了该答案的不同部分，例如，在第11天的帖子中。\n但是，我仍然想强调你需要-1周围的圆括号。如果输入-1 ** $_，则总是得到 -1，因为减号前缀应用于取幂的结果。所以正确的代码是(-1) ** $_。\n第2部分 尝试使用序列运算符...根据上述公式生成行也很有趣。此外，我们将使用有理数（见第12天）来创建分数⅓，⅕等。\nsay 4 * [+] \u0026lt;1/1\u0026gt;, {-Rat.new($^n.numerator, $^n.denominator + 2)} ... *.abs \u0026lt; 1E-5; 这个序列以有理数\u0026lt;1/1\u0026gt; 开始，这很方便，因为我们可以立即取其分子和分母。序列的生成器块使用此数字来创建新的有理数，其分母在每次迭代时加2。\n你可能会问为什么我引用 $^n.numerator，它总是 1。这是必需的，因为要改变符号，我们需要知道当前值的符号，并且符号保存在有理数值的分子部分中。\n该占位符变量 $^n 自动取生成器代码块的第一个(并且是仅有的)参数。\n生成序列，直到当前值的绝对值变得足够小。用 * ≅ 0 替换最终条件可能很诱人，但该程序运行时间太长而无法看到结果，因为近似相等运算符的默认容差为 10−15，而行不会快速收敛。\n此外，你不能使用\u0026lt;... / ...\u0026gt;语法在生成器中创建Rat 数字：\n{ \u0026lt;$^n.numerator / $^n.denominator + 2\u0026gt; } 在这种情况下，Raku 会将其视为引号构造，例如\u0026lt;red green blue\u0026gt;，而不是代码块，你将获得字符串列表。\n这就是今天的一切。明天见！\n"},"name":"🎄 19/25. 在 Raku 中使用 map 和 Seq 计算 π 的值","published":"2018-12-19T09:19:29Z","summary":"欢迎来到Raku One-Liner Advent Calendar的第19天！今天，我们将使用两种不同的方法计算π的值。这篇博文的目的是使用不同的方法来生成数字序列。\nPre-party 当然，在 Raku 中你不需要自己计算 π 的值，因为 Raku 给出了一些π和pi 形式的预定义常数，以及双倍的值τ和tau。\n但为了演示 map 和序列的用法，让我们实现一种最简单的算法来计算 π：\n这是检查答案的草案代码：\nmy $pi = 1; my $sign = 1; for 1..10000 -\u0026gt; $k { $sign *= -1; $pi += $sign / ($k * 2 + 1); } say 4 * $pi; 第1部分 现在，让我们使用map来使答案紧凑一点。最好使公式更通用：\n这是我们的第一个单行程序：\nsay 4 * [+] (^1000).map({(-1) ** $_ / (2 * $_ + 1)}) 我希望你能理解这段代码里的所有东西。我们在今年的 Advent Calendar 的前几天介绍了该答案的不同部分，例如，在第11天的帖子中。\n但是，我仍然想强调你需要-1周围的圆括号。如果输入-1 ** $_，则总是得到 -1，因为减号前缀应用于取幂的结果。所以正确的代码是(-1) ** $_。","type":"entry","url":"https://ohmycloud.github.io/notes/using-map-and-seq-to-compute-the-value-of-pi-in-perl6/"}
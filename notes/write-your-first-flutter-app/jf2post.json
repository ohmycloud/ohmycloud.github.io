{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003ch2 id=\"介绍\"\u003e介绍\u003c/h2\u003e\n\u003cp\u003eFlutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\u003c/p\u003e\n\u003cp\u003e在这个代码实验室中，你将创建一个简单的手机 Flutter 应用。如果你熟悉面向对象的代码和基本的编程概念-如变量、循环和条件, 那么你就可以完成这个 codelab。你不需要以前有 Dart、手机或 Web 编程的经验。\u003c/p\u003e\n\u003ch3 id=\"你将在第1部分学到什么\"\u003e你将在第1部分学到什么\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？\u003c/li\u003e\n\u003cli\u003eFlutter 应用程序的基本结构。\u003c/li\u003e\n\u003cli\u003e寻找和使用包来扩展功能。\u003c/li\u003e\n\u003cli\u003e使用热重装来加快开发周期。\u003c/li\u003e\n\u003cli\u003e如何实现一个有状态的小组件。\u003c/li\u003e\n\u003cli\u003e如何创建一个无限的、懒加载的列表。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在这个 codelab 的\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/index.html?index=..%2F..%2Findex#0\"\u003e第2部分\u003c/a\u003e中，你将添加交互性，修改应用程序的主题，并添加导航到新页面的能力(在 Flutter 中称为路由)。\u003c/p\u003e\n\u003ch3 id=\"你将在第1部分中构建什么\"\u003e你将在第1部分中构建什么\u003c/h3\u003e\n\u003cp\u003e你将实现一个移动应用，为一家创业公司生成建议的名字。用户可以选择和取消选择名字，保存最好的名字。代码一次懒惰地生成10个名字。随着用户的滚动，会生成更多的名字。用户可以滚动的范围没有限制。\u003c/p\u003e\n\u003cp\u003e下面的 GIF 动画显示了应用程序在完成部分时的工作情况。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/6556f8b61acd6a89.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch2 id=\"设置你的-flutter-环境\"\u003e设置你的 Flutter 环境\u003c/h2\u003e\n\u003cp\u003e你需要两个软件来完成这个实验室-\u003ca href=\"https://flutter.io/get-started/install/\"\u003eFlutter SDK\u003c/a\u003e和\u003ca href=\"https://flutter.io/get-started/editor/\"\u003e一个编辑器\u003c/a\u003e。(codelab 假设你使用 Android Studio，但你可以使用你的首选编辑器。)\u003c/p\u003e\n\u003cp\u003e你可以通过使用以下任何设备来运行 codelab。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个物理的 \u003ca href=\"https://flutter.io/setup-macos/#set-up-your-android-device\"\u003eAndroid\u003c/a\u003e 或 \u003ca href=\"https://flutter.io/setup-macos/#deploy-to-ios-devices\"\u003eiOS\u003c/a\u003e 设备连接到你的计算机并设置为开发者模式。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.io/setup-macos/#set-up-the-ios-simulator\"\u003eiOS 模拟器\u003c/a\u003e(需要安装 Xcode 工具)\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.io/setup-macos/#set-up-the-android-emulator\"\u003e安卓模拟器\u003c/a\u003e(需要在 Android Studio 中进行设置)\u003c/li\u003e\n\u003cli\u003e浏览器(调试时需要使用 Chrome 浏览器)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果你想编译你的应用程序以在 web 上运行，你必须启用此功能（目前处于测试阶段）。要启用 web 支持，请使用以下说明。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eflutter channel beta\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eflutter upgrade\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eflutter config --enable-web\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你只需要运行一次 \u003ccode\u003econfig\u003c/code\u003e 命令。启用 Web 支持后，你创建的每个 Flutter 应用也会为 Web 编译。在你的 IDE 的\u003cstrong\u003e设备\u003c/strong\u003e下拉菜单下面，或者在命令行使用 \u003ccode\u003eflutter devices\u003c/code\u003e，你现在应该看到 Chrome 和 Web 服务器被列出。\u003cstrong\u003eChrome\u003c/strong\u003e 设备会自动启动 Chrome。Web 服务器会启动一个托管应用程序的服务器，这样你就可以从任何浏览器加载它。在开发过程中使用 \u003cstrong\u003eChrome\u003c/strong\u003e 设备，以便你可以使用 DevTools，而当你要在其他浏览器上进行测试时使用 Web 服务器。有关更多信息，请参阅\u003ca href=\"https://flutter.dev/docs/get-started/web\"\u003e使用 Flutter 构建 Web 应用程序\u003c/a\u003e和\u003ca href=\"https://flutter.dev/docs/get-started/codelab-web\"\u003e在 Web 上编写你的第一个 Flutter 应用程序\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"创建-flutter-应用程序的启动器\"\u003e创建 Flutter 应用程序的启动器\u003c/h2\u003e\n\u003cp\u003e通过使用\u003ca href=\"https://flutter.dev/docs/get-started/test-drive#androidstudio\"\u003e创建应用程序\u003c/a\u003e中的说明来创建一个简单的、模板化的 Flutter 应用程序。输入 \u003ccode\u003estartup_namer\u003c/code\u003e(而不是 \u003ccode\u003eflutter_app\u003c/code\u003e)作为项目名称。您将修改启动器应用程序来创建完成的应用程序。\u003c/p\u003e\n\u003cp\u003e提示：如果你在 IDE 中没有看到能够启动一个新的 Flutter 项目作为一个选项，那么请确保你已经\u003ca href=\"https://flutter.io/get-started/editor/#androidstudio\"\u003e安装了 Flutter 和 Dart 的插件\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e你将主要编辑 \u003ccode\u003elib/main.dart\u003c/code\u003e，Dart 的代码就在这里。\u003c/p\u003e\n\u003cp\u003e替换 \u003ccode\u003elib/main.dart\u003c/code\u003e 的内容。\n删除 \u003ccode\u003elib/main.dart\u003c/code\u003e 中的所有代码，并用下面的代码替换，在屏幕中央显示 \u0026ldquo;Hello World\u0026rdquo;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;package:flutter/material.dart\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erunApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMyApp\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Welcome to Flutter\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Welcome to Flutter\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eCenter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"nl\"\u003echild:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Hello World\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示：当把代码粘贴到你的应用程序中时，缩进会变得歪斜。你可以用以下 Flutter 工具来解决。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAndroid Studio/IntelliJ IDEA: 右键点击 Dart 代码，选择\u003cstrong\u003e用 dartfmt 重格式代码\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003eVS code: 右键点击并选择\u003cstrong\u003e格式化文档\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e终端: 运行 \u003ccode\u003eflutter format \u0026lt;文件名\u0026gt;\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://flutter.io/get-started/test-drive/#androidstudio\"\u003e运行应用程序\u003c/a\u003e。您应该看到 Android，iOS 或 Web 输出，取决于您的设备。\u003c/p\u003e\n\u003cp\u003e安卓系统:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/f9df7832965ede9f.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/20374605026d582.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e小贴士：第一次在物理设备上运行时，可能需要一段时间来加载。之后，你可以使用热重载来快速更新。在支持的 IDE 中，如果应用正在运行，\u003cstrong\u003eSave\u003c/strong\u003e 也会执行热重载。当使用 \u003ccode\u003eflutter run\u003c/code\u003e 直接从控制台运行应用程序时，输入 \u003ccode\u003er\u003c/code\u003e 来执行热重载。\u003c/p\u003e\n\u003cp\u003e观察:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e这个例子创建了一个 Material 应用。\u003ca href=\"https://material.io/guidelines/\"\u003eMaterial\u003c/a\u003e 是一种视觉设计语言，是移动和 Web 的标准。Flutter 提供了一套丰富的 Material 部件。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emain\u003c/code\u003e 方法使用箭头(\u003ccode\u003e=\u0026gt;\u003c/code\u003e)符号。对单行函数或方法使用箭头符号。\u003c/li\u003e\n\u003cli\u003e应用程序扩展了 \u003ccode\u003eStatelessWidget\u003c/code\u003e，这使得应用程序本身成为一个组件。在 Flutter 中，几乎所有的东西都是组件，包括对齐、填充和布局。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eScaffold\u003c/code\u003e 组件来自 Material 库，它提供了一个默认的应用栏、一个标题和一个 body 属性，其中存放着主屏幕的组件树。组件子树可以相当复杂。\u003c/li\u003e\n\u003cli\u003e组件的主要工作是提供一个 \u003ccode\u003ebuild\u003c/code\u003e 方法，描述如何用其他低级组件来显示该组件。\u003c/li\u003e\n\u003cli\u003e本例的主体由包含 \u003ccode\u003eText\u003c/code\u003e 子部件的 \u003ccode\u003eCenter\u003c/code\u003e 部件组成。\u003ccode\u003eCenter\u003c/code\u003e 组件将其组件子树对齐到屏幕的中心。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"使用外部软件包\"\u003e使用外部软件包\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将开始使用一个名为 \u003ccode\u003eenglish_words\u003c/code\u003e 的开源包，它包含了几千个最常用的英语单词，还有一些实用函数。\u003c/p\u003e\n\u003cp\u003e你可以在 \u003ca href=\"https://pub.dev/\"\u003epub.dev\u003c/a\u003e 找到 \u003ccode\u003eenglish_words\u003c/code\u003e 包，以及许多其他开源包。\u003c/p\u003e\n\u003cp\u003epubspec 文件管理着 Flutter 应用的资产。在 \u003ccode\u003epubspec.yaml\u003c/code\u003e 中，附加 \u003ccode\u003eenglish_words: ^3.1.5\u003c/code\u003e(\u003ccode\u003eenglish_words\u003c/code\u003e 3.1.5 或更高)到依赖列表中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003edependencies\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eflutter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esdk\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eflutter\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecupertino_icons\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e^0.1.2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eenglish_words\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e^3.1.5  \u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"c\"\u003e# add this line\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Android Studio 的编辑器视图中查看 pubspec 时，点击 \u003cstrong\u003ePackages get\u003c/strong\u003e。这将把包拉到你的项目中。你应该在控制台中看到以下内容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eflutter packages get\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eRunning \u0026#34;flutter packages get\u0026#34; in startup_namer...\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eProcess finished with exit code 0\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e执行 \u003ccode\u003ePub get\u003c/code\u003e 也会自动生成 \u0026ldquo;pubspec.lock\u0026rdquo; 文件，其中包含所有拉入项目的包的列表和它们的版本号。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003elib/main.dart\u003c/code\u003e 中，导入新包:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;package:flutter/material.dart\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;package:english_words/english_words.dart\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// Add this line.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当你输入时，Android Studio 会给你建议导入的库。然后，它将导入的字符串渲染成灰色，让你知道导入的库是未使用的（到目前为止）。\u003c/p\u003e\n\u003cp\u003e接下来，你将使用 \u003ccode\u003eenglish_words\u003c/code\u003e 包来生成文本，而不是使用 \u0026ldquo;Hello World\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e做以下修改。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;package:flutter/material.dart\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;package:english_words/english_words.dart\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003emain\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003erunApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eMyApp\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e// Add this line.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Welcome to Flutter\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Welcome to Flutter\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003eCenter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"c1\"\u003e//child: Text(\u0026#39;Hello World\u0026#39;),   // Replace this text...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"nl\"\u003echild:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// With this text.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示: Pascal 大小写(也称为上驼形大小写)意味着字符串中的每个单词，包括第一个单词，都以大写字母开头。所以，\u003ccode\u003euppercamelcase\u003c/code\u003e 就变成了 \u003ccode\u003eUpperCamelCase\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e如果应用程序正在运行，热重载来更新正在运行的应用程序。(在命令行中，你可以输入 \u003ccode\u003er\u003c/code\u003e 来热重载。)每次点击热重载或保存项目时，你应该会在运行中的应用程序中看到一个不同的单词对，随机选择。这是因为单词对是在 \u003ccode\u003ebuild\u003c/code\u003e 方法里面生成的，每次 \u003ccode\u003eMaterialApp\u003c/code\u003e 需要渲染时，或者在 Flutter Inspector 中切换 \u003cstrong\u003ePlatform\u003c/strong\u003e 时，都会运行该方法。\u003c/p\u003e\n\u003cp\u003eAndroid:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/57cfbac8f2b50e5b.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/30ed7f83a1500fa9.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"有问题\"\u003e有问题？\u003c/h3\u003e\n\u003cp\u003e如果您的应用程序没有正确运行，请查找错别字。如果需要，请使用以下链接中的代码来恢复正常。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step2_use_package/pubspec.yaml\"\u003epubspec.yaml\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step2_use_package/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"添加一个有状态的组件\"\u003e添加一个有状态的组件\u003c/h2\u003e\n\u003cp\u003e无状态组件是不可改变的，这意味着它们的属性不能改变-所有值都是最终值。\u003c/p\u003e\n\u003cp\u003e有状态组件维护的状态可能在组件的生命周期内发生变化。实现一个有状态的组件至少需要两个类。1) 一个 \u003ca href=\"https://docs.flutter.io/flutter/widgets/StatefulWidget-class.html\"\u003eStatefulWidget\u003c/a\u003e，它可以创建一个 \u003ca href=\"https://docs.flutter.io/flutter/widgets/State-class.html\"\u003eState\u003c/a\u003e 类的实例。\u003ccode\u003eStatefulWidget\u003c/code\u003e 对象本身是不可变的，可以被丢弃和再生，但 \u003ccode\u003eState\u003c/code\u003e 对象会在 widget 的生命周期内持久存在。\u003c/p\u003e\n\u003cp\u003e在这一步骤中，您将添加一个有状态的组件 \u003ccode\u003eRandomWords\u003c/code\u003e，并创建其 \u003ccode\u003eState\u003c/code\u003e 类 \u003ccode\u003e_RandomWordsState\u003c/code\u003e。然后，您将在现有的 MyApp 无状态组件中使用 \u003ccode\u003eRandomWords\u003c/code\u003e 作为子类。\u003c/p\u003e\n\u003cp\u003e为有状态组件创建模板代码。\u003c/p\u003e\n\u003cp\u003e它可以放在 \u003ccode\u003eMyApp\u003c/code\u003e 以外的文件中的任何位置，但解决方案将其放在文件的底部。在 \u003ccode\u003elib/main.dart\u003c/code\u003e 中，将光标定位在所有代码之后，输入回车键几次，重新开始一行。在你的 IDE 中，开始输入 \u003ccode\u003estful\u003c/code\u003e。编辑器会询问你是否要创建一个 \u003ccode\u003eStateful\u003c/code\u003e 的组件。按回车键接受。两个类的模板代码出现了，光标定位让你输入无状态组件的名称。\u003c/p\u003e\n\u003cp\u003e输入 \u003ccode\u003eRandomWords\u003c/code\u003e 作为您的小组件的名称。\u003c/p\u003e\n\u003cp\u003e正如您在下面的代码中所看到的，\u003ccode\u003eRandomWords\u003c/code\u003e 组件除了创建它的 \u003ccode\u003eState\u003c/code\u003e 类之外，几乎没有其他的功能。\u003c/p\u003e\n\u003cp\u003e一旦您输入 \u003ccode\u003eRandomWords\u003c/code\u003e 作为有状态组件的名称，IDE 会自动更新相应的 \u003ccode\u003eState\u003c/code\u003e 类，将其命名为 \u003ccode\u003e_RandomWordState\u003c/code\u003e。默认情况下，\u003ccode\u003eState\u003c/code\u003e 类的名称是以下划线为前缀的。在标识符前加上下划线可以加强 Dart 语言的\u003ca href=\"https://dart.dev/guides/language/language-tour#libraries-and-visibility\"\u003e隐私性\u003c/a\u003e，也是 \u003ccode\u003eState\u003c/code\u003e 对象的最佳实践。\u003c/p\u003e\n\u003cp\u003eIDE 也会自动更新 State 类以扩展 \u003ccode\u003eState\u0026lt;RandomWords\u0026gt;\u003c/code\u003e，表明你正在使用一个专门用于 \u003ccode\u003eRandomWords\u003c/code\u003e 的通用 \u003ca href=\"https://api.flutter.dev/flutter/widgets/State-class.html\"\u003eState\u003c/a\u003e 类。应用程序的大部分逻辑都在这里-它为 \u003ccode\u003eRandomWords\u003c/code\u003e 组件维护状态。这个类保存了生成的词对列表，随着用户的滚动而无限增长，在本实验室的第二部分中，当用户通过切换心形图标从列表中添加或删除这些词对时，该类会对其进行收藏。\u003c/p\u003e\n\u003cp\u003e现在两个类的外观如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eRandomWords\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatefulWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"n\"\u003ecreateState\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e_RandomWordsState\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eContainer\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更新 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 中的 \u003ccode\u003ebuild()\u003c/code\u003e 方法。\u003c/p\u003e\n\u003cp\u003e用以下两行替换 \u003ccode\u003ereturn Container();\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e                                  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e                                         \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e通过以下修改，删除 \u003ccode\u003eMyApp\u003c/code\u003e 中的文字生成代码:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ewordPair\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003erandom\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// DELETE\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Welcome to Flutter\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Welcome to Flutter\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003eCenter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"c1\"\u003e//child: Text(wordPair.asPascalCase), // REPLACE with... \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"nl\"\u003echild:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e// ...this line\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重载应用程序。应用程序应该像以前一样，每次热重载或保存应用程序时都会显示一个单词配对。\u003c/p\u003e\n\u003cp\u003e提示：如果您在热重载时看到警告，表明您可能需要重新启动应用程序，您应该考虑重新启动应用程序。这可能是一个假阳性，但重启可以确保您的更改反映在应用程序的 UI 中。\u003c/p\u003e\n\u003ch3 id=\"遇到问题了\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果您的应用程序没有正确运行，您可以使用以下链接中的代码来恢复正常。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step3_stateful_widget/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"创建一个无限滚动的-listview\"\u003e创建一个无限滚动的 ListView\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将展开 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 来生成并显示单词配对列表。随着用户的滚动，列表（显示在 ListView 小组件中）会无限增长。ListView 中的构建器工厂构造函数允许你按需懒惰地构建一个列表视图。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordState\u003c/code\u003e 类中添加一些状态变量。\u003c/p\u003e\n\u003cp\u003e增加一个 \u003ccode\u003e_suggestions\u003c/code\u003e 列表，用于保存建议的单词配对。另外，添加一个 \u003ccode\u003e_biggerFont\u003c/code\u003e 变量，用于使字体大小变大。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eList\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[];\u003c/span\u003e            \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003eTextStyle\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eTextStyle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003efontSize:\u003c/span\u003e \u003cspan class=\"m\"\u003e18\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e接下来，你将在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 类中添加一个 \u003ccode\u003e_buildSuggestions()\u003c/code\u003e 函数。这个方法可以构建显示建议词对的 \u003ccode\u003eListView\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eListView\u003c/code\u003e 类提供了一个构建器属性 \u003ccode\u003eitemBuilder\u003c/code\u003e，它是一个工厂构建器和回调函数，指定为一个匿名函数。两个参数被传递给函数\u0026ndash;\u003ccode\u003eBuildContext\u003c/code\u003e 和行迭代器 \u003ccode\u003ei\u003c/code\u003e。迭代器从0开始，每次调用函数时递增，每一个建议的单词配对都会递增一次。这个模型允许建议列表在用户滚动时继续增长。\u003c/p\u003e\n\u003cp\u003e添加整个 \u003ccode\u003e_buildSuggestions\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 类中，添加以下函数，如果你喜欢，请删除注释:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildSuggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListView\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ebuilder\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003epadding:\u003c/span\u003e \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"n\"\u003eEdgeInsets\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e// The itemBuilder callback is called once per suggested \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// word pairing, and places each suggestion into a ListTile\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// row. For even rows, the function adds a ListTile row for\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// the word pairing. For odd rows, the function adds a \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// Divider widget to visually separate the entries. Note that\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// the divider may be difficult to see on smaller devices.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nl\"\u003eitemBuilder:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003e_context\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// Add a one-pixel-high divider widget before each row \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// in the ListView.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eisOdd\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eDivider\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// The syntax \u0026#34;i ~/ 2\u0026#34; divides i by 2 and returns an \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// integer result.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// For example: 1, 2, 3, 4, 5 becomes 0, 1, 1, 2, 2.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// This calculates the actual number of word pairings \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// in the ListView,minus the divider widgets.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"kt\"\u003eint\u003c/span\u003e \u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"o\"\u003e~/\u003c/span\u003e \u003cspan class=\"m\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e// If you\u0026#39;ve reached the end of the available word\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"c1\"\u003e// pairings...\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elength\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e          \u003cspan class=\"c1\"\u003e// ...then generate 10 more and add them to the \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"c1\"\u003e// suggestions list.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eaddAll\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003egenerateWordPairs\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"n\"\u003etake\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"m\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e]);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e_buildSuggestions\u003c/code\u003e 函数对每个词对调用一次 \u003ccode\u003e_buildRow\u003c/code\u003e。该函数在 \u003ccode\u003eListTile\u003c/code\u003e 中显示每一个新的词对，这使得你可以在\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/index.html?index=..%2F..index#0\"\u003e第2部分\u003c/a\u003e中使行更有吸引力。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 中添加一个 \u003ccode\u003e_buildRow\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更新 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 的构建方法。\u003c/p\u003e\n\u003cp\u003e将其改为使用 \u003ccode\u003e_buildSuggestions()\u003c/code\u003e，而不是直接调用单词生成库。(\u003ccode\u003eScaffold\u003c/code\u003e 实现了基本的 Material Design 视觉布局。)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e//final wordPair = WordPair.random(); // Delete these... \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e    \u003cspan class=\"c1\"\u003e//return Text(wordPair.asPascalCase); // ... two lines.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e// Add from here... \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Startup Name Generator\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildSuggestions\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e                                      \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e更新 \u003ccode\u003eMyApp\u003c/code\u003e 的构建方法，更改标题，删除 \u003ccode\u003eAppBar\u003c/code\u003e，并将 home 属性改为 \u003ccode\u003eRandomWords\u003c/code\u003e 部件。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Startup Name Generator\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e重新启动应用程序。无论你滚动多远，你都应该看到一个单词配对的列表。\u003c/p\u003e\n\u003cp\u003eAndroid:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/df2b3cb779e0020e.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/ae47ef0ac2f492b8.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-1\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step4_infinite_list/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"今后的步骤\"\u003e今后的步骤\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e恭喜你！\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e你已经完成了这个代码实验室的第一部分! 如果你想扩展这款应用，请进入\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/#0\"\u003e第二部分\u003c/a\u003e，你将对应用进行如下修改。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e增加互动性\u003c/li\u003e\n\u003cli\u003e增加导航到新路由的功能。\u003c/li\u003e\n\u003cli\u003e修改主题颜色。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当第2部分完成后，应用程序将是这样的：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/img/7fcab088cd22cff7.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"其他后续步骤\"\u003e其他后续步骤\u003c/h3\u003e\n\u003cp\u003e通过以下资源了解更多关于 Flutter SDK 的信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/layout\"\u003eFlutter 中的布局\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/interactive\"\u003e增加互动性教程\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/widgets-intro\"\u003e组件介绍\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/android-devs\"\u003e为 Android 开发者提供的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/react-native-devs\"\u003e针对 React Native 开发者的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/web-devs\"\u003eWeb 开发人员的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/flutterdev\"\u003eFlutter YouTube 频道\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e其他资源包括以下几点:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\"\u003e用 Flutter 构建本地移动应用\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codelabs.developers.google.com/codelabs/from-java-to-dart/#1\"\u003e从 Java 到 Dart codelab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/cookbook/\"\u003eFlutter cookbook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/bootstrap-into-dart/\"\u003e融入 Dart 的 Bootstrap：了解更多关于这门语言的信息\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e同时，\u003ca href=\"https://flutter.dev/community\"\u003e与 Flutter 社区联系起来!\u003c/a\u003e\u003c/p\u003e\n","text":"介绍 Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\n在这个代码实验室中，你将创建一个简单的手机 Flutter 应用。如果你熟悉面向对象的代码和基本的编程概念-如变量、循环和条件, 那么你就可以完成这个 codelab。你不需要以前有 Dart、手机或 Web 编程的经验。\n你将在第1部分学到什么 如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？ Flutter 应用程序的基本结构。 寻找和使用包来扩展功能。 使用热重装来加快开发周期。 如何实现一个有状态的小组件。 如何创建一个无限的、懒加载的列表。 在这个 codelab 的第2部分中，你将添加交互性，修改应用程序的主题，并添加导航到新页面的能力(在 Flutter 中称为路由)。\n你将在第1部分中构建什么 你将实现一个移动应用，为一家创业公司生成建议的名字。用户可以选择和取消选择名字，保存最好的名字。代码一次懒惰地生成10个名字。随着用户的滚动，会生成更多的名字。用户可以滚动的范围没有限制。\n下面的 GIF 动画显示了应用程序在完成部分时的工作情况。\n设置你的 Flutter 环境 你需要两个软件来完成这个实验室-Flutter SDK和一个编辑器。(codelab 假设你使用 Android Studio，但你可以使用你的首选编辑器。)\n你可以通过使用以下任何设备来运行 codelab。\n一个物理的 Android 或 iOS 设备连接到你的计算机并设置为开发者模式。 iOS 模拟器(需要安装 Xcode 工具) 安卓模拟器(需要在 Android Studio 中进行设置) 浏览器(调试时需要使用 Chrome 浏览器) 如果你想编译你的应用程序以在 web 上运行，你必须启用此功能（目前处于测试阶段）。要启用 web 支持，请使用以下说明。\nflutter channel beta flutter upgrade flutter config --enable-web 你只需要运行一次 config 命令。启用 Web 支持后，你创建的每个 Flutter 应用也会为 Web 编译。在你的 IDE 的设备下拉菜单下面，或者在命令行使用 flutter devices，你现在应该看到 Chrome 和 Web 服务器被列出。Chrome 设备会自动启动 Chrome。Web 服务器会启动一个托管应用程序的服务器，这样你就可以从任何浏览器加载它。在开发过程中使用 Chrome 设备，以便你可以使用 DevTools，而当你要在其他浏览器上进行测试时使用 Web 服务器。有关更多信息，请参阅使用 Flutter 构建 Web 应用程序和在 Web 上编写你的第一个 Flutter 应用程序。\n创建 Flutter 应用程序的启动器 通过使用创建应用程序中的说明来创建一个简单的、模板化的 Flutter 应用程序。输入 startup_namer(而不是 flutter_app)作为项目名称。您将修改启动器应用程序来创建完成的应用程序。\n提示：如果你在 IDE 中没有看到能够启动一个新的 Flutter 项目作为一个选项，那么请确保你已经安装了 Flutter 和 Dart 的插件。\n你将主要编辑 lib/main.dart，Dart 的代码就在这里。\n替换 lib/main.dart 的内容。 删除 lib/main.dart 中的所有代码，并用下面的代码替换，在屏幕中央显示 \u0026ldquo;Hello World\u0026rdquo;。\nimport \u0026#39;package:flutter/material.dart\u0026#39;; void main() =\u0026gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( title: \u0026#39;Welcome to Flutter\u0026#39;, home: Scaffold( appBar: AppBar( title: const Text(\u0026#39;Welcome to Flutter\u0026#39;), ), body: const Center( child: const Text(\u0026#39;Hello World\u0026#39;), ), ), ); } } 提示：当把代码粘贴到你的应用程序中时，缩进会变得歪斜。你可以用以下 Flutter 工具来解决。\nAndroid Studio/IntelliJ IDEA: 右键点击 Dart 代码，选择用 dartfmt 重格式代码。 VS code: 右键点击并选择格式化文档。 终端: 运行 flutter format \u0026lt;文件名\u0026gt;。 运行应用程序。您应该看到 Android，iOS 或 Web 输出，取决于您的设备。\n安卓系统:\niOS:\n小贴士：第一次在物理设备上运行时，可能需要一段时间来加载。之后，你可以使用热重载来快速更新。在支持的 IDE 中，如果应用正在运行，Save 也会执行热重载。当使用 flutter run 直接从控制台运行应用程序时，输入 r 来执行热重载。\n观察:\n这个例子创建了一个 Material 应用。Material 是一种视觉设计语言，是移动和 Web 的标准。Flutter 提供了一套丰富的 Material 部件。 main 方法使用箭头(=\u0026gt;)符号。对单行函数或方法使用箭头符号。 应用程序扩展了 StatelessWidget，这使得应用程序本身成为一个组件。在 Flutter 中，几乎所有的东西都是组件，包括对齐、填充和布局。 Scaffold 组件来自 Material 库，它提供了一个默认的应用栏、一个标题和一个 body 属性，其中存放着主屏幕的组件树。组件子树可以相当复杂。 组件的主要工作是提供一个 build 方法，描述如何用其他低级组件来显示该组件。 本例的主体由包含 Text 子部件的 Center 部件组成。Center 组件将其组件子树对齐到屏幕的中心。 使用外部软件包 在这一步中，您将开始使用一个名为 english_words 的开源包，它包含了几千个最常用的英语单词，还有一些实用函数。\n你可以在 pub.dev 找到 english_words 包，以及许多其他开源包。\npubspec 文件管理着 Flutter 应用的资产。在 pubspec.yaml 中，附加 english_words: ^3.1.5(english_words 3.1.5 或更高)到依赖列表中。\ndependencies: flutter: sdk: flutter cupertino_icons: ^0.1.2 english_words: ^3.1.5 # add this line 在 Android Studio 的编辑器视图中查看 pubspec 时，点击 Packages get。这将把包拉到你的项目中。你应该在控制台中看到以下内容。\nflutter packages get Running \u0026#34;flutter packages get\u0026#34; in startup_namer... Process finished with exit code 0 执行 Pub get 也会自动生成 \u0026ldquo;pubspec.lock\u0026rdquo; 文件，其中包含所有拉入项目的包的列表和它们的版本号。\n在 lib/main.dart 中，导入新包:\nimport \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:english_words/english_words.dart\u0026#39;; // Add this line. 当你输入时，Android Studio 会给你建议导入的库。然后，它将导入的字符串渲染成灰色，让你知道导入的库是未使用的（到目前为止）。\n接下来，你将使用 english_words 包来生成文本，而不是使用 \u0026ldquo;Hello World\u0026rdquo;。\n做以下修改。\nimport \u0026#39;package:flutter/material.dart\u0026#39;; import \u0026#39;package:english_words/english_words.dart\u0026#39;; void main() =\u0026gt; runApp(MyApp()); class MyApp extends StatelessWidget { @override Widget build(BuildContext context) { final wordPair = WordPair.random(); // Add this line. return MaterialApp( title: \u0026#39;Welcome to Flutter\u0026#39;, home: Scaffold( appBar: AppBar( title: Text(\u0026#39;Welcome to Flutter\u0026#39;), ), body: Center( //child: Text(\u0026#39;Hello World\u0026#39;), // Replace this text... child: Text(wordPair.asPascalCase), // With this text. ), ), ); } } 提示: Pascal 大小写(也称为上驼形大小写)意味着字符串中的每个单词，包括第一个单词，都以大写字母开头。所以，uppercamelcase 就变成了 UpperCamelCase。\n如果应用程序正在运行，热重载来更新正在运行的应用程序。(在命令行中，你可以输入 r 来热重载。)每次点击热重载或保存项目时，你应该会在运行中的应用程序中看到一个不同的单词对，随机选择。这是因为单词对是在 build 方法里面生成的，每次 MaterialApp 需要渲染时，或者在 Flutter Inspector 中切换 Platform 时，都会运行该方法。\nAndroid:\niOS:\n有问题？ 如果您的应用程序没有正确运行，请查找错别字。如果需要，请使用以下链接中的代码来恢复正常。\npubspec.yaml lib/main.dart 添加一个有状态的组件 无状态组件是不可改变的，这意味着它们的属性不能改变-所有值都是最终值。\n有状态组件维护的状态可能在组件的生命周期内发生变化。实现一个有状态的组件至少需要两个类。1) 一个 StatefulWidget，它可以创建一个 State 类的实例。StatefulWidget 对象本身是不可变的，可以被丢弃和再生，但 State 对象会在 widget 的生命周期内持久存在。\n在这一步骤中，您将添加一个有状态的组件 RandomWords，并创建其 State 类 _RandomWordsState。然后，您将在现有的 MyApp 无状态组件中使用 RandomWords 作为子类。\n为有状态组件创建模板代码。\n它可以放在 MyApp 以外的文件中的任何位置，但解决方案将其放在文件的底部。在 lib/main.dart 中，将光标定位在所有代码之后，输入回车键几次，重新开始一行。在你的 IDE 中，开始输入 stful。编辑器会询问你是否要创建一个 Stateful 的组件。按回车键接受。两个类的模板代码出现了，光标定位让你输入无状态组件的名称。\n输入 RandomWords 作为您的小组件的名称。\n正如您在下面的代码中所看到的，RandomWords 组件除了创建它的 State 类之外，几乎没有其他的功能。\n一旦您输入 RandomWords 作为有状态组件的名称，IDE 会自动更新相应的 State 类，将其命名为 _RandomWordState。默认情况下，State 类的名称是以下划线为前缀的。在标识符前加上下划线可以加强 Dart 语言的隐私性，也是 State 对象的最佳实践。\nIDE 也会自动更新 State 类以扩展 State\u0026lt;RandomWords\u0026gt;，表明你正在使用一个专门用于 RandomWords 的通用 State 类。应用程序的大部分逻辑都在这里-它为 RandomWords 组件维护状态。这个类保存了生成的词对列表，随着用户的滚动而无限增长，在本实验室的第二部分中，当用户通过切换心形图标从列表中添加或删除这些词对时，该类会对其进行收藏。\n现在两个类的外观如下:\nclass RandomWords extends StatefulWidget { @override _RandomWordsState createState() =\u0026gt; _RandomWordsState(); } class _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { @override Widget build(BuildContext context) { return Container(); } } 更新 _RandomWordsState 中的 build() 方法。\n用以下两行替换 return Container();:\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { @override Widget build(BuildContext context) { final wordPair = WordPair.random(); // NEW return Text(wordPair.asPascalCase); // NEW } } 通过以下修改，删除 MyApp 中的文字生成代码:\nclass MyApp extends StatelessWidget { @override Widget build(BuildContext context) { final wordPair = WordPair.random(); // DELETE return MaterialApp( title: \u0026#39;Welcome to Flutter\u0026#39;, home: Scaffold( appBar: AppBar( title: Text(\u0026#39;Welcome to Flutter\u0026#39;), ), body: Center( //child: Text(wordPair.asPascalCase), // REPLACE with... child: RandomWords(), // ...this line ), ), ); } } 热重载应用程序。应用程序应该像以前一样，每次热重载或保存应用程序时都会显示一个单词配对。\n提示：如果您在热重载时看到警告，表明您可能需要重新启动应用程序，您应该考虑重新启动应用程序。这可能是一个假阳性，但重启可以确保您的更改反映在应用程序的 UI 中。\n遇到问题了？ 如果您的应用程序没有正确运行，您可以使用以下链接中的代码来恢复正常。\nlib/main.dart 创建一个无限滚动的 ListView 在这一步中，您将展开 _RandomWordsState 来生成并显示单词配对列表。随着用户的滚动，列表（显示在 ListView 小组件中）会无限增长。ListView 中的构建器工厂构造函数允许你按需懒惰地构建一个列表视图。\n在 _RandomWordState 类中添加一些状态变量。\n增加一个 _suggestions 列表，用于保存建议的单词配对。另外，添加一个 _biggerFont 变量，用于使字体大小变大。\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { final List\u0026lt;WordPair\u0026gt; _suggestions = \u0026lt;WordPair\u0026gt;[]; // NEW final TextStyle _biggerFont = const TextStyle(fontSize: 18); // NEW ... } 接下来，你将在 _RandomWordsState 类中添加一个 _buildSuggestions() 函数。这个方法可以构建显示建议词对的 ListView。\nListView 类提供了一个构建器属性 itemBuilder，它是一个工厂构建器和回调函数，指定为一个匿名函数。两个参数被传递给函数\u0026ndash;BuildContext 和行迭代器 i。迭代器从0开始，每次调用函数时递增，每一个建议的单词配对都会递增一次。这个模型允许建议列表在用户滚动时继续增长。\n添加整个 _buildSuggestions 函数。\n在 _RandomWordsState 类中，添加以下函数，如果你喜欢，请删除注释:\nWidget _buildSuggestions() { return ListView.builder( padding: const EdgeInsets.all(16), // The itemBuilder callback is called once per suggested // word pairing, and places each suggestion into a ListTile // row. For even rows, the function adds a ListTile row for // the word pairing. For odd rows, the function adds a // Divider widget to visually separate the entries. Note that // the divider may be difficult to see on smaller devices. itemBuilder: (BuildContext _context, int i) { // Add a one-pixel-high divider widget before each row // in the ListView. if (i.isOdd) { return Divider(); } // The syntax \u0026#34;i ~/ 2\u0026#34; divides i by 2 and returns an // integer result. // For example: 1, 2, 3, 4, 5 becomes 0, 1, 1, 2, 2. // This calculates the actual number of word pairings // in the ListView,minus the divider widgets. final int index = i ~/ 2; // If you\u0026#39;ve reached the end of the available word // pairings... if (index \u0026gt;= _suggestions.length) { // ...then generate 10 more and add them to the // suggestions list. _suggestions.addAll(generateWordPairs().take(10)); } return _buildRow(_suggestions[index]); } ); } _buildSuggestions 函数对每个词对调用一次 _buildRow。该函数在 ListTile 中显示每一个新的词对，这使得你可以在第2部分中使行更有吸引力。\n在 _RandomWordsState 中添加一个 _buildRow 函数。\nWidget _buildRow(WordPair pair) { return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), ); } 更新 _RandomWordsState 的构建方法。\n将其改为使用 _buildSuggestions()，而不是直接调用单词生成库。(Scaffold 实现了基本的 Material Design 视觉布局。)\n@override Widget build(BuildContext context) { //final wordPair = WordPair.random(); // Delete these... //return Text(wordPair.asPascalCase); // ... two lines. return Scaffold ( // Add from here... appBar: AppBar( title: Text(\u0026#39;Startup Name Generator\u0026#39;), ), body: _buildSuggestions(), ); // ... to here. } 更新 MyApp 的构建方法，更改标题，删除 AppBar，并将 home 属性改为 RandomWords 部件。\n@override Widget build(BuildContext context) { return MaterialApp( title: \u0026#39;Startup Name Generator\u0026#39;, home: RandomWords(), ); } 重新启动应用程序。无论你滚动多远，你都应该看到一个单词配对的列表。\nAndroid:\niOS:\n遇到问题了？ 如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\nlib/main.dart 今后的步骤 恭喜你！\n你已经完成了这个代码实验室的第一部分! 如果你想扩展这款应用，请进入第二部分，你将对应用进行如下修改。\n增加互动性 增加导航到新路由的功能。 修改主题颜色。 当第2部分完成后，应用程序将是这样的：\n其他后续步骤 通过以下资源了解更多关于 Flutter SDK 的信息。\nFlutter 中的布局 增加互动性教程 组件介绍 为 Android 开发者提供的 Flutter 针对 React Native 开发者的 Flutter Web 开发人员的 Flutter Flutter YouTube 频道 其他资源包括以下几点:\n用 Flutter 构建本地移动应用 从 Java 到 Dart codelab Flutter cookbook 融入 Dart 的 Bootstrap：了解更多关于这门语言的信息 同时，与 Flutter 社区联系起来!\n"},"name":"编写你的第一个 Flutter 应用，第一部分","published":"2020-06-26T00:00:00Z","summary":"Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起使用，被世界各地的开发者和组织使用，并且是免费和开源的。","type":"entry","url":"https://ohmycloud.github.io/notes/write-your-first-flutter-app/"}
{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"content":{"html":"\u003ch2 id=\"raku-中的--和--twigil-是什么\"\u003eRaku 中的 \u003ccode\u003e.\u003c/code\u003e 和 \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 是什么？\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003e.\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 的意思是\u0026quot;这是类公用的\u0026quot;, \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 的意思是“这是类私有的”, 只能用在类的内部。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eScoreKeeper\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.options\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!player-points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e普通的符号表明了词法作用域或包作用域, 但是 \u003cstrong\u003etwigils\u003c/strong\u003e 就像是 \u003cstrong\u003esigils\u003c/strong\u003e 的兄弟, 表明了不同的作用域, 它影响了变量的作用域。\u003ccode\u003e.\u003c/code\u003e 和 \u003ccode\u003e!\u003c/code\u003e 是二级 \u003cstrong\u003esigils\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e属性存在于每个类的实例中, 在类的内部, 可以直接使用 \u003ccode\u003e!\u003c/code\u003e 访问到实例的属性:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!x\u003c/span\u003e\u003cspan class=\"s2\"\u003e, \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!y\u003c/span\u003e\u003cspan class=\"s2\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e那么 \u003ccode\u003e.\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 和 \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 之间有什么关系呢？下面看一个例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e# 注意这次我们使用 . 而非 !\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\$.x 等价于 self.x()\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\$.y 等价于 self.y()\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e  \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 调用实例的名为 x 的方法\u003c/span\u003e\n        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 调用实例的名为 y 的方法\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$point\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePoint\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e, \u003cspan class=\"s\"\u003ey\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \n\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e会输出:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$.x 等价于 self.x()\n$.y 等价于 self.y()\n10\n20\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e注意到, 属性被声明为 \u003ccode\u003e$.x\u003c/code\u003e 和 \u003ccode\u003e$.y\u003c/code\u003e, 但是在类的内部仍旧能通过 \u003ccode\u003e$!x\u003c/code\u003e 和 \u003ccode\u003e$!y\u003c/code\u003e 来访问属性。这是因为在 Raku 中所有的属性都是私有的并且在类中可以通过 \u003ccode\u003e$!attribute-name\u003c/code\u003e 直接访问这些属性。Raku 可以为你自动生成存取方法。\u003c/p\u003e\n\u003cp\u003e公共属性拥有 \u003ccode\u003e.\u003c/code\u003e twigil, 私有属性拥有 \u003ccode\u003e!\u003c/code\u003e twigil。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehas $.x\u003c/code\u003e 就是私有属性 \u003ccode\u003ehas $!x\u003c/code\u003e 加上一个\u003ccode\u003egetter\u003c/code\u003e方法, 即 \u003ccode\u003emethod x() { ... }\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehas $.x is rw\u003c/code\u003e 就是私有属性 \u003ccode\u003ehas $!x\u003c/code\u003e 加上一个\u003ccode\u003egetter/setter\u003c/code\u003e方法。\u003c/p\u003e\n\u003ch2 id=\"-twigil-就是调用了与属性同名的方法\"\u003e. \u003cstrong\u003etwigil\u003c/strong\u003e 就是调用了与属性同名的方法\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eSaySomething\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 这证明了 $.a 的 . twigil 做了一次隐式的实例方法调用。\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"n\"\u003eSaySomething\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 打印 \u0026#34;a\u0026#34;\u003c/span\u003e\n\u003cspan class=\"n\"\u003eSaySomething\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 打印 \u0026#34;a\u0026#34;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"-twigil-中自动生成的方法可以被子类重写\"\u003e. \u003cstrong\u003etwigil\u003c/strong\u003e 中自动生成的方法可以被子类重写\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.y\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCircle\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003ePoint\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!radius\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# 重写父类中的 x() 方法和 y() 方法\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI am x point in a Circle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI am y point in a Circle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$circle\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCircle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003eradius\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$circle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# I am x point in a Circle\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$circle\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# I am y point in a Circle\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果不想子类重写父类中的方法, 那么在父类中声明属性的时候, 使用 \u003ccode\u003e!\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e 替代 \u003ccode\u003e.\u003c/code\u003e \u003cstrong\u003etwigil\u003c/strong\u003e。\u003c/p\u003e\n","text":"Raku 中的 . 和 ! twigil 是什么？ . twigil 的意思是\u0026quot;这是类公用的\u0026quot;, ! twigil 的意思是“这是类私有的”, 只能用在类的内部。\nclass ScoreKeeper { has @.options; has %!player-points; } 普通的符号表明了词法作用域或包作用域, 但是 twigils 就像是 sigils 的兄弟, 表明了不同的作用域, 它影响了变量的作用域。. 和 ! 是二级 sigils。\n属性存在于每个类的实例中, 在类的内部, 可以直接使用 ! 访问到实例的属性:\nclass Point { has $.x; has $.y; method Str() { \u0026#34;($!x, $!y)\u0026#34; } } 那么 . twigil 和 ! twigil 之间有什么关系呢？下面看一个例子:\nclass Point { has $.x; has $.y; method Str() { # 注意这次我们使用 . 而非 ! \u0026#34;\\$.x 等价于 self.x()\u0026#34;.say if $.x == self.x(); \u0026#34;\\$.y 等价于 self.y()\u0026#34;.say if $.y == self.y(); } method print() { say self.x(); # 调用实例的名为 x 的方法 say self.y(); # 调用实例的名为 y 的方法 } } my $point = Point.new(x =\u0026gt; 10, y =\u0026gt; 20); $point.Str; $point.print; 会输出:\n$.x 等价于 self.x() $.y 等价于 self.y() 10 20 注意到, 属性被声明为 $.x 和 $.y, 但是在类的内部仍旧能通过 $!x 和 $!y 来访问属性。这是因为在 Raku 中所有的属性都是私有的并且在类中可以通过 $!attribute-name 直接访问这些属性。Raku 可以为你自动生成存取方法。\n公共属性拥有 . twigil, 私有属性拥有 ! twigil。\nhas $.x 就是私有属性 has $!x 加上一个getter方法, 即 method x() { ... }。\nhas $.x is rw 就是私有属性 has $!x 加上一个getter/setter方法。\n. twigil 就是调用了与属性同名的方法 class SaySomething { method a() { say \u0026#34;a\u0026#34;; } method b() { $.a; } method c() { self.a(); } # 这证明了 $.a 的 . twigil 做了一次隐式的实例方法调用。 } SaySomething.b; # 打印 \u0026#34;a\u0026#34; SaySomething.c; # 打印 \u0026#34;a\u0026#34; . twigil 中自动生成的方法可以被子类重写 class Point { has $.x; has $.y; } class Circle is Point { has $!radius; # 重写父类中的 x() 方法和 y() 方法 method x() { \u0026#34;I am x point in a Circle\u0026#34;; } method y() { \u0026#34;I am y point in a Circle\u0026#34;; } } my $circle = Circle.new(radius =\u0026gt; 10); $circle.x().say; # I am x point in a Circle $circle.y.say; # I am y point in a Circle 如果不想子类重写父类中的方法, 那么在父类中声明属性的时候, 使用 ! twigil 替代 . twigil。\n"},"name":"Raku 中的 twigil","published":"2021-07-11T00:00:00+08:00","summary":"Twigils in Raku","type":"entry","url":"https://ohmyweekly.github.io/notes/2015-12-11-twigils-in-raku/"}
{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSimpleStringSchema\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003eSimpleStringSchema\u003c/code\u003e 把 message 反序列化为字符串。如果你的 message 有键, 则忽略键。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-scala\" data-lang=\"scala\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eval\u003c/span\u003e \u003cspan class=\"n\"\u003emyConsumer\u003c/span\u003e \u003cspan class=\"k\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eFlinkKafkaConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ekafkaConf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etopic\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eSimpleStringSchema\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eproperties\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eJSONDeserializationSchema\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003eJSONDeserializationSchema\u003c/code\u003e 使用 \u003cem\u003ejackson\u003c/em\u003e 将 message 反序列化为 json 格式的消息并返回 \u003ccode\u003ecom.fasterxml.jackson.databind.node.ObjectNode\u003c/code\u003e 对象流。你可以使用 \u003ccode\u003e.get(\u0026quot;property\u0026quot;)\u003c/code\u003e 方法访问字段。再一次, 键被忽略。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-scala\" data-lang=\"scala\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eval\u003c/span\u003e \u003cspan class=\"n\"\u003emyConsumer\u003c/span\u003e \u003cspan class=\"k\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eFlinkKafkaConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ekafkaConf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etopic\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eJSONDeserializationSchema\u003c/span\u003e\u003cspan class=\"o\"\u003e(),\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eproperties\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eJSONKeyValueDeserializationSchema\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003eJSONKeyValueDeserializationSchema\u003c/code\u003e 与前一个非常类似，但处理带有json编码的键\u003cstrong\u003e和\u003c/strong\u003e值的消息。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-scala\" data-lang=\"scala\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eval\u003c/span\u003e \u003cspan class=\"n\"\u003emyConsumer\u003c/span\u003e \u003cspan class=\"k\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eFlinkKafkaConsumer\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003ekafkaConf\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003etopic\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eJSONKeyValueDeserializationSchema\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"kc\"\u003etrue\u003c/span\u003e\u003cspan class=\"o\"\u003e),\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eproperties\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回的 \u003ccode\u003eObjectNode\u003c/code\u003e 包含如下字段：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ekey\u003c/code\u003e：键中存在的所有字段\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003evalue\u003c/code\u003e：所有的 message 字段\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003emetadata\u003c/code\u003e（可选）：暴露消息的 \u003ccode\u003eoffset\u003c/code\u003e, \u003ccode\u003epartition\u003c/code\u003e 和 \u003ccode\u003etopic\u003c/code\u003e （将 \u003ccode\u003etrue\u003c/code\u003e 传递给构造函数以获取元数据）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ekafka-console-producer --broker-list localhost:9092 --topic json-topic \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --property parse.key\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003etrue\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    --property key.separator\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;keyField1\u0026#34;\u003c/span\u003e: 1, \u003cspan class=\"s2\"\u003e\u0026#34;keyField2\u0026#34;\u003c/span\u003e: 2\u003cspan class=\"o\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;valueField1\u0026#34;\u003c/span\u003e: 1, \u003cspan class=\"s2\"\u003e\u0026#34;valueField2\u0026#34;\u003c/span\u003e : \u003cspan class=\"o\"\u003e{\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;foo\u0026#34;\u003c/span\u003e: \u003cspan class=\"s2\"\u003e\u0026#34;bar\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e会被解码为:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-json\" data-lang=\"json\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;key\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#34;keyField1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#34;keyField2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;value\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#34;valueField1\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#34;valueField2\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026#34;foo\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;bar\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e}},\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nt\"\u003e\u0026#34;metadata\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;offset\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e43\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;topic\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;json-topic\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nt\"\u003e\u0026#34;partition\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":" SimpleStringSchema SimpleStringSchema 把 message 反序列化为字符串。如果你的 message 有键, 则忽略键。\nval myConsumer = new FlinkKafkaConsumer( kafkaConf.topic, new SimpleStringSchema(), properties ) JSONDeserializationSchema JSONDeserializationSchema 使用 jackson 将 message 反序列化为 json 格式的消息并返回 com.fasterxml.jackson.databind.node.ObjectNode 对象流。你可以使用 .get(\u0026quot;property\u0026quot;) 方法访问字段。再一次, 键被忽略。\nval myConsumer = new FlinkKafkaConsumer( kafkaConf.topic, new JSONDeserializationSchema(), properties ) JSONKeyValueDeserializationSchema JSONKeyValueDeserializationSchema 与前一个非常类似，但处理带有json编码的键和值的消息。\nval myConsumer = new FlinkKafkaConsumer( kafkaConf.topic, new JSONKeyValueDeserializationSchema(true), properties ) 返回的 ObjectNode 包含如下字段：\nkey：键中存在的所有字段 value：所有的 message 字段 metadata（可选）：暴露消息的 offset, partition 和 topic （将 true 传递给构造函数以获取元数据） 例如：\nkafka-console-producer --broker-list localhost:9092 --topic json-topic \\ --property parse.key=true \\ --property key.separator=| {\u0026#34;keyField1\u0026#34;: 1, \u0026#34;keyField2\u0026#34;: 2} | {\u0026#34;valueField1\u0026#34;: 1, \u0026#34;valueField2\u0026#34; : {\u0026#34;foo\u0026#34;: \u0026#34;bar\u0026#34;}} 会被解码为:\n{ \u0026#34;key\u0026#34;:{\u0026#34;keyField1\u0026#34;:1,\u0026#34;keyField2\u0026#34;:2}, \u0026#34;value\u0026#34;:{\u0026#34;valueField1\u0026#34;:1,\u0026#34;valueField2\u0026#34;:{\u0026#34;foo\u0026#34;:\u0026#34;bar\u0026#34;}}, \u0026#34;metadata\u0026#34;:{ \u0026#34;offset\u0026#34;:43, \u0026#34;topic\u0026#34;:\u0026#34;json-topic\u0026#34;, \u0026#34;partition\u0026#34;:0 } } "},"name":"Flink-Kafka 内置的反序列化 schemas","published":"2019-05-15T18:34:17Z","summary":"SimpleStringSchema SimpleStringSchema 把 message 反序列化为字符串。如果你的 message 有键, 则忽略键。\nval myConsumer = new FlinkKafkaConsumer( kafkaConf.topic, new SimpleStringSchema(), properties ) JSONDeserializationSchema JSONDeserializationSchema 使用 jackson 将 message 反序列化为 json 格式的消息并返回 com.fasterxml.jackson.databind.node.ObjectNode 对象流。你可以使用 .get(\u0026quot;property\u0026quot;) 方法访问字段。再一次, 键被忽略。\nval myConsumer = new FlinkKafkaConsumer( kafkaConf.topic, new JSONDeserializationSchema(), properties ) JSONKeyValueDeserializationSchema JSONKeyValueDeserializationSchema 与前一个非常类似，但处理带有json编码的键和值的消息。\nval myConsumer = new FlinkKafkaConsumer( kafkaConf.topic, new JSONKeyValueDeserializationSchema(true), properties ) 返回的 ObjectNode 包含如下字段：\nkey：键中存在的所有字段 value：所有的 message 字段 metadata（可选）：暴露消息的 offset, partition 和 topic （将 true 传递给构造函数以获取元数据） 例如：","type":"entry","url":"https://ohmyweekly.github.io/notes/apache-flink-built-in-deserialization-schemas-md/"}
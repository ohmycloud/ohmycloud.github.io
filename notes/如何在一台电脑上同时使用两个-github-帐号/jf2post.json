{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cblockquote\u003e\n\u003cp\u003e本文是一篇笔记, 内容经过一些修改, 很抱歉原文链接找不到了。如有侵权请告知删除。这是其中一处链接 \u003ca href=\"http://tmyam.github.io/blog/2014/05/07/duo-githubzhang-hu-she-zhi/\"\u003e一个客户端设置多个github账号\u003c/a\u003e 和 \u003ca href=\"http://notes.seirhsiao.com/2016/01/24/2014-09-30-github-multiple-account-and-multiple-repository/\"\u003e如何同一台电脑配置多个git或github账号\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2 id=\"一个客户端设置两个-github-账号\"\u003e一个客户端设置两个 github 账号\u003c/h2\u003e\n\u003ch3 id=\"需求\"\u003e需求\u003c/h3\u003e\n\u003cp\u003e需要在一台电脑上\u003cstrong\u003e同时\u003c/strong\u003e使用\u003cstrong\u003e两个\u003c/strong\u003e不同的 github 账号，负责\u003cstrong\u003e不同\u003c/strong\u003e的用途。(例如一个用于技术, 一个用于非技术)\u003c/p\u003e\n\u003ch3 id=\"前期工作\"\u003e前期工作\u003c/h3\u003e\n\u003cp\u003e至少有两个 github 账号 (假设有两个账号 一个为 \u003ccode\u003eohmyone\u003c/code\u003e ，另一个为  \u003ccode\u003eohmytwo\u003c/code\u003e )\n取消 git \u003cstrong\u003e全局\u003c/strong\u003e设置\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit config --global --unset user.name\ngit config --global --unset user.email\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"ssh-配置\"\u003eSSH 配置\u003c/h3\u003e\n\u003ch4 id=\"生成--id_rsa-私钥-和--id_rsapub-公钥\"\u003e生成  \u003ccode\u003eid_rsa\u003c/code\u003e 私钥 和  \u003ccode\u003eid_rsa.pub\u003c/code\u003e 公钥。\u003c/h4\u003e\n\u003cp\u003e\u003ccode\u003eohmyone\u003c/code\u003e 可以直接回车，默认生成 \u003ccode\u003eid_rsa\u003c/code\u003e 和 \u003ccode\u003eid_rsa.pub\u003c/code\u003e。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003essh-keygen -t rsa -C \u0026#34;ohmyone@sina.com\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e但是 \u003ccode\u003eohmytwo\u003c/code\u003e 会出现提示输入文件名，输入与默认配置不一样的文件名，比如: \u003ccode\u003eid_rsa_ohmytwo\u003c/code\u003e。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecd ~/.ssh\nssh-keygen -t rsa -C \u0026#34;ohmytwo@outlook.com\u0026#34;  # 输入文件名, 但是别输密码\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003egithub 添加公钥 id_rsa.pub 和 id_rsa_two.pub。\n分别登陆 ohmyone , ohmytwo 的账号，在 \u003cstrong\u003eAccount Settings\u003c/strong\u003e 的 SSH Keys 里，点 Add SSH Keys ，将公钥(.pub文件)中的内容粘贴到”Key”中，并输入”Title”.\u003c/p\u003e\n\u003ch4 id=\"添加-ssh-key\"\u003e添加 ssh key\u003c/h4\u003e\n\u003cp\u003eWindows 上推荐使用 GitBash 命令行工具:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eeval `ssh-agent -s`\nssh-add ~/.ssh/id_rsa\nssh-add ~/.ssh/id_rsa_ohmytwo\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e可以在添加前使用下面命令\u003cstrong\u003e删除\u003c/strong\u003e所有的 key\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003essh-add -D\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e最后可以通过下面命令，查看key的设置\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003essh-add -l\n\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"修改-ssh-config-文件\"\u003e修改 ssh config 文件\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecd ~/.ssh/touch config\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e打开 \u003ccode\u003e.ssh\u003c/code\u003e 文件夹下的 \u003ccode\u003econfig\u003c/code\u003e 文件，进行配置\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e# default\nHost github.com\nHostName github.com\nUser ohmyone\nIdentityFile ~/.ssh/id_rsa\n\n# ohmytwo\nHost ohmytwo.github.com  # 前缀名可以任意设置\nHostName github.com\nUser ohmytwo\nIdentityFile ~/.ssh/id_rsa_two\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这里必须采用这样的方式设置，否则 push 时会出现以下错误:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eERROR: Permission to ohmytwo/ohmytwo.github.com.git denied to ohmyone.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e简单分析下原因，我们可以发现 ssh 客户端是通过类似:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit@github.com:ohmyone/ohmyone.github.com.git \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这样的 git 地址中的 \u003cstrong\u003eUser\u003c/strong\u003e 和 \u003cstrong\u003eHost\u003c/strong\u003e 来识别使用哪个本地私钥的。\n很明显，如果 User 和 Host 始终为 git 和 github.com，那么就只能使用一个私钥。\n所以需要上面的方式配置，每个账号使用了自己的 \u003cstrong\u003eHost\u003c/strong\u003e，每个 Host 的域名做 CNAME 解析到 github.com，这样 ssh 在连接时就可以区别不同的账号了。\u003c/p\u003e\n\u003ch4 id=\"测试-ssh-连接\"\u003e测试 SSH 连接\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003essh -T git@github.com            # 测试 ohmyone ssh 连接\n#Hi ohmyone! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access.\n\nssh -T git@ohmytwo.github.com    # 测试 ohmytwo ssh 连接\n#Hi ohmytwo! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access.\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e但是这样还没有完，下面还有关联的设置。\u003c/p\u003e\n\u003ch4 id=\"用户名和邮箱的局部配置\"\u003e用户名和邮箱的局部配置\u003c/h4\u003e\n\u003cp\u003e新建 git 项目或者 clone 已有的项目。可以用 \u003ccode\u003egit init\u003c/code\u003e 或者 \u003ccode\u003egit clone\u003c/code\u003e 创建本地项目。\n分别在 ohmyone 和 ohmytwo 的git项目目录下，使用下面的命令设置账号关联\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit config user.name  ohmyone\ngit config user.email  ohmyone@sina.com\n\ngit config user.name  ohmytwo\ngit config user.email  ohmytwo@outlook.com\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e即在各自的 git 项目文件夹中设置\u003cstrong\u003e局部\u003c/strong\u003e user 和 email, 执行上面的 git 命令。\u003c/p\u003e\n\u003cp\u003e查看git项目的配置\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit config --list\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e查看 ohmyone 的remote.origin.url= \u003ccode\u003egit@github.com:ohmyone/ohmyone.github.com.git\u003c/code\u003e\n查看 ohmytwo 的remote.origin.url= \u003ccode\u003egit@github.com:ohmytwo/ohmytwo.github.com.git\u003c/code\u003e\u003c/p\u003e\n\u003ch4 id=\"修改远端仓库\"\u003e修改远端仓库\u003c/h4\u003e\n\u003cp\u003e由于 ohmyone 使用的是\u003cstrong\u003e默认\u003c/strong\u003e的 Host，所以不需要修改，但是 ohmytwo 使用的 Host 是 \u003ccode\u003eohmytwo.github.com\u003c/code\u003e ，则需要进行修改\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit remote rm origin\ngit remote add origin git@ohmytwo.github.com:ohmytwo/ohmytwo.github.com.git\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e上传更改。上面所有的设置无误后，可以修改代码，然后上传了。\u003c/p\u003e\n\u003ch4 id=\"提交\"\u003e提交\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit add -A\ngit commit -m \u0026#34;your comments\u0026#34;\ngit push\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e如果遇到warning\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ewarning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use…\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e推荐使用下面命令设置。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egit config --global push.default simple\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e参考\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://blog.csdn.net/wzy_1988/article/details/19967465\"\u003ehttp://blog.csdn.net/wzy_1988/article/details/19967465\u003c/a\u003e\n\u003ca href=\"http://testerhome.com/topics/752\"\u003ehttp://testerhome.com/topics/752\u003c/a\u003e\n\u003ca href=\"http://hily.me/blog/2013/05/github-multiple-account-and-multiple-repository/\"\u003ehttp://hily.me/blog/2013/05/github-multiple-account-and-multiple-repository/\u003c/a\u003e\u003c/p\u003e\n","text":" 本文是一篇笔记, 内容经过一些修改, 很抱歉原文链接找不到了。如有侵权请告知删除。这是其中一处链接 一个客户端设置多个github账号 和 如何同一台电脑配置多个git或github账号\n一个客户端设置两个 github 账号 需求 需要在一台电脑上同时使用两个不同的 github 账号，负责不同的用途。(例如一个用于技术, 一个用于非技术)\n前期工作 至少有两个 github 账号 (假设有两个账号 一个为 ohmyone ，另一个为 ohmytwo ) 取消 git 全局设置\ngit config --global --unset user.name git config --global --unset user.email SSH 配置 生成 id_rsa 私钥 和 id_rsa.pub 公钥。 ohmyone 可以直接回车，默认生成 id_rsa 和 id_rsa.pub。\nssh-keygen -t rsa -C \u0026#34;ohmyone@sina.com\u0026#34; 但是 ohmytwo 会出现提示输入文件名，输入与默认配置不一样的文件名，比如: id_rsa_ohmytwo。\ncd ~/.ssh ssh-keygen -t rsa -C \u0026#34;ohmytwo@outlook.com\u0026#34; # 输入文件名, 但是别输密码 github 添加公钥 id_rsa.pub 和 id_rsa_two.pub。 分别登陆 ohmyone , ohmytwo 的账号，在 Account Settings 的 SSH Keys 里，点 Add SSH Keys ，将公钥(.pub文件)中的内容粘贴到”Key”中，并输入”Title”.\n添加 ssh key Windows 上推荐使用 GitBash 命令行工具:\neval `ssh-agent -s` ssh-add ~/.ssh/id_rsa ssh-add ~/.ssh/id_rsa_ohmytwo 可以在添加前使用下面命令删除所有的 key\nssh-add -D 最后可以通过下面命令，查看key的设置\nssh-add -l 修改 ssh config 文件 cd ~/.ssh/touch config 打开 .ssh 文件夹下的 config 文件，进行配置\n# default Host github.com HostName github.com User ohmyone IdentityFile ~/.ssh/id_rsa # ohmytwo Host ohmytwo.github.com # 前缀名可以任意设置 HostName github.com User ohmytwo IdentityFile ~/.ssh/id_rsa_two 这里必须采用这样的方式设置，否则 push 时会出现以下错误:\nERROR: Permission to ohmytwo/ohmytwo.github.com.git denied to ohmyone. 简单分析下原因，我们可以发现 ssh 客户端是通过类似:\ngit@github.com:ohmyone/ohmyone.github.com.git 这样的 git 地址中的 User 和 Host 来识别使用哪个本地私钥的。 很明显，如果 User 和 Host 始终为 git 和 github.com，那么就只能使用一个私钥。 所以需要上面的方式配置，每个账号使用了自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，这样 ssh 在连接时就可以区别不同的账号了。\n测试 SSH 连接 ssh -T git@github.com # 测试 ohmyone ssh 连接 #Hi ohmyone! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access. ssh -T git@ohmytwo.github.com # 测试 ohmytwo ssh 连接 #Hi ohmytwo! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access. 但是这样还没有完，下面还有关联的设置。\n用户名和邮箱的局部配置 新建 git 项目或者 clone 已有的项目。可以用 git init 或者 git clone 创建本地项目。 分别在 ohmyone 和 ohmytwo 的git项目目录下，使用下面的命令设置账号关联\ngit config user.name ohmyone git config user.email ohmyone@sina.com git config user.name ohmytwo git config user.email ohmytwo@outlook.com 即在各自的 git 项目文件夹中设置局部 user 和 email, 执行上面的 git 命令。\n查看git项目的配置\ngit config --list 查看 ohmyone 的remote.origin.url= git@github.com:ohmyone/ohmyone.github.com.git 查看 ohmytwo 的remote.origin.url= git@github.com:ohmytwo/ohmytwo.github.com.git\n修改远端仓库 由于 ohmyone 使用的是默认的 Host，所以不需要修改，但是 ohmytwo 使用的 Host 是 ohmytwo.github.com ，则需要进行修改\ngit remote rm origin git remote add origin git@ohmytwo.github.com:ohmytwo/ohmytwo.github.com.git 上传更改。上面所有的设置无误后，可以修改代码，然后上传了。\n提交 git add -A git commit -m \u0026#34;your comments\u0026#34; git push 如果遇到warning\nwarning: push.default is unset; its implicit value is changing in Git 2.0 from ‘matching’ to ‘simple’. To squelch this messageand maintain the current behavior after the default changes, use… 推荐使用下面命令设置。\ngit config --global push.default simple 参考\nhttp://blog.csdn.net/wzy_1988/article/details/19967465 http://testerhome.com/topics/752 http://hily.me/blog/2013/05/github-multiple-account-and-multiple-repository/\n"},"name":"一个客户端设置多个 github 账号","published":"2017-01-12T16:16:21Z","summary":"github","type":"entry","url":"https://ohmyweekly.github.io/notes/%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E5%90%8C%E6%97%B6%E4%BD%BF%E7%94%A8%E4%B8%A4%E4%B8%AA-github-%E5%B8%90%E5%8F%B7/"}
{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cp\u003e喜欢修复 Raku 编译器中的 bug? 这儿有一个\u003ca href=\"https://rt.perl.org/Ticket/Display.html?id=128304\"\u003egreat grammar bugglet\u003c/a\u003e: 当 \u003ccode\u003e„”\u003c/code\u003e 引号用在引起的用空白分割的单词列表构造器中时看起来好像不能工作:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e „\u003cspan class=\"n\"\u003ehello\u003c/span\u003e \u003cspan class=\"n\"\u003eworld\u003c/span\u003e”\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003eww\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e„hello world”\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003eww\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;hello world\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# hello world\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# „hello\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# world”\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# hello world\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e”\u003c/code\u003e 引号不应该出现在输出中并且在输出中我们应该只有 3 行输出; 这 3 行输出都是 \u003ccode\u003ehello world\u003c/code\u003e。看起来像是一个待修复的有趣的 bug! 我们进去看看。\u003c/p\u003e\n\u003ch2 id=\"你怎样拼写它\"\u003e你怎样拼写它?\u003c/h2\u003e\n\u003cp\u003e事实上这段代码没能正确解析表明这是一个 grammar bug。大部分的 grammar 住在 \u003ca href=\"https://github.com/rakudo/rakudo/blob/83b8b1a/src/Raku/Grammar.nqp\"\u003esrc/Raku/Grammar.nqp\u003c/a\u003e中, 但是在我们的手变脏之前, 让我们来解决我们应该查看什么。\u003c/p\u003e\n\u003cp\u003e二进制 \u003ccode\u003eraku\u003c/code\u003e 有一个 \u003ccode\u003e--target\u003c/code\u003e 命令行参数来接收其中之一的编译步骤并且会导致那个步骤的输出被产生出来。那儿有哪些步骤? 根据你正使用的后端它们也会有所不同, 但是你可以仅仅运行 \u003ccode\u003eraku --stagestats -e ''\u003c/code\u003e 把它们都打印出来:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ezoffix@leliana:~$ raku --stagestats -e \u0026#39;\u0026#39;\nStage start      :   0.000\nStage parse      :   0.077\nStage syntaxcheck:   0.000\nStage ast        :   0.000\nStage optimize   :   0.001\nStage mast       :   0.004\nStage mbc        :   0.000\nStage moar       :   0.000\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eGrammars 是关于解析的, 所以我们会查询 \u003ccode\u003eparse\u003c/code\u003e 目标(target)。至于要执行的代码, 我们会仅仅给它有问题的那块; 即 \u003ccode\u003eqww\u0026lt;\u0026gt;\u003c/code\u003e:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ezoffix@leliana:~$ raku --target=parse -e \u0026#39;qww\u0026lt;„hello world”\u0026gt;\u0026#39;\n- statementlist: qww\u0026lt;„hello world”\u0026gt;\n  - statement: 1 matches\n    - EXPR: qww\u0026lt;„hello world”\u0026gt;\n      - value: qww\u0026lt;„hello world”\u0026gt;\n        - quote: qww\u0026lt;„hello world”\u0026gt;\n          - quibble: \u0026lt;„hello world”\u0026gt;\n            - babble:\n              - B:\n            - nibble: „hello world”\n          - quote_mod: ww\n            - sym: ww\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e那很棒! 每一行前面都有能在 grammar 中找到的 token 的名字, 所以现在我们知道了在哪里查找问题。\u003c/p\u003e\n\u003cp\u003e我们还知道基本的引号能正确地工作, 所以我们也倾倒出它们的解析步骤, 来看看这两个输出之间是否有什么不同:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ezoffix@leliana:~$ raku --target=parse -e \u0026#39;qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;\u0026#39;\n- statementlist: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;\n  - statement: 1 matches\n    - EXPR: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;\n      - value: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;\n        - quote: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;\n          - quibble: \u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;\n            - babble:\n              - B:\n            - nibble: \u0026#34;hello world\u0026#34;\n          - quote_mod: ww\n            - sym: ww\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e那么\u0026hellip; 好吧, 除了引号不同, 解析数完全一样。所以它看起来好像所有涉及的 tokens 都是相同的, 但是那些 tokens 所做的事情不同。\u003c/p\u003e\n\u003cp\u003e我们不必检查输出中我们看到的每个 tokens。\u003ccode\u003estatementlist\u003c/code\u003e 和 \u003ccode\u003estatement\u003c/code\u003e 是匹配普通语句的 tokens, \u003ccode\u003eEXPR\u003c/code\u003e 是占位符解析器, \u003ccode\u003evalue\u003c/code\u003e 是它正操作的值中的一个。我们会忽略上面那些, 留给我们的是下面这样一个可疑的列表:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e- quote: qww\u0026lt;„hello world”\u0026gt;\n  - quibble: \u0026lt;„hello world”\u0026gt;\n    - babble:\n      - B:\n    - nibble: „hello world”\n  - quote_mod: ww\n    - sym: ww\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e让我们开始质问它们。\u003c/p\u003e\n\u003ch2 id=\"到兔子洞里去\"\u003e到兔子洞里去\u0026hellip;\u003c/h2\u003e\n\u003cp\u003e你自己搞一份本地的 \u003ca href=\"https://github.com/rakudo/rakudo/\"\u003eRakudo 仓库\u003c/a\u003e, 如果你已经有了一份,那么打开 \u003ca href=\"https://github.com/rakudo/rakudo/blob/83b8b1a/src/Raku/Grammar.nqp\"\u003esrc/Raku/Grammar.nqp\u003c/a\u003e, 然后放松点。\u003c/p\u003e\n\u003cp\u003e我们会从树的顶部到底部跟随我们的 tokens, 所以我们首先需要找到的是 \u003ccode\u003etoken quote\u003c/code\u003e, \u003ccode\u003erule quote\u003c/code\u003e, \u003ccode\u003eregex quote\u003c/code\u003e 或 \u003ccode\u003emethod quote\u003c/code\u003e; 以那个顺序搜索, 因为第一项很可能就是正确的东西。\u003c/p\u003e\n\u003cp\u003e这种情况下, 它是一个 \u003ca href=\"https://github.com/rakudo/rakudo/blob/83b8b1a/src/Raku/Grammar.nqp#L3555\"\u003etoken quote\u003c/a\u003e, 它是一个 \u003ca href=\"https://docs.raku.org/language/grammars#Protoregexes\"\u003eproto regex\u003c/a\u003e。我们的代码使用了它的 \u003ccode\u003eq\u003c/code\u003e 版本并且你还可以认出靠近它的 \u003ccode\u003eqq\u003c/code\u003e 和 \u003ccode\u003eQ\u003c/code\u003e 版本:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equote_mod\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;quote_mod\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eqq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eqq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equote_mod\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;quote_mod\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eqq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eqq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003etoken quote\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eQ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003equote_mod\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;quote_mod\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可以看到 \u003ccode\u003eqq\u003c/code\u003e 和 \u003ccode\u003eQ\u003c/code\u003e 的主体看起来像 \u003ccode\u003eq\u003c/code\u003e, 我们也来看看它们是否有我们要找的那个 bug:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ezoffix@leliana:~$ raku -e \u0026#39;.say for qqww\u0026lt;„hello world”\u0026gt;\u0026#39;\n„hello\nworld”\nzoffix@leliana:~$ raku -e \u0026#39;.say for Qww\u0026lt;„hello world”\u0026gt;\u0026#39;\n„hello\nworld\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e是的, 它们也存在, 所以 \u003ccode\u003etoken quote\u003c/code\u003e 不可能是那个问题。我们来分解下 \u003ccode\u003etoken quote:sym\u0026lt;q\u0026gt;\u003c/code\u003e 是做什么的, 来算出怎么进行到下一步; 它的备选之一没有被用在我们当前的代码中, 所以我会省略它:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equote_mod\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;quote_mod\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e# (this branch omited)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在第二行中, 我们创建了一个变量, 然后匹配字面值 \u003ccode\u003eq\u003c/code\u003e 然后是 \u003ccode\u003equote_mod\u003c/code\u003e token。那个是我们的 \u003ccode\u003e--target=parse\u003c/code\u003e 输出中的一部分并且如果你像我们找出 \u003ccode\u003equote\u003c/code\u003e token 那样找出它, 你会注意到它是一个 proto regex, 即, 在那种情况下, 匹配我们代码的 \u003ccode\u003eww\u003c/code\u003e 块。后面跟着的空 \u003ccode\u003e{}\u003c/code\u003e 块我们可以忽略(那是一个 bug 的替代方法可能在你读到这儿时已经被修复了)。目前为止, 我们已经匹配了我们代码的 \u003ccode\u003eqww\u003c/code\u003e 块。\u003c/p\u003e\n\u003cp\u003e再往前走, 我们遇见了对 \u003ccode\u003eqok\u003c/code\u003e token 的调用, 当前的 \u003ca href=\"https://docs.raku.org/type/Match\"\u003eMatch\u003c/a\u003e 对象作为其参数。\u003ccode\u003e\u0026lt;.qok\u0026gt;\u003c/code\u003e 中的点号表明这是一个非捕获 token 匹配, 这就是它为什么它没有在我们的 \u003ccode\u003e--target=parse\u003c/code\u003e 输出中出现的原因。我们定位到那个 token 并看看它是关于什么的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e»\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"vg\"\u003e$*W\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eis_name\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"vg\"\u003e$*W\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eis_name\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026amp;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epanic\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e# not allowed as delimiter\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"ow\"\u003ews\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我的天呐! 这么多符号, 但是这个家伙很容易了: \u003ccode\u003e»\u003c/code\u003e 是一个\u003ca href=\"https://docs.raku.org/language/regexes#%3C%3C_and_%3E%3E_,_left_and_right_word_boundary\"\u003e右单词边界\u003c/a\u003e后面不能跟着一个开圆括号(\u003ccode\u003e\u0026lt;![(]\u0026gt;\u003c/code\u003e), 再跟着一个备选分支(\u003ccode\u003e[]\u003c/code\u003e), 再跟着一个检查, 即我们不想尝试使用 \u003ccode\u003e#\u003c/code\u003e 号作为分割符(\u003ccode\u003e[...]?\u003c/code\u003e), 最后跟着一个 \u003ca href=\"https://docs.raku.org/language/grammars#ws\"\u003e\u0026lt;.ws\u0026gt;\u003c/a\u003e token 吞噬各种各样的空白。\u003c/p\u003e\n\u003cp\u003e在备选分支中, 我们使用了首个token匹配的 \u003ccode\u003e||\u003c/code\u003e 备选分支(和最长token匹配 \u003ccode\u003e|\u003c/code\u003e 相反), 并且首个 token 向前查看一个冒号 \u003ccode\u003e\u0026lt;?[:]\u0026gt;\u003c/code\u003e。 如果失败了, 我们就字符串化那个给定的参数(\u003ccode\u003e~$x\u003c/code\u003e)并且之后在 \u003ca href=\"https://github.com/rakudo/rakudo/blob/83b8b1a/src/Raku/World.nqp\"\u003eWorld对象\u003c/a\u003e 身上调用 \u003ccode\u003eis_name\u003c/code\u003e 方法, 原样地传递带有前置 \u003ccode\u003e\u0026amp;\u003c/code\u003e 符号的字符串化的参数。传递的 \u003ccode\u003e~$x\u003c/code\u003e 是目前为止我们的 \u003ccode\u003etoken quote:sym\u0026lt;q\u0026gt;\u003c/code\u003e token 所匹配到的东西(并且那是字符串 \u003ccode\u003eqww\u003c/code\u003e)。\u003ccode\u003eis_name\u003c/code\u003e 方法仅仅检查那个给定的符号是否被定义还有根据那个返回值检查我们的 token 匹配会通过还是会失败。如果那个求值代码返回一个真值那么我们正在使用的  \u003ccode\u003e\u0026lt;!{ ... }\u0026gt;\u003c/code\u003e 结构就会失败。\u003c/p\u003e\n\u003cp\u003e总而言之, 这个 token 所做的所有事情就是检查我们没有使用 \u003ccode\u003e#\u003c/code\u003e 作为分隔符并且没有尝试去调用一个方法或sub。房间的这个角落没有 bug 迹象。 让我们回到我们的 \u003ccode\u003etoken quote:sym\u0026lt;q\u0026gt;\u003c/code\u003e 来查看下一步做什么:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equote_mod\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{}\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eqok\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;quote_mod\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"c1\"\u003e# (this branch omited)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们已经完成了 \u003ccode\u003e\u0026lt;.qok\u0026gt;\u003c/code\u003e 的检查, 所以下一步是 \u003ccode\u003e{ $qm := $\u0026lt;quote_mod\u0026gt;.Str }\u003c/code\u003e, 那仅仅把匹配到 \u003ccode\u003equote_mod\u003c/code\u003e token 的字符串值存到 \u003ccode\u003e$qm\u003c/code\u003e 变量中。在我们的例子中, 那个值就是字符串 \u003ccode\u003eww\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e下面跟着的是另外一个 token, 它在我们的 \u003ccode\u003e--target=parse\u003c/code\u003e s输出中出现过:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e%*LANG\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eQuote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$qm\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里, 我们使用三个位置参数引用了那个 token: \u003ca href=\"https://github.com/rakudo/rakudo/blob/04af57c3b3d32353e36614de53396d2b4a08b7be/src/Raku/Grammar.nqp#L424\"\u003eQuote language braid\u003c/a\u003e, 字符串 \u003ccode\u003eq\u003c/code\u003e 和 我们保存在变量 \u003ccode\u003e$qm\u003c/code\u003e 中的字符串 \u003ccode\u003eww\u003c/code\u003e。我想知道它是做什么的。那是我们的下一站。全力以赴!\u003c/p\u003e\n\u003ch2 id=\"nibble-quibble-babbling-nibbler\"\u003eNibble Quibble Babbling Nibbler\u003c/h2\u003e\n\u003cp\u003e这里是完整的 \u003ccode\u003etoken quibble\u003c/code\u003e 并且你马上可以发现我们不得不从开始往更深处挖掘, 因为第 5 行是另外一个 token 匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003equibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$l\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@base_tweaks\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ebabble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$l\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@base_tweaks\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e  \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;babble\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e  \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e  \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$B\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enibble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCURSOR\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etyped_panic\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eX::Comp::AdHoc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s\"\u003epayload\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eCouldn\u0026#39;t find terminator \u003c/span\u003e\u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"s2\"\u003e (corresponding \u003c/span\u003e\u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"s2\"\u003e was at line \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"n\"\u003eHLL::Compiler\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003elineof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"nv\"\u003e$\u0026lt;babble\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eorig\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;babble\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s\"\u003eexpected\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"o\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nf\"\u003enqp::can\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eherelang\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003equeue_heredoc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"vg\"\u003e$*W\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enibble_to_str\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nv\"\u003e$\u0026lt;nibble\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e],\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eStopper \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;nibble\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; too complex for heredoc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eherelang\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们定义了 3 个变量然后引用了 \u003ccode\u003ebabble\u003c/code\u003e token, 这个 babble 引用了和 \u003ccode\u003equibble\u003c/code\u003e token 所引用的同样的参数。我们来以和查找所有之前的 tokens 同样的方式查找它并窥探它的内核。为了简洁, 我移除了大约一半\u003ca href=\"https://github.com/rakudo/rakudo/blob/bc35922/src/Raku/Grammar.nqp#L111-L125\"\u003e代码\u003c/a\u003e:那部分是处理副词的, 目前我们不能在我们的代码中使用它。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ebabble\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$l\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@base_tweaks\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"kd\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@extra_tweaks\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"c1\"\u003e# \u0026lt;irrelevant portion redacted\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;B\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Work out the delimeters.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eCURSOR\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@delims\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epeek_delimiters\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etarget\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@delims\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e  \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@delims\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Get the language.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003equote_lang\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$l\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@base_tweaks\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@extra_tweaks\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$\u0026lt;B\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e!make\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;(\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们通过把向前查看捕获到 \u003ccode\u003e$\u0026lt;B\u0026gt;\u003c/code\u003e 捕获中开始, 它用作更新当前的 Cursor 位置, 然后进入以执行那个代码块。我们把当前的 Cursor 存储在 \u003ccode\u003e$c\u003c/code\u003e 中, 然后在它身上调用 \u003ccode\u003e.peek_delimiters\u003c/code\u003e 方法。如果我们为了它在内置的 rakudo 目录中进行 \u003ccode\u003egrep\u003c/code\u003e, 我们会看到它被定义在 \u003ca href=\"https://github.com/raku/nqp/blob/4fd4b48afb45c8b25ccf7cfc5e39cb4bd658901d/src/HLL/Grammar.nqp#L200\"\u003eNQP\u003c/a\u003e中, 在 \u003ca href=\"https://github.com/raku/nqp/blob/4fd4b48afb45c8b25ccf7cfc5e39cb4bd658901d/src/HLL/Grammar.nqp#L200\"\u003enqp/src/HLL/Grammar.nqp\u003c/a\u003e中, 但是在我们冲出去阅读它的代码之前, 注意它是怎样返回两个分隔符的。我们仅仅把它们打印出来好了?\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esrc/Raku/Grammar.nqp\u003c/code\u003e 的 \u003ccode\u003e.nqp\u003c/code\u003e 后缀名表明我们正处在 NQP 的地盘儿, 所以我们不要使用 \u003ca href=\"https://github.com/raku/nqp/blob/master/docs/ops.markdown\"\u003eNQP ops\u003c/a\u003e仅仅并且不是完全的 Raku 代码。通过把下面这一行代码添加到 \u003ccode\u003e@delim\u003c/code\u003e 被赋值给 \u003ccode\u003e$start\u003c/code\u003e 和 \u003ccode\u003e$stop\u003c/code\u003e 的地方, 我们能找出 \u003ccode\u003e.peek_delimiters\u003c/code\u003e 给我们的东西:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003enqp::say\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$sart\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e编译!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ perl Configure.pl --gen-moar --gen-nqp --backends\u003cspan class=\"o\"\u003e=\u003c/span\u003emoar \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  make \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  make \u003cspan class=\"nb\"\u003etest\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  make install\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e即使在编译期间, 通过吐出额外的东西, 我们的调试行已经给了我们所有那些分隔符是关于什么的启发。再次运行我们的有问题的代码:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ./raku -e \u003cspan class=\"s1\"\u003e\u0026#39;.say for qww\u0026lt;„hello world”\u0026gt;;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u0026lt; \u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehello world\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印出的分隔符是 \u003ccode\u003eqww\u003c/code\u003e 里的尖括号分隔符。我们对那些不感兴趣, 所以我们可以忽略 \u003ccode\u003e.peek_delimiters\u003c/code\u003e 并继续。再往上是 \u003ccode\u003e.quote_lang\u003c/code\u003e 方法。 它的名字里有一个\u0026quot;引号\u0026quot;而我们有一个关于引号的问题.. 听起来我们离真相越来越近了。我们来看看我们正传递给它的是什么参数:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e$1\u003c/code\u003e — \u003ca href=\"https://github.com/rakudo/rakudo/blob/04af57c3b3d32353e36614de53396d2b4a08b7be/src/Raku/Grammar.nqp#L4752\"\u003eQuote language braid\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e$start\u003c/code\u003e / \u003ccode\u003e$stop\u003c/code\u003e — 尖括号分隔符\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@base_tweaks\u003c/code\u003e — 包含一个元素: 字符串 \u003ccode\u003eww\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e@extra_tweaks\u003c/code\u003e — 额外的副词, 这里我们没有, 所以这个数组是空的\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e定位到 \u003ccode\u003emethod quote_lang\u003c/code\u003e; 它仍然在 \u003ca href=\"https://github.com/rakudo/rakudo/blob/04af57c3b3d32353e36614de53396d2b4a08b7be/src/Raku/Grammar.nqp#L65\"\u003esrc/Raku/Grammar.nqp\u003c/a\u003e文件中:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003equote_lang\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$l\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@base_tweaks\u003c/span\u003e\u003cspan class=\"o\"\u003e?,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@extra_tweaks\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003elang_key\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# \u0026lt;body redacted\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003econ_lang\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# \u0026lt;body redacted\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Get language from cache or derive it.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003elang_key\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nf\"\u003enqp::existskey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e%quote_lang_cache\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e \u003cspan class=\"ow\"\u003ene\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eNOCACHE\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nv\"\u003e%quote_lang_cache\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e%quote_lang_cache\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003econ_lang\u003c/span\u003e\u003cspan class=\"p\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们有两个词法子例程 \u003ccode\u003elang_key\u003c/code\u003e 和 \u003ccode\u003econ_lang\u003c/code\u003e, 在它们下面我们把 \u003ccode\u003elang_key\u003c/code\u003e 的输出存储到 \u003ccode\u003e$key\u003c/code\u003e 中, 在 \u003ccode\u003e%quote_lang_cache\u003c/code\u003e 中这个 \u003ccode\u003e$key\u003c/code\u003e 被用在整个缓存 dance 中, 所以我们可以忽略掉 \u003ccode\u003elang_key\u003c/code\u003e sub 并直接进入 \u003ccode\u003econ_lang\u003c/code\u003e, 它被调用以生成我们的 \u003ccode\u003equote_lang\u003c/code\u003e 方法的返回值:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003econ_lang\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$l\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e!cursor_init\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eorig\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eshared\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e!shared\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;()));\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@base_tweaks\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003etweak_\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@extra_tweaks\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$t\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nf\"\u003enqp::can\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003etweak_\u003c/span\u003e\u003cspan class=\"nv\"\u003e$t\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003etweak_\u003c/span\u003e\u003cspan class=\"nv\"\u003e$t\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003esorry\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eUnrecognized adverb: :\u003c/span\u003e\u003cspan class=\"nv\"\u003e$t\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nf\"\u003enqp::istype\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"n\"\u003eVMArray\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$start\u003c/span\u003e \u003cspan class=\"ow\"\u003ene\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebalanced\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$start\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"nv\"\u003e$lang\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eunbalanced\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$stop\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在初始化 Cursor 位置之后, \u003ccode\u003e$lang\u003c/code\u003e 继续包含我们的 Quote 语言编织然后我们落进一个 \u003ccode\u003efor\u003c/code\u003e 循环来迭代 \u003ccode\u003e@base_tweaks\u003c/code\u003e, 对于里面的每一个元素, 我们都调用方法 \u003ccode\u003etweak_$_\u003c/code\u003e, 给它传递一个真值 \u003ccode\u003e1\u003c/code\u003e。因为我们仅仅只有一个 base tweak, 这意味着我们正在Quote braid上调用方法 \u003ccode\u003etweak_ww\u003c/code\u003e。我们来看看那个方法是关于什么的。\u003c/p\u003e\n\u003cp\u003e因为 Quote braid 被定义在同一个文件中, 仅仅搜索 \u003ccode\u003emethod tweak_ww\u003c/code\u003e 好了:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003etweak_ww\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$v\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$v\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-postproc\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003equotewords\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eapply_tweak\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eww\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e很好。我们给它的 \u003ccode\u003e$v\u003c/code\u003e 为真, 所以我们调用了 \u003ccode\u003e.add-postproc\u003c/code\u003e 然后调用 \u003ccode\u003e.apply_tweak(ww)\u003c/code\u003e。看一下那个方法的上面和下面, 我们看到 \u003ccode\u003e.add-postproc\u003c/code\u003e 也用在其它不含 bug 的引号中, 所以我们忽略它并直接跳到 \u003ccode\u003e.apply_tweak\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eapply_tweak\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$role\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$target\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nf\"\u003enqp::can\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eherelang\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eherelang\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$target\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eHOW\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emixin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$target\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$role\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e啊哈! 它的参数是一个 role 并且它把该 role 混进来我们的 Quote braid 中。我们来看看那个 role 是关于什么的(再一次, 仅仅在文件中搜索 \u003ca href=\"https://github.com/rakudo/rakudo/blob/94b09ab9280d39438f84cb467d4b3d3042b8f672/src/Raku/Grammar.nqp#L4846\"\u003erole ww\u003c/a\u003e, 或者仅仅向上滚动一点):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003eww\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003equote\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e‘ ’\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e‘\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003equote\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003equote\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e“ ”\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e“\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003equote\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ecolonpair\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nf\"\u003eRESTRICTED\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ecolonpair\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecolonpair\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecomment\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e奥, 我的天呐!引号! 如果这个地方不是我们修复 bug 的地方, 那么我就是一个芭蕾舞女演员。 我们找到它了!\u003c/p\u003e\n\u003cp\u003e我们定位到的 role 把进了某些 tokens 混合进了我们正使用的 Quote braid 中来解析 \u003ccode\u003eqww\u003c/code\u003e 的内容。我们带有 bug 的 \u003ccode\u003e„”\u003c/code\u003e 引号组合明显不在那个列表中。我们来把它添加进去!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e„ ”\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e„\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003equote\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e编译! 运行我们带有 bug 的代码:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ./raku -e \u003cspan class=\"s1\"\u003e\u0026#39;.say for qww\u0026lt;foo „hello world” bar\u0026gt;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efoo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebar\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e悲催! 好吧, 我们确实为引号处理找到了正确的地方, 但是我们让问题变得更加糟糕了。发生了什么?\u003c/p\u003e\n\u003ch2 id=\"quotastic-inaction\"\u003eQuotastic Inaction\u003c/h2\u003e\n\u003cp\u003e我们新的 token 肯定解析了那个引号, 但是我们绝对没有给它添加 Actions 动作\u0026hellip; 好吧, 对它起作用。Action 类和 Grammars 相邻, 在 \u003ccode\u003esrc/Raku/Actions.nqp\u003c/code\u003e 中。打开它并定位到匹配的方法那里; 比如 \u003ca href=\"https://github.com/rakudo/rakudo/blob/94b09ab9280d39438f84cb467d4b3d3042b8f672/src/Raku/Actions.nqp#L9243\"\u003emethod escape:sym\u0026lt;“ ”\u0026gt;\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nf\"\u003emark_ww_atom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;quote\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nf\"\u003emark_ww_atom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;quote\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e‘ ’\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nf\"\u003emark_ww_atom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;quote\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e“ ”\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nf\"\u003emark_ww_atom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;quote\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e并在列表中添加我们自己的版本:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e„ ”\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nf\"\u003emark_ww_atom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;quote\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e编译! 运行我们带有 bug 的代码:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ./raku -e \u003cspan class=\"s1\"\u003e\u0026#39;.say for qww\u0026lt;foo „hello world” bar\u0026gt;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003efoo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehello world\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ebar\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e呼! 成功了! 不再有 bug 了。我们修复了那个 bug!\u003c/p\u003e\n\u003cp\u003e但是, 等一下\u0026hellip;\u003c/p\u003e\n\u003ch2 id=\"遗漏了-但是没有忘记\"\u003e遗漏了, 但是没有忘记\u003c/h2\u003e\n\u003cp\u003e看一下\u003ca href=\"https://docs.raku.org/language/unicode_texas#Other_acceptable_single_codepoints\"\u003e所有可能的奢华的引号的列表\u003c/a\u003e。尽管我们的 bug 报告中仅仅提到了 \u003ccode\u003e„”\u003c/code\u003e 引号对儿, 但是 \u003ccode\u003e‚‘\u003c/code\u003e 和 \u003ccode\u003e「」\u003c/code\u003e 都不在我们的 \u003ccode\u003erole ww\u003c/code\u003e tokens 中。远远不止的是, 某些左/右引号, 当它们交换位置后, 在引起字符串的时候也刚好能工作, 所以它们也应该在 \u003ccode\u003eqww\u003c/code\u003e 中起效。然而, 添加一整串额外的 tokens 和一整串其它的 actions 方法是相当不精彩的。有没有更好的方法?\u003c/p\u003e\n\u003cp\u003e我们仔细看看我们的 tokens:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e“ ”\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e“\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003equote\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003esym\u0026lt;“ ”\u0026gt;\u003c/code\u003e 我们可以把它省略了 — 这里它的功能仅仅是作为一个名字。我们留下的是一个向前查看的 \u003ccode\u003e“\u003c/code\u003e 引号还有 \u003ccode\u003e\u0026lt;quote=.LANG('MAIN','quote')\u0026gt;\u003c/code\u003e。所以我们可以向前查看所有的我们关心的开口引号并让 MAIN braid 接管所有的细节。\u003c/p\u003e\n\u003cp\u003e所以, 让我们用这个单个 token 替换掉所有的引号处理 tokens:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u0026#39; \u0026#34; ‘ ‚ ’ “ „ ” 「 \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003equote\u003c/span\u003e\u003cspan class=\"o\"\u003e=.\u003c/span\u003e\u003cspan class=\"nf\"\u003eLANG\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003equote\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e并且使用下面这个单个 action 替换掉所有的匹配 actions 方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eescape\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003esym\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nf\"\u003emark_ww_atom\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;quote\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e编译! 运行我们的带有某些引号变体的代码:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ./raku -e \u003cspan class=\"s1\"\u003e\u0026#39;.say for qww\u0026lt;„looks like” ‚we fixed‘ ｢this thing｣\u0026gt;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003elooks like\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ewe fixed\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ethis thing\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e精彩! 我们不仅让所有的引号都能正常工作, 还设法清理的存在的 tokens 和 actions 方法。现在所有我们需要做的就是对我们的修复做测试并且我们已经准备提交了。\u003c/p\u003e\n\u003ch2 id=\"享用-bug-烤肉\"\u003e享用 bug 烤肉\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/raku/roast\"\u003eRaku 官方测试套件 Roast\u003c/a\u003e 是在 Rakudo 内建目录中的 \u003ccode\u003et/spec\u003c/code\u003e 中，如果它不存在, 仅仅运行 \u003ccode\u003emake spectest\u003c/code\u003e 就好了并且在它把 roast 仓库克隆到 \u003ccode\u003et/spec\u003c/code\u003e 中后就中止它。我们需要找到在哪里插入我们的测试而 \u003ccode\u003egrep\u003c/code\u003e 是干那件事的好朋友:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ezoffix@VirtualBox:~/CPANPRC/rakudo/t/spec$ grep -R \u0026#39;qww\u0026#39; .\nBinary file ./.git/objects/pack/pack-5bdee39f28283fef4b500859f5b288ea4eec20d7.pack matches\n./S02-literals/allomorphic.t:    my @wordlist = qqww[1 2/3 4.5 6e7 8+9i] Z (IntStr, RatStr, RatStr, NumStr, ComplexStr);\n./S02-literals/allomorphic.t:        isa-ok $val, Str, \u0026#34;\u0026#39;$val\u0026#39; from qqww[] is a Str\u0026#34;;\n./S02-literals/allomorphic.t:        nok $val.isa($wrong-type), \u0026#34;\u0026#39;$val\u0026#39; from qqww[] is not a $wrong-type.perl()\u0026#34;;\n./S02-literals/allomorphic.t:    my @wordlist  = qqww:v[1 2/3 4.5 6e7 8+9i];\n./S02-literals/allomorphic.t:    my @written = qqww:v[1 2/3 $num 6e7 8+9i ten];\n./S02-literals/allomorphic.t:    is-deeply @angled, @written, \u0026#34;«...» is equivalent to qqww:v[...]\u0026#34;;\n./S02-literals/quoting.t:    is(qqww[$alpha $beta], \u0026lt;foo bar\u0026gt;, \u0026#39;qqww\u0026#39;);\n./S02-literals/quoting.t:    for (\u0026lt;\u0026lt;$a b c\u0026gt;\u0026gt;, qqww{$a b c}, qqw{$a b c}).kv -\u0026gt; $i, $_ {\n./S02-literals/quoting.t:    is-deeply qww\u0026lt;a a ‘b b’ ‚b b’ ’b b‘ ’b b‘ ’b b’ ‚b b‘ ‚b b’ “b b” „b b”\n./S02-literals/quoting.t:    \u0026#39;fancy quotes in qww work just like regular quotes\u0026#39;;\n./integration/advent2014-day16.t:    for flat qww/ foo bar \u0026#39;first second\u0026#39; / Z @a -\u0026gt; $string, $result {\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e看起来 \u003ccode\u003eS02-literals/quoting.t\u003c/code\u003e 是它的一个好地方。打开那个文件, 在它的顶部, 通过我们添加的测试的数量来增加 \u003ccode\u003eplan\u003c/code\u003e 的数量 — 在这个例子中仅仅增加一条就好了。然后滚动到底部并创建一个 block 块, 前面添加一个注释, 并为我们正修复的 \u003ca href=\"https://rt.perl.org/Ticket/Display.html?id=128304\"\u003ebug 报告\u003c/a\u003e引用那个 RT 标签数字。\u003c/p\u003e\n\u003cp\u003e在文件里面, 我们使用 \u003ca href=\"https://docs.raku.org/language/testing#index-entry-is-deeply-is-deeply%28%24value%2C_%24expected%2C_%24description%3F%29\"\u003eis-deeply\u003c/a\u003e 测试函数, 它使用 \u003ca href=\"https://docs.raku.org/routine/eqv\"\u003eeqv 操作符\u003c/a\u003e语义来做测试。我们会给它一个带有完整引号串的 \u003ccode\u003eqww\u0026lt;\u0026gt;\u003c/code\u003e 行并告诉它我们所期望返回的项目列表。还要写下测试描述:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# RT #128304\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eis-deeply\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003eww\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea a ‘b b’ ‚b b’ ’b b‘ ’b b‘ ’b b’ ‚b b‘ ‚b b’ “b b” „b b”\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e            ”b b“ ”b b“ ”b b” „b b“ „b b” ｢b b｣ ｢b b｣\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb b\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"mi\"\u003e16\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efancy quotes in qww work just like regular quotes\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回到 Rakudo checkout, 运行修改后的测试并保证它通过:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ make t/spec/S02-literals/quoting.t\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# \u0026lt;lots of output\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eAll tests successful.\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eFiles\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e1, \u003cspan class=\"nv\"\u003eTests\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e185,  \u003cspan class=\"m\"\u003e3\u003c/span\u003e wallclock secs \u003cspan class=\"o\"\u003e(\u003c/span\u003e 0.03 usr  0.01 sys +  2.76 cusr  0.11 \u003cspan class=\"nv\"\u003ecsys\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  2.91 CPU\u003cspan class=\"o\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eResult: PASS\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e漂亮。提交测试 bug 修复好了并且把它们送走! 我们做到了!\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e结论\u003c/h2\u003e\n\u003cp\u003e当我们在修复 Raku 中的解析 bugs 的时候, 把程序减少到能重新产生那个 bug 的最小部分然后使用 \u003ccode\u003e--target=parse\u003c/code\u003e 命令行参数, 得到解析树的输出, 找到所匹配的那个 tokens。\u003ccode\u003estatementlist\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e然后, 在 \u003ca href=\"https://github.com/rakudo/rakudo/blob/04af57c3b3d32353e36614de53396d2b4a08b7be/src/Raku/Grammar.nqp\"\u003esrc/Raku/Grammar.nqp\u003c/a\u003e 中跟随这些 tokens, 它也继承自 \u003ca href=\"https://github.com/raku/nqp/blob/4fd4b48afb45c8b25ccf7cfc5e39cb4bd658901d/src/HLL/Grammar.nqp\"\u003eNQP 的 src/HLL/Grammar.nqp\u003c/a\u003e 。 与位于 \u003ca href=\"https://github.com/rakudo/rakudo/blob/04af57c3b3d32353e36614de53396d2b4a08b7be/src/Raku/Actions.nqp\"\u003esrc/Raku/Actions.nqp\u003c/a\u003e 中的 actions 类协作, 跟随着代码找出正在做什么并期望找出问题出现在什么位置。\u003c/p\u003e\n\u003cp\u003e修复它。测试它。发布它。\u003c/p\u003e\n\u003cp\u003e充满了乐趣。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://raku.party/post/Perl-6-Core-Hacking-Grammatical-Babble\"\u003ehttp://raku.party/post/Perl-6-Core-Hacking-Grammatical-Babble\u003c/a\u003e\u003c/p\u003e\n","text":"喜欢修复 Raku 编译器中的 bug? 这儿有一个great grammar bugglet: 当 „” 引号用在引起的用空白分割的单词列表构造器中时看起来好像不能工作:\nsay „hello world”; .say for qww\u0026lt;„hello world”\u0026gt;; .say for qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;; # OUTPUT: # hello world # „hello # world” # hello world ” 引号不应该出现在输出中并且在输出中我们应该只有 3 行输出; 这 3 行输出都是 hello world。看起来像是一个待修复的有趣的 bug! 我们进去看看。\n你怎样拼写它? 事实上这段代码没能正确解析表明这是一个 grammar bug。大部分的 grammar 住在 src/Raku/Grammar.nqp中, 但是在我们的手变脏之前, 让我们来解决我们应该查看什么。\n二进制 raku 有一个 --target 命令行参数来接收其中之一的编译步骤并且会导致那个步骤的输出被产生出来。那儿有哪些步骤? 根据你正使用的后端它们也会有所不同, 但是你可以仅仅运行 raku --stagestats -e '' 把它们都打印出来:\nzoffix@leliana:~$ raku --stagestats -e \u0026#39;\u0026#39; Stage start : 0.000 Stage parse : 0.077 Stage syntaxcheck: 0.000 Stage ast : 0.000 Stage optimize : 0.001 Stage mast : 0.004 Stage mbc : 0.000 Stage moar : 0.000 Grammars 是关于解析的, 所以我们会查询 parse 目标(target)。至于要执行的代码, 我们会仅仅给它有问题的那块; 即 qww\u0026lt;\u0026gt;:\nzoffix@leliana:~$ raku --target=parse -e \u0026#39;qww\u0026lt;„hello world”\u0026gt;\u0026#39; - statementlist: qww\u0026lt;„hello world”\u0026gt; - statement: 1 matches - EXPR: qww\u0026lt;„hello world”\u0026gt; - value: qww\u0026lt;„hello world”\u0026gt; - quote: qww\u0026lt;„hello world”\u0026gt; - quibble: \u0026lt;„hello world”\u0026gt; - babble: - B: - nibble: „hello world” - quote_mod: ww - sym: ww 那很棒! 每一行前面都有能在 grammar 中找到的 token 的名字, 所以现在我们知道了在哪里查找问题。\n我们还知道基本的引号能正确地工作, 所以我们也倾倒出它们的解析步骤, 来看看这两个输出之间是否有什么不同:\nzoffix@leliana:~$ raku --target=parse -e \u0026#39;qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt;\u0026#39; - statementlist: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt; - statement: 1 matches - EXPR: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt; - value: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt; - quote: qww\u0026lt;\u0026#34;hello world\u0026#34;\u0026gt; - quibble: \u0026lt;\u0026#34;hello world\u0026#34;\u0026gt; - babble: - B: - nibble: \u0026#34;hello world\u0026#34; - quote_mod: ww - sym: ww 那么\u0026hellip; 好吧, 除了引号不同, 解析数完全一样。所以它看起来好像所有涉及的 tokens 都是相同的, 但是那些 tokens 所做的事情不同。\n我们不必检查输出中我们看到的每个 tokens。statementlist 和 statement 是匹配普通语句的 tokens, EXPR 是占位符解析器, value 是它正操作的值中的一个。我们会忽略上面那些, 留给我们的是下面这样一个可疑的列表:\n- quote: qww\u0026lt;„hello world”\u0026gt; - quibble: \u0026lt;„hello world”\u0026gt; - babble: - B: - nibble: „hello world” - quote_mod: ww - sym: ww 让我们开始质问它们。\n到兔子洞里去\u0026hellip; 你自己搞一份本地的 Rakudo 仓库, 如果你已经有了一份,那么打开 src/Raku/Grammar.nqp, 然后放松点。\n我们会从树的顶部到底部跟随我们的 tokens, 所以我们首先需要找到的是 token quote, rule quote, regex quote 或 method quote; 以那个顺序搜索, 因为第一项很可能就是正确的东西。\n这种情况下, 它是一个 token quote, 它是一个 proto regex。我们的代码使用了它的 q 版本并且你还可以认出靠近它的 qq 和 Q 版本:\ntoken quote:sym\u0026lt;q\u0026gt; { :my $qm; \u0026#39;q\u0026#39; [ | \u0026lt;quote_mod\u0026gt; {} \u0026lt;.qok($/)\u0026gt; { $qm := $\u0026lt;quote_mod\u0026gt;.Str } \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, \u0026#39;q\u0026#39;, $qm)\u0026gt; | {} \u0026lt;.qok($/)\u0026gt; \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, \u0026#39;q\u0026#39;)\u0026gt; ] } token quote:sym\u0026lt;qq\u0026gt; { :my $qm; \u0026#39;qq\u0026#39; [ | \u0026lt;quote_mod\u0026gt; { $qm := $\u0026lt;quote_mod\u0026gt;.Str } \u0026lt;.qok($/)\u0026gt; \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, \u0026#39;qq\u0026#39;, $qm)\u0026gt; | {} \u0026lt;.qok($/)\u0026gt; \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, \u0026#39;qq\u0026#39;)\u0026gt; ] } token quote:sym\u0026lt;Q\u0026gt; { :my $qm; \u0026#39;Q\u0026#39; [ | \u0026lt;quote_mod\u0026gt; { $qm := $\u0026lt;quote_mod\u0026gt;.Str } \u0026lt;.qok($/)\u0026gt; \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, $qm)\u0026gt; | {} \u0026lt;.qok($/)\u0026gt; \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;)\u0026gt; ] } 可以看到 qq 和 Q 的主体看起来像 q, 我们也来看看它们是否有我们要找的那个 bug:\nzoffix@leliana:~$ raku -e \u0026#39;.say for qqww\u0026lt;„hello world”\u0026gt;\u0026#39; „hello world” zoffix@leliana:~$ raku -e \u0026#39;.say for Qww\u0026lt;„hello world”\u0026gt;\u0026#39; „hello world 是的, 它们也存在, 所以 token quote 不可能是那个问题。我们来分解下 token quote:sym\u0026lt;q\u0026gt; 是做什么的, 来算出怎么进行到下一步; 它的备选之一没有被用在我们当前的代码中, 所以我会省略它:\ntoken quote:sym\u0026lt;q\u0026gt; { :my $qm; \u0026#39;q\u0026#39; [ | \u0026lt;quote_mod\u0026gt; {} \u0026lt;.qok($/)\u0026gt; { $qm := $\u0026lt;quote_mod\u0026gt;.Str } \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, \u0026#39;q\u0026#39;, $qm)\u0026gt; | # (this branch omited) ] } 在第二行中, 我们创建了一个变量, 然后匹配字面值 q 然后是 quote_mod token。那个是我们的 --target=parse 输出中的一部分并且如果你像我们找出 quote token 那样找出它, 你会注意到它是一个 proto regex, 即, 在那种情况下, 匹配我们代码的 ww 块。后面跟着的空 {} 块我们可以忽略(那是一个 bug 的替代方法可能在你读到这儿时已经被修复了)。目前为止, 我们已经匹配了我们代码的 qww 块。\n再往前走, 我们遇见了对 qok token 的调用, 当前的 Match 对象作为其参数。\u0026lt;.qok\u0026gt; 中的点号表明这是一个非捕获 token 匹配, 这就是它为什么它没有在我们的 --target=parse 输出中出现的原因。我们定位到那个 token 并看看它是关于什么的:\ntoken qok($x) { » \u0026lt;![(]\u0026gt; [ \u0026lt;?[:]\u0026gt; || \u0026lt;!{ my $n := ~$x; $*W.is_name([$n]) || $*W.is_name([\u0026#39;\u0026amp;\u0026#39; ~ $n]) }\u0026gt; ] [ \\s* \u0026#39;#\u0026#39; \u0026lt;.panic: \u0026#34;# not allowed as delimiter\u0026#34;\u0026gt; ]? \u0026lt;.ws\u0026gt; } 我的天呐! 这么多符号, 但是这个家伙很容易了: » 是一个右单词边界后面不能跟着一个开圆括号(\u0026lt;![(]\u0026gt;), 再跟着一个备选分支([]), 再跟着一个检查, 即我们不想尝试使用 # 号作为分割符([...]?), 最后跟着一个 \u0026lt;.ws\u0026gt; token 吞噬各种各样的空白。\n在备选分支中, 我们使用了首个token匹配的 || 备选分支(和最长token匹配 | 相反), 并且首个 token 向前查看一个冒号 \u0026lt;?[:]\u0026gt;。 如果失败了, 我们就字符串化那个给定的参数(~$x)并且之后在 World对象 身上调用 is_name 方法, 原样地传递带有前置 \u0026amp; 符号的字符串化的参数。传递的 ~$x 是目前为止我们的 token quote:sym\u0026lt;q\u0026gt; token 所匹配到的东西(并且那是字符串 qww)。is_name 方法仅仅检查那个给定的符号是否被定义还有根据那个返回值检查我们的 token 匹配会通过还是会失败。如果那个求值代码返回一个真值那么我们正在使用的 \u0026lt;!{ ... }\u0026gt; 结构就会失败。\n总而言之, 这个 token 所做的所有事情就是检查我们没有使用 # 作为分隔符并且没有尝试去调用一个方法或sub。房间的这个角落没有 bug 迹象。 让我们回到我们的 token quote:sym\u0026lt;q\u0026gt; 来查看下一步做什么:\ntoken quote:sym\u0026lt;q\u0026gt; { :my $qm; \u0026#39;q\u0026#39; [ | \u0026lt;quote_mod\u0026gt; {} \u0026lt;.qok($/)\u0026gt; { $qm := $\u0026lt;quote_mod\u0026gt;.Str } \u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, \u0026#39;q\u0026#39;, $qm)\u0026gt; | # (this branch omited) ] } 我们已经完成了 \u0026lt;.qok\u0026gt; 的检查, 所以下一步是 { $qm := $\u0026lt;quote_mod\u0026gt;.Str }, 那仅仅把匹配到 quote_mod token 的字符串值存到 $qm 变量中。在我们的例子中, 那个值就是字符串 ww。\n下面跟着的是另外一个 token, 它在我们的 --target=parse s输出中出现过:\n\u0026lt;quibble(%*LANG\u0026lt;Quote\u0026gt;, \u0026#39;q\u0026#39;, $qm)\u0026gt; 这里, 我们使用三个位置参数引用了那个 token: Quote language braid, 字符串 q 和 我们保存在变量 $qm 中的字符串 ww。我想知道它是做什么的。那是我们的下一站。全力以赴!\nNibble Quibble Babbling Nibbler 这里是完整的 token quibble 并且你马上可以发现我们不得不从开始往更深处挖掘, 因为第 5 行是另外一个 token 匹配:\ntoken quibble($l, *@base_tweaks) { :my $lang; :my $start; :my $stop; \u0026lt;babble($l, @base_tweaks)\u0026gt; { my $B := $\u0026lt;babble\u0026gt;\u0026lt;B\u0026gt;.ast; $lang := $B[0]; $start := $B[1]; $stop := $B[2]; } $start \u0026lt;nibble($lang)\u0026gt; [ $stop || { $/.CURSOR.typed_panic( \u0026#39;X::Comp::AdHoc\u0026#39;, payload =\u0026gt; \u0026#34;Couldn\u0026#39;t find terminator $stop (corresponding $start was at line { HLL::Compiler.lineof( $\u0026lt;babble\u0026gt;\u0026lt;B\u0026gt;.orig(), $\u0026lt;babble\u0026gt;\u0026lt;B\u0026gt;.from() ) })\u0026#34;, expected =\u0026gt; [$stop], ) } ] { nqp::can($lang, \u0026#39;herelang\u0026#39;) \u0026amp;\u0026amp; self.queue_heredoc( $*W.nibble_to_str( $/, $\u0026lt;nibble\u0026gt;.ast[1], -\u0026gt; { \u0026#34;Stopper \u0026#39;\u0026#34; ~ $\u0026lt;nibble\u0026gt; ~ \u0026#34;\u0026#39; too complex for heredoc\u0026#34; } ), $lang.herelang, ) } } 我们定义了 3 个变量然后引用了 babble token, 这个 babble 引用了和 quibble token 所引用的同样的参数。我们来以和查找所有之前的 tokens 同样的方式查找它并窥探它的内核。为了简洁, 我移除了大约一半代码:那部分是处理副词的, 目前我们不能在我们的代码中使用它。\ntoken babble($l, @base_tweaks?) { :my @extra_tweaks; # \u0026lt;irrelevant portion redacted\u0026gt; $\u0026lt;B\u0026gt;=[\u0026lt;?before .\u0026gt;] { # Work out the delimeters. my $c := $/.CURSOR; my @delims := $c.peek_delimiters($c.target, $c.pos); my $start := @delims[0]; my $stop := @delims[1]; # Get the language. my $lang := self.quote_lang($l, $start, $stop, @base_tweaks, @extra_tweaks); $\u0026lt;B\u0026gt;.\u0026#39;!make\u0026#39;([$lang, $start, $stop]); } } 我们通过把向前查看捕获到 $\u0026lt;B\u0026gt; 捕获中开始, 它用作更新当前的 Cursor 位置, 然后进入以执行那个代码块。我们把当前的 Cursor 存储在 $c 中, 然后在它身上调用 .peek_delimiters 方法。如果我们为了它在内置的 rakudo 目录中进行 grep, 我们会看到它被定义在 NQP中, 在 nqp/src/HLL/Grammar.nqp中, 但是在我们冲出去阅读它的代码之前, 注意它是怎样返回两个分隔符的。我们仅仅把它们打印出来好了?\nsrc/Raku/Grammar.nqp 的 .nqp 后缀名表明我们正处在 NQP 的地盘儿, 所以我们不要使用 NQP ops仅仅并且不是完全的 Raku 代码。通过把下面这一行代码添加到 @delim 被赋值给 $start 和 $stop 的地方, 我们能找出 .peek_delimiters 给我们的东西:\nnqp::say(\u0026#34;$sart $stop\u0026#34;); 编译!\n$ perl Configure.pl --gen-moar --gen-nqp --backends=moar \u0026amp;\u0026amp; make \u0026amp;\u0026amp; make test \u0026amp;\u0026amp; make install 即使在编译期间, 通过吐出额外的东西, 我们的调试行已经给了我们所有那些分隔符是关于什么的启发。再次运行我们的有问题的代码:\n$ ./raku -e \u0026#39;.say for qww\u0026lt;„hello world”\u0026gt;;\u0026#39; \u0026lt; \u0026gt; hello world 打印出的分隔符是 qww 里的尖括号分隔符。我们对那些不感兴趣, 所以我们可以忽略 .peek_delimiters 并继续。再往上是 .quote_lang 方法。 它的名字里有一个\u0026quot;引号\u0026quot;而我们有一个关于引号的问题.. 听起来我们离真相越来越近了。我们来看看我们正传递给它的是什么参数:\n$1 — Quote language braid $start / $stop — 尖括号分隔符 @base_tweaks — 包含一个元素: 字符串 ww @extra_tweaks — 额外的副词, 这里我们没有, 所以这个数组是空的 定位到 method quote_lang; 它仍然在 src/Raku/Grammar.nqp文件中:\nmethod quote_lang($l, $start, $stop, @base_tweaks?, @extra_tweaks?) { sub lang_key() { # \u0026lt;body redacted\u0026gt; } sub con_lang() { # \u0026lt;body redacted\u0026gt; } # Get language from cache or derive it. my $key := lang_key(); nqp::existskey(%quote_lang_cache, $key) \u0026amp;\u0026amp; $key ne \u0026#39;NOCACHE\u0026#39; ?? %quote_lang_cache{$key} !! (%quote_lang_cache{$key} := con_lang()); } 我们有两个词法子例程 lang_key 和 con_lang, 在它们下面我们把 lang_key 的输出存储到 $key 中, 在 %quote_lang_cache 中这个 $key 被用在整个缓存 dance 中, 所以我们可以忽略掉 lang_key sub 并直接进入 con_lang, 它被调用以生成我们的 quote_lang 方法的返回值:\nsub con_lang() { my $lang := $l.\u0026#39;!cursor_init\u0026#39;(self.orig(), :p(self.pos()), :shared(self.\u0026#39;!shared\u0026#39;())); for @base_tweaks { $lang := $lang.\u0026#34;tweak_$_\u0026#34;(1); } for @extra_tweaks { my $t := $_[0]; if nqp::can($lang, \u0026#34;tweak_$t\u0026#34;) { $lang := $lang.\u0026#34;tweak_$t\u0026#34;($_[1]); } else { self.sorry(\u0026#34;Unrecognized adverb: :$t\u0026#34;); } } nqp::istype($stop,VMArray) || $start ne $stop ?? $lang.balanced($start, $stop) !! $lang.unbalanced($stop); } 在初始化 Cursor 位置之后, $lang 继续包含我们的 Quote 语言编织然后我们落进一个 for 循环来迭代 @base_tweaks, 对于里面的每一个元素, 我们都调用方法 tweak_$_, 给它传递一个真值 1。因为我们仅仅只有一个 base tweak, 这意味着我们正在Quote braid上调用方法 tweak_ww。我们来看看那个方法是关于什么的。\n因为 Quote braid 被定义在同一个文件中, 仅仅搜索 method tweak_ww 好了:\nmethod tweak_ww($v) { $v ?? self.add-postproc(\u0026#34;quotewords\u0026#34;).apply_tweak(ww) !! self } 很好。我们给它的 $v 为真, 所以我们调用了 .add-postproc 然后调用 .apply_tweak(ww)。看一下那个方法的上面和下面, 我们看到 .add-postproc 也用在其它不含 bug 的引号中, 所以我们忽略它并直接跳到 .apply_tweak:\nmethod apply_tweak($role) { my $target := nqp::can(self, \u0026#39;herelang\u0026#39;) ?? self.herelang !! self; $target.HOW.mixin($target, $role); self } 啊哈! 它的参数是一个 role 并且它把该 role 混进来我们的 Quote braid 中。我们来看看那个 role 是关于什么的(再一次, 仅仅在文件中搜索 role ww, 或者仅仅向上滚动一点):\nrole ww { token escape:sym\u0026lt;\u0026#39; \u0026#39;\u0026gt; { \u0026lt;?[\u0026#39;]\u0026gt; \u0026lt;quote=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;quote\u0026#39;)\u0026gt; } token escape:sym\u0026lt;‘ ’\u0026gt; { \u0026lt;?[‘]\u0026gt; \u0026lt;quote=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;quote\u0026#39;)\u0026gt; } token escape:sym\u0026lt;\u0026#34; \u0026#34;\u0026gt; { \u0026lt;?[\u0026#34;]\u0026gt; \u0026lt;quote=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;quote\u0026#39;)\u0026gt; } token escape:sym\u0026lt;“ ”\u0026gt; { \u0026lt;?[“]\u0026gt; \u0026lt;quote=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;quote\u0026#39;)\u0026gt; } token escape:sym\u0026lt;colonpair\u0026gt; { \u0026lt;?[:]\u0026gt; \u0026lt;!RESTRICTED\u0026gt; \u0026lt;colonpair=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;colonpair\u0026#39;)\u0026gt; } token escape:sym\u0026lt;#\u0026gt; { \u0026lt;?[#]\u0026gt; \u0026lt;.LANG(\u0026#39;MAIN\u0026#39;, \u0026#39;comment\u0026#39;)\u0026gt; } } 奥, 我的天呐!引号! 如果这个地方不是我们修复 bug 的地方, 那么我就是一个芭蕾舞女演员。 我们找到它了!\n我们定位到的 role 把进了某些 tokens 混合进了我们正使用的 Quote braid 中来解析 qww 的内容。我们带有 bug 的 „” 引号组合明显不在那个列表中。我们来把它添加进去!\ntoken escape:sym\u0026lt;„ ”\u0026gt; { \u0026lt;?[„]\u0026gt; \u0026lt;quote=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;quote\u0026#39;)\u0026gt; } 编译! 运行我们带有 bug 的代码:\n$ ./raku -e \u0026#39;.say for qww\u0026lt;foo „hello world” bar\u0026gt;\u0026#39; foo bar 悲催! 好吧, 我们确实为引号处理找到了正确的地方, 但是我们让问题变得更加糟糕了。发生了什么?\nQuotastic Inaction 我们新的 token 肯定解析了那个引号, 但是我们绝对没有给它添加 Actions 动作\u0026hellip; 好吧, 对它起作用。Action 类和 Grammars 相邻, 在 src/Raku/Actions.nqp 中。打开它并定位到匹配的方法那里; 比如 method escape:sym\u0026lt;“ ”\u0026gt;。\nmethod escape:sym\u0026lt;\u0026#39; \u0026#39;\u0026gt;($/) { make mark_ww_atom($\u0026lt;quote\u0026gt;.ast); } method escape:sym\u0026lt;\u0026#34; \u0026#34;\u0026gt;($/) { make mark_ww_atom($\u0026lt;quote\u0026gt;.ast); } method escape:sym\u0026lt;‘ ’\u0026gt;($/) { make mark_ww_atom($\u0026lt;quote\u0026gt;.ast); } method escape:sym\u0026lt;“ ”\u0026gt;($/) { make mark_ww_atom($\u0026lt;quote\u0026gt;.ast); } 并在列表中添加我们自己的版本:\nmethod escape:sym\u0026lt;„ ”\u0026gt;($/) { make mark_ww_atom($\u0026lt;quote\u0026gt;.ast); } 编译! 运行我们带有 bug 的代码:\n$ ./raku -e \u0026#39;.say for qww\u0026lt;foo „hello world” bar\u0026gt;\u0026#39; foo hello world bar 呼! 成功了! 不再有 bug 了。我们修复了那个 bug!\n但是, 等一下\u0026hellip;\n遗漏了, 但是没有忘记 看一下所有可能的奢华的引号的列表。尽管我们的 bug 报告中仅仅提到了 „” 引号对儿, 但是 ‚‘ 和 「」 都不在我们的 role ww tokens 中。远远不止的是, 某些左/右引号, 当它们交换位置后, 在引起字符串的时候也刚好能工作, 所以它们也应该在 qww 中起效。然而, 添加一整串额外的 tokens 和一整串其它的 actions 方法是相当不精彩的。有没有更好的方法?\n我们仔细看看我们的 tokens:\ntoken escape:sym\u0026lt;“ ”\u0026gt; { \u0026lt;?[“]\u0026gt; \u0026lt;quote=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;quote\u0026#39;)\u0026gt; } sym\u0026lt;“ ”\u0026gt; 我们可以把它省略了 — 这里它的功能仅仅是作为一个名字。我们留下的是一个向前查看的 “ 引号还有 \u0026lt;quote=.LANG('MAIN','quote')\u0026gt;。所以我们可以向前查看所有的我们关心的开口引号并让 MAIN braid 接管所有的细节。\n所以, 让我们用这个单个 token 替换掉所有的引号处理 tokens:\ntoken escape:sym\u0026lt;\u0026#39;\u0026gt; { \u0026lt;?[ \u0026#39; \u0026#34; ‘ ‚ ’ “ „ ” 「 ]\u0026gt; \u0026lt;quote=.LANG(\u0026#39;MAIN\u0026#39;,\u0026#39;quote\u0026#39;)\u0026gt; } 并且使用下面这个单个 action 替换掉所有的匹配 actions 方法:\nmethod escape:sym\u0026lt;\u0026#39;\u0026gt;($/) { make mark_ww_atom($\u0026lt;quote\u0026gt;.ast); } 编译! 运行我们的带有某些引号变体的代码:\n$ ./raku -e \u0026#39;.say for qww\u0026lt;„looks like” ‚we fixed‘ ｢this thing｣\u0026gt;\u0026#39; looks like we fixed this thing 精彩! 我们不仅让所有的引号都能正常工作, 还设法清理的存在的 tokens 和 actions 方法。现在所有我们需要做的就是对我们的修复做测试并且我们已经准备提交了。\n享用 bug 烤肉 Raku 官方测试套件 Roast 是在 Rakudo 内建目录中的 t/spec 中，如果它不存在, 仅仅运行 make spectest 就好了并且在它把 roast 仓库克隆到 t/spec 中后就中止它。我们需要找到在哪里插入我们的测试而 grep 是干那件事的好朋友:\nzoffix@VirtualBox:~/CPANPRC/rakudo/t/spec$ grep -R \u0026#39;qww\u0026#39; . Binary file ./.git/objects/pack/pack-5bdee39f28283fef4b500859f5b288ea4eec20d7.pack matches ./S02-literals/allomorphic.t: my @wordlist = qqww[1 2/3 4.5 6e7 8+9i] Z (IntStr, RatStr, RatStr, NumStr, ComplexStr); ./S02-literals/allomorphic.t: isa-ok $val, Str, \u0026#34;\u0026#39;$val\u0026#39; from qqww[] is a Str\u0026#34;; ./S02-literals/allomorphic.t: nok $val.isa($wrong-type), \u0026#34;\u0026#39;$val\u0026#39; from qqww[] is not a $wrong-type.perl()\u0026#34;; ./S02-literals/allomorphic.t: my @wordlist = qqww:v[1 2/3 4.5 6e7 8+9i]; ./S02-literals/allomorphic.t: my @written = qqww:v[1 2/3 $num 6e7 8+9i ten]; ./S02-literals/allomorphic.t: is-deeply @angled, @written, \u0026#34;«...» is equivalent to qqww:v[...]\u0026#34;; ./S02-literals/quoting.t: is(qqww[$alpha $beta], \u0026lt;foo bar\u0026gt;, \u0026#39;qqww\u0026#39;); ./S02-literals/quoting.t: for (\u0026lt;\u0026lt;$a b c\u0026gt;\u0026gt;, qqww{$a b c}, qqw{$a b c}).kv -\u0026gt; $i, $_ { ./S02-literals/quoting.t: is-deeply qww\u0026lt;a a ‘b b’ ‚b b’ ’b b‘ ’b b‘ ’b b’ ‚b b‘ ‚b b’ “b b” „b b” ./S02-literals/quoting.t: \u0026#39;fancy quotes in qww work just like regular quotes\u0026#39;; ./integration/advent2014-day16.t: for flat qww/ foo bar \u0026#39;first second\u0026#39; / Z @a -\u0026gt; $string, $result { 看起来 S02-literals/quoting.t 是它的一个好地方。打开那个文件, 在它的顶部, 通过我们添加的测试的数量来增加 plan 的数量 — 在这个例子中仅仅增加一条就好了。然后滚动到底部并创建一个 block 块, 前面添加一个注释, 并为我们正修复的 bug 报告引用那个 RT 标签数字。\n在文件里面, 我们使用 is-deeply 测试函数, 它使用 eqv 操作符语义来做测试。我们会给它一个带有完整引号串的 qww\u0026lt;\u0026gt; 行并告诉它我们所期望返回的项目列表。还要写下测试描述:\n# RT #128304 { is-deeply qww\u0026lt;a a ‘b b’ ‚b b’ ’b b‘ ’b b‘ ’b b’ ‚b b‘ ‚b b’ “b b” „b b” ”b b“ ”b b“ ”b b” „b b“ „b b” ｢b b｣ ｢b b｣\u0026gt;, (\u0026#39;a\u0026#39;, \u0026#39;a\u0026#39;, |(\u0026#39;b b\u0026#39; xx 16)), \u0026#39;fancy quotes in qww work just like regular quotes\u0026#39;; } 返回到 Rakudo checkout, 运行修改后的测试并保证它通过:\n$ make t/spec/S02-literals/quoting.t # \u0026lt;lots of output\u0026gt; All tests successful. Files=1, Tests=185, 3 wallclock secs ( 0.03 usr 0.01 sys + 2.76 cusr 0.11 csys = 2.91 CPU) Result: PASS 漂亮。提交测试 bug 修复好了并且把它们送走! 我们做到了!\n结论 当我们在修复 Raku 中的解析 bugs 的时候, 把程序减少到能重新产生那个 bug 的最小部分然后使用 --target=parse 命令行参数, 得到解析树的输出, 找到所匹配的那个 tokens。statementlist\n然后, 在 src/Raku/Grammar.nqp 中跟随这些 tokens, 它也继承自 NQP 的 src/HLL/Grammar.nqp 。 与位于 src/Raku/Actions.nqp 中的 actions 类协作, 跟随着代码找出正在做什么并期望找出问题出现在什么位置。\n修复它。测试它。发布它。\n充满了乐趣。\nhttp://raku.party/post/Perl-6-Core-Hacking-Grammatical-Babble\n"},"name":"Raku 核心魔改: Grammar 的胡言乱语","published":"2021-07-11T00:00:00Z","summary":"Raku Core Hacking Grammatical Babble","type":"entry","url":"https://ohmyweekly.github.io/notes/2016-01-01-raku-core-hacking-grammatical-babble/"}
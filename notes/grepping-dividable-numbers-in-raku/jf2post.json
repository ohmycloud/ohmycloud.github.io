{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003cp\u003e欢迎来到 \u003cstrong\u003eRaku One-Liner Advent Calendar\u003c/strong\u003e 的第\u003ca href=\"https://raku.online/2018/12/02/grep-dividable-numbers/\"\u003e2\u003c/a\u003e天！ 今天, 我们将从编号为 1 的\u003ca href=\"https://projecteuler.net/problem=1\"\u003eEuler 项目\u003c/a\u003e开始解决一个很好的任务. 我要再次提醒你, 该文的其余部分包含一个答案, 所以欢迎你暂停一下, 先考虑自己的答案。 但我几乎可以肯定, 如果你一直在阅读 raku.online, 那么你很可能在过去就已经解决了欧拉项目的问题。\u003c/p\u003e\n\u003cp\u003e任务是找到 1000 以下, 既是3的倍数, 又是5的倍数的数字的总和。我们感兴趣的行的前几个元素是 3,5,9,15,20,21等。你已经可以看到它们中的一些数字,  例如 15, 是 3和5的倍数, 因此不可能将3和5的倍数分别相加。\u003c/p\u003e\n\u003cp\u003e答案在这里:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e999\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"err\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在让我们解读它。\u003c/p\u003e\n\u003cp\u003e我们需要的是过滤3的倍数或5的倍数的数字。如果你重新阅读上一句话, 铃声应该为你响起:在 Raku 中, 这可以用 \u003ca href=\"https://docs.raku.org/type/Junction\"\u003eJunctions\u003c/a\u003e 来实现, 非正式地称为\u003ca href=\"https://rakuadvent.wordpress.com/2016/12/04/day-4-quantum-secret-santa/\"\u003e量子叠加\u003c/a\u003e。 要测试数字是否可以被3或5整除, 请这样写:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"nv\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e顺便说一下, \u003ccode\u003e%%\u003c/code\u003e 是 divisibility 运算符, 是一个非常好的东西, 有助于避免布尔测试中的否定, 如果你写成下面这样, 那么你只有一个百分号:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"err\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e好的, 主要条件已准备就绪, 让我们扫描1和（包括）999之间的数字:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e999\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"err\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里会出现一些更有趣的 Raku 元素。 例如, \u003cstrong\u003eWhateverCode\u003c/strong\u003e 块, 由 \u003ccode\u003e*\u003c/code\u003e 字符引入（在我之前的 Raku Advent Calendar 的文章 \u003ca href=\"https://rakuadvent.wordpress.com/2017/12/11/all-the-stars-of-perl-6/\"\u003eAll the stars of Raku\u003c/a\u003e 中了解更多关于它的东西）。 与冒号形式的方法调用一起, 它允许摆脱嵌套的花括号和圆括号对儿:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e999\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"err\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)})\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e数字被过滤（如果你喜欢, 可以使用 \u003cem\u003egrepped\u003c/em\u003e）, 是时候将它们加到一块并打印结果了。 轮到本文开头所示的最后的单行了。\u003c/p\u003e\n\u003cp\u003e当然, 可以做一两个方法调用代替 \u003ccode\u003esay sum(...)\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e999\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"err\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e作为奖励，这是我的第一个答案:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e($n) {\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e \u003cspan class=\"sr\"\u003e\u0026lt;\u0026lt;*\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"mi\"\u003e1000\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"err\"\u003e∪\u003c/span\u003e \u003cspan class=\"n\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这就是今天故事的结局！ 明天再来！\u003c/p\u003e\n","text":"欢迎来到 Raku One-Liner Advent Calendar 的第2天！ 今天, 我们将从编号为 1 的Euler 项目开始解决一个很好的任务. 我要再次提醒你, 该文的其余部分包含一个答案, 所以欢迎你暂停一下, 先考虑自己的答案。 但我几乎可以肯定, 如果你一直在阅读 raku.online, 那么你很可能在过去就已经解决了欧拉项目的问题。\n任务是找到 1000 以下, 既是3的倍数, 又是5的倍数的数字的总和。我们感兴趣的行的前几个元素是 3,5,9,15,20,21等。你已经可以看到它们中的一些数字, 例如 15, 是 3和5的倍数, 因此不可能将3和5的倍数分别相加。\n答案在这里:\nsay sum((1..999).grep: * %% (3 | 5)) 现在让我们解读它。\n我们需要的是过滤3的倍数或5的倍数的数字。如果你重新阅读上一句话, 铃声应该为你响起:在 Raku 中, 这可以用 Junctions 来实现, 非正式地称为量子叠加。 要测试数字是否可以被3或5整除, 请这样写:\n$x %% 3 | 5 顺便说一下, %% 是 divisibility 运算符, 是一个非常好的东西, 有助于避免布尔测试中的否定, 如果你写成下面这样, 那么你只有一个百分号:\n!($x % (3 | 5)) 好的, 主要条件已准备就绪, 让我们扫描1和（包括）999之间的数字:\n(1..999).grep: * %% (3 | 5) 这里会出现一些更有趣的 Raku 元素。 例如, WhateverCode 块, 由 * 字符引入（在我之前的 Raku Advent Calendar 的文章 All the stars of Raku 中了解更多关于它的东西）。 与冒号形式的方法调用一起, 它允许摆脱嵌套的花括号和圆括号对儿:\n(1..999).grep({$_ %% (3 | 5)}) 数字被过滤（如果你喜欢, 可以使用 grepped）, 是时候将它们加到一块并打印结果了。 轮到本文开头所示的最后的单行了。\n当然, 可以做一两个方法调用代替 say sum(...):\n((1..999).grep: * %% (3 | 5)).sum.say 作为奖励，这是我的第一个答案:\nsub f($n) { ($n \u0026lt;\u0026lt;*\u0026gt;\u0026gt; (1...1000 / $n)).grep: * \u0026lt; 1000 } say (f(3) ∪ f(5)).keys.sum; 这就是今天故事的结局！ 明天再来！\n"},"name":"🎄 2/25. 在 Raku 中 Grepping 可整除的数字","published":"2018-12-02T09:22:02Z","summary":"欢迎来到 Raku One-Liner Advent Calendar 的第2天！ 今天, 我们将从编号为 1 的Euler 项目开始解决一个很好的任务. 我要再次提醒你, 该文的其余部分包含一个答案, 所以欢迎你暂停一下, 先考虑自己的答案。 但我几乎可以肯定, 如果你一直在阅读 raku.online, 那么你很可能在过去就已经解决了欧拉项目的问题。\n任务是找到 1000 以下, 既是3的倍数, 又是5的倍数的数字的总和。我们感兴趣的行的前几个元素是 3,5,9,15,20,21等。你已经可以看到它们中的一些数字, 例如 15, 是 3和5的倍数, 因此不可能将3和5的倍数分别相加。\n答案在这里:\nsay sum((1..999).grep: * %% (3 | 5)) 现在让我们解读它。\n我们需要的是过滤3的倍数或5的倍数的数字。如果你重新阅读上一句话, 铃声应该为你响起:在 Raku 中, 这可以用 Junctions 来实现, 非正式地称为量子叠加。 要测试数字是否可以被3或5整除, 请这样写:\n$x %% 3 | 5 顺便说一下, %% 是 divisibility 运算符, 是一个非常好的东西, 有助于避免布尔测试中的否定, 如果你写成下面这样, 那么你只有一个百分号:\n!($x % (3 | 5)) 好的, 主要条件已准备就绪, 让我们扫描1和（包括）999之间的数字:","type":"entry","url":"http://localhost:1313/notes/grepping-dividable-numbers-in-raku/"}
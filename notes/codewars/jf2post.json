{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003cp\u003e\u003ca href=\"https://www.codewars.com/\"\u003ecodewars\u003c/a\u003e\u003c/p\u003e\n\u003ch1 id=\"highest-and-lowest\"\u003eHighest and Lowest\u003c/h1\u003e\n\u003cp\u003eIn this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.\u003c/p\u003e\n\u003cp\u003eExample:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eKata.HighAndLow(\u0026#34;1 2 3 4 5\u0026#34;); // return \u0026#34;5 1\u0026#34;\nKata.HighAndLow(\u0026#34;1 2 -3 4 5\u0026#34;); // return \u0026#34;5 -3\u0026#34;\nKata.HighAndLow(\u0026#34;1 9 3 4 -5\u0026#34;); // return \u0026#34;9 -5\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNotes:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAll numbers are valid Int32, no need to validate them.\u003c/li\u003e\n\u003cli\u003eThere will always be at least one number in the input string.\u003c/li\u003e\n\u003cli\u003eOutput string must be two numbers separated by a single space, and highest number is first.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ehigh-and-low\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ewords\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026#34;{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emax\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emin\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"vowel-count\"\u003eVowel Count\u003c/h1\u003e\n\u003cp\u003eReturn the number (count) of vowels in the given string.\u003c/p\u003e\n\u003cp\u003eWe will consider a, e, i, o, and u as vowels for this Kata.\u003c/p\u003e\n\u003cp\u003eThe input string will only consist of lower case letters and/or spaces.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003evowel-count\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e[+]\u003c/span\u003e \u003cspan class=\"k\"\u003egather\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etake\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eBag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekey\u003c/span\u003e \u003cspan class=\"o\"\u003e∈\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eor\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003evowel-count\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e[+]\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eBag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eor use \u003ca href=\"https://docs.raku.org/type/Str#method_trans\"\u003etrans\u003c/a\u003e method:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003evowel-count\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etrans\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003eaeiou\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;/\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"ones-and-zeros\"\u003eOnes and Zeros\u003c/h1\u003e\n\u003cp\u003eGiven an array of one\u0026rsquo;s and zero\u0026rsquo;s convert the equivalent binary value to an integer.\u003c/p\u003e\n\u003cp\u003eEg: [0, 0, 0, 1] is treated as 0001 which is the binary representation of 1.\u003c/p\u003e\n\u003cp\u003eExamples:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eTesting: [0, 0, 0, 1] ==\u0026gt; 1\nTesting: [0, 0, 1, 0] ==\u0026gt; 2\nTesting: [0, 1, 0, 1] ==\u0026gt; 5\nTesting: [1, 0, 0, 1] ==\u0026gt; 9\nTesting: [0, 0, 1, 0] ==\u0026gt; 2\nTesting: [0, 1, 1, 0] ==\u0026gt; 6\nTesting: [1, 1, 1, 1] ==\u0026gt; 15\nTesting: [1, 0, 1, 1] ==\u0026gt; 11\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHowever, the arrays can have varying lengths, not just limited to 4.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eones-and-zeros\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e())\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eor\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eones-and-zeros\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026gt;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"disemvowel-trolls\"\u003eDisemvowel Trolls\u003c/h1\u003e\n\u003cp\u003eTrolls are attacking your comment section!\u003c/p\u003e\n\u003cp\u003eA common way to deal with this situation is to remove all of the vowels from the trolls\u0026rsquo; comments, neutralizing the threat.\u003c/p\u003e\n\u003cp\u003eYour task is to write a function that takes a string and return a new string with all vowels removed.\u003c/p\u003e\n\u003cp\u003eFor example, the string \u0026ldquo;This website is for losers LOL!\u0026rdquo; would become \u0026ldquo;Ths wbst s fr lsrs LL!\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eNote: for this kata y isn\u0026rsquo;t considered a vowel.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eremove-vowel\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etrans\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e[aeiouAEIOU]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"find-the-odd-int\"\u003eFind the odd int\u003c/h1\u003e\n\u003cp\u003eGiven an array, find the int that appears an odd number of times.\u003c/p\u003e\n\u003cp\u003eThere will always be only one integer that appears an odd number of times.\u003c/p\u003e\n\u003cp\u003esub find-ood(@a) {\u003c/p\u003e\n\u003cp\u003e}\u003c/p\u003e\n\u003ch1 id=\"who-likes-it\"\u003eWho likes it?\u003c/h1\u003e\n\u003cp\u003eYou probably know the \u0026ldquo;like\u0026rdquo; system from Facebook and other pages. People can \u0026ldquo;like\u0026rdquo; blog posts, pictures or other items. We want to create the text that should be displayed next to such an item.\u003c/p\u003e\n\u003cp\u003eImplement a function likes :: [String] -\u0026gt; String, which must take in input array, containing the names of people who like an item. It must return the display text as shown in the examples:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003elikes [] // must be \u0026#34;no one likes this\u0026#34;\nlikes [\u0026#34;Peter\u0026#34;] // must be \u0026#34;Peter likes this\u0026#34;\nlikes [\u0026#34;Jacob\u0026#34;, \u0026#34;Alex\u0026#34;] // must be \u0026#34;Jacob and Alex like this\u0026#34;\nlikes [\u0026#34;Max\u0026#34;, \u0026#34;John\u0026#34;, \u0026#34;Mark\u0026#34;] // must be \u0026#34;Max, John and Mark like this\u0026#34;\nlikes [\u0026#34;Alex\u0026#34;, \u0026#34;Jacob\u0026#34;, \u0026#34;Mark\u0026#34;, \u0026#34;Max\u0026#34;] // must be \u0026#34;Alex, Jacob and 2 others like this\u0026#34;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFor 4 or more names, the number in and 2 others simply increases.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ewho-likes-it\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e      \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eno one likes this\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e and \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003elike this\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e      \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eroundrobin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e, \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e and \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e like this\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e      \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e, \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e and 2 others like this\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"bit-counting\"\u003eBit Counting\u003c/h1\u003e\n\u003cp\u003eWrite a function that takes an integer as input, and returns the number of bits that are equal to one in the binary representation of that number. You can guarantee that input is non-negative.\u003c/p\u003e\n\u003cp\u003eExample: The binary representation of 1234 is 10011010010, so the function should return 5 in this case\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ebit-counting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$n\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebase\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eBag\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"playing-with-digits\"\u003ePlaying with digits\u003c/h1\u003e\n\u003cp\u003eSome numbers have funny properties. For example:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e89 \u0026ndash;\u0026gt; 8¹ + 9² = 89 * 1\n695 \u0026ndash;\u0026gt; 6² + 9³ + 5⁴= 1390 = 695 * 2\n46288 \u0026ndash;\u0026gt; 4³ + 6⁴+ 2⁵ + 8⁶ + 8⁷ = 2360688 = 46288 * 51\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eGiven a positive integer n written as abcd\u0026hellip; (a, b, c, d\u0026hellip; being digits) and a positive integer p we want to find a positive integer k, if it exists, such as the sum of the digits of n taken to the successive powers of p is equal to k * n. In other words:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIs there an integer k such as : (a ^ p + b ^ (p+1) + c ^(p+2) + d ^ (p+3) + \u0026hellip;) = n * k\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eIf it is the case we will return k, if not return -1.\u003c/p\u003e\n\u003cp\u003eNote: n, p will always be given as strictly positive integers.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edigPow(89, 1) should return 1 since 8¹ + 9² = 89 = 89 * 1\ndigPow(92, 1) should return -1 since there is no k such as 9¹ + 2² equals 92 * k\ndigPow(695, 2) should return 2 since 6² + 9³ + 5⁴= 1390 = 695 * 2\ndigPow(46288, 3) should return 51 since 4³ + 6⁴+ 2⁵ + 8⁶ + 8⁷ = 2360688 = 46288 * 51\n\u003c/code\u003e\u003c/pre\u003e","text":"codewars\nHighest and Lowest In this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.\nExample:\nKata.HighAndLow(\u0026#34;1 2 3 4 5\u0026#34;); // return \u0026#34;5 1\u0026#34; Kata.HighAndLow(\u0026#34;1 2 -3 4 5\u0026#34;); // return \u0026#34;5 -3\u0026#34; Kata.HighAndLow(\u0026#34;1 9 3 4 -5\u0026#34;); // return \u0026#34;9 -5\u0026#34; Notes:\nAll numbers are valid Int32, no need to validate them. There will always be at least one number in the input string. Output string must be two numbers separated by a single space, and highest number is first. sub high-and-low($str) { with $str.words».Int { \u0026#34;{.max} {.min}\u0026#34; } } Vowel Count Return the number (count) of vowels in the given string.\nWe will consider a, e, i, o, and u as vowels for this Kata.\nThe input string will only consist of lower case letters and/or spaces.\nsub vowel-count($str) { [+] gather .value.take for $str.comb.Bag.grep: {.key ∈ [\u0026#39;a\u0026#39;,\u0026#39;e\u0026#39;,\u0026#39;i\u0026#39;,\u0026#39;o\u0026#39;,\u0026#39;u\u0026#39;]} } or\nsub vowel-count($str) { [+] $str.comb.Bag.{\u0026#34;a\u0026#34;,\u0026#34;e\u0026#34;,\u0026#34;i\u0026#34;,\u0026#34;o\u0026#34;,\u0026#34;u\u0026#34;} } or use trans method:\nsub vowel-count($str) { with $str { .chars - .trans(/\u0026lt;[aeiou]\u0026gt;/ =\u0026gt; \u0026#39;\u0026#39;).chars } } Ones and Zeros Given an array of one\u0026rsquo;s and zero\u0026rsquo;s convert the equivalent binary value to an integer.\nEg: [0, 0, 0, 1] is treated as 0001 which is the binary representation of 1.\nExamples:\nTesting: [0, 0, 0, 1] ==\u0026gt; 1 Testing: [0, 0, 1, 0] ==\u0026gt; 2 Testing: [0, 1, 0, 1] ==\u0026gt; 5 Testing: [1, 0, 0, 1] ==\u0026gt; 9 Testing: [0, 0, 1, 0] ==\u0026gt; 2 Testing: [0, 1, 1, 0] ==\u0026gt; 6 Testing: [1, 1, 1, 1] ==\u0026gt; 15 Testing: [1, 0, 1, 1] ==\u0026gt; 11 However, the arrays can have varying lengths, not just limited to 4.\nsub ones-and-zeros(@a) { :2(@a.join()) } or\nsub ones-and-zeros(@a) { my $str = @a.join; :2(\u0026lt;\u0026lt;$str\u0026gt;\u0026gt;) } Disemvowel Trolls Trolls are attacking your comment section!\nA common way to deal with this situation is to remove all of the vowels from the trolls\u0026rsquo; comments, neutralizing the threat.\nYour task is to write a function that takes a string and return a new string with all vowels removed.\nFor example, the string \u0026ldquo;This website is for losers LOL!\u0026rdquo; would become \u0026ldquo;Ths wbst s fr lsrs LL!\u0026rdquo;.\nNote: for this kata y isn\u0026rsquo;t considered a vowel.\nsub remove-vowel($str) { $str.trans: \u0026lt;[aeiouAEIOU]\u0026gt; =\u0026gt; \u0026#39;\u0026#39; } Find the odd int Given an array, find the int that appears an odd number of times.\nThere will always be only one integer that appears an odd number of times.\nsub find-ood(@a) {\n}\nWho likes it? You probably know the \u0026ldquo;like\u0026rdquo; system from Facebook and other pages. People can \u0026ldquo;like\u0026rdquo; blog posts, pictures or other items. We want to create the text that should be displayed next to such an item.\nImplement a function likes :: [String] -\u0026gt; String, which must take in input array, containing the names of people who like an item. It must return the display text as shown in the examples:\nlikes [] // must be \u0026#34;no one likes this\u0026#34; likes [\u0026#34;Peter\u0026#34;] // must be \u0026#34;Peter likes this\u0026#34; likes [\u0026#34;Jacob\u0026#34;, \u0026#34;Alex\u0026#34;] // must be \u0026#34;Jacob and Alex like this\u0026#34; likes [\u0026#34;Max\u0026#34;, \u0026#34;John\u0026#34;, \u0026#34;Mark\u0026#34;] // must be \u0026#34;Max, John and Mark like this\u0026#34; likes [\u0026#34;Alex\u0026#34;, \u0026#34;Jacob\u0026#34;, \u0026#34;Mark\u0026#34;, \u0026#34;Max\u0026#34;] // must be \u0026#34;Alex, Jacob and 2 others like this\u0026#34; For 4 or more names, the number in and 2 others simply increases.\nsub who-likes-it(@a) { given @a { when .elems == 0 { \u0026#34;no one likes this\u0026#34; } when 1 \u0026lt;= .elems \u0026lt;= 2 { @a.join(\u0026#34; and \u0026#34;) ~ \u0026#34;like this\u0026#34; } when .elems == 3 { roundrobin(@a, [\u0026#39;, \u0026#39;, \u0026#39; and \u0026#39;]).flat.join() ~ \u0026#39; like this\u0026#39; } when .elems == 4 { @a[0] ~ \u0026#39;, \u0026#39; ~ @a[1] ~ \u0026#39; and 2 others like this\u0026#39; } } } Bit Counting Write a function that takes an integer as input, and returns the number of bits that are equal to one in the binary representation of that number. You can guarantee that input is non-negative.\nExample: The binary representation of 1234 is 10011010010, so the function should return 5 in this case\nsub bit-counting($n) { $n.base(2).comb.Bag.{\u0026#34;1\u0026#34;} } Playing with digits Some numbers have funny properties. For example:\n89 \u0026ndash;\u0026gt; 8¹ + 9² = 89 * 1 695 \u0026ndash;\u0026gt; 6² + 9³ + 5⁴= 1390 = 695 * 2 46288 \u0026ndash;\u0026gt; 4³ + 6⁴+ 2⁵ + 8⁶ + 8⁷ = 2360688 = 46288 * 51\nGiven a positive integer n written as abcd\u0026hellip; (a, b, c, d\u0026hellip; being digits) and a positive integer p we want to find a positive integer k, if it exists, such as the sum of the digits of n taken to the successive powers of p is equal to k * n. In other words:\nIs there an integer k such as : (a ^ p + b ^ (p+1) + c ^(p+2) + d ^ (p+3) + \u0026hellip;) = n * k\nIf it is the case we will return k, if not return -1.\nNote: n, p will always be given as strictly positive integers.\ndigPow(89, 1) should return 1 since 8¹ + 9² = 89 = 89 * 1 digPow(92, 1) should return -1 since there is no k such as 9¹ + 2² equals 92 * k digPow(695, 2) should return 2 since 6² + 9³ + 5⁴= 1390 = 695 * 2 digPow(46288, 3) should return 51 since 4³ + 6⁴+ 2⁵ + 8⁶ + 8⁷ = 2360688 = 46288 * 51 "},"name":"codewars","published":"2018-11-24T19:29:53Z","summary":"codewars\nHighest and Lowest In this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.\nExample:\nKata.HighAndLow(\u0026#34;1 2 3 4 5\u0026#34;); // return \u0026#34;5 1\u0026#34; Kata.HighAndLow(\u0026#34;1 2 -3 4 5\u0026#34;); // return \u0026#34;5 -3\u0026#34; Kata.HighAndLow(\u0026#34;1 9 3 4 -5\u0026#34;); // return \u0026#34;9 -5\u0026#34; Notes:\nAll numbers are valid Int32, no need to validate them. There will always be at least one number in the input string.","type":"entry","url":"http://localhost:1313/notes/codewars/"}
{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003ch1 id=\"raku-s-操作符httpblogsperlorguserszoffix_znet201604perl-6-the-s-operatorhtml\"\u003e\u003ca href=\"http://blogs.perl.org/users/zoffix_znet/2016/04/perl-6-the-s-operator.html\"\u003eRaku: S/// 操作符\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003eBy \u003ca href=\"http://blogs.perl.org/users/zoffix_znet/\"\u003eZoffix Znet\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e来自 Perl 5 背景的我, 第一次使用 Raku 的非破坏性替换操作符 \u003ccode\u003eS///\u003c/code\u003e 的经历就像下面这样:\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://upload-images.jianshu.io/upload_images/326727-3a07abee4665adaf.gif?imageMogr2/auto-orient/strip\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e进展会更好的。我不但会改善错误信息, 而且会解释当前的所有事情。\u003c/p\u003e\n\u003ch2 id=\"智能匹配\"\u003e智能匹配\u003c/h2\u003e\n\u003cp\u003e我有问题的原因是因为, 看到外形相似的操作符, 我就简单地把 Perl 5 中的绑定操作符(\u003ccode\u003e=~\u003c/code\u003e)转换为 Raku 中的智能匹配操作符(\u003ccode\u003e~~\u003c/code\u003e) 还期望它能正常工作。事实上我是异想天开。\u003ccode\u003eS///\u003c/code\u003e 操作符没有文档, 并且结合令人困惑的(那个时候)警告信息, 这就是我痛苦的根源：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT warning:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Smartmatch with S/// can never succeed\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个丑陋的警告说这儿的 \u003ccode\u003e~~\u003c/code\u003e 操作符是个错误的选择并且确实如此。\u003ccode\u003e~~\u003c/code\u003e 操作符不是 Perl 5 的 \u003ccode\u003e=~\u003c/code\u003e 操作符的等价物。\u003ccode\u003e~~\u003c/code\u003e 智能操作符把它左边的东西起了个叫做 \u003ccode\u003e$_\u003c/code\u003e 的别名, 然后 \u003ccode\u003e~~\u003c/code\u003e 计算它右侧的东西, 然后在右侧这个东西身上调用 \u003ccode\u003e.ACCEPTS($_)\u003c/code\u003e 方法。这就是所有的魔法。\u003c/p\u003e\n\u003cp\u003e所以上面的例子实际上发生了:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e我们到达 \u003ccode\u003eS///\u003c/code\u003e 的时候, \u003ccode\u003e$orig\u003c/code\u003e 被起了个叫做 \u003ccode\u003e$_\u003c/code\u003e 的别名。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eS///\u003c/code\u003e 非破坏性地在 \u003ccode\u003e$_\u003c/code\u003e 身上执行了替换并返回那个结果字符串。这是智能匹配将要操作的东西。\u003c/li\u003e\n\u003cli\u003e智能匹配, 按照 Str 与 Str 相匹配的规则, 会根据替换是否发生来给出 True 或 False（令人困惑的是, True 意味着没发生）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e结果一路下来, 我们并没有得到我们想要的：替换过的字符串。\u003c/p\u003e\n\u003ch2 id=\"使用-given\"\u003e使用 Given\u003c/h2\u003e\n\u003cp\u003e既然我们知道了 \u003ccode\u003eS///\u003c/code\u003e 总是作用在 \u003ccode\u003e$_\u003c/code\u003e 上并且返回替换后的结果, 很容易就想到几种方法把 \u003ccode\u003e$_\u003c/code\u003e 设置为我们原来的字符串并把 \u003ccode\u003eS///\u003c/code\u003e 的返回值收集回来, 我们来看几个例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$orig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@orig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003emeow cow sow vow\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@new\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edo\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@orig\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eow\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u0026gt;/\u003c/span\u003e\u003cspan class=\"s2\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@orig\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@new\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# meowmix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# [meow cow sow vow]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# [wow wow wow wow]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e第一个作用在单个值上。我们使用后置形式的 \u003cem\u003egiven\u003c/em\u003e 块儿, 这让我们避免了花括号（你可以使用 \u003cem\u003ewith\u003c/em\u003e 代替 \u003cem\u003egiven\u003c/em\u003e 得到同样的结果）。\u003ccode\u003egiven $orig\u003c/code\u003e 会给 \u003ccode\u003e$orig\u003c/code\u003e 起个叫做 \u003ccode\u003e$_\u003c/code\u003e 的别名。从输出来看, 原字符串没有被更改。\u003c/p\u003e\n\u003cp\u003e第二个例子作用在数组中的一堆字符串身上并且我们使用 \u003cem\u003edo\u003c/em\u003e 关键字来执行常规的 \u003cem\u003efor\u003c/em\u003e 循环(那种情况下, 它把循环变量别名给 \u003ccode\u003e$_\u003c/code\u003e 了)并把结果赋值给 \u003ccode\u003e@new\u003c/code\u003e 数组。再次, 输出显示原来的数组并没有发生改变。\u003c/p\u003e\n\u003ch2 id=\"副词\"\u003e副词\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eS///\u003c/code\u003e 操作符 - 就像 \u003ccode\u003es///\u003c/code\u003e 操作符和某些方法一样 - 允许你使用正则表达式副词：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLörem Ipsum Dolor Sit Amet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eg\u003c/span\u003e      \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Löreg Ipsug Dolor Sit Aget\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e      \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# börem Ipsum Dolor Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eii\u003c/span\u003e     \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Börem Ipsum Dolor Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003emm\u003c/span\u003e     \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eo\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eu\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# Lürem Ipsum Dolor Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003enth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Lörem Ipsug Dolor Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Löreg Ipsug Dolor Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ess\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eIpsum Dolor\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eGipsum\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Lörem Gipsum Color Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eii\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003enth\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# Lörem Ipsug Dolor Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如你所见, 它们以 \u003cem\u003e:foo\u003c/em\u003e 的形式添加在操作符 \u003cstrong\u003eS\u003c/strong\u003e 这个部件的后面。你可以大大方方地使用空白符号并且几个副词可以同时使用。下面是它们的意义：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e:g —(长形式：\u003ccode\u003e:global\u003c/code\u003e)全局匹配：替换掉所有的出现\u003c/li\u003e\n\u003cli\u003e:i —不区分大小写的匹配\u003c/li\u003e\n\u003cli\u003e:ii —(长形式： \u003ccode\u003e:samecase\u003c/code\u003e) 保留大小写：不管用作替换字母的大小写, 使用原来被替换的字母的大小写\u003c/li\u003e\n\u003cli\u003e:mm —(长形式：\u003ccode\u003e:samemark\u003c/code\u003e) 保留重音符号：在上面的例子中, 字母 o 上的分音符号被保留并被应用到替换字母 u 上\u003c/li\u003e\n\u003cli\u003e:nth(n) —只替换第 n 次出现的\u003c/li\u003e\n\u003cli\u003e:x(n) —至多替换 n 次（助记符: \u0026lsquo;x\u0026rsquo; 作为及时）\u003c/li\u003e\n\u003cli\u003e:ss —(长形式：\u003ccode\u003esamespace\u003c/code\u003e)保留空白类型：空白字符的类型被保留, 而不管替换字符串中使用的是什么空白字符。在上面的例子中, 我们使用换行作为替换, 但是原来的空白被保留了。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"方法形式\"\u003e方法形式\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eS///\u003c/code\u003e 操作符很好, 但是有时候有点笨拙。不要害怕, Raku 提供了 \u003ccode\u003e.subst\u003c/code\u003e 方法能满足你所有的替换需求并且消除你对 \u003ccode\u003e.subst/.substr\u003c/code\u003e 的困惑。下面来看例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eme\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003em\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个方法要么接收一个正则表达式要么接收一个普通的字符串作为它的第一个位置参数, 它是要在调用者里面(\u0026ldquo;meowmix\u0026rdquo;)查找的东西。第二个参数是替换字符串。\u003c/p\u003e\n\u003cp\u003e通过简单地把它们列为具名 Bool 参数, 你也可以使用副词。在 \u003ccode\u003eS///\u003c/code\u003e 形式中, 副词 \u003ccode\u003e:ss\u003c/code\u003e 和 \u003ccode\u003e:ii\u003c/code\u003e 分别表明 \u003ccode\u003e:s\u003c/code\u003e(使空白有意义) 的出现和  \u003ccode\u003e:i\u003c/code\u003e(不区分大小写的匹配) 的出现。在方法形式中, 你必须把这些副词应用到正则表达式自身身上：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLorem Ipsum Dolor Sit Amet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e l\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eii\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003es\u003c/span\u003e\u003cspan class=\"sr\"\u003e Ipsum Dolor\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eGipsum\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003eColor\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ess\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Borem Ipsum Dolor Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Lorem Gipsum Color Sit Amet\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"方法形式的捕获\"\u003e方法形式的捕获\u003c/h2\u003e\n\u003cp\u003e捕获对于替换操作来说不陌生, 所以我们来尝试捕获下方法调用形式的替换：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Use of Nil in string context  in block \u0026lt;unit\u0026gt; at test.p6 line 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# c\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e不是我们要找的。我们的替换字符串构建在达到 \u003ccode\u003e.subst\u003c/code\u003e 方法之前, 并且里面的 \u003ccode\u003e$0\u003c/code\u003e 变量实际上指向任何这个方法调用之前的东西, 而不是 \u003ccode\u003e.subst\u003c/code\u003e 正则表达式中的捕获。所以我们怎么来修正它呢？\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e.subst\u003c/code\u003e 方法的第二个参数也可以接受一个 \u003ca href=\"http://docs.raku.org/type/Callable\"\u003eCallable\u003c/a\u003e。在它里面, 你可以使用 \u003ccode\u003e$0, $1, ... $n\u003c/code\u003e 变量, 直到你想要的编号, 并从捕获中得到正确的值：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emeowmix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eme \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# cowmix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里, 我们为我们的 \u003cstrong\u003eCallable\u003c/strong\u003e 使用了尖号块儿, 但是 \u003cstrong\u003eWhateverCode\u003c/strong\u003e 和子例程也有效。每次替换都会调用这个 Callable, 并且把 \u003ca href=\"http://docs.raku.org/type/Match\"\u003eMatch\u003c/a\u003e 对象作为第一个位置参数传递给 Callable, 如果你需要访问它的话。\u003c/p\u003e\n\u003ch2 id=\"结论\"\u003e结论\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eS///\u003c/code\u003e 操作符在 Raku 中是 \u003ccode\u003es///\u003c/code\u003e 操作符的战友, 它不是修改原来的字符串, 而是拷贝原来的字符串, 修改, 然后返回修改过的版本。这个操作符的使用方式跟 Perl 5 中的非破坏性替换操作符的使用方式不同。作为备选, 方法版本的 \u003ccode\u003e.subst\u003c/code\u003e 也能使用。 方法形式和操作符形式的替换都能接收一组副词以修改它们的行为, 来满足你的需求。\u003c/p\u003e\n","text":"Raku: S/// 操作符 By Zoffix Znet\n来自 Perl 5 背景的我, 第一次使用 Raku 的非破坏性替换操作符 S/// 的经历就像下面这样:\n进展会更好的。我不但会改善错误信息, 而且会解释当前的所有事情。\n智能匹配 我有问题的原因是因为, 看到外形相似的操作符, 我就简单地把 Perl 5 中的绑定操作符(=~)转换为 Raku 中的智能匹配操作符(~~) 还期望它能正常工作。事实上我是异想天开。S/// 操作符没有文档, 并且结合令人困惑的(那个时候)警告信息, 这就是我痛苦的根源：\nmy $orig = \u0026#39;meowmix\u0026#39;; my $new = $orig ~~ S/me/c/; say $new; # OUTPUT warning: # Smartmatch with S/// can never succeed 这个丑陋的警告说这儿的 ~~ 操作符是个错误的选择并且确实如此。~~ 操作符不是 Perl 5 的 =~ 操作符的等价物。~~ 智能操作符把它左边的东西起了个叫做 $_ 的别名, 然后 ~~ 计算它右侧的东西, 然后在右侧这个东西身上调用 .ACCEPTS($_) 方法。这就是所有的魔法。\n所以上面的例子实际上发生了:\n我们到达 S/// 的时候, $orig 被起了个叫做 $_ 的别名。 S/// 非破坏性地在 $_ 身上执行了替换并返回那个结果字符串。这是智能匹配将要操作的东西。 智能匹配, 按照 Str 与 Str 相匹配的规则, 会根据替换是否发生来给出 True 或 False（令人困惑的是, True 意味着没发生） 结果一路下来, 我们并没有得到我们想要的：替换过的字符串。\n使用 Given 既然我们知道了 S/// 总是作用在 $_ 上并且返回替换后的结果, 很容易就想到几种方法把 $_ 设置为我们原来的字符串并把 S/// 的返回值收集回来, 我们来看几个例子：\nmy $orig = \u0026#39;meowmix\u0026#39;; my $new = S/me/c/ given $orig; say $orig; say $new; my @orig = \u0026lt;meow cow sow vow\u0026gt;; my @new = do for @orig { S/\\w+ \u0026lt;?before \u0026#39;ow\u0026#39;\u0026gt;/w/ }; say @orig; say @new; # OUTPUT: # meowmix # cowmix # [meow cow sow vow] # [wow wow wow wow] 第一个作用在单个值上。我们使用后置形式的 given 块儿, 这让我们避免了花括号（你可以使用 with 代替 given 得到同样的结果）。given $orig 会给 $orig 起个叫做 $_ 的别名。从输出来看, 原字符串没有被更改。\n第二个例子作用在数组中的一堆字符串身上并且我们使用 do 关键字来执行常规的 for 循环(那种情况下, 它把循环变量别名给 $_ 了)并把结果赋值给 @new 数组。再次, 输出显示原来的数组并没有发生改变。\n副词 S/// 操作符 - 就像 s/// 操作符和某些方法一样 - 允许你使用正则表达式副词：\ngiven \u0026#39;Lörem Ipsum Dolor Sit Amet\u0026#39; { say S:g /m/g/; # Löreg Ipsug Dolor Sit Aget say S:i /l/b/; # börem Ipsum Dolor Sit Amet say S:ii /l/b/; # Börem Ipsum Dolor Sit Amet say S:mm /o/u/; # Lürem Ipsum Dolor Sit Amet say S:nth(2) /m /g/; # Lörem Ipsug Dolor Sit Amet say S:x(2) /m /g/; # Löreg Ipsug Dolor Sit Amet say S:ss/Ipsum Dolor/Gipsum\\nColor/; # Lörem Gipsum Color Sit Amet say S:g:ii:nth(2) /m/g/; # Lörem Ipsug Dolor Sit Amet } 如你所见, 它们以 :foo 的形式添加在操作符 S 这个部件的后面。你可以大大方方地使用空白符号并且几个副词可以同时使用。下面是它们的意义：\n:g —(长形式：:global)全局匹配：替换掉所有的出现 :i —不区分大小写的匹配 :ii —(长形式： :samecase) 保留大小写：不管用作替换字母的大小写, 使用原来被替换的字母的大小写 :mm —(长形式：:samemark) 保留重音符号：在上面的例子中, 字母 o 上的分音符号被保留并被应用到替换字母 u 上 :nth(n) —只替换第 n 次出现的 :x(n) —至多替换 n 次（助记符: \u0026lsquo;x\u0026rsquo; 作为及时） :ss —(长形式：samespace)保留空白类型：空白字符的类型被保留, 而不管替换字符串中使用的是什么空白字符。在上面的例子中, 我们使用换行作为替换, 但是原来的空白被保留了。 方法形式 S/// 操作符很好, 但是有时候有点笨拙。不要害怕, Raku 提供了 .subst 方法能满足你所有的替换需求并且消除你对 .subst/.substr 的困惑。下面来看例子：\nsay \u0026#39;meowmix\u0026#39;.subst: \u0026#39;me\u0026#39;, \u0026#39;c\u0026#39;; say \u0026#39;meowmix\u0026#39;.subst: /m./, \u0026#39;c\u0026#39;; # OUTPUT: # cowmix # cowmix 这个方法要么接收一个正则表达式要么接收一个普通的字符串作为它的第一个位置参数, 它是要在调用者里面(\u0026ldquo;meowmix\u0026rdquo;)查找的东西。第二个参数是替换字符串。\n通过简单地把它们列为具名 Bool 参数, 你也可以使用副词。在 S/// 形式中, 副词 :ss 和 :ii 分别表明 :s(使空白有意义) 的出现和 :i(不区分大小写的匹配) 的出现。在方法形式中, 你必须把这些副词应用到正则表达式自身身上：\ngiven \u0026#39;Lorem Ipsum Dolor Sit Amet\u0026#39; { say .subst: /:i l/, \u0026#39;b\u0026#39;, :ii; say .subst: /:s Ipsum Dolor/, \u0026#34;Gipsum\\nColor\u0026#34;, :ss; } # OUTPUT: # Borem Ipsum Dolor Sit Amet # Lorem Gipsum Color Sit Amet 方法形式的捕获 捕获对于替换操作来说不陌生, 所以我们来尝试捕获下方法调用形式的替换：\nsay \u0026#39;meowmix\u0026#39;.subst: /me (.+)/, \u0026#34;c$0\u0026#34;; # OUTPUT: # Use of Nil in string context in block \u0026lt;unit\u0026gt; at test.p6 line 1 # c 不是我们要找的。我们的替换字符串构建在达到 .subst 方法之前, 并且里面的 $0 变量实际上指向任何这个方法调用之前的东西, 而不是 .subst 正则表达式中的捕获。所以我们怎么来修正它呢？\n.subst 方法的第二个参数也可以接受一个 Callable。在它里面, 你可以使用 $0, $1, ... $n 变量, 直到你想要的编号, 并从捕获中得到正确的值：\nsay \u0026#39;meowmix\u0026#39;.subst: /me (.+)/, -\u0026gt; { \u0026#34;c$0\u0026#34; }; # OUTPUT: # cowmix 这里, 我们为我们的 Callable 使用了尖号块儿, 但是 WhateverCode 和子例程也有效。每次替换都会调用这个 Callable, 并且把 Match 对象作为第一个位置参数传递给 Callable, 如果你需要访问它的话。\n结论 S/// 操作符在 Raku 中是 s/// 操作符的战友, 它不是修改原来的字符串, 而是拷贝原来的字符串, 修改, 然后返回修改过的版本。这个操作符的使用方式跟 Perl 5 中的非破坏性替换操作符的使用方式不同。作为备选, 方法版本的 .subst 也能使用。 方法形式和操作符形式的替换都能接收一组副词以修改它们的行为, 来满足你的需求。\n"},"name":"Raku 中的 S/// 操作符","published":"2021-07-11T00:00:00Z","summary":"The S Operator in Raku","type":"entry","url":"https://ohmycloud.github.io/notes/2016-01-28-the-s-operator-in-raku/"}
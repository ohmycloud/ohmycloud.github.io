{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003cp\u003e\u003cimg src=\"https://mojolicious.io/blog/2018/12/16/browser-diet/squirrel.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e您刚刚阅读了 \u003ca href=\"https://browserdiet.com/\"\u003e如何在浏览器中减轻体重，\u003c/a\u003e 并希望了解减少Mojo应用程序的效果。该过程的一部分是阻止浏览器请求几乎不变的文件。我花了一个充满咖啡因的下午试图用Mojolicious做到这一点。我一直在\u0026rsquo;围绕房子，\u003cem\u003e扰乱警报\u003c/em\u003e我直到最后才找到答案，有点像你最喜欢的圣诞节动画特别与一个小的林地生物叙述“Gruffalo的HTTP标题”。\u003c/p\u003e\n\u003ch1 id=\"儿童故事\"\u003e儿童故事\u003c/h1\u003e\n\u003cp\u003e我们心爱的小型林地生物需要显示一个森林日历，其中包含从数据库中提取的森林事件。Perl 可以获取事件数据并将其打包为JSON feed 流。Mojolicious 可以为每个用户准备具有正确 JSON feed 流的网页。使用一些JavaScript 库来显示 Web 日历，所有这些都可以在森林中使用。\u003c/p\u003e\n\u003cp\u003e除 JavaScript 库之外的所有内容都是轻量级的。每个人都知道, 如果不是每次都去下载 Javascript, 那么页面重载的速度会更快。那些库几个月都不会改变！如果只有客户端浏览器知道它可以使用上次下载的文件。\u003c/p\u003e\n\u003cp\u003e当然，秘诀是设置\u003ccode\u003eCache-Control\u003c/code\u003eHTTP 头的字段，但是\u003cem\u003e怎样设置呢\u003c/em\u003e？\u003c/p\u003e\n\u003ch2 id=\"首先有一匹马httpshttpdapacheorg-\"\u003e首先，有一\u003ca href=\"https://httpd.apache.org/\"\u003e匹马\u003c/a\u003e \u0026hellip;\u0026hellip;\u003c/h2\u003e\n\u003cp\u003e每个使用 Apache 的人都会考虑使用 \u003ca href=\"https://httpd.apache.org/docs/2.4/mod/mod_expires.html\"\u003emod_expires\u003c/a\u003e ，这看起来很容易，除了 Apache 没有被用来为网页提供服务。\u003c/p\u003e\n\u003cp\u003e\u0026hellip;但是马儿提到了一些甜蜜的 \u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\"\u003eCache-Control指令\u003c/a\u003e可以咀嚼，同时继续在早先下载的一些\u003ca href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching\"\u003eHTTP缓存\u003c/a\u003e页面上吃草 。小动物继续前进。\u003c/p\u003e\n\u003ch2 id=\"-然后有一只蟾蜍httpsperlmavencomdeploying-a-mojolicious-application\"\u003e\u0026hellip;\u0026hellip; \u003cem\u003e然后\u003c/em\u003e有一只\u003ca href=\"https://perlmaven.com/deploying-a-mojolicious-application\"\u003e蟾蜍\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e森林生物使用 Mojolicious附带的 \u003ca href=\"https://github.com/mojolicious/mojo/wiki/Hypnotoad-prefork-web-server\"\u003eHypnotoad\u003c/a\u003e Web服务器来为其页面提供服务。他们发现它非常适合他们的树栖生产环境。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://mojolicious.io/blog/2018/12/16/browser-diet/Hypnotoad.gif\" alt=\"所有荣耀都归于Hypnotoad\"\u003e\u003c/p\u003e\n\u003cp\u003e它可以设置HTTP标头将其转换为\u003ca href=\"https://mojolicious.org/perldoc/Mojolicious/Guides/Cookbook#Hypnotoad\"\u003e反向代理\u003c/a\u003e，但是流行的设置是将Hypnotoad 置于 \u003ca href=\"https://www.mind-it.info/2014/09/27/running-hypnotoad-behind-nginx/\"\u003eNginx\u003c/a\u003e 或Apache/mod_proxy后面。那些服务器应该让你玩\u003ccode\u003eExpires\u003c/code\u003e标题。但是蟾蜍没有\u003cem\u003e完全\u003c/em\u003e具备这种特殊的啮齿动物所需要的东西。\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e抛开\u003c/em\u003e - 不，我没有提到 \u003ca href=\"https://metacpan.org/pod/Plack\"\u003ePlack\u003c/a\u003e。也许如果我今年好，圣诞老人会 \u003ca href=\"http://blogs.perl.org/users/aristotle/2018/11/modern-perl-cgi.html\"\u003e告诉我\u003c/a\u003e 应该\u003ca href=\"http://blogs.perl.org/users/aristotle/2018/11/modern-perl-cgi.html\"\u003e如何\u003c/a\u003e使用它。可能与某事有关\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nn\"\u003ePlack::Response\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"n\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#39;Expires\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#39;Tue, 25 Dec 2018 07:28:00 GMT\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但我不知道，我的叙述者也没有。\u003c/p\u003e\n\u003ch2 id=\"-然后有一个独角兽httpsmojoliciousorg\"\u003e\u0026hellip;\u0026hellip; \u003cem\u003e然后\u003c/em\u003e有一个\u003ca href=\"https://mojolicious.org/\"\u003e独角兽\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e嗯，这很容易。只需使用标准的 \u003ca href=\"https://mojolicious.org/perldoc/Mojo/Headers#expires\"\u003eMojo::Headers\u003c/a\u003e 模块来设置\u003ccode\u003eExpires\u003c/code\u003e标头。\u003c/p\u003e\n\u003cp\u003e可是等等！这为一个不是那么大的页面设置了它。我们毛茸茸的朋友只想阻止 JavaScript 文件每次都重新加载，这会破坏 Sciuridae 的移动体验。Hmmmm。\u003c/p\u003e\n\u003ch2 id=\"-然后有一只犀牛httpshoporeillycomproduct9780596805531do\"\u003e\u0026hellip;\u0026hellip; \u003cem\u003e然后\u003c/em\u003e有一只\u003ca href=\"http://shop.oreilly.com/product/9780596805531.do\"\u003e犀牛\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"https://mojolicious.io/blog/2018/12/16/browser-diet/rhino.jpg\" alt=\"JavaScript犀牛图像\"\u003e\u003c/p\u003e\n\u003cp\u003e如果 JavaScript 存在于\u003ccode\u003e\u0026lt;head\u0026gt;\u003c/code\u003e标记中，则在下载脚本之前不会解析页面正文。有些人通过将脚本放在结束\u003ccode\u003e\u0026lt;/body\u0026gt;\u003c/code\u003e标记之前来解决这个问题，但 JS 仍然需要下载。有几个属性隐藏在灌木丛中。\u003ccode\u003eAsync\u003c/code\u003e 和 \u003ccode\u003edefer\u003c/code\u003e告诉浏览器在下载 JavaScript 时继续解析HTML。这两个 \u003ca href=\"https://flaviocopes.com/javascript-async-defer/\"\u003e聪明的\u003c/a\u003e \u003ca href=\"https://bitsofco.de/async-vs-defer/\"\u003e猫头鹰\u003c/a\u003e 可以帮助决定使用哪一个。\u003c/p\u003e\n\u003cp\u003e告诉您的脚本在模板中带有此\u003ca href=\"https://mojolicious.org/perldoc/Mojolicious/Plugin/TagHelpers#javascript\"\u003e标记助手的\u003c/a\u003e主页面后加载\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e%= javascript \u0026#39;/js/lib/jquery.min.js\u0026#39;, defer =\u0026gt; undef\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这个产生\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;script defer src=\u0026#34;/path/to/script.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e如果你想要它在 \u003ccode\u003e\u0026lt;head\u0026gt;\u003c/code\u003e 里，你必须把它放在你的布局中，否则模板会替你做。\u003c/p\u003e\n\u003ch2 id=\"最后有个戴帽子的httpsmetacpanorgauthorldidry男人httpsmetacpanorgauthorldidry\"\u003e\u0026hellip;\u0026hellip;最后，有个\u003ca href=\"https://metacpan.org/author/LDIDRY\"\u003e戴帽子的\u003c/a\u003e\u003ca href=\"https://metacpan.org/author/LDIDRY\"\u003e男人\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e\u003cimg src=\"https://mojolicious.io/static/ldidry.png\" alt=\"吕克迪德里的重头戏\"\u003e\u003c/p\u003e\n\u003cp\u003e“但是 JavaScript 需要加载 \u003cstrong\u003eFIRST\u003c/strong\u003e！”，喋喋不休地说道。\u003c/p\u003e\n\u003cp\u003e叹息 - 这真的是一个苛刻的松鼠小球藻。\u003c/p\u003e\n\u003cp\u003e嗯\u0026hellip;\u0026hellip;这\u003cem\u003e是\u003c/em\u003e圣诞节，但是你需要安装去年由\u003ca href=\"https://fiat-tux.fr/\"\u003eLuc Didry\u003c/a\u003e为你编写 的 \u003ca href=\"https://metacpan.org/pod/Mojolicious::Plugin::StaticCache\"\u003eStaticCache插件\u003c/a\u003e。它为Mojolicious提供的所有静态文件设置标头。使用目录中的 \u003cstrong\u003enut.js\u003c/strong\u003e和 \u003cstrong\u003enut.css\u003c/strong\u003e 文件（当然适当\u003ca href=\"https://www.minifier.org/\"\u003e缩小\u003c/a\u003e），它们只应下载一次并使用缓存版本直到它过期。默认的 \u003cstrong\u003emax-age\u003c/strong\u003e 是30天，如果你想要，你甚至可以在开发过程中用 ``even_in_dev =\u0026gt; 1` 缓存。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://mojolicious.io/blog/2018/12/16/browser-diet/speedtest_before_StaticCache.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e森林里的喜鹊用3个JavaScript库，3个CSS文件和4个logo弄乱了日历。当然，最大和最闪亮的只有66 kB，整个系列只有微不足道的164 kB，但带宽在荒野中是宝贵的。在使用StaticCache插件之前，日历在Google的PageSpeed Insights上评分为 \u003cstrong\u003e92\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e加载了StaticCache插件\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub startup {\n    my $self = shift;\n\n    $self-\u0026gt;plugin(\u0026#39;StaticCache\u0026#39; =\u0026gt; { even_in_dev =\u0026gt; 1 });\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://mojolicious.io/blog/2018/12/16/browser-diet/speedtest_with_StaticCache.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e页面速度现在是 \u003cstrong\u003e93\u003c/strong\u003e !!!! 哇！这个\u003ca href=\"https://xkcd.com/670\"\u003e更快！\u003c/a\u003e Nutgel Tufty-tail 说，森林里的每个人都欢呼。\u003c/p\u003e\n\u003cp\u003e而\u003cem\u003e这\u003c/em\u003e，亲爱的读者，是松鼠学会了如何储藏坚果过冬\u0026hellip;\u0026hellip;在\u003cem\u003e高速缓存中\u003c/em\u003e。晚安，小孩，好梦。\u003c/p\u003e\n\u003ch2 id=\"自己试试吧\"\u003e自己试试吧\u003c/h2\u003e\n\u003cp\u003eFirefox，Chrome和Opera 的\u003ca href=\"https://github.com/zenorocha/browser-calories\"\u003e浏览器卡路里\u003c/a\u003e插件将您网页的文件大小分解为一个很好的小交通灯报告，根据用户可配置的限制来衡量 HTML，图像，CSS，JavaScript 和页面的其他部分是可以接受的\u003c/p\u003e\n\u003cp\u003e谷歌的\u003ca href=\"https://developers.google.com/speed/pagespeed/insights\"\u003ePageSpeed Insights\u003c/a\u003e 衡量手机和桌面的性能。\u003c/p\u003e\n\u003cp\u003e希望，以叙事方式写作的越来越尴尬的尝试并没有妨碍一两个新想法。 如果我错过了什么，请\u003ca href=\"https://github.com/duffee/Mojolicious_session_example\"\u003e告诉我\u003c/a\u003e。\u003c/p\u003e\n","text":"\n您刚刚阅读了 如何在浏览器中减轻体重， 并希望了解减少Mojo应用程序的效果。该过程的一部分是阻止浏览器请求几乎不变的文件。我花了一个充满咖啡因的下午试图用Mojolicious做到这一点。我一直在\u0026rsquo;围绕房子，扰乱警报我直到最后才找到答案，有点像你最喜欢的圣诞节动画特别与一个小的林地生物叙述“Gruffalo的HTTP标题”。\n儿童故事 我们心爱的小型林地生物需要显示一个森林日历，其中包含从数据库中提取的森林事件。Perl 可以获取事件数据并将其打包为JSON feed 流。Mojolicious 可以为每个用户准备具有正确 JSON feed 流的网页。使用一些JavaScript 库来显示 Web 日历，所有这些都可以在森林中使用。\n除 JavaScript 库之外的所有内容都是轻量级的。每个人都知道, 如果不是每次都去下载 Javascript, 那么页面重载的速度会更快。那些库几个月都不会改变！如果只有客户端浏览器知道它可以使用上次下载的文件。\n当然，秘诀是设置Cache-ControlHTTP 头的字段，但是怎样设置呢？\n首先，有一匹马 \u0026hellip;\u0026hellip; 每个使用 Apache 的人都会考虑使用 mod_expires ，这看起来很容易，除了 Apache 没有被用来为网页提供服务。\n\u0026hellip;但是马儿提到了一些甜蜜的 Cache-Control指令可以咀嚼，同时继续在早先下载的一些HTTP缓存页面上吃草 。小动物继续前进。\n\u0026hellip;\u0026hellip; 然后有一只蟾蜍 森林生物使用 Mojolicious附带的 Hypnotoad Web服务器来为其页面提供服务。他们发现它非常适合他们的树栖生产环境。\n它可以设置HTTP标头将其转换为反向代理，但是流行的设置是将Hypnotoad 置于 Nginx 或Apache/mod_proxy后面。那些服务器应该让你玩Expires标题。但是蟾蜍没有完全具备这种特殊的啮齿动物所需要的东西。\n抛开 - 不，我没有提到 Plack。也许如果我今年好，圣诞老人会 告诉我 应该如何使用它。可能与某事有关\nPlack::Response-\u0026gt;header(\u0026#39;Expires\u0026#39; =\u0026gt; \u0026#39;Tue, 25 Dec 2018 07:28:00 GMT\u0026#39;); 但我不知道，我的叙述者也没有。\n\u0026hellip;\u0026hellip; 然后有一个独角兽 嗯，这很容易。只需使用标准的 Mojo::Headers 模块来设置Expires标头。\n可是等等！这为一个不是那么大的页面设置了它。我们毛茸茸的朋友只想阻止 JavaScript 文件每次都重新加载，这会破坏 Sciuridae 的移动体验。Hmmmm。\n\u0026hellip;\u0026hellip; 然后有一只犀牛 如果 JavaScript 存在于\u0026lt;head\u0026gt;标记中，则在下载脚本之前不会解析页面正文。有些人通过将脚本放在结束\u0026lt;/body\u0026gt;标记之前来解决这个问题，但 JS 仍然需要下载。有几个属性隐藏在灌木丛中。Async 和 defer告诉浏览器在下载 JavaScript 时继续解析HTML。这两个 聪明的 猫头鹰 可以帮助决定使用哪一个。\n告诉您的脚本在模板中带有此标记助手的主页面后加载\n%= javascript \u0026#39;/js/lib/jquery.min.js\u0026#39;, defer =\u0026gt; undef 这个产生\n\u0026lt;script defer src=\u0026#34;/path/to/script.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 如果你想要它在 \u0026lt;head\u0026gt; 里，你必须把它放在你的布局中，否则模板会替你做。\n\u0026hellip;\u0026hellip;最后，有个戴帽子的男人 “但是 JavaScript 需要加载 FIRST！”，喋喋不休地说道。\n叹息 - 这真的是一个苛刻的松鼠小球藻。\n嗯\u0026hellip;\u0026hellip;这是圣诞节，但是你需要安装去年由Luc Didry为你编写 的 StaticCache插件。它为Mojolicious提供的所有静态文件设置标头。使用目录中的 nut.js和 nut.css 文件（当然适当缩小），它们只应下载一次并使用缓存版本直到它过期。默认的 max-age 是30天，如果你想要，你甚至可以在开发过程中用 ``even_in_dev =\u0026gt; 1` 缓存。\n森林里的喜鹊用3个JavaScript库，3个CSS文件和4个logo弄乱了日历。当然，最大和最闪亮的只有66 kB，整个系列只有微不足道的164 kB，但带宽在荒野中是宝贵的。在使用StaticCache插件之前，日历在Google的PageSpeed Insights上评分为 92。\n加载了StaticCache插件\nsub startup { my $self = shift; $self-\u0026gt;plugin(\u0026#39;StaticCache\u0026#39; =\u0026gt; { even_in_dev =\u0026gt; 1 }); ... } 页面速度现在是 93 !!!! 哇！这个更快！ Nutgel Tufty-tail 说，森林里的每个人都欢呼。\n而这，亲爱的读者，是松鼠学会了如何储藏坚果过冬\u0026hellip;\u0026hellip;在高速缓存中。晚安，小孩，好梦。\n自己试试吧 Firefox，Chrome和Opera 的浏览器卡路里插件将您网页的文件大小分解为一个很好的小交通灯报告，根据用户可配置的限制来衡量 HTML，图像，CSS，JavaScript 和页面的其他部分是可以接受的\n谷歌的PageSpeed Insights 衡量手机和桌面的性能。\n希望，以叙事方式写作的越来越尴尬的尝试并没有妨碍一两个新想法。 如果我错过了什么，请告诉我。\n"},"name":"第十六天 - Mojolicious 之圣诞节前的开胃菜 - 儿童故事","published":"2018-12-17T21:12:02Z","summary":"您刚刚阅读了 如何在浏览器中减轻体重， 并希望了解减少Mojo应用程序的效果。该过程的一部分是阻止浏览器请求几乎不变的文件。我花了一个充满咖啡因的下午试图用Mojolicious做到这一点。我一直在\u0026rsquo;围绕房子，扰乱警报我直到最后才找到答案，有点像你最喜欢的圣诞节动画特别与一个小的林地生物叙述“Gruffalo的HTTP标题”。\n儿童故事 我们心爱的小型林地生物需要显示一个森林日历，其中包含从数据库中提取的森林事件。Perl 可以获取事件数据并将其打包为JSON feed 流。Mojolicious 可以为每个用户准备具有正确 JSON feed 流的网页。使用一些JavaScript 库来显示 Web 日历，所有这些都可以在森林中使用。\n除 JavaScript 库之外的所有内容都是轻量级的。每个人都知道, 如果不是每次都去下载 Javascript, 那么页面重载的速度会更快。那些库几个月都不会改变！如果只有客户端浏览器知道它可以使用上次下载的文件。\n当然，秘诀是设置Cache-ControlHTTP 头的字段，但是怎样设置呢？\n首先，有一匹马 \u0026hellip;\u0026hellip; 每个使用 Apache 的人都会考虑使用 mod_expires ，这看起来很容易，除了 Apache 没有被用来为网页提供服务。\n\u0026hellip;但是马儿提到了一些甜蜜的 Cache-Control指令可以咀嚼，同时继续在早先下载的一些HTTP缓存页面上吃草 。小动物继续前进。\n\u0026hellip;\u0026hellip; 然后有一只蟾蜍 森林生物使用 Mojolicious附带的 Hypnotoad Web服务器来为其页面提供服务。他们发现它非常适合他们的树栖生产环境。\n它可以设置HTTP标头将其转换为反向代理，但是流行的设置是将Hypnotoad 置于 Nginx 或Apache/mod_proxy后面。那些服务器应该让你玩Expires标题。但是蟾蜍没有完全具备这种特殊的啮齿动物所需要的东西。\n抛开 - 不，我没有提到 Plack。也许如果我今年好，圣诞老人会 告诉我 应该如何使用它。可能与某事有关\nPlack::Response-\u0026gt;header(\u0026#39;Expires\u0026#39; =\u0026gt; \u0026#39;Tue, 25 Dec 2018 07:28:00 GMT\u0026#39;); 但我不知道，我的叙述者也没有。\n\u0026hellip;\u0026hellip; 然后有一个独角兽 嗯，这很容易。只需使用标准的 Mojo::Headers 模块来设置Expires标头。\n可是等等！这为一个不是那么大的页面设置了它。我们毛茸茸的朋友只想阻止 JavaScript 文件每次都重新加载，这会破坏 Sciuridae 的移动体验。Hmmmm。","type":"entry","url":"http://localhost:1313/notes/a-pre-christmas-diet-for-mojolicious/"}
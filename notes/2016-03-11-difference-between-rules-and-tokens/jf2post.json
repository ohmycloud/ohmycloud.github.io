{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"content":{"html":"\u003cp\u003e在 grammar 中, 有两个 \u003cstrong\u003eregex\u003c/strong\u003e 的变体, \u003cstrong\u003erule\u003c/strong\u003e 和 \u003cstrong\u003etoken\u003c/strong\u003e。\u003cstrong\u003erule\u003c/strong\u003e 默认不会回溯。\u003cstrong\u003erule\u003c/strong\u003e 与 \u003cstrong\u003etoken\u003c/strong\u003e 的一个重要区别就是, \u003ccode\u003erule\u003c/code\u003e 这样的正则采取了 \u003ccode\u003e:sigspace\u003c/code\u003e 修饰符。 \u003ccode\u003erule\u003c/code\u003e 实际上是\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eregex :ratchet :sigspace { ... }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e的简写。ratchet 这个单词的意思是: (防倒转的)棘齿, 意思它是不能回溯的! 而 \u003ccode\u003e:sigspace\u003c/code\u003e 表明正则中的空白是有意义的, 而 \u003cstrong\u003etoken\u003c/strong\u003e 实际上是\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eregex :ratchet { ... }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e的简写。所以在 \u003cstrong\u003etoken\u003c/strong\u003e 中, 若不是显式地写上 \u003ccode\u003e\\s\u003c/code\u003e、\u003ccode\u003e\\h\u003c/code\u003e、\u003ccode\u003e\\n\u003c/code\u003e 等空白符号, 其它情况下就好像空白隐身了一样, 虽然你写了, 但是编译器却视而不见。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eToken::Rule::Difference\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# 下面三者等价\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# rule TOP { [\\w+]+ % \u0026#39; \u0026#39; | [\\d+]+ % \u0026#39; \u0026#39;   }  等价于\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# rule TOP { | [\\w+]+ % \u0026#39; \u0026#39; | [\\d+]+ % \u0026#39; \u0026#39; }  等价于\u003c/span\u003e\n    \u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e               \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e             \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"c1\"\u003e# $=finish.lines 中的每一行末尾都没有换行符\u003c/span\u003e\n\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$=finish\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eToken::Rule::Difference\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003e=finish\u003c/span\u003e\u003cspan class=\"sd\"\u003e\n\u003c/span\u003e\u003cspan class=\"sd\"\u003etoken takes whitespace invisible unless with sigspace\n\u003c/span\u003e\u003cspan class=\"sd\"\u003erule is a token without sigspace\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e2015 12 25\n\u003c/span\u003e\u003cspan class=\"sd\"\u003e2016 01 07\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e说明在 \u003cstrong\u003erule\u003c/strong\u003e 中, \u003ccode\u003e|\u003c/code\u003e 左右两边的空格会被忽略, 这通常是为了使格式对齐, 看起来不乱。另外 \u003cstrong\u003erule\u003c/strong\u003e 中, 开头和末尾的空白也会被忽略。\u003c/p\u003e\n\u003cp\u003e如果每一行都带有换行符呢？\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eGrammar::Debugger\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eToken::Rule::Difference\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# token TOP { ^ [\u0026lt;line\u0026gt;\\n]+ $ }\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# token line {\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#     | [\\w+]+ % \u0026#39; \u0026#39;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e#     | [\\d+]+ % \u0026#39; \u0026#39;\u003c/span\u003e\n    \u003cspan class=\"c1\"\u003e# }\u003c/span\u003e\n\n    \u003cspan class=\"c1\"\u003e# 等价于\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ewrap\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ewrap\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n    \u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e         \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e-\u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"sr\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOF/;\u003c/span\u003e\u003cspan class=\"s\"\u003e\n\u003c/span\u003e\u003cspan class=\"s\"\u003etoken takes whitespace invisible unless with sigspace\n\u003c/span\u003e\u003cspan class=\"s\"\u003erule is a token without sigspace\n\u003c/span\u003e\u003cspan class=\"s\"\u003e2015-12-25 12:23\n\u003c/span\u003e\u003cspan class=\"s\"\u003e2016-01-07 13:45\n\u003c/span\u003e\u003cspan class=\"s\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003eEOF\u003c/span\u003e\n\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$parse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eToken::Rule::Difference\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$parse\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"token-vs-rule\"\u003etoken vs. rule\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eWhen we use rule in place of token, any whitespace after anatom is turned into a non-capturing call to ws\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e这句话是说, 在 \u003cstrong\u003erule\u003c/strong\u003e 中, 任何跟在原子(atom)后面的空白会变成非捕获的 \u003ccode\u003ews\u003c/code\u003e 调用, 即 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e,\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003eentry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e等价于:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eentry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"ow\"\u003ews\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"ow\"\u003ews\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"ow\"\u003ews\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# . 抑制了捕获\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 grammar 中, 我们继承了默认的 \u003ccode\u003ews\u003c/code\u003e, 但是我们也可以提供自己的 \u003cstrong\u003ews\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ews\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 匹配水平空白, 不包括换行\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003erule 中空白的使用:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eSwift          is hard    to  learn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eword\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003erule\u003c/span\u003e  \u003cspan class=\"nf\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eword\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e逗号附近的方括号保证了 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 调用产生的空白作为分割符的一部分。这利用了 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 的一个特点：\u003c/p\u003e\n\u003cp\u003e在两个 \u003ccode\u003e\\w\u003c/code\u003e 之间解释为 \u003ccode\u003e\\s+\u003c/code\u003e, 其它地方解释为 \u003ccode\u003e\\s*\u003c/code\u003e。\u003c/p\u003e\n","text":"在 grammar 中, 有两个 regex 的变体, rule 和 token。rule 默认不会回溯。rule 与 token 的一个重要区别就是, rule 这样的正则采取了 :sigspace 修饰符。 rule 实际上是\nregex :ratchet :sigspace { ... } 的简写。ratchet 这个单词的意思是: (防倒转的)棘齿, 意思它是不能回溯的! 而 :sigspace 表明正则中的空白是有意义的, 而 token 实际上是\nregex :ratchet { ... } 的简写。所以在 token 中, 若不是显式地写上 \\s、\\h、\\n 等空白符号, 其它情况下就好像空白隐身了一样, 虽然你写了, 但是编译器却视而不见。\ngrammar Token::Rule::Difference { # 下面三者等价 # rule TOP { [\\w+]+ % \u0026#39; \u0026#39; | [\\d+]+ % \u0026#39; \u0026#39; } 等价于 # rule TOP { | [\\w+]+ % \u0026#39; \u0026#39; | [\\d+]+ % \u0026#39; \u0026#39; } 等价于 rule TOP {|[\\w+]+%\u0026#39;\u0026#39;|[\\d+]+%\u0026#39;\u0026#39;} } # $=finish.lines 中的每一行末尾都没有换行符 for $=finish.lines -\u0026gt; $line { print($line); say Token::Rule::Difference.parse($line) } =finishtoken takes whitespace invisible unless with sigspace rule is a token without sigspace 2015 12 25 2016 01 07 说明在 rule 中, | 左右两边的空格会被忽略, 这通常是为了使格式对齐, 看起来不乱。另外 rule 中, 开头和末尾的空白也会被忽略。\n如果每一行都带有换行符呢？\nuse Grammar::Debugger; grammar Token::Rule::Difference { # token TOP { ^ [\u0026lt;line\u0026gt;\\n]+ $ } # token line { # | [\\w+]+ % \u0026#39; \u0026#39; # | [\\d+]+ % \u0026#39; \u0026#39; # } # 等价于 rule TOP {^\u0026lt;wrap\u0026gt;+$} token wrap {\u0026lt;line\u0026gt;} rule line {[\\w+]+%\u0026#39;\u0026#39;|[\\d+]+%\u0026lt;[-\\s:]\u0026gt;} } my $str = q:to/EOF/;token takes whitespace invisible unless with sigspace rule is a token without sigspace 2015-12-25 12:23 2016-01-07 13:45 EOF my $parse = Token::Rule::Difference.parse($str); say $parse; token vs. rule  When we use rule in place of token, any whitespace after anatom is turned into a non-capturing call to ws\n 这句话是说, 在 rule 中, 任何跟在原子(atom)后面的空白会变成非捕获的 ws 调用, 即 \u0026lt;.ws\u0026gt;,\nrule entry {\u0026lt;key\u0026gt;\u0026#39;=\u0026#39;\u0026lt;value\u0026gt;} 等价于:\ntoken entry {\u0026lt;key\u0026gt;\u0026lt;.ws\u0026gt;\u0026#39;=\u0026#39;\u0026lt;.ws\u0026gt;\u0026lt;value\u0026gt;\u0026lt;.ws\u0026gt;} # . 抑制了捕获 在 grammar 中, 我们继承了默认的 ws, 但是我们也可以提供自己的 ws:\ntoken ws {\\h*} # 匹配水平空白, 不包括换行 rule 中空白的使用:\nmy $str = \u0026#34;Swift is hard to learn\u0026#34;; my token word {\\w+} my rule line {\u0026lt;word\u0026gt;+%[\u0026#39;,\u0026#39;]} $str ~~ m:g/\u0026lt;line\u0026gt;/; 逗号附近的方括号保证了 \u0026lt;.ws\u0026gt; 调用产生的空白作为分割符的一部分。这利用了 \u0026lt;.ws\u0026gt; 的一个特点：\n在两个 \\w 之间解释为 \\s+, 其它地方解释为 \\s*。\n"},"name":"token 和 rule 的区别","published":"2021-07-12T00:00:00+08:00","summary":"Difference Between Rules and Tokens","type":"entry","url":"https://ohmyweekly.github.io/notes/2016-03-11-difference-between-rules-and-tokens/"}
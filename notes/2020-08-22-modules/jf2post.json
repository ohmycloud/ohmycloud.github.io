{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003ch1 id=\"模块测试版\"\u003e模块测试版\u003c/h1\u003e\n\u003cp\u003e模块允许用户扩展 Flink 的内置对象，比如定义一些行为类似 Flink 内置函数的功能。它们是可插拔的，虽然 Flink 提供了一些预建模块，但用户可以编写自己的模块。\u003c/p\u003e\n\u003cp\u003e例如，用户可以定义自己的地理函数，并将其作为内置函数插入 Flink，以便在 Flink SQL 和 Table API 中使用。又比如，用户可以加载一个现成的 Hive 模块，将 Hive 内置函数作为 Flink 内置函数使用。\u003c/p\u003e\n\u003ch2 id=\"模块类型\"\u003e模块类型\u003c/h2\u003e\n\u003ch3 id=\"coremodule\"\u003eCoreModule\u003c/h3\u003e\n\u003cp\u003eCoreModule 包含了 Flink 的所有系统（内置）功能，并且默认被加载。\u003c/p\u003e\n\u003ch3 id=\"hivemodule\"\u003eHiveModule\u003c/h3\u003e\n\u003cp\u003eHiveModule 作为 Flink 的系统函数，向 SQL 和 Table API 用户提供 Hive 内置函数。Flink 的 Hive 文档提供了设置该模块的全部细节。\u003c/p\u003e\n\u003ch3 id=\"用户定义模块\"\u003e用户定义模块\u003c/h3\u003e\n\u003cp\u003e用户可以通过实现 Module 接口来开发自定义模块。为了在 SQL CLI 中使用自定义模块，用户应该通过实现 ModuleFactory 接口同时开发一个模块和它对应的模块工厂。\u003c/p\u003e\n\u003cp\u003e模块工厂定义了一组属性，用于在 SQL CLI 引导时配置模块。属性被传递给发现服务，服务会尝试将属性与模块工厂进行匹配，并实例化一个相应的模块实例。\u003c/p\u003e\n\u003ch2 id=\"命名空间和解析顺序\"\u003e命名空间和解析顺序\u003c/h2\u003e\n\u003cp\u003e模块提供的对象被认为是 Flink 系统（内置）对象的一部分；因此，它们没有任何命名空间。\u003c/p\u003e\n\u003cp\u003e当有两个同名的对象存在于两个模块中时，Flink 总是将对象引用解析为第一个加载模块中的对象。\u003c/p\u003e\n\u003ch2 id=\"模块-api\"\u003e模块 API\u003c/h2\u003e\n\u003ch3 id=\"装载和卸载模块\"\u003e装载和卸载模块\u003c/h3\u003e\n\u003cp\u003e用户可以在现有的 Flink 会话中加载和卸载模块。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eScala\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-scala\" data-lang=\"scala\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etableEnv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eloadModule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myModule\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomModule\u003c/span\u003e\u003cspan class=\"o\"\u003e());\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etableEnv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eunloadModule\u003c/span\u003e\u003cspan class=\"o\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;myModule\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eYAML\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e所有使用 YAML 定义的模块都必须提供一个 \u003ccode\u003etype\u003c/code\u003e 属性来指定类型。以下类型是开箱即用的。\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:left\"\u003eCatalog\u003c/th\u003e\n\u003cth style=\"text-align:left\"\u003eType Value\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eCoreModule\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003ecore\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:left\"\u003eHiveModule\u003c/td\u003e\n\u003ctd style=\"text-align:left\"\u003ehive\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nt\"\u003emodules\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecore\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ecore\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e   \u003c/span\u003e- \u003cspan class=\"nt\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003emyhive\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"w\"\u003e     \u003c/span\u003e\u003cspan class=\"nt\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003ehive\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"列出可用的模块\"\u003e列出可用的模块\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eScala\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-scala\" data-lang=\"scala\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etableEnv\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elistModules\u003c/span\u003e\u003cspan class=\"o\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eSQL\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eFlink SQL\u0026gt; SHOW MODULES;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e原文链接: \u003ca href=\"https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/modules.html\"\u003ehttps://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/modules.html\u003c/a\u003e\u003c/p\u003e\n","text":"模块测试版 模块允许用户扩展 Flink 的内置对象，比如定义一些行为类似 Flink 内置函数的功能。它们是可插拔的，虽然 Flink 提供了一些预建模块，但用户可以编写自己的模块。\n例如，用户可以定义自己的地理函数，并将其作为内置函数插入 Flink，以便在 Flink SQL 和 Table API 中使用。又比如，用户可以加载一个现成的 Hive 模块，将 Hive 内置函数作为 Flink 内置函数使用。\n模块类型 CoreModule CoreModule 包含了 Flink 的所有系统（内置）功能，并且默认被加载。\nHiveModule HiveModule 作为 Flink 的系统函数，向 SQL 和 Table API 用户提供 Hive 内置函数。Flink 的 Hive 文档提供了设置该模块的全部细节。\n用户定义模块 用户可以通过实现 Module 接口来开发自定义模块。为了在 SQL CLI 中使用自定义模块，用户应该通过实现 ModuleFactory 接口同时开发一个模块和它对应的模块工厂。\n模块工厂定义了一组属性，用于在 SQL CLI 引导时配置模块。属性被传递给发现服务，服务会尝试将属性与模块工厂进行匹配，并实例化一个相应的模块实例。\n命名空间和解析顺序 模块提供的对象被认为是 Flink 系统（内置）对象的一部分；因此，它们没有任何命名空间。\n当有两个同名的对象存在于两个模块中时，Flink 总是将对象引用解析为第一个加载模块中的对象。\n模块 API 装载和卸载模块 用户可以在现有的 Flink 会话中加载和卸载模块。\nScala tableEnv.loadModule(\u0026#34;myModule\u0026#34;, new CustomModule()); tableEnv.unloadModule(\u0026#34;myModule\u0026#34;); YAML 所有使用 YAML 定义的模块都必须提供一个 type 属性来指定类型。以下类型是开箱即用的。\nCatalog Type Value CoreModule core HiveModule hive modules: - name: core type: core - name: myhive type: hive 列出可用的模块 Scala tableEnv.listModules(); SQL Flink SQL\u0026gt; SHOW MODULES; 原文链接: https://ci.apache.org/projects/flink/flink-docs-release-1.11/dev/table/modules.html\n"},"name":"模块","published":"2020-08-22T00:00:00Z","summary":"Modules","type":"entry","url":"https://ohmycloud.github.io/notes/2020-08-22-modules/"}
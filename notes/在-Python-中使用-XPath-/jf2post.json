{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003ch2 id=\"根据字节点中的属性值提取父节点\"\u003e根据字节点中的属性值提取父节点\u003c/h2\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003e今天使用 Python 的 lxml 模块来提取网页中的内容, 有一个 XPath 的用法不明白, 问题是， \u003ccode\u003etable\u003c/code\u003e 子节点下有一系列 \u003ccode\u003etr\u003c/code\u003e 子节点, 每个 \u003ccode\u003etr\u003c/code\u003e 子节点里有 3 列 (\u003ccode\u003etd\u003c/code\u003e), 如果 td 中 style 属性的值为 \u003ccode\u003ecolor: 0\u003c/code\u003e， 那么就不提取它所属的这一 tr 子节点。\u003c/p\u003e\n\u003cp\u003e查了很久 stackoverflow 才解决, 方法一：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kn\"\u003efrom\u003c/span\u003e \u003cspan class=\"nn\"\u003elxml\u003c/span\u003e \u003cspan class=\"kn\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eetree\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ehtml\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;html\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;table\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;tr id=\u0026#34;id_l107\u0026#34; class=\u0026#34;new nick nick_cxreg\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;05:07\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td style=\u0026#34;color: #8d8100\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;cxreg\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;probably useful\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;/tr\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;tr id=\u0026#34;id_l108\u0026#34; class=\u0026#34;new nick nick_mask\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;05:09\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td style=\u0026#34;color: #8d8100\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;mask\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;maybe better directed at \u0026lt;a href=\u0026#34;/moarvm/today\u0026#34;\u0026gt;#moarvm\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;/tr\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;tr id=\u0026#34;id_l74\u0026#34; class=\u0026#34;cont special dark\u0026#34;\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;02:37\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td style=\u0026#34;color: 0\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\t\u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;mcmillhj joined \u0026lt;a href=\u0026#34;/raku/today\u0026#34;\u0026gt;#raku\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;/tr\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;table\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026lt;/html\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e\u0026#39;\u0026#39;\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eselector\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eetree\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eHTML\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ehtml\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003expath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;//tr[descendant::td[@style!=\u0026#34;color: 0\u0026#34;]]/td/text()\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003eeach\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003econtent\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eeach\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecxreg\nprobably useful: \nmask\nmaybe better directed at \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e说明得到我们想要的结果了。怎么验证我们取得的是两个 tr 呢？\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003econtent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eselector\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003expath\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;//tr[descendant::td[@style!=\u0026#34;color: 0\u0026#34;]]\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印出\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;Element tr at 0x139c3b0\u0026gt;\n\u0026lt;Element tr at 0x139c368\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e说明的确提取出了 2 个 tr 元素。descendant 是后代的意思。上面那句代码意思是\u003c/p\u003e\n\u003cp\u003e过滤 tr 元素, 如果 tr 的后代元素 td 的属性 style 值不为 \u0026ldquo;color: 0\u0026rdquo;, 那么就提取这个 tr 子节点。否则不提取。\u003c/p\u003e\n\u003cp\u003e方法二，先过滤掉 td 然后使用 \u003ccode\u003e..\u003c/code\u003e 语法返回到父级元素:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003econtent = selector.xpath(\u0026#39;//tr/td[starts-with(@style,\u0026#34;color: #\u0026#34;)]/../td/text()\u0026#39;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这里找到 td 元素中属性以 \u003ccode\u003ecolor: #\u003c/code\u003e开头的 td (过滤掉了 \u003ccode\u003ecolor: 0\u003c/code\u003e 这样的 td), 然后使用 \u003ccode\u003e..\u003c/code\u003e 语法得到只含有 \u003ccode\u003ecolor: #\u003c/code\u003e 子元素的 tr 父节点。以上两种方法异曲同工, 殊途同归。并且方法二最后得到的也是两个 tr 元素:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003econtent = selector.xpath(\u0026#39;//tr/td[starts-with(@style,\u0026#34;color: #\u0026#34;)]/..\u0026#39;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e打印：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;Element tr at 0x222f170\u0026gt;\n\u0026lt;Element tr at 0x222f198\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e程序最后主要代码如下:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003econtent = selector.xpath(\u0026#39;//tr[descendant::td[@style!=\u0026#34;color: 0\u0026#34;]]\u0026#39;)\nfor each in content:\n    info = each.xpath(\u0026#39;string(.)\u0026#39;)\n    msg = info.replace(\u0026#39;\\n\u0026#39;, \u0026#39;\u0026#39;)\n    print(msg)\n    print(\u0026#39;-\u0026#39; * 85)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"http://upload-images.jianshu.io/upload_images/326727-f0dfd1c08b8732ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"xpath.png\"\u003e\u003c/p\u003e\n\u003ch2 id=\"lxml-的安装\"\u003elxml 的安装\u003c/h2\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eWindows 7 32bit/64bit  系统下直接使用 \u003ccode\u003epip install lxml\u003c/code\u003e 会提示 \u003ccode\u003elxml Unable to find vcvarsall.bat\u003c/code\u003e。 我们采用本地安装, 线安装 wheel 模块：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epip install wheel\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e然后到模块仓库\u003ca href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml\"\u003epythonlibs\u003c/a\u003e (相当于 Perl 的 metacpan)下载 lxml, 我下载的是 lxml-3.6.4-cp35-cp35m-win32.whl（即使你是 64 bit的系统）。然后在该文件所在目录下执行\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epip install  lxml-3.6.4-cp35-cp35m-win32.whl\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这样就安装成功了。如下图所示\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"http://upload-images.jianshu.io/upload_images/326727-d85df10d5ee1bb10.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"result.png\"\u003e\u003c/p\u003e\n\u003cp\u003eUbuntu 系统下你需要先安装依赖包:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo apt-get libxml2, libxml2-devel, libxlst, libxlst-devel, python-libxml2, python-libxslt\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e然后再安装\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003epip install lxml\n\u003c/code\u003e\u003c/pre\u003e","text":"根据字节点中的属性值提取父节点 今天使用 Python 的 lxml 模块来提取网页中的内容, 有一个 XPath 的用法不明白, 问题是， table 子节点下有一系列 tr 子节点, 每个 tr 子节点里有 3 列 (td), 如果 td 中 style 属性的值为 color: 0， 那么就不提取它所属的这一 tr 子节点。\n查了很久 stackoverflow 才解决, 方法一：\nfrom lxml import etree html = \u0026#39;\u0026#39;\u0026#39; \u0026lt;html\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tr id=\u0026#34;id_l107\u0026#34; class=\u0026#34;new nick nick_cxreg\u0026#34;\u0026gt; \u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;05:07\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;color: #8d8100\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;cxreg\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;probably useful\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr id=\u0026#34;id_l108\u0026#34; class=\u0026#34;new nick nick_mask\u0026#34;\u0026gt; \u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;05:09\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;color: #8d8100\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;mask\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;maybe better directed at \u0026lt;a href=\u0026#34;/moarvm/today\u0026#34;\u0026gt;#moarvm\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr id=\u0026#34;id_l74\u0026#34; class=\u0026#34;cont special dark\u0026#34;\u0026gt; \u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;02:37\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;color: 0\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;mcmillhj joined \u0026lt;a href=\u0026#34;/raku/today\u0026#34;\u0026gt;#raku\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;table\u0026gt; \u0026lt;/html\u0026gt; \u0026#39;\u0026#39;\u0026#39; selector = etree.HTML(html) content = selector.xpath(\u0026#39;//tr[descendant::td[@style!=\u0026#34;color: 0\u0026#34;]]/td/text()\u0026#39;) for each in content: print(each) 打印出:\ncxreg probably useful: mask maybe better directed at 说明得到我们想要的结果了。怎么验证我们取得的是两个 tr 呢？\ncontent = selector.xpath(\u0026#39;//tr[descendant::td[@style!=\u0026#34;color: 0\u0026#34;]]\u0026#39;) 打印出\n\u0026lt;Element tr at 0x139c3b0\u0026gt; \u0026lt;Element tr at 0x139c368\u0026gt; 说明的确提取出了 2 个 tr 元素。descendant 是后代的意思。上面那句代码意思是\n过滤 tr 元素, 如果 tr 的后代元素 td 的属性 style 值不为 \u0026ldquo;color: 0\u0026rdquo;, 那么就提取这个 tr 子节点。否则不提取。\n方法二，先过滤掉 td 然后使用 .. 语法返回到父级元素:\ncontent = selector.xpath(\u0026#39;//tr/td[starts-with(@style,\u0026#34;color: #\u0026#34;)]/../td/text()\u0026#39;) 这里找到 td 元素中属性以 color: #开头的 td (过滤掉了 color: 0 这样的 td), 然后使用 .. 语法得到只含有 color: # 子元素的 tr 父节点。以上两种方法异曲同工, 殊途同归。并且方法二最后得到的也是两个 tr 元素:\ncontent = selector.xpath(\u0026#39;//tr/td[starts-with(@style,\u0026#34;color: #\u0026#34;)]/..\u0026#39;) 打印：\n\u0026lt;Element tr at 0x222f170\u0026gt; \u0026lt;Element tr at 0x222f198\u0026gt; 程序最后主要代码如下:\ncontent = selector.xpath(\u0026#39;//tr[descendant::td[@style!=\u0026#34;color: 0\u0026#34;]]\u0026#39;) for each in content: info = each.xpath(\u0026#39;string(.)\u0026#39;) msg = info.replace(\u0026#39;\\n\u0026#39;, \u0026#39;\u0026#39;) print(msg) print(\u0026#39;-\u0026#39; * 85) lxml 的安装 Windows 7 32bit/64bit 系统下直接使用 pip install lxml 会提示 lxml Unable to find vcvarsall.bat。 我们采用本地安装, 线安装 wheel 模块：\npip install wheel 然后到模块仓库pythonlibs (相当于 Perl 的 metacpan)下载 lxml, 我下载的是 lxml-3.6.4-cp35-cp35m-win32.whl（即使你是 64 bit的系统）。然后在该文件所在目录下执行\npip install lxml-3.6.4-cp35-cp35m-win32.whl 这样就安装成功了。如下图所示\nUbuntu 系统下你需要先安装依赖包:\nsudo apt-get libxml2, libxml2-devel, libxlst, libxlst-devel, python-libxml2, python-libxslt 然后再安装\npip install lxml "},"name":"在 Python 中使用 XPath","published":"2017-12-26T16:16:21Z","summary":"根据字节点中的属性值提取父节点 今天使用 Python 的 lxml 模块来提取网页中的内容, 有一个 XPath 的用法不明白, 问题是， table 子节点下有一系列 tr 子节点, 每个 tr 子节点里有 3 列 (td), 如果 td 中 style 属性的值为 color: 0， 那么就不提取它所属的这一 tr 子节点。\n查了很久 stackoverflow 才解决, 方法一：\nfrom lxml import etree html = \u0026#39;\u0026#39;\u0026#39; \u0026lt;html\u0026gt; \u0026lt;table\u0026gt; \u0026lt;tr id=\u0026#34;id_l107\u0026#34; class=\u0026#34;new nick nick_cxreg\u0026#34;\u0026gt; \u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;05:07\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;color: #8d8100\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;cxreg\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;probably useful\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr id=\u0026#34;id_l108\u0026#34; class=\u0026#34;new nick nick_mask\u0026#34;\u0026gt; \u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;05:09\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;color: #8d8100\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;mask\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;maybe better directed at \u0026lt;a href=\u0026#34;/moarvm/today\u0026#34;\u0026gt;#moarvm\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr id=\u0026#34;id_l74\u0026#34; class=\u0026#34;cont special dark\u0026#34;\u0026gt; \u0026lt;td class=\u0026#34;time\u0026#34; \u0026gt;\u0026lt;a href=\u0026#34;/raku/2016-09-21\u0026gt;02:37\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td style=\u0026#34;color: 0\u0026#34; class=\u0026#34;nick\u0026#34;\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td class=\u0026#34;msg\u0026#34;\u0026gt;mcmillhj joined \u0026lt;a href=\u0026#34;/raku/today\u0026#34;\u0026gt;#raku\u0026lt;/a\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;table\u0026gt; \u0026lt;/html\u0026gt; \u0026#39;\u0026#39;\u0026#39; selector = etree.","type":"entry","url":"http://localhost:1313/notes/%E5%9C%A8-python-%E4%B8%AD%E4%BD%BF%E7%94%A8-xpath-/"}
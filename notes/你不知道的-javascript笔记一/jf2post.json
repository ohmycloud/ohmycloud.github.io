{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cp\u003e变量住在哪里？换句话说，它们储存在哪里？最重要的是，程序需要时如何找到它们？\n这些问题说明需要一套设计良好的规则来存储变量，并且之后可以方便地找到这些变量。\n这套规则被称为作用域。\u003c/p\u003e\n\u003cp\u003e在传统编译语言的流程中，程序中的一段源代码在执行之前会经历三个步骤，统称为“编译”。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e分词/词法分析（Tokenizing/Lexing）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这个过程会将由字符组成的字符串分解成（对编程语言来说）有意义的代码块，这些代\n码块被称为词法单元（token）。例如，考虑程序 var a = 2; 。这段程序通常会被分解成\n为下面这些词法单元： var 、 a 、 = 、 2、; 。空格是否会被当作词法单元，取决于空格在这门语言中是否具有意义。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e解析/语法分析（Parsing）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这个过程是将词法单元流（数组）转换成一个由元素逐级嵌套所组成的代表了程序语法\n结构的树。这个树被称为“抽象语法树”（Abstract Syntax Tree，AST）。\nvar a = 2; 的抽象语法树中可能会有一个叫作 VariableDeclaration 的顶级节点，接下\n来是一个叫作 Identifier （它的值是 a ）的子节点，以及一个叫作 AssignmentExpression 的子节点。 AssignmentExpression 节点有一个叫作 NumericLiteral （它的值是 2 ）的子节点。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e代码生成\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e将 AST 转换为可执行代码的过程称被称为代码生成。这个过程与语言、目标平台等息\n息相关。抛开具体细节，简单来说就是有某种方法可以将 var a = 2; 的 AST 转化为一组机器指令，用来创建一个叫作 a 的变量（包括分配内存等），并将一个值储存在 a 中。\u003c/p\u003e\n\u003cp\u003e对于 JavaScript 来说，大部分情况下编译发生在代码执行前的几微秒（甚至更短！）的时间内。简单地说，任何 JavaScript 代码片段在执行前都要进行编译（通常就在执行前）。因此，JavaScript 编译器首先会对 var a = 2; 这段程序进行编译，然后做好执行它的准备，并且通常马上就会执行它。\u003c/p\u003e\n","text":"变量住在哪里？换句话说，它们储存在哪里？最重要的是，程序需要时如何找到它们？ 这些问题说明需要一套设计良好的规则来存储变量，并且之后可以方便地找到这些变量。 这套规则被称为作用域。\n在传统编译语言的流程中，程序中的一段源代码在执行之前会经历三个步骤，统称为“编译”。\n分词/词法分析（Tokenizing/Lexing） 这个过程会将由字符组成的字符串分解成（对编程语言来说）有意义的代码块，这些代 码块被称为词法单元（token）。例如，考虑程序 var a = 2; 。这段程序通常会被分解成 为下面这些词法单元： var 、 a 、 = 、 2、; 。空格是否会被当作词法单元，取决于空格在这门语言中是否具有意义。\n解析/语法分析（Parsing） 这个过程是将词法单元流（数组）转换成一个由元素逐级嵌套所组成的代表了程序语法 结构的树。这个树被称为“抽象语法树”（Abstract Syntax Tree，AST）。 var a = 2; 的抽象语法树中可能会有一个叫作 VariableDeclaration 的顶级节点，接下 来是一个叫作 Identifier （它的值是 a ）的子节点，以及一个叫作 AssignmentExpression 的子节点。 AssignmentExpression 节点有一个叫作 NumericLiteral （它的值是 2 ）的子节点。\n代码生成 将 AST 转换为可执行代码的过程称被称为代码生成。这个过程与语言、目标平台等息 息相关。抛开具体细节，简单来说就是有某种方法可以将 var a = 2; 的 AST 转化为一组机器指令，用来创建一个叫作 a 的变量（包括分配内存等），并将一个值储存在 a 中。\n对于 JavaScript 来说，大部分情况下编译发生在代码执行前的几微秒（甚至更短！）的时间内。简单地说，任何 JavaScript 代码片段在执行前都要进行编译（通常就在执行前）。因此，JavaScript 编译器首先会对 var a = 2; 这段程序进行编译，然后做好执行它的准备，并且通常马上就会执行它。\n"},"name":"你不知道的 JavaScript（笔记）","published":"2017-05-03T16:16:21Z","summary":"你不知道的 JavaScript","type":"entry","url":"https://ohmyweekly.github.io/notes/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84-javascript%E7%AC%94%E8%AE%B0%E4%B8%80/"}
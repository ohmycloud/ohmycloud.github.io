{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io"},"content":{"html":"\u003ch2 id=\"介绍\"\u003e介绍\u003c/h2\u003e\n\u003cp\u003eFlutter 是 Google 的 UI 工具包，用于从单一代码库中为移动、Web 和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\u003c/p\u003e\n\u003cp\u003e在这个代码实验室中，您将扩展一个基本的、移动的 Flutter 应用程序，以包含交互性。您还将创建一个用户可以导航到的第二个页面（称为路由）。最后，您将修改应用程序的主题（颜色）。这个代码实验室扩展了第1部分，在这部分中，你将\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/\"\u003e创建一个无限的懒惰加载的列表\u003c/a\u003e，但如果你想从第2部分开始，我们将提供起始代码。\u003c/p\u003e\n\u003ch3 id=\"你将在第二部分学到什么\"\u003e你将在第二部分学到什么\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？\u003c/li\u003e\n\u003cli\u003e如何使用热重装，加快开发周期？\u003c/li\u003e\n\u003cli\u003e如何为有状态的 widget 添加交互性？\u003c/li\u003e\n\u003cli\u003e如何创建并导航到第二个屏幕？\u003c/li\u003e\n\u003cli\u003e如何使用主题来改变应用程序的外观？\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"你将在第二部分建立什么\"\u003e你将在第二部分建立什么\u003c/h3\u003e\n\u003cp\u003e您将从一个简单的移动应用程序开始，为创业公司生成一个无尽的建议名称列表。在代码实验室结束时，您的最终用户可以选择和取消选择名称，保存最好的名称。点击应用栏右上角的列表图标可以导航到一个新的页面（称为路由），该页面只列出了最喜欢的名字。\u003c/p\u003e\n\u003cp\u003e下面的 GIF 动画显示了完成的应用程序将如何工作。\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/7fcab088cd22cff7.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch2 id=\"设置您的-flutter-环境\"\u003e设置您的 Flutter 环境\u003c/h2\u003e\n\u003cp\u003e如果你还没有完成第1部分，请看\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/#1\"\u003e设置你的 Flutter 环境\u003c/a\u003e，在\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/\"\u003e编写你的第一个Flutter应用，第1部分\u003c/a\u003e，设置你的 Flutter 开发环境。\u003c/p\u003e\n\u003ch2 id=\"获取启动应用程序\"\u003e获取启动应用程序\u003c/h2\u003e\n\u003cp\u003e如果你已经完成了这个 codelab 的第一部分，你已经有了启动应用程序，\u003ccode\u003estartup_namer\u003c/code\u003e。你可以进行下一步。\u003c/p\u003e\n\u003cp\u003e如果你没有 \u003ccode\u003estartup_namer\u003c/code\u003e，不要害怕，你可以使用下面的说明得到它。\u003c/p\u003e\n\u003cp\u003e使用\u003ca href=\"https://flutter.dev/get-started/test-drive/#create-app\"\u003e创建应用程序\u003c/a\u003e中的说明创建一个简单的模板化 Flutter 应用程序。将项目命名为 \u003ccode\u003estartup_namer\u003c/code\u003e（而不是 \u003ccode\u003eflutter_app\u003c/code\u003e）。\u003c/p\u003e\n\u003cp\u003e删除 \u003ccode\u003elib/main.dart\u003c/code\u003e 中的所有代码。用这个\u003ca href=\"https://github.com/flutter/codelabs/blob/b3293b5bb0c0187bdbe8112f7759f4d75f4c040a/startup_namer/step4_infinite_list/lib/main.dart\"\u003e文件\u003c/a\u003e中的代码替换，它显示了一个无限的，懒惰加载的建议启动名称列表。\u003c/p\u003e\n\u003cp\u003e更新 \u003ccode\u003epubspec.yaml\u003c/code\u003e，加入英文单词包。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan class=\"nt\"\u003edependencies\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eflutter\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e    \u003c/span\u003e\u003cspan class=\"nt\"\u003esdk\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003eflutter\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003ecupertino_icons\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e^0.1.2\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003cspan class=\"w\"\u003e  \u003c/span\u003e\u003cspan class=\"nt\"\u003eenglish_words\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"l\"\u003e^3.1.5    // NEW\u003c/span\u003e\u003cspan class=\"w\"\u003e\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e英文单词包会生成一对随机的单词，作为潜在的启动名称。\u003c/p\u003e\n\u003cp\u003e在 Android Studio 的编辑器视图中查看 pubspec 时，点击右上角的 \u003cstrong\u003ePub get\u003c/strong\u003e，这将包拉到你的项目中。你应该在控制台中看到以下内容:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003eflutter pub get\nRunning \u003cspan class=\"s2\"\u003e\u0026#34;flutter pub get\u0026#34;\u003c/span\u003e in startup_namer...\nProcess finished with \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e code \u003cspan class=\"m\"\u003e0\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行该应用。\u003c/p\u003e\n\u003cp\u003e随意滚动，查看持续供应的拟创业公司名称。\u003c/p\u003e\n\u003ch2 id=\"将图标添加到列表中\"\u003e将图标添加到列表中\u003c/h2\u003e\n\u003cp\u003e在这一步中，你将为每一行添加心形图标。在下一步中，您将使它们可点击并保存收藏夹。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 中添加一个 \u003ccode\u003e_saved\u003c/code\u003e Set。这个 \u003ccode\u003eSet\u003c/code\u003e 存储了用户收藏的单词配对。\u003ccode\u003eSet\u003c/code\u003e 比 \u003ccode\u003eList\u003c/code\u003e 更受欢迎，因为一个正确实现的 \u003ccode\u003eSet\u003c/code\u003e 不允许重复的条目。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003e_suggestions\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e[];\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eSet\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e     \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eTextStyle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003efontSize:\u003c/span\u003e \u003cspan class=\"m\"\u003e18.0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 \u003ccode\u003e_buildRow\u003c/code\u003e 函数中，添加一个 \u003ccode\u003ealreadySaved\u003c/code\u003e 检查，以确保一个单词配对还没有被添加到收藏夹中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e// NEW\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 \u003ccode\u003e_buildRow()\u003c/code\u003e 中，你还将为 \u003ccode\u003eListTile\u003c/code\u003e 对象添加心形图标以实现收藏夹。在下一步中，你将添加与心形图标交互的功能。\u003c/p\u003e\n\u003cp\u003e在文本之后添加图标，如下图所示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etrailing:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e   \u003cspan class=\"c1\"\u003e// NEW from here... \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite_border\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ecolor:\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eColors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ered\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e),\u003c/span\u003e                \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重新加载应用程序。\u003c/p\u003e\n\u003cp\u003e你现在应该看到每一行都有空心，但它们还没有互动。\u003c/p\u003e\n\u003cp\u003eAndroid\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/819e2ff89da9421a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/4df48933551e7c48.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step5_add_icons/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"增加互动性\"\u003e增加互动性\u003c/h2\u003e\n\u003cp\u003e在这一步中，你将使心形图标可以点击。当用户点击列表中的一个条目，切换其收藏状态时，该词对就会从一组保存的收藏夹中添加或删除。\u003c/p\u003e\n\u003cp\u003e要做到这一点，你将修改 \u003ccode\u003e_buildRow\u003c/code\u003e 函数。如果一个词条已经被添加到收藏夹中，再次点击它就会将其从收藏夹中删除。当一个磁贴被点击后，函数会调用 \u003ccode\u003esetState()\u003c/code\u003e 来通知框架状态已经改变。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_buildRow\u003c/code\u003e 方法中加入 \u003ccode\u003eonTap\u003c/code\u003e，如下图所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003e_buildRow\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003econtains\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003etrailing:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003efavorite_border\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ecolor:\u003c/span\u003e \u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e \u003cspan class=\"o\"\u003e?\u003c/span\u003e \u003cspan class=\"n\"\u003eColors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ered\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kc\"\u003enull\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"nl\"\u003eonTap:\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e      \u003cspan class=\"c1\"\u003e// NEW lines from here...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"n\"\u003esetState\u003c/span\u003e\u003cspan class=\"p\"\u003e(()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ealreadySaved\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eremove\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n          \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \n        \u003cspan class=\"p\"\u003e}\u003c/span\u003e \n      \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e},\u003c/span\u003e               \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示：在 Flutter 的反应式框架中，调用 \u003ccode\u003esetState()\u003c/code\u003e 会触发对 \u003ccode\u003eState\u003c/code\u003e 对象的 \u003ccode\u003ebuild()\u003c/code\u003e 方法的调用，导致 UI 的更新。\u003c/p\u003e\n\u003cp\u003e热重载应用。\u003c/p\u003e\n\u003cp\u003e你应该能够点击任何磁贴来收藏或不收藏该条目。点击瓷砖会产生一个隐含的从点击点发出的泼墨动画。\u003c/p\u003e\n\u003cp\u003eAndroid\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/43dfc7ba5f728e8f.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/e7a99a1b94bea7d4.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-1\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step6_add_interactivity/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"导航到一个新的屏幕\"\u003e导航到一个新的屏幕\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将添加一个新的页面（在 Flutter 中称为路由），显示收藏夹。您将学习如何在主页路线和新路由之间进行导航。\u003c/p\u003e\n\u003cp\u003e在 Flutter 中，\u003ccode\u003eNavigator\u003c/code\u003e 管理着一个包含应用程序路由的堆栈。将一个路由推到 \u003ccode\u003eNavigator\u003c/code\u003e 的堆栈上，会将显示更新到该路由。从 \u003ccode\u003eNavigator\u003c/code\u003e 的堆栈中弹出一条路由，会将显示返回到之前的路由。\u003c/p\u003e\n\u003cp\u003e接下来，您将在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 的 \u003ccode\u003ebuild\u003c/code\u003e 方法中为 \u003ccode\u003eAppBar\u003c/code\u003e 添加一个列表图标。当用户点击列表图标时，一个包含保存的收藏夹的新路由会被推送到 \u003ccode\u003eNavigator\u003c/code\u003e，显示图标。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003ebuild\u003c/code\u003e 方法中添加图标及其对应的操作:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003e_RandomWordsState\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eState\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Startup Name Generator\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n        \u003cspan class=\"nl\"\u003eactions:\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e              \u003cspan class=\"c1\"\u003e// NEW lines from here...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e          \u003cspan class=\"n\"\u003eIconButton\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003eicon:\u003c/span\u003e \u003cspan class=\"n\"\u003eIcon\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eIcons\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elist\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e \u003cspan class=\"nl\"\u003eonPressed:\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e],\u003c/span\u003e                      \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e...\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提示：一些小组件属性会取一个小组件(\u003ccode\u003echild\u003c/code\u003e)，而其他属性，如 \u003ccode\u003eaction\u003c/code\u003e，会取一组小组件(\u003ccode\u003echildren\u003c/code\u003e), 如方括号(\u003ccode\u003e[]\u003c/code\u003e)所示。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003e_RandomWordsState\u003c/code\u003e 类中添加一个 \u003ccode\u003e_pushSaved()\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重新加载应用程序。\u003ca href=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/a114478ae13b853.png\"\u003e列表图标\u003c/a\u003e出现在应用栏中。点击它还没有任何作用，因为 \u003ccode\u003e_pushSaved\u003c/code\u003e 函数是空的。\u003c/p\u003e\n\u003cp\u003e接下来，你将建立一条路由，并将其推送到 \u003ccode\u003eNavigator\u003c/code\u003e 的栈中。这个操作会改变屏幕以显示新的路由。新页面的内容是在 \u003ccode\u003eMaterialPageRoute\u003c/code\u003e 的构建器属性中以匿名函数的方式构建的。\u003c/p\u003e\n\u003cp\u003e调用 \u003ccode\u003eNavigator.push\u003c/code\u003e，如下图所示，它将路由推送到 \u003ccode\u003eNavigator\u003c/code\u003e 的堆栈中。IDE 会抱怨无效代码，但你会在下一节中解决这个问题。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eNavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e接下来，你将添加 \u003ccode\u003eMaterialPageRoute\u003c/code\u003e 和它的构建器。现在，添加生成 \u003ccode\u003eListTile\u003c/code\u003e 行的代码。\u003ccode\u003eListTile\u003c/code\u003e 的 \u003ccode\u003edivideTiles()\u003c/code\u003e 方法在每个 \u003ccode\u003eListTile\u003c/code\u003e 之间增加了水平间距。被划分的变量持有通过方便函数 \u003ccode\u003etoList()\u003c/code\u003e 转换为列表的最终行。\u003c/p\u003e\n\u003cp\u003e添加代码，如下面的代码片段所示:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e \u003cspan class=\"n\"\u003e_pushSaved\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"n\"\u003eNavigator\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eof\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"n\"\u003eMaterialPageRoute\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"kt\"\u003evoid\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n        \u003cspan class=\"c1\"\u003e// NEW lines from here...\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"nl\"\u003ebuilder:\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n          \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003etiles\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003e_saved\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWordPair\u003c/span\u003e \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n              \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n                  \u003cspan class=\"n\"\u003epair\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003easPascalCase\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                  \u003cspan class=\"nl\"\u003estyle:\u003c/span\u003e \u003cspan class=\"n\"\u003e_biggerFont\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n                \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n              \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n          \u003cspan class=\"kd\"\u003efinal\u003c/span\u003e \u003cspan class=\"n\"\u003edivided\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eListTile\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003edivideTiles\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003econtext:\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003etiles:\u003c/span\u003e \u003cspan class=\"n\"\u003etiles\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e).\u003c/span\u003e\u003cspan class=\"n\"\u003etoList\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\n          \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eScaffold\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003eappBar:\u003c/span\u003e \u003cspan class=\"n\"\u003eAppBar\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n              \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"n\"\u003eText\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;Saved Suggestions\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n            \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n            \u003cspan class=\"nl\"\u003ebody:\u003c/span\u003e \u003cspan class=\"n\"\u003eListView\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nl\"\u003echildren:\u003c/span\u003e \u003cspan class=\"n\"\u003edivided\u003c/span\u003e\u003cspan class=\"p\"\u003e),\u003c/span\u003e\n          \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n        \u003cspan class=\"p\"\u003e},\u003c/span\u003e \u003cspan class=\"c1\"\u003e// ...to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"p\"\u003e),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003ebuilder\u003c/code\u003e 属性返回一个 \u003ccode\u003eScaffold\u003c/code\u003e，包含名为 \u003ccode\u003eSavedSuggestions\u003c/code\u003e 的新路由的应用栏。新路由的主体由一个包含 \u003ccode\u003eListTiles\u003c/code\u003e 行的 \u003ccode\u003eListView\u003c/code\u003e 组成。每一行都由一个分隔符隔开。\u003c/p\u003e\n\u003cp\u003e热重载应用。将一些选择收藏起来，然后点击应用栏中的列表图标。新的路由出现，包含收藏夹。请注意，Navigator 在应用栏中增加了一个\u0026quot;返回\u0026quot;按钮。你不必明确地实现 \u003ccode\u003eNavigator.pop\u003c/code\u003e。点击\u0026quot;返回\u0026quot;按钮就可以返回到主路由。\u003c/p\u003e\n\u003cp\u003eiOS - Main route\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/928693968b8e482a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS - Saved suggestions route\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/2245376356747d5a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-2\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你的应用程序没有正确运行，那么你可以使用下面链接中的代码来回到正轨。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step7_navigate_route/lib/main.dart\"\u003elib/main.dart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"使用主题改变用户界面\"\u003e使用主题改变用户界面\u003c/h2\u003e\n\u003cp\u003e在这一步中，您将修改应用程序的主题。主题控制你的应用程序的外观和感觉。您可以使用默认主题，这取决于物理设备或模拟器，或者自定义主题以反映您的品牌。\u003c/p\u003e\n\u003cp\u003e您可以通过配置 \u003ca href=\"https://docs.flutter.io/flutter/material/ThemeData-class.html\"\u003eThemeData\u003c/a\u003e 类轻松更改应用程序的主题。应用程序使用默认主题，但你会将应用程序的主色调改为白色。\u003c/p\u003e\n\u003cp\u003e在 \u003ccode\u003eMyApp\u003c/code\u003e 类中更改颜色:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre class=\"chroma\"\u003e\u003ccode class=\"language-dart\" data-lang=\"dart\"\u003e\u003cspan class=\"kd\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eMyApp\u003c/span\u003e \u003cspan class=\"kd\"\u003eextends\u003c/span\u003e \u003cspan class=\"n\"\u003eStatelessWidget\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"n\"\u003eoverride\u003c/span\u003e\n  \u003cspan class=\"n\"\u003eWidget\u003c/span\u003e \u003cspan class=\"n\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eBuildContext\u003c/span\u003e \u003cspan class=\"n\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eMaterialApp\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etitle:\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;Startup Name Generator\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"nl\"\u003etheme:\u003c/span\u003e \u003cspan class=\"n\"\u003eThemeData\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e          \u003cspan class=\"c1\"\u003e// Add the 3 lines from here... \n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e        \u003cspan class=\"nl\"\u003eprimaryColor:\u003c/span\u003e \u003cspan class=\"n\"\u003eColors\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003ewhite\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e),\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e// ... to here.\n\u003c/span\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e      \u003cspan class=\"nl\"\u003ehome:\u003c/span\u003e \u003cspan class=\"n\"\u003eRandomWords\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e热重载应用。现在整个背景都是白色的，甚至应用栏也是白色的。\u003c/p\u003e\n\u003cp\u003e作为一个练习，使用 \u003ccode\u003eThemeData\u003c/code\u003e 来改变 UI 的其他方面。Material 库中的 \u003ca href=\"https://docs.flutter.io/flutter/material/Colors-class.html\"\u003eColors\u003c/a\u003e 类提供了许多你可以玩的颜色常量。热重载使得对 UI 的实验变得快速而简单。\u003c/p\u003e\n\u003cp\u003eAndroid\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/5d4ed8aeea9e4d0a.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eiOS\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/img/c325151f1ae4820d.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"遇到问题了-3\"\u003e遇到问题了？\u003c/h3\u003e\n\u003cp\u003e如果你已经偏离了轨道，那么使用下面链接中的代码来查看最终应用的代码。\u003c/p\u003e\n\u003cp\u003e= \u003ca href=\"https://github.com/flutter/codelabs/blob/master/startup_namer/step8_themes/lib/main.darts\"\u003elib/main.dart\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"做得很好\"\u003e做得很好！\u003c/h2\u003e\n\u003cp\u003e你写了一个交互式的 Flutter 应用，可以在 iOS 和 Android 上运行，具体做法如下\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e编写 Dart 代码。\u003c/li\u003e\n\u003cli\u003e使用热重载来加快开发周期。\u003c/li\u003e\n\u003cli\u003e实现一个有状态的 widget，为你的应用添加交互性。\u003c/li\u003e\n\u003cli\u003e创建途径并添加在原途径和新途径之间移动的逻辑。\u003c/li\u003e\n\u003cli\u003e学习如何使用主题改变你的应用程序的 UI 外观。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"今后的步骤\"\u003e今后的步骤\u003c/h2\u003e\n\u003cp\u003e从以下资源中了解更多关于 Flutter SDK 的信息。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/layout\"\u003eFlutter 中的布局\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/interactive\"\u003e增加互动性教程\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/development/ui/widgets-intro\"\u003e组件介绍\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/android-devs\"\u003e为 Android 开发者提供的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/react-native-devs\"\u003e针对 React Native 开发者的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/docs/get-started/flutter-for/web-devs\"\u003eWeb 开发人员的 Flutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.youtube.com/flutterdev\"\u003eFlutter YouTube 频道\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e其他资源包括以下几点:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905\"\u003e用 Flutter 构建本地移动应用\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://codelabs.developers.google.com/codelabs/from-java-to-dart/#1\"\u003e从 Java 到 Dart codelab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/cookbook/\"\u003eFlutter cookbook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://flutter.dev/bootstrap-into-dart/\"\u003e融入 Dart 的 Bootstrap：了解更多关于这门语言的信息\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e同时，\u003ca href=\"https://flutter.dev/community\"\u003e与 Flutter 社区联系起来!\u003c/a\u003e\u003c/p\u003e\n","text":"介绍 Flutter 是 Google 的 UI 工具包，用于从单一代码库中为移动、Web 和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起工作，被世界各地的开发者和组织使用，并且是免费和开源的。\n在这个代码实验室中，您将扩展一个基本的、移动的 Flutter 应用程序，以包含交互性。您还将创建一个用户可以导航到的第二个页面（称为路由）。最后，您将修改应用程序的主题（颜色）。这个代码实验室扩展了第1部分，在这部分中，你将创建一个无限的懒惰加载的列表，但如果你想从第2部分开始，我们将提供起始代码。\n你将在第二部分学到什么  如何编写一款在 iOS、Android 和 Web 上看起来很自然的 Flutter 应用？ 如何使用热重装，加快开发周期？ 如何为有状态的 widget 添加交互性？ 如何创建并导航到第二个屏幕？ 如何使用主题来改变应用程序的外观？  你将在第二部分建立什么 您将从一个简单的移动应用程序开始，为创业公司生成一个无尽的建议名称列表。在代码实验室结束时，您的最终用户可以选择和取消选择名称，保存最好的名称。点击应用栏右上角的列表图标可以导航到一个新的页面（称为路由），该页面只列出了最喜欢的名字。\n下面的 GIF 动画显示了完成的应用程序将如何工作。\n设置您的 Flutter 环境 如果你还没有完成第1部分，请看设置你的 Flutter 环境，在编写你的第一个Flutter应用，第1部分，设置你的 Flutter 开发环境。\n获取启动应用程序 如果你已经完成了这个 codelab 的第一部分，你已经有了启动应用程序，startup_namer。你可以进行下一步。\n如果你没有 startup_namer，不要害怕，你可以使用下面的说明得到它。\n使用创建应用程序中的说明创建一个简单的模板化 Flutter 应用程序。将项目命名为 startup_namer（而不是 flutter_app）。\n删除 lib/main.dart 中的所有代码。用这个文件中的代码替换，它显示了一个无限的，懒惰加载的建议启动名称列表。\n更新 pubspec.yaml，加入英文单词包。\ndependencies:flutter:sdk:fluttercupertino_icons:^0.1.2english_words:^3.1.5 // NEW英文单词包会生成一对随机的单词，作为潜在的启动名称。\n在 Android Studio 的编辑器视图中查看 pubspec 时，点击右上角的 Pub get，这将包拉到你的项目中。你应该在控制台中看到以下内容:\nflutter pub get Running \u0026#34;flutter pub get\u0026#34; in startup_namer... Process finished with exit code 0 运行该应用。\n随意滚动，查看持续供应的拟创业公司名称。\n将图标添加到列表中 在这一步中，你将为每一行添加心形图标。在下一步中，您将使它们可点击并保存收藏夹。\n在 _RandomWordsState 中添加一个 _saved Set。这个 Set 存储了用户收藏的单词配对。Set 比 List 更受欢迎，因为一个正确实现的 Set 不允许重复的条目。\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { final _suggestions = \u0026lt;WordPair\u0026gt;[]; final _saved = Set\u0026lt;WordPair\u0026gt;(); // NEW  final _biggerFont = TextStyle(fontSize: 18.0); ... } 在 _buildRow 函数中，添加一个 alreadySaved 检查，以确保一个单词配对还没有被添加到收藏夹中。\nWidget _buildRow(WordPair pair) { final alreadySaved = _saved.contains(pair); // NEW  ... } 在 _buildRow() 中，你还将为 ListTile 对象添加心形图标以实现收藏夹。在下一步中，你将添加与心形图标交互的功能。\n在文本之后添加图标，如下图所示。\nWidget _buildRow(WordPair pair) { final alreadySaved = _saved.contains(pair); return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), trailing: Icon( // NEW from here...  alreadySaved ? Icons.favorite : Icons.favorite_border, color: alreadySaved ? Colors.red : null, ), // ... to here.  ); } 热重新加载应用程序。\n你现在应该看到每一行都有空心，但它们还没有互动。\nAndroid\niOS\n遇到问题了？ 如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\n lib/main.dart  增加互动性 在这一步中，你将使心形图标可以点击。当用户点击列表中的一个条目，切换其收藏状态时，该词对就会从一组保存的收藏夹中添加或删除。\n要做到这一点，你将修改 _buildRow 函数。如果一个词条已经被添加到收藏夹中，再次点击它就会将其从收藏夹中删除。当一个磁贴被点击后，函数会调用 setState() 来通知框架状态已经改变。\n在 _buildRow 方法中加入 onTap，如下图所示:\nWidget _buildRow(WordPair pair) { final alreadySaved = _saved.contains(pair); return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), trailing: Icon( alreadySaved ? Icons.favorite : Icons.favorite_border, color: alreadySaved ? Colors.red : null, ), onTap: () { // NEW lines from here...  setState(() { if (alreadySaved) { _saved.remove(pair); } else { _saved.add(pair); } }); }, // ... to here.  ); } 提示：在 Flutter 的反应式框架中，调用 setState() 会触发对 State 对象的 build() 方法的调用，导致 UI 的更新。\n热重载应用。\n你应该能够点击任何磁贴来收藏或不收藏该条目。点击瓷砖会产生一个隐含的从点击点发出的泼墨动画。\nAndroid\niOS\n遇到问题了？ 如果你的应用程序不能正常运行，你可以使用下面链接中的代码来回到正轨。\n lib/main.dart  导航到一个新的屏幕 在这一步中，您将添加一个新的页面（在 Flutter 中称为路由），显示收藏夹。您将学习如何在主页路线和新路由之间进行导航。\n在 Flutter 中，Navigator 管理着一个包含应用程序路由的堆栈。将一个路由推到 Navigator 的堆栈上，会将显示更新到该路由。从 Navigator 的堆栈中弹出一条路由，会将显示返回到之前的路由。\n接下来，您将在 _RandomWordsState 的 build 方法中为 AppBar 添加一个列表图标。当用户点击列表图标时，一个包含保存的收藏夹的新路由会被推送到 Navigator，显示图标。\n在 build 方法中添加图标及其对应的操作:\nclass _RandomWordsState extends State\u0026lt;RandomWords\u0026gt; { ... @override Widget build(BuildContext context) { return Scaffold( appBar: AppBar( title: Text(\u0026#39;Startup Name Generator\u0026#39;), actions: [ // NEW lines from here...  IconButton(icon: Icon(Icons.list), onPressed: _pushSaved), ], // ... to here.  ), home: RandomWords(), ); } ... } 提示：一些小组件属性会取一个小组件(child)，而其他属性，如 action，会取一组小组件(children), 如方括号([])所示。\n在 _RandomWordsState 类中添加一个 _pushSaved() 函数。\nvoid _pushSaved() { } 热重新加载应用程序。列表图标出现在应用栏中。点击它还没有任何作用，因为 _pushSaved 函数是空的。\n接下来，你将建立一条路由，并将其推送到 Navigator 的栈中。这个操作会改变屏幕以显示新的路由。新页面的内容是在 MaterialPageRoute 的构建器属性中以匿名函数的方式构建的。\n调用 Navigator.push，如下图所示，它将路由推送到 Navigator 的堆栈中。IDE 会抱怨无效代码，但你会在下一节中解决这个问题。\nvoid _pushSaved() { Navigator.of(context).push( ); } 接下来，你将添加 MaterialPageRoute 和它的构建器。现在，添加生成 ListTile 行的代码。ListTile 的 divideTiles() 方法在每个 ListTile 之间增加了水平间距。被划分的变量持有通过方便函数 toList() 转换为列表的最终行。\n添加代码，如下面的代码片段所示:\nvoid _pushSaved() { Navigator.of(context).push( MaterialPageRoute\u0026lt;void\u0026gt;( // NEW lines from here...  builder: (BuildContext context) { final tiles = _saved.map( (WordPair pair) { return ListTile( title: Text( pair.asPascalCase, style: _biggerFont, ), ); }, ); final divided = ListTile.divideTiles( context: context, tiles: tiles, ).toList(); return Scaffold( appBar: AppBar( title: Text(\u0026#39;Saved Suggestions\u0026#39;), ), body: ListView(children: divided), ); }, // ...to here.  ), ); } } builder 属性返回一个 Scaffold，包含名为 SavedSuggestions 的新路由的应用栏。新路由的主体由一个包含 ListTiles 行的 ListView 组成。每一行都由一个分隔符隔开。\n热重载应用。将一些选择收藏起来，然后点击应用栏中的列表图标。新的路由出现，包含收藏夹。请注意，Navigator 在应用栏中增加了一个\u0026quot;返回\u0026quot;按钮。你不必明确地实现 Navigator.pop。点击\u0026quot;返回\u0026quot;按钮就可以返回到主路由。\niOS - Main route\niOS - Saved suggestions route\n遇到问题了？ 如果你的应用程序没有正确运行，那么你可以使用下面链接中的代码来回到正轨。\n lib/main.dart  使用主题改变用户界面 在这一步中，您将修改应用程序的主题。主题控制你的应用程序的外观和感觉。您可以使用默认主题，这取决于物理设备或模拟器，或者自定义主题以反映您的品牌。\n您可以通过配置 ThemeData 类轻松更改应用程序的主题。应用程序使用默认主题，但你会将应用程序的主色调改为白色。\n在 MyApp 类中更改颜色:\nclass MyApp extends StatelessWidget { @override Widget build(BuildContext context) { return MaterialApp( title: \u0026#39;Startup Name Generator\u0026#39;, theme: ThemeData( // Add the 3 lines from here...  primaryColor: Colors.white, ), // ... to here.  home: RandomWords(), ); } } 热重载应用。现在整个背景都是白色的，甚至应用栏也是白色的。\n作为一个练习，使用 ThemeData 来改变 UI 的其他方面。Material 库中的 Colors 类提供了许多你可以玩的颜色常量。热重载使得对 UI 的实验变得快速而简单。\nAndroid\niOS\n遇到问题了？ 如果你已经偏离了轨道，那么使用下面链接中的代码来查看最终应用的代码。\n= lib/main.dart\n做得很好！ 你写了一个交互式的 Flutter 应用，可以在 iOS 和 Android 上运行，具体做法如下\n 编写 Dart 代码。 使用热重载来加快开发周期。 实现一个有状态的 widget，为你的应用添加交互性。 创建途径并添加在原途径和新途径之间移动的逻辑。 学习如何使用主题改变你的应用程序的 UI 外观。  今后的步骤 从以下资源中了解更多关于 Flutter SDK 的信息。\n Flutter 中的布局 增加互动性教程 组件介绍 为 Android 开发者提供的 Flutter 针对 React Native 开发者的 Flutter Web 开发人员的 Flutter Flutter YouTube 频道  其他资源包括以下几点:\n 用 Flutter 构建本地移动应用 从 Java 到 Dart codelab Flutter cookbook 融入 Dart 的 Bootstrap：了解更多关于这门语言的信息  同时，与 Flutter 社区联系起来!\n"},"name":"编写你的第一个 Flutter 应用，第二部分","published":"2020-06-26T00:00:00+08:00","summary":"Flutter 是 Google 的 UI 工具包，用于从单一代码库中为手机、网页和桌面构建漂亮的、原生编译的应用程序。Flutter 可以与现有的代码一起使用，被世界各地的开发者和组织使用，并且是免费和开源的。","type":"entry","url":"https://ohmyweekly.github.io/notes/write-your-first-flutter-app-part-two/"}
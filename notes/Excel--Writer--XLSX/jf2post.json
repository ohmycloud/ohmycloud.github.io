{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e----------------------------------------------------------------------------\n 翻译: 小Perl\nEmail:sxw2k@sina.com\n----------------------------------------------------------------------------\n\n\n\nNAME     名称\n    Excel::Writer::XLSX - 以Excel2007+XLSX格式创建一个新文件.\n\nVERSION  版本\n    该文档是在2013年11月发布的Excel::Writer::XLSX 0.75版本。\nSYNOPSIS 概要\n    在perl.xlsx的第一个工作表中写入字符串、格式化的字符串、数字和公式：\n        use Excel::Writer::XLSX;\n\n        # 新建excel工作簿\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;perl.xlsx\u0026#39; );\n\n        # 增加一个工作表\n        $worksheet = $workbook-\u0026gt;add_worksheet();\n\n        #  添加并定义一个格式        \n        $format = $workbook-\u0026gt;add_format();#增加一种格式\n        $format-\u0026gt;set_bold();              #设置粗体\n        $format-\u0026gt;set_color( \u0026#39;red\u0026#39; );      #设置颜色\n        $format-\u0026gt;set_align( \u0026#39;center\u0026#39; );   #设置对齐方式（此处为居中）\n\n\t\t#写入一个格式化和非格式化的字符串，使用行列表示法。\n        $col = $row = 0;                  #设置行和列的位置\n        $worksheet-\u0026gt;write( $row, $col, \u0026#39;Hi Excel!\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 1, $col, \u0026#39;Hi Excel!\u0026#39; );\n\n        #使用A1表示法写入一个数字和公式\n        $worksheet-\u0026gt;write( \u0026#39;A3\u0026#39;, 1.2345 );         #在第三行第一列写入一个数字\n        $worksheet-\u0026gt;write( \u0026#39;A4\u0026#39;, \u0026#39;=SIN(PI()/4)\u0026#39; ); #在第四行第一列写入一个公式\n\nDESCRIPTION 说明\n    The \u0026#34;Excel::Writer::XLSX\u0026#34; 模块可以被用做建立Excel2007+ XLSX格式的文件。\n\n    XLSX格式是Excel 2007 和以后版本使用的官方开放XML（OOXML）格式\n    可在工作簿中添加多张工作表，格式可以被应用到单元格中。可以把文字，数字，和公式写入单元格。\n\n   此模块目前还不能被用于向一个已经存在的EXCEl XLSX文件中写入数据。\n\nExcel::Writer::XLSX and Spreadsheet::WriteExcel\n   \n\tExcel::Writer::XLSX使用和Spreadsheet::WriteExcel模块相同的接口来生成二进制XLS格式的Excel文件\n\n    Excel::Writer::XLSX 支持所有Spreadsheet::WriteExcel中的特性，并且某些情况下功能更强。请查看 \u0026#34;Compatibility with Spreadsheet::WriteExcel\u0026#34;.获取更多细节。\n\n    \n    XLSL格式相比XLS格式主要的优势是它允许在一个工作表中容纳更大数量的行和列。\nQUICK START 快速入门\n     Excel::Writer::XLSX试图尽可能的提供Excel的功能接口。因此，有很多与接口有关的文档，第一眼很难看出哪些重要，哪些不重要。所以对于你们这些更喜欢先组装宜家设备，再读说明书的人，此处有三种简单的方式：\n\t0、新建一个Excel对象\n    1、使用\u0026#34;new()\u0026#34;方法创建一个新的Excel 工作簿\n    2、使用\u0026#34;add_worksheet()\u0026#34;方法向新工作簿增加一个工作表\n\t3、使用\u0026#34;write()\u0026#34;方法向工作表中写入数据\n    就象这样：\n\n        use Excel::Writer::XLSX;                                   # Step 0\n\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;perl.xlsx\u0026#39; );    # Step 1\n        $worksheet = $workbook-\u0026gt;add_worksheet();                   # Step 2\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hi Excel!\u0026#39; );                    # Step 3\n    \n\t这会创建一个叫做perl.xlsx的Excel文件，里面只有一张工作表并在相关单元格里面有\u0026#39;Hi Excel\u0026#39;文本。\n    \n   \n工作簿方法\n       Excel::Writer::XLSX模块为新建的Excel工作簿提供了面向对象的接口。下面的方法可以通过一个新建的工作簿对象访问.\n\n        new()                       #新建\n        add_worksheet()             #添加工作表\n        add_format()                #添加格式\n        add_chart()                 #添加图表\n        close()                     #关闭工作簿\n        set_properties()\t\t\t#设置属性\n        define_name()\t\t\t\t#定义名称\n        set_tempdir()\t\t\t\t#设置临时文件夹\n        set_custom_color()\t\t\t#设置自定义颜色\n        sheets()\t\t\t\t\t#工作表\n        set_1904()                  #设置纪元开始年\n        set_optimization()          #设置优化\n\n  new()   \n    使用\u0026#34;new()\u0026#34;构造方法创建一个新的Excel工作簿，该方法接受一个文件名或文件句柄作为参数。下面的例子根据一个文件名来创建一个新的Excel文件：\n\t\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;filename.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hi Excel!\u0026#39; );\n\n    下面是使用文件名作为new()方法参数的其他例子：\n\t\n        my $workbook1 = Excel::Writer::XLSX-\u0026gt;new( $filename );\n        my $workbook2 = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;/tmp/filename.xlsx\u0026#39; );\n        my $workbook3 = Excel::Writer::XLSX-\u0026gt;new( \u0026#34;c:\\\\tmp\\\\filename.xlsx\u0026#34; );#Windows\n        my $workbook4 = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;c:\\tmp\\filename.xlsx\u0026#39; );\n\n    最后两个例子说明了怎样通过转义目录分隔符\u0026#34;\\\u0026#34;或使用单引号保证值不被内插来在DOS上或Windows上建立Excel文件。\n\t\n    我们推荐文件名使用\u0026#34;.xlsx\u0026#34;而不是\u0026#34;.xls\u0026#34;后缀，因为后者在使用XLSX格式的文件时会发生警告。\n  \n  \n\t\u0026#34;new()\u0026#34;构造函数方法返回一个Excel::Writer::XLSX对象，你可以使用这个对象来添加工作表并存储数据。\t应该注意的是，尽管没有特别要求使用\u0026#34;my\u0026#34;，但是它定义了新工作簿变量的作用域，并且，在大多数情况下，它保证了工作簿不用显式地调用\u0026#34;close()方法\u0026#34;就能被正确地关闭。\n\t\n    如果文件不能被创建，由于文件权限或其他一些原因，\u0026#34;new\u0026#34;会返回\u0026#34;undef\u0026#34;。因此，在继续之前检查\u0026#34;new\u0026#34;的返回值是个好习惯。通常，如果存在文件创建错误，Perl变量$!就会被设置：\n\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;protected.xlsx\u0026#39; );\n        die \u0026#34;Problems creating new Excel file: $!\u0026#34; unless defined $workbook;\n\t\t\n\t你也可以传递一个合法的文件句柄给\u0026#34;new()\u0026#34;构造函数。例如在一个CGI程序中你可以这样做：\n\n        binmode( STDOUT );\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \\*STDOUT );\n\n    \n    对于CGI程序，你也可以使用特别的Perl文件名 \u0026#39;-\u0026#39;，它会把输出重定向到标准输出：\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;-\u0026#39; );\n\n   可以查看例子中的cgi.pl\n\n    然而，这种特殊的情况在\u0026#34;mod_perl\u0026#34;程序中不起作用，你必须做一些下面的事情：\n        # mod_perl 1\n        ...\n        tie *XLS, \u0026#39;Apache\u0026#39;;\n        binmode( XLSX );\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \\*XLSX );\n        ...\n\n        # mod_perl 2\n        ...\n        tie *XLSX =\u0026gt; $r;    # Tie to the Apache::RequestRec object\n        binmode( *XLSX );\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \\*XLSX );\n        ...\n\n    请查看mod_perl1.pl\u0026#34; 和 \u0026#34;mod_perl2.pl\u0026#34;\n  \n  \n\t如果你想通过socket 去 stream一个Excel文件或者你想把一个Excel文件存进一个标量，\n\t那么文件句柄会很有用。\n\t例如，下面是把Excel文件写入标量的一种方法：\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        open my $fh, \u0026#39;\u0026gt;\u0026#39;, \\my $str or die \u0026#34;Failed to open filehandle: $!\u0026#34;;\n\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( $fh );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hi Excel!\u0026#39; );\n\n        $workbook-\u0026gt;close();\n\n        #  Excel文件现在在$str中。记得在打印$str之前binmode()输出文件句柄\n        binmode STDOUT;\n        print $str;\n\n    请查看\u0026#34;write_to_scalar.pl\u0026#34; 和 \u0026#34;filehandle.pl\u0026#34; \n\n    注意binmode()的要求。一个Excel文件由二进制数据组成。因此，如果你使用一个文件句柄你应该保证在传递给\u0026#34;new()\u0026#34;方法之前将它binmode().不管你使用Windows或其他何种平台，你都应该这样做。\n    \n    如果你使用文件名而非文件句柄，你不用担心\u0026#34;binmode()\u0026#34;.当Excel::Writer::XLSX将文件名转换为文件句柄时，它会在内部执行binmode().\n---------------------------------------------------------------------------------------------------------\t\n  add_worksheet( $sheetname )   #参数为工作表名\n   \n\t至少一个工作表应该被添加到工作簿中。工作表被用于将数据写入单元格：\n        $worksheet1 = $workbook-\u0026gt;add_worksheet();               # Sheet1\n        $worksheet2 = $workbook-\u0026gt;add_worksheet( \u0026#39;Foglio2\u0026#39; );    # Foglio2\n        $worksheet3 = $workbook-\u0026gt;add_worksheet( \u0026#39;Data\u0026#39; );       # Data\n        $worksheet4 = $workbook-\u0026gt;add_worksheet();               # Sheet4\n\n\n    如果没有指定$sheetname，默认会使用Sheet1,Sheet2....\n    \n\t\n    工作表名必须是合法的Excel工作表名。它不能包含以下字符,\u0026#34;[ ] : * ? / \\\u0026#34; ,并且长度必须小于32个字符。此外，你不能在一个以上的工作表中使用同一个文件名，或大小写敏感的文件名。\n\t\n----------------------------------------------------------------------------------------------\n  add_format( %properties )   #添加格式\n    \n\t    \u0026#34;add_format()\u0026#34;方法可以被用作创建新的格式对象，它可以被用于将格式应用到单元格中。你可以在创建时通过含有属性值的哈希定义属性或之后通过方法调用定义属性：\n\t\t\n\t$format1 = $workbook-\u0026gt;add_format( %props );    # 在创建时定义属性\n    $format2 = $workbook-\u0026gt;add_format();            # 创建后再定义属性\n\n    请查看“单元格格式化”章节获取详细信息\n---------------------------------------------------------------------------------------------------------\n  add_chart( %properties )  #添加图表\n    \t该方法用于新建一个图表作为一个独立的工作表（默认），或作为一个可嵌入的对象，通过\u0026#34;insert_chart()\u0026#34;工作表方法插入到工作表中。\n\t\n    my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;column\u0026#39; );\n\n    属性可以设置为:\n\n        type     (required)#必须的选项\n        subtype  (optional)#图表子类型(可选)\n        name     (optional)\n        embedded (optional)\n\n    *   \u0026#34;type\u0026#34; 类型\n\n        这是必须的参数。它定义了将被创建的图表的类型。\n         my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39; );\n\n        可用的type类型如下:\n\n            area\t\t#区域图\n            bar\t\t\t#条形图\n            column\t\t#柱形图\n            line\t\t#线图\n            pie         #饼图\n            scatter     #散点图\n            stock\t\t#存量图\n\n    *   \u0026#34;subtype\u0026#34;       #图表类型（子类型）\n\n        \n        用于在需要时定义一个图表的子类型\n            my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;bar\u0026#39;, subtype =\u0026gt; \u0026#39;stacked\u0026#39; );\n\n        \n        目前只有条形图和柱形图支持子类型(stacked and percent_stacked)\n\t\t\n    *   \u0026#34;name\u0026#34;\n\n        为图表设置名字。名字属性是可选的，如果它不被支持，它会默认为\u0026#34;Chart1,Chart2....Chartn\u0026#34;.\n\t\t图表名必须是合法的表名，与\u0026#34;add_worksheet()\u0026#34;规则一样。\u0026#34;name\u0026#34;属性可以在嵌套的图表中省略。\n            my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39;, name =\u0026gt; \u0026#39;Results Chart\u0026#39; );\n\n    *   \u0026#34;embedded\u0026#34;\n\n        指定图表对象会通过\u0026#34;insert_chart()\u0026#34;工作表方法插入到工作表中。如果没有设置这个标志就尝试插入图表，会出现错误。\n            my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39;, embedded =\u0026gt; 1 );\n\n            # Configure the chart.\n            ...\n\n            # 将图表插入到工作表中\n            $worksheet-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart );\n\n\t查看Excel::Writer::XLSX::Chart获取更详细的关于在创建后如何配置图表对象的信息。也可查看chart_*.pl程序。\n\n\n  close()\n        一般地，当你的程序结束或工作簿对象超出作用域时，你的Excel文件会被自动关闭。然而，你可以使用close()方法显式地关闭Excel文件。\n        $workbook-\u0026gt;close();#显示地关闭Excel\n\n       如果Excel文件必须在对其执行一些外部动作诸如复制、读取大小或者把它作为电子邮件的附件之前关闭，需要显式地用close()声明\n        此外，\u0026#34;close()\u0026#34;被用于阻止Perl的垃圾回收器以错误的顺序处理工作簿、工作表和格式对象。这种情况出现在下面：\n        如果\u0026#34;my()\u0026#34;没有被用于声明使用\u0026#34;new()\u0026#34;创建的工作簿变量作用域\n        如果在子例程中调用\u0026#34;new()\u0026#34;, \u0026#34;add_worksheet()\u0026#34; 或者 \u0026#34;add_format()\u0026#34;方法。\n\t\t\n  \n    原因是Excel::Writer::XLSX依赖Perl的\u0026#34;DESTROY\u0026#34;机制依特定顺序触发destructor析构方法。当工作簿、工作表和格式变量不是词法作用域或它们拥有不同的词法作用域时，前面这种情况不会发生。\n    一般地，如果你创建一个0字节的文件或者你不能建立一个文件，你需要调用\u0026#34;close()\u0026#34;方法。\n    \n\t  \u0026#34;close()\u0026#34;的返回值与perl关闭使用\u0026#34;new()\u0026#34;方法建立的文件的返回值一样。这允许你以常规方式处理错误\n        $workbook-\u0026gt;close() or die \u0026#34;Error closing file: $!\u0026#34;;\n\n  set_properties()\n  \n\t\u0026#34;set_properties\u0026#34; 方法可被用于设置通过\u0026#34;Excel::Writer::XLSX\u0026#34;模块创建的Excel文件的文档属性。\n    当你使用Excel中的\u0026#34;办公按钮\u0026#34; -\u0026gt;\u0026#34;准备\u0026#34;-\u0026gt;\u0026#34;属性\u0026#34;选项时，可以看到这些属性。\n\n\t属性值应该以哈希格式传递，如下：\n\n        $workbook-\u0026gt;set_properties(\n            title    =\u0026gt; \u0026#39;This is an example spreadsheet\u0026#39;,\n            author   =\u0026gt; \u0026#39;John McNamara\u0026#39;,\n            comments =\u0026gt; \u0026#39;Created with Perl and Excel::Writer::XLSX\u0026#39;,\n        );\n\n    可以被设置的属性是:\n\n        title    #标题\n        subject\t #主题\t\n        author\t #作者\n        manager  #经理\n        company  #公司\n        category #类别\n        keywords #关键字\n        comments #注释 \n        status\t #状态\n\n    请查看\u0026#34;properties.pl\u0026#34; 程序。\n\n  define_name()\n    \n    该方法被用于定义一个名字，它能被用于表示工作簿中的一个值，一个单独的单元格，或一定范围内的单元格\n\t例如：设置一个 global/workbook 名:\n\n        # Global/workbook names.\n        $workbook-\u0026gt;define_name( \u0026#39;Exchange_rate\u0026#39;, \u0026#39;=0.96\u0026#39; );\n        $workbook-\u0026gt;define_name( \u0026#39;Sales\u0026#39;,         \u0026#39;=Sheet1!$G$1:$H$10\u0026#39; );\n\n    也可以使用语法\u0026#34;sheetname!definedname\u0026#34;在名字之前加上表名来定义一个 local/worksheet:\n        # Local/worksheet name.\n        $workbook-\u0026gt;define_name( \u0026#39;Sheet2!Sales\u0026#39;,  \u0026#39;=Sheet2!$G$1:$G$10\u0026#39; );\n\n    如果工作表名含有空格或特殊字符，你必须像在Excel中一样，用单引号将名字括起来：\n        $workbook-\u0026gt;define_name( \u0026#34;\u0026#39;New Data\u0026#39;!Sales\u0026#34;,  \u0026#39;=Sheet2!$G$1:$G$10\u0026#39; );\n\n    查看 defined_name.pl 程序。\n\n  set_tempdir()\n   \n     \u0026#34;Excel::Writer::XLSX\u0026#34;在组装成最后的工作簿之前，把数据存储在临时文件中\n     \u0026#34;File::Temp\u0026#34;模块用于创建这些临时文件。File::Temp模块使用\u0026#34;File::Spec\u0026#34;为这些临时文件指定一个合适的位置，例如\u0026#34;/tmp\u0026#34;或\u0026#34;c:\\windows\\temp\u0026#34;.你可以按下面的方法找出你系统上哪个目录被使用了：\n        perl -MFile::Spec -le \u0026#34;print File::Spec-\u0026gt;tmpdir()\n    如果默认的临时文件目录不能使用，你可以使用\u0026#34;set_tempdir()\u0026#34;方法指定一个可供选择的位置：\n        $workbook-\u0026gt;set_tempdir( \u0026#39;/tmp/writeexcel\u0026#39; );\n        $workbook-\u0026gt;set_tempdir( \u0026#39;c:\\windows\\temp\\writeexcel\u0026#39; );\n\n    用于存放临时文件的目录必须先存在，“set_temp()”方法不会新建一个目录。\n    一个潜在问题是一些Windows系统将并发临时文件的数量限制为大约800个。这意味着，一个在该种系统上运行的单个程序将会被限制创建总共800个工作簿和工作表对象。如果必要，你可以运行多个非并发程序来避免这种情况。\n  set_custom_color( $index, $red, $green, $blue )\n   #设置自定义颜色值\n    \u0026#34;set_custom_color()\u0026#34;方法能用于使用更合适的颜色重载其中之一的内建颜色值。\n\t$index的值应该在8..63之间，查看see \u0026#34;COLOURS IN EXCEL\u0026#34;.\n\n\t默认的命名颜色使用如下索引：\n\n         8   =\u0026gt;   black\n         9   =\u0026gt;   white\n        10   =\u0026gt;   red\n        11   =\u0026gt;   lime       #绿黄色\n        12   =\u0026gt;   blue\n        13   =\u0026gt;   yellow\n        14   =\u0026gt;   magenta    #洋红色\n        15   =\u0026gt;   cyan       #蓝绿色\n        16   =\u0026gt;   brown\n        17   =\u0026gt;   green\n        18   =\u0026gt;   navy      #淡蓝色\n        20   =\u0026gt;   purple    #紫色\n        22   =\u0026gt;   silver    #银色\n        23   =\u0026gt;   gray      #灰色\n        33   =\u0026gt;   pink      #粉红色\n        53   =\u0026gt;   orange\n\n    使用它的RGB(red green blue)成分设置新颜色。 $red,$green 和 $blue的值范围必须在0..255之间。\n\t你可以在Excel中使用\u0026#34;工具\u0026#34;-\u0026gt;选项-\u0026gt;颜色-\u0026gt;修改\u0026#34;对话框决定需要的颜色。\n\t\n\t\u0026#34;set_custom_color()\u0026#34;工作簿方法可以使用HTML风格的十六进制值：\n\n        $workbook-\u0026gt;set_custom_color( 40, 255,  102,  0 );       # Orange\n        $workbook-\u0026gt;set_custom_color( 40, 0xFF, 0x66, 0x00 );    # Same thing\n        $workbook-\u0026gt;set_custom_color( 40, \u0026#39;#FF6600\u0026#39; );           # Same thing\n\n        my $font = $workbook-\u0026gt;add_format( color =\u0026gt; 40 );        # Modified colour\n\n   \n    \u0026#34;set_custom_color()\u0026#34;方法的返回值是被修改的颜色的索引：\n        my $ferrari = $workbook-\u0026gt;set_custom_color( 40, 216, 12, 12 );\n\n        my $format = $workbook-\u0026gt;add_format(\n            bg_color =\u0026gt; $ferrari,\n            pattern  =\u0026gt; 1,\n            border   =\u0026gt; 1\n        );\n\n    注意，在XLSX格式中，颜色调色板不确切局限为53种纯色。Excel::Writer::XLSX模块会在以后的阶段扩展以支持新的，半无限的调色板。\n  sheets( 0, 1, ... )\n   \n\t\u0026#34;sheets()\u0026#34;方法返回一个工作簿中工作表的列表或者列表切片\n\n\t如果没有传递参数给sheet()方法，则返回工作簿中的所有工作表。如果你想对一个工作表进行重复操作，这将很有用。\n\n        for $worksheet ( $workbook-\u0026gt;sheets() ) {\n            print $worksheet-\u0026gt;get_name();\n        }\n\n  \n\t你可以指定一个列表切片返回一个或多个工作表对象：\n\t\n        $worksheet = $workbook-\u0026gt;sheets( 0 );\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; );\n\n    或者因为\u0026#34;sheets()\u0026#34;的返回值是一个对工作表对象的引用，你可以将上面的例子写为：\n        $workbook-\u0026gt;sheets( 0 )-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; );\n\n\t\n\t下面的例子返回一个工作簿中的第一个和最后一个工作表：\n\n        for $worksheet ( $workbook-\u0026gt;sheets( 0, -1 ) ) {\n            # Do something\n        }\n\n\n  set_1904()\n   Excel将数据存储为实数，其整数部分存储自新纪元以来的天数，其小数部分存储一天的百分比。新纪元可以是1900或1904。Windows上的Excel使用1900，Mac上的Excel使用1904.然而，任何平台上的Excel都会在系统之间自动转换。\n   Excel::Writer::XLSX默认使用1900格式存储数据。如果你想改变它，你可以调用\u0026#34;set_1904()\u0026#34;工作簿方法。对于1900它返回0，对于1904它返回1.\n\n\n  set_optimization()\n  \n\t\u0026#34;set_optimization()\u0026#34; 方法用于打开Excel::Writer::XLSX模块中的优化方案。目前只有一条减少内存使用的优化方案。\n\n        $workbook-\u0026gt;set_optimization();\n\n\n    注意，打开此优化方案后，当通过\u0026#34;write_*()\u0026#34;方法中的其中之一在新行中添加一个单元格后，一列数据被写入然后被删除。因为一旦优化开启后，这样的数据应该以连续的行顺序写入。？\n    \n\t该方法必须在任何调用\u0026#34;add_worksheet()\u0026#34;方法之前被调用。\n\nWORKSHEET METHODS 工作表方法\n\t\n\t通过调用工作簿对象中的\u0026#34;add_worksheet()\u0026#34;方法创建一个新的工作表:\n\n        $worksheet1 = $workbook-\u0026gt;add_worksheet();\n        $worksheet2 = $workbook-\u0026gt;add_worksheet();\n\n\t下面的方法对于一个新的worksheet是可用的：\n\n        write()\n        write_number()\n        write_string()\n        write_rich_string()\n        keep_leading_zeros()    #保留前导0\n        write_blank()\n        write_row()\n        write_col()\n        write_date_time()\n        write_url()              #写入url\n        write_url_range()\n        write_formula()#写入公式\n        write_comment()#写入注释\n        show_comments()#显式注释\n        set_comments_author()\n        add_write_handler()\n        insert_image()#插入图像\n        insert_chart()#插入图表\n        data_validation()#数据检验\n        conditional_format()\n        get_name()\n        activate()#激活\n        select()\n        hide()\n        set_first_sheet()\n        protect()\n        set_selection()\n        set_row()\n        set_column()\n        outline_settings()\n        freeze_panes()          #冻结窗格\n        split_panes()\t\t    #分割窗格\n        merge_range()\t\t\t#合并值域\n        merge_range_type()\n        set_zoom()\n        right_to_left()\n        hide_zero()\t\t\t\t#隐藏0\n        set_tab_color()\t\t\t#设置标记颜色\n        autofilter()\t\t\t#自动筛选\n        filter_column()\n        filter_column_list()\n\n  Cell notation 单元格表示法(先列-后行) \n  \t\n\tExcel::Writer::XLSX支持两种形式的表示法来指定单元格的位置:行-列表示法和A1表示法。\n\n    Row-column notation uses a zero based index for both row and column\n    while A1 notation uses the standard Excel alphanumeric sequence of\n    column letter and 1-based row. 例如，:\n\n\t行列表示法对行-列都使用以0为基础的索引\n\t而A1表示法使用标准的Excel字母数字序列为列，以1为基础作为行。例如：\n\t\n        (0, 0)      # 最左最顶部的单元格（使用行-列表示法）\n        (\u0026#39;A1\u0026#39;)      # The top left cell in A1 notation.\n\n\n        (1999, 29)  # 行-列表示法.\n        (\u0026#39;AD2000\u0026#39;)  # 使用A1表示法的同一单元格\n#       单元格列的范围在Excel2003中是A..IV\n  \n\t如果你提及单元格编程，行-列表示法很有用：\n\n        for my $i ( 0 .. 9 ) {\n            $worksheet-\u0026gt;write( $i, 0, \u0026#39;Hello\u0026#39; );    # Cells A1 to A10\n        }\n\n   \n    A1表示法对于手动设置工作表和使用公式工作很有帮助：\n        $worksheet-\u0026gt;write( \u0026#39;H1\u0026#39;, 200 );\n        $worksheet-\u0026gt;write( \u0026#39;H2\u0026#39;, \u0026#39;=H1+1\u0026#39; ); #使用公式\nEcxel形如：\n ABCDEFGHIJKLMN\n1\n2\n3\n4\n5\n6\n     在公式和可用的方法中你也可以使用\u0026#34;A:A\u0026#34;的列表示法：\n\t\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=SUM(B:B)\u0026#39; );\n\n  \t包含在套件中的Excel::Writer::XLSL::Utility 模块含有A1表示法的帮助函数，例如：\n\t\n        use Excel::Writer::XLSX::Utility;\n\n        ( $row, $col ) = xl_cell_to_rowcol( \u0026#39;C2\u0026#39; );    # (1, 2)\n        $str           = xl_rowcol_to_cell( 1, 2 );    # C2\n\n  \t简单地，在下面给出的章节中工作表方法调用的参数列表依据行-列表示法，任何情况下，都可以使用A1表示法\n\t\n  \n\t注意：在Excel中也可以使用R1C1表示法。但Excel::Writer::XLSX不支持这。\n\t\n  write( $row, $column, $token, $format )\n \n\tExcel的数据类型之间有区别，比如字符串，数字，空格，公式和超链接。为了简化写入数据的处理，write()方法为更多的特定方法指定一种普遍的别名：\n\n        write_string()\n        write_number()\n        write_blank()\n        write_formula()\n        write_url()\n        write_row()\n        write_col()\n\n\t一般规则就是：如果数据看起来像什么那就写入什么。下面是用 行-列表示法和A1表示法写的例子：\n                                                            # Same as:\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hello\u0026#39;                 ); # write_string()\n        $worksheet-\u0026gt;write( 1, 0, \u0026#39;One\u0026#39;                   ); # write_string()\n        $worksheet-\u0026gt;write( 2, 0,  2                      ); # write_number()\n        $worksheet-\u0026gt;write( 3, 0,  3.00001                ); # write_number()\n        $worksheet-\u0026gt;write( 4, 0,  \u0026#34;\u0026#34;                     ); # write_blank()\n        $worksheet-\u0026gt;write( 5, 0,  \u0026#39;\u0026#39;                     ); # write_blank()\n        $worksheet-\u0026gt;write( 6, 0,  undef                  ); # write_blank()\n        $worksheet-\u0026gt;write( 7, 0                          ); # write_blank()\n        $worksheet-\u0026gt;write( 8, 0,  \u0026#39;http://www.perl.com/\u0026#39; ); # write_url()\n        $worksheet-\u0026gt;write( \u0026#39;A9\u0026#39;,  \u0026#39;ftp://ftp.cpan.org/\u0026#39;  ); # write_url()\n        $worksheet-\u0026gt;write( \u0026#39;A10\u0026#39;, \u0026#39;internal:Sheet1!A1\u0026#39;   ); # write_url()\n        $worksheet-\u0026gt;write( \u0026#39;A11\u0026#39;, \u0026#39;external:c:\\foo.xlsx\u0026#39; ); # write_url()\n        $worksheet-\u0026gt;write( \u0026#39;A12\u0026#39;, \u0026#39;=A3 + 3*A4\u0026#39;           ); # write_formula()\n        $worksheet-\u0026gt;write( \u0026#39;A13\u0026#39;, \u0026#39;=SIN(PI()/4)\u0026#39;         ); # write_formula()\n        $worksheet-\u0026gt;write( \u0026#39;A14\u0026#39;, \\@array                ); # write_row()\n        $worksheet-\u0026gt;write( \u0026#39;A15\u0026#39;, [\\@array]              ); # write_col()\n\n        #如果设置了保留前置0属性：\n\t\t\n        $worksheet-\u0026gt;write( \u0026#39;A16\u0026#39;, 2                      ); # write_number()\n        $worksheet-\u0026gt;write( \u0026#39;A17\u0026#39;, 02                     ); # write_string()\n        $worksheet-\u0026gt;write( \u0026#39;A18\u0026#39;, 00002                  ); # write_string()\n\n        # Write an array formula. Not available in Spreadsheet::WriteExcel.\n         $worksheet-\u0026gt;write( \u0026#39;A19\u0026#39;, \u0026#39;{=SUM(A1:B1*A2:B2)}\u0026#39;  ); # write_formula()\n\n   \n\t\u0026#34;看起来像\u0026#34;的规则由正则表达式定义：\n    \u0026#34;write_number()\u0026#34; 如果 $token 是一个基于如下正则的数字：\n    \u0026#34;$token =~ /^([+-]?)(?=\\d|\\.\\d)\\d*(\\.\\d*)?([Ee]([+-]?\\d+))?$/\u0026#34;.\n\n    \u0026#34;write_string()\u0026#34; 如果设置了\u0026#34;保留前导0\u0026#34;(\u0026#34;keep_leading_zeros()\u0026#34;)并且 $token 是一个基于如下正则的带有前导0的整数：\u0026#34;$token =~/^0\\d+$/\u0026#34;.\n\n    \u0026#34;write_blank()\u0026#34; 如果 $token 未定义或是一个空字符串: \u0026#34;undef\u0026#34;, \u0026#34;\u0026#34; 或 \u0026#39;\u0026#39;.\n\n    \u0026#34;write_url()\u0026#34; 如果 $token 是一个基于如下正则的 http, https, ftp 或者 mailto URL \n\t              \u0026#34;$token =~ m|^[fh]tt?ps?://|\u0026#34; or \u0026#34;$token =~m|^mailto:|\u0026#34;.\n\n    \u0026#34;write_url()\u0026#34; 如果 $token 是一个基于如下正则的内部的或外部的引用：\n                \t\u0026#34;$token =~ m[^(in|ex)ternal:]\u0026#34;.\n\n    \u0026#34;write_formula()\u0026#34; 如果$token的第一个字符是\u0026#34;=\u0026#34;.\n\n    \u0026#34;write_array_formula()\u0026#34; 如果 $token 匹配 \u0026#34;/^{=.*}$/\u0026#34;.\n\n    \u0026#34;write_row()\u0026#34; 如果 $token 是一个数组引用.\n\n    \u0026#34;write_col()\u0026#34; 如果 $token 是数组引用中的数组引用。\n\n    \u0026#34;write_string()\u0026#34; 如果前面任一情况都不适用.\n\n     $format 参数是可选的。它应该是个合法的格式对象。查看 \u0026#34;CELL FORMATTING\u0026#34;:\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_bold();\n        $format-\u0026gt;set_color( \u0026#39;red\u0026#39; );\n        $format-\u0026gt;set_align( \u0026#39;center\u0026#39; );\n\n        $worksheet-\u0026gt;write( 4, 0, \u0026#39;Hello\u0026#39;, $format );    # Formatted string\n\n    write()方法会忽略空字符串或\u0026#34;undef\u0026#34;，除非提供了格式。就这点而论，你不必担心对空值或未定义值的处理。查看\u0026#34;write_blank()\u0026#34; 方法。\n     \u0026#34;write()\u0026#34;方法的一个问题是，偶尔，数据看起来像一个数但是你不想把它看作一个数字。例如，邮政编码或ID号常以前导0开头。如果将该数据作为数字写入，则前导0会被删除。你可以使用\u0026#34;keep_leading_zeros()\u0026#34;方法改变该默认行为。当这个特性起作用时，任何带有前导0的整数会被当作字符串并且前导0被保留。查看\u0026#34;keep_leading_zeros()\u0026#34;章节获取该问题的详细信息。\n    \n\t你也可以使用\u0026#34;add_write_handler()\u0026#34;把你自己的数据处理器添加到\u0026#34;write()\u0026#34;方法。\n\n    \u0026#34;write()\u0026#34;方法也会处理UTF-8格式的Unicode字符串。\n    \u0026#34;write\u0026#34; 方法返回:\n\n        0 成功.\n       -1 参数个数不足\n       -2 行或列超限\n       -3 字符串过长\n\n  write_number( $row, $column, $number, $format )\n    向行和列指定（$row and $column）的单元格中写入整数或浮点数。\n        $worksheet-\u0026gt;write_number( 0, 0, 123456 );\n        $worksheet-\u0026gt;write_number( \u0026#39;A2\u0026#39;, 2.3451 );\n\n     $format 参数可选.\n\n    一般地，使用\u0026#34;write()\u0026#34;方法就足够了。\n    注意：有些版本的Excel2007不显示由Excel::Writer::XLSX写入的公式计算值。求助于Excel的所有可用服务包来修复该问题。\n  write_string( $row, $column, $string, $format )\n   \n    向行和列指定的单元格中写入字符串：\n        $worksheet-\u0026gt;write_string( 0, 0, \u0026#39;Your text here\u0026#39; );\n        $worksheet-\u0026gt;write_string( \u0026#39;A2\u0026#39;, \u0026#39;or here\u0026#39; );\n\n   最大的字符串长度为32767个字符。然而，Excel单元格中能显示的最大字段是1000个。所有的32767个字符可以显示在一个公式栏中。\n    $format参数是可选的.\n\n   \n    \u0026#34;write()\u0026#34; 方法也会处理UTF-8格式的字符串。请查看\u0026#34;unicode_*.pl\u0026#34;程序\n   \n    一般地，使用\u0026#34;write()\u0026#34; 方法就足够了。\t然而，你有时候可能会使用\u0026#34;write_string()\u0026#34;方法去写入看起来像数字但你又不想把它看作数字的数据。例如，邮政编码或电话号码：\n        # 作为普通的字符串写入\n        $worksheet-\u0026gt;write_string( \u0026#39;A1\u0026#39;, \u0026#39;01209\u0026#39; );\n\n   然而，如果用户编辑该字符串，Excel可能会把字符串转换回数字。你可以使用Excel的文本格式\u0026#34;@\u0026#34;来避免它:\n        # 格式化为字符串.编辑时不转换为数字。\n        my $format1 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;@\u0026#39; );\n        $worksheet-\u0026gt;write_string( \u0026#39;A2\u0026#39;, \u0026#39;01209\u0026#39;, $format1 );\n\n    write_rich_string( $row, $column, $format, $string, ..., $cell_format )\n\n    \u0026#34;write_rich_string()\u0026#34;方法用于写入带有多种格式的字符串。例如，写入字符串\u0026#34;This is bold and this is italic\u0026#34; 你可以使用下面的方法： \n        my $bold   = $workbook-\u0026gt;add_format( bold   =\u0026gt; 1 );\n        my $italic = $workbook-\u0026gt;add_format( italic =\u0026gt; 1 );\n\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;,\n            \u0026#39;This is \u0026#39;, $bold, \u0026#39;bold\u0026#39;, \u0026#39; and this is \u0026#39;, $italic, \u0026#39;italic\u0026#39; );\n\n    \n    基本规则是把字符串分段并把$format格式对象放在你想格式化的片段之前。例如：\n        # 未格式化的字符串\n          \u0026#39;This is an example string\u0026#39;\n\n        # 分割\n          \u0026#39;This is an \u0026#39;, \u0026#39;example\u0026#39;, \u0026#39; string\u0026#39;\n\n        # 在你想格式化的片段前添加格式\n          \u0026#39;This is an \u0026#39;, $format, \u0026#39;example\u0026#39;, \u0026#39; string\u0026#39;\n\n        # In Excel::Writer::XLSX.\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;,\n            \u0026#39;This is an \u0026#39;, $format, \u0026#39;example\u0026#39;, \u0026#39; string\u0026#39; );\n\n     没有格式的字符串片段使用默认的格式。例如，当写入字符串\u0026#34;Some bold text\u0026#34;你会使用下面的第一个例子，但是它与第二个例子等价。\n        # 使用默认格式:\n        my $bold    = $workbook-\u0026gt;add_format( bold =\u0026gt; 1 );\n\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;,\n            \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold\u0026#39;, \u0026#39; text\u0026#39; );\n\n        # 或更明确地:\n        my $bold    = $workbook-\u0026gt;add_format( bold =\u0026gt; 1 );\n        my $default = $workbook-\u0026gt;add_format();\n\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;,\n            $default, \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold\u0026#39;, $default, \u0026#39; text\u0026#39; );\n\n    对于Excel，只有格式的字体属性诸如字体名，风格，大小，下划线，颜色和效果被应用到字符串片段上。其他属性诸如边框，背景，对齐方式必须被应用于单元格。\n\t\n    \u0026#34;write_rich_string()\u0026#34;方法允许你把最后一个参数作为单元格格式使用（如果它是一个格式对象的话）来完成以上功能。下面的例子是使单元格中的rich string 居中对齐。\n\n        my $bold   = $workbook-\u0026gt;add_format( bold  =\u0026gt; 1 );\n        my $center = $workbook-\u0026gt;add_format( align =\u0026gt; \u0026#39;center\u0026#39; );\n\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A5\u0026#39;,\n            \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold text\u0026#39;, \u0026#39; centered\u0026#39;, $center );\n\n    查看\u0026#34;rich_strings.pl\u0026#34; 获取详细信息\n\n        my $bold   = $workbook-\u0026gt;add_format( bold        =\u0026gt; 1 );\n        my $italic = $workbook-\u0026gt;add_format( italic      =\u0026gt; 1 );\n        my $red    = $workbook-\u0026gt;add_format( color       =\u0026gt; \u0026#39;red\u0026#39; );\n        my $blue   = $workbook-\u0026gt;add_format( color       =\u0026gt; \u0026#39;blue\u0026#39; );\n        my $center = $workbook-\u0026gt;add_format( align       =\u0026gt; \u0026#39;center\u0026#39; );\n        my $super  = $workbook-\u0026gt;add_format( font_script =\u0026gt; 1 );\n\n\n        # 使用多种格式写入一些字符串\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;,\n            \u0026#39;This is \u0026#39;, $bold, \u0026#39;bold\u0026#39;, \u0026#39; and this is \u0026#39;, $italic, \u0026#39;italic\u0026#39; );\n\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A3\u0026#39;,\n            \u0026#39;This is \u0026#39;, $red, \u0026#39;red\u0026#39;, \u0026#39; and this is \u0026#39;, $blue, \u0026#39;blue\u0026#39; );\n\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A5\u0026#39;,\n            \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold text\u0026#39;, \u0026#39; centered\u0026#39;, $center );\n\n        $worksheet-\u0026gt;write_rich_string( \u0026#39;A7\u0026#39;,\n            $italic, \u0026#39;j = k\u0026#39;, $super, \u0026#39;(n-1)\u0026#39;, $center );\n\n    正如 \u0026#34;write_sting()\u0026#34; 一样，它可写入的最大字符数是 32767个. \n\n  keep_leading_zeros()\n\n    当使用\u0026#34;write()\u0026#34;方法时， keep_leading_zeros()方法改变了带有前导0整数的默认处理方式。\n     \u0026#34;write()\u0026#34;方法使用正则表达式来决定写入什么样的数据到Excel工作表中。如果数据看起来像数字它就使用\u0026#34;write_number()\u0026#34;方法写入数字。该方法的一个问题是偶尔数据看起来像数字但你不想将它看作一个数字。\n\t\n   \t例如邮政编码和ID号，常以前导0开头。如果你把这样的数据当作数字写入，则前导0被删除。当你手动在Excel中输入数据时，这也是默认行为。\n\n     为了避免此问题，你可以使用三选项之一。写入一个格式化后的数字、将数字当作字符串写入或使用\u0026#34;keep_leading_zeros()\u0026#34;方法来改变\u0026#34;write()\u0026#34;方法的默认行为：\n        # 隐式地写入一个数字,前导0被删除: 1209\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;01209\u0026#39; );\n\n        #使用格式写入以0填充的数字: 01209\n        my $format1 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;00000\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;01209\u0026#39;, $format1 );\n\n        # 显式地当作字符串写入: 01209\n        $worksheet-\u0026gt;write_string( \u0026#39;A3\u0026#39;, \u0026#39;01209\u0026#39; );\n\n        # 隐式地当作字符串写入: 01209\n        $worksheet-\u0026gt;keep_leading_zeros();\n        $worksheet-\u0026gt;write( \u0026#39;A4\u0026#39;, \u0026#39;01209\u0026#39; );\n\n  \n\t上面的代码会生成一个如下所示的工作表:\n\n         -----------------------------------------------------------\n        |   |     A     |     B     |     C     |     D     | ...\n         -----------------------------------------------------------\n        | 1 |      1209 |           |           |           | ...\n        | 2 |     01209 |           |           |           | ...\n        | 3 | 01209     |           |           |           | ...\n        | 4 | 01209     |           |           |           | ...\n\n   \n    例子里单元格在不同的边上是因为Excel默认以左对齐方式显式字符串，以右对齐方式显式数字。\n\n    应该注意的是如果用户编辑例子中的\u0026#34;A3\u0026#34;和\u0026#34;A4\u0026#34;数据，字符串会恢复为数字。这还是Excel的默认行为。使用文本格式\u0026#34;@\u0026#34;可以避免该行为：\n        # Format as a string (01209)\n        my $format2 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;@\u0026#39; );\n        $worksheet-\u0026gt;write_string( \u0026#39;A5\u0026#39;, \u0026#39;01209\u0026#39;, $format2 );\n\n   \n    \u0026#34;keep_leading_zeros()\u0026#34;特性默认是关闭的，它以0或1为参数。如果没有给它指定参数，默认为1：\n        $worksheet-\u0026gt;keep_leading_zeros(   )     # Set on\n        $worksheet-\u0026gt;keep_leading_zeros( 1 );    # Set on\n        $worksheet-\u0026gt;keep_leading_zeros( 0 );    # Set off\n\n   \n  write_blank( $row, $column, $format )\n   \n    写入由行和列指定的空白单元格：\n        $worksheet-\u0026gt;write_blank( 0, 0, $format );\n    \n    该方法用于向不含字符串或数字值的单元格添加格式。\n    Excel中\u0026#34;空\u0026#34;单元格和\u0026#34;空白\u0026#34;单元格不同。空单元格不包含数据，空白单元格不包含数据但是却含有格式。Excel存储\u0026#34;空白\u0026#34;单元格但忽略“空”单元格。\n    \n\t像这样，如果你写入的单元格为空且不含格式，它会被忽略：\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, undef, $format );    # write_blank()\n        $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, undef );             # Ignored\n\n\t这看起来很乏味的事实意味着你可以不用特别处理\u0026#34;undef\u0026#34;和空字符串值写入数组的数据。\n    \n\n  write_row( $row, $column, $array_ref, $format )\n   \u0026#34;write_row()\u0026#34;方法能用于将1维数组或2维数组的数据合为一体。这对于将数据库查询结果转换为Excel工作表很有用。 你必须传递给数组数据一个引用而不是数组本身。\u0026#34;write()\u0026#34; 方法被数据中的每个元素调用，例如：\n    \n        @array = ( \u0026#39;awk\u0026#39;, \u0026#39;gawk\u0026#39;, \u0026#39;mawk\u0026#39; );\n        $array_ref = \\@array;\n\n        $worksheet-\u0026gt;write_row( 0, 0, $array_ref );\n\n        # The above example is equivalent to:\n        $worksheet-\u0026gt;write( 0, 0, $array[0] );\n        $worksheet-\u0026gt;write( 0, 1, $array[1] );\n        $worksheet-\u0026gt;write( 0, 2, $array[2] );\n\n    注意：为方便起见，如果传递的参数是数组引用，则\u0026#34;write()\u0026#34;方法和\u0026#34;write_row()\u0026#34;的行为一样。因此，下面的2种方法调用等价：\n        $worksheet-\u0026gt;write_row( \u0026#39;A1\u0026#39;, $array_ref );    # Write a row of data\n        $worksheet-\u0026gt;write(     \u0026#39;A1\u0026#39;, $array_ref );    # Same thing\n\n    正如所有的write方法一样，$format参数是可选的.如果指定了一个格式，它会被应用到数据数组的所有元素上。 \n\n   \n    数据中的数组引用会被当作列。这允许你一举写入2维数组的数据，例如：\n        @eec =  (\n                    [\u0026#39;maggie\u0026#39;, \u0026#39;milly\u0026#39;, \u0026#39;molly\u0026#39;, \u0026#39;may\u0026#39;  ],\n                    [13,       14,      15,      16     ],\n                    [\u0026#39;shell\u0026#39;,  \u0026#39;star\u0026#39;,  \u0026#39;crab\u0026#39;,  \u0026#39;stone\u0026#39;]\n                );\n\n        $worksheet-\u0026gt;write_row( \u0026#39;A1\u0026#39;, \\@eec );\n\n\t会产生如下的工作表：\n         -----------------------------------------------------------\n        |   |    A    |    B    |    C    |    D    |    E    | ...\n         -----------------------------------------------------------\n        | 1 | maggie  | 13      | shell   | ...     |  ...    | ...\n        | 2 | milly   | 14      | star    | ...     |  ...    | ...\n        | 3 | molly   | 15      | crab    | ...     |  ...    | ...\n        | 4 | may     | 16      | stone   | ...     |  ...    | ...\n        | 5 | ...     | ...     | ...     | ...     |  ...    | ...\n        | 6 | ...     | ...     | ...     | ...     |  ...    | ...\n\n  \n    以行-列顺序写入数据，请参考下面的 \u0026#34;write_col()\u0026#34;方法。\n   \n    除非对数据应用一种格式，否则数据中的任何\u0026#34;未定义\u0026#34;值将被忽略，这种情况下，一个格式化后的空白单元格会被写入。2种情况下，适当的行和列的值仍然会增加。\n   \n    \n    当写入数据的元素时，\u0026#34;write_row()\u0026#34; 方法返回出现的第一个错误，如果没有出现错误，返回0。\n    请查看 \u0026#34;write_arrays.pl\u0026#34; 程序。\n\n\n    \u0026#34;write_row()\u0026#34;方法在文本文件到Excel文件之间允许如下惯用转换：\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;file.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n\n        open INPUT, \u0026#39;file.txt\u0026#39; or die \u0026#34;Couldn\u0026#39;t open file: $!\u0026#34;;\n\n        $worksheet-\u0026gt;write( $. -1, 0, [split] ) while \u0026lt;INPUT\u0026gt;;\n\n  write_col( $row, $column, $array_ref, $format )\n     \u0026#34;write_col()\u0026#34;方法能用于一次性地写入一维或二维数组的数据。这对于将数据库查询结果转换为Excel工作表很有用。你必须传递一个数组的引用而非数组本身。 \u0026#34;write()\u0026#34; 方法随后被数据的每个元素调用。 例如，\n\t \n    \u0026#34;write_col()\u0026#34;方法能被用于一举写入1维或2维数组的数据。这对于将数据库查询结果转换为Excel工作表很有用。你必须传递给数组数据一个引用而不是数组本身。\u0026#34;write()\u0026#34; 方法随后被数据中的每个元素调用，例如：\n        @array = ( \u0026#39;awk\u0026#39;, \u0026#39;gawk\u0026#39;, \u0026#39;mawk\u0026#39; );\n        $array_ref = \\@array;\n\n        $worksheet-\u0026gt;write_col( 0, 0, $array_ref );\n\n        # 上面的例子等价于:\n        $worksheet-\u0026gt;write( 0, 0, $array[0] );\n        $worksheet-\u0026gt;write( 1, 0, $array[1] );\n        $worksheet-\u0026gt;write( 2, 0, $array[2] );\n\n    正如所有的write方法一样，$format参数是可选的.如果指定了格式，它会被应用到数组所有的元素上。 \n\n\n    数据中的数组引用会被当作行来对待。这允许你一举写入2维数组的数据。例如：\n        @eec =  (\n                    [\u0026#39;maggie\u0026#39;, \u0026#39;milly\u0026#39;, \u0026#39;molly\u0026#39;, \u0026#39;may\u0026#39;  ],\n                    [13,       14,      15,      16     ],\n                    [\u0026#39;shell\u0026#39;,  \u0026#39;star\u0026#39;,  \u0026#39;crab\u0026#39;,  \u0026#39;stone\u0026#39;]\n                );\n\n        $worksheet-\u0026gt;write_col( \u0026#39;A1\u0026#39;, \\@eec );\n\n    会产生如下的工作表：\n\n         -----------------------------------------------------------\n        |   |    A    |    B    |    C    |    D    |    E    | ...\n         -----------------------------------------------------------\n        | 1 | maggie  | milly   | molly   | may     |  ...    | ...\n        | 2 | 13      | 14      | 15      | 16      |  ...    | ...\n        | 3 | shell   | star    | crab    | stone   |  ...    | ...\n        | 4 | ...     | ...     | ...     | ...     |  ...    | ...\n        | 5 | ...     | ...     | ...     | ...     |  ...    | ...\n        | 6 | ...     | ...     | ...     | ...     |  ...    | ...\n\n \n\t将数据以列-行的顺序写入请查看上面的\u0026#34;write_row()\u0026#34;方法。\n\n    除非对数据应用一种格式，否则数据中的任何\u0026#34;未定义\u0026#34;值将被忽略，这种情况下，一个格式化后的空白单元格会被写入。2种情况下，适当的行和列的值仍然会增加。\n\n\n\t就如上面所说的，\u0026#34;write()\u0026#34; 方法能被用作 \u0026#34;write_row()\u0026#34; 的同义词，并且 \u0026#34;write_row()\u0026#34;方法将嵌套的数组引用当作列.\n   \n    所以，下面的2个方法调用是等价的，尽管对\u0026#34;write_col()\u0026#34;更清楚的调用可维护性更好。\n        $worksheet-\u0026gt;write_col( \u0026#39;A1\u0026#39;, $array_ref     ); # Write a column of data\n        $worksheet-\u0026gt;write(     \u0026#39;A1\u0026#39;, [ $array_ref ] ); # Same thing\n\n   \n    当写入数据的元素时，\u0026#34;write_col()\u0026#34; 方法返回出现的第一个错误，如果没有出现错误，返回0。\n    查看上面的“write”方法描述的返回值。 \n    \n    也请查看 \u0026#34;write_arrays.pl\u0026#34;程序。\n\n  write_date_time( $row, $col, $date_string, $format )\n   \n    \u0026#34;write_date_time()\u0026#34; 方法能用于向指定行列的单元格里写入日期或时间：\n        $worksheet-\u0026gt;write_date_time( \u0026#39;A1\u0026#39;, \u0026#39;2004-05-13T23:20\u0026#39;, $date_format );\n\n    $date_string 应该是下列的格式:\n\n        yyyy-mm-ddThh:mm:ss.sss\n\n    它遵守ISO8601日期但是应该注意的是不支持全部范围内的ISO8601格式。\n    下面的变更的$date_string 参数是允许的：\n        yyyy-mm-ddThh:mm:ss.sss         # Standard format\n        yyyy-mm-ddT                     # No time\n                  Thh:mm:ss.sss         # No date\n        yyyy-mm-ddThh:mm:ss.sssZ        # Additional Z (but not time zones)\n        yyyy-mm-ddThh:mm:ss             # No fractional seconds\n        yyyy-mm-ddThh:mm                # No seconds\n\n    注意\u0026#34;T\u0026#34;在所有情况下是必须的。\n   \n    日期应该一直有个$format格式，否则他会以数字形式出现。这里是典型的例子：\n        my $date_format = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mm/dd/yy\u0026#39; );\n        $worksheet-\u0026gt;write_date_time( \u0026#39;A1\u0026#39;, \u0026#39;2004-05-13T23:20\u0026#39;, $date_format );\n\n     对于1900纪元，合法的日期应该在1900-01-01到9999-12-31之间，而对于1904纪元，合法的日期是1904-01-01 到 9999-12-31。对于Excel，超出这些范围的日期会被当作字符串写入。\n    请查看 date_time.pl程序。\n\n  write_url( $row, $col, $url, $format, $label )\n     将URL的超链接写入由行和列指定的单元格中。超链接由2部分组成：可见的标记和不可见的链接。可见的标记与链接一样，除非指定了可替换的标记。$label参数是可选的。标记由\u0026#34;write()\u0026#34;方法写入。因此，可以将字符串、数字或公式作为标记。\n    \n\t$format参数也是可选的，然而，没有格式的话，链接就不像一个格式了。\n\n    建议的格式是:\n\n        my $format = $workbook-\u0026gt;add_format( color =\u0026gt; \u0026#39;blue\u0026#39;, underline =\u0026gt; 1 );\n\n    注意，如果用户没有指定一种格式，该行为与Spreadsheet::WriteExcel提供的默认的超链接格式不同。\n\n\t支持4种web风格的URI \u0026#34;http://\u0026#34;, \u0026#34;https://\u0026#34;, \u0026#34;ftp://\u0026#34; 和 \u0026#34;mailto:\u0026#34;:\n\n        $worksheet-\u0026gt;write_url( 0, 0, \u0026#39;ftp://www.perl.org/\u0026#39;, $format );\n        $worksheet-\u0026gt;write_url( 1, 0, \u0026#39;http://www.perl.com/\u0026#39;, $format, \u0026#39;Perl\u0026#39; );\n        $worksheet-\u0026gt;write_url( \u0026#39;A3\u0026#39;, \u0026#39;http://www.perl.com/\u0026#39;,      $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A4\u0026#39;, \u0026#39;mailto:jmcnamara@cpan.org\u0026#39;, $format );\n\n    There are two local URIs supported: \u0026#34;internal:\u0026#34; and \u0026#34;external:\u0026#34;. These\n    are used for hyperlinks to internal worksheet references or external\n    workbook and worksheet references:\n    支持2种本地URLs：\u0026#34;internal:\u0026#34; 和 \u0026#34;external:。这些用于内部工作表引用的超链接或外部工作簿或工作表的引用：\n        $worksheet-\u0026gt;write_url( \u0026#39;A6\u0026#39;,  \u0026#39;internal:Sheet2!A1\u0026#39;,              $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A7\u0026#39;,  \u0026#39;internal:Sheet2!A1\u0026#39;,              $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A8\u0026#39;,  \u0026#39;internal:Sheet2!A1:B2\u0026#39;,           $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A9\u0026#39;,  q{internal:\u0026#39;Sales Data\u0026#39;!A1},       $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A10\u0026#39;, \u0026#39;external:c:\\temp\\foo.xlsx\u0026#39;,       $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A11\u0026#39;, \u0026#39;external:c:\\foo.xlsx#Sheet2!A1\u0026#39;,  $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A12\u0026#39;, \u0026#39;external:..\\foo.xlsx\u0026#39;,            $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A13\u0026#39;, \u0026#39;external:..\\foo.xlsx#Sheet2!A1\u0026#39;,  $format );\n        $worksheet-\u0026gt;write_url( \u0026#39;A13\u0026#39;, \u0026#39;external:\\\\\\\\NET\\share\\foo.xlsx\u0026#39;, $format );\n\n  \n\t典型的工作表引用形式是\u0026#34;Sheet1!A1\u0026#34;。你可以使用标准的Excel表示法\u0026#34;Sheet1!A1:B2\u0026#34;来指定工作表范围。\n\n    In external links the workbook and worksheet name must be separated by\n    the \u0026#34;#\u0026#34; character: \u0026#34;external:Workbook.xlsx#Sheet1!A1\u0026#39;\u0026#34;.\n\t外部链接中，工作簿和工作表的名字必须用\u0026#34;#\u0026#34;隔开：\u0026#34;external:Workbook.xlsx#Sheet1!A1\u0026#39;\u0026#34;\n\n    You can also link to a named range in the target worksheet. 例如，\n    say you have a named range called \u0026#34;my_name\u0026#34; in the workbook\n    \u0026#34;c:\\temp\\foo.xlsx\u0026#34; you could link to it as follows:\n    你也可以链接到目标工作表中的一个命名值域上。例如，比如在\u0026#34;c:\\temp\\foo.xlsx\u0026#34;工作簿中你有一个具名的值域叫做\u0026#34;my_name\u0026#34;，你可以按下面的方法链接到它。\n        $worksheet-\u0026gt;write_url( \u0026#39;A14\u0026#39;, \u0026#39;external:c:\\temp\\foo.xlsx#my_name\u0026#39; );\n\n    Excel要求包含空格或非字母字符的工作表名要用单引号引起来，如下\u0026#34;\u0026#39;Sales Data\u0026#39;!A1\u0026#34;。如果你使用单引号引起的字符串作工作表名，你需要使用\\\u0026#39;转义单引号，或使用q{}。\n  \n    也支持到网络文件的链接。MS/Novell 网络文件一般以2个反斜杠开头，形如\u0026#34;\\\\NETWORK\\etc\u0026#34;。为了在单引号或双引号字符串中生成这样的网络名，需要转义反斜杠，\u0026#39;\\\\\\\\NETWORK\\etc\u0026#39;.\n\n    如果你使用双引号字符串，你应该注意转义任何看起来像元字符的字符。更多信息，查看Perlfaq5：为什么不能在DOS路径中使用 \u0026#34;C:\\temp\\foo\u0026#34; in DOS paths?\u0026#34;。\n  \n  \n    最后，你可以使用左斜杠来避免大部分引号问题。左斜杠在内部被转换成反斜杠：\n        $worksheet-\u0026gt;write_url( \u0026#39;A14\u0026#39;, \u0026#34;external:c:/temp/foo.xlsx\u0026#34; );\n        $worksheet-\u0026gt;write_url( \u0026#39;A15\u0026#39;, \u0026#39;external://NETWORK/share/foo.xlsx\u0026#39; );\n\n    \n\n  write_formula( $row, $column, $formula, $format, $value )\n\t将公式或函数写入由行和列指定的单元格中。\n        $worksheet-\u0026gt;write_formula( 0, 0, \u0026#39;=$B$3 + B4\u0026#39; );\n        $worksheet-\u0026gt;write_formula( 1, 0, \u0026#39;=SIN(PI()/4)\u0026#39; );\n        $worksheet-\u0026gt;write_formula( 2, 0, \u0026#39;=SUM(B1:B5)\u0026#39; );\n        $worksheet-\u0026gt;write_formula( \u0026#39;A4\u0026#39;, \u0026#39;=IF(A3\u0026gt;1,\u0026#34;Yes\u0026#34;, \u0026#34;No\u0026#34;)\u0026#39; );\n        $worksheet-\u0026gt;write_formula( \u0026#39;A5\u0026#39;, \u0026#39;=AVERAGE(1, 2, 3, 4)\u0026#39; );\n        $worksheet-\u0026gt;write_formula( \u0026#39;A6\u0026#39;, \u0026#39;=DATEVALUE(\u0026#34;1-Jan-2001\u0026#34;)\u0026#39; );\n\n    同样也支持数组公式:\n\n        $worksheet-\u0026gt;write_formula( \u0026#39;A7\u0026#39;, \u0026#39;{=SUM(A1:B1*A2:B2)}\u0026#39; );\n\n \n    如果需要，可以指定公式的计算结果。当与不能计算公式值的非Excel应用程序一起工作时，这偶尔需要。计算过的$value值被添加在参数列表的末尾：\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=2+2\u0026#39;, $format, 4 );\n\n\n  write_array_formula($first_row, $first_col, $last_row, $last_col, $formula, $format, $value)\n     将数组公式写入到一个单元格值域中。在Excel中一个数组公式就是在一组值上执行计算的公式。它可以返回单个值或一个值域。\n    公式两边的一对花括号表明这是一个数组公式：\u0026#34;{=SUM(A1:B1*A2:B2)}\u0026#34;。如果数组公式返回单个值，则$first_ 和 $last_ 参数应该一样：\n        $worksheet-\u0026gt;write_array_formula(\u0026#39;A1:A1\u0026#39;, \u0026#39;{=SUM(B1:C1*B2:C2)}\u0026#39;);\n\n\n\t此种情况下仅仅使用\u0026#34;write_formula()\u0026#34;或 \u0026#34;write()\u0026#34;方法更容易些：\n\n        # 和上面的一样，但是更简洁：\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;{=SUM(B1:C1*B2:C2)}\u0026#39; );\n        $worksheet-\u0026gt;write_formula( \u0026#39;A1\u0026#39;, \u0026#39;{=SUM(B1:C1*B2:C2)}\u0026#39; );\n\n    For array formulas that return a range of values you must specify the\n    range that the return values will be written to:\n\n        $worksheet-\u0026gt;write_array_formula( \u0026#39;A1:A3\u0026#39;,    \u0026#39;{=TREND(C1:C3,B1:B3)}\u0026#39; );\n        $worksheet-\u0026gt;write_array_formula( 0, 0, 2, 0, \u0026#39;{=TREND(C1:C3,B1:B3)}\u0026#39; );\n\n   如果需要，可以指定公式的计算结果。当与不能计算公式值的非Excel应用程序一起工作时，这偶尔需要。计算过的$value值被添加在参数列表的末尾：\n\n        $worksheet-\u0026gt;write_array_formula( \u0026#39;A1:A3\u0026#39;, \u0026#39;{=TREND(C1:C3,B1:B3)}\u0026#39;, $format, 105 );\n\n     此外，一些Excel2007的早期版本没有提供数组公式，所以它们不计算数组公式的值。安装最新的Office Service Pack可以修复该问题。\n    查看 \u0026#34;array_formula.pl\u0026#34; 程序。\n\n   注意：Spreadsheet::WriteExcel不支持数组公式。\n  store_formula( $formula )\n   \n    不宜使用。这是一个Spreadsheet::WriteExcel 方法，Excel::Writer::XLSX已经不在需要了。看下面。\n  repeat_formula( $row, $col, $formula, $format )\n \n     不宜使用。这是一个Spreadsheet::WriteExcel 方法，Excel::Writer::XLSX.已经不在需要了。\n\n    在 Spreadsheet::WriteExcel中写入公式其计算是昂贵的，因为它们由递归下降的解释器解析。\n\t\u0026#34;store_formula()\u0026#34; 和 \u0026#34;repeat_formula()\u0026#34; 方法再利用预解析公式作为避免重复公式的系统开销的方法之一。\n   \n    在Excel::Writer::XLSX中，这不再需要，因为写入公式就像写入字符串和数字一样快。\n    The methods remain for backward compatibility but new\n    Excel::Writer::XLSX programs shouldn\u0026#39;t use them.\n    以上方法向后兼容，但是新的Excel::Writer::XLSX 不能使用它们。\n  write_comment( $row, $column, $string, ... )\n  \n    \u0026#34;write_comment()\u0026#34; 方法用于向单元格中写入注释。\n\t单元格中的注释由Excel单元格右上角的小红色三角标注。将光标移到红色三角上将显示注释。 \n    下面的例子显式了如何在单元格中添加注释：\n        $worksheet-\u0026gt;write        ( 2, 2, \u0026#39;Hello\u0026#39; );\n        $worksheet-\u0026gt;write_comment( 2, 2, \u0026#39;This is a comment.\u0026#39; );\n\n\n\t通常，你可以用一个\u0026#34;A1\u0026#34;单元格引用代替 $row 和 $column 参数：\n\n        $worksheet-\u0026gt;write        ( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;);\n        $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;This is a comment.\u0026#39; );\n\n     \u0026#34;write_comment()\u0026#34; 方法也处理UTF-8格式的字符串。\n\n        $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#34;\\x{263a}\u0026#34; );       # Smiley\n        $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Comment ca va?\u0026#39; );\n\n \n    除了基本的3个参数形式的\u0026#34;write_comment()\u0026#34;，你可以传递几对可选的 键值对来控制注释的格式：\n        $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 1, author =\u0026gt; \u0026#39;Perl\u0026#39; );\n\n   \n    这些选项的大多数很特别，并且通常默认的注释行为就是你想要的。然而，如果你需要对单元格注释更好的控制，那下面的选项可以使用：\n        author\n        visible\n        x_scale\n        width\n        y_scale\n        height\n        color\n        start_cell\n        start_row\n        start_col\n        x_offset\n        y_offset\n\n    Option: author\n    \n        该选项用于表明谁是该单元格注释的作者。Excel在工作表底部的状态条栏中显式注释的作者。\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Atonement\u0026#39;, author =\u0026gt; \u0026#39;Ian McEwan\u0026#39; );\n\n\n        所有的单元格注释默认的作者能使用 \u0026#34;set_comments_author()\u0026#34;方法设置，看下面：\n            $worksheet-\u0026gt;set_comments_author( \u0026#39;Perl\u0026#39; );\n\n    Option: visible\n    \n        该选项能用于当打开工作表时，使单元格注释可见。Excel中默认的行为是注释被隐藏。然而，在Excel中也可以使单个注释或所有注释可见。在Excel::Writer::XLSX中，可以按下面的方法使单个注释可见：\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 1 );\n\n      \n        使用\u0026#34;show_comments()\u0026#34; 工作表方法（看下面）可使工作表中的所有注释可见。\n\t\t相应地，如果所有的单元格注释都可见了，你可以隐藏单个注释：\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 0 );\n\n    Option: x_scale\n        This option is used to set the width of the cell comment box as a\n        factor of the default width.\n        该选项用于设置单元格注释框的宽度：\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, x_scale =\u0026gt; 2 );\n            $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Hello\u0026#39;, x_scale =\u0026gt; 4.2 );\n\n    Option: width\n     \n        该选项用于设置单元格注释框的宽度，以像素表示\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, width =\u0026gt; 200 );\n\n    Option: y_scale\n        This option is used to set the height of the cell comment box as a\n        factor of the default height.\n        该选项用于设置单元格注释框的高度：\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, y_scale =\u0026gt; 2 );\n            $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Hello\u0026#39;, y_scale =\u0026gt; 4.2 );\n\n    Option: height\n        This option is used to set the height of the cell comment box\n        explicitly in pixels.\n         该选项用于设置单元格注释框的高度，以像素表示\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, height =\u0026gt; 200 );\n\n    Option: color\n\n        该选项用于设置单元格注释框的背景色。你可以使用Excel::Writer::XLSX 可识别的具名颜色或颜色索引。\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, color =\u0026gt; \u0026#39;green\u0026#39; );\n            $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Hello\u0026#39;, color =\u0026gt; 0x35 );      # Orange\n\n    Option: start_cell\n   \n        该选项用于设置注释将出现在哪个单元格。By default Excel displays comments one cell to the right and\n        one cell above the cell to which the comment relates.\n\t\t然而，你可以改变它的默认行为，如果你愿意的话。在下面的例子中，默认会在单元格“D2”中出现的注释会移动到“E2”中。\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, start_cell =\u0026gt; \u0026#39;E2\u0026#39; );\n2011-12-5\n    Option: start_row\n    \n        该选项用于设置注释将会出现在哪一行。行从0开始索引。\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, start_row =\u0026gt; 0 );\n\n    Option: start_col\n   \n\t\t该选项用于设置注释将会在哪一列出现。列从0开始索引。\n\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, start_col =\u0026gt; 4 );\n\n    Option: x_offset\n        This option is used to change the x offset, in pixels, of a comment\n        within a cell:\n        \t该选项用于改变单元格中注释的x轴方向的偏移量，以像素计算。\n            $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, $comment, x_offset =\u0026gt; 30 );\n\n    Option: y_offset\n        This option is used to change the y offset, in pixels, of a comment\n        within a cell:\n\t\t该选项用于改变单元格中注释的y轴方向的偏移量，以像素计算。\n\n            $worksheet-\u0026gt;write_comment(\u0026#39;C3\u0026#39;, $comment, x_offset =\u0026gt; 30);\n\n    \n\n\t注意，使用诸如start_cell, start_row, start_col, x_offset 和 y_offset的选项调整单元格注释位置：Excel仅仅在单元格可见时才显示单元格注释的偏移量。当你把鼠标移到它们上面时，Excel不显示隐藏的单元格。\n\n   \n\t注意行高和注释。如果你指定含有注释的单元格的行高，则Excel::Writer::XLSX会调整注释的高度以保持默认高度或用户指定的尺寸。然而，如果设置了文本框属性或在单元格中使用了很大的字体，Excel会自动调整行高。这意味着行高对于运行时的模块是未知的，因此注释框随着行一起扩展。使用 \u0026#34;set_row()\u0026#34;方法显式地指定行高来避免这个问题。\n\n  show_comments()\n\n    该方法用于当打开工作表时，让所有单元格注释可见\n        $worksheet-\u0026gt;show_comments();\n\n\n    使用\u0026#34;write_comment\u0026#34;方法的\u0026#34;visible\u0026#34;参数能使单个的注释可见（看下面）：\n        $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 1 );\n\n\t如果所有的单元格注释都可见了，你可以按下面的方法隐藏单个注释：\n\n        $worksheet-\u0026gt;show_comments();\n        $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 0 );\n\n  set_comments_author()\n    该方法用于设置单元格注释的默认作者。\n        $worksheet-\u0026gt;set_comments_author( \u0026#39;Perl\u0026#39; );\n\n    使用\u0026#34;write_comment\u0026#34;方法的\u0026#34;author\u0026#34;参数设置单个注释的作者（看上面）。\n\n\t如果没有指定作者，默认的注释作者是空字符串,\u0026#39;\u0026#39;.\n\n  add_write_handler( $re, $code_ref )\n   \n\t该方法用于扩展 Excel::Writer::XLSX 的\u0026#34;write()\u0026#34;方法来处理用户定义的数据。\n\n\t如果你查看上面章节的\u0026#34;write()\u0026#34;方法，你会发现它是几个更特殊的\u0026#34;write_*\u0026#34;方法的别名。然而，它并不总是如你所愿地正确。\n\n \n    一种方法是你自己过滤输入数据并调用合适的 \u0026#34;write_*\u0026#34; 方法。\n\t另一种方法是使用\u0026#34;add_write_handler()\u0026#34;方法把你自己的自动化行为添加到\u0026#34;write()\u0026#34;方法中。\n  \n  \n\t\u0026#34;add_write_handler()\u0026#34; 有2个参数，$re,一个匹配输入数据的正则表达式；\n\t还有$code_ref，一个回调函数，来处理匹配后的数据：\n\n        $worksheet-\u0026gt;add_write_handler( qr/^\\d\\d\\d\\d$/, \\\u0026amp;my_write );\n\n    (在这些例子中\u0026#34;qr\u0026#34;操作符用于引起正则表达式字符串).\n\n\n\t该方法使用如下。假如你想写入7个数字的ID号作为字符串并保留任何前导0，你可以按下面的做：\n\n        $worksheet-\u0026gt;add_write_handler( qr/^\\d{7}$/, \\\u0026amp;write_my_id );\n\n\n        sub write_my_id {\n            my $worksheet = shift;\n            return $worksheet-\u0026gt;write_string( @_ );\n        }\n\n    * 你也可以使用\u0026#34;keep_leading_zeros()\u0026#34;方法.\n\n\t然后，如果你使用一个合适的字符串调用\u0026#34;write()\u0026#34;方法，它会被自动处理：\n        # 写入 0000000.正常地，它会被写作数字0：\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;0000000\u0026#39; );\n\n\t回调函数会接受一个对被调用工作表的引用，并且其它所有的参数被传递给\u0026#34;write()\u0026#34;.回调函数会看到如下所示的@_参数列表：\n\n        $_[0]   A ref to the calling worksheet. *\n        $_[1]   Zero based row number.\n        $_[2]   Zero based column number.\n        $_[3]   A number or string or token.\n        $_[4]   A format ref if any.\n        $_[5]   Any other arguments.\n        ...\n\n        *  It is good style to shift this off the list so the @_ is the same\n           as the argument list seen by write().\n\n\n\t你的回调函数应该使用\u0026#34;return()\u0026#34;返回\u0026#34;write_*\u0026#34; 方法的返回值，\n\t或返回“undef”来表明你拒绝了匹配并且想让\u0026#34;write()\u0026#34;方法正常继续。\n\n    So 例如， if you wished to apply the previous filter only to ID\n    values that occur in the first column you could modify your callback\n    function as follows:\n\t所以，例如，如果你想把前面的过滤只应用到出现在第一列的ID值上，你可以按照下面修改你的回调函数：\n\n        sub write_my_id {\n            my $worksheet = shift;\n            my $col       = $_[1];\n\n            if ( $col == 0 ) {\n                return $worksheet-\u0026gt;write_string( @_ );\n            }\n            else {\n                # Reject the match and return control to write()\n                return undef;\n            }\n        }\n\n    Now, you will get different behaviour for the first column and other\n    columns:\n    现在，你会在、第一列和其它列上得到不同的行为：\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;0000000\u0026#39; );    # Writes 0000000\n        $worksheet-\u0026gt;write( \u0026#39;B1\u0026#39;, \u0026#39;0000000\u0026#39; );    # Writes 0\n\n\t你可以添加多个处理程序，此时它们会按照被添加的顺序调用。\n\n    \n\t注意，\u0026#34;add_write_handler()\u0026#34;特别适合处理数据。\n\n    查看 \u0026#34;write_handler 1-4\u0026#34; 程序。\n\n  insert_image( $row, $col, $filename, $x, $y, $scale_x, $scale_y )\n    \n\t部分支持。目前只对96像素的图像有效。这会在下次发布中修复。\n\n   \n    该方法用于向工作表中插入图像。图像格式可以是PNG, JPEG 或 BMP。 $x, $y, $scale_x 和 $scale_y 参数是可选的。\n    \t$worksheet1-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;perl.bmp\u0026#39; );\n        $worksheet2-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;../images/perl.bmp\u0026#39; );\n        $worksheet3-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;.c:\\images\\perl.bmp\u0026#39; );\n\n    \n\t$x 和 $y参数可以用于指定到由$row和$col指定的单元格的左上角的偏移量。偏移量值以像素计算：\n\n        $worksheet1-\u0026gt;insert_image(\u0026#39;A1\u0026#39;, \u0026#39;perl.bmp\u0026#39;, 32, 10);\n\n   \t偏移量可以比图像下面的单元格的高度或宽度大。如果你想在同一个单元格中对齐一个或多个图像，这偶尔会有用。\n\n   \n\t参数$scale_x 和 $scale_y能用于水平和垂直地测量插入的图片：\n\n        # Scale the inserted image: width x 2.0, height x 0.8\n        $worksheet-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;perl.bmp\u0026#39;, 0, 0, 2, 0.8 );\n\n    查看那\u0026#34;images.pl\u0026#34; 程序。\n\n\n\t注意：如果你想改变图像所占的任一行或列的默认尺寸，你必须在\u0026#34;insert_image()\u0026#34;之前调用\u0026#34;set_row()\u0026#34; 或 \u0026#34;set_column()\u0026#34;。\n\t如果你使用的字体比默认的大，行的高度也会改变。这反过来也会影响你图像的尺寸。你应该使用\u0026#34;set_row()\u0026#34;显式地设置行高来避免这个问题，如果它包含了会改变行高的字体大小。\n\n\n\tBMP图像应该是24比特，颜色为真彩，位图。通常，最好应避使用BMP图像，因为它们没有被压缩。\n\n  insert_chart( $row, $col, $chart, $x, $y, $scale_x, $scale_y )\n \t该方法用于向工作表中插入一个图表对象。图表必须由\u0026#34;add_chart()\u0026#34;工作表方法创建，并且它必须设置了 \u0026#34;embedded\u0026#34;选项。\n\n        my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39;, embedded =\u0026gt; 1 );\n\n        # Configure the chart.\n        ...\n\n        # Insert the chart into the a worksheet.\n        $worksheet-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart );\n\n\n\t查看\u0026#34;add_chart()\u0026#34; 获取关于怎样创建图表对象的细节，\n\t查看Excel::Writer::XLSX::Chart获取关于怎样配置图表的细节。查看\u0026#34;chart_*.pl\u0026#34;程序。\n\n    $x, $y, $scale_x 和 $scale_y 参数是可选的 。\n\t\n\n\n\t$x 和 $y 能用于指定到由$row和$col指定的单元格左上角的偏移量，偏移量值以像素计算。\n\n        $worksheet1-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart, 3, 3 );\n\n    \n\t参数$scale_x 和 $scale_y能用于从水平方向和垂直方向测量图像：\n\n        # Scale the width by 120% and the height by 150%\n        $worksheet-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart, 0, 0, 1.2, 1.5 );\n\n  data_validation()\n    \n\t\u0026#34;data_validation()\u0026#34;方法用于构建Excel数据检验或限制用户输入到一个下拉列表中\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;B3\u0026#39;,\n            {\n                validate =\u0026gt; \u0026#39;integer\u0026#39;,   #验证\n                criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,         #标准\n                value    =\u0026gt; 100,         #值\n            });\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;B5:B9\u0026#39;,\n            {\n                validate =\u0026gt; \u0026#39;list\u0026#39;,\n                value    =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;],\n            });\n\n \n\t该方法包含很多参数，并在单独的章节“DATA VALIDATION IN EXCEL”中有详细描述。\n\n\t查看\u0026#34;data_validate.pl\u0026#34; 程序。\n\t\n  conditional_format()\n  \n\t\u0026#34;conditional_format()\u0026#34; 方法用于向单元格或基于用户自定义标准的单元格范围中添加格式\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:J10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;\u0026gt;=\u0026#39;,\n                value    =\u0026gt; 50,\n                format   =\u0026gt; $format1,\n            }\n        );\n\n\n\t该方法包含很多参数，并在单独的章节“CONDITIONAL FORMATTING IN EXCEL”中有详细描述\n\n\t查看\u0026#34;conditional_format.pl\u0026#34;程序。\n\n  get_name()\n   \n\t\u0026#34;get_name()\u0026#34; 方法用于检索工作表的名字。例如：\n\n        for my $sheet ( $workbook-\u0026gt;sheets() ) {\n            print $sheet-\u0026gt;get_name();\n        }\n\n\t由于Excel::Writer::XLSX的设计和Excel的内部原因，没有设计\u0026#34;set_name()\u0026#34; 方法。\n\t设置工作表名字的唯一方法是通过\u0026#34;add_worksheet()\u0026#34;方法。\n\n  activate()\n\n\t\u0026#34;activate()\u0026#34;方法用于指定在一个含有多个工作表的工作簿中，哪一个工作表是初始可见的：\n\n        $worksheet1 = $workbook-\u0026gt;add_worksheet( \u0026#39;To\u0026#39; );\n        $worksheet2 = $workbook-\u0026gt;add_worksheet( \u0026#39;the\u0026#39; );\n        $worksheet3 = $workbook-\u0026gt;add_worksheet( \u0026#39;wind\u0026#39; );\n\n        $worksheet3-\u0026gt;activate();\n\n   \n\t这与Excel VBA的active方法相似。可以通过\u0026#34;select()\u0026#34;方法选取多张工作表。\n\t看下面，然而，只有一张工作表是激活的。\n\t\n\t第一张工作表默认是激活的。\n\n  select()\n\n\t\u0026#34;select()\u0026#34;方法用于表明从含有多张工作表的工作簿中选取一张：\n\n        $worksheet1-\u0026gt;activate();\n        $worksheet2-\u0026gt;select();\n        $worksheet3-\u0026gt;select();\n\n\t被选中的工作表的标签是高亮的。选取多张工作表是把它们组合在一块的一种方法，所以，例如，可以一举打印多张工作表。通过\u0026#34;activate()\u0026#34;方法被激活的工作表也会被选中。\n\n  hide()\n\t \u0026#34;hide()\u0026#34; 方法用于隐藏一个工作表：\n\n        $worksheet2-\u0026gt;hide();\n\n  \t为了避免使用中间数据或计算结果迷惑用户，你可能想要隐藏一个工作表\n\n\n\t一个隐藏的工作表不能被激活或被选中，所以该方法与\u0026#34;activate()\u0026#34; 和 \u0026#34;select()\u0026#34;是互相排斥的。此外，因为第一张工作表默认是被选中的，你不能不激活另外的工作表而隐藏第一张工作表：\n\n        $worksheet2-\u0026gt;activate();\n        $worksheet1-\u0026gt;hide();\n\n  set_first_sheet()\n \t\u0026#34;activate()\u0026#34;方法决定首先选择哪一张工作表。然而，如果有很多张工作表，被选中的工作表可能不会出现在屏幕上。你可以使用\u0026#34;set_first_sheet()\u0026#34;方法选择最左端可见的工作表来避免：\n\n        for ( 1 .. 20 ) {\n            $workbook-\u0026gt;add_worksheet;\n        }\n\n        $worksheet21 = $workbook-\u0026gt;add_worksheet();\n        $worksheet22 = $workbook-\u0026gt;add_worksheet();\n\n        $worksheet21-\u0026gt;set_first_sheet();\n        $worksheet22-\u0026gt;activate();\n\n\n\t该方法不是经常需要。默认值是第一张工作表。\n\n  protect( $password, \\%options )\n\t\u0026#34;protect()\u0026#34; 方法用于防止工作表被修改：\n\n        $worksheet-\u0026gt;protect();\n\n\n\t\u0026#34;protect()\u0026#34;方法也会对开启单元格的\u0026#34;locked\u0026#34;和\u0026#34;hidden\u0026#34;属性有影响，如果设置了单元格的\u0026#34;locked\u0026#34;和\u0026#34;hidden\u0026#34;属性的话。一个*locked*的单元格不能够被编辑，并且该属性默认对所有单元格是开启的。一个隐藏的单元格会显示公式的结果但不是公式本身。\n\n    \n\t查看\u0026#34;protection.pl\u0026#34; 程序和\u0026#34;CELL FORMATTING\u0026#34; 方法的\u0026#34;set_locked\u0026#34; 和 \u0026#34;set_hidden\u0026#34;格式方法。\n\n\t你可以选择性地添加一个密码到工作表中：\n\n        $worksheet-\u0026gt;protect( \u0026#39;drowssap\u0026#39; );\n\n\t传递一个空字符串\u0026#39;\u0026#39;和开启没有密码的保护一样。\n\n \t注意：Excel中工作表级别的密码提供的保护很脆弱。它没有加密你的数据并且很容易被撤销。\u0026#34;Excel::Writer::XLSX\u0026#34;不支持完全的工作表加密，因为它需要一种完全不同的文件格式并且需要花费几个人数月的时间才能实现。\n\n    \n\t你可以传递一个带有任何一个或全部如下所示键值的散列引用来指定你想保护哪个工作表元素：\n\n        # Default shown.\n        %options = (\n            objects               =\u0026gt; 0,\n            scenarios             =\u0026gt; 0,\n            format_cells          =\u0026gt; 0,\n            format_columns        =\u0026gt; 0,\n            format_rows           =\u0026gt; 0,\n            insert_columns        =\u0026gt; 0,\n            insert_rows           =\u0026gt; 0,\n            insert_hyperlinks     =\u0026gt; 0,\n            delete_columns        =\u0026gt; 0,\n            delete_rows           =\u0026gt; 0,\n            select_locked_cells   =\u0026gt; 1,\n            sort                  =\u0026gt; 0,\n            autofilter            =\u0026gt; 0,\n            pivot_tables          =\u0026gt; 0,\n            select_unlocked_cells =\u0026gt; 1,\n        );\n\n\n\t上面显示的是默认的布尔值。单个元素的保护可以使用下面的方法：\n\n        $worksheet-\u0026gt;protect( \u0026#39;drowssap\u0026#39;, { insert_rows =\u0026gt; 1 } );\n\n  set_selection( $first_row, $first_col, $last_row, $last_col )\n    This method can be used to specify which cell or cells are selected in a\n    worksheet. The most common requirement is to select a single cell, in\n    which case $last_row and $last_col can be omitted. The active cell\n    within a selected range is determined by the order in which $first and\n    $last are specified. It is also possible to specify a cell or a range\n    using A1 notation. \n\t该方法用于指定在一张工作表中选择哪个或哪些单元格。最常见的需求是选择一个单元格，此时$last_row 和 $last_col 可以省略。在选区内的激活单元格由指定的$first and $last 的顺序决定。也可以使用A1表示法指定单元格或一个范围。\n\n    Examples:\n\n        $worksheet1-\u0026gt;set_selection( 3, 3 );          # 1. Cell D4.\n        $worksheet2-\u0026gt;set_selection( 3, 3, 6, 6 );    # 2. Cells D4 to G7.\n        $worksheet3-\u0026gt;set_selection( 6, 6, 3, 3 );    # 3. Cells G7 to D4.\n        $worksheet4-\u0026gt;set_selection( \u0026#39;D4\u0026#39; );          # Same as 1.\n        $worksheet5-\u0026gt;set_selection( \u0026#39;D4:G7\u0026#39; );       # Same as 2.\n        $worksheet6-\u0026gt;set_selection( \u0026#39;G7:D4\u0026#39; );       # Same as 3.\n\n\t默认的单元格选区是(0,0),\u0026#39;A1\u0026#39;.\n\n  set_row( $row, $height, $format, $hidden, $level, $collapsed )\n \n\t该方法用于改变行的默认属性。除$row之外，其它参数都是可选的。\n\n\t该方法最普通的用法是更改行高：\n\n        $worksheet-\u0026gt;set_row( 0, 20 );    # 第一行的行高改为20\n\n\t如果你想设置格式时不更改行高，你可以传递\u0026#34;undef\u0026#34;作为行高参数：\n\n        $worksheet-\u0026gt;set_row( 0, undef, $format );\n\n\t$format参数可以被应用到行中任何没有格式的单元格上，例如：\n\n        $worksheet-\u0026gt;set_row( 0, undef, $format1 );    # Set the format for row 1\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; );           # Defaults to $format1\n        $worksheet-\u0026gt;write( \u0026#39;B1\u0026#39;, \u0026#39;Hello\u0026#39;, $format2 ); # Keeps $format2\n\n\t如果你想用这种方法定义一个行格式，你应该在任何调用\u0026#34;write()\u0026#34;方法的行为之前调用该方法。调用该方法以后会覆盖以前指定的任何格式。\n\n   \n\t如果想隐藏行，$hidden参数应该设置为1。这被用于，例如，在复杂计算中隐藏中间步骤：\n\n        $worksheet-\u0026gt;set_row( 0, 20,    $format, 1 );\n        $worksheet-\u0026gt;set_row( 1, undef, undef,   1 );\n\n\n\t $level参数用于设置行的分级显示（outline level）。\u0026#34;OUTLINES AND GROUPING IN EXCEL\u0026#34;章节有关于分级显示的描述。有同样分级显示的行会被组合到一块成为一个单一的分级显示。\n\n\n\t下面的例子为行1和行2（从0开始索引）设置了分级显示1：\n\n        $worksheet-\u0026gt;set_row( 1, undef, undef, 0, 1 );\n        $worksheet-\u0026gt;set_row( 2, undef, undef, 0, 1 );\n\n\t当和$level参数一同使用的时候，$hidden参数也能用于隐藏折叠的分级显示行：\n\n        $worksheet-\u0026gt;set_row( 1, undef, undef, 1, 1 );\n        $worksheet-\u0026gt;set_row( 2, undef, undef, 1, 1 );\n\n\n\t对于折叠的分级显示，你应该使用可选项$collapsed参数指明哪一行含有折叠符号\u0026#34;+\u0026#34;.\n\n        $worksheet-\u0026gt;set_row( 3, undef, undef, 0, 0, 1 );\n\n    查看 \u0026#34;outline.pl\u0026#34; 和 \u0026#34;outline_collapsed.pl\u0026#34; 。\n\n\n\tExcel允许多大7个分级显示。因此，$level参数应该在范围：\u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;内。\n\n  set_column( $first_col, $last_col, $width, $format, $hidden, $level, $collapsed )\n  \n\t该方法用于改变单一列一定范围的列的默认属性。除了 $first_col 和 $last_col 外，所有参数都是可选的。\n\n \t如果\u0026#34;set_column()\u0026#34;被应用到单一列， $first_col和 $last_col的值应该一样。\n\t在$last_col是0的情况下，它被设置为与$first_col一样的值。\n\n\t也可更清晰的使用列的A1表示法来指定列的范围。\n\n    例子:\n\n        $worksheet-\u0026gt;set_column( 0, 0, 20 );    # Column  A   width set to 20\n        $worksheet-\u0026gt;set_column( 1, 3, 30 );    # Columns B-D width set to 30\n        $worksheet-\u0026gt;set_column( \u0026#39;E:E\u0026#39;, 20 );   # Column  E   width set to 20\n        $worksheet-\u0026gt;set_column( \u0026#39;F:H\u0026#39;, 30 );   # Columns F-H width set to 30\n\n    The width corresponds to the column width value that is specified in\n    Excel. It is approximately equal to the length of a string in the\n    default font of Arial 10. Unfortunately, there is no way to specify\n    \u0026#34;AutoFit\u0026#34; for a column in the Excel file format. This feature is only\n    available at runtime from within Excel.\n\t\n\n    通常 $format参数是可选的,更多信息,查看\u0026#34;CELL FORMATTING\u0026#34;. \n\t如果你想设置格式时不更改列宽，你可以传递\u0026#34;undef\u0026#34;作为列宽参数：\n\n        $worksheet-\u0026gt;set_column( 0, 0, undef, $format );\n\n\t$format参数可以被应用到列中任何没有格式的单元格上，例如：\n\n        $worksheet-\u0026gt;set_column( \u0026#39;A:A\u0026#39;, undef, $format1 );    # Set format for col 1\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; );                  # Defaults to $format1\n        $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;Hello\u0026#39;, $format2 );        # Keeps $format2\n\n\t如果你想用这种方法定义一个列格式，你应该在任何调用\u0026#34;write()\u0026#34;方法的行为之前调用该方法。如果你在调用\u0026#34;write()\u0026#34;方法之后调用该方法，它不会有任何效果。\n\n\t默认的行格式优于默认的列格式。\n\n        $worksheet-\u0026gt;set_row( 0, undef, $format1 );           # Set format for row 1\n        $worksheet-\u0026gt;set_column( \u0026#39;A:A\u0026#39;, undef, $format2 );    # Set format for col 1\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; );                  # Defaults to $format1\n        $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;Hello\u0026#39; );                  # Defaults to $format2\n\n \n\t如果想隐藏列，$hidden参数应该设置为1。这被用于，例如，在复杂计算中隐藏中间步骤：\n\n\n        $worksheet-\u0026gt;set_column( \u0026#39;D:D\u0026#39;, 20,    $format, 1 );\n        $worksheet-\u0026gt;set_column( \u0026#39;E:E\u0026#39;, undef, undef,   1 );\n\n    \n\t$level参数用于设置列的分级显示（outline level）。\u0026#34;OUTLINES AND GROUPING IN EXCEL\u0026#34;章节有关于分级显示的描述。有同样分级显示的列会被组合到一块成为一个单一的分级显示。\n\n\t下面的例子为从B到G的列设置了分级显示1：\n\n        $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 0, 1 );\n\n\n\t当和$level参数一同使用的时候，$hidden参数也能用于隐藏折叠的分级显示列：\n\n        $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 1, 1 );\n\n  \t对于折叠的分级显示，你应该使用可选项$collapsed参数指明哪一行含有折叠符号\u0026#34;+\u0026#34;.\n\n        $worksheet-\u0026gt;set_column( \u0026#39;H:H\u0026#39;, undef, undef, 0, 0, 1 );\n\n    查看那outline.pl\u0026#34; 和 \u0026#34;outline_collapsed.pl\u0026#34; 程序获取更详细的描述。\n\n\tExcel 允许多达7级的分级显示。因此，$level参数应该在范围\u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;内。\n\n  outline_settings( $visible, $symbols_below, $symbols_right, $auto_style )\n\n\t \u0026#34;outline_settings()\u0026#34;方法用于控制Excel中分级显示的出现。分级显示在\u0026#34;OUTLINES AND GROUPING IN\n    EXCEL\u0026#34;中有描述。\n\n\t$visible参数用于控制分级显示是否可见。将该参数设置为0会导致工作表中所有的分级显示被隐藏。你可以使用\u0026#34;Show Outline Symbols\u0026#34;命令按钮将它们显示出来。默认设置为1，即显示分级。\n\n        $worksheet-\u0026gt;outline_settings( 0 );\n\n    The $symbols_below parameter is used to control whether the row outline\n    symbol will appear above or below the outline level bar. The default\n    setting is 1 for symbols to appear below the outline level bar.\n\t$symbols_below参数用于控制行分级显示标志符是否会出现在分级显示工具条的上方或下面。\n\t默认的设置为1，即标识符出现在分级显示工具条的下面。\n\n \n\t\u0026#34;symbols_right\u0026#34;参数用于控制列分级显示标识符是否会出现在分级显示工具条的左侧或右侧。\n\t默认设置为1，即标识符出现在分级显示的右边。\n\n    The $auto_style parameter is used to control whether the automatic\n    outline generator in Excel uses automatic styles when creating an\n    outline. This has no effect on a file generated by \u0026#34;Excel::Writer::XLSX\u0026#34;\n    but it does have an effect on how the worksheet behaves after it is\n    created. The default setting is 0 for \u0026#34;Automatic Styles\u0026#34; to be turned\n    off.\n\t$auto_style 参数用于控制在Excel中的自动分级显示生成器是否使用自动风格创建分级显示。\n\t由\u0026#34;Excel::Writer::XLSX\u0026#34;生成的文件间没有区别，但是对于创建后工作表如何表现是有区别的。\n\t默认设置为0，即关闭\u0026#34;Automatic Styles\u0026#34; \n    The default settings for all of these parameters correspond to Excel\u0026#39;s\n    default parameters.\n    所有这种参数的默认设置与Excel的默认参数有关。\n\n\t由 \u0026#34;outline_settings()\u0026#34;方法控制的工作表参数很少使用。\n\n  freeze_panes( $row, $col, $top_row, $left_col )  #冻结窗格\n   \n\t该方法用于将工作表划分为水平或垂直的叫做窗格的区域并且冻结这些窗格以使分隔条不可见。这与Excel中的\u0026#34;窗口-\u0026gt;冻结窗格\u0026#34;菜单命令的作用相同。\n\n    The parameters $row and $col are used to specify the location of the\n    split. It should be noted that the split is specified at the top or left\n    of a cell and that the method uses zero based indexing. Therefore to\n    freeze the first row of a worksheet it is necessary to specify the split\n    at row 2 (which is 1 as the zero-based index). This might lead you to\n    think that you are using a 1 based index but this is not the case.\n\t$row 和 $col参数用于指定分隔的位置。应该注意的是分隔由单元格的顶部或左边指定，并且该方法使用基于0开始的索引。因此，冻结工作表的第一行，指定第二行（作为基于0的索引时是1）进行分隔是有必要的。这可能导致你认为在使用基于1的索引，但是这不是问题。\n\n    You can set one of the $row and $col parameters as zero if you do not\n    want either a vertical or horizontal split.\n\t如果你不需要水平或垂直分隔，你可以将$row和$col参数中的一个设置为0。\n\n    例子:\n\n        $worksheet-\u0026gt;freeze_panes( 1, 0 );    # Freeze the first row\n        $worksheet-\u0026gt;freeze_panes( \u0026#39;A2\u0026#39; );    # Same using A1 notation\n        $worksheet-\u0026gt;freeze_panes( 0, 1 );    # Freeze the first column\n        $worksheet-\u0026gt;freeze_panes( \u0026#39;B1\u0026#39; );    # Same using A1 notation\n        $worksheet-\u0026gt;freeze_panes( 1, 2 );    # Freeze first row and first 2 columns\n        $worksheet-\u0026gt;freeze_panes( \u0026#39;C2\u0026#39; );    # Same using A1 notation\n\n    The parameters $top_row and $left_col are optional. They are used to\n    specify the top-most or left-most visible row or column in the scrolling\n    region of the panes. 例如， to freeze the first row and to have the\n    scrolling region begin at row twenty:\n\t$top_row 和 $left_col参数是可选的。它们用于在窗格的滚动区域中指定可见的最顶端或最左端的行或列。\n\t例如，冻结第一行并让滚动区域从第20行开始：\n\n        $worksheet-\u0026gt;freeze_panes( 1, 0, 20, 0 );\n\n\t对于$top_row 和 $left_col参数，你可以使用A1表示法。\n\n    查看那\u0026#34;panes.pl\u0026#34;程序。\n\n  split_panes( $y, $x, $top_row, $left_col )\n    This method can be used to divide a worksheet into horizontal or\n    vertical regions known as panes. This method is different from the\n    \u0026#34;freeze_panes()\u0026#34; method in that the splits between the panes will be\n    visible to the user and each pane will have its own scroll bars.\n\t该方法用于将工作表划分为叫做窗格的水平的或垂直的区域。该方法不同于\u0026#34;freeze_panes()\u0026#34;方法，\n\t它分隔的窗格对用户是可见的，并且每个窗格都有它们自己的滚动条。\n\n    The parameters $y and $x are used to specify the vertical and horizontal\n    position of the split. The units for $y and $x are the same as those\n    used by Excel to specify row height and column width. However, the\n    vertical and horizontal units are different from each other. Therefore\n    you must specify the $y and $x parameters in terms of the row heights\n    and column widths that you have set or the default values which are 15\n    for a row and 8.43 for a column.\n\t$y 和 $x 参数用于分隔的水平和垂直位置。 $y和$x的单位与Excel使用的单位一样，用于指定行高和列宽。然而，水平的和垂直的单位不一样。 \n\t因此，你必须按照你设置好的行高和列宽来指定$y 和 $x 参数，或者，使用默认值，行高15,列宽8.43.\n\n    You can set one of the $y and $x parameters as zero if you do not want\n    either a vertical or horizontal split. The parameters $top_row and\n    $left_col are optional. They are used to specify the top-most or\n    left-most visible row or column in the bottom-right pane.\n\t如果你不想水平分隔或垂直分隔，你可以将$y 和 $x参数之一设置为0。top_row 和$left_col参数是可选的，它们用于指定在右底部窗格中的最上或最左的可见行或列。\n\n    例子:\n\n        $worksheet-\u0026gt;split_panes( 15, 0,   );    # First row\n        $worksheet-\u0026gt;split_panes( 0,  8.43 );    # First column\n        $worksheet-\u0026gt;split_panes( 15, 8.43 );    # First row and column\n\n    该方法可以使用A1表示法。\n\n    查看 \u0026#34;freeze_panes()\u0026#34;方法和 \u0026#34;panes.pl\u0026#34;程序。\n\n  merge_range( $first_row, $first_col, $last_row, $last_col, $token, $format )\n    The \u0026#34;merge_range()\u0026#34; method allows you merge cells that contain other\n    types of alignment in addition to the merging:\n\t\u0026#34;merge_range()\u0026#34;方法允许你合并含有其它对齐方式（除了合并）的单元格：\n\n        my $format = $workbook-\u0026gt;add_format(\n            border =\u0026gt; 6,\n            valign =\u0026gt; \u0026#39;vcenter\u0026#39;,\n            align  =\u0026gt; \u0026#39;center\u0026#39;,\n        );\n\n        $worksheet-\u0026gt;merge_range( \u0026#39;B3:D4\u0026#39;, \u0026#39;Vertical and horizontal\u0026#39;, $format );\n\n\t\u0026#34;merge_range()\u0026#34;方法使用工作表的\u0026#34;write()\u0026#34;方法写入它的$token参数。因此，它会按要求处理数字，字符串，公式或urls。如果你想指定要求的\u0026#34;write_*\u0026#34;方法，使用 \u0026#34;merge_range_type()\u0026#34;方法，看下面。\n\n\t查看\u0026#34;merge3.pl\u0026#34;到\u0026#34;merge6.pl\u0026#34;获取该方法完全的信息。\n\n  merge_range_type( $type, $first_row, $first_col, $last_row, $last_col, ... )\n    The \u0026#34;merge_range()\u0026#34; method, see above, uses \u0026#34;write()\u0026#34; to insert the\n    required data into to a merged range. However, there may be times where\n    this isn\u0026#39;t what you require so as an alternative the \u0026#34;merge_range_type\n    ()\u0026#34; method allows you to specify the type of data you wish to write. For\n    example:\n\t\u0026#34;merge_range()\u0026#34;方法，看上面，使用\u0026#34;write()\u0026#34;向合并的区域中插入需要的数据。然而，有时这可能不是你想要的，所以作为选择，\u0026#34;merge_range_type()\u0026#34;方法允许你指定你想写入的数据类型。比如：\n\n        $worksheet-\u0026gt;merge_range_type( \u0026#39;number\u0026#39;,  \u0026#39;B2:C2\u0026#39;, 123,    $format1 );\n        $worksheet-\u0026gt;merge_range_type( \u0026#39;string\u0026#39;,  \u0026#39;B4:C4\u0026#39;, \u0026#39;foo\u0026#39;,  $format2 );\n        $worksheet-\u0026gt;merge_range_type( \u0026#39;formula\u0026#39;, \u0026#39;B6:C6\u0026#39;, \u0026#39;=1+2\u0026#39;, $format3 );\n\n    The $type must be one of the following, which corresponds to a\n    \u0026#34;write_*()\u0026#34; method:\n\t$type必须是下面的之一，与 \u0026#34;write_*()\u0026#34;方法相对：\n\n        \u0026#39;number\u0026#39;\n        \u0026#39;string\u0026#39;\n        \u0026#39;formula\u0026#39;\n        \u0026#39;array_formula\u0026#39;\n        \u0026#39;blank\u0026#39;\n        \u0026#39;rich_string\u0026#39;\n        \u0026#39;date_time\u0026#39;\n        \u0026#39;url\u0026#39;\n\n    Any arguments after the range should be whatever the appropriate method\n    accepts:\n\t任何在这范围之后的参数应该是任何合适的方法可接受的：\n\n        $worksheet-\u0026gt;merge_range_type( \u0026#39;rich_string\u0026#39;, \u0026#39;B8:C8\u0026#39;,\n                                      \u0026#39;This is \u0026#39;, $bold, \u0026#39;bold\u0026#39;, $format4 );\n\n    Note, you must always pass a $format object as an argument, even if it\n    is a default format.\n    注意，你必须一直传递一个$format对象作为参数，即使它是一个默认的格式。\n  set_zoom( $scale )\n    Set the worksheet zoom factor in the range \u0026#34;10 \u0026lt;= $scale \u0026lt;= 400\u0026#34;:\n\t在范围\u0026#34;10 \u0026lt;= $scale \u0026lt;= 400\u0026#34;内设置工作表的缩放因数：\n\n        $worksheet1-\u0026gt;set_zoom( 50 );\n        $worksheet2-\u0026gt;set_zoom( 75 );\n        $worksheet3-\u0026gt;set_zoom( 300 );\n        $worksheet4-\u0026gt;set_zoom( 400 );\n\n    The default zoom factor is 100. You cannot zoom to \u0026#34;Selection\u0026#34; because\n    it is calculated by Excel at run-time.\n\t默认的缩放因数是100.你不能对选取进行缩放，因为它在运行时被Excel计算。\n\n    Note, \u0026#34;set_zoom()\u0026#34; does not affect the scale of the printed page. For\n    that you should use \u0026#34;set_print_scale()\u0026#34;.\n\t注意，\u0026#34;set_zoom()\u0026#34; 不影响打印页的尺寸。对于此，你应该使用\u0026#34;set_print_scale()\u0026#34;.\n\n  right_to_left()\n    The \u0026#34;right_to_left()\u0026#34; method is used to change the default direction of\n    the worksheet from left-to-right, with the A1 cell in the top left, to\n    right-to-left, with the he A1 cell in the top right.\n\t\u0026#34;right_to_left()\u0026#34;方法用于改变工作表的默认方向，由从左到右，即A1单元格在左上方，改为从右到左，即A1单元格在右上方。\n\n        $worksheet-\u0026gt;right_to_left();\n\n    This is useful when creating Arabic, Hebrew or other near or far eastern\n    worksheets that use right-to-left as the default direction.\n\t当创建阿拉伯的、希伯来的或其它接近东方或远东的默认使用从右到左方向的工作表时有用。\n\t\n\n  hide_zero()\n   \n\t\u0026#34;hide_zero()\u0026#34;方法用于隐藏任何出现在单元格中的0值。\n\n        $worksheet-\u0026gt;hide_zero();\n\n\t在Excel中，该选项可在工具-\u0026gt;选项-\u0026gt;查看菜单下找到。\n\n  set_tab_color()\n    The \u0026#34;set_tab_color()\u0026#34; method is used to change the colour of the\n    worksheet tab. This feature is only available in Excel 2002 and later.\n    You can use one of the standard colour names provided by the Format\n    object or a colour index. See \u0026#34;COLOURS IN EXCEL\u0026#34; and the\n    \u0026#34;set_custom_color()\u0026#34; method.\n\t\u0026#34;set_tab_color()\u0026#34;方法用于改变工作表栏的颜色。该功能只在Excel 2002及以后可用。你可以使用格式对象或颜色索引提供的标准颜色名之一。查看\u0026#34;COLOURS IN EXCEL\u0026#34; 和\u0026#34;set_custom_color()\u0026#34;方法。\n\n        $worksheet1-\u0026gt;set_tab_color( \u0026#39;red\u0026#39; );\n        $worksheet2-\u0026gt;set_tab_color( 0x0C );\n\n    查看\u0026#34;tab_colors.pl\u0026#34; 程序。\n\n  autofilter( $first_row, $first_col, $last_row, $last_col )\n    This method allows an autofilter to be added to a worksheet. An\n    autofilter is a way of adding drop down lists to the headers of a 2D\n    range of worksheet data. This is turn allow users to filter the data\n    based on simple criteria so that some data is shown and some is hidden.\n\t该方法允许向工作表中添加一个自动筛选功能。\n\n    To add an autofilter to a worksheet:\n\t向工作表添加一个自动筛选：\n\n        $worksheet-\u0026gt;autofilter( 0, 0, 10, 3 );\n        $worksheet-\u0026gt;autofilter( \u0026#39;A1:D11\u0026#39; );    # Same as above in A1 notation.\n\n    Filter conditions can be applied using the \u0026#34;filter_column()\u0026#34; or\n    \u0026#34;filter_column_list()\u0026#34; method.\n\t筛选条件能使用\u0026#34;filter_column()\u0026#34;或\u0026#34;filter_column_list()\u0026#34;方法应用。\n\n    查看\u0026#34;autofilter.pl\u0026#34; 程序。\n\n  filter_column( $column, $expression )\n    The \u0026#34;filter_column\u0026#34; method can be used to filter columns in a autofilter\n    range based on simple conditions.\n\t\u0026#34;filter_column\u0026#34;方法能用于根据简单的条件在一个自动筛选范围内过滤列。\n\n    NOTE: It isn\u0026#39;t sufficient to just specify the filter condition. You must\n    also hide any rows that don\u0026#39;t match the filter condition. Rows are\n    hidden using the \u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; parameter. \u0026#34;Excel::Writer::XLSX\u0026#34;\n    cannot do this automatically since it isn\u0026#39;t part of the file format. See\n    the \u0026#34;autofilter.pl\u0026#34; program in the examples directory of the distro for\n    an example.\n\t注意：仅仅指定过滤条件是不够的。你也必须隐藏任何不匹配过滤条件的行。\n\t使用\u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; 参数来隐藏行。\n\t\u0026#34;Excel::Writer::XLSX\u0026#34;不能自动地做到这点因为它不是文件格式的一部分。查看\u0026#34;autofilter.pl\u0026#34; 程序。\n\n    The conditions for the filter are specified using simple expressions:\n\t使用简单的表达式指定过滤条件：\n\n        $worksheet-\u0026gt;filter_column( \u0026#39;A\u0026#39;, \u0026#39;x \u0026gt; 2000\u0026#39; );\n        $worksheet-\u0026gt;filter_column( \u0026#39;B\u0026#39;, \u0026#39;x \u0026gt; 2000 and x \u0026lt; 5000\u0026#39; );\n\n    The $column parameter can either be a zero indexed column number or a\n    string column name.\n\t$column参数可以是从0索引的一个列编号或一个字符串列名。\n\n\t下面的操作符是可用的：\n\n        操作符        同义词\n           ==           =   eq  =~\n           !=           \u0026lt;\u0026gt;  ne  !=\n           \u0026gt;\n           \u0026lt;\n           \u0026gt;=\n           \u0026lt;=\n\n           and          \u0026amp;\u0026amp;\n           or           ||\n\n\t操作符的同义词仅仅是让你更舒服地使用表达式的语法糖。有一点很重要：表达式会被Excel解释而不是perl\n\n\t一个表达式能由一个单一的语句组成或由\u0026#34;and\u0026#34; 和 \u0026#34;or\u0026#34;操作符分开的2个语句组成，例如：\n\n        \u0026#39;x \u0026lt;  2000\u0026#39;\n        \u0026#39;x \u0026gt;  2000\u0026#39;\n        \u0026#39;x == 2000\u0026#39;\n        \u0026#39;x \u0026gt;  2000 and x \u0026lt;  5000\u0026#39;\n        \u0026#39;x == 2000 or  x == 5000\u0026#39;\n\n \n\t在表达式中使用\u0026#34;Blanks\u0026#34;或 \u0026#34;NonBlanks\u0026#34;值能达到过滤空开或非空白数据的作用：\n\n        \u0026#39;x == Blanks\u0026#39;\n        \u0026#39;x == NonBlanks\u0026#39;\n\n\tExcel也允许一些简单的字符串匹配操作：\n\n        \u0026#39;x =~ b*\u0026#39;   # begins with b\n        \u0026#39;x !~ b*\u0026#39;   # doesn\u0026#39;t begin with b\n        \u0026#39;x =~ *b\u0026#39;   # ends with b\n        \u0026#39;x !~ *b\u0026#39;   # doesn\u0026#39;t end with b\n        \u0026#39;x =~ *b*\u0026#39;  # contains b\n        \u0026#39;x !~ *b*\u0026#39;  # doesn\u0026#39;t contains b\n\n\n\t你可以使用\u0026#34;*\u0026#34;匹配任意字符或数字，使用\u0026#34;?\u0026#34;匹配任一字符或数字。Excel的过滤器不支持其它的正则表达式量词。Excel的正则表达式字符能使用\u0026#34;~\u0026#34;符号转义。\n\n\t上面的占位符变量\u0026#34;x\u0026#34;能被任意的简单字符串代替。实际的占位符名在内部被忽略，所以下面的是等价的：\n\n        \u0026#39;x     \u0026lt; 2000\u0026#39;\n        \u0026#39;col   \u0026lt; 2000\u0026#39;\n        \u0026#39;Price \u0026lt; 2000\u0026#39;\n\n    Also, note that a filter condition can only be applied to a column in a\n    range specified by the \u0026#34;autofilter()\u0026#34; Worksheet method.\n\t注意，过滤条件仅能应用到由\u0026#34;autofilter()\u0026#34;工作表方法所指定范围的列上。\n\n    查看\u0026#34;autofilter.pl\u0026#34; 程序。\n\n\n\t注意Spreadsheet::WriteExcel支持最多10种类型的过滤。这些目前不被 Excel::Writer::XLSX支持，但会在以后添加。\n\n  filter_column_list( $column, @matches )\n\n\t在Excel 2007以前只有1到2个过滤条件，比如上面展示的\u0026#34;filter_column\u0026#34; 方法。\n\n    Excel 2007 introduced a new list style filter where it is possible to\n    specify 1 or more \u0026#39;or\u0026#39; style criteria. 例如， if your column\n    contained data for the first six months  Then if you selected\n    \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39; and \u0026#39;May\u0026#39; they would be displayed as shown on the\n    right.\n\tExcel 2007引进一种新的列表类型过滤，能指定1个或多个\u0026#39;or\u0026#39;类型的标准。例如，如果你的列中含有前六个月的数据，初始数据会按所有选择the initial data would be displayed as all selected as shown on the left.而如果你选择了 \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39; 和 \u0026#39;May\u0026#39; 它们会显示在右边。\n\n\n        No criteria selected      Some criteria selected.\n\n        [/] (Select all)          [X] (Select all)\n        [/] January               [ ] January\n        [/] February              [ ] February\n        [/] March                 [/] March\n        [/] April                 [/] April\n        [/] May                   [/] May\n        [/] June                  [ ] June\n\n    The \u0026#34;filter_column_list()\u0026#34; method can be used to represent these types\n    of filters:\n\t\u0026#34;filter_column_list()\u0026#34; 方法能用于代表这些类型的过滤：\n\n        $worksheet-\u0026gt;filter_column_list( \u0026#39;A\u0026#39;, \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39;, \u0026#39;May\u0026#39; );\n\n    The $column parameter can either be a zero indexed column number or a\n    string column name.\n\t$column 参数可以是从0索引的列编号或一个字符串列名。\n\n    可以选择一个或多个标准:\n\n        $worksheet-\u0026gt;filter_column_list( 0, \u0026#39;March\u0026#39; );\n        $worksheet-\u0026gt;filter_column_list( 1, 100, 110, 120, 130 );\n\n    NOTE: It isn\u0026#39;t sufficient to just specify the filter condition. You must\n    also hide any rows that don\u0026#39;t match the filter condition. Rows are\n    hidden using the \u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; parameter. \u0026#34;Excel::Writer::XLSX\u0026#34;\n    cannot do this automatically since it isn\u0026#39;t part of the file format. See\n    the \u0026#34;autofilter.pl\u0026#34; program in the examples directory of the distro for\n    an example. e conditions for the filter are specified using simple\n    expressions:\n\t注意：仅仅指定过滤条件是不够的。你也必须隐藏任何不匹配过滤条件的行。\n\t使用\u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; 参数来隐藏行。\n\t\u0026#34;Excel::Writer::XLSX\u0026#34;不能自动地做到这点因为它不是文件格式的一部分。查看\u0026#34;autofilter.pl\u0026#34; 程序。\n\n  convert_date_time( $date_string )\n  \n\t\u0026#34;convert_date_time()\u0026#34; 方法在内部被\u0026#34;write_date_time()\u0026#34; 方法使用，用于将日期字符串转换为在Excel中代表日期和时间的数字。\n\n    为了实用目的，它作为一种公共方法显露在我们面前。\n\t$date_string格式在\u0026#34;write_date_time()\u0026#34;方法中有详细说明。\n\nPAGE SET-UP METHODS\n   打印的时侯，页面set-up方法影响一张工作表的外形。它们控制着诸如页眉、页脚和页边距功能。这些方法就是标准的工作表方法。为清晰起见，下面用单独的章节来说明它们的使用。\n\t下面的方法对于页面设置是可用的：\n\n        set_landscape()\n        set_portrait()\n        set_page_view()\n        set_paper()\n        center_horizontally()\n        center_vertically()\n        set_margins()\n        set_header()\n        set_footer()\n        repeat_rows()\n        repeat_columns()\n        hide_gridlines()\n        print_row_col_headers()\n        print_area()\n        print_across()\n        fit_to_pages()\n        set_start_page()\n        set_print_scale()\n        set_h_pagebreaks()\n        set_v_pagebreaks()\n\n    \t当使用Excel::Writer::XLSX工作时，通常的需求是将同一个页面设置特性应用到工作簿中的所有工作表中。你可以使用\u0026#34;workbook\u0026#34;类的\u0026#34;sheets()\u0026#34;方法通过访问工作簿中的工作表数组来完成：\n\n        for $worksheet ( $workbook-\u0026gt;sheets() ) {\n            $worksheet-\u0026gt;set_landscape();\n        }\n\n  set_landscape()\n    This method is used to set the orientation of a worksheet\u0026#39;s printed page\n    to landscape:\n\t\n\n        $worksheet-\u0026gt;set_landscape();    # Landscape mode\n\n  set_portrait() #设置竖排格式（【印刷】(书页、插图、表格等)竖排格式）\n    This method is used to set the orientation of a worksheet\u0026#39;s printed page\n    to portrait. The default worksheet orientation is portrait, so you won\u0026#39;t\n    generally need to call this method.\n\t该方法用于设置工作表打印页面对于竖排的方向。默认的工作表方向是竖排，所以通常你不需要调用该方法。\n\n        $worksheet-\u0026gt;set_portrait();    # Portrait mode\n\n  set_page_view()\n\t该方法用于以\u0026#34;页面查看/布局\u0026#34;模式显示工作表。\n\n        $worksheet-\u0026gt;set_page_view();\n\n  set_paper( $index )\n    This method is used to set the paper format for the printed output of a\n    worksheet. The following paper styles are available:\n\t该方法用于为工作表的打印输出设置页面格式。下面是可用的纸张类型：\n\n        Index   Paper format            Paper size\n        =====   ============            ==========\n          0     Printer default         -\n          1     Letter                  8 1/2 x 11 in\n          2     Letter Small            8 1/2 x 11 in\n          3     Tabloid                 11 x 17 in\n          4     Ledger                  17 x 11 in\n          5     Legal                   8 1/2 x 14 in\n          6     Statement               5 1/2 x 8 1/2 in\n          7     Executive               7 1/4 x 10 1/2 in\n          8     A3                      297 x 420 mm\n          9     A4                      210 x 297 mm\n         10     A4 Small                210 x 297 mm\n         11     A5                      148 x 210 mm\n         12     B4                      250 x 354 mm\n         13     B5                      182 x 257 mm\n         14     Folio                   8 1/2 x 13 in\n         15     Quarto                  215 x 275 mm\n         16     -                       10x14 in\n         17     -                       11x17 in\n         18     Note                    8 1/2 x 11 in\n         19     Envelope  9             3 7/8 x 8 7/8\n         20     Envelope 10             4 1/8 x 9 1/2\n         21     Envelope 11             4 1/2 x 10 3/8\n         22     Envelope 12             4 3/4 x 11\n         23     Envelope 14             5 x 11 1/2\n         24     C size sheet            -\n         25     D size sheet            -\n         26     E size sheet            -\n         27     Envelope DL             110 x 220 mm\n         28     Envelope C3             324 x 458 mm\n         29     Envelope C4             229 x 324 mm\n         30     Envelope C5             162 x 229 mm\n         31     Envelope C6             114 x 162 mm\n         32     Envelope C65            114 x 229 mm\n         33     Envelope B4             250 x 353 mm\n         34     Envelope B5             176 x 250 mm\n         35     Envelope B6             176 x 125 mm\n         36     Envelope                110 x 230 mm\n         37     Monarch                 3.875 x 7.5 in\n         38     Envelope                3 5/8 x 6 1/2 in\n         39     Fanfold                 14 7/8 x 11 in\n         40     German Std Fanfold      8 1/2 x 12 in\n         41     German Legal Fanfold    8 1/2 x 13 in\n\n    Note, it is likely that not all of these paper types will be available\n    to the end user since it will depend on the paper formats that the\n    user\u0026#39;s printer supports. Therefore, it is best to stick to standard\n    paper types.\n\t注意，不是所有的纸张类型对于终端用户都是可用的，因为它依赖于用户的打印机支持的页面格式。因此，最好使用标准的纸张类型。\n\n        $worksheet-\u0026gt;set_paper( 1 );    # US Letter\n        $worksheet-\u0026gt;set_paper( 9 );    # A4\n\n \n\t如果你没有指定纸张类型，工作表会使用打印机默认的纸张打印。\n\n  center_horizontally()\n    Center the worksheet data horizontally between the margins on the\n    printed page:\n\t在打印页面的页边距之间水平居中对齐工作表数据：\n\n        $worksheet-\u0026gt;center_horizontally();\n\n  center_vertically()\n    Center the worksheet data vertically between the margins on the printed\n    page:\n\t在打印页的页边距之间垂直居中对齐工作表数据：\n\n        $worksheet-\u0026gt;center_vertically();\n\n  set_margins( $inches )\n    There are several methods available for setting the worksheet margins on\n    the printed page:\n\t有几种可用的方法用于设置打印页面的工作表页边距：\n\n        set_margins()        # 将所有页边距设为同样的值\n        set_margins_LR()     # 将左页边距和右页边距设为同样的值\n        set_margins_TB()     # 将上页边距和下页边距设为同样的值\n        set_margin_left();   # 设置左页边距\n        set_margin_right();  # 设置右页边距\n        set_margin_top();    # Set top margin设置上页边距\n        set_margin_bottom(); # Set bottom margin设置下页边距\n\n    All of these methods take a distance in inches as a parameter. Note: 1\n    inch = 25.4mm. \u0026#34;;-)\u0026#34; The default left and right margin is 0.7 inch. The\n    default top and bottom margin is 0.75 inch. Note, these defaults are\n    different from the defaults used in the binary file format by\n    Spreadsheet::WriteExcel.\n\t所有这些参数以英寸距离作为参数。注意：1英寸=25.4毫米。默认的左页边距和右页边距是0.7英寸。\n\t默认的上页边距和下页边距是0.75英寸。注意，这些默认值与Spreadsheet::WriteExcel中使用的二进制文件格式的默认值不同。\n\n  set_header( $string, $margin )\n   \n\t页眉和页脚使用$string生成，$string由普通文本和控制字符组成。 $margin参数是可选的。\n\n\t可用的控制字符是：\n\n        控制字符            类别                描述\n        =======             ========            ===========\n        \u0026amp;L                  对齐                左对齐\n        \u0026amp;C                                      居中对齐\n        \u0026amp;R                                      右对齐\n\n        \u0026amp;P                  信息                页码\n        \u0026amp;N                                      总页数\n        \u0026amp;D                                      日期\n        \u0026amp;T                                      时间\n        \u0026amp;F                                      文件名\n        \u0026amp;A                                      工作表名\n        \u0026amp;Z                                      工作簿路径\n\n        \u0026amp;fontsize           字体                字体大小\n        \u0026amp;\u0026#34;font,style\u0026#34;                           字体名和字体类型\n        \u0026amp;U                                      单下划线\n        \u0026amp;E                                      双下划线\n        \u0026amp;S                                      删除线\n        \u0026amp;X                                      上标\n        \u0026amp;Y                                      下标\n\n        \u0026amp;\u0026amp;                  其它                字面符号\u0026amp;\n\n\t通过在文本前面前置控制字符\u0026amp;L、\u0026amp;C、和\u0026amp;R,可以将页眉和页脚中的文本调整（对齐）为居左、居中和右对齐。\n\n    例如， (使用 ASCII 插图表示结果):\n\n        $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;LHello\u0026#39;);\n\n         ---------------------------------------------------------------\n        |                                                               |\n        | Hello                                                         |\n        |                                                               |\n\n\n        $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;CHello\u0026#39;);\n\n         ---------------------------------------------------------------\n        |                                                               |\n        |                          Hello                                |\n        |                                                               |\n\n\n        $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;RHello\u0026#39;);\n\n         ---------------------------------------------------------------\n        |                                                               |\n        |                                                         Hello |\n        |                                                               |\n\n    For simple text, if you do not specify any justification the text will\n    be centred. However, you must prefix the text with \u0026amp;C if you specify a\n    font name or any other formatting:\n\t对于纯文本，如果你没有指定任何对齐方式，文本将居中对齐。然而，如果你指定字体名或其它任何格式，你必须在文本前前置\u0026amp;C符号。\n\n        $worksheet-\u0026gt;set_header(\u0026#39;Hello\u0026#39;);\n\n         ---------------------------------------------------------------\n        |                                                               |\n        |                          Hello                                |\n        |                                                               |\n\n\t你可以让每个对齐区域中都有文本：\n\n        $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;LCiao\u0026amp;CBello\u0026amp;RCielo\u0026#39;);\n\n         ---------------------------------------------------------------\n        |                                                               |\n        | Ciao                     Bello                          Cielo |\n        |                                                               |\n\n\t当工作表或工作簿发生变化时，信息控制字符作为Excel会更新的变量。时间和日期使用用户默认的格式：\n\n        $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;CPage \u0026amp;P of \u0026amp;N\u0026#39;);\n\n         ---------------------------------------------------------------\n        |                                                               |\n        |                        Page 1 of 6                            |\n        |                                                               |\n\n\n        $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;CUpdated at \u0026amp;T\u0026#39;);\n\n         ---------------------------------------------------------------\n        |                                                               |\n        |                    Updated at 12:30 PM                        |\n        |                                                               |\n\n\n\t你可以通过在字体前前置控制字符\u0026amp;n,\u0026#34;n\u0026#34;是字体大小，来指定文本区域的字体大小：\n\n        $worksheet1-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;30Hello Big\u0026#39; );\n        $worksheet2-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;10Hello Small\u0026#39; );\n\n\n\t你可以在文本前前置控制序列\u0026amp;\u0026#34;font,style\u0026#34;来指定文本区域的字体。\u0026#34;font\u0026#34;是诸如\u0026#34;Courier New\u0026#34; 或 \u0026#34;Times New Roman\u0026#34;的字体名，\u0026#34;style\u0026#34;是标准的Windows字体描述之一：\u0026#34;Regular\u0026#34;, \u0026#34;Italic\u0026#34;, \u0026#34;Bold\u0026#34; 或 \u0026#34;Bold Italic\u0026#34;:\n\n        $worksheet1-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;\u0026#34;Courier New,Italic\u0026#34;Hello\u0026#39; );\n        $worksheet2-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;\u0026#34;Courier New,Bold Italic\u0026#34;Hello\u0026#39; );\n        $worksheet3-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;\u0026#34;Times New Roman,Regular\u0026#34;Hello\u0026#39; );\n\n\t将所有这些功能组合起来创建复杂的页眉和页脚是可能的。作为对于建立复杂页眉和页脚的帮助，你可以在Excel中记录一个页面设置的宏，并且查看VBA产生的格式字符串。记住VBA使用2个双引号\u0026#34;\u0026#34;代表单个双引号\u0026#34;.对于上面的最后一个例子，等价的VBA代码看起来像这样：\n\n        .LeftHeader   = \u0026#34;\u0026#34;\n        .CenterHeader = \u0026#34;\u0026amp;\u0026#34;\u0026#34;Times New Roman,Regular\u0026#34;\u0026#34;Hello\u0026#34;\n        .RightHeader  = \u0026#34;\u0026#34;\n\n\t你应该使用2个and符号\u0026#34;\u0026amp;\u0026amp;\u0026#34;在页眉或页脚中表示一个字面and符号\u0026#34;\u0026amp;\u0026#34;:\n\n        $worksheet1-\u0026gt;set_header(\u0026#39;\u0026amp;CCuriouser \u0026amp;\u0026amp; Curiouser - Attorneys at Law\u0026#39;);\n\n    As stated above the margin parameter is optional. As with the other\n    margins the value should be in inches. The default header and footer\n    margin is 0.3 inch. Note, the default margin is different from the\n    default used in the binary file format by Spreadsheet::WriteExcel. The\n    header and footer margin size can be set as follows:\n     上面的例子中，开始页边距参数是可选的。对于其它页边距其值应该是英寸。默认的页眉和页脚页边距是0.3英寸。注意，这些默认页边距值与Spreadsheet::WriteExcel中使用的二进制文件格式的默认值不同。页眉和页脚的页边距大小可以设置如下：\n        $worksheet-\u0026gt;set_header( \u0026#39;\u0026amp;CHello\u0026#39;, 0.75 );\n\n    The header and footer margins are independent of the top and bottom\n    margins.\n\t页眉和页脚的页边距依赖于顶部和底部的页边距。\n\n  \n\t注意，页眉和页脚字符串必须少于255个字符。长于255个的字符串将不会被写入并生成一个警告。\n\n \n\t\u0026#34;set_header()\u0026#34;方法也能处理UTF-8格式的Unicode字符串。\n\n        $worksheet-\u0026gt;set_header( \u0026#34;\u0026amp;C\\x{263a}\u0026#34; )\n\n    查看 \u0026#34;headers.pl\u0026#34; 程序。\n\n  set_footer()\n  \n    \u0026#34;set_footer()\u0026#34; 方法与\u0026#34;set_header()\u0026#34;方法的语法一样，看上面。\n  repeat_rows( $first_row, $last_row )\n    Set the number of rows to repeat at the top of each printed page.\n\t在每张打印页的顶部设置需要复制的行数。\n\n    For large Excel documents it is often desirable to have the first row or\n    rows of the worksheet print out at the top of each page. This can be\n    achieved by using the \u0026#34;repeat_rows()\u0026#34; method. The parameters $first_row\n    and $last_row are zero based. The $last_row parameter is optional if you\n    only wish to specify one row:\n\t对于很大的Excel文件，在每页的顶部打印工作表的第一行或前几行通常是值得的。这可以使用 \u0026#34;repeat_rows()\u0026#34; 方法做到。$first_row和$last_row参数是基于0的。 如果你只想指定一行，$last_row参数是可选的：\n\n        $worksheet1-\u0026gt;repeat_rows( 0 );    # 复制第一行\n        $worksheet2-\u0026gt;repeat_rows( 0, 1 ); # 复制前2行\n\n  repeat_columns( $first_col, $last_col )\n    Set the columns to repeat at the left hand side of each printed page.\n\t在每张打印页的左边设置需要复制的列数。\n\n    For large Excel documents it is often desirable to have the first column\n    or columns of the worksheet print out at the left hand side of each\n    page. This can be achieved by using the \u0026#34;repeat_columns()\u0026#34; method. The\n    parameters $first_column and $last_column are zero based. The\n    $last_column parameter is optional if you only wish to specify one\n    column. You can also specify the columns using A1 column notation, see\n    the note about \u0026#34;Cell notation\u0026#34;.\n\t\n    对于很大的Excel文件，在每页的左侧打印工作表的第一列或前几列通常是值得的。这可以使用 \u0026#34;repeat_columns()\u0026#34; 方法做到。$first_column和$last_column参数是基于0的。 如果你只想指定一列，$last_column参数是可选的。你可以使用A1列表示法指定列数。\n\n        $worksheet1-\u0026gt;repeat_columns( 0 );        # Repeat the first column\n        $worksheet2-\u0026gt;repeat_columns( 0, 1 );     # Repeat the first two columns\n        $worksheet3-\u0026gt;repeat_columns( \u0026#39;A:A\u0026#39; );    # Repeat the first column\n        $worksheet4-\u0026gt;repeat_columns( \u0026#39;A:B\u0026#39; );    # Repeat the first two columns\n\n  hide_gridlines( $option )\n    This method is used to hide the gridlines on the screen and printed\n    page. Gridlines are the lines that divide the cells on a worksheet.\n     If you have defined your own cell borders you may wish to\n    hide the default gridlines.\n\t该方法用于隐藏屏幕上的网格线和打印过的页面。网格线是在工作表中分隔单元格的线。\n\tScreen and printed gridlines are turned on by default in an Excel\n    worksheet.\n   如果你定义了你自己的单元格边框你可能想隐藏默认的网格线。\n        $worksheet-\u0026gt;hide_gridlines();\n\n\t下面的$option值是有效的：\n\n        0 : 不隐藏网格线\n        1 : 只隐藏打印后的网格线Hide printed gridlines only\n        2 : 隐藏屏幕和打印后的网格线Hide screen and printed gridlines\n\n    If you don\u0026#39;t supply an argument or use \u0026#34;undef\u0026#34; the default option is 1,\n    i.e. only the printed gridlines are hidden.\n\t如果你没有提供参数或使用\u0026#34;undef\u0026#34;，则默认的选项是1，i.e。只有打印后的网格线被隐藏。\n\n  print_row_col_headers()\n    Set the option to print the row and column headers on the printed page.\n\t在打印页面上设置选项以打印行标题和列标题。\n\n    An Excel worksheet looks something like the following：\n\t一张工作表看起来就像如下这样：\n\n         ------------------------------------------\n        |   |   A   |   B   |   C   |   D   |  ...\n         ------------------------------------------\n        | 1 |       |       |       |       |  ...\n        | 2 |       |       |       |       |  ...\n        | 3 |       |       |       |       |  ...\n        | 4 |       |       |       |       |  ...\n        |...|  ...  |  ...  |  ...  |  ...  |  ...\n\n    The headers are the letters and numbers at the top and the left of the\n    worksheet. Since these headers serve mainly as a indication of position\n    on the worksheet they generally do not appear on the printed page. If\n    you wish to have them printed you can use the \u0026#34;print_row_col_headers()\u0026#34;\n    method :\n\t标题就是工作表顶部和左侧的字母和数字。因为这些标题主要在工作表中指明位置，它们一般不会出现在打印页面上。如果你想连标题一块打印，你可以使用\u0026#34;print_row_col_headers()\u0026#34;方法。\n\n        $worksheet-\u0026gt;print_row_col_headers();\n\n    Do not confuse these headers with page headers as described in the\n    \u0026#34;set_header()\u0026#34; section above.\n\t不要把这些标题和上面提到的有关页面标题的\u0026#34;set_header()\u0026#34;章节弄混淆。\n\n  print_area( $first_row, $first_col, $last_row, $last_col )\n    This method is used to specify the area of the worksheet that will be\n    printed. All four parameters must be specified. You can also use A1\n    notation, \n\t该方法用于指定将被打印的工作表区域。4个参数必须都指定。你也可以使用A1表示法：\n\n        $worksheet1-\u0026gt;print_area( \u0026#39;A1:H20\u0026#39; );    # Cells A1 to H20\n        $worksheet2-\u0026gt;print_area( 0, 0, 19, 7 ); # The same\n        $worksheet2-\u0026gt;print_area( \u0026#39;A:H\u0026#39; );       # Columns A to H if rows have data\n\n  print_across()\n    The \u0026#34;print_across\u0026#34; method is used to change the default print direction.\n    This is referred to by Excel as the sheet \u0026#34;page order\u0026#34;.\n\t\u0026#34;print_across\u0026#34;方法用于改变默认的打印方向。这在Excel工作表中被称为“页面顺序”。\n\n        $worksheet-\u0026gt;print_across();\n\n    The default page order is shown below for a worksheet that extends over\n    4 pages. The order is called \u0026#34;down then across\u0026#34;:\n\t下面显示的是拥有超过4页的工作表的默认的页面顺序。该顺序叫做“向下然后交叉”\n\n        [1] [3]\n        [2] [4]\n\n    However, by using the \u0026#34;print_across\u0026#34; method the print order will be\n    changed to \u0026#34;across then down\u0026#34;:\n\t然而，通过使用\u0026#34;print_across\u0026#34;方法，打印顺序会更改为\u0026#34;交叉向下\u0026#34;：\n\n        [1] [2]\n        [3] [4]\n\n  fit_to_pages( $width, $height )\n    The \u0026#34;fit_to_pages()\u0026#34; method is used to fit the printed area to a\n    specific number of pages both vertically and horizontally. If the\n    printed area exceeds the specified number of pages it will be scaled\n    down to fit. This guarantees that the printed area will always appear on\n    the specified number of pages even if the page size or margins change.\n\t\u0026#34;fit_to_pages()\u0026#34;方法用于垂直和水平地使打印区域与指定页数相适。如果打印区域超过了指定的页数，它会按比列缩小来适应。这保证了即使页面尺寸或页边距发生变化，打印区域也会一直出现在指定页上。\n\n        $worksheet1-\u0026gt;fit_to_pages( 1, 1 );    # Fit to 1x1 pages\n        $worksheet2-\u0026gt;fit_to_pages( 2, 1 );    # Fit to 2x1 pages\n        $worksheet3-\u0026gt;fit_to_pages( 1, 2 );    # Fit to 1x2 pages\n\n\t打印区域能使用上面描述的\u0026#34;print_area()\u0026#34;方法定义。\n\n    A common requirement is to fit the printed output to *n* pages wide but\n    have the height be as long as necessary. To achieve this set the $height\n    to zero:\n    通常的需求是将打印输出为n页宽，但让高度尽可能地长。可以把 $height设置为0来达到要求：\n        $worksheet1-\u0026gt;fit_to_pages( 1, 0 );    # 1 page wide and as long as necessary\n\n    Note that although it is valid to use both \u0026#34;fit_to_pages()\u0026#34; and\n    \u0026#34;set_print_scale()\u0026#34; on the same worksheet only one of these options can\n    be active at a time. The last method call made will set the active\n    option.\n\t注意，尽管在同一张工作表中使用\u0026#34;fit_to_pages()\u0026#34; 和 \u0026#34;set_print_scale()\u0026#34; 是正确的，但一次只能激活其中的一个选项。最后一个方法调用会设置激活选项。\n\n    Note that \u0026#34;fit_to_pages()\u0026#34; will override any manual page breaks that are\n    defined in the worksheet.\n\t 注意\u0026#34;fit_to_pages()\u0026#34;会重写任何手册页\n\n  set_start_page( $start_page )\n    The \u0026#34;set_start_page()\u0026#34; method is used to set the number of the starting\n    page when the worksheet is printed out. The default value is 1.\n\t \u0026#34;set_start_page()\u0026#34;方法用于设置工作表打印时的起始页。默认值是1.\n\n        $worksheet-\u0026gt;set_start_page( 2 );\n\n  set_print_scale( $scale )\n    Set the scale factor of the printed page. Scale factors in the range \u0026#34;10\n    \u0026lt;= $scale \u0026lt;= 400\u0026#34; are valid:\n\t设置打印页的比例系数。在范围\u0026#34;10 \u0026lt;= $scale \u0026lt;= 400\u0026#34;内的比例系数是有效的：\n\n        $worksheet1-\u0026gt;set_print_scale( 50 );\n        $worksheet2-\u0026gt;set_print_scale( 75 );\n        $worksheet3-\u0026gt;set_print_scale( 300 );\n        $worksheet4-\u0026gt;set_print_scale( 400 );\n\n    The default scale factor is 100. Note, \u0026#34;set_print_scale()\u0026#34; does not\n    affect the scale of the visible page in Excel. For that you should use\n    \u0026#34;set_zoom()\u0026#34;.\n\t默认的比例系数是100.注意，\u0026#34;set_print_scale()\u0026#34;不影响Excel可见页的尺寸。对于此。你应使用\u0026#34;set_zoom()\u0026#34;。\n\n    Note also that although it is valid to use both \u0026#34;fit_to_pages()\u0026#34; and\n    \u0026#34;set_print_scale()\u0026#34; on the same worksheet only one of these options can\n    be active at a time. The last method call made will set the active\n    option.\n\t也要注意，尽管在同一张工作表中使用\u0026#34;fit_to_pages()\u0026#34; 和 \u0026#34;set_print_scale()\u0026#34; 是正确的，但一次只能激活其中的一个选项。最后一个方法调用会设置激活选项。\n\n  set_h_pagebreaks( @breaks )\n    Add horizontal page breaks to a worksheet. A page break causes all the\n    data that follows it to be printed on the next page. Horizontal page\n    breaks act between rows. To create a page break between rows 20 and 21\n    you must specify the break at row 21. However in zero index notation\n    this is actually row 20. So you can pretend for a small while that you\n    are using 1 index notation:\n\t添加水平分页符到工作表中。分页符导致所有在它后面的数据在下一页中被打印。水平分页符在行之间起作用。为在第20行和第21行之间创建分页符，你必须在第21行指定分页。然而，在以0开始索引的表示法中，这实际上是第20行。所以你可以假装你在使用1索引表示法。\n\n        $worksheet1-\u0026gt;set_h_pagebreaks( 20 );    # Break between row 20 and 21\n\n    The \u0026#34;set_h_pagebreaks()\u0026#34; method will accept a list of page breaks and\n    you can call it more than once:\n\t\u0026#34;set_h_pagebreaks()\u0026#34;方法会接受一列分隔符而且你可以多次调用该方法：\n\n        $worksheet2-\u0026gt;set_h_pagebreaks( 20,  40,  60,  80,  100 );    # Add breaks\n        $worksheet2-\u0026gt;set_h_pagebreaks( 120, 140, 160, 180, 200 );    # Add some more\n\n    Note: If you specify the \u0026#34;fit to page\u0026#34; option via the \u0026#34;fit_to_pages()\u0026#34;\n    method it will override all manual page breaks.\n\t注意，如果你通过 \u0026#34;fit_to_pages()\u0026#34;方法指定了\u0026#34;fit to page\u0026#34;选项，它会覆盖所有的手动分页符。\n\n    There is a silent limitation of about 1000 horizontal page breaks per\n    worksheet in line with an Excel internal limitation.\n\t与Excel内部限制一样，每张工作表的水平分页符限制为1000个。\n\n  set_v_pagebreaks( @breaks )\n    Add vertical page breaks to a worksheet. A page break causes all the\n    data that follows it to be printed on the next page. Vertical page\n    breaks act between columns. To create a page break between columns 20\n    and 21 you must specify the break at column 21. However in zero index\n    notation this is actually column 20. So you can pretend for a small\n    while that you are using 1 index notation:\n\t添加垂直分页符到工作表中。分页符导致所有在它后面的数据在下一页中被打印。垂直分页符在列之间起作用。为在第20列和第21列之间创建分页符，你必须在第21列指定分页。然而，在以0开始索引的表示法中，这实际上是第20列。所以你可以假装你在使用1索引表示法。\n\n        $worksheet1-\u0026gt;set_v_pagebreaks(20); #在20和21列之间分页\n\n    The \u0026#34;set_v_pagebreaks()\u0026#34; method will accept a list of page breaks and\n    you can call it more than once:\n\t\u0026#34;set_v_pagebreaks()\u0026#34;方法会接受一列分隔符而且你可以多次调用该方法：\n\n\n        $worksheet2-\u0026gt;set_v_pagebreaks( 20,  40,  60,  80,  100 );    # Add breaks\n        $worksheet2-\u0026gt;set_v_pagebreaks( 120, 140, 160, 180, 200 );    # Add some more\n\n    Note: If you specify the \u0026#34;fit to page\u0026#34; option via the \u0026#34;fit_to_pages()\u0026#34;\n    method it will override all manual page breaks.\n\t注意，如果你通过 \u0026#34;fit_to_pages()\u0026#34;方法指定了\u0026#34;fit to page\u0026#34;选项，它会覆盖所有的手动分页符。\n\nCELL FORMATTING   #单元格格式化\n    This section describes the methods and properties that are available for\n    formatting cells in Excel. The properties of a cell that can be\n    formatted include: fonts, colours, patterns, borders, alignment and\n    number formatting.\n\t此章节描述在Excel中格式化单元格有哪些方法和属性可用。能用于格式化单元格的属性包括：字体、颜色、样式、边框、对齐和数字格式化。\n\n  创建和使用格式对象\n    Cell formatting is defined through a Format object. Format objects are\n    created by calling the workbook \u0026#34;add_format()\u0026#34; method as follows:\n\t单元格的格式是通过格式对象定义的。通过调用如下的工作簿\u0026#34;add_format()\u0026#34;方法创建格式对象：\n\n        my $format1 = $workbook-\u0026gt;add_format();            # Set properties later\n        my $format2 = $workbook-\u0026gt;add_format( %props );    # Set at creation\n\n    The format object holds all the formatting properties that can be\n    applied to a cell, a row or a column. The process of setting these\n    properties is discussed in the next section.\n\t格式对象存有所有能应用到单元格的格式属性，一行或一列。在下一章节讨论设置这些属性的步骤。\n\n    Once a Format object has been constructed and its properties have been\n    set it can be passed as an argument to the worksheet \u0026#34;write\u0026#34; methods as\n    follows:\n\t一旦创建了格式对象并且设置了它们的属性，它可以按如下方法作为参数传递给工作表的\u0026#34;write\u0026#34;方法：\n\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;One\u0026#39;, $format );\n        $worksheet-\u0026gt;write_string( 1, 0, \u0026#39;Two\u0026#39;, $format );\n        $worksheet-\u0026gt;write_number( 2, 0, 3, $format );\n        $worksheet-\u0026gt;write_blank( 3, 0, $format );\n\n    Formats can also be passed to the worksheet \u0026#34;set_row()\u0026#34; and\n    \u0026#34;set_column()\u0026#34; methods to define the default property for a row or\n    column.\n\t格式也可以传递给工作表的\u0026#34;set_row()\u0026#34;和\u0026#34;set_column()\u0026#34;方法为行或列定义默认属性。\n\n        $worksheet-\u0026gt;set_row( 0, 15, $format );\n        $worksheet-\u0026gt;set_column( 0, 0, 15, $format );\n\n  Format methods and Format properties\n    格式方法和格式属性\n    The following table shows the Excel format categories, the formatting\n    properties that can be applied and the equivalent object method:\n\t下面的表中显示了Excel的格式类别，即能使用的格式属性和等价的对象方法：\n\n        Category   Description       Property        Method Name\n        --------   -----------       --------        -----------\n        Font       Font type         font            set_font()\n                   Font size         size            set_size()\n                   Font color        color           set_color()\n                   Bold              bold            set_bold()\n                   Italic            italic          set_italic()\n                   Underline         underline       set_underline()\n                   Strikeout         font_strikeout  set_font_strikeout()\n                   Super/Subscript   font_script     set_font_script()\n                   Outline           font_outline    set_font_outline()\n                   Shadow            font_shadow     set_font_shadow()\n\n        Number     Numeric format    num_format      set_num_format()\n\n        Protection Lock cells        locked          set_locked()\n                   Hide formulas     hidden          set_hidden()\n\n        Alignment  Horizontal align  align           set_align()\n                   Vertical align    valign          set_align()\n                   Rotation          rotation        set_rotation()\n                   Text wrap         text_wrap       set_text_wrap()\n                   Justify last      text_justlast   set_text_justlast()\n                   Center across     center_across   set_center_across()\n                   Indentation       indent          set_indent()\n                   Shrink to fit     shrink          set_shrink()\n\n        Pattern    Cell pattern      pattern         set_pattern()\n                   Background color  bg_color        set_bg_color()\n                   Foreground color  fg_color        set_fg_color()\n\n        Border     Cell border       border          set_border()\n                   Bottom border     bottom          set_bottom()\n                   Top border        top             set_top()\n                   Left border       left            set_left()\n                   Right border      right           set_right()\n                   Border color      border_color    set_border_color()\n                   Bottom color      bottom_color    set_bottom_color()\n                   Top color         top_color       set_top_color()\n                   Left color        left_color      set_left_color()\n                   Right color       right_color     set_right_color()\n\n    There are two ways of setting Format properties: by using the object\n    method interface or by setting the property directly. 例如，, a\n    typical use of the method interface would be as follows:\n\t有2中方法设置格式属性：使用对象方法接口或直接设置属性。例如，下面是典型的方法接口用法：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_bold();\n        $format-\u0026gt;set_color( \u0026#39;red\u0026#39; );\n\n    By comparison the properties can be set directly by passing a hash of\n    properties to the Format constructor:\n\t通过比较，给格式构造函数传递一个属性散列能直接设置属性：\n\n        my $format = $workbook-\u0026gt;add_format( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; );\n\n    or after the Format has been constructed by means of the\n    \u0026#34;set_format_properties()\u0026#34; method as follows:\n\t或在格式创建之后按下面的方法通过\u0026#34;set_format_properties()\u0026#34;方法设置属性：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_format_properties( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; );\n\n    You can also store the properties in one or more named hashes and pass\n    them to the required method:\n\t你也可以将属性存储在一个或多个具名散列中并将需要的方法传递给它们：\n\n        my %font = (\n            font  =\u0026gt; \u0026#39;Arial\u0026#39;,\n            size  =\u0026gt; 12,\n            color =\u0026gt; \u0026#39;blue\u0026#39;,\n            bold  =\u0026gt; 1,\n        );\n\n        my %shading = (\n            bg_color =\u0026gt; \u0026#39;green\u0026#39;,\n            pattern  =\u0026gt; 1,\n        );\n\n\n        my $format1 = $workbook-\u0026gt;add_format( %font );            # Font only\n        my $format2 = $workbook-\u0026gt;add_format( %font, %shading );  # Font and shading\n\n    The method mechanism may be better if you prefer\n    setting properties via method calls (which the author did when the code\n    was first written) otherwise passing properties to the constructor has\n    proved to be a little more flexible and self documenting in practice. An\n    additional advantage of working with property hashes is that it allows\n    you to share formatting between workbook objects as shown in the example\n    above.\n\t如果你喜欢通过方法调用设置属性，方法机制可能更好。否则，传递属性到构造函数会更复杂些并且它的文档更实用。使用属性散列的一个额外好处是它允许你在上面显示的例子中的工作簿对象之间共享格式。\n\t\n\n    The Perl/Tk style of adding properties is also supported:\n\t也支持添加Perl/Tk风格的属性：\n\n        my %font = (\n            -font  =\u0026gt; \u0026#39;Arial\u0026#39;,\n            -size  =\u0026gt; 12,\n            -color =\u0026gt; \u0026#39;blue\u0026#39;,\n            -bold  =\u0026gt; 1,\n        );\n\n  Working with formats使用格式\n    The default format is Arial 10 with all other properties off.\n\t默认的格式是Arial 10，其它属性都关闭。\n\n    Each unique format in Excel::Writer::XLSX must have a corresponding\n    Format object. It isn\u0026#39;t possible to use a Format with a write() method\n    and then redefine the Format for use at a later stage. This is because a\n    Format is applied to a cell not in its current state but in its final\n    state. Consider the following example:\n\t在Excel::Writer::XLSX 中，每个单独的格式都有一个相应的格式对象。使用带有write() 方法的格式然后在以后使用阶段再重新定义格式是不可行的。\n\t这是因为被应用到单元格中的格式不是在它们的当前状态，而是它们的最终状态。看看下面的例子：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_bold();\n        $format-\u0026gt;set_color( \u0026#39;red\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Cell A1\u0026#39;, $format );\n        $format-\u0026gt;set_color( \u0026#39;green\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;B1\u0026#39;, \u0026#39;Cell B1\u0026#39;, $format );\n\n    Cell A1 is assigned the Format $format which is initially set to the\n    colour red. However, the colour is subsequently set to green. When Excel\n    displays Cell A1 it will display the final state of the Format which in\n    this case will be the colour green.\n\t单元格A1被指定格式$format,它开始被设置为红色。然而，颜色随后被设置为绿色。当Excel显示单元格A1时，它会显示格式的最终状态，此处是绿色。\n\n    In general a method call without an argument will turn a property on,\n    例如，:\n\t通常，不带参数的方法调用会开启一个属性，例如：\n\n        my $format1 = $workbook-\u0026gt;add_format();\n        $format1-\u0026gt;set_bold();       # Turns bold on\n        $format1-\u0026gt;set_bold( 1 );    # Also turns bold on\n        $format1-\u0026gt;set_bold( 0 );    # Turns bold off\n\nFORMAT METHODS 格式方法\n    The Format object methods are described in more detail in the following\n    sections. In addition, there is a Perl program called \u0026#34;formats.pl\u0026#34; in\n    the \u0026#34;examples\u0026#34; directory of the WriteExcel distribution. This program\n    creates an Excel workbook called \u0026#34;formats.xlsx\u0026#34; which contains examples\n    of almost all the format types.\n\t下面的章节详细描述了格式对象方法。此外，有一个叫做\u0026#34;formats.pl\u0026#34;的Perl程序。该程序创建了一个名为\u0026#34;formats.xlsx\u0026#34;的Excel工作簿，它包含了几乎所有格式类型的例子。\n\n\t下面的格式方法是可用的：\n\n        set_font()\n        set_size()\n        set_color()\n        set_bold()\n        set_italic()\n        set_underline()\n        set_font_strikeout()\n        set_font_script()\n        set_font_outline()\n        set_font_shadow()\n        set_num_format()\n        set_locked()\n        set_hidden()\n        set_align()\n        set_rotation()\n        set_text_wrap()\n        set_text_justlast()\n        set_center_across()\n        set_indent()\n        set_shrink()\n        set_pattern()\n        set_bg_color()\n        set_fg_color()\n        set_border()\n        set_bottom()\n        set_top()\n        set_left()\n        set_right()\n        set_border_color()\n        set_bottom_color()\n        set_top_color()\n        set_left_color()\n        set_right_color()\n\n    The above methods can also be applied directly as properties. For\n    example \u0026#34;$format-\u0026gt;set_bold()\u0026#34; is equivalent to\n    \u0026#34;$workbook-\u0026gt;add_format(bold =\u0026gt; 1)\u0026#34;.\n\t上面的方法能直接用于属性。例如，\u0026#34;$format-\u0026gt;set_bold()\u0026#34;方法与 \u0026#34;$workbook-\u0026gt;add_format(bold =\u0026gt; 1)\u0026#34;方法等价。\n\n  set_format_properties( %properties )\n    The properties of an existing Format object can be also be set by means\n    of \u0026#34;set_format_properties()\u0026#34;:\n\t通过设置\u0026#34;set_format_properties()\u0026#34;也能设置一个已经存在的格式对象的属性：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_format_properties( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; );\n\n    However, this method is here mainly for legacy reasons. It is preferable\n    to set the properties in the format constructor:\n\t然而，由于历史问题该方法主要用在这里。在格式构造函数中设置属性更合适：\n\n        my $format = $workbook-\u0026gt;add_format( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; );\n\n  set_font( $fontname )\n        Default state:      Font is Arial\n        Default action:     None\n        Valid args:         Any valid font name\n\n     指定使用的字体:\n\n        $format-\u0026gt;set_font(\u0026#39;Times New Roman\u0026#39;);\n\n    Excel can only display fonts that are installed on the system that it is\n    running on. Therefore it is best to use the fonts that come as standard\n    such as \u0026#39;Arial\u0026#39;, \u0026#39;Times New Roman\u0026#39; and \u0026#39;Courier New\u0026#39;. See also the Fonts\n    worksheet created by formats.pl\n\tExcel只能显示安装在系统中正使用着的字体。因此，最好使用作为标准的诸如\u0026#39;Arial\u0026#39;, \u0026#39;Times New Roman\u0026#39; 和 \u0026#39;Courier New\u0026#39;.字体。查看由formats.pl创建的工作表字体。\n\n  set_size()\n        Default state:      Font size is 10\n        Default action:     Set font size to 1\n        Valid args:         Integer values from 1 to as big as your screen.\n\n    Set the font size. Excel adjusts the height of a row to accommodate the\n    largest font size in the row. You can also explicitly specify the height\n    of a row using the set_row() worksheet method.\n\t设置字体大小。Excel会调整行高以适应行中的最大字体。你也可以显式地使用set_row()工作表方法指定行高。\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_size( 30 );\n\n  set_color()\n        Default state:      Excels的默认颜色，通常是黑色\n        Default action:     设置默认颜色\n        Valid args:         8..63之间的整数或下面的字符串:\n                            \u0026#39;black\u0026#39;\n                            \u0026#39;blue\u0026#39;\n                            \u0026#39;brown\u0026#39;\n                            \u0026#39;cyan\u0026#39;\n                            \u0026#39;gray\u0026#39;\n                            \u0026#39;green\u0026#39;\n                            \u0026#39;lime\u0026#39;\n                            \u0026#39;magenta\u0026#39;\n                            \u0026#39;navy\u0026#39;\n                            \u0026#39;orange\u0026#39;\n                            \u0026#39;pink\u0026#39;\n                            \u0026#39;purple\u0026#39;\n                            \u0026#39;red\u0026#39;\n                            \u0026#39;silver\u0026#39;\n                            \u0026#39;white\u0026#39;\n                            \u0026#39;yellow\u0026#39;\n\n    \n\t设置字体颜色。\u0026#34;set_color()\u0026#34;方法用法如下：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_color( \u0026#39;red\u0026#39; );\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;wheelbarrow\u0026#39;, $format );\n\n   \t注意：\u0026#34;set_color()\u0026#34; 方法用于单元格中字体的颜色。要设置单元格的颜色，使用\u0026#34;set_bg_color()\u0026#34; 和\n    \u0026#34;set_pattern()\u0026#34; 方法.\n\n\t其它的例子，请查看formats.pl程序的\u0026#39;Named colors\u0026#39; 和 \u0026#39;Standard colors\u0026#39;工作表。\n\n    \n\n  set_bold()\n        Default state:      bold is off\n        Default action:     Turn bold on\n        Valid args:         0, 1\n\n    \n\t设置字体的bold黑体属性：\n\n        $format-\u0026gt;set_bold();  # Turn bold on\n\n  set_italic()\n        Default state:      Italic is off\n        Default action:     Turn italic on\n        Valid args:         0, 1\n\n\n\t设置字体的斜体属性：\n\n        $format-\u0026gt;set_italic();  # Turn italic on\n\n  set_underline()\n        Default state:      Underline is off\n        Default action:     Turn on single underline\n        Valid args:         0  = 没有下划线\n                            1  = 单一下划线\n                            2  = 双下划线\n                            33 = Single accounting underline\n                            34 = Double accounting underline\n\n\t设置字体的下划线属性。\n\n        $format-\u0026gt;set_underline();   # Single underline\n\n  set_font_strikeout()\n        Default state:      Strikeout is off\n        Default action:     Turn strikeout on\n        Valid args:         0, 1\n\n\t设置字体的删除线属性。\n\n  set_font_script()\n        Default state:      Super/Subscript is off\n        Default action:     Turn Superscript on\n        Valid args:         0  = Normal\n                            1  = Superscript\n                            2  = Subscript\n\n   \t设置字体的上标/下标属性。\n\n  set_font_outline()\n        Default state:      Outline is off\n        Default action:     Turn outline on\n        Valid args:         0, 1\n\n    仅支持Mac.\n\n  set_font_shadow()\n        Default state:      Shadow is off\n        Default action:     Turn shadow on\n        Valid args:         0, 1\n\n    Mac only.\n\n  set_num_format()\n        Default state:      General format\n        Default action:     Format index 1\n        Valid args:         See the following table\n\n    This method is used to define the numerical format of a number in Excel.\n    It controls whether a number is displayed as an integer, a floating\n    point number, a date, a currency value or some other user defined\n    format.\n\t该方法用于定义Excel中数字的数字格式。它控制着一个数字是否显示为整数、浮点数、日期、货币值或其它用户定义的格式。\n\n    The numerical format of a cell can be specified by using a format string\n    or an index to one of Excel\u0026#39;s built-in formats:\n\t单元格的数字格式能使用一个格式化字符串或Excel的内建格式索引指定：\n\n        my $format1 = $workbook-\u0026gt;add_format();\n        my $format2 = $workbook-\u0026gt;add_format();\n        $format1-\u0026gt;set_num_format( \u0026#39;d mmm yyyy\u0026#39; );    # Format string\n        $format2-\u0026gt;set_num_format( 0x0f );            # Format index\n\n        $worksheet-\u0026gt;write( 0, 0, 36892.521, $format1 );    # 1 Jan 2001\n        $worksheet-\u0026gt;write( 0, 0, 36892.521, $format2 );    # 1-Jan-01\n\n   \t使用格式化字符串能定义很复杂的数字格式.\n\n        $format01-\u0026gt;set_num_format( \u0026#39;0.000\u0026#39; );\n        $worksheet-\u0026gt;write( 0, 0, 3.1415926, $format01 );    # 3.142\n\n        $format02-\u0026gt;set_num_format( \u0026#39;#,##0\u0026#39; );\n        $worksheet-\u0026gt;write( 1, 0, 1234.56, $format02 );      # 1,235\n\n        $format03-\u0026gt;set_num_format( \u0026#39;#,##0.00\u0026#39; );\n        $worksheet-\u0026gt;write( 2, 0, 1234.56, $format03 );      # 1,234.56\n\n        $format04-\u0026gt;set_num_format( \u0026#39;$0.00\u0026#39; );\n        $worksheet-\u0026gt;write( 3, 0, 49.99, $format04 );        # $49.99\n\n      \t#注意，你也可以使用其它诸如英镑或日元的货币符号。\n        #其它货币可能要求使用Unicode。\n        $format07-\u0026gt;set_num_format( \u0026#39;mm/dd/yy\u0026#39; );\n        $worksheet-\u0026gt;write( 6, 0, 36892.521, $format07 );    # 01/01/01\n\n        $format08-\u0026gt;set_num_format( \u0026#39;mmm d yyyy\u0026#39; );\n        $worksheet-\u0026gt;write( 7, 0, 36892.521, $format08 );    # Jan 1 2001\n\n        $format09-\u0026gt;set_num_format( \u0026#39;d mmmm yyyy\u0026#39; );\n        $worksheet-\u0026gt;write( 8, 0, 36892.521, $format09 );    # 1 January 2001\n\n        $format10-\u0026gt;set_num_format( \u0026#39;dd/mm/yyyy hh:mm AM/PM\u0026#39; );\n        $worksheet-\u0026gt;write( 9, 0, 36892.521, $format10 );    # 01/01/2001 12:30 AM\n\n        $format11-\u0026gt;set_num_format( \u0026#39;0 \u0026#34;dollar and\u0026#34; .00 \u0026#34;cents\u0026#34;\u0026#39; );\n        $worksheet-\u0026gt;write( 10, 0, 1.87, $format11 );        # 1 dollar and .87 cents\n\n        # Conditional numerical formatting.\n        $format12-\u0026gt;set_num_format( \u0026#39;[Green]General;[Red]-General;General\u0026#39; );\n        $worksheet-\u0026gt;write( 11, 0, 123, $format12 );         # \u0026gt; 0 Green\n        $worksheet-\u0026gt;write( 12, 0, -45, $format12 );         # \u0026lt; 0 Red\n        $worksheet-\u0026gt;write( 13, 0, 0,   $format12 );         # = 0 Default colour\n\n        # 邮政编码\n        $format13-\u0026gt;set_num_format( \u0026#39;00000\u0026#39; );\n        $worksheet-\u0026gt;write( 14, 0, \u0026#39;01209\u0026#39;, $format13 );\n\n  \n\t颜色的格式应该使用下列值之一：\n\n        [Black] [Blue] [Cyan] [Green] [Magenta] [Red] [White] [Yellow]\n\n    Alternatively you can specify the colour based on a colour index as\n    follows: \u0026#34;[Color n]\u0026#34;, where n is a standard Excel colour index - 7. See\n    the \u0026#39;Standard colors\u0026#39; worksheet created by formats.pl.\n\t作为选择，你可以根据下面的颜色索引指定颜色： \u0026#34;[Color n]\u0026#34;，n是标准的Excel颜色索引-7.查看由formats.pl创建的工作表中的\u0026#39;Standard colors\u0026#39;。\n\n   \n    You should ensure that the format string is valid in Excel prior to\n    using it in WriteExcel.\n\t你应该确保格式字符串在 WriteExcel中使用它之前是合法的.\n\n    下面的表显式了Excel内建的格式：\n        Index   Index   Format String\n        0       0x00    General\n        1       0x01    0\n        2       0x02    0.00\n        3       0x03    #,##0\n        4       0x04    #,##0.00\n        5       0x05    ($#,##0_);($#,##0)\n        6       0x06    ($#,##0_);[Red]($#,##0)\n        7       0x07    ($#,##0.00_);($#,##0.00)\n        8       0x08    ($#,##0.00_);[Red]($#,##0.00)\n        9       0x09    0%\n        10      0x0a    0.00%\n        11      0x0b    0.00E+00\n        12      0x0c    # ?/?\n        13      0x0d    # ??/??\n        14      0x0e    m/d/yy\n        15      0x0f    d-mmm-yy\n        16      0x10    d-mmm\n        17      0x11    mmm-yy\n        18      0x12    h:mm AM/PM\n        19      0x13    h:mm:ss AM/PM\n        20      0x14    h:mm\n        21      0x15    h:mm:ss\n        22      0x16    m/d/yy h:mm\n        ..      ....    ...........\n        37      0x25    (#,##0_);(#,##0)\n        38      0x26    (#,##0_);[Red](#,##0)\n        39      0x27    (#,##0.00_);(#,##0.00)\n        40      0x28    (#,##0.00_);[Red](#,##0.00)\n        41      0x29    _(* #,##0_);_(* (#,##0);_(* \u0026#34;-\u0026#34;_);_(@_)\n        42      0x2a    _($* #,##0_);_($* (#,##0);_($* \u0026#34;-\u0026#34;_);_(@_)\n        43      0x2b    _(* #,##0.00_);_(* (#,##0.00);_(* \u0026#34;-\u0026#34;??_);_(@_)\n        44      0x2c    _($* #,##0.00_);_($* (#,##0.00);_($* \u0026#34;-\u0026#34;??_);_(@_)\n        45      0x2d    mm:ss\n        46      0x2e    [h]:mm:ss\n        47      0x2f    mm:ss.0\n        48      0x30    ##0.0E+0\n        49      0x31    @\n\n\t查看 formats.pl.中的\u0026#39;Numerical formats\u0026#39;工作表。\n\t还可查看number_formats1.html 和number_formats2.html \n\n    Note 1. Numeric formats 23 to 36 are not documented by Microsoft and may\n    differ in international versions.\n\t注意，23到36之间的数字格式在Microsoft中没有说明文档并且内部之间的版本可能不同。\n\n    Note 2. In Excel 5 the dollar sign appears as a dollar sign. In Excel\n    97-2000 it appears as the defined local currency symbol.\n\t注意2，在Excel5中美元符号以美元符号出现。在Excel97-2000中作为当地定义的货币符号出现。\n\n  set_locked()\n        Default state:      Cell locking is on\n        Default action:     Turn locking on\n        Valid args:         0, 1\n\n    This property can be used to prevent modification of a cells contents.\n    Following Excel\u0026#39;s convention, cell locking is turned on by default.\n    However, it only has an effect if the worksheet has been protected, see\n    the worksheet \u0026#34;protect()\u0026#34; method.\n\t该属性用于防止修改单元格的内容。根据Excel的约定，单元格默认被锁定。然而，只有当工作表被保护时，它才起作用。查看\u0026#34;protect()\u0026#34;方法。\n\n        my $locked = $workbook-\u0026gt;add_format();\n        $locked-\u0026gt;set_locked( 1 );    # A non-op\n\n        my $unlocked = $workbook-\u0026gt;add_format();\n        $locked-\u0026gt;set_locked( 0 );\n\n        # 开启工作表保护\n        $worksheet-\u0026gt;protect();\n\n        # 该单元格不能被编辑.\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=1+2\u0026#39;, $locked );\n\n        # 这个单元格能被编辑.\n        $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;=1+2\u0026#39;, $unlocked );\n\n  \n\t注意：即使有密码这也仅提供了很弱的保护，查看与\u0026#34;protect()\u0026#34; 方法有关的注意事项。\n\n  set_hidden()\n        Default state:      Formula hiding is off\n        Default action:     Turn hiding on\n        Valid args:         0, 1\n\n    This property is used to hide a formula while still displaying its\n    result. This is generally used to hide complex calculations from end\n    users who are only interested in the result. It only has an effect if\n    the worksheet has been protected, see the worksheet \u0026#34;protect()\u0026#34; method.\n\t该属性用于隐藏一个公式但仍然显示该公式的结果。这通常用于对只关心结果的终端用户隐藏复杂的计算过程。只有当工作表开启保护时，该方法才起作用，查看\u0026#34;protect()\u0026#34; 方法。\n\n        my $hidden = $workbook-\u0026gt;add_format();\n        $hidden-\u0026gt;set_hidden();\n\n        # 开启工作表保护\n        $worksheet-\u0026gt;protect();\n\n        # 在这个单元格中的公式不可见\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=1+2\u0026#39;, $hidden );\n\n   注意：即使使用密码，这也仅仅提供了很弱的保护，查看关于\u0026#34;protect()\u0026#34;方法的注意事项。\n\n  set_align()\n        Default state:      Alignment is off\n        Default action:     Left alignment\n        Valid args:         \u0026#39;left\u0026#39;              Horizontal\n                            \u0026#39;center\u0026#39;\n                            \u0026#39;right\u0026#39;\n                            \u0026#39;fill\u0026#39;\n                            \u0026#39;justify\u0026#39;\n                            \u0026#39;center_across\u0026#39;\n\n                            \u0026#39;top\u0026#39;               Vertical\n                            \u0026#39;vcenter\u0026#39;\n                            \u0026#39;bottom\u0026#39;\n                            \u0026#39;vjustify\u0026#39;\n\n    This method is used to set the horizontal and vertical text alignment\n    within a cell. Vertical and horizontal alignments can be combined. The\n    method is used as follows:\n\t该方法用于在单元格中设置文本的水平和垂直对齐方式。垂直和水平对齐方式可以结合。该方法用法如下：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_align( \u0026#39;center\u0026#39; );\n        $format-\u0026gt;set_align( \u0026#39;vcenter\u0026#39; );\n        $worksheet-\u0026gt;set_row( 0, 30 );\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;X\u0026#39;, $format );\n\n    Text can be aligned across two or more adjacent cells using the\n    \u0026#34;center_across\u0026#34; property. However, for genuine merged cells it is better\n    to use the \u0026#34;merge_range()\u0026#34; worksheet method.\n\t使用\u0026#34;center_across\u0026#34;属性，文本可以在2个或更多相邻的单元格之间对齐。然而，对于真实的合并单元格最好使用\u0026#34;merge_range()\u0026#34;工作表方法。\n\n    The \u0026#34;vjustify\u0026#34; (vertical justify) option can be used to provide\n    automatic text wrapping in a cell. The height of the cell will be\n    adjusted to accommodate the wrapped text. To specify where the text\n    wraps use the \u0026#34;set_text_wrap()\u0026#34; method.\n\t在单元格中，\u0026#34;vjustify\u0026#34;（垂直调整）选项能用于提供自动文本环绕。单元格的高度会被自动调整以适应环绕文本。使用\u0026#34;set_text_wrap()\u0026#34;方法指定文本环绕的位置。\n\n   \t查看formats.pl生成的\u0026#39;Alignment\u0026#39; 工作表获取更多实例。\n\n  set_center_across()\n        Default state:      Center across selection is off\n        Default action:     Turn center across on\n        Valid args:         1\n\n    Text can be aligned across two or more adjacent cells using the\n    \u0026#34;set_center_across()\u0026#34; method. This is an alias for the\n    \u0026#34;set_align(\u0026#39;center_across\u0026#39;)\u0026#34; method call.\n\t使用\u0026#34;set_center_across()\u0026#34;方法，文本能够在2个或多个相邻单元格之间对齐。这是 \u0026#34;set_align(\u0026#39;center_across\u0026#39;)\u0026#34; 方法调用的别名。\n\n    Only one cell should contain the text, the other cells should be blank:\n\t应该只有一个单元格包含文本，其它单元格是空的：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_center_across();\n\n        $worksheet-\u0026gt;write( 1, 1, \u0026#39;Center across selection\u0026#39;, $format );\n        $worksheet-\u0026gt;write_blank( 1, 2, $format );\n\n    See also the \u0026#34;merge1.pl\u0026#34; to \u0026#34;merge6.pl\u0026#34; programs in the \u0026#34;examples\u0026#34;\n    directory and the \u0026#34;merge_range()\u0026#34; method.\n\t查看\u0026#34;merge1.pl\u0026#34; 到\u0026#34;merge6.pl\u0026#34; 程序和\u0026#34;merge_range()\u0026#34;方法。\n\n  set_text_wrap()\n        Default state:      Text wrap is off\n        Default action:     Turn text wrap on\n        Valid args:         0, 1\n\n    这儿有个例子 using the text wrap property, the escape character\n    \u0026#34;\\n\u0026#34; is used to indicate the end of line:\n\t这儿有个使用文本环绕属性的例子，\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_text_wrap();\n        $worksheet-\u0026gt;write( 0, 0, \u0026#34;It\u0026#39;s\\na bum\\nwrap\u0026#34;, $format );\n\n    Excel will adjust the height of the row to accommodate the wrapped text.\n    A similar effect can be obtained without newlines using the\n    \u0026#34;set_align(\u0026#39;vjustify\u0026#39;)\u0026#34; method. See the \u0026#34;textwrap.pl\u0026#34; program in the\n    \u0026#34;examples\u0026#34; directory.\n\tExcel会调整行高以适应环绕文本。使用\u0026#34;set_align(\u0026#39;vjustify\u0026#39;)\u0026#34; 方法不换行就能获得相似的效果。查看\u0026#34;textwrap.pl\u0026#34;程序。\n\n  set_rotation()\n        Default state:      Text rotation is off\n        Default action:     None\n        Valid args:         Integers in the range -90 to 90 and 270\n\n    Set the rotation of the text in a cell. The rotation can be any angle in\n    the range -90 to 90 degrees.\n\t在Excel中设置文本旋转。旋转的度数可以在-90度到90度之间。\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_rotation( 30 );\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;This text is rotated\u0026#39;, $format );\n\n    The angle 270 is also supported. This indicates text where the letters\n    run from top to bottom.\n\t也支持270度旋转。这表明文本中的字母从顶部旋转到底部。？\n\n  set_indent()\n        Default state:      Text indentation is off\n        Default action:     Indent text 1 level\n        Valid args:         Positive integers\n\n    This method can be used to indent text. The argument, which should be an\n    integer, is taken as the level of indentation:\n\t该方法用于缩排文本。参数应该是一个整数，作为缩进的级别：\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_indent( 2 );\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;This text is indented\u0026#39;, $format );\n\n    Indentation is a horizontal alignment property. It will override any\n    other horizontal properties but it can be used in conjunction with\n    vertical properties.\n\t缩进是水平对齐属性。它会覆盖其它任何水平属性但它能与垂直属性一起使用。\n\n  set_shrink()\n        Default state:      Text shrinking is off\n        Default action:     Turn \u0026#34;shrink to fit\u0026#34; on\n        Valid args:         1\n\n    This method can be used to shrink text so that it fits in a cell.\n\t该方法用于收缩文本以适应单元格的大小。\n\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_shrink();\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;Honey, I shrunk the text!\u0026#39;, $format );\n\n  set_text_justlast()\n        Default state:      Justify last is off\n        Default action:     Turn justify last on\n        Valid args:         0, 1\n\n    Only applies to Far Eastern versions of Excel.\n\t只对远东版本的Excel适用。\n\n  set_pattern()\n        默认状态:      Pattern is off\n        默认行为:      Solid fill is on\n        合法参数:      0 .. 18\n\n    Set the background pattern of a cell.\n\t设置单元格的背景图案。\n\n    Examples of the available patterns are shown in the \u0026#39;Patterns\u0026#39; worksheet\n    created by formats.pl. However, it is unlikely that you will ever need\n    anything other than Pattern 1 which is a solid fill of the background\n    color.\n\t可用图案的例子显示在formats.pl创建的\u0026#39;Patterns\u0026#39;工作表中。然而，除了图案1是背景色的完全填充外你不在需要其它东西是不可能的。？\n\n  set_bg_color()\n        Default state:      Color is off\n        Default action:     Solid fill.\n        Valid args:         See set_color()\n\n    The \u0026#34;set_bg_color()\u0026#34; method can be used to set the background colour of\n    a pattern. Patterns are defined via the \u0026#34;set_pattern()\u0026#34; method. If a\n    pattern hasn\u0026#39;t been defined then a solid fill pattern is used as the\n    default.\n\t\u0026#34;set_bg_color()\u0026#34;方法用于设置图案的背景颜色。图案通过\u0026#34;set_pattern()\u0026#34;方法定义。如果没有定义图案，则默认使用完全填充图案。\n\n    这儿有个怎样在单元格中设置完全填充的例子：\n\tof how to set up a solid fill in a cell:\n\n        my $format = $workbook-\u0026gt;add_format();\n\n        $format-\u0026gt;set_pattern();    # 使用完全填充是这是可选的\n\n        $format-\u0026gt;set_bg_color( \u0026#39;green\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Ray\u0026#39;, $format );\n\n\t查看formats.pl程序中的\u0026#39;Patterns\u0026#39;工作表获取更多例子。\n\n  set_fg_color()\n        Default state:      Color is off\n        Default action:     Solid fill.\n        Valid args:         See set_color()\n\n    \u0026#34;set_fg_color()\u0026#34;方法用于设置图案的前景色。\n    查看formats.pl程序中的\u0026#39;Patterns\u0026#39;工作表获取更多例子。\n\n  set_border()\n        Also applies to:    set_bottom()\n                            set_top()\n                            set_left()\n                            set_right()\n\n        Default state:      Border is off\n        Default action:     Set border type 1\n        Valid args:         0-13, See below.\n\n\t单元格边框由底部的、顶部的、左侧的、右侧的边框组成。这些边框能使用\u0026#34;set_border()\u0026#34;设置为同样的颜色，或单独使用上面展示的相关方法调用。\n\n  \n\t下面显示了由Excel::Writer::XLSX按索引号排序后的边框样式：\n\n        Index   Name            Weight   Style\n        =====   =============   ======   ===========\n        0       None            0\n        1       Continuous      1        -----------\n        2       Continuous      2        -----------\n        3       Dash            1        - - - - - -\n        4       Dot             1        . . . . . .\n        5       Continuous      3        -----------\n        6       Double          3        ===========\n        7       Continuous      0        -----------\n        8       Dash            2        - - - - - -\n        9       Dash Dot        1        - . - . - .\n        10      Dash Dot        2        - . - . - .\n        11      Dash Dot Dot    1        - . . - . .\n        12      Dash Dot Dot    2        - . . - . .\n        13      SlantDash Dot   2        / - . / - .\n\n\t下面显示了按样式排序后的边框：\n\n        Name            Weight   Style         Index\n        =============   ======   ===========   =====\n        Continuous      0        -----------   7\n        Continuous      1        -----------   1\n        Continuous      2        -----------   2\n        Continuous      3        -----------   5\n        Dash            1        - - - - - -   3\n        Dash            2        - - - - - -   8\n        Dash Dot        1        - . - . - .   9\n        Dash Dot        2        - . - . - .   10\n        Dash Dot Dot    1        - . . - . .   11\n        Dash Dot Dot    2        - . . - . .   12\n        Dot             1        . . . . . .   4\n        Double          3        ===========   6\n        None            0                      0\n        SlantDash Dot   2        / - . / - .   13\n\n\t下面显式了在Excel对话框中排序后的边框：\n\n        Index   Style             Index   Style\n        =====   =====             =====   =====\n        0       None              12      - . . - . .\n        7       -----------       13      / - . / - .\n        4       . . . . . .       10      - . - . - .\n        11      - . . - . .       8       - - - - - -\n        9       - . - . - .       2       -----------\n        3       - - - - - -       5       -----------\n        1       -----------       6       ===========\n\n    Examples of the available border styles are shown in the \u0026#39;Borders\u0026#39;\n    worksheet created by formats.pl.\n\t可用的边框样式的例子显示在由formats.pl创建的\u0026#39;Borders\u0026#39;工作表中。\n\n  set_border_color()\n        Also applies to:    set_bottom_color()\n                            set_top_color()\n                            set_left_color()\n                            set_right_color()\n\n        Default state:      Color is off\n        Default action:     Undefined\n        Valid args:         See set_color()\n\n\n\t设置单元格边框的颜色。单元格边框由底边框、顶边框、左边框和右边框组成。\n\t这些边框能使用\u0026#34;set_border()\u0026#34;设置为同样的颜色，或单独使用上面展示的相关方法调用。\n\t边框样式和颜色的例子显示在由formats.pl程序创建的 \u0026#39;Borders\u0026#39;工作表中。\n\n  copy( $format )\n    This method is used to copy all of the properties from one Format object\n    to another:\n\t该方法用于从一个格式对象中复制所有的属性到另一个格式对象中：\n\n        my $lorry1 = $workbook-\u0026gt;add_format();\n        $lorry1-\u0026gt;set_bold();\n        $lorry1-\u0026gt;set_italic();\n        $lorry1-\u0026gt;set_color( \u0026#39;red\u0026#39; );    # lorry1 is bold, italic and red\n\n        my $lorry2 = $workbook-\u0026gt;add_format();\n        $lorry2-\u0026gt;copy( $lorry1 );\n        $lorry2-\u0026gt;set_color( \u0026#39;yellow\u0026#39; );    # lorry2 is bold, italic and yellow\n\n    The \u0026#34;copy()\u0026#34; method is only useful if you are using the method interface\n    to Format properties. It generally isn\u0026#39;t required if you are setting\n    Format properties directly using hashes.\n\t\u0026#34;copy()\u0026#34;方法只有在你使用该方法接口的格式属性是有用的。如果你直接使用散列设置格式的属性，那一般不需要copy()方法。\n\n \n\t注意：这不是一个复制构造函数，在复制之前2个对象都必须是存在的。\n\nUNICODE IN EXCEL\n\n\t下面是在 \u0026#34;Excel::Writer::XLSX\u0026#34;中处理Unicode的简介。\n\n   \n\tExcel::Writer::XLSX与Spreadsheet::WriteExcel 的写入方式不同，后者只处理UTF-8格式的Unicode数据，并且不能处理遗留的UTF-16的Excel格式。\n\n\t如果数据是UTF-8格式的，则 Excel::Writer::XLSX 会自动处理它。\n\n    如果你处理的是非UTF-8格式的non-ASCII字符，则perl会提供有用的Encode工具模块帮助你转换为需要的格式，例如：\n\n        use Encode \u0026#39;decode\u0026#39;;\n\n        my $string = \u0026#39;some string with koi8-r characters\u0026#39;;\n           $string = decode(\u0026#39;koi8-r\u0026#39;, $string); # koi8-r to utf8\n\n    Alternatively you can read data from an encoded file and convert it to\n    \u0026#34;UTF-8\u0026#34; as you read it in:\n\t作为选择，当你读入数据时，你能从一个编码后文件中读取数据并将数据转换为UTF-8：\n\n        my $file = \u0026#39;unicode_koi8r.txt\u0026#39;;\n        open FH, \u0026#39;\u0026lt;:encoding(koi8-r)\u0026#39;, $file or die \u0026#34;Couldn\u0026#39;t open $file: $!\\n\u0026#34;;\n\n        my $row = 0;\n        while ( \u0026lt;FH\u0026gt; ) {\n            # Data read in is now in utf8 format.\n            chomp;\n            $worksheet-\u0026gt;write( $row++, 0, $_ );\n        }\n\n    也请查看\u0026#34;unicode_*.pl\u0026#34;程序。\n\nCOLOURS IN EXCEL\n    Excel provides a colour palette of 56 colours. In Excel::Writer::XLSX\n    these colours are accessed via their palette index in the range 8..63.\n    This index is used to set the colour of fonts, cell patterns and cell\n    borders. 例如，:\n\tExcel提供了56种颜色的调色板。在Excel::Writer::XLSX中这些颜色通过它们的颜料索值引来访问，索引值范围是8..63。此处的索引值用于设置字体颜色、单元格图案和单元格边框。例如：\n\n        my $format = $workbook-\u0026gt;add_format(\n                                            color =\u0026gt; 12, # index for blue\n                                            font  =\u0026gt; \u0026#39;Arial\u0026#39;,\n                                            size  =\u0026gt; 12,\n                                            bold  =\u0026gt; 1,\n                                         );\n\n\n\t最常用的颜色也能通过它们的名字访问。名字作为颜色索引的简单别名：\n\n        black     =\u0026gt;    8\n        blue      =\u0026gt;   12\n        brown     =\u0026gt;   16\n        cyan      =\u0026gt;   15\n        gray      =\u0026gt;   23\n        green     =\u0026gt;   17\n        lime      =\u0026gt;   11\n        magenta   =\u0026gt;   14\n        navy      =\u0026gt;   18\n        orange    =\u0026gt;   53\n        pink      =\u0026gt;   33\n        purple    =\u0026gt;   20\n        red       =\u0026gt;   10\n        silver    =\u0026gt;   22\n        white     =\u0026gt;    9\n        yellow    =\u0026gt;   13\n\n    例如:\n\n        my $font = $workbook-\u0026gt;add_format( color =\u0026gt; \u0026#39;red\u0026#39; );\n\n \tExcel的VBA用户应该注意等价的颜色索引是1..56而非8..63.\n\n    If the default palette does not provide a required colour you can\n    override one of the built-in values. This is achieved by using the\n    \u0026#34;set_custom_color()\u0026#34; workbook method to adjust the RGB (red green blue)\n    components of the colour:\n\t如果默认的颜料不能提供你想要的颜色，你可以重写其中的内置值。使用\u0026#34;set_custom_color()\u0026#34;工作簿方法来调整颜色的RGB（红 绿 蓝）成分可以做到这点：\n        my $ferrari = $workbook-\u0026gt;set_custom_color( 40, 216, 12, 12 );\n\n        my $format = $workbook-\u0026gt;add_format(\n            bg_color =\u0026gt; $ferrari,\n            pattern  =\u0026gt; 1,\n            border   =\u0026gt; 1\n        );\n\n        $worksheet-\u0026gt;write_blank( \u0026#39;A1\u0026#39;, $format );\n\n    查看\u0026#34;colors.pl\u0026#34; 程序。\nDATES AND TIME IN EXCEL\n    \n\t理解Excel中的日期和时间，有2件重要的事情：\n\n    1、Excel中的日期/时间 是一个实数加上一个Excel数字格式。\n   \t2、Excel::Writer::XLSX 中的\u0026#34;write()\u0026#34;方法不会自动将“日期/时间”字符串转换成Excel的‘日期/时间’。\n    伴随下面的关于怎样将时间和日期转换成需要的格式的一些建议，这2点会有更详细的解释。\n\n\tExcel的“日期/时间”就是数字加上格式\n    If you write a date string with \u0026#34;write()\u0026#34; then all you will get is a\n    string:\n\t如果你使用\u0026#34;write()\u0026#34;方法写入日期字符串，则所有你将得到的会是一个字符串：\n\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;02/03/04\u0026#39; );   # !! 写入一个字符串而非一个日期. !!\n\n \tExcel中日期和数字代表实数，例如，\u0026#34;Jan 1 2001 12:30 AM\u0026#34;代表数字36892.521.\n\n\t数据的整数部分存储的是自纪元以来的天数，小数部分存储的是一天的百分比。\n\n    Excel中的日期或时间与其它任何数字相似。为了让数字以日期的形式显示，你必须将一个Excel数字格式应用到这个数字上。下面是一些例子：\n\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;date_examples.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n\n        $worksheet-\u0026gt;set_column( \u0026#39;A:A\u0026#39;, 30 );    # For extra visibility.\n\n        my $number = 39506.5;\n\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, $number );             #   39506.5\n\n        my $format2 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;dd/mm/yy\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, $number, $format2 );    #  28/02/08\n\n        my $format3 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mm/dd/yy\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A3\u0026#39;, $number, $format3 );    #  02/28/08\n\n        my $format4 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;d-m-yyyy\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A4\u0026#39;, $number, $format4 );    #  28-2-2008\n\n        my $format5 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;dd/mm/yy hh:mm\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A5\u0026#39;, $number, $format5 );    #  28/02/08 12:00\n\n        my $format6 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;d mmm yyyy\u0026#39; );\n        $worksheet-\u0026gt;write( \u0026#39;A6\u0026#39;, $number, $format6 );    # 28 Feb 2008\n\n        my $format7 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mmm d yyyy hh:mm AM/PM\u0026#39; );\n        $worksheet-\u0026gt;write(\u0026#39;A7\u0026#39;, $number , $format7);     #  Feb 28 2008 12:00 PM\n\n  Excel::Writer::XLSX 不自动转换“日期/时间”字符串\n    Excel::Writer::XLSX doesn\u0026#39;t automatically convert input date strings\n    into Excel\u0026#39;s formatted date numbers due to the large number of possible\n    date formats and also due to the possibility of misinterpretation.\n\t由于可用的日期格式数量很大，也由于可能的误解，Excel::Writer::XLSX不能将输入的日期字符串自动转换为Excel的格式化日期数字。\n\n    例如，, does \u0026#34;02/03/04\u0026#34; mean March 2 2004, February 3 2004 or even\n    March 4 2002.\n\t例如，\u0026#34;02/03/04\u0026#34;的意思是 March 2 2004, February 3 2004 甚至是 March 4 2002吗？\n\n    Therefore, in order to handle dates you will have to convert them to\n    numbers and apply an Excel format. Some methods for converting dates are\n    listed in the next section.\n\t因此，为了处理日期你必须将它们转换为数字并应用一个Excel格式。转换日期的一些方法在下面的章节中列出。\n\n\n    最直接的方式是将你的数据转换为ISO8601\u0026#34;yyyy-mm-ddThh:mm:ss.sss\u0026#34; 日期格式，并使用\u0026#34;write_date_time()\u0026#34;工作表方法:\n        $worksheet-\u0026gt;write_date_time( \u0026#39;A2\u0026#39;, \u0026#39;2001-01-01T12:20\u0026#39;, $format );\n\n    查看文档的\u0026#34;write_date_time()\u0026#34;章节获取详细信息。\n\n  \n\t处理日期字符的一般方法是使用\u0026#34;write_date_time()\u0026#34;：\n\n        1.使用正则表达式识别输入的日期/时间。\n\t\t2.使用同样的正则表达式提取日期/时间的组成部分。\n\t\t3.将日期/时间转换为ISO8601格式。\n        4.使用 write_date_time()和数字格式写入日期/时间。\n\n    这儿有个例子:\n\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;example.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n\n        # 为数据设置默认格式\n        my $date_format = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mmm d yyyy\u0026#39; );\n\n        # Increase column width to improve visibility of data.\n        $worksheet-\u0026gt;set_column( \u0026#39;A:C\u0026#39;, 20 );\n\n        # Simulate reading from a data source.\n        my $row = 0;\n\n        while ( \u0026lt;DATA\u0026gt; ) {\n            chomp;\n\n            my $col  = 0;\n            my @data = split \u0026#39; \u0026#39;;\n\n            for my $item ( @data ) {\n\n                # Match dates in the following formats: d/m/yy, d/m/yyyy\n                if ( $item =~ qr[^(\\d{1,2})/(\\d{1,2})/(\\d{4})$] ) {\n\n                    # Change to the date format required by write_date_time().\n                    my $date = sprintf \u0026#34;%4d-%02d-%02dT\u0026#34;, $3, $2, $1;\n\n                    $worksheet-\u0026gt;write_date_time( $row, $col++, $date,\n                        $date_format );\n                }\n                else {\n\n                    # Just plain data\n                    $worksheet-\u0026gt;write( $row, $col++, $item );\n                }\n            }\n            $row++;\n        }\n\n        __DATA__\n        Item    Cost    Date\n        Book    10      1/9/2007\n        Beer    4       12/9/2007\n        Bed     500     5/10/2007\n\n\n\t更高级的方法你可以通过\u0026#34;add_write_handler()\u0026#34;方法修改\u0026#34;write()\u0026#34;方法来处理你选择的数据格式。查看\u0026#34;add_write_handler()\u0026#34;章节和write_handler3.pl、 write_handler4.pl程序。\n\n  Converting dates and times to an Excel date or time\n  将日期和时间转换为Excel的日期或时间\n\n\t上面的\u0026#34;write_date_time()\u0026#34; 方法只是处理日期和时间的方法之一。\n\n    You can also use the \u0026#34;convert_date_time()\u0026#34; worksheet method to convert\n    from an ISO8601 style date string to an Excel date and time number.\n\t你也可以使用\u0026#34;convert_date_time()\u0026#34;工作表方法将ISO8601风格的字符串转换为Excel的日期和时间数字。\n\n     Excel::Writer::XLSX::Utility模块有日期时间处理函数：\n\n        use Excel::Writer::XLSX::Utility;\n\n        $date           = xl_date_list(2002, 1, 1);         # 37257\n        $date           = xl_parse_date(\u0026#34;11 July 1997\u0026#34;);    # 35622\n        $time           = xl_parse_time(\u0026#39;3:21:36 PM\u0026#39;);      # 0.64\n        $date           = xl_decode_date_EU(\u0026#34;13 May 2002\u0026#34;); # 37389\n\n    注意，有些函数需要额外的CPAN模块。\n\n    \nOUTLINES AND GROUPING IN EXCEL   Excel中的组和分级显示\n    Excel allows you to group rows or columns so that they can be hidden or\n    displayed with a single mouse click. This feature is referred to as\n    outlines.\n\tExcel允许你将行或列分组，以使单击鼠标时它们能被隐藏或显示。该功能叫做分级显示。\n\n    Outlines can reduce complex data down to a few salient sub-totals or\n    summaries.\n\t分级显示能将复杂数据减少到几个突出的小计或总结。\n\n    This feature is best viewed in Excel but the following is an ASCII\n    representation of what a worksheet with three outlines might look like.\n    Rows 3-4 and rows 7-8 are grouped at level 2. Rows 2-9 are grouped at\n    level 1. The lines at the left hand side are called outline level bars.\n\t该功能最好在Excel中查看，但下面的是带有3个分级显示的工作表所代表的ASCII图。\n\t3-4行与7-8行在第2级别分组。2-9行在第一级别被分组。左侧的线叫做分级显示条。\n\n                ------------------------------------------\n         1 2 3 |   |   A   |   B   |   C   |   D   |  ...\n                ------------------------------------------\n          _    | 1 |   A   |       |       |       |  ...\n         |  _  | 2 |   B   |       |       |       |  ...\n         | |   | 3 |  (C)  |       |       |       |  ...\n         | |   | 4 |  (D)  |       |       |       |  ...\n         | -   | 5 |   E   |       |       |       |  ...\n         |  _  | 6 |   F   |       |       |       |  ...\n         | |   | 7 |  (G)  |       |       |       |  ...\n         | |   | 8 |  (H)  |       |       |       |  ...\n         | -   | 9 |   I   |       |       |       |  ...\n         -     | . |  ...  |  ...  |  ...  |  ...  |  ...\n\n    Clicking the minus sign on each of the level 2 outlines will collapse\n    and hide the data as shown in the next figure. The minus sign changes to\n    a plus sign to indicate that the data in the outline is hidden.\n\t在每个级别2点击减号(-),分级会折叠并且隐藏下一图形中的数据。当减号变为加号时，表明分级显示中的数据被隐藏。\n\n                ------------------------------------------\n         1 2 3 |   |   A   |   B   |   C   |   D   |  ...\n                ------------------------------------------\n          _    | 1 |   A   |       |       |       |  ...\n         |     | 2 |   B   |       |       |       |  ...\n         | +   | 5 |   E   |       |       |       |  ...\n         |     | 6 |   F   |       |       |       |  ...\n         | +   | 9 |   I   |       |       |       |  ...\n         -     | . |  ...  |  ...  |  ...  |  ...  |  ...\n\n    Clicking on the minus sign on the level 1 outline will collapse the\n    remaining rows as follows:\n\t点击级别1中的减号，分级会按如下方式折叠剩余的行：\n\n                ------------------------------------------\n         1 2 3 |   |   A   |   B   |   C   |   D   |  ...\n                ------------------------------------------\n               | 1 |   A   |       |       |       |  ...\n         +     | . |  ...  |  ...  |  ...  |  ...  |  ...\n\n    Grouping in \u0026#34;Excel::Writer::XLSX\u0026#34; is achieved by setting the outline\n    level via the \u0026#34;set_row()\u0026#34; and \u0026#34;set_column()\u0026#34; worksheet methods:\n\t通过\u0026#34;set_row()\u0026#34; 和 \u0026#34;set_column()\u0026#34;方法设置分级显示，\u0026#34;Excel::Writer::XLSX\u0026#34; 能完成数据分组：\n\n        set_row( $row, $height, $format, $hidden, $level, $collapsed )\n        set_column( $first_col, $last_col, $width, $format, $hidden, $level, $collapsed )\n\n    The following example sets an outline level of 1 for rows 1 and 2\n    (zero-indexed) and columns B to G. The parameters $height and $XF are\n    assigned default values since they are undefined:\n\t下面的例子为1-2行（从0开始索引）和B-G列设置了级别为1的分级显示。参数$height 和 $XF指定了默认值，因为它们是未定义的（undefined）：\n\n        $worksheet-\u0026gt;set_row( 1, undef, undef, 0, 1 );\n        $worksheet-\u0026gt;set_row( 2, undef, undef, 0, 1 );\n        $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 0, 1 );\n\n    Excel allows up to 7 outline levels. Therefore the $level parameter\n    should be in the range \u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;.\n\tExcel允许多大7个分级显示。因此，$level参数应该在范围 \u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;。\n\n    Rows and columns can be collapsed by setting the $hidden flag for the\n    hidden rows/columns and setting the $collapsed flag for the row/column\n    that has the collapsed \u0026#34;+\u0026#34; symbol:\n\t通过为隐藏的行或列设置$hidden标记并且为带有\u0026#34;+\u0026#34;号的行或列设置$collapsed标记来折叠行或列：\n\n        $worksheet-\u0026gt;set_row( 1, undef, undef, 1, 1 );\n        $worksheet-\u0026gt;set_row( 2, undef, undef, 1, 1 );\n        $worksheet-\u0026gt;set_row( 3, undef, undef, 0, 0, 1 );          # Collapsed flag.\n\n        $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 1, 1 );\n        $worksheet-\u0026gt;set_column( \u0026#39;H:H\u0026#39;, undef, undef, 0, 0, 1 );   # Collapsed flag.\n\n    Note: Setting the $collapsed flag is particularly important for\n    compatibility with OpenOffice.org and Gnumeric.\n\t注意：设置$collapsed标记对于兼容OpenOffice.org 和电子表格特别重要。\n\n    查看\u0026#34;outline.pl\u0026#34;和\u0026#34;outline_collapsed.pl\u0026#34; 程序。\n\n    Some additional outline properties can be set via the\n    \u0026#34;outline_settings()\u0026#34; worksheet method, see above.\n\t一些额外的分级显示属性能通过\u0026#34;outline_settings()\u0026#34;工作表方法设置，查看上面的例子。\n\nDATA VALIDATION IN EXCEL Excel中的数据验证\n    Data validation is a feature of Excel which allows you to restrict the\n    data that a users enters in a cell and to display help and warning\n    messages. It also allows you to restrict input to values in a drop down\n    list.\n\t数据验证是Excel的一种功能，它允许你限制用户在单元格中输入的数据并且显示帮助和警告信息。它也允许你在一个下拉列表中限制输入值。\n\n    A typical use case might be to restrict data in a cell to integer values\n    in a certain range, to provide a help message to indicate the required\n    value and to issue a warning if the input data doesn\u0026#39;t meet the stated\n    criteria. In Excel::Writer::XLSX we could do that as follows:\n\t一个典型的使用实例可能是在一定范围内将单元格中的数据限制为整数。如果输入的数据不符合标准，它会提供帮助信息指定需要的值或发出一个警告。在Excel::Writer::XLSX中我们可以使用如下的方法：\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;B3\u0026#39;,\n            {\n                validate        =\u0026gt; \u0026#39;integer\u0026#39;,\n                criteria        =\u0026gt; \u0026#39;between\u0026#39;,\n                minimum         =\u0026gt; 1,\n                maximum         =\u0026gt; 100,\n                input_title     =\u0026gt; \u0026#39;Input an integer:\u0026#39;,\n                input_message   =\u0026gt; \u0026#39;Between 1 and 100\u0026#39;,\n                error_message   =\u0026gt; \u0026#39;Sorry, try again.\u0026#39;,\n            });\n\n   \n    The following sections describe how to use the \u0026#34;data_validation()\u0026#34;\n    method and its various options.\n\t下面的章节描述了怎样使用\u0026#34;data_validation()\u0026#34;方法和它的各种选项。\n\n  data_validation( $row, $col, { parameter =\u0026gt; \u0026#39;value\u0026#39;, ... } )\n    The \u0026#34;data_validation()\u0026#34; method is used to construct an Excel data\n    validation.\n\t\u0026#34;data_validation()\u0026#34;方法用于构建一个Excel数据验证。\n\n    It can be applied to a single cell or a range of cells. You can pass 3\n    parameters such as \u0026#34;($row, $col, {...})\u0026#34; or 5 parameters such as\n    \u0026#34;($first_row, $first_col, $last_row, $last_col, {...})\u0026#34;. You can also\n    use \u0026#34;A1\u0026#34; style notation. 例如，:\n\t它能用于单个单元格或一定范围内的单元格。你可以传递3个参数诸如\u0026#34;($row, $col, {...})\u0026#34;或5个参数诸如 \u0026#34;($first_row, $first_col, $last_row, $last_col, {...})\u0026#34;。你也可以使用A1风格的表示法，例如：\n\n        $worksheet-\u0026gt;data_validation( 0, 0,       {...} );\n        $worksheet-\u0026gt;data_validation( 0, 0, 4, 1, {...} );\n\n        # Which are the same as:\n\n        $worksheet-\u0026gt;data_validation( \u0026#39;A1\u0026#39;,       {...} );\n        $worksheet-\u0026gt;data_validation( \u0026#39;A1:B5\u0026#39;,    {...} );\n\n     \n    The last parameter in \u0026#34;data_validation()\u0026#34; must be a hash ref containing\n    the parameters that describe the type and style of the data validation.\n    The allowable parameters are:\n\t\u0026#34;data_validation()\u0026#34;中的最后一个参数必须是一个包含描述数据验证的类型和风格参数的散列引用。允许的参数是：\n        validate\n        criteria\n        value | minimum | source\n        maximum\n        ignore_blank\n        dropdown\n\n        input_title\n        input_message\n        show_input\n\n        error_title\n        error_message\n        error_type\n        show_error\n\n    These parameters are explained in the following sections. Most of the\n    parameters are optional, however, you will generally require the three\n    main options \u0026#34;validate\u0026#34;, \u0026#34;criteria\u0026#34; and \u0026#34;value\u0026#34;.\n\t这些参数在下面的章节中有描述。大多数参数是可选的，然而，你通常需要三个主要选项\u0026#34;validate\u0026#34;, \u0026#34;criteria\u0026#34; 和 \u0026#34;value\u0026#34;.\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;B3\u0026#39;,\n            {\n                validate =\u0026gt; \u0026#39;integer\u0026#39;,\n                criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n                value    =\u0026gt; 100,\n            });\n\n     \u0026#34;data_validation\u0026#34; 方法返回:\n\n         0 成功.\n        -1 参数个数不足.\n        -2 行或列超界.\n        -3 参数或值不正确.\n\n  validate\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n\t此参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n\n\t\u0026#34;validate\u0026#34;参数用于设置你想验证的数据类型。该参数总是需要的并且没有默认值。\n\t允许的值是：\n\n        any\n        integer\n        decimal\n        list\n        date\n        time\n        length\n        custom\n\n    *   any is used to specify that the type of data is unrestricted. This\n        is the same as not applying a data validation. It is only provided\n        for completeness and isn\u0026#39;t used very often in the context of\n        Excel::Writer::XLSX.\n\t\tany用于指定数据类型是无限制的。这与不使用数据验证相同。它只为完整性提供并且不会在Excel::Writer::XLSX内容中经常使用。\n\n    *   integer restricts the cell to integer values. Excel refers to this\n        as \u0026#39;whole number\u0026#39;.\n\t\tinteger限制单元格的值为整数。Excel将此引用为整数。\n\n            validate =\u0026gt; \u0026#39;integer\u0026#39;,\n            criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n            value    =\u0026gt; 100,\n\n    *   decimal限制单元格的值为十进制值。\n\n            validate =\u0026gt; \u0026#39;decimal\u0026#39;,\n            criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n            value    =\u0026gt; 38.6,\n\n    *   list restricts the cell to a set of user specified values. These can\n        be passed in an array ref or as a cell range (named ranges aren\u0026#39;t\n        currently supported):\n\t\tlist限制单元格的值为一列用户指定的值。这些值能在数组引用或单元格范围（目前不支持命名范围）中传递：\n\n            validate =\u0026gt; \u0026#39;list\u0026#39;,\n            value    =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;],\n            # Or like this:\n            value    =\u0026gt; \u0026#39;B1:B3\u0026#39;,\n\n        Excel requires that range references are only to cells on the same\n        worksheet.\n\t\tExcel要求值域引用只是针对同一工作表的单元格的。\n\n    *   date restricts the cell to date values. Dates in Excel are expressed\n        as integer values but you can also pass an ISO860 style string as\n        used in \u0026#34;write_date_time()\u0026#34;. See also \u0026#34;DATES AND TIME IN EXCEL\u0026#34; for\n        more information about working with Excel\u0026#39;s dates.\n\t\tdate限制单元格的值为日期。Excel中的日期被计算为整数，但你也可以像\u0026#34;write_date_time()\u0026#34;使用的那样，传递一个ISO860风格的字符串。\n            validate =\u0026gt; \u0026#39;date\u0026#39;,\n            criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n            value    =\u0026gt; 39653, # 24 July 2008\n            # Or like this:\n            value    =\u0026gt; \u0026#39;2008-07-24T\u0026#39;,\n\n    *   time restricts the cell to time values. Times in Excel are expressed\n        as decimal values but you can also pass an ISO860 style string as\n        used in \u0026#34;write_date_time()\u0026#34;. See also \u0026#34;DATES AND TIME IN EXCEL\u0026#34; for\n        more information about working with Excel\u0026#39;s times.\n\t\ttime限制单元格的值为时间。Excel中的时间被解释为十进制值，但你也可以像\u0026#34;write_date_time()\u0026#34;使用的那样，传递一个ISO860风格的字符串。\n\n            validate =\u0026gt; \u0026#39;time\u0026#39;,\n            criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n            value    =\u0026gt; 0.5, # Noon\n            # Or like this:\n            value    =\u0026gt; \u0026#39;T12:00:00\u0026#39;,\n\n    *   length restricts the cell data based on an integer string length.\n        Excel refers to this as \u0026#39;Text length\u0026#39;.\n\t\tlength根据一个整数字符串长度限制单元格数据。Excel将该值引用为文本长度。\n\n            validate =\u0026gt; \u0026#39;length\u0026#39;,\n            criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n            value    =\u0026gt; 10,\n\n    *   custom restricts the cell based on an external Excel formula that\n        returns a \u0026#34;TRUE/FALSE\u0026#34; value.\n\t\tcustom根据返回“TRUE/FALSE”值的外部Excel公式限制单元格。\n            validate =\u0026gt; \u0026#39;custom\u0026#39;,\n            value    =\u0026gt; \u0026#39;=IF(A10\u0026gt;B10,TRUE,FALSE)\u0026#39;,\n\n  criteria\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n    该参数在一个散列引用中传递到\u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;criteria\u0026#34; parameter is used to set the criteria by which the data\n    in the cell is validated. It is almost always required except for the\n    \u0026#34;list\u0026#34; and \u0026#34;custom\u0026#34; validate options. It has no default value. Allowable\n    values are:\n\t\u0026#34;criteria\u0026#34;参数用于设置单元格中验证后的数据设置的标准。他几乎总是需要，除了 \u0026#34;list\u0026#34; 和 \u0026#34;custom\u0026#34;验证选项。它没有默认值。允许的值为：\n\n        \u0026#39;between\u0026#39;\n        \u0026#39;not between\u0026#39;\n        \u0026#39;equal to\u0026#39;                  |  \u0026#39;==\u0026#39;  |  \u0026#39;=\u0026#39;\n        \u0026#39;not equal to\u0026#39;              |  \u0026#39;!=\u0026#39;  |  \u0026#39;\u0026lt;\u0026gt;\u0026#39;\n        \u0026#39;greater than\u0026#39;              |  \u0026#39;\u0026gt;\u0026#39;\n        \u0026#39;less than\u0026#39;                 |  \u0026#39;\u0026lt;\u0026#39;\n        \u0026#39;greater than or equal to\u0026#39;  |  \u0026#39;\u0026gt;=\u0026#39;\n        \u0026#39;less than or equal to\u0026#39;     |  \u0026#39;\u0026lt;=\u0026#39;\n\n    You can either use Excel\u0026#39;s textual description strings, in the first\n    column above, or the more common symbolic alternatives. The following\n    are equivalent:\n\t你也可以使用Excel的文本描述字符串，在上面的第一列中，或更普通的备选符号。下面的是等价的：\n\n        validate =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria =\u0026gt; \u0026#39;greater than\u0026#39;,\n        value    =\u0026gt; 100,\n\n        validate =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n        value    =\u0026gt; 100,\n\n    The \u0026#34;list\u0026#34; and \u0026#34;custom\u0026#34; validate options don\u0026#39;t require a \u0026#34;criteria\u0026#34;. If\n    you specify one it will be ignored.\n\t\u0026#34;list\u0026#34; 和 \u0026#34;custom\u0026#34;有效性选项不需要以个标准。如果你指定一个它会被忽略。\n\n        validate =\u0026gt; \u0026#39;list\u0026#39;,\n        value    =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;],\n\n        validate =\u0026gt; \u0026#39;custom\u0026#39;,\n        value    =\u0026gt; \u0026#39;=IF(A10\u0026gt;B10,TRUE,FALSE)\u0026#39;,\n\n  value | minimum | source\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n    该参数在散列引用中被传递给 \u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;value\u0026#34; parameter is used to set the limiting value to which the\n    \u0026#34;criteria\u0026#34; is applied. It is always required and it has no default\n    value. You can also use the synonyms \u0026#34;minimum\u0026#34; or \u0026#34;source\u0026#34; to make the\n    validation a little clearer and closer to Excel\u0026#39;s description of the\n    parameter:\n\t\u0026#34;value\u0026#34;参数用于对应用了\u0026#34;criteria\u0026#34;的值设置极限值。它总是被需要，并且它没有默认值。你也可以使用同义词 \u0026#34;minimum\u0026#34;或\u0026#34;source\u0026#34;让有效性检验更清晰并且与Excel的参数描述更相近：\n\n        # Use \u0026#39;value\u0026#39;\n        validate =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n        value    =\u0026gt; 100,\n\n        # Use \u0026#39;minimum\u0026#39;\n        validate =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria =\u0026gt; \u0026#39;between\u0026#39;,\n        minimum  =\u0026gt; 1,\n        maximum  =\u0026gt; 100,\n\n        # Use \u0026#39;source\u0026#39;\n        validate =\u0026gt; \u0026#39;list\u0026#39;,\n        source   =\u0026gt; \u0026#39;$B$1:$B$3\u0026#39;,\n\n  maximum\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n    该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;maximum\u0026#34; parameter is used to set the upper limiting value when the\n    \u0026#34;criteria\u0026#34; is either \u0026#39;between\u0026#39; or \u0026#39;not between\u0026#39;:\n\t\n\t当\u0026#34;criteria\u0026#34;的值是 \u0026#39;between\u0026#39; 或 \u0026#39;not between\u0026#39;时，\u0026#34;maximum\u0026#34;参数用于设置值的上限。\n\n        validate =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria =\u0026gt; \u0026#39;between\u0026#39;,\n        minimum  =\u0026gt; 1,\n        maximum  =\u0026gt; 100,\n\n  ignore_blank\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n    该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;ignore_blank\u0026#34; parameter is used to toggle on and off the \u0026#39;Ignore\n    blank\u0026#39; option in the Excel data validation dialog. When the option is on\n    the data validation is not applied to blank data in the cell. It is on\n    by default.\n\t\n\t\u0026#34;ignore_blank\u0026#34;参数用于在Excel的数据有效性检查对话框中开启或关闭\u0026#39;Ignore blank\u0026#39;选项。当该选项开启时，数据有效性检验不会应用到单元格中的空白数据上。默认它是开启的。\n\n        ignore_blank =\u0026gt; 0,  # Turn the option off\n\n  dropdown\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n    该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;dropdown\u0026#34; parameter is used to toggle on and off the \u0026#39;In-cell\n    dropdown\u0026#39; option in the Excel data validation dialog. When the option is\n    on a dropdown list will be shown for \u0026#34;list\u0026#34; validations. It is on by\n    default.\n\t\n\t\u0026#34;dropdown\u0026#34;参数用于在Excel的数据有效性对话框中开启或关闭\u0026#39;In-cell dropdown\u0026#39;选项。当开启该选项时，会因为列表验证而出现下拉列表。默认它是开启的。？\n\n        dropdown =\u0026gt; 0,      # Turn the option off\n\n  input_title\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n    该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;input_title\u0026#34; parameter is used to set the title of the input\n    message that is displayed when a cell is entered. It has no default\n    value and is only displayed if the input message is displayed. See the\n    \u0026#34;input_message\u0026#34; parameter below.\n\t\u0026#34;input_title\u0026#34;参数用于设置输入信息的标题，它没有默认值，并且只有当输入消息显示时才出现。查看下面的 \u0026#34;input_message\u0026#34; 参数。\n\n        input_title   =\u0026gt; \u0026#39;This is the input title\u0026#39;,\n\n    The maximum title length is 32 characters.\n\t最大的标题长度是32个字符。\n\n  input_message\n        该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n\n\n    The \u0026#34;input_message\u0026#34; parameter is used to set the input message that is\n    displayed when a cell is entered. It has no default value.\n\t\u0026#34;input_message\u0026#34;参数用于设置键入单元格时显示的输入消息。它没有默认值。\n\n        validate      =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria      =\u0026gt; \u0026#39;between\u0026#39;,\n        minimum       =\u0026gt; 1,\n        maximum       =\u0026gt; 100,\n        input_title   =\u0026gt; \u0026#39;Enter the applied discount:\u0026#39;,\n        input_message =\u0026gt; \u0026#39;between 1 and 100\u0026#39;,\n\n    The message can be split over several lines using newlines, \u0026#34;\\n\u0026#34; in\n    double quoted strings.\n\t消息可以使用换行分隔为几行。\u0026#34;\\n\u0026#34;在双引号字符串中。\n\n        input_message =\u0026gt; \u0026#34;This is\\na test.\n\n    The maximum message length is 255 characters.\n\t消息的最大长度是255个字符。\n\n  show_input\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n    该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;show_input\u0026#34; parameter is used to toggle on and off the \u0026#39;Show input\n    message when cell is selected\u0026#39; option in the Excel data validation\n    dialog. When the option is off an input message is not displayed even if\n    it has been set using \u0026#34;input_message\u0026#34;. It is on by default.\n\t\n\t\u0026#34;show_input\u0026#34;参数用于在Excel的数据有效性检查对话框中开启或关闭\u0026#39;Show input message when cell is selected\u0026#39;选项。当该选项关闭时，输入信息不会显示，即使它设置了\u0026#34;input_message\u0026#34;。默认它是开启的。\n        show_input =\u0026gt; 0,      # Turn the option off\n\n  error_title\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n\t该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n\n    The \u0026#34;error_title\u0026#34; parameter is used to set the title of the error\n    message that is displayed when the data validation criteria is not met.\n    The default error title is \u0026#39;Microsoft Excel\u0026#39;.\n\n        error_title   =\u0026gt; \u0026#39;Input value is not valid\u0026#39;,\n\n    The maximum title length is 32 characters.\n\t标题的最大长度是32个字符。\n\n  error_message\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n     该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n    The \u0026#34;error_message\u0026#34; parameter is used to set the error message that is\n    displayed when a cell is entered. The default error message is \u0026#34;The\n    value you entered is not valid.A user has restricted values that can\n    be entered into the cell.\u0026#34;.\n\t\n\t\u0026#34;error_message\u0026#34; 参数用于设置键入单元格时显示的输入消息。默认的错误消息是\u0026#34;The\n    value you entered is not valid.\u0026#34;。用户限制了能输入到单元格中的值。\n\n\n        validate      =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria      =\u0026gt; \u0026#39;between\u0026#39;,\n        minimum       =\u0026gt; 1,\n        maximum       =\u0026gt; 100,\n        error_title   =\u0026gt; \u0026#39;Input value is not valid\u0026#39;,\n        error_message =\u0026gt; \u0026#39;It should be an integer between 1 and 100\u0026#39;,\n\n    The message can be split over several lines using newlines, \u0026#34;\\n\u0026#34; in\n    double quoted strings.\n\t消息可以使用换行分隔为几行。\u0026#34;\\n\u0026#34;在双引号字符串中。\n\t\n\t\n\n        input_message =\u0026gt; \u0026#34;This is\\na test.\u0026#34;,\n\n    The maximum message length is 255 characters.\n\t最大的消息长度值是255个字符。\n\n  error_type\n    This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;.\n\t该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。\n\n    The \u0026#34;error_type\u0026#34; parameter is used to specify the type of error dialog\n    that is displayed. There are 3 options:\n\t\u0026#34;error_type\u0026#34;参数用于指定出现的错误对话框的类型。有3个选项：\n\n        \u0026#39;stop\u0026#39;\n        \u0026#39;warning\u0026#39;\n        \u0026#39;information\u0026#39;\n\n    默认是\u0026#39;stop\u0026#39;.\n\n  show_error\n    该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;.\n\n    The \u0026#34;show_error\u0026#34; parameter is used to toggle on and off the \u0026#39;Show error\n    alert after invalid data is entered\u0026#39; option in the Excel data validation\n    dialog. When the option is off an error message is not displayed even if\n    it has been set using \u0026#34;error_message\u0026#34;. It is on by default.\n\t\n\t\u0026#34;show_error\u0026#34;参数用于在Excel的数据有效性检验对话框中开启或关闭\u0026#39;Show error\n    alert after invalid data is entered\u0026#39;选项。当该选项关闭时，错误信息不会显示，即使它设置了\u0026#34;error_message\u0026#34;。默认它是开启的。\n\n        show_error =\u0026gt; 0,      # Turn the option off\n\n  Data Validation Examples\n    Example 1. Limiting input to an integer greater than a fixed value.\n\t例1.将输入限定为比某一固定值大的整数。\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;A1\u0026#39;,\n            {\n                validate        =\u0026gt; \u0026#39;integer\u0026#39;,\n                criteria        =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n                value           =\u0026gt; 0,\n            });\n\n    Example 2. Limiting input to an integer greater than a fixed value where\n    the value is referenced from a cell.\n   例2.将输入限定为比某一固定值大的整数，该固定值来自单元格引用。\n        $worksheet-\u0026gt;data_validation(\u0026#39;A2\u0026#39;,\n            {\n                validate        =\u0026gt; \u0026#39;integer\u0026#39;,\n                criteria        =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n                value           =\u0026gt; \u0026#39;=E3\u0026#39;,\n            });\n\n    Example 3. Limiting input to a decimal in a fixed range.\n\t例3.将输入限制为某一固定范围内的十进制值。\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;A3\u0026#39;,\n            {\n                validate        =\u0026gt; \u0026#39;decimal\u0026#39;,\n                criteria        =\u0026gt; \u0026#39;between\u0026#39;,\n                minimum         =\u0026gt; 0.1,\n                maximum         =\u0026gt; 0.5,\n            });\n\n    Example 4. Limiting input to a value in a dropdown list.\n\t例4. 将输入限制为下拉列表中的某个值。\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;A4\u0026#39;,\n            {\n                validate        =\u0026gt; \u0026#39;list\u0026#39;,\n                source          =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;],\n            });\n\n    Example 5. Limiting input to a value in a dropdown list where the list\n    is specified as a cell range.\n\t例5.将输入限制为下拉列表中的某个值，该下拉列表由单元格范围指定。\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;A5\u0026#39;,\n            {\n                validate        =\u0026gt; \u0026#39;list\u0026#39;,\n                source          =\u0026gt; \u0026#39;=$E$4:$G$4\u0026#39;,\n            });\n\n    Example 6. Limiting input to a date in a fixed range.\n\t例6.将输入限制为某一固定范围内的日期值。\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;A6\u0026#39;,\n            {\n                validate        =\u0026gt; \u0026#39;date\u0026#39;,\n                criteria        =\u0026gt; \u0026#39;between\u0026#39;,\n                minimum         =\u0026gt; \u0026#39;2008-01-01T\u0026#39;,\n                maximum         =\u0026gt; \u0026#39;2008-12-12T\u0026#39;,\n            });\n\n    Example 7. Displaying a message when the cell is selected.\n\t例7.当选中单元格时，显示提示消息。\n\n        $worksheet-\u0026gt;data_validation(\u0026#39;A7\u0026#39;,\n            {\n                validate      =\u0026gt; \u0026#39;integer\u0026#39;,\n                criteria      =\u0026gt; \u0026#39;between\u0026#39;,\n                minimum       =\u0026gt; 1,\n                maximum       =\u0026gt; 100,\n                input_title   =\u0026gt; \u0026#39;Enter an integer:\u0026#39;,\n                input_message =\u0026gt; \u0026#39;between 1 and 100\u0026#39;,\n            });\n\n    查看 \u0026#34;data_validate.pl\u0026#34;程序。\n\n EXCEL 中的条件格式\n    条件格式是Excel的一项功能，允许你根据一定的标准将一个格式应用到一个单元格或一定范围内的单元格中。\n\n\t例如，下面的标准用于在\u0026#34;conditional_format.pl\u0026#34;例子中使用红色高亮值大于或等于50的单元格：\n\n        # Write a conditional format over a range.\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;B3:K12\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;\u0026gt;=\u0026#39;,\n                value    =\u0026gt; 50,\n                format   =\u0026gt; $format1,\n            }\n        );\n\n  conditional_format( $row, $col, { parameter =\u0026gt; \u0026#39;value\u0026#39;, ... } )\n\t\u0026#34;conditional_format()\u0026#34;方法用于根据用户定义的标准将格式应用到Excel::Writer::XLSX文件中。\n\n\t它能被应用到单个单元格中或一定范围内的单元格中。你可以传递3个参数，诸如：\u0026#34;($row, $col, {...})\u0026#34; 或5个参数，诸如 \u0026#34;($first_row, $first_col, $last_row, $last_col, {...})\u0026#34;.你也可以使用A1表示法，例如：\n\n        $worksheet-\u0026gt;conditional_format( 0, 0,       {...} );\n        $worksheet-\u0026gt;conditional_format( 0, 0, 4, 1, {...} );\n\n        # Which are the same as:\n\n        $worksheet-\u0026gt;conditional_format( \u0026#39;A1\u0026#39;,       {...} );\n        $worksheet-\u0026gt;conditional_format( \u0026#39;A1:B5\u0026#39;,    {...} );\n\n     \n     \u0026#34;conditional_format()\u0026#34; 里的最后一个参数必须是一个散列引用，它包含描述数据合法性的类型和风格。主要参数有:\n\t\n\t\u0026#34;conditional_format()\u0026#34; 方法中的最后一个参数必须是一个散列引用，该引用包含了描述数据有效性的类型和样式的参数。主要的参数有：\n\n        type\n        format\n        criteria  #标准\n        value\n        minimum\n        maximum\n\n\t用于指定条件格式类型的其它参数在下面的相关章节有显示。\n\n  type\n\t该参数在散列引用中被传递给\u0026#34;conditional_format()\u0026#34;\n\n\t\u0026#34;type\u0026#34;参数用于设置你想应用的条件格式。它总是需要的，并且没有默认值。允许的\u0026#34;type\u0026#34;值和它们的有关参数是：\n\n        Type            Parameters\n        ====            ==========\n        cell            criteria\n                        value\n                        minimum\n                        maximum\n\n        date            criteria\n                        value\n                        minimum\n                        maximum\n\n        time_period     criteria\n\n        text            criteria\n                        value\n\n        average         criteria\n\n        duplicate       (none)\n\n        unique          (none)\n\n        top             criteria\n                        value\n\n        bottom          criteria\n                        value\n\n        blanks          (none)\n\n        no_blanks       (none)\n\n        errors          (none)\n\n        no_errors       (none)\n\n        2_color_scale   (none)\n\n        3_color_scale   (none)\n\n        data_bar        (none)\n\n        formula         criteria\n\n\t所有的格式类型都有\u0026#34;format\u0026#34;参数，看下面。其它类型和参数诸如图标设置会在合适的时间添加。\n\n  type =\u0026gt; \u0026#39;cell\u0026#39;\n    This is the most common conditional formatting type. It is used when a\n    format is applied to a cell based on a simple criteria. 例如，:\n\t这是最常用的条件格式类型。根据一个简单的标准，该格式类型在将格式应用到单元格中时被使用。例如：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;greater than\u0026#39;,\n                value    =\u0026gt; 5,\n                format   =\u0026gt; $red_format,\n            }\n        );\n\n    或者使用\u0026#34;between\u0026#34;标准:\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;C1:C4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;between\u0026#39;,\n                minimum  =\u0026gt; 20,\n                maximum  =\u0026gt; 30,\n                format   =\u0026gt; $green_format,\n            }\n        );\n\n  criteria # 标准\n    The \u0026#34;criteria\u0026#34; parameter is used to set the criteria by which the cell\n    data will be evaluated. It has no default value. The most common\n    criteria as applied to \u0026#34;{ type =\u0026gt; \u0026#39;cell\u0026#39; }\u0026#34; are:\n\t\u0026#34;criteria\u0026#34;参数用于设置单元格数据将被计算的标准。它没有默认值。最常用类似\u0026#34;{ type =\u0026gt; \u0026#39;cell\u0026#39; }\u0026#34;的标准有：\n\n        \u0026#39;between\u0026#39;\n        \u0026#39;not between\u0026#39;\n        \u0026#39;equal to\u0026#39;                  |  \u0026#39;==\u0026#39;  |  \u0026#39;=\u0026#39;\n        \u0026#39;not equal to\u0026#39;              |  \u0026#39;!=\u0026#39;  |  \u0026#39;\u0026lt;\u0026gt;\u0026#39;\n        \u0026#39;greater than\u0026#39;              |  \u0026#39;\u0026gt;\u0026#39;\n        \u0026#39;less than\u0026#39;                 |  \u0026#39;\u0026lt;\u0026#39;\n        \u0026#39;greater than or equal to\u0026#39;  |  \u0026#39;\u0026gt;=\u0026#39;\n        \u0026#39;less than or equal to\u0026#39;     |  \u0026#39;\u0026lt;=\u0026#39;\n\n    You can either use Excel\u0026#39;s textual description strings, in the first\n    column above, or the more common symbolic alternatives.\n\t你也可以使用Excel的描述字符串，即上面的第一列，或使用更普通的符号。\n\n    Additional criteria which are specific to other conditional format types\n    are shown in the relevant sections below.\n\t用于指定条件格式类型的其它标准在下面的相关章节有显示。\n\n  value\n    \n\t\u0026#34;value\u0026#34;通常与\u0026#34;criteria\u0026#34;参数一起使用，用于设置将被计算的单元格数据的规则。\n\n        type     =\u0026gt; \u0026#39;cell\u0026#39;,\n        criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n        value    =\u0026gt; 5\n        format   =\u0026gt; $format,\n\n\t\u0026#34;value\u0026#34;属性也可以是单元格引用。\n\n        type     =\u0026gt; \u0026#39;cell\u0026#39;,\n        criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n        value    =\u0026gt; \u0026#39;$C$1\u0026#39;,\n        format   =\u0026gt; $format,\n\n  format\n    The \u0026#34;format\u0026#34; parameter is used to specify the format that will be\n    applied to the cell when the conditional formatting criteria is set. The\n    format is created using the \u0026#34;add_format()\u0026#34; method in the same way as\n    cell formats:\n\t\n\t当条件格式标准设置后，\u0026#34;format\u0026#34;参数用于指定将被应用到单元格中的格式。该格式使用与单元格格式一样的\u0026#34;add_format()\u0026#34;方法创建：\n\n        $format = $workbook-\u0026gt;add_format( bold =\u0026gt; 1, italic =\u0026gt; 1 );\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;,\n                value    =\u0026gt; 5\n                format   =\u0026gt; $format,\n            }\n        );\n\n    The conditional format follows the same rules as in Excel: it is\n    superimposed over the existing cell format and not all font and border\n    properties can be modified. Font properties that can\u0026#39;t be modified are\n    font name, font size, superscript and subscript. The border property\n    that cannot be modified is diagonal borders.\n\t条件格式允许与Excel同样的规则：它与已经存在的单元格格式重叠，并且不是所有的字体和边框属性能被修改。不能修改的属性有字体名、字体大小、上标和下标。不能被修改的边框属性是斜线边框。\n\n    Excel specifies some default formats to be used with conditional\n    formatting. You can replicate them using the following\n    Excel::Writer::XLSX formats:\n\tExcel指定了一些与条件格式一起使用的默认格式。你可以使用下面的Excel::Writer::XLSX的格式复写它们：\n\n        # Light red fill with dark red text.\n\n        my $format1 = $workbook-\u0026gt;add_format(\n            bg_color =\u0026gt; \u0026#39;#FFC7CE\u0026#39;,\n            color    =\u0026gt; \u0026#39;#9C0006\u0026#39;,\n        );\n\n        # Light yellow fill with dark yellow text.\n\n        my $format2 = $workbook-\u0026gt;add_format(\n            bg_color =\u0026gt; \u0026#39;#FFEB9C\u0026#39;,\n            color    =\u0026gt; \u0026#39;#9C6500\u0026#39;,\n        );\n\n        # Green fill with dark green text.\n\n        my $format3 = $workbook-\u0026gt;add_format(\n            bg_color =\u0026gt; \u0026#39;#C6EFCE\u0026#39;,\n            color    =\u0026gt; \u0026#39;#006100\u0026#39;,\n        );\n\n  minimum\n    The \u0026#34;minimum\u0026#34; parameter is used to set the lower limiting value when the\n    \u0026#34;criteria\u0026#34; is either \u0026#39;between\u0026#39; or \u0026#39;not between\u0026#39;:\n\t当标准是\u0026#39;between\u0026#39; 或 \u0026#39;not between\u0026#39;时，\u0026#34;minimum\u0026#34;参数用于设置值的下限：\n\n        validate =\u0026gt; \u0026#39;integer\u0026#39;,\n        criteria =\u0026gt; \u0026#39;between\u0026#39;,\n        minimum  =\u0026gt; 1,\n        maximum  =\u0026gt; 100,\n\n  maximum\n    The \u0026#34;maximum\u0026#34; parameter is used to set the upper limiting value when the\n    \u0026#34;criteria\u0026#34; is either \u0026#39;between\u0026#39; or \u0026#39;not between\u0026#39;. See the previous\n    example.\n\t当标准是\u0026#39;between\u0026#39; 或 \u0026#39;not between\u0026#39;时，\u0026#34;maximum\u0026#34;参数用于设置值的上限。查看前一个例子：\n  type =\u0026gt; \u0026#39;date\u0026#39;\n    The \u0026#34;date\u0026#34; type is the same as \u0026#34;cell\u0026#34; type and uses the same criteria\n    and values. However it allows the \u0026#34;value\u0026#34;, \u0026#34;minimum\u0026#34; and \u0026#34;maximum\u0026#34;\n    properties to be specified in the ISO8601 \u0026#34;yyyy-mm-ddThh:mm:ss.sss\u0026#34; date\n    format which is detailed in the \u0026#34;write_date_time()\u0026#34; method.\n\t\u0026#34;date\u0026#34;类型与\u0026#34;cell\u0026#34;类型相同并使用相同的标准和值。然而，它允许 \u0026#34;value\u0026#34;, \u0026#34;minimum\u0026#34; 和 \u0026#34;maximum\u0026#34;属性指定为ISO8601 \u0026#34;yyyy-mm-ddThh:mm:ss.sss\u0026#34;日期格式，它在\u0026#34;write_date_time()\u0026#34;方法上更详细。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;date\u0026#39;,\n                criteria =\u0026gt; \u0026#39;greater than\u0026#39;,\n                value    =\u0026gt; \u0026#39;2011-01-01T\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;time_period\u0026#39;\n    The \u0026#34;time_period\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Dates Occurring\u0026#34;\n    style conditional format.\n\t\u0026#34;time_period\u0026#34; 类型用于指定Excel的\u0026#34;Dates Occurring\u0026#34;风格的条件格式。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;time_period\u0026#39;,\n                criteria =\u0026gt; \u0026#39;yesterday\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    The period is set in the \u0026#34;criteria\u0026#34; and can have one of the following\n    values:\n    周期在\u0026#34;criteria\u0026#34;中设置，并且可以是如下的值之一：\n            criteria =\u0026gt; \u0026#39;yesterday\u0026#39;,\n            criteria =\u0026gt; \u0026#39;today\u0026#39;,\n            criteria =\u0026gt; \u0026#39;last 7 days\u0026#39;,\n            criteria =\u0026gt; \u0026#39;last week\u0026#39;,\n            criteria =\u0026gt; \u0026#39;this week\u0026#39;,\n            criteria =\u0026gt; \u0026#39;next week\u0026#39;,\n            criteria =\u0026gt; \u0026#39;last month\u0026#39;,\n            criteria =\u0026gt; \u0026#39;this month\u0026#39;,\n            criteria =\u0026gt; \u0026#39;next month\u0026#39;\n\n  type =\u0026gt; \u0026#39;text\u0026#39;\n    The \u0026#34;text\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Specific Text\u0026#34; style\n    conditional format. It is used to do simple string matching using the\n    \u0026#34;criteria\u0026#34; and \u0026#34;value\u0026#34; parameters:\n\t\n\t\u0026#34;text\u0026#34;类型用于指定Excel的\u0026#34;Specific Text\u0026#34;风格的条件格式。它用于使用\u0026#34;criteria\u0026#34; 和 \u0026#34;value\u0026#34;参数做简单的字符串匹配：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;text\u0026#39;,\n                criteria =\u0026gt; \u0026#39;containing\u0026#39;,\n                value    =\u0026gt; \u0026#39;foo\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n \n    \u0026#34;criteria\u0026#34;能使用如下的值：\n        criteria =\u0026gt; \u0026#39;containing\u0026#39;,\n        criteria =\u0026gt; \u0026#39;not containing\u0026#39;,\n        criteria =\u0026gt; \u0026#39;begins with\u0026#39;,\n        criteria =\u0026gt; \u0026#39;ends with\u0026#39;,\n\n\t\u0026#34;value\u0026#34;参数可以是一个字符串或单个字符。\n\n  type =\u0026gt; \u0026#39;average\u0026#39;\n    The \u0026#34;average\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Average\u0026#34; style\n    conditional format.\n\t\u0026#34;average\u0026#34;类型用于指定Excel的\u0026#34;Average\u0026#34;风格条件格式。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;average\u0026#39;,\n                criteria =\u0026gt; \u0026#39;above\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    The type of average for the conditional format range is specified by the\n    \u0026#34;criteria\u0026#34;:\n\t条件格式范围的average类型由\u0026#34;criteria\u0026#34;指定：？\n\n        criteria =\u0026gt; \u0026#39;above\u0026#39;,\n        criteria =\u0026gt; \u0026#39;below\u0026#39;,\n        criteria =\u0026gt; \u0026#39;equal or above\u0026#39;,\n        criteria =\u0026gt; \u0026#39;equal or below\u0026#39;,\n        criteria =\u0026gt; \u0026#39;1 std dev above\u0026#39;,\n        criteria =\u0026gt; \u0026#39;1 std dev below\u0026#39;,\n        criteria =\u0026gt; \u0026#39;2 std dev above\u0026#39;,\n        criteria =\u0026gt; \u0026#39;2 std dev below\u0026#39;,\n        criteria =\u0026gt; \u0026#39;3 std dev above\u0026#39;,\n        criteria =\u0026gt; \u0026#39;3 std dev below\u0026#39;,\n\n  type =\u0026gt; \u0026#39;duplicate\u0026#39;\n    The \u0026#34;duplicate\u0026#34; type is used to highlight duplicate cells in a range:\n\t\u0026#34;duplicate\u0026#34;类型用于高亮一定范围内完全相同的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;duplicate\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;unique\u0026#39;\n    The \u0026#34;unique\u0026#34; type is used to highlight unique cells in a range:\n\t\u0026#34;unique\u0026#34;类型用于高亮一定范围内的唯一单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;unique\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;top\u0026#39;\n    The \u0026#34;top\u0026#34; type is used to specify the top \u0026#34;n\u0026#34; values by number or\n    percentage in a range:\n\t\u0026#34;top\u0026#34;类型用于使用数字或百分比指定单元格的前\u0026#34;n\u0026#34;个值：？\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;top\u0026#39;,\n                value    =\u0026gt; 10,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    The \u0026#34;criteria\u0026#34; can be used to indicate that a percentage condition is\n    required:\n\t\u0026#34;criteria\u0026#34;能用于表明需要一个百分比条件：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;top\u0026#39;,\n                value    =\u0026gt; 10,\n                criteria =\u0026gt; \u0026#39;%\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;bottom\u0026#39;\n    The \u0026#34;bottom\u0026#34; type is used to specify the bottom \u0026#34;n\u0026#34; values by number or\n    percentage in a range.\n\t\u0026#34;bottom\u0026#34;类型用于使用数字或百分比指定单元格的后“n”个值。？\n\n    It takes the same parameters as \u0026#34;top\u0026#34;, see above.\n\t它的参数与“top”一样，看上面。\n\n  type =\u0026gt; \u0026#39;blanks\u0026#39;\n    The \u0026#34;blanks\u0026#34; type is used to highlight blank cells in a range:\n\t\u0026#34;blanks\u0026#34;类型用于在一定范围内高亮空白单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;blanks\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;no_blanks\u0026#39;\n    The \u0026#34;no_blanks\u0026#34; type is used to highlight non blank cells in a range:\n\t\u0026#34;no_blanks\u0026#34;类型用于在一定范围内高亮非空白单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;no_blanks\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;errors\u0026#39;\n    The \u0026#34;errors\u0026#34; type is used to highlight error cells in a range:\n\t\u0026#34;errors\u0026#34;类型用于在一定范围内高亮有错误的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;errors\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;no_errors\u0026#39;\n    The \u0026#34;no_errors\u0026#34; type is used to highlight non error cells in a range:\n\t\u0026#34;no_errors\u0026#34;类型用于在一定范围内高亮没有错误的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;no_errors\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n  type =\u0026gt; \u0026#39;2_color_scale\u0026#39;\n    The \u0026#34;2_color_scale\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;2 Color Scale\u0026#34;\n    style conditional format.\n\t\u0026#34;2_color_scale\u0026#34;类型用于指定Excel的\u0026#34;2 Color Scale\u0026#34;风格的条件格式。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A12\u0026#39;,\n            {\n                type  =\u0026gt; \u0026#39;2_color_scale\u0026#39;,\n            }\n        );\n\n    At the moment only the default colors and properties can be used. These\n    will be extended in time.\n\t现在只能使用默认的颜色和属性。将来会及时进行扩展。\n\n  type =\u0026gt; \u0026#39;3_color_scale\u0026#39;\n    The \u0026#34;3_color_scale\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;3 Color Scale\u0026#34;\n    style conditional format.\n\t\n    \u0026#34;3_color_scale\u0026#34;类型用于指定Excel的\u0026#34;3 Color Scale\u0026#34;风格的条件格式。\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A12\u0026#39;,\n            {\n                type  =\u0026gt; \u0026#39;3_color_scale\u0026#39;,\n            }\n        );\n\n    At the moment only the default colors and properties can be used. These\n    will be extended in time.\n\t\n\t现在只能使用默认的颜色和属性。将来会及时进行扩展。\n\n  type =\u0026gt; \u0026#39;data_bar\u0026#39;\n    The \u0026#34;data_bar\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Data Bar\u0026#34; style\n    conditional format.\n    \u0026#34;data_bar\u0026#34;类型用于指定Excel的\u0026#34;data_bar\u0026#34;风格的条件格式。\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A12\u0026#39;,\n            {\n                type  =\u0026gt; \u0026#39;data_bar\u0026#39;,\n            }\n        );\n\n    At the moment only the default colors and properties can be used. These\n    will be extended in time.\n    现在只能使用默认的颜色和属性。将来会及时进行扩展。\n  type =\u0026gt; \u0026#39;formula\u0026#39;\n    The \u0026#34;formula\u0026#34; type is used to specify a conditional format based on a\n    user defined formula:\n\t\u0026#34;formula\u0026#34;类型用于根据用户定义的公式指定一个条件格式：\n\n    $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;formula\u0026#39;,\n    criteria =\u0026gt; \u0026#39;=$A$1 \u0026gt; 5\u0026#39;, format =\u0026gt; $format, } );\n\n    The formula is specified in the \u0026#34;criteria\u0026#34;.\n\t公式在\u0026#34;criteria\u0026#34;中指定。\n\n  Conditional Formatting Examples\n  条件格式例子\n    Example 1. Highlight cells greater than or equal to an integer value.\n\t例1.高亮值大于或等于某个整数值的单元格。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;greater than\u0026#39;,\n                value    =\u0026gt; 5,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 2. Highlight cells greater than or equal to a value in a\n    reference cell.\n\t例2.高亮值大于或等于某个值的引用单元格。\n\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;greater than\u0026#39;,\n                value    =\u0026gt; \u0026#39;$H$1\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 3. Highlight cells greater than a certain date:\n\t例3.高亮其值比某一确定日期大的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;date\u0026#39;,\n                criteria =\u0026gt; \u0026#39;greater than\u0026#39;,\n                value    =\u0026gt; \u0026#39;2011-01-01T\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 4. Highlight cells with a date in the last seven days:\n\t例4.高亮含有最后7天日期的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;time_period\u0026#39;,\n                criteria =\u0026gt; \u0026#39;last 7 days\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 5. Highlight cells with strings starting with the letter \u0026#34;b\u0026#34;:\n\t例5.高亮字符串中以字符\u0026#34;b\u0026#34;开头的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;text\u0026#39;,\n                criteria =\u0026gt; \u0026#39;begins with\u0026#39;,\n                value    =\u0026gt; \u0026#39;b\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 6. Highlight cells that are 1 std deviation above the average\n    for the range:\n\t例6.高亮一定范围内，高亮标准差比平均数大1的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;average\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 7. Highlight duplicate cells in a range:\n\t例7.高亮一定范围内完全相同的单元格：\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;duplicate\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 8. Highlight unique cells in a range.\n\t例8.高亮在一定范围内唯一的单元格。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;unique\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 9. Highlight the top 10 cells.\n\t例9.高亮头10个单元格。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;top\u0026#39;,\n                value    =\u0026gt; 10,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    Example 10. Highlight blank cells.\n\t例10.高亮空白单元格。\n\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;blanks\u0026#39;,\n                format   =\u0026gt; $format,\n            }\n        );\n\n    也请查看 \u0026#34;conditional_format.pl\u0026#34;程序。\n\n   Excel中的公式和函数\n  Introduction 介绍\n  \n\t下面是Excel和Excel::Writer::XLSX中公式和函数的简明介绍。\n\n\t公式是以一个等号开始的字符串：\n\n        \u0026#39;=A1+B1\u0026#39;\n        \u0026#39;=AVERAGE(1, 2, 3)\u0026#39;\n\n    The formula can contain numbers, strings, boolean values, cell\n    references, cell ranges and functions. Named ranges are not supported.\n    Formulas should be written as they appear in Excel, that is cells and\n    functions must be in uppercase.\n\t公式可以包含数字、字符串、布尔值、单元格引用、单元格值域和函数。不支持命名值域。公式应该像在Excel中那样写入，即单元格和函数必须是大写的。\n\n    Cells in Excel are referenced using the A1 notation system where the\n    column is designated by a letter and the row by a number. Columns range\n    from A to XFD i.e. 0 to 16384, rows range from 1 to 1048576. \n\t单元格使用A1表示法系统引用，即用字母标示列，数字标示行。列的范围是从A到XFD或0..16384；行的范围是从1到1048576.例如：\n\n        use Excel::Writer::XLSX::Utility;\n\n        ( $row, $col ) = xl_cell_to_rowcol( \u0026#39;C2\u0026#39; );    # (1, 2)\n        $str = xl_rowcol_to_cell( 1, 2 );              # C2\n\n    The Excel \u0026#34;$\u0026#34; notation in cell references is also supported. This allows\n    you to specify whether a row or column is relative or absolute. This\n    only has an effect if the cell is copied. The following examples show\n    relative and absolute values.\n\t在Excel里，也支持单元格引用的\u0026#34;$\u0026#34;表示法。这允许你指定行或列是否是相对引用或绝对应用。这只有在复制单元格时有作用。下面的例子显示了相对和绝对值：\n\n        \u0026#39;=A1\u0026#39;   # 列和行是相对的\n        \u0026#39;=$A1\u0026#39;  # 列式绝对的，行是相对的\n        \u0026#39;=A$1\u0026#39;  # 列是相对的，行是绝对的\n        \u0026#39;=$A$1\u0026#39; # 列和行是绝对的\n\n\t公式也能引用当前工作簿中其它工作表中的单元格，例如：\n\n        \u0026#39;=Sheet2!A1\u0026#39;\n        \u0026#39;=Sheet2!A1:A5\u0026#39;\n        \u0026#39;=Sheet2:Sheet3!A1\u0026#39;\n        \u0026#39;=Sheet2:Sheet3!A1:A5\u0026#39;\n        q{=\u0026#39;Test Data\u0026#39;!A1}\n        q{=\u0026#39;Test Data1:Test Data2\u0026#39;!A1}\n\n    The sheet reference and the cell reference are separated by \u0026#34;!\u0026#34; the\n    exclamation mark symbol. If worksheet names contain spaces, commas or\n    parentheses then Excel requires that the name is enclosed in single\n    quotes as shown in the last two examples above. In order to avoid using\n    a lot of escape characters you can use the quote operator \u0026#34;q{}\u0026#34; to\n    protect the quotes. See \u0026#34;perlop\u0026#34; in the main Perl documentation. Only\n    valid sheet names that have been added using the \u0026#34;add_worksheet()\u0026#34;\n    method can be used in formulas. You cannot reference external workbooks.\n\t工作表引用和单元格引用被感叹号分离。如果工作表名含有空格、逗号或括号，则Excel要求使用单引号将名字引起来，就像上面的最后2个例子一样。  \n\t\n    为避免使用太多转义字符，你可以使用引起操作符\u0026#34;q{}\u0026#34;保护引号。只有使用\u0026#34;add_worksheet()\u0026#34;方法添加的合法工作表名才能被用于公式。你不能引用外部工作簿。\n\t\n    The following table lists the operators that are available in Excel\u0026#39;s\n    formulas. The majority of the operators are the same as Perl\u0026#39;s,\n    differences are indicated:\n\t\n\t下面的表列出了在Excel公式中可用的操作符。其中大多数操作符与Perl中的操作符相同，不同之处也被指出来了：\n\n        算数操作符:\n        =====================\n        操作符    含义                      例子\n           +      Addition                  1+2\n           -      Subtraction               2-1\n           *      Multiplication            2*3\n           /      Division                  1/4\n           ^      Exponentiation            2^3      # 等价于 **\n           -      Unary minus               -(1+2)   # 还不支持\n           %      Percent (Not modulus)     13%      # 不支持, [1]\n\n\n        比较操作符:\n        =====================\n        Operator  Meaning                   Example\n            =     Equal to                  A1 =  B1 #等价于==\n            \u0026lt;\u0026gt;    Not equal to              A1 \u0026lt;\u0026gt; B1 #等价于!=\n            \u0026gt;     Greater than              A1 \u0026gt;  B1\n            \u0026lt;     Less than                 A1 \u0026lt;  B1\n            \u0026gt;=    Greater than or equal to  A1 \u0026gt;= B1\n            \u0026lt;=    Less than or equal to     A1 \u0026lt;= B1\n\n\n        字符串操作符:\n        ================\n        Operator  Meaning                   Example\n            \u0026amp;     Concatenation             \u0026#34;Hello \u0026#34; \u0026amp; \u0026#34;World!\u0026#34; # [2]\n\n\n        Reference operators:\n        ====================\n        Operator  Meaning                   Example\n            :     Range operator            A1:A4               # [3]\n            ,     Union operator            SUM(1, 2+2, B3)     # [4]\n\n\n        注意:\n\t\t[1]:You can get a percentage with formatting and modulus with MOD().\n        [1]: 你可以使用格式化得到一个百分数，使用MOD()得到一个模。\n\t\t[2]: 在Perl中与(\u0026#34;Hello \u0026#34; . \u0026#34;World!\u0026#34;)等价。\n\t\t[3]: 该范围等价于单元格 A1, A2, A3和 A4.\n        [4]: 逗号与Perl中的列表操作符行为相似。\n\n    The range and comma operators can have different symbols in non-English\n    versions of Excel. These will be supported in a later version of\n    Excel::Writer::XLSX. European users of Excel take note:\n\t范围和逗号操作符在非英语版本的Excel中有不同的符号。这些会在以后版本的Excel::Writer::XLSX中支持。欧洲的Excel用户注意：\n\n        $worksheet-\u0026gt;write(\u0026#39;A1\u0026#39;, \u0026#39;=SUM(1; 2; 3)\u0026#39;); # Wrong!!\n        $worksheet-\u0026gt;write(\u0026#39;A1\u0026#39;, \u0026#39;=SUM(1, 2, 3)\u0026#39;); # Okay\n\n   \n    If your formula doesn\u0026#39;t work in Excel::Writer::XLSX try the following:\n\t如果你的公式在Excel::Writer::XLSX中不起作用，尝试下面的：\n\n        1. Verify that the formula works in Excel (or Gnumeric or OpenOffice.org).\n\t\t1.检查公式在Excel中有效\n        2. Ensure that cell references and formula names are in uppercase.\n\t\t2.确保单元格引用和公式名字是大写的。\n        3. Ensure that you are using \u0026#39;:\u0026#39; as the range operator, A1:A4.\n\t\t3.确保你使用\u0026#39;:\u0026#39;作为范围操作符，A1:A4.\n        4. Ensure that you are using \u0026#39;,\u0026#39; as the union operator, SUM(1,2,3).\n\t\t4.确保你使用\u0026#39;,\u0026#39;作为并集操作符，SUM(1,2,3).\n        5. Ensure that the function is in the above table.\n\t\t5.确保函数是上表中出现的函数。\n\n   \n\nEXAMPLES 例子\n    查看 Excel::Writer::XLSX::Examples 获取完整的示例清单.\n\n  例1\n    The following example shows some of the basic features of\n    Excel::Writer::XLSX.\n\t下面的例子显示了 Excel::Writer::XLSX的一些基本特征。\n\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        # 创建一个叫simple.xlsx的新工作簿并添加一张工作表\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;simple.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n\n        # The general syntax is write($row, $column, $token). Note that row and\n        # column are zero indexed\n\n        # 写入一些文本\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hi Excel!\u0026#39; );\n\n\n        # Write some numbers\n        $worksheet-\u0026gt;write( 2, 0, 1 );\n        $worksheet-\u0026gt;write( 3, 0, 1.00000 );\n        $worksheet-\u0026gt;write( 4, 0, 2.00001 );\n        $worksheet-\u0026gt;write( 5, 0, 3.14159 );\n\n\n        # Write some formulas\n        $worksheet-\u0026gt;write( 7, 0, \u0026#39;=A3 + A6\u0026#39; );\n        $worksheet-\u0026gt;write( 8, 0, \u0026#39;=IF(A5\u0026gt;3,\u0026#34;Yes\u0026#34;, \u0026#34;No\u0026#34;)\u0026#39; );\n\n\n        # 写入一个超链接\n        $worksheet-\u0026gt;write( 10, 0, \u0026#39;http://www.perl.com/\u0026#39; );\n\n  例2\n    The following is a general example which demonstrates some features of\n    working with multiple worksheets.\n\t下面是一些普通的例子，它们说明了一些使用多张工作表的特性。\n\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        # 创建一个新的Excel工作簿\n        my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;regions.xlsx\u0026#39; );\n\n        # 添加一些工作表\n        my $north = $workbook-\u0026gt;add_worksheet( \u0026#39;North\u0026#39; );\n        my $south = $workbook-\u0026gt;add_worksheet( \u0026#39;South\u0026#39; );\n        my $east  = $workbook-\u0026gt;add_worksheet( \u0026#39;East\u0026#39; );\n        my $west  = $workbook-\u0026gt;add_worksheet( \u0026#39;West\u0026#39; );\n\n        # 添加一个格式\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_bold();\n        $format-\u0026gt;set_color( \u0026#39;blue\u0026#39; );\n\n        #给每张工作表添加一个标题\n        for my $worksheet ( $workbook-\u0026gt;sheets() ) {\n            $worksheet-\u0026gt;write( 0, 0, \u0026#39;Sales\u0026#39;, $format );\n        }\n\n        # 写入一些数据\n        $north-\u0026gt;write( 0, 1, 200000 );\n        $south-\u0026gt;write( 0, 1, 100000 );\n        $east-\u0026gt;write( 0, 1, 150000 );\n        $west-\u0026gt;write( 0, 1, 100000 );\n\n        # 设置活动工作表\n        $south-\u0026gt;activate();\n\n        # 设置第一列的宽度\n        $south-\u0026gt;set_column( 0, 0, 20 );\n\n        # 设置活动单元格\n        $south-\u0026gt;set_selection( 0, 1 );\n\n  例3\n    Example of how to add conditional formatting to an Excel::Writer::XLSX\n    file. The example below highlights cells that have a value greater than\n    or equal to 50 in red and cells below that value in green.\n\t下面是怎样向一个Excel::Writer::XLSX格式的文件添加条件格式的例子。下面的例子使用红色高亮值大于或等于50的单元格，使用绿色高亮值小于50的单元格。\n\n        #!/usr/bin/perl\n\n        use strict;\n        use warnings;\n        use Excel::Writer::XLSX;\n\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;conditional_format.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n\n\t\t#下面的例子使用红色高亮值大于或等于50的单元格，使用绿色高亮值小于50的单元格\n\t\t\n        # Light red fill with dark red text.\n\t\t#使用暗红色文本进行淡红色填充？\n        my $format1 = $workbook-\u0026gt;add_format(\n            bg_color =\u0026gt; \u0026#39;#FFC7CE\u0026#39;,\n            color    =\u0026gt; \u0026#39;#9C0006\u0026#39;,\n\n        );\n\n        # Green fill with dark green text.\n\t\t#使用暗绿色文本进行绿色填充\n        my $format2 = $workbook-\u0026gt;add_format(\n            bg_color =\u0026gt; \u0026#39;#C6EFCE\u0026#39;,\n            color    =\u0026gt; \u0026#39;#006100\u0026#39;,\n\n        );\n\n        # Some sample data to run the conditional formatting against.\n\t\t#一些简单的用于运行条件格式的数据\n        my $data = [\n            [ 34, 72,  38, 30, 75, 48, 75, 66, 84, 86 ],\n            [ 6,  24,  1,  84, 54, 62, 60, 3,  26, 59 ],\n            [ 28, 79,  97, 13, 85, 93, 93, 22, 5,  14 ],\n            [ 27, 71,  40, 17, 18, 79, 90, 93, 29, 47 ],\n            [ 88, 25,  33, 23, 67, 1,  59, 79, 47, 36 ],\n            [ 24, 100, 20, 88, 29, 33, 38, 54, 54, 88 ],\n            [ 6,  57,  88, 28, 10, 26, 37, 7,  41, 48 ],\n            [ 52, 78,  1,  96, 26, 45, 47, 33, 96, 36 ],\n            [ 60, 54,  81, 66, 81, 90, 80, 93, 12, 55 ],\n            [ 70, 5,   46, 14, 71, 19, 66, 36, 41, 21 ],\n        ];\n\n        my $caption = \u0026#39;Cells with values \u0026gt;= 50 are in light red. \u0026#39;\n          . \u0026#39;Values \u0026lt; 50 are in light green\u0026#39;;\n\n        # 写入数据.\n        $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, $caption );\n        $worksheet-\u0026gt;write_col( \u0026#39;B3\u0026#39;, $data );\n\n        # 在一定单元格范围内写入条件格式.\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;B3:K12\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;\u0026gt;=\u0026#39;,\n                value    =\u0026gt; 50,\n                format   =\u0026gt; $format1,\n            }\n        );\n\n        # 在同一单元格范围内写入另外一个条件格式\n        $worksheet-\u0026gt;conditional_formatting( \u0026#39;B3:K12\u0026#39;,\n            {\n                type     =\u0026gt; \u0026#39;cell\u0026#39;,\n                criteria =\u0026gt; \u0026#39;\u0026lt;\u0026#39;,\n                value    =\u0026gt; 50,\n                format   =\u0026gt; $format2,\n            }\n        );\n\n  Example 4\n\t下面程序是使用函数的一个简单的例子：\n\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        # 创建一个新的工作簿并添加一张工作表\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;stats.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet( \u0026#39;Test data\u0026#39; );\n\n        # 为第一列设置列宽为\n        $worksheet-\u0026gt;set_column( 0, 0, 20 );\n\n\n        # 给标题创建一个格式\n        my $format = $workbook-\u0026gt;add_format();\n        $format-\u0026gt;set_bold();\n\n\n        # 写入抽样数据\n        $worksheet-\u0026gt;write( 0, 0, \u0026#39;Sample\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 0, 1, 1 );\n        $worksheet-\u0026gt;write( 0, 2, 2 );\n        $worksheet-\u0026gt;write( 0, 3, 3 );\n        $worksheet-\u0026gt;write( 0, 4, 4 );\n        $worksheet-\u0026gt;write( 0, 5, 5 );\n        $worksheet-\u0026gt;write( 0, 6, 6 );\n        $worksheet-\u0026gt;write( 0, 7, 7 );\n        $worksheet-\u0026gt;write( 0, 8, 8 );\n\n        $worksheet-\u0026gt;write( 1, 0, \u0026#39;Length\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 1, 1, 25.4 );\n        $worksheet-\u0026gt;write( 1, 2, 25.4 );\n        $worksheet-\u0026gt;write( 1, 3, 24.8 );\n        $worksheet-\u0026gt;write( 1, 4, 25.0 );\n        $worksheet-\u0026gt;write( 1, 5, 25.3 );\n        $worksheet-\u0026gt;write( 1, 6, 24.9 );\n        $worksheet-\u0026gt;write( 1, 7, 25.2 );\n        $worksheet-\u0026gt;write( 1, 8, 24.8 );\n\n        # 写入一些统计函数\n        $worksheet-\u0026gt;write( 4, 0, \u0026#39;Count\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 4, 1, \u0026#39;=COUNT(B1:I1)\u0026#39; );\n\n        $worksheet-\u0026gt;write( 5, 0, \u0026#39;Sum\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 5, 1, \u0026#39;=SUM(B2:I2)\u0026#39; );\n\n        $worksheet-\u0026gt;write( 6, 0, \u0026#39;Average\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 6, 1, \u0026#39;=AVERAGE(B2:I2)\u0026#39; );\n\n        $worksheet-\u0026gt;write( 7, 0, \u0026#39;Min\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 7, 1, \u0026#39;=MIN(B2:I2)\u0026#39; );\n\n        $worksheet-\u0026gt;write( 8, 0, \u0026#39;Max\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 8, 1, \u0026#39;=MAX(B2:I2)\u0026#39; );\n\n        $worksheet-\u0026gt;write( 9, 0, \u0026#39;Standard Deviation\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 9, 1, \u0026#39;=STDEV(B2:I2)\u0026#39; );\n\n        $worksheet-\u0026gt;write( 10, 0, \u0026#39;Kurtosis\u0026#39;, $format );\n        $worksheet-\u0026gt;write( 10, 1, \u0026#39;=KURT(B2:I2)\u0026#39; );\n\n  Example 5\n    下面这个例子将一个使用tab字符分隔的叫做“tab.txt”的文件转换为一个叫做\u0026#34;tab.xlsx\u0026#34;的Excel文件。\n\n        #!/usr/bin/perl -w\n\n        use strict;\n        use Excel::Writer::XLSX;\n\n        open( TABFILE, \u0026#39;tab.txt\u0026#39; ) or die \u0026#34;tab.txt: $!\u0026#34;;\n\n        my $workbook  = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;tab.xlsx\u0026#39; );\n        my $worksheet = $workbook-\u0026gt;add_worksheet();\n\n        # 行和列从0开始索引\n        my $row = 0;\n\n        while ( \u0026lt;TABFILE\u0026gt; ) {\n            chomp;\n\n            # Split on single tab\n            my @fields = split( \u0026#39;\\t\u0026#39;, $_ );\n\n            my $col = 0;\n            for my $token ( @fields ) {\n                $worksheet-\u0026gt;write( $row, $col, $token );\n                $col++;\n            }\n            $row++;\n        }\n\n \t注意：这只是一个说明性的简单的转换程序。转换CSV文件或使用Tab符号分隔或其它任何形式的分隔符分隔的文本文件，我推荐更严密的csv2xls程序，它是Text::CSV_XS模块的一部分。\n\n   在此处查看 examples/csv2xls 链接:\n    \u0026lt;http://search.cpan.org/~hmbrand/Text-CSV_XS/MANIFEST\u0026gt;.\n\n  附加的例子\n    下面是Excel::Writer::XLSX标准发行版中提供的实例描述文件。它们说明了该模块的不同特征和选项。查看Excel::Writer::XLSX::Examples获取更详细的信息.\n        Getting started\n        ===============\n        a_simple.pl             A simple demo of some of the features.\n        bug_report.pl           A template for submitting bug reports.\n        demo.pl                 A demo of some of the available features.\n        formats.pl              All the available formatting on several worksheets.\n        regions.pl              A simple example of multiple worksheets.\n        stats.pl                Basic formulas and functions.\n\n\n        Intermediate\n        ============\n        autofilter.pl           Examples of worksheet autofilters.\n        array_formula.pl        Examples of how to write array formulas.\n        cgi.pl                  A simple CGI program.\n        chart_area.pl           A demo of area style charts.\n        chart_bar.pl            A demo of bar (vertical histogram) style charts.\n        chart_column.pl         A demo of column (histogram) style charts.\n        chart_line.pl           A demo of line style charts.\n        chart_pie.pl            A demo of pie style charts.\n        chart_scatter.pl        A demo of scatter style charts.\n        chart_stock.pl          A demo of stock style charts.\n        colors.pl               A demo of the colour palette and named colours.\n        comments1.pl            Add comments to worksheet cells.\n        comments2.pl            Add comments with advanced options.\n        conditional_format.pl   Add conditional formats to a range of cells.\n        data_validate.pl        An example of data validation and dropdown lists.\n        date_time.pl            Write dates and times with write_date_time().\n        defined_name.pl         Example of how to create defined names.\n        diag_border.pl          A simple example of diagonal cell borders.\n        filehandle.pl           Examples of working with filehandles.\n        headers.pl              Examples of worksheet headers and footers.\n        hide_sheet.pl           Simple example of hiding a worksheet.\n        hyperlink1.pl           Shows how to create web hyperlinks.\n        hyperlink2.pl           Examples of internal and external hyperlinks.\n        indent.pl               An example of cell indentation.\n        merge1.pl               A simple example of cell merging.\n        merge2.pl               A simple example of cell merging with formatting.\n        merge3.pl               Add hyperlinks to merged cells.\n        merge4.pl               An advanced example of merging with formatting.\n        merge5.pl               An advanced example of merging with formatting.\n        merge6.pl               An example of merging with Unicode strings.\n        mod_perl1.pl            A simple mod_perl 1 program.\n        mod_perl2.pl            A simple mod_perl 2 program.\n        panes.pl                An examples of how to create panes.\n        outline.pl              An example of outlines and grouping.\n        outline_collapsed.pl    An example of collapsed outlines.\n        protection.pl           Example of cell locking and formula hiding.\n        protection.pl           Example of cell locking and formula hiding.\n        rich_strings.pl         Example of strings with multiple formats.\n        right_to_left.pl        Change default sheet direction to right to left.\n        sales.pl                An example of a simple sales spreadsheet.\n        stats_ext.pl            Same as stats.pl with external references.\n        stocks.pl               Demonstrates conditional formatting.\n        tab_colors.pl           Example of how to set worksheet tab colours.\n        write_handler1.pl       Example of extending the write() method. Step 1.\n        write_handler2.pl       Example of extending the write() method. Step 2.\n        write_handler3.pl       Example of extending the write() method. Step 3.\n        write_handler4.pl       Example of extending the write() method. Step 4.\n        write_to_scalar.pl      Example of writing an Excel file to a Perl scalar.\n\n        Unicode\n        =======\n        unicode_2022_jp.pl      Japanese: ISO-2022-JP.\n        unicode_8859_11.pl      Thai:     ISO-8859_11.\n        unicode_8859_7.pl       Greek:    ISO-8859_7.\n        unicode_big5.pl         Chinese:  BIG5.\n        unicode_cp1251.pl       Russian:  CP1251.\n        unicode_cp1256.pl       Arabic:   CP1256.\n        unicode_cyrillic.pl     Russian:  Cyrillic.\n        unicode_koi8r.pl        Russian:  KOI8-R.\n        unicode_polish_utf8.pl  Polish :  UTF8.\n        unicode_shift_jis.pl    Japanese: Shift JIS.\n\nLIMITATIONS 限制\n    The following limits are imposed by Excel 2007+:\n\n        描述                                 限制        -----------------------------------  ------\n        一个字符串中的最大字符数             32,767\n        最大的列数                           16,384\n        最大的行数                           1,048,576\n        工作表名中的最大字符数               31\n        页眉/页脚中的最大字符数              254\n\n与Spreadsheet::WriteExcel模块的兼容性\n\t\u0026#34;Excel::Writer::XLSX\u0026#34;模块是 \u0026#34;Spreadsheet::WriteExcel\u0026#34;模块的替代者\n\n\t它支持 Spreadsheet::WriteExcel所有的特性，注意下面微小的不同：\n\n        工作簿方法                  支持\n        ================            ======\n        new()                       Yes\n        add_worksheet()             Yes\n        add_format()                Yes\n        add_chart()                 Yes\n        close()                     Yes\n        set_properties()            Yes\n        define_name()               Yes\n        set_tempdir()               Yes\n        set_custom_color()          Yes\n        sheets()                    Yes\n        set_1904()                  Yes\n        set_optimization()          Yes. Spreadsheet::WriteExcel中不需要.\n        add_chart_ext()             Not supported.Excel::Writer::XLSX中不是必须的\n        compatibility_mode()        Deprecated. Excel::Writer::XLSX中不是必须的\n        set_codepage()              Deprecated. Excel::Writer::XLSX中不是必须的\n\n\n        Worksheet Methods           Support\n        =================           =======\n        write()                     Yes\n        write_number()              Yes\n        write_string()              Yes\n        write_rich_string()         Yes. Spreadsheet::WriteExcel中没有该方法.\n        write_blank()               Yes\n        write_row()                 Yes\n        write_col()                 Yes\n        write_date_time()           Yes\n        write_url()                 Yes\n        write_formula()             Yes\n        write_array_formula()       Yes.Spreadsheet::WriteExcel中没有该方法.\n        keep_leading_zeros()        Yes\n        write_comment()             Yes\n        show_comments()             Yes\n        set_comments_author()       Yes\n        add_write_handler()         Yes\n        insert_image()              Yes/Partial, 查看文档.\n        insert_chart()              Yes\n        data_validation()           Yes\n        conditional_format()        Yes. Spreadsheet::WriteExcel中没有该方法.\n        get_name()                  Yes\n        activate()                  Yes\n        select()                    Yes\n        hide()                      Yes\n        set_first_sheet()           Yes\n        protect()                   Yes\n        set_selection()             Yes\n        set_row()                   Yes.\n        set_column()                Yes.\n        outline_settings()          Yes\n        freeze_panes()              Yes\n        split_panes()               Yes\n        merge_range()               Yes\n        merge_range_type()          Yes. Spreadsheet::WriteExcel中没有该方法。\n        set_zoom()                  Yes\n        right_to_left()             Yes\n        hide_zero()                 Yes\n        set_tab_color()             Yes\n        autofilter()                Yes\n        filter_column()             Yes\n        filter_column_list()        Yes. Spreadsheet::WriteExcel中没有该方法.\n        write_utf16be_string()      不推荐使用. 使用 Perl utf8字符串代替.\n        write_utf16le_string()      不推荐使用. 使用 Perl utf8字符串代替.\n        store_formula()             不推荐使用. 查看文档.\n        repeat_formula()            不推荐使用. 查看文档.\n        write_url_range()           Not supported. Excel::Writer::XLSX中不是必须的\n\n        页面设置方法                支持\n        ===================         =======\n        set_landscape()             Yes\n        set_portrait()              Yes\n        set_page_view()             Yes\n        set_paper()                 Yes\n        center_horizontally()       Yes\n        center_vertically()         Yes\n        set_margins()               Yes\n        set_header()                Yes\n        set_footer()                Yes\n        repeat_rows()               Yes\n        repeat_columns()            Yes\n        hide_gridlines()            Yes\n        print_row_col_headers()     Yes\n        print_area()                Yes\n        print_across()              Yes\n        fit_to_pages()              Yes\n        set_start_page()            Yes\n        set_print_scale()           Yes\n        set_h_pagebreaks()          Yes\n        set_v_pagebreaks()          Yes\n\n        格式方法                    支持\n        ==============              =======\n        set_font()                  Yes\n        set_size()                  Yes\n        set_color()                 Yes\n        set_bold()                  Yes\n        set_italic()                Yes\n        set_underline()             Yes\n        set_font_strikeout()        Yes\n        set_font_script()           Yes\n        set_font_outline()          Yes\n        set_font_shadow()           Yes\n        set_num_format()            Yes\n        set_locked()                Yes\n        set_hidden()                Yes\n        set_align()                 Yes\n        set_rotation()              Yes\n        set_text_wrap()             Yes\n        set_text_justlast()         Yes\n        set_center_across()         Yes\n        set_indent()                Yes\n        set_shrink()                Yes\n        set_pattern()               Yes\n        set_bg_color()              Yes\n        set_fg_color()              Yes\n        set_border()                Yes\n        set_bottom()                Yes\n        set_top()                   Yes\n        set_left()                  Yes\n        set_right()                 Yes\n        set_border_color()          Yes\n        set_bottom_color()          Yes\n        set_top_color()             Yes\n        set_left_color()            Yes\n        set_right_color()           Yes\n\nREQUIREMENTS  要求\n    \u0026lt;http://search.cpan.org/search?dist=Archive-Zip/\u0026gt;.\n\n    Perl 5.10.0.\n\nSPEED AND MEMORY USAGE  速度和内存使用\n\n\t\u0026#34;Spreadsheet::WriteExcel\u0026#34;用于优化速度并减少内存使用。这样的设计目标意味着实现许多用户要求的诸如格式化和单独地写入数据功能并不容易。\n\n     因此，\u0026#34;Excel::Writer::XLSX\u0026#34;采取不同的设计方法并且在内存中存入更多的数据，以至于功能更复杂。这样的结果就是Excel::Writer::XLSX 比Spreadsheet::WriteExcel 慢了50%，并且显著地使用更多内存。当你增加更多的行和列范围时，可能因为创建大的文件而用光内存。对于Spreadsheet::WriteExcel这从来都不是问题。\n   \n\t使用工作簿的\u0026#34;set_optimization()\u0026#34;方法，这种内存使用几乎能完全减小：\n\n        $workbook-\u0026gt;set_optimization();\n\n \n\t这样做的代价就是你不能使用任何操作单元格的新功能，写入数据后，该优化选项被打开。\n\n\nDIAGNOSTICS  诊断\n    Filename required by Excel::Writer::XLSX-\u0026gt;new()\n       必须给构造函数一个文件名。\n\n    Can\u0026#39;t open filename. It may be in use or protected.\n       \n\t\t不能打开文件写入。你要写入的那个文件夹可能被写保护或文件正被其它程序使用。\n\n    Can\u0026#39;t call method \u0026#34;XXX\u0026#34; on an undefined value at someprogram.pl.\n      \n    在Windows上这常常是由于你正尝试创建的文件与一个已经被Excel打开并锁住的文件冲突了。\n    The file you are trying to open \u0026#39;file.xls\u0026#39; is in a different format than\n    specified by the file extension.\n\n\t\t当你创建一个XLSX文件，但是给它一个xls后缀时，会出现该警告。\n\nWRITING EXCEL FILES\n    \n    根据你的需求，背景和一般的感觉，你可能更喜欢下面的方法之一将数据写入Excel：\n    *   Spreadsheet::WriteExcel\n\n \n\t\t它是Excel::Writer::XLSX 的先驱，并使用同样的接口。它生成xls格式的文件用于Excel 97-2003版本。这些文件仍然能被Excel2007读取但是在支持的行和列数量上有限制。\n\n    *   Win32::OLE module and office automation\n\n         这需要一个Windows平台并安装一份Excel拷贝。这是与Excel交互的最强大最完全的方法。\n    *   CSV, comma separated variables or text\n\n        如果文件扩展名是csv，Excel打开后会自动转换该格式。生成一个CSV文件并不像看起来的那么容易。查看DBD::RAM, DBD::CSV, Text::xSV 和 Text::CSV_XS 模块。\n    *   DBI with DBD::ADO or DBD::ODBC\n\n        Excel文件含有内部索引表，允许它们表现的像一个数据库。使用标准的Perl数据库模块之一，你可以将一个Excel文件当作数据库连接。\n\n    *   DBD::Excel\n\n         \n\t\t你也可以通过 DBD::Excel 模块使用标准的DBI接口访问Spreadsheet::WriteExcel 。\n\t\t查看  \u0026lt;http://search.cpan.org/dist/DBD-Excel\u0026gt;\n    *   Spreadsheet::WriteExcelXML\n       \n        该模块允许你使用与 Spreadsheet::WriteExcel同样的接口来创建Excel XML 文件。\n\t\t查看 \u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcelXML\u0026gt;.\n\t\t\n    *   Excel::Template\n\n        该模块允许你从在某种意义上与 HTML::Template相似的XML 模版上创建文件。\n\t\t查看\u0026lt;http://search.cpan.org/dist/Excel-Template/\u0026gt;.\n        \n\n    *   Spreadsheet::WriteExcel::FromXML\n\n       \n\t\t该模块允许你使用Spreadsheet::WriteExcel 作为后台将一个简单的XML文件转换为Excel文件。\n\t\tXML的格式由支持的DTD来定义。\n\t\t查看\u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcel-FromXML\u0026gt;.\n\n    *   Spreadsheet::WriteExcel::Simple\n\n       它提供了对Spreadsheet::WriteExcel更加简单的接口。\n        \u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcel-Simple\u0026gt;.\n\n    *   Spreadsheet::WriteExcel::FromDB\n\n  \t 它对于从DB表中创建Excel文件很有用。\n\t \u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcel-FromDB\u0026gt;.\n\n    *   HTML tables\n\n        This is an easy way of adding formatting via a text based format.\n\t\t通过一个基于文本的格式添加格式很容易。\n\n    *   \nREADING EXCEL FILES  读取Excel文件\n\t从Excel中读取数据，尝试：\n\n    *   Spreadsheet::ParseExcel\n\n        \n        它使用OLE::Storage-Lite模块从Excel中提取数据。\n\t\t查看\u0026lt;http://search.cpan.org/dist/Spreadsheet-ParseExcel\u0026gt;.\n    *   Spreadsheet::ParseExcel_XLHTML\n\n\n    *   XML::Excel\n         使用Spreadsheet::ParseExcel将Excel文件转换为XML文件\n        查看那\u0026lt;http://search.cpan.org/dist/XML-Excel\u0026gt;.\n\n    *   \n\u003c/code\u003e\u003c/pre\u003e","text":"---------------------------------------------------------------------------- 翻译: 小Perl Email:sxw2k@sina.com ---------------------------------------------------------------------------- NAME 名称 Excel::Writer::XLSX - 以Excel2007+XLSX格式创建一个新文件. VERSION 版本 该文档是在2013年11月发布的Excel::Writer::XLSX 0.75版本。 SYNOPSIS 概要 在perl.xlsx的第一个工作表中写入字符串、格式化的字符串、数字和公式： use Excel::Writer::XLSX; # 新建excel工作簿 my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;perl.xlsx\u0026#39; ); # 增加一个工作表 $worksheet = $workbook-\u0026gt;add_worksheet(); # 添加并定义一个格式 $format = $workbook-\u0026gt;add_format();#增加一种格式 $format-\u0026gt;set_bold(); #设置粗体 $format-\u0026gt;set_color( \u0026#39;red\u0026#39; ); #设置颜色 $format-\u0026gt;set_align( \u0026#39;center\u0026#39; ); #设置对齐方式（此处为居中） #写入一个格式化和非格式化的字符串，使用行列表示法。 $col = $row = 0; #设置行和列的位置 $worksheet-\u0026gt;write( $row, $col, \u0026#39;Hi Excel!\u0026#39;, $format ); $worksheet-\u0026gt;write( 1, $col, \u0026#39;Hi Excel!\u0026#39; ); #使用A1表示法写入一个数字和公式 $worksheet-\u0026gt;write( \u0026#39;A3\u0026#39;, 1.2345 ); #在第三行第一列写入一个数字 $worksheet-\u0026gt;write( \u0026#39;A4\u0026#39;, \u0026#39;=SIN(PI()/4)\u0026#39; ); #在第四行第一列写入一个公式 DESCRIPTION 说明 The \u0026#34;Excel::Writer::XLSX\u0026#34; 模块可以被用做建立Excel2007+ XLSX格式的文件。 XLSX格式是Excel 2007 和以后版本使用的官方开放XML（OOXML）格式 可在工作簿中添加多张工作表，格式可以被应用到单元格中。可以把文字，数字，和公式写入单元格。 此模块目前还不能被用于向一个已经存在的EXCEl XLSX文件中写入数据。 Excel::Writer::XLSX and Spreadsheet::WriteExcel Excel::Writer::XLSX使用和Spreadsheet::WriteExcel模块相同的接口来生成二进制XLS格式的Excel文件 Excel::Writer::XLSX 支持所有Spreadsheet::WriteExcel中的特性，并且某些情况下功能更强。请查看 \u0026#34;Compatibility with Spreadsheet::WriteExcel\u0026#34;.获取更多细节。 XLSL格式相比XLS格式主要的优势是它允许在一个工作表中容纳更大数量的行和列。 QUICK START 快速入门 Excel::Writer::XLSX试图尽可能的提供Excel的功能接口。因此，有很多与接口有关的文档，第一眼很难看出哪些重要，哪些不重要。所以对于你们这些更喜欢先组装宜家设备，再读说明书的人，此处有三种简单的方式： 0、新建一个Excel对象 1、使用\u0026#34;new()\u0026#34;方法创建一个新的Excel 工作簿 2、使用\u0026#34;add_worksheet()\u0026#34;方法向新工作簿增加一个工作表 3、使用\u0026#34;write()\u0026#34;方法向工作表中写入数据 就象这样： use Excel::Writer::XLSX; # Step 0 my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;perl.xlsx\u0026#39; ); # Step 1 $worksheet = $workbook-\u0026gt;add_worksheet(); # Step 2 $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hi Excel!\u0026#39; ); # Step 3 这会创建一个叫做perl.xlsx的Excel文件，里面只有一张工作表并在相关单元格里面有\u0026#39;Hi Excel\u0026#39;文本。 工作簿方法 Excel::Writer::XLSX模块为新建的Excel工作簿提供了面向对象的接口。下面的方法可以通过一个新建的工作簿对象访问. new() #新建 add_worksheet() #添加工作表 add_format() #添加格式 add_chart() #添加图表 close() #关闭工作簿 set_properties()\t#设置属性 define_name()\t#定义名称 set_tempdir()\t#设置临时文件夹 set_custom_color()\t#设置自定义颜色 sheets()\t#工作表 set_1904() #设置纪元开始年 set_optimization() #设置优化 new() 使用\u0026#34;new()\u0026#34;构造方法创建一个新的Excel工作簿，该方法接受一个文件名或文件句柄作为参数。下面的例子根据一个文件名来创建一个新的Excel文件： my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;filename.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet(); $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hi Excel!\u0026#39; ); 下面是使用文件名作为new()方法参数的其他例子： my $workbook1 = Excel::Writer::XLSX-\u0026gt;new( $filename ); my $workbook2 = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;/tmp/filename.xlsx\u0026#39; ); my $workbook3 = Excel::Writer::XLSX-\u0026gt;new( \u0026#34;c:\\\\tmp\\\\filename.xlsx\u0026#34; );#Windows my $workbook4 = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;c:\\tmp\\filename.xlsx\u0026#39; ); 最后两个例子说明了怎样通过转义目录分隔符\u0026#34;\\\u0026#34;或使用单引号保证值不被内插来在DOS上或Windows上建立Excel文件。 我们推荐文件名使用\u0026#34;.xlsx\u0026#34;而不是\u0026#34;.xls\u0026#34;后缀，因为后者在使用XLSX格式的文件时会发生警告。 \u0026#34;new()\u0026#34;构造函数方法返回一个Excel::Writer::XLSX对象，你可以使用这个对象来添加工作表并存储数据。\t应该注意的是，尽管没有特别要求使用\u0026#34;my\u0026#34;，但是它定义了新工作簿变量的作用域，并且，在大多数情况下，它保证了工作簿不用显式地调用\u0026#34;close()方法\u0026#34;就能被正确地关闭。 如果文件不能被创建，由于文件权限或其他一些原因，\u0026#34;new\u0026#34;会返回\u0026#34;undef\u0026#34;。因此，在继续之前检查\u0026#34;new\u0026#34;的返回值是个好习惯。通常，如果存在文件创建错误，Perl变量$!就会被设置： my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;protected.xlsx\u0026#39; ); die \u0026#34;Problems creating new Excel file: $!\u0026#34; unless defined $workbook; 你也可以传递一个合法的文件句柄给\u0026#34;new()\u0026#34;构造函数。例如在一个CGI程序中你可以这样做： binmode( STDOUT ); my $workbook = Excel::Writer::XLSX-\u0026gt;new( \\*STDOUT ); 对于CGI程序，你也可以使用特别的Perl文件名 \u0026#39;-\u0026#39;，它会把输出重定向到标准输出： my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;-\u0026#39; ); 可以查看例子中的cgi.pl 然而，这种特殊的情况在\u0026#34;mod_perl\u0026#34;程序中不起作用，你必须做一些下面的事情： # mod_perl 1 ... tie *XLS, \u0026#39;Apache\u0026#39;; binmode( XLSX ); my $workbook = Excel::Writer::XLSX-\u0026gt;new( \\*XLSX ); ... # mod_perl 2 ... tie *XLSX =\u0026gt; $r; # Tie to the Apache::RequestRec object binmode( *XLSX ); my $workbook = Excel::Writer::XLSX-\u0026gt;new( \\*XLSX ); ... 请查看mod_perl1.pl\u0026#34; 和 \u0026#34;mod_perl2.pl\u0026#34; 如果你想通过socket 去 stream一个Excel文件或者你想把一个Excel文件存进一个标量， 那么文件句柄会很有用。 例如，下面是把Excel文件写入标量的一种方法： #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; open my $fh, \u0026#39;\u0026gt;\u0026#39;, \\my $str or die \u0026#34;Failed to open filehandle: $!\u0026#34;; my $workbook = Excel::Writer::XLSX-\u0026gt;new( $fh ); my $worksheet = $workbook-\u0026gt;add_worksheet(); $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hi Excel!\u0026#39; ); $workbook-\u0026gt;close(); # Excel文件现在在$str中。记得在打印$str之前binmode()输出文件句柄 binmode STDOUT; print $str; 请查看\u0026#34;write_to_scalar.pl\u0026#34; 和 \u0026#34;filehandle.pl\u0026#34; 注意binmode()的要求。一个Excel文件由二进制数据组成。因此，如果你使用一个文件句柄你应该保证在传递给\u0026#34;new()\u0026#34;方法之前将它binmode().不管你使用Windows或其他何种平台，你都应该这样做。 如果你使用文件名而非文件句柄，你不用担心\u0026#34;binmode()\u0026#34;.当Excel::Writer::XLSX将文件名转换为文件句柄时，它会在内部执行binmode(). ---------------------------------------------------------------------------------------------------------\tadd_worksheet( $sheetname ) #参数为工作表名 至少一个工作表应该被添加到工作簿中。工作表被用于将数据写入单元格： $worksheet1 = $workbook-\u0026gt;add_worksheet(); # Sheet1 $worksheet2 = $workbook-\u0026gt;add_worksheet( \u0026#39;Foglio2\u0026#39; ); # Foglio2 $worksheet3 = $workbook-\u0026gt;add_worksheet( \u0026#39;Data\u0026#39; ); # Data $worksheet4 = $workbook-\u0026gt;add_worksheet(); # Sheet4 如果没有指定$sheetname，默认会使用Sheet1,Sheet2.... 工作表名必须是合法的Excel工作表名。它不能包含以下字符,\u0026#34;[ ] : * ? / \\\u0026#34; ,并且长度必须小于32个字符。此外，你不能在一个以上的工作表中使用同一个文件名，或大小写敏感的文件名。 ---------------------------------------------------------------------------------------------- add_format( %properties ) #添加格式 \u0026#34;add_format()\u0026#34;方法可以被用作创建新的格式对象，它可以被用于将格式应用到单元格中。你可以在创建时通过含有属性值的哈希定义属性或之后通过方法调用定义属性： $format1 = $workbook-\u0026gt;add_format( %props ); # 在创建时定义属性 $format2 = $workbook-\u0026gt;add_format(); # 创建后再定义属性 请查看“单元格格式化”章节获取详细信息 --------------------------------------------------------------------------------------------------------- add_chart( %properties ) #添加图表 该方法用于新建一个图表作为一个独立的工作表（默认），或作为一个可嵌入的对象，通过\u0026#34;insert_chart()\u0026#34;工作表方法插入到工作表中。 my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;column\u0026#39; ); 属性可以设置为: type (required)#必须的选项 subtype (optional)#图表子类型(可选) name (optional) embedded (optional) * \u0026#34;type\u0026#34; 类型 这是必须的参数。它定义了将被创建的图表的类型。 my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39; ); 可用的type类型如下: area\t#区域图 bar\t#条形图 column\t#柱形图 line\t#线图 pie #饼图 scatter #散点图 stock\t#存量图 * \u0026#34;subtype\u0026#34; #图表类型（子类型） 用于在需要时定义一个图表的子类型 my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;bar\u0026#39;, subtype =\u0026gt; \u0026#39;stacked\u0026#39; ); 目前只有条形图和柱形图支持子类型(stacked and percent_stacked) * \u0026#34;name\u0026#34; 为图表设置名字。名字属性是可选的，如果它不被支持，它会默认为\u0026#34;Chart1,Chart2....Chartn\u0026#34;. 图表名必须是合法的表名，与\u0026#34;add_worksheet()\u0026#34;规则一样。\u0026#34;name\u0026#34;属性可以在嵌套的图表中省略。 my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39;, name =\u0026gt; \u0026#39;Results Chart\u0026#39; ); * \u0026#34;embedded\u0026#34; 指定图表对象会通过\u0026#34;insert_chart()\u0026#34;工作表方法插入到工作表中。如果没有设置这个标志就尝试插入图表，会出现错误。 my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39;, embedded =\u0026gt; 1 ); # Configure the chart. ... # 将图表插入到工作表中 $worksheet-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart ); 查看Excel::Writer::XLSX::Chart获取更详细的关于在创建后如何配置图表对象的信息。也可查看chart_*.pl程序。 close() 一般地，当你的程序结束或工作簿对象超出作用域时，你的Excel文件会被自动关闭。然而，你可以使用close()方法显式地关闭Excel文件。 $workbook-\u0026gt;close();#显示地关闭Excel 如果Excel文件必须在对其执行一些外部动作诸如复制、读取大小或者把它作为电子邮件的附件之前关闭，需要显式地用close()声明 此外，\u0026#34;close()\u0026#34;被用于阻止Perl的垃圾回收器以错误的顺序处理工作簿、工作表和格式对象。这种情况出现在下面： 如果\u0026#34;my()\u0026#34;没有被用于声明使用\u0026#34;new()\u0026#34;创建的工作簿变量作用域 如果在子例程中调用\u0026#34;new()\u0026#34;, \u0026#34;add_worksheet()\u0026#34; 或者 \u0026#34;add_format()\u0026#34;方法。 原因是Excel::Writer::XLSX依赖Perl的\u0026#34;DESTROY\u0026#34;机制依特定顺序触发destructor析构方法。当工作簿、工作表和格式变量不是词法作用域或它们拥有不同的词法作用域时，前面这种情况不会发生。 一般地，如果你创建一个0字节的文件或者你不能建立一个文件，你需要调用\u0026#34;close()\u0026#34;方法。 \u0026#34;close()\u0026#34;的返回值与perl关闭使用\u0026#34;new()\u0026#34;方法建立的文件的返回值一样。这允许你以常规方式处理错误 $workbook-\u0026gt;close() or die \u0026#34;Error closing file: $!\u0026#34;; set_properties() \u0026#34;set_properties\u0026#34; 方法可被用于设置通过\u0026#34;Excel::Writer::XLSX\u0026#34;模块创建的Excel文件的文档属性。 当你使用Excel中的\u0026#34;办公按钮\u0026#34; -\u0026gt;\u0026#34;准备\u0026#34;-\u0026gt;\u0026#34;属性\u0026#34;选项时，可以看到这些属性。 属性值应该以哈希格式传递，如下： $workbook-\u0026gt;set_properties( title =\u0026gt; \u0026#39;This is an example spreadsheet\u0026#39;, author =\u0026gt; \u0026#39;John McNamara\u0026#39;, comments =\u0026gt; \u0026#39;Created with Perl and Excel::Writer::XLSX\u0026#39;, ); 可以被设置的属性是: title #标题 subject\t#主题\tauthor\t#作者 manager #经理 company #公司 category #类别 keywords #关键字 comments #注释 status\t#状态 请查看\u0026#34;properties.pl\u0026#34; 程序。 define_name() 该方法被用于定义一个名字，它能被用于表示工作簿中的一个值，一个单独的单元格，或一定范围内的单元格 例如：设置一个 global/workbook 名: # Global/workbook names. $workbook-\u0026gt;define_name( \u0026#39;Exchange_rate\u0026#39;, \u0026#39;=0.96\u0026#39; ); $workbook-\u0026gt;define_name( \u0026#39;Sales\u0026#39;, \u0026#39;=Sheet1!$G$1:$H$10\u0026#39; ); 也可以使用语法\u0026#34;sheetname!definedname\u0026#34;在名字之前加上表名来定义一个 local/worksheet: # Local/worksheet name. $workbook-\u0026gt;define_name( \u0026#39;Sheet2!Sales\u0026#39;, \u0026#39;=Sheet2!$G$1:$G$10\u0026#39; ); 如果工作表名含有空格或特殊字符，你必须像在Excel中一样，用单引号将名字括起来： $workbook-\u0026gt;define_name( \u0026#34;\u0026#39;New Data\u0026#39;!Sales\u0026#34;, \u0026#39;=Sheet2!$G$1:$G$10\u0026#39; ); 查看 defined_name.pl 程序。 set_tempdir() \u0026#34;Excel::Writer::XLSX\u0026#34;在组装成最后的工作簿之前，把数据存储在临时文件中 \u0026#34;File::Temp\u0026#34;模块用于创建这些临时文件。File::Temp模块使用\u0026#34;File::Spec\u0026#34;为这些临时文件指定一个合适的位置，例如\u0026#34;/tmp\u0026#34;或\u0026#34;c:\\windows\\temp\u0026#34;.你可以按下面的方法找出你系统上哪个目录被使用了： perl -MFile::Spec -le \u0026#34;print File::Spec-\u0026gt;tmpdir() 如果默认的临时文件目录不能使用，你可以使用\u0026#34;set_tempdir()\u0026#34;方法指定一个可供选择的位置： $workbook-\u0026gt;set_tempdir( \u0026#39;/tmp/writeexcel\u0026#39; ); $workbook-\u0026gt;set_tempdir( \u0026#39;c:\\windows\\temp\\writeexcel\u0026#39; ); 用于存放临时文件的目录必须先存在，“set_temp()”方法不会新建一个目录。 一个潜在问题是一些Windows系统将并发临时文件的数量限制为大约800个。这意味着，一个在该种系统上运行的单个程序将会被限制创建总共800个工作簿和工作表对象。如果必要，你可以运行多个非并发程序来避免这种情况。 set_custom_color( $index, $red, $green, $blue ) #设置自定义颜色值 \u0026#34;set_custom_color()\u0026#34;方法能用于使用更合适的颜色重载其中之一的内建颜色值。 $index的值应该在8..63之间，查看see \u0026#34;COLOURS IN EXCEL\u0026#34;. 默认的命名颜色使用如下索引： 8 =\u0026gt; black 9 =\u0026gt; white 10 =\u0026gt; red 11 =\u0026gt; lime #绿黄色 12 =\u0026gt; blue 13 =\u0026gt; yellow 14 =\u0026gt; magenta #洋红色 15 =\u0026gt; cyan #蓝绿色 16 =\u0026gt; brown 17 =\u0026gt; green 18 =\u0026gt; navy #淡蓝色 20 =\u0026gt; purple #紫色 22 =\u0026gt; silver #银色 23 =\u0026gt; gray #灰色 33 =\u0026gt; pink #粉红色 53 =\u0026gt; orange 使用它的RGB(red green blue)成分设置新颜色。 $red,$green 和 $blue的值范围必须在0..255之间。 你可以在Excel中使用\u0026#34;工具\u0026#34;-\u0026gt;选项-\u0026gt;颜色-\u0026gt;修改\u0026#34;对话框决定需要的颜色。 \u0026#34;set_custom_color()\u0026#34;工作簿方法可以使用HTML风格的十六进制值： $workbook-\u0026gt;set_custom_color( 40, 255, 102, 0 ); # Orange $workbook-\u0026gt;set_custom_color( 40, 0xFF, 0x66, 0x00 ); # Same thing $workbook-\u0026gt;set_custom_color( 40, \u0026#39;#FF6600\u0026#39; ); # Same thing my $font = $workbook-\u0026gt;add_format( color =\u0026gt; 40 ); # Modified colour \u0026#34;set_custom_color()\u0026#34;方法的返回值是被修改的颜色的索引： my $ferrari = $workbook-\u0026gt;set_custom_color( 40, 216, 12, 12 ); my $format = $workbook-\u0026gt;add_format( bg_color =\u0026gt; $ferrari, pattern =\u0026gt; 1, border =\u0026gt; 1 ); 注意，在XLSX格式中，颜色调色板不确切局限为53种纯色。Excel::Writer::XLSX模块会在以后的阶段扩展以支持新的，半无限的调色板。 sheets( 0, 1, ... ) \u0026#34;sheets()\u0026#34;方法返回一个工作簿中工作表的列表或者列表切片 如果没有传递参数给sheet()方法，则返回工作簿中的所有工作表。如果你想对一个工作表进行重复操作，这将很有用。 for $worksheet ( $workbook-\u0026gt;sheets() ) { print $worksheet-\u0026gt;get_name(); } 你可以指定一个列表切片返回一个或多个工作表对象： $worksheet = $workbook-\u0026gt;sheets( 0 ); $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; ); 或者因为\u0026#34;sheets()\u0026#34;的返回值是一个对工作表对象的引用，你可以将上面的例子写为： $workbook-\u0026gt;sheets( 0 )-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; ); 下面的例子返回一个工作簿中的第一个和最后一个工作表： for $worksheet ( $workbook-\u0026gt;sheets( 0, -1 ) ) { # Do something } set_1904() Excel将数据存储为实数，其整数部分存储自新纪元以来的天数，其小数部分存储一天的百分比。新纪元可以是1900或1904。Windows上的Excel使用1900，Mac上的Excel使用1904.然而，任何平台上的Excel都会在系统之间自动转换。 Excel::Writer::XLSX默认使用1900格式存储数据。如果你想改变它，你可以调用\u0026#34;set_1904()\u0026#34;工作簿方法。对于1900它返回0，对于1904它返回1. set_optimization() \u0026#34;set_optimization()\u0026#34; 方法用于打开Excel::Writer::XLSX模块中的优化方案。目前只有一条减少内存使用的优化方案。 $workbook-\u0026gt;set_optimization(); 注意，打开此优化方案后，当通过\u0026#34;write_*()\u0026#34;方法中的其中之一在新行中添加一个单元格后，一列数据被写入然后被删除。因为一旦优化开启后，这样的数据应该以连续的行顺序写入。？ 该方法必须在任何调用\u0026#34;add_worksheet()\u0026#34;方法之前被调用。 WORKSHEET METHODS 工作表方法 通过调用工作簿对象中的\u0026#34;add_worksheet()\u0026#34;方法创建一个新的工作表: $worksheet1 = $workbook-\u0026gt;add_worksheet(); $worksheet2 = $workbook-\u0026gt;add_worksheet(); 下面的方法对于一个新的worksheet是可用的： write() write_number() write_string() write_rich_string() keep_leading_zeros() #保留前导0 write_blank() write_row() write_col() write_date_time() write_url() #写入url write_url_range() write_formula()#写入公式 write_comment()#写入注释 show_comments()#显式注释 set_comments_author() add_write_handler() insert_image()#插入图像 insert_chart()#插入图表 data_validation()#数据检验 conditional_format() get_name() activate()#激活 select() hide() set_first_sheet() protect() set_selection() set_row() set_column() outline_settings() freeze_panes() #冻结窗格 split_panes()\t#分割窗格 merge_range()\t#合并值域 merge_range_type() set_zoom() right_to_left() hide_zero()\t#隐藏0 set_tab_color()\t#设置标记颜色 autofilter()\t#自动筛选 filter_column() filter_column_list() Cell notation 单元格表示法(先列-后行) Excel::Writer::XLSX支持两种形式的表示法来指定单元格的位置:行-列表示法和A1表示法。 Row-column notation uses a zero based index for both row and column while A1 notation uses the standard Excel alphanumeric sequence of column letter and 1-based row. 例如，: 行列表示法对行-列都使用以0为基础的索引 而A1表示法使用标准的Excel字母数字序列为列，以1为基础作为行。例如： (0, 0) # 最左最顶部的单元格（使用行-列表示法） (\u0026#39;A1\u0026#39;) # The top left cell in A1 notation. (1999, 29) # 行-列表示法. (\u0026#39;AD2000\u0026#39;) # 使用A1表示法的同一单元格 # 单元格列的范围在Excel2003中是A..IV 如果你提及单元格编程，行-列表示法很有用： for my $i ( 0 .. 9 ) { $worksheet-\u0026gt;write( $i, 0, \u0026#39;Hello\u0026#39; ); # Cells A1 to A10 } A1表示法对于手动设置工作表和使用公式工作很有帮助： $worksheet-\u0026gt;write( \u0026#39;H1\u0026#39;, 200 ); $worksheet-\u0026gt;write( \u0026#39;H2\u0026#39;, \u0026#39;=H1+1\u0026#39; ); #使用公式 Ecxel形如： ABCDEFGHIJKLMN 1 2 3 4 5 6 在公式和可用的方法中你也可以使用\u0026#34;A:A\u0026#34;的列表示法： $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=SUM(B:B)\u0026#39; ); 包含在套件中的Excel::Writer::XLSL::Utility 模块含有A1表示法的帮助函数，例如： use Excel::Writer::XLSX::Utility; ( $row, $col ) = xl_cell_to_rowcol( \u0026#39;C2\u0026#39; ); # (1, 2) $str = xl_rowcol_to_cell( 1, 2 ); # C2 简单地，在下面给出的章节中工作表方法调用的参数列表依据行-列表示法，任何情况下，都可以使用A1表示法 注意：在Excel中也可以使用R1C1表示法。但Excel::Writer::XLSX不支持这。 write( $row, $column, $token, $format ) Excel的数据类型之间有区别，比如字符串，数字，空格，公式和超链接。为了简化写入数据的处理，write()方法为更多的特定方法指定一种普遍的别名： write_string() write_number() write_blank() write_formula() write_url() write_row() write_col() 一般规则就是：如果数据看起来像什么那就写入什么。下面是用 行-列表示法和A1表示法写的例子： # Same as: $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hello\u0026#39; ); # write_string() $worksheet-\u0026gt;write( 1, 0, \u0026#39;One\u0026#39; ); # write_string() $worksheet-\u0026gt;write( 2, 0, 2 ); # write_number() $worksheet-\u0026gt;write( 3, 0, 3.00001 ); # write_number() $worksheet-\u0026gt;write( 4, 0, \u0026#34;\u0026#34; ); # write_blank() $worksheet-\u0026gt;write( 5, 0, \u0026#39;\u0026#39; ); # write_blank() $worksheet-\u0026gt;write( 6, 0, undef ); # write_blank() $worksheet-\u0026gt;write( 7, 0 ); # write_blank() $worksheet-\u0026gt;write( 8, 0, \u0026#39;http://www.perl.com/\u0026#39; ); # write_url() $worksheet-\u0026gt;write( \u0026#39;A9\u0026#39;, \u0026#39;ftp://ftp.cpan.org/\u0026#39; ); # write_url() $worksheet-\u0026gt;write( \u0026#39;A10\u0026#39;, \u0026#39;internal:Sheet1!A1\u0026#39; ); # write_url() $worksheet-\u0026gt;write( \u0026#39;A11\u0026#39;, \u0026#39;external:c:\\foo.xlsx\u0026#39; ); # write_url() $worksheet-\u0026gt;write( \u0026#39;A12\u0026#39;, \u0026#39;=A3 + 3*A4\u0026#39; ); # write_formula() $worksheet-\u0026gt;write( \u0026#39;A13\u0026#39;, \u0026#39;=SIN(PI()/4)\u0026#39; ); # write_formula() $worksheet-\u0026gt;write( \u0026#39;A14\u0026#39;, \\@array ); # write_row() $worksheet-\u0026gt;write( \u0026#39;A15\u0026#39;, [\\@array] ); # write_col() #如果设置了保留前置0属性： $worksheet-\u0026gt;write( \u0026#39;A16\u0026#39;, 2 ); # write_number() $worksheet-\u0026gt;write( \u0026#39;A17\u0026#39;, 02 ); # write_string() $worksheet-\u0026gt;write( \u0026#39;A18\u0026#39;, 00002 ); # write_string() # Write an array formula. Not available in Spreadsheet::WriteExcel. $worksheet-\u0026gt;write( \u0026#39;A19\u0026#39;, \u0026#39;{=SUM(A1:B1*A2:B2)}\u0026#39; ); # write_formula() \u0026#34;看起来像\u0026#34;的规则由正则表达式定义： \u0026#34;write_number()\u0026#34; 如果 $token 是一个基于如下正则的数字： \u0026#34;$token =~ /^([+-]?)(?=\\d|\\.\\d)\\d*(\\.\\d*)?([Ee]([+-]?\\d+))?$/\u0026#34;. \u0026#34;write_string()\u0026#34; 如果设置了\u0026#34;保留前导0\u0026#34;(\u0026#34;keep_leading_zeros()\u0026#34;)并且 $token 是一个基于如下正则的带有前导0的整数：\u0026#34;$token =~/^0\\d+$/\u0026#34;. \u0026#34;write_blank()\u0026#34; 如果 $token 未定义或是一个空字符串: \u0026#34;undef\u0026#34;, \u0026#34;\u0026#34; 或 \u0026#39;\u0026#39;. \u0026#34;write_url()\u0026#34; 如果 $token 是一个基于如下正则的 http, https, ftp 或者 mailto URL \u0026#34;$token =~ m|^[fh]tt?ps?://|\u0026#34; or \u0026#34;$token =~m|^mailto:|\u0026#34;. \u0026#34;write_url()\u0026#34; 如果 $token 是一个基于如下正则的内部的或外部的引用： \u0026#34;$token =~ m[^(in|ex)ternal:]\u0026#34;. \u0026#34;write_formula()\u0026#34; 如果$token的第一个字符是\u0026#34;=\u0026#34;. \u0026#34;write_array_formula()\u0026#34; 如果 $token 匹配 \u0026#34;/^{=.*}$/\u0026#34;. \u0026#34;write_row()\u0026#34; 如果 $token 是一个数组引用. \u0026#34;write_col()\u0026#34; 如果 $token 是数组引用中的数组引用。 \u0026#34;write_string()\u0026#34; 如果前面任一情况都不适用. $format 参数是可选的。它应该是个合法的格式对象。查看 \u0026#34;CELL FORMATTING\u0026#34;: my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_bold(); $format-\u0026gt;set_color( \u0026#39;red\u0026#39; ); $format-\u0026gt;set_align( \u0026#39;center\u0026#39; ); $worksheet-\u0026gt;write( 4, 0, \u0026#39;Hello\u0026#39;, $format ); # Formatted string write()方法会忽略空字符串或\u0026#34;undef\u0026#34;，除非提供了格式。就这点而论，你不必担心对空值或未定义值的处理。查看\u0026#34;write_blank()\u0026#34; 方法。 \u0026#34;write()\u0026#34;方法的一个问题是，偶尔，数据看起来像一个数但是你不想把它看作一个数字。例如，邮政编码或ID号常以前导0开头。如果将该数据作为数字写入，则前导0会被删除。你可以使用\u0026#34;keep_leading_zeros()\u0026#34;方法改变该默认行为。当这个特性起作用时，任何带有前导0的整数会被当作字符串并且前导0被保留。查看\u0026#34;keep_leading_zeros()\u0026#34;章节获取该问题的详细信息。 你也可以使用\u0026#34;add_write_handler()\u0026#34;把你自己的数据处理器添加到\u0026#34;write()\u0026#34;方法。 \u0026#34;write()\u0026#34;方法也会处理UTF-8格式的Unicode字符串。 \u0026#34;write\u0026#34; 方法返回: 0 成功. -1 参数个数不足 -2 行或列超限 -3 字符串过长 write_number( $row, $column, $number, $format ) 向行和列指定（$row and $column）的单元格中写入整数或浮点数。 $worksheet-\u0026gt;write_number( 0, 0, 123456 ); $worksheet-\u0026gt;write_number( \u0026#39;A2\u0026#39;, 2.3451 ); $format 参数可选. 一般地，使用\u0026#34;write()\u0026#34;方法就足够了。 注意：有些版本的Excel2007不显示由Excel::Writer::XLSX写入的公式计算值。求助于Excel的所有可用服务包来修复该问题。 write_string( $row, $column, $string, $format ) 向行和列指定的单元格中写入字符串： $worksheet-\u0026gt;write_string( 0, 0, \u0026#39;Your text here\u0026#39; ); $worksheet-\u0026gt;write_string( \u0026#39;A2\u0026#39;, \u0026#39;or here\u0026#39; ); 最大的字符串长度为32767个字符。然而，Excel单元格中能显示的最大字段是1000个。所有的32767个字符可以显示在一个公式栏中。 $format参数是可选的. \u0026#34;write()\u0026#34; 方法也会处理UTF-8格式的字符串。请查看\u0026#34;unicode_*.pl\u0026#34;程序 一般地，使用\u0026#34;write()\u0026#34; 方法就足够了。\t然而，你有时候可能会使用\u0026#34;write_string()\u0026#34;方法去写入看起来像数字但你又不想把它看作数字的数据。例如，邮政编码或电话号码： # 作为普通的字符串写入 $worksheet-\u0026gt;write_string( \u0026#39;A1\u0026#39;, \u0026#39;01209\u0026#39; ); 然而，如果用户编辑该字符串，Excel可能会把字符串转换回数字。你可以使用Excel的文本格式\u0026#34;@\u0026#34;来避免它: # 格式化为字符串.编辑时不转换为数字。 my $format1 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;@\u0026#39; ); $worksheet-\u0026gt;write_string( \u0026#39;A2\u0026#39;, \u0026#39;01209\u0026#39;, $format1 ); write_rich_string( $row, $column, $format, $string, ..., $cell_format ) \u0026#34;write_rich_string()\u0026#34;方法用于写入带有多种格式的字符串。例如，写入字符串\u0026#34;This is bold and this is italic\u0026#34; 你可以使用下面的方法： my $bold = $workbook-\u0026gt;add_format( bold =\u0026gt; 1 ); my $italic = $workbook-\u0026gt;add_format( italic =\u0026gt; 1 ); $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;, \u0026#39;This is \u0026#39;, $bold, \u0026#39;bold\u0026#39;, \u0026#39; and this is \u0026#39;, $italic, \u0026#39;italic\u0026#39; ); 基本规则是把字符串分段并把$format格式对象放在你想格式化的片段之前。例如： # 未格式化的字符串 \u0026#39;This is an example string\u0026#39; # 分割 \u0026#39;This is an \u0026#39;, \u0026#39;example\u0026#39;, \u0026#39; string\u0026#39; # 在你想格式化的片段前添加格式 \u0026#39;This is an \u0026#39;, $format, \u0026#39;example\u0026#39;, \u0026#39; string\u0026#39; # In Excel::Writer::XLSX. $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;, \u0026#39;This is an \u0026#39;, $format, \u0026#39;example\u0026#39;, \u0026#39; string\u0026#39; ); 没有格式的字符串片段使用默认的格式。例如，当写入字符串\u0026#34;Some bold text\u0026#34;你会使用下面的第一个例子，但是它与第二个例子等价。 # 使用默认格式: my $bold = $workbook-\u0026gt;add_format( bold =\u0026gt; 1 ); $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;, \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold\u0026#39;, \u0026#39; text\u0026#39; ); # 或更明确地: my $bold = $workbook-\u0026gt;add_format( bold =\u0026gt; 1 ); my $default = $workbook-\u0026gt;add_format(); $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;, $default, \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold\u0026#39;, $default, \u0026#39; text\u0026#39; ); 对于Excel，只有格式的字体属性诸如字体名，风格，大小，下划线，颜色和效果被应用到字符串片段上。其他属性诸如边框，背景，对齐方式必须被应用于单元格。 \u0026#34;write_rich_string()\u0026#34;方法允许你把最后一个参数作为单元格格式使用（如果它是一个格式对象的话）来完成以上功能。下面的例子是使单元格中的rich string 居中对齐。 my $bold = $workbook-\u0026gt;add_format( bold =\u0026gt; 1 ); my $center = $workbook-\u0026gt;add_format( align =\u0026gt; \u0026#39;center\u0026#39; ); $worksheet-\u0026gt;write_rich_string( \u0026#39;A5\u0026#39;, \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold text\u0026#39;, \u0026#39; centered\u0026#39;, $center ); 查看\u0026#34;rich_strings.pl\u0026#34; 获取详细信息 my $bold = $workbook-\u0026gt;add_format( bold =\u0026gt; 1 ); my $italic = $workbook-\u0026gt;add_format( italic =\u0026gt; 1 ); my $red = $workbook-\u0026gt;add_format( color =\u0026gt; \u0026#39;red\u0026#39; ); my $blue = $workbook-\u0026gt;add_format( color =\u0026gt; \u0026#39;blue\u0026#39; ); my $center = $workbook-\u0026gt;add_format( align =\u0026gt; \u0026#39;center\u0026#39; ); my $super = $workbook-\u0026gt;add_format( font_script =\u0026gt; 1 ); # 使用多种格式写入一些字符串 $worksheet-\u0026gt;write_rich_string( \u0026#39;A1\u0026#39;, \u0026#39;This is \u0026#39;, $bold, \u0026#39;bold\u0026#39;, \u0026#39; and this is \u0026#39;, $italic, \u0026#39;italic\u0026#39; ); $worksheet-\u0026gt;write_rich_string( \u0026#39;A3\u0026#39;, \u0026#39;This is \u0026#39;, $red, \u0026#39;red\u0026#39;, \u0026#39; and this is \u0026#39;, $blue, \u0026#39;blue\u0026#39; ); $worksheet-\u0026gt;write_rich_string( \u0026#39;A5\u0026#39;, \u0026#39;Some \u0026#39;, $bold, \u0026#39;bold text\u0026#39;, \u0026#39; centered\u0026#39;, $center ); $worksheet-\u0026gt;write_rich_string( \u0026#39;A7\u0026#39;, $italic, \u0026#39;j = k\u0026#39;, $super, \u0026#39;(n-1)\u0026#39;, $center ); 正如 \u0026#34;write_sting()\u0026#34; 一样，它可写入的最大字符数是 32767个. keep_leading_zeros() 当使用\u0026#34;write()\u0026#34;方法时， keep_leading_zeros()方法改变了带有前导0整数的默认处理方式。 \u0026#34;write()\u0026#34;方法使用正则表达式来决定写入什么样的数据到Excel工作表中。如果数据看起来像数字它就使用\u0026#34;write_number()\u0026#34;方法写入数字。该方法的一个问题是偶尔数据看起来像数字但你不想将它看作一个数字。 例如邮政编码和ID号，常以前导0开头。如果你把这样的数据当作数字写入，则前导0被删除。当你手动在Excel中输入数据时，这也是默认行为。 为了避免此问题，你可以使用三选项之一。写入一个格式化后的数字、将数字当作字符串写入或使用\u0026#34;keep_leading_zeros()\u0026#34;方法来改变\u0026#34;write()\u0026#34;方法的默认行为： # 隐式地写入一个数字,前导0被删除: 1209 $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;01209\u0026#39; ); #使用格式写入以0填充的数字: 01209 my $format1 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;00000\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;01209\u0026#39;, $format1 ); # 显式地当作字符串写入: 01209 $worksheet-\u0026gt;write_string( \u0026#39;A3\u0026#39;, \u0026#39;01209\u0026#39; ); # 隐式地当作字符串写入: 01209 $worksheet-\u0026gt;keep_leading_zeros(); $worksheet-\u0026gt;write( \u0026#39;A4\u0026#39;, \u0026#39;01209\u0026#39; ); 上面的代码会生成一个如下所示的工作表: ----------------------------------------------------------- | | A | B | C | D | ... ----------------------------------------------------------- | 1 | 1209 | | | | ... | 2 | 01209 | | | | ... | 3 | 01209 | | | | ... | 4 | 01209 | | | | ... 例子里单元格在不同的边上是因为Excel默认以左对齐方式显式字符串，以右对齐方式显式数字。 应该注意的是如果用户编辑例子中的\u0026#34;A3\u0026#34;和\u0026#34;A4\u0026#34;数据，字符串会恢复为数字。这还是Excel的默认行为。使用文本格式\u0026#34;@\u0026#34;可以避免该行为： # Format as a string (01209) my $format2 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;@\u0026#39; ); $worksheet-\u0026gt;write_string( \u0026#39;A5\u0026#39;, \u0026#39;01209\u0026#39;, $format2 ); \u0026#34;keep_leading_zeros()\u0026#34;特性默认是关闭的，它以0或1为参数。如果没有给它指定参数，默认为1： $worksheet-\u0026gt;keep_leading_zeros( ) # Set on $worksheet-\u0026gt;keep_leading_zeros( 1 ); # Set on $worksheet-\u0026gt;keep_leading_zeros( 0 ); # Set off write_blank( $row, $column, $format ) 写入由行和列指定的空白单元格： $worksheet-\u0026gt;write_blank( 0, 0, $format ); 该方法用于向不含字符串或数字值的单元格添加格式。 Excel中\u0026#34;空\u0026#34;单元格和\u0026#34;空白\u0026#34;单元格不同。空单元格不包含数据，空白单元格不包含数据但是却含有格式。Excel存储\u0026#34;空白\u0026#34;单元格但忽略“空”单元格。 像这样，如果你写入的单元格为空且不含格式，它会被忽略： $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, undef, $format ); # write_blank() $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, undef ); # Ignored 这看起来很乏味的事实意味着你可以不用特别处理\u0026#34;undef\u0026#34;和空字符串值写入数组的数据。 write_row( $row, $column, $array_ref, $format ) \u0026#34;write_row()\u0026#34;方法能用于将1维数组或2维数组的数据合为一体。这对于将数据库查询结果转换为Excel工作表很有用。 你必须传递给数组数据一个引用而不是数组本身。\u0026#34;write()\u0026#34; 方法被数据中的每个元素调用，例如： @array = ( \u0026#39;awk\u0026#39;, \u0026#39;gawk\u0026#39;, \u0026#39;mawk\u0026#39; ); $array_ref = \\@array; $worksheet-\u0026gt;write_row( 0, 0, $array_ref ); # The above example is equivalent to: $worksheet-\u0026gt;write( 0, 0, $array[0] ); $worksheet-\u0026gt;write( 0, 1, $array[1] ); $worksheet-\u0026gt;write( 0, 2, $array[2] ); 注意：为方便起见，如果传递的参数是数组引用，则\u0026#34;write()\u0026#34;方法和\u0026#34;write_row()\u0026#34;的行为一样。因此，下面的2种方法调用等价： $worksheet-\u0026gt;write_row( \u0026#39;A1\u0026#39;, $array_ref ); # Write a row of data $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, $array_ref ); # Same thing 正如所有的write方法一样，$format参数是可选的.如果指定了一个格式，它会被应用到数据数组的所有元素上。 数据中的数组引用会被当作列。这允许你一举写入2维数组的数据，例如： @eec = ( [\u0026#39;maggie\u0026#39;, \u0026#39;milly\u0026#39;, \u0026#39;molly\u0026#39;, \u0026#39;may\u0026#39; ], [13, 14, 15, 16 ], [\u0026#39;shell\u0026#39;, \u0026#39;star\u0026#39;, \u0026#39;crab\u0026#39;, \u0026#39;stone\u0026#39;] ); $worksheet-\u0026gt;write_row( \u0026#39;A1\u0026#39;, \\@eec ); 会产生如下的工作表： ----------------------------------------------------------- | | A | B | C | D | E | ... ----------------------------------------------------------- | 1 | maggie | 13 | shell | ... | ... | ... | 2 | milly | 14 | star | ... | ... | ... | 3 | molly | 15 | crab | ... | ... | ... | 4 | may | 16 | stone | ... | ... | ... | 5 | ... | ... | ... | ... | ... | ... | 6 | ... | ... | ... | ... | ... | ... 以行-列顺序写入数据，请参考下面的 \u0026#34;write_col()\u0026#34;方法。 除非对数据应用一种格式，否则数据中的任何\u0026#34;未定义\u0026#34;值将被忽略，这种情况下，一个格式化后的空白单元格会被写入。2种情况下，适当的行和列的值仍然会增加。 当写入数据的元素时，\u0026#34;write_row()\u0026#34; 方法返回出现的第一个错误，如果没有出现错误，返回0。 请查看 \u0026#34;write_arrays.pl\u0026#34; 程序。 \u0026#34;write_row()\u0026#34;方法在文本文件到Excel文件之间允许如下惯用转换： #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;file.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet(); open INPUT, \u0026#39;file.txt\u0026#39; or die \u0026#34;Couldn\u0026#39;t open file: $!\u0026#34;; $worksheet-\u0026gt;write( $. -1, 0, [split] ) while \u0026lt;INPUT\u0026gt;; write_col( $row, $column, $array_ref, $format ) \u0026#34;write_col()\u0026#34;方法能用于一次性地写入一维或二维数组的数据。这对于将数据库查询结果转换为Excel工作表很有用。你必须传递一个数组的引用而非数组本身。 \u0026#34;write()\u0026#34; 方法随后被数据的每个元素调用。 例如， \u0026#34;write_col()\u0026#34;方法能被用于一举写入1维或2维数组的数据。这对于将数据库查询结果转换为Excel工作表很有用。你必须传递给数组数据一个引用而不是数组本身。\u0026#34;write()\u0026#34; 方法随后被数据中的每个元素调用，例如： @array = ( \u0026#39;awk\u0026#39;, \u0026#39;gawk\u0026#39;, \u0026#39;mawk\u0026#39; ); $array_ref = \\@array; $worksheet-\u0026gt;write_col( 0, 0, $array_ref ); # 上面的例子等价于: $worksheet-\u0026gt;write( 0, 0, $array[0] ); $worksheet-\u0026gt;write( 1, 0, $array[1] ); $worksheet-\u0026gt;write( 2, 0, $array[2] ); 正如所有的write方法一样，$format参数是可选的.如果指定了格式，它会被应用到数组所有的元素上。 数据中的数组引用会被当作行来对待。这允许你一举写入2维数组的数据。例如： @eec = ( [\u0026#39;maggie\u0026#39;, \u0026#39;milly\u0026#39;, \u0026#39;molly\u0026#39;, \u0026#39;may\u0026#39; ], [13, 14, 15, 16 ], [\u0026#39;shell\u0026#39;, \u0026#39;star\u0026#39;, \u0026#39;crab\u0026#39;, \u0026#39;stone\u0026#39;] ); $worksheet-\u0026gt;write_col( \u0026#39;A1\u0026#39;, \\@eec ); 会产生如下的工作表： ----------------------------------------------------------- | | A | B | C | D | E | ... ----------------------------------------------------------- | 1 | maggie | milly | molly | may | ... | ... | 2 | 13 | 14 | 15 | 16 | ... | ... | 3 | shell | star | crab | stone | ... | ... | 4 | ... | ... | ... | ... | ... | ... | 5 | ... | ... | ... | ... | ... | ... | 6 | ... | ... | ... | ... | ... | ... 将数据以列-行的顺序写入请查看上面的\u0026#34;write_row()\u0026#34;方法。 除非对数据应用一种格式，否则数据中的任何\u0026#34;未定义\u0026#34;值将被忽略，这种情况下，一个格式化后的空白单元格会被写入。2种情况下，适当的行和列的值仍然会增加。 就如上面所说的，\u0026#34;write()\u0026#34; 方法能被用作 \u0026#34;write_row()\u0026#34; 的同义词，并且 \u0026#34;write_row()\u0026#34;方法将嵌套的数组引用当作列. 所以，下面的2个方法调用是等价的，尽管对\u0026#34;write_col()\u0026#34;更清楚的调用可维护性更好。 $worksheet-\u0026gt;write_col( \u0026#39;A1\u0026#39;, $array_ref ); # Write a column of data $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, [ $array_ref ] ); # Same thing 当写入数据的元素时，\u0026#34;write_col()\u0026#34; 方法返回出现的第一个错误，如果没有出现错误，返回0。 查看上面的“write”方法描述的返回值。 也请查看 \u0026#34;write_arrays.pl\u0026#34;程序。 write_date_time( $row, $col, $date_string, $format ) \u0026#34;write_date_time()\u0026#34; 方法能用于向指定行列的单元格里写入日期或时间： $worksheet-\u0026gt;write_date_time( \u0026#39;A1\u0026#39;, \u0026#39;2004-05-13T23:20\u0026#39;, $date_format ); $date_string 应该是下列的格式: yyyy-mm-ddThh:mm:ss.sss 它遵守ISO8601日期但是应该注意的是不支持全部范围内的ISO8601格式。 下面的变更的$date_string 参数是允许的： yyyy-mm-ddThh:mm:ss.sss # Standard format yyyy-mm-ddT # No time Thh:mm:ss.sss # No date yyyy-mm-ddThh:mm:ss.sssZ # Additional Z (but not time zones) yyyy-mm-ddThh:mm:ss # No fractional seconds yyyy-mm-ddThh:mm # No seconds 注意\u0026#34;T\u0026#34;在所有情况下是必须的。 日期应该一直有个$format格式，否则他会以数字形式出现。这里是典型的例子： my $date_format = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mm/dd/yy\u0026#39; ); $worksheet-\u0026gt;write_date_time( \u0026#39;A1\u0026#39;, \u0026#39;2004-05-13T23:20\u0026#39;, $date_format ); 对于1900纪元，合法的日期应该在1900-01-01到9999-12-31之间，而对于1904纪元，合法的日期是1904-01-01 到 9999-12-31。对于Excel，超出这些范围的日期会被当作字符串写入。 请查看 date_time.pl程序。 write_url( $row, $col, $url, $format, $label ) 将URL的超链接写入由行和列指定的单元格中。超链接由2部分组成：可见的标记和不可见的链接。可见的标记与链接一样，除非指定了可替换的标记。$label参数是可选的。标记由\u0026#34;write()\u0026#34;方法写入。因此，可以将字符串、数字或公式作为标记。 $format参数也是可选的，然而，没有格式的话，链接就不像一个格式了。 建议的格式是: my $format = $workbook-\u0026gt;add_format( color =\u0026gt; \u0026#39;blue\u0026#39;, underline =\u0026gt; 1 ); 注意，如果用户没有指定一种格式，该行为与Spreadsheet::WriteExcel提供的默认的超链接格式不同。 支持4种web风格的URI \u0026#34;http://\u0026#34;, \u0026#34;https://\u0026#34;, \u0026#34;ftp://\u0026#34; 和 \u0026#34;mailto:\u0026#34;: $worksheet-\u0026gt;write_url( 0, 0, \u0026#39;ftp://www.perl.org/\u0026#39;, $format ); $worksheet-\u0026gt;write_url( 1, 0, \u0026#39;http://www.perl.com/\u0026#39;, $format, \u0026#39;Perl\u0026#39; ); $worksheet-\u0026gt;write_url( \u0026#39;A3\u0026#39;, \u0026#39;http://www.perl.com/\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A4\u0026#39;, \u0026#39;mailto:jmcnamara@cpan.org\u0026#39;, $format ); There are two local URIs supported: \u0026#34;internal:\u0026#34; and \u0026#34;external:\u0026#34;. These are used for hyperlinks to internal worksheet references or external workbook and worksheet references: 支持2种本地URLs：\u0026#34;internal:\u0026#34; 和 \u0026#34;external:。这些用于内部工作表引用的超链接或外部工作簿或工作表的引用： $worksheet-\u0026gt;write_url( \u0026#39;A6\u0026#39;, \u0026#39;internal:Sheet2!A1\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A7\u0026#39;, \u0026#39;internal:Sheet2!A1\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A8\u0026#39;, \u0026#39;internal:Sheet2!A1:B2\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A9\u0026#39;, q{internal:\u0026#39;Sales Data\u0026#39;!A1}, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A10\u0026#39;, \u0026#39;external:c:\\temp\\foo.xlsx\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A11\u0026#39;, \u0026#39;external:c:\\foo.xlsx#Sheet2!A1\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A12\u0026#39;, \u0026#39;external:..\\foo.xlsx\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A13\u0026#39;, \u0026#39;external:..\\foo.xlsx#Sheet2!A1\u0026#39;, $format ); $worksheet-\u0026gt;write_url( \u0026#39;A13\u0026#39;, \u0026#39;external:\\\\\\\\NET\\share\\foo.xlsx\u0026#39;, $format ); 典型的工作表引用形式是\u0026#34;Sheet1!A1\u0026#34;。你可以使用标准的Excel表示法\u0026#34;Sheet1!A1:B2\u0026#34;来指定工作表范围。 In external links the workbook and worksheet name must be separated by the \u0026#34;#\u0026#34; character: \u0026#34;external:Workbook.xlsx#Sheet1!A1\u0026#39;\u0026#34;. 外部链接中，工作簿和工作表的名字必须用\u0026#34;#\u0026#34;隔开：\u0026#34;external:Workbook.xlsx#Sheet1!A1\u0026#39;\u0026#34; You can also link to a named range in the target worksheet. 例如， say you have a named range called \u0026#34;my_name\u0026#34; in the workbook \u0026#34;c:\\temp\\foo.xlsx\u0026#34; you could link to it as follows: 你也可以链接到目标工作表中的一个命名值域上。例如，比如在\u0026#34;c:\\temp\\foo.xlsx\u0026#34;工作簿中你有一个具名的值域叫做\u0026#34;my_name\u0026#34;，你可以按下面的方法链接到它。 $worksheet-\u0026gt;write_url( \u0026#39;A14\u0026#39;, \u0026#39;external:c:\\temp\\foo.xlsx#my_name\u0026#39; ); Excel要求包含空格或非字母字符的工作表名要用单引号引起来，如下\u0026#34;\u0026#39;Sales Data\u0026#39;!A1\u0026#34;。如果你使用单引号引起的字符串作工作表名，你需要使用\\\u0026#39;转义单引号，或使用q{}。 也支持到网络文件的链接。MS/Novell 网络文件一般以2个反斜杠开头，形如\u0026#34;\\\\NETWORK\\etc\u0026#34;。为了在单引号或双引号字符串中生成这样的网络名，需要转义反斜杠，\u0026#39;\\\\\\\\NETWORK\\etc\u0026#39;. 如果你使用双引号字符串，你应该注意转义任何看起来像元字符的字符。更多信息，查看Perlfaq5：为什么不能在DOS路径中使用 \u0026#34;C:\\temp\\foo\u0026#34; in DOS paths?\u0026#34;。 最后，你可以使用左斜杠来避免大部分引号问题。左斜杠在内部被转换成反斜杠： $worksheet-\u0026gt;write_url( \u0026#39;A14\u0026#39;, \u0026#34;external:c:/temp/foo.xlsx\u0026#34; ); $worksheet-\u0026gt;write_url( \u0026#39;A15\u0026#39;, \u0026#39;external://NETWORK/share/foo.xlsx\u0026#39; ); write_formula( $row, $column, $formula, $format, $value ) 将公式或函数写入由行和列指定的单元格中。 $worksheet-\u0026gt;write_formula( 0, 0, \u0026#39;=$B$3 + B4\u0026#39; ); $worksheet-\u0026gt;write_formula( 1, 0, \u0026#39;=SIN(PI()/4)\u0026#39; ); $worksheet-\u0026gt;write_formula( 2, 0, \u0026#39;=SUM(B1:B5)\u0026#39; ); $worksheet-\u0026gt;write_formula( \u0026#39;A4\u0026#39;, \u0026#39;=IF(A3\u0026gt;1,\u0026#34;Yes\u0026#34;, \u0026#34;No\u0026#34;)\u0026#39; ); $worksheet-\u0026gt;write_formula( \u0026#39;A5\u0026#39;, \u0026#39;=AVERAGE(1, 2, 3, 4)\u0026#39; ); $worksheet-\u0026gt;write_formula( \u0026#39;A6\u0026#39;, \u0026#39;=DATEVALUE(\u0026#34;1-Jan-2001\u0026#34;)\u0026#39; ); 同样也支持数组公式: $worksheet-\u0026gt;write_formula( \u0026#39;A7\u0026#39;, \u0026#39;{=SUM(A1:B1*A2:B2)}\u0026#39; ); 如果需要，可以指定公式的计算结果。当与不能计算公式值的非Excel应用程序一起工作时，这偶尔需要。计算过的$value值被添加在参数列表的末尾： $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=2+2\u0026#39;, $format, 4 ); write_array_formula($first_row, $first_col, $last_row, $last_col, $formula, $format, $value) 将数组公式写入到一个单元格值域中。在Excel中一个数组公式就是在一组值上执行计算的公式。它可以返回单个值或一个值域。 公式两边的一对花括号表明这是一个数组公式：\u0026#34;{=SUM(A1:B1*A2:B2)}\u0026#34;。如果数组公式返回单个值，则$first_ 和 $last_ 参数应该一样： $worksheet-\u0026gt;write_array_formula(\u0026#39;A1:A1\u0026#39;, \u0026#39;{=SUM(B1:C1*B2:C2)}\u0026#39;); 此种情况下仅仅使用\u0026#34;write_formula()\u0026#34;或 \u0026#34;write()\u0026#34;方法更容易些： # 和上面的一样，但是更简洁： $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;{=SUM(B1:C1*B2:C2)}\u0026#39; ); $worksheet-\u0026gt;write_formula( \u0026#39;A1\u0026#39;, \u0026#39;{=SUM(B1:C1*B2:C2)}\u0026#39; ); For array formulas that return a range of values you must specify the range that the return values will be written to: $worksheet-\u0026gt;write_array_formula( \u0026#39;A1:A3\u0026#39;, \u0026#39;{=TREND(C1:C3,B1:B3)}\u0026#39; ); $worksheet-\u0026gt;write_array_formula( 0, 0, 2, 0, \u0026#39;{=TREND(C1:C3,B1:B3)}\u0026#39; ); 如果需要，可以指定公式的计算结果。当与不能计算公式值的非Excel应用程序一起工作时，这偶尔需要。计算过的$value值被添加在参数列表的末尾： $worksheet-\u0026gt;write_array_formula( \u0026#39;A1:A3\u0026#39;, \u0026#39;{=TREND(C1:C3,B1:B3)}\u0026#39;, $format, 105 ); 此外，一些Excel2007的早期版本没有提供数组公式，所以它们不计算数组公式的值。安装最新的Office Service Pack可以修复该问题。 查看 \u0026#34;array_formula.pl\u0026#34; 程序。 注意：Spreadsheet::WriteExcel不支持数组公式。 store_formula( $formula ) 不宜使用。这是一个Spreadsheet::WriteExcel 方法，Excel::Writer::XLSX已经不在需要了。看下面。 repeat_formula( $row, $col, $formula, $format ) 不宜使用。这是一个Spreadsheet::WriteExcel 方法，Excel::Writer::XLSX.已经不在需要了。 在 Spreadsheet::WriteExcel中写入公式其计算是昂贵的，因为它们由递归下降的解释器解析。 \u0026#34;store_formula()\u0026#34; 和 \u0026#34;repeat_formula()\u0026#34; 方法再利用预解析公式作为避免重复公式的系统开销的方法之一。 在Excel::Writer::XLSX中，这不再需要，因为写入公式就像写入字符串和数字一样快。 The methods remain for backward compatibility but new Excel::Writer::XLSX programs shouldn\u0026#39;t use them. 以上方法向后兼容，但是新的Excel::Writer::XLSX 不能使用它们。 write_comment( $row, $column, $string, ... ) \u0026#34;write_comment()\u0026#34; 方法用于向单元格中写入注释。 单元格中的注释由Excel单元格右上角的小红色三角标注。将光标移到红色三角上将显示注释。 下面的例子显式了如何在单元格中添加注释： $worksheet-\u0026gt;write ( 2, 2, \u0026#39;Hello\u0026#39; ); $worksheet-\u0026gt;write_comment( 2, 2, \u0026#39;This is a comment.\u0026#39; ); 通常，你可以用一个\u0026#34;A1\u0026#34;单元格引用代替 $row 和 $column 参数： $worksheet-\u0026gt;write ( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;); $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;This is a comment.\u0026#39; ); \u0026#34;write_comment()\u0026#34; 方法也处理UTF-8格式的字符串。 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#34;\\x{263a}\u0026#34; ); # Smiley $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Comment ca va?\u0026#39; ); 除了基本的3个参数形式的\u0026#34;write_comment()\u0026#34;，你可以传递几对可选的 键值对来控制注释的格式： $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 1, author =\u0026gt; \u0026#39;Perl\u0026#39; ); 这些选项的大多数很特别，并且通常默认的注释行为就是你想要的。然而，如果你需要对单元格注释更好的控制，那下面的选项可以使用： author visible x_scale width y_scale height color start_cell start_row start_col x_offset y_offset Option: author 该选项用于表明谁是该单元格注释的作者。Excel在工作表底部的状态条栏中显式注释的作者。 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Atonement\u0026#39;, author =\u0026gt; \u0026#39;Ian McEwan\u0026#39; ); 所有的单元格注释默认的作者能使用 \u0026#34;set_comments_author()\u0026#34;方法设置，看下面： $worksheet-\u0026gt;set_comments_author( \u0026#39;Perl\u0026#39; ); Option: visible 该选项能用于当打开工作表时，使单元格注释可见。Excel中默认的行为是注释被隐藏。然而，在Excel中也可以使单个注释或所有注释可见。在Excel::Writer::XLSX中，可以按下面的方法使单个注释可见： $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 1 ); 使用\u0026#34;show_comments()\u0026#34; 工作表方法（看下面）可使工作表中的所有注释可见。 相应地，如果所有的单元格注释都可见了，你可以隐藏单个注释： $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 0 ); Option: x_scale This option is used to set the width of the cell comment box as a factor of the default width. 该选项用于设置单元格注释框的宽度： $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, x_scale =\u0026gt; 2 ); $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Hello\u0026#39;, x_scale =\u0026gt; 4.2 ); Option: width 该选项用于设置单元格注释框的宽度，以像素表示 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, width =\u0026gt; 200 ); Option: y_scale This option is used to set the height of the cell comment box as a factor of the default height. 该选项用于设置单元格注释框的高度： $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, y_scale =\u0026gt; 2 ); $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Hello\u0026#39;, y_scale =\u0026gt; 4.2 ); Option: height This option is used to set the height of the cell comment box explicitly in pixels. 该选项用于设置单元格注释框的高度，以像素表示 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, height =\u0026gt; 200 ); Option: color 该选项用于设置单元格注释框的背景色。你可以使用Excel::Writer::XLSX 可识别的具名颜色或颜色索引。 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, color =\u0026gt; \u0026#39;green\u0026#39; ); $worksheet-\u0026gt;write_comment( \u0026#39;C4\u0026#39;, \u0026#39;Hello\u0026#39;, color =\u0026gt; 0x35 ); # Orange Option: start_cell 该选项用于设置注释将出现在哪个单元格。By default Excel displays comments one cell to the right and one cell above the cell to which the comment relates. 然而，你可以改变它的默认行为，如果你愿意的话。在下面的例子中，默认会在单元格“D2”中出现的注释会移动到“E2”中。 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, start_cell =\u0026gt; \u0026#39;E2\u0026#39; ); 2011-12-5 Option: start_row 该选项用于设置注释将会出现在哪一行。行从0开始索引。 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, start_row =\u0026gt; 0 ); Option: start_col 该选项用于设置注释将会在哪一列出现。列从0开始索引。 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, start_col =\u0026gt; 4 ); Option: x_offset This option is used to change the x offset, in pixels, of a comment within a cell: 该选项用于改变单元格中注释的x轴方向的偏移量，以像素计算。 $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, $comment, x_offset =\u0026gt; 30 ); Option: y_offset This option is used to change the y offset, in pixels, of a comment within a cell: 该选项用于改变单元格中注释的y轴方向的偏移量，以像素计算。 $worksheet-\u0026gt;write_comment(\u0026#39;C3\u0026#39;, $comment, x_offset =\u0026gt; 30); 注意，使用诸如start_cell, start_row, start_col, x_offset 和 y_offset的选项调整单元格注释位置：Excel仅仅在单元格可见时才显示单元格注释的偏移量。当你把鼠标移到它们上面时，Excel不显示隐藏的单元格。 注意行高和注释。如果你指定含有注释的单元格的行高，则Excel::Writer::XLSX会调整注释的高度以保持默认高度或用户指定的尺寸。然而，如果设置了文本框属性或在单元格中使用了很大的字体，Excel会自动调整行高。这意味着行高对于运行时的模块是未知的，因此注释框随着行一起扩展。使用 \u0026#34;set_row()\u0026#34;方法显式地指定行高来避免这个问题。 show_comments() 该方法用于当打开工作表时，让所有单元格注释可见 $worksheet-\u0026gt;show_comments(); 使用\u0026#34;write_comment\u0026#34;方法的\u0026#34;visible\u0026#34;参数能使单个的注释可见（看下面）： $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 1 ); 如果所有的单元格注释都可见了，你可以按下面的方法隐藏单个注释： $worksheet-\u0026gt;show_comments(); $worksheet-\u0026gt;write_comment( \u0026#39;C3\u0026#39;, \u0026#39;Hello\u0026#39;, visible =\u0026gt; 0 ); set_comments_author() 该方法用于设置单元格注释的默认作者。 $worksheet-\u0026gt;set_comments_author( \u0026#39;Perl\u0026#39; ); 使用\u0026#34;write_comment\u0026#34;方法的\u0026#34;author\u0026#34;参数设置单个注释的作者（看上面）。 如果没有指定作者，默认的注释作者是空字符串,\u0026#39;\u0026#39;. add_write_handler( $re, $code_ref ) 该方法用于扩展 Excel::Writer::XLSX 的\u0026#34;write()\u0026#34;方法来处理用户定义的数据。 如果你查看上面章节的\u0026#34;write()\u0026#34;方法，你会发现它是几个更特殊的\u0026#34;write_*\u0026#34;方法的别名。然而，它并不总是如你所愿地正确。 一种方法是你自己过滤输入数据并调用合适的 \u0026#34;write_*\u0026#34; 方法。 另一种方法是使用\u0026#34;add_write_handler()\u0026#34;方法把你自己的自动化行为添加到\u0026#34;write()\u0026#34;方法中。 \u0026#34;add_write_handler()\u0026#34; 有2个参数，$re,一个匹配输入数据的正则表达式； 还有$code_ref，一个回调函数，来处理匹配后的数据： $worksheet-\u0026gt;add_write_handler( qr/^\\d\\d\\d\\d$/, \\\u0026amp;my_write ); (在这些例子中\u0026#34;qr\u0026#34;操作符用于引起正则表达式字符串). 该方法使用如下。假如你想写入7个数字的ID号作为字符串并保留任何前导0，你可以按下面的做： $worksheet-\u0026gt;add_write_handler( qr/^\\d{7}$/, \\\u0026amp;write_my_id ); sub write_my_id { my $worksheet = shift; return $worksheet-\u0026gt;write_string( @_ ); } * 你也可以使用\u0026#34;keep_leading_zeros()\u0026#34;方法. 然后，如果你使用一个合适的字符串调用\u0026#34;write()\u0026#34;方法，它会被自动处理： # 写入 0000000.正常地，它会被写作数字0： $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;0000000\u0026#39; ); 回调函数会接受一个对被调用工作表的引用，并且其它所有的参数被传递给\u0026#34;write()\u0026#34;.回调函数会看到如下所示的@_参数列表： $_[0] A ref to the calling worksheet. * $_[1] Zero based row number. $_[2] Zero based column number. $_[3] A number or string or token. $_[4] A format ref if any. $_[5] Any other arguments. ... * It is good style to shift this off the list so the @_ is the same as the argument list seen by write(). 你的回调函数应该使用\u0026#34;return()\u0026#34;返回\u0026#34;write_*\u0026#34; 方法的返回值， 或返回“undef”来表明你拒绝了匹配并且想让\u0026#34;write()\u0026#34;方法正常继续。 So 例如， if you wished to apply the previous filter only to ID values that occur in the first column you could modify your callback function as follows: 所以，例如，如果你想把前面的过滤只应用到出现在第一列的ID值上，你可以按照下面修改你的回调函数： sub write_my_id { my $worksheet = shift; my $col = $_[1]; if ( $col == 0 ) { return $worksheet-\u0026gt;write_string( @_ ); } else { # Reject the match and return control to write() return undef; } } Now, you will get different behaviour for the first column and other columns: 现在，你会在、第一列和其它列上得到不同的行为： $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;0000000\u0026#39; ); # Writes 0000000 $worksheet-\u0026gt;write( \u0026#39;B1\u0026#39;, \u0026#39;0000000\u0026#39; ); # Writes 0 你可以添加多个处理程序，此时它们会按照被添加的顺序调用。 注意，\u0026#34;add_write_handler()\u0026#34;特别适合处理数据。 查看 \u0026#34;write_handler 1-4\u0026#34; 程序。 insert_image( $row, $col, $filename, $x, $y, $scale_x, $scale_y ) 部分支持。目前只对96像素的图像有效。这会在下次发布中修复。 该方法用于向工作表中插入图像。图像格式可以是PNG, JPEG 或 BMP。 $x, $y, $scale_x 和 $scale_y 参数是可选的。 $worksheet1-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;perl.bmp\u0026#39; ); $worksheet2-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;../images/perl.bmp\u0026#39; ); $worksheet3-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;.c:\\images\\perl.bmp\u0026#39; ); $x 和 $y参数可以用于指定到由$row和$col指定的单元格的左上角的偏移量。偏移量值以像素计算： $worksheet1-\u0026gt;insert_image(\u0026#39;A1\u0026#39;, \u0026#39;perl.bmp\u0026#39;, 32, 10); 偏移量可以比图像下面的单元格的高度或宽度大。如果你想在同一个单元格中对齐一个或多个图像，这偶尔会有用。 参数$scale_x 和 $scale_y能用于水平和垂直地测量插入的图片： # Scale the inserted image: width x 2.0, height x 0.8 $worksheet-\u0026gt;insert_image( \u0026#39;A1\u0026#39;, \u0026#39;perl.bmp\u0026#39;, 0, 0, 2, 0.8 ); 查看那\u0026#34;images.pl\u0026#34; 程序。 注意：如果你想改变图像所占的任一行或列的默认尺寸，你必须在\u0026#34;insert_image()\u0026#34;之前调用\u0026#34;set_row()\u0026#34; 或 \u0026#34;set_column()\u0026#34;。 如果你使用的字体比默认的大，行的高度也会改变。这反过来也会影响你图像的尺寸。你应该使用\u0026#34;set_row()\u0026#34;显式地设置行高来避免这个问题，如果它包含了会改变行高的字体大小。 BMP图像应该是24比特，颜色为真彩，位图。通常，最好应避使用BMP图像，因为它们没有被压缩。 insert_chart( $row, $col, $chart, $x, $y, $scale_x, $scale_y ) 该方法用于向工作表中插入一个图表对象。图表必须由\u0026#34;add_chart()\u0026#34;工作表方法创建，并且它必须设置了 \u0026#34;embedded\u0026#34;选项。 my $chart = $workbook-\u0026gt;add_chart( type =\u0026gt; \u0026#39;line\u0026#39;, embedded =\u0026gt; 1 ); # Configure the chart. ... # Insert the chart into the a worksheet. $worksheet-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart ); 查看\u0026#34;add_chart()\u0026#34; 获取关于怎样创建图表对象的细节， 查看Excel::Writer::XLSX::Chart获取关于怎样配置图表的细节。查看\u0026#34;chart_*.pl\u0026#34;程序。 $x, $y, $scale_x 和 $scale_y 参数是可选的 。 $x 和 $y 能用于指定到由$row和$col指定的单元格左上角的偏移量，偏移量值以像素计算。 $worksheet1-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart, 3, 3 ); 参数$scale_x 和 $scale_y能用于从水平方向和垂直方向测量图像： # Scale the width by 120% and the height by 150% $worksheet-\u0026gt;insert_chart( \u0026#39;E2\u0026#39;, $chart, 0, 0, 1.2, 1.5 ); data_validation() \u0026#34;data_validation()\u0026#34;方法用于构建Excel数据检验或限制用户输入到一个下拉列表中 $worksheet-\u0026gt;data_validation(\u0026#39;B3\u0026#39;, { validate =\u0026gt; \u0026#39;integer\u0026#39;, #验证 criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, #标准 value =\u0026gt; 100, #值 }); $worksheet-\u0026gt;data_validation(\u0026#39;B5:B9\u0026#39;, { validate =\u0026gt; \u0026#39;list\u0026#39;, value =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;], }); 该方法包含很多参数，并在单独的章节“DATA VALIDATION IN EXCEL”中有详细描述。 查看\u0026#34;data_validate.pl\u0026#34; 程序。 conditional_format() \u0026#34;conditional_format()\u0026#34; 方法用于向单元格或基于用户自定义标准的单元格范围中添加格式 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:J10\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;=\u0026#39;, value =\u0026gt; 50, format =\u0026gt; $format1, } ); 该方法包含很多参数，并在单独的章节“CONDITIONAL FORMATTING IN EXCEL”中有详细描述 查看\u0026#34;conditional_format.pl\u0026#34;程序。 get_name() \u0026#34;get_name()\u0026#34; 方法用于检索工作表的名字。例如： for my $sheet ( $workbook-\u0026gt;sheets() ) { print $sheet-\u0026gt;get_name(); } 由于Excel::Writer::XLSX的设计和Excel的内部原因，没有设计\u0026#34;set_name()\u0026#34; 方法。 设置工作表名字的唯一方法是通过\u0026#34;add_worksheet()\u0026#34;方法。 activate() \u0026#34;activate()\u0026#34;方法用于指定在一个含有多个工作表的工作簿中，哪一个工作表是初始可见的： $worksheet1 = $workbook-\u0026gt;add_worksheet( \u0026#39;To\u0026#39; ); $worksheet2 = $workbook-\u0026gt;add_worksheet( \u0026#39;the\u0026#39; ); $worksheet3 = $workbook-\u0026gt;add_worksheet( \u0026#39;wind\u0026#39; ); $worksheet3-\u0026gt;activate(); 这与Excel VBA的active方法相似。可以通过\u0026#34;select()\u0026#34;方法选取多张工作表。 看下面，然而，只有一张工作表是激活的。 第一张工作表默认是激活的。 select() \u0026#34;select()\u0026#34;方法用于表明从含有多张工作表的工作簿中选取一张： $worksheet1-\u0026gt;activate(); $worksheet2-\u0026gt;select(); $worksheet3-\u0026gt;select(); 被选中的工作表的标签是高亮的。选取多张工作表是把它们组合在一块的一种方法，所以，例如，可以一举打印多张工作表。通过\u0026#34;activate()\u0026#34;方法被激活的工作表也会被选中。 hide() \u0026#34;hide()\u0026#34; 方法用于隐藏一个工作表： $worksheet2-\u0026gt;hide(); 为了避免使用中间数据或计算结果迷惑用户，你可能想要隐藏一个工作表 一个隐藏的工作表不能被激活或被选中，所以该方法与\u0026#34;activate()\u0026#34; 和 \u0026#34;select()\u0026#34;是互相排斥的。此外，因为第一张工作表默认是被选中的，你不能不激活另外的工作表而隐藏第一张工作表： $worksheet2-\u0026gt;activate(); $worksheet1-\u0026gt;hide(); set_first_sheet() \u0026#34;activate()\u0026#34;方法决定首先选择哪一张工作表。然而，如果有很多张工作表，被选中的工作表可能不会出现在屏幕上。你可以使用\u0026#34;set_first_sheet()\u0026#34;方法选择最左端可见的工作表来避免： for ( 1 .. 20 ) { $workbook-\u0026gt;add_worksheet; } $worksheet21 = $workbook-\u0026gt;add_worksheet(); $worksheet22 = $workbook-\u0026gt;add_worksheet(); $worksheet21-\u0026gt;set_first_sheet(); $worksheet22-\u0026gt;activate(); 该方法不是经常需要。默认值是第一张工作表。 protect( $password, \\%options ) \u0026#34;protect()\u0026#34; 方法用于防止工作表被修改： $worksheet-\u0026gt;protect(); \u0026#34;protect()\u0026#34;方法也会对开启单元格的\u0026#34;locked\u0026#34;和\u0026#34;hidden\u0026#34;属性有影响，如果设置了单元格的\u0026#34;locked\u0026#34;和\u0026#34;hidden\u0026#34;属性的话。一个*locked*的单元格不能够被编辑，并且该属性默认对所有单元格是开启的。一个隐藏的单元格会显示公式的结果但不是公式本身。 查看\u0026#34;protection.pl\u0026#34; 程序和\u0026#34;CELL FORMATTING\u0026#34; 方法的\u0026#34;set_locked\u0026#34; 和 \u0026#34;set_hidden\u0026#34;格式方法。 你可以选择性地添加一个密码到工作表中： $worksheet-\u0026gt;protect( \u0026#39;drowssap\u0026#39; ); 传递一个空字符串\u0026#39;\u0026#39;和开启没有密码的保护一样。 注意：Excel中工作表级别的密码提供的保护很脆弱。它没有加密你的数据并且很容易被撤销。\u0026#34;Excel::Writer::XLSX\u0026#34;不支持完全的工作表加密，因为它需要一种完全不同的文件格式并且需要花费几个人数月的时间才能实现。 你可以传递一个带有任何一个或全部如下所示键值的散列引用来指定你想保护哪个工作表元素： # Default shown. %options = ( objects =\u0026gt; 0, scenarios =\u0026gt; 0, format_cells =\u0026gt; 0, format_columns =\u0026gt; 0, format_rows =\u0026gt; 0, insert_columns =\u0026gt; 0, insert_rows =\u0026gt; 0, insert_hyperlinks =\u0026gt; 0, delete_columns =\u0026gt; 0, delete_rows =\u0026gt; 0, select_locked_cells =\u0026gt; 1, sort =\u0026gt; 0, autofilter =\u0026gt; 0, pivot_tables =\u0026gt; 0, select_unlocked_cells =\u0026gt; 1, ); 上面显示的是默认的布尔值。单个元素的保护可以使用下面的方法： $worksheet-\u0026gt;protect( \u0026#39;drowssap\u0026#39;, { insert_rows =\u0026gt; 1 } ); set_selection( $first_row, $first_col, $last_row, $last_col ) This method can be used to specify which cell or cells are selected in a worksheet. The most common requirement is to select a single cell, in which case $last_row and $last_col can be omitted. The active cell within a selected range is determined by the order in which $first and $last are specified. It is also possible to specify a cell or a range using A1 notation. 该方法用于指定在一张工作表中选择哪个或哪些单元格。最常见的需求是选择一个单元格，此时$last_row 和 $last_col 可以省略。在选区内的激活单元格由指定的$first and $last 的顺序决定。也可以使用A1表示法指定单元格或一个范围。 Examples: $worksheet1-\u0026gt;set_selection( 3, 3 ); # 1. Cell D4. $worksheet2-\u0026gt;set_selection( 3, 3, 6, 6 ); # 2. Cells D4 to G7. $worksheet3-\u0026gt;set_selection( 6, 6, 3, 3 ); # 3. Cells G7 to D4. $worksheet4-\u0026gt;set_selection( \u0026#39;D4\u0026#39; ); # Same as 1. $worksheet5-\u0026gt;set_selection( \u0026#39;D4:G7\u0026#39; ); # Same as 2. $worksheet6-\u0026gt;set_selection( \u0026#39;G7:D4\u0026#39; ); # Same as 3. 默认的单元格选区是(0,0),\u0026#39;A1\u0026#39;. set_row( $row, $height, $format, $hidden, $level, $collapsed ) 该方法用于改变行的默认属性。除$row之外，其它参数都是可选的。 该方法最普通的用法是更改行高： $worksheet-\u0026gt;set_row( 0, 20 ); # 第一行的行高改为20 如果你想设置格式时不更改行高，你可以传递\u0026#34;undef\u0026#34;作为行高参数： $worksheet-\u0026gt;set_row( 0, undef, $format ); $format参数可以被应用到行中任何没有格式的单元格上，例如： $worksheet-\u0026gt;set_row( 0, undef, $format1 ); # Set the format for row 1 $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; ); # Defaults to $format1 $worksheet-\u0026gt;write( \u0026#39;B1\u0026#39;, \u0026#39;Hello\u0026#39;, $format2 ); # Keeps $format2 如果你想用这种方法定义一个行格式，你应该在任何调用\u0026#34;write()\u0026#34;方法的行为之前调用该方法。调用该方法以后会覆盖以前指定的任何格式。 如果想隐藏行，$hidden参数应该设置为1。这被用于，例如，在复杂计算中隐藏中间步骤： $worksheet-\u0026gt;set_row( 0, 20, $format, 1 ); $worksheet-\u0026gt;set_row( 1, undef, undef, 1 ); $level参数用于设置行的分级显示（outline level）。\u0026#34;OUTLINES AND GROUPING IN EXCEL\u0026#34;章节有关于分级显示的描述。有同样分级显示的行会被组合到一块成为一个单一的分级显示。 下面的例子为行1和行2（从0开始索引）设置了分级显示1： $worksheet-\u0026gt;set_row( 1, undef, undef, 0, 1 ); $worksheet-\u0026gt;set_row( 2, undef, undef, 0, 1 ); 当和$level参数一同使用的时候，$hidden参数也能用于隐藏折叠的分级显示行： $worksheet-\u0026gt;set_row( 1, undef, undef, 1, 1 ); $worksheet-\u0026gt;set_row( 2, undef, undef, 1, 1 ); 对于折叠的分级显示，你应该使用可选项$collapsed参数指明哪一行含有折叠符号\u0026#34;+\u0026#34;. $worksheet-\u0026gt;set_row( 3, undef, undef, 0, 0, 1 ); 查看 \u0026#34;outline.pl\u0026#34; 和 \u0026#34;outline_collapsed.pl\u0026#34; 。 Excel允许多大7个分级显示。因此，$level参数应该在范围：\u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;内。 set_column( $first_col, $last_col, $width, $format, $hidden, $level, $collapsed ) 该方法用于改变单一列一定范围的列的默认属性。除了 $first_col 和 $last_col 外，所有参数都是可选的。 如果\u0026#34;set_column()\u0026#34;被应用到单一列， $first_col和 $last_col的值应该一样。 在$last_col是0的情况下，它被设置为与$first_col一样的值。 也可更清晰的使用列的A1表示法来指定列的范围。 例子: $worksheet-\u0026gt;set_column( 0, 0, 20 ); # Column A width set to 20 $worksheet-\u0026gt;set_column( 1, 3, 30 ); # Columns B-D width set to 30 $worksheet-\u0026gt;set_column( \u0026#39;E:E\u0026#39;, 20 ); # Column E width set to 20 $worksheet-\u0026gt;set_column( \u0026#39;F:H\u0026#39;, 30 ); # Columns F-H width set to 30 The width corresponds to the column width value that is specified in Excel. It is approximately equal to the length of a string in the default font of Arial 10. Unfortunately, there is no way to specify \u0026#34;AutoFit\u0026#34; for a column in the Excel file format. This feature is only available at runtime from within Excel. 通常 $format参数是可选的,更多信息,查看\u0026#34;CELL FORMATTING\u0026#34;. 如果你想设置格式时不更改列宽，你可以传递\u0026#34;undef\u0026#34;作为列宽参数： $worksheet-\u0026gt;set_column( 0, 0, undef, $format ); $format参数可以被应用到列中任何没有格式的单元格上，例如： $worksheet-\u0026gt;set_column( \u0026#39;A:A\u0026#39;, undef, $format1 ); # Set format for col 1 $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; ); # Defaults to $format1 $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;Hello\u0026#39;, $format2 ); # Keeps $format2 如果你想用这种方法定义一个列格式，你应该在任何调用\u0026#34;write()\u0026#34;方法的行为之前调用该方法。如果你在调用\u0026#34;write()\u0026#34;方法之后调用该方法，它不会有任何效果。 默认的行格式优于默认的列格式。 $worksheet-\u0026gt;set_row( 0, undef, $format1 ); # Set format for row 1 $worksheet-\u0026gt;set_column( \u0026#39;A:A\u0026#39;, undef, $format2 ); # Set format for col 1 $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Hello\u0026#39; ); # Defaults to $format1 $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;Hello\u0026#39; ); # Defaults to $format2 如果想隐藏列，$hidden参数应该设置为1。这被用于，例如，在复杂计算中隐藏中间步骤： $worksheet-\u0026gt;set_column( \u0026#39;D:D\u0026#39;, 20, $format, 1 ); $worksheet-\u0026gt;set_column( \u0026#39;E:E\u0026#39;, undef, undef, 1 ); $level参数用于设置列的分级显示（outline level）。\u0026#34;OUTLINES AND GROUPING IN EXCEL\u0026#34;章节有关于分级显示的描述。有同样分级显示的列会被组合到一块成为一个单一的分级显示。 下面的例子为从B到G的列设置了分级显示1： $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 0, 1 ); 当和$level参数一同使用的时候，$hidden参数也能用于隐藏折叠的分级显示列： $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 1, 1 ); 对于折叠的分级显示，你应该使用可选项$collapsed参数指明哪一行含有折叠符号\u0026#34;+\u0026#34;. $worksheet-\u0026gt;set_column( \u0026#39;H:H\u0026#39;, undef, undef, 0, 0, 1 ); 查看那outline.pl\u0026#34; 和 \u0026#34;outline_collapsed.pl\u0026#34; 程序获取更详细的描述。 Excel 允许多达7级的分级显示。因此，$level参数应该在范围\u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;内。 outline_settings( $visible, $symbols_below, $symbols_right, $auto_style ) \u0026#34;outline_settings()\u0026#34;方法用于控制Excel中分级显示的出现。分级显示在\u0026#34;OUTLINES AND GROUPING IN EXCEL\u0026#34;中有描述。 $visible参数用于控制分级显示是否可见。将该参数设置为0会导致工作表中所有的分级显示被隐藏。你可以使用\u0026#34;Show Outline Symbols\u0026#34;命令按钮将它们显示出来。默认设置为1，即显示分级。 $worksheet-\u0026gt;outline_settings( 0 ); The $symbols_below parameter is used to control whether the row outline symbol will appear above or below the outline level bar. The default setting is 1 for symbols to appear below the outline level bar. $symbols_below参数用于控制行分级显示标志符是否会出现在分级显示工具条的上方或下面。 默认的设置为1，即标识符出现在分级显示工具条的下面。 \u0026#34;symbols_right\u0026#34;参数用于控制列分级显示标识符是否会出现在分级显示工具条的左侧或右侧。 默认设置为1，即标识符出现在分级显示的右边。 The $auto_style parameter is used to control whether the automatic outline generator in Excel uses automatic styles when creating an outline. This has no effect on a file generated by \u0026#34;Excel::Writer::XLSX\u0026#34; but it does have an effect on how the worksheet behaves after it is created. The default setting is 0 for \u0026#34;Automatic Styles\u0026#34; to be turned off. $auto_style 参数用于控制在Excel中的自动分级显示生成器是否使用自动风格创建分级显示。 由\u0026#34;Excel::Writer::XLSX\u0026#34;生成的文件间没有区别，但是对于创建后工作表如何表现是有区别的。 默认设置为0，即关闭\u0026#34;Automatic Styles\u0026#34; The default settings for all of these parameters correspond to Excel\u0026#39;s default parameters. 所有这种参数的默认设置与Excel的默认参数有关。 由 \u0026#34;outline_settings()\u0026#34;方法控制的工作表参数很少使用。 freeze_panes( $row, $col, $top_row, $left_col ) #冻结窗格 该方法用于将工作表划分为水平或垂直的叫做窗格的区域并且冻结这些窗格以使分隔条不可见。这与Excel中的\u0026#34;窗口-\u0026gt;冻结窗格\u0026#34;菜单命令的作用相同。 The parameters $row and $col are used to specify the location of the split. It should be noted that the split is specified at the top or left of a cell and that the method uses zero based indexing. Therefore to freeze the first row of a worksheet it is necessary to specify the split at row 2 (which is 1 as the zero-based index). This might lead you to think that you are using a 1 based index but this is not the case. $row 和 $col参数用于指定分隔的位置。应该注意的是分隔由单元格的顶部或左边指定，并且该方法使用基于0开始的索引。因此，冻结工作表的第一行，指定第二行（作为基于0的索引时是1）进行分隔是有必要的。这可能导致你认为在使用基于1的索引，但是这不是问题。 You can set one of the $row and $col parameters as zero if you do not want either a vertical or horizontal split. 如果你不需要水平或垂直分隔，你可以将$row和$col参数中的一个设置为0。 例子: $worksheet-\u0026gt;freeze_panes( 1, 0 ); # Freeze the first row $worksheet-\u0026gt;freeze_panes( \u0026#39;A2\u0026#39; ); # Same using A1 notation $worksheet-\u0026gt;freeze_panes( 0, 1 ); # Freeze the first column $worksheet-\u0026gt;freeze_panes( \u0026#39;B1\u0026#39; ); # Same using A1 notation $worksheet-\u0026gt;freeze_panes( 1, 2 ); # Freeze first row and first 2 columns $worksheet-\u0026gt;freeze_panes( \u0026#39;C2\u0026#39; ); # Same using A1 notation The parameters $top_row and $left_col are optional. They are used to specify the top-most or left-most visible row or column in the scrolling region of the panes. 例如， to freeze the first row and to have the scrolling region begin at row twenty: $top_row 和 $left_col参数是可选的。它们用于在窗格的滚动区域中指定可见的最顶端或最左端的行或列。 例如，冻结第一行并让滚动区域从第20行开始： $worksheet-\u0026gt;freeze_panes( 1, 0, 20, 0 ); 对于$top_row 和 $left_col参数，你可以使用A1表示法。 查看那\u0026#34;panes.pl\u0026#34;程序。 split_panes( $y, $x, $top_row, $left_col ) This method can be used to divide a worksheet into horizontal or vertical regions known as panes. This method is different from the \u0026#34;freeze_panes()\u0026#34; method in that the splits between the panes will be visible to the user and each pane will have its own scroll bars. 该方法用于将工作表划分为叫做窗格的水平的或垂直的区域。该方法不同于\u0026#34;freeze_panes()\u0026#34;方法， 它分隔的窗格对用户是可见的，并且每个窗格都有它们自己的滚动条。 The parameters $y and $x are used to specify the vertical and horizontal position of the split. The units for $y and $x are the same as those used by Excel to specify row height and column width. However, the vertical and horizontal units are different from each other. Therefore you must specify the $y and $x parameters in terms of the row heights and column widths that you have set or the default values which are 15 for a row and 8.43 for a column. $y 和 $x 参数用于分隔的水平和垂直位置。 $y和$x的单位与Excel使用的单位一样，用于指定行高和列宽。然而，水平的和垂直的单位不一样。 因此，你必须按照你设置好的行高和列宽来指定$y 和 $x 参数，或者，使用默认值，行高15,列宽8.43. You can set one of the $y and $x parameters as zero if you do not want either a vertical or horizontal split. The parameters $top_row and $left_col are optional. They are used to specify the top-most or left-most visible row or column in the bottom-right pane. 如果你不想水平分隔或垂直分隔，你可以将$y 和 $x参数之一设置为0。top_row 和$left_col参数是可选的，它们用于指定在右底部窗格中的最上或最左的可见行或列。 例子: $worksheet-\u0026gt;split_panes( 15, 0, ); # First row $worksheet-\u0026gt;split_panes( 0, 8.43 ); # First column $worksheet-\u0026gt;split_panes( 15, 8.43 ); # First row and column 该方法可以使用A1表示法。 查看 \u0026#34;freeze_panes()\u0026#34;方法和 \u0026#34;panes.pl\u0026#34;程序。 merge_range( $first_row, $first_col, $last_row, $last_col, $token, $format ) The \u0026#34;merge_range()\u0026#34; method allows you merge cells that contain other types of alignment in addition to the merging: \u0026#34;merge_range()\u0026#34;方法允许你合并含有其它对齐方式（除了合并）的单元格： my $format = $workbook-\u0026gt;add_format( border =\u0026gt; 6, valign =\u0026gt; \u0026#39;vcenter\u0026#39;, align =\u0026gt; \u0026#39;center\u0026#39;, ); $worksheet-\u0026gt;merge_range( \u0026#39;B3:D4\u0026#39;, \u0026#39;Vertical and horizontal\u0026#39;, $format ); \u0026#34;merge_range()\u0026#34;方法使用工作表的\u0026#34;write()\u0026#34;方法写入它的$token参数。因此，它会按要求处理数字，字符串，公式或urls。如果你想指定要求的\u0026#34;write_*\u0026#34;方法，使用 \u0026#34;merge_range_type()\u0026#34;方法，看下面。 查看\u0026#34;merge3.pl\u0026#34;到\u0026#34;merge6.pl\u0026#34;获取该方法完全的信息。 merge_range_type( $type, $first_row, $first_col, $last_row, $last_col, ... ) The \u0026#34;merge_range()\u0026#34; method, see above, uses \u0026#34;write()\u0026#34; to insert the required data into to a merged range. However, there may be times where this isn\u0026#39;t what you require so as an alternative the \u0026#34;merge_range_type ()\u0026#34; method allows you to specify the type of data you wish to write. For example: \u0026#34;merge_range()\u0026#34;方法，看上面，使用\u0026#34;write()\u0026#34;向合并的区域中插入需要的数据。然而，有时这可能不是你想要的，所以作为选择，\u0026#34;merge_range_type()\u0026#34;方法允许你指定你想写入的数据类型。比如： $worksheet-\u0026gt;merge_range_type( \u0026#39;number\u0026#39;, \u0026#39;B2:C2\u0026#39;, 123, $format1 ); $worksheet-\u0026gt;merge_range_type( \u0026#39;string\u0026#39;, \u0026#39;B4:C4\u0026#39;, \u0026#39;foo\u0026#39;, $format2 ); $worksheet-\u0026gt;merge_range_type( \u0026#39;formula\u0026#39;, \u0026#39;B6:C6\u0026#39;, \u0026#39;=1+2\u0026#39;, $format3 ); The $type must be one of the following, which corresponds to a \u0026#34;write_*()\u0026#34; method: $type必须是下面的之一，与 \u0026#34;write_*()\u0026#34;方法相对： \u0026#39;number\u0026#39; \u0026#39;string\u0026#39; \u0026#39;formula\u0026#39; \u0026#39;array_formula\u0026#39; \u0026#39;blank\u0026#39; \u0026#39;rich_string\u0026#39; \u0026#39;date_time\u0026#39; \u0026#39;url\u0026#39; Any arguments after the range should be whatever the appropriate method accepts: 任何在这范围之后的参数应该是任何合适的方法可接受的： $worksheet-\u0026gt;merge_range_type( \u0026#39;rich_string\u0026#39;, \u0026#39;B8:C8\u0026#39;, \u0026#39;This is \u0026#39;, $bold, \u0026#39;bold\u0026#39;, $format4 ); Note, you must always pass a $format object as an argument, even if it is a default format. 注意，你必须一直传递一个$format对象作为参数，即使它是一个默认的格式。 set_zoom( $scale ) Set the worksheet zoom factor in the range \u0026#34;10 \u0026lt;= $scale \u0026lt;= 400\u0026#34;: 在范围\u0026#34;10 \u0026lt;= $scale \u0026lt;= 400\u0026#34;内设置工作表的缩放因数： $worksheet1-\u0026gt;set_zoom( 50 ); $worksheet2-\u0026gt;set_zoom( 75 ); $worksheet3-\u0026gt;set_zoom( 300 ); $worksheet4-\u0026gt;set_zoom( 400 ); The default zoom factor is 100. You cannot zoom to \u0026#34;Selection\u0026#34; because it is calculated by Excel at run-time. 默认的缩放因数是100.你不能对选取进行缩放，因为它在运行时被Excel计算。 Note, \u0026#34;set_zoom()\u0026#34; does not affect the scale of the printed page. For that you should use \u0026#34;set_print_scale()\u0026#34;. 注意，\u0026#34;set_zoom()\u0026#34; 不影响打印页的尺寸。对于此，你应该使用\u0026#34;set_print_scale()\u0026#34;. right_to_left() The \u0026#34;right_to_left()\u0026#34; method is used to change the default direction of the worksheet from left-to-right, with the A1 cell in the top left, to right-to-left, with the he A1 cell in the top right. \u0026#34;right_to_left()\u0026#34;方法用于改变工作表的默认方向，由从左到右，即A1单元格在左上方，改为从右到左，即A1单元格在右上方。 $worksheet-\u0026gt;right_to_left(); This is useful when creating Arabic, Hebrew or other near or far eastern worksheets that use right-to-left as the default direction. 当创建阿拉伯的、希伯来的或其它接近东方或远东的默认使用从右到左方向的工作表时有用。 hide_zero() \u0026#34;hide_zero()\u0026#34;方法用于隐藏任何出现在单元格中的0值。 $worksheet-\u0026gt;hide_zero(); 在Excel中，该选项可在工具-\u0026gt;选项-\u0026gt;查看菜单下找到。 set_tab_color() The \u0026#34;set_tab_color()\u0026#34; method is used to change the colour of the worksheet tab. This feature is only available in Excel 2002 and later. You can use one of the standard colour names provided by the Format object or a colour index. See \u0026#34;COLOURS IN EXCEL\u0026#34; and the \u0026#34;set_custom_color()\u0026#34; method. \u0026#34;set_tab_color()\u0026#34;方法用于改变工作表栏的颜色。该功能只在Excel 2002及以后可用。你可以使用格式对象或颜色索引提供的标准颜色名之一。查看\u0026#34;COLOURS IN EXCEL\u0026#34; 和\u0026#34;set_custom_color()\u0026#34;方法。 $worksheet1-\u0026gt;set_tab_color( \u0026#39;red\u0026#39; ); $worksheet2-\u0026gt;set_tab_color( 0x0C ); 查看\u0026#34;tab_colors.pl\u0026#34; 程序。 autofilter( $first_row, $first_col, $last_row, $last_col ) This method allows an autofilter to be added to a worksheet. An autofilter is a way of adding drop down lists to the headers of a 2D range of worksheet data. This is turn allow users to filter the data based on simple criteria so that some data is shown and some is hidden. 该方法允许向工作表中添加一个自动筛选功能。 To add an autofilter to a worksheet: 向工作表添加一个自动筛选： $worksheet-\u0026gt;autofilter( 0, 0, 10, 3 ); $worksheet-\u0026gt;autofilter( \u0026#39;A1:D11\u0026#39; ); # Same as above in A1 notation. Filter conditions can be applied using the \u0026#34;filter_column()\u0026#34; or \u0026#34;filter_column_list()\u0026#34; method. 筛选条件能使用\u0026#34;filter_column()\u0026#34;或\u0026#34;filter_column_list()\u0026#34;方法应用。 查看\u0026#34;autofilter.pl\u0026#34; 程序。 filter_column( $column, $expression ) The \u0026#34;filter_column\u0026#34; method can be used to filter columns in a autofilter range based on simple conditions. \u0026#34;filter_column\u0026#34;方法能用于根据简单的条件在一个自动筛选范围内过滤列。 NOTE: It isn\u0026#39;t sufficient to just specify the filter condition. You must also hide any rows that don\u0026#39;t match the filter condition. Rows are hidden using the \u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; parameter. \u0026#34;Excel::Writer::XLSX\u0026#34; cannot do this automatically since it isn\u0026#39;t part of the file format. See the \u0026#34;autofilter.pl\u0026#34; program in the examples directory of the distro for an example. 注意：仅仅指定过滤条件是不够的。你也必须隐藏任何不匹配过滤条件的行。 使用\u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; 参数来隐藏行。 \u0026#34;Excel::Writer::XLSX\u0026#34;不能自动地做到这点因为它不是文件格式的一部分。查看\u0026#34;autofilter.pl\u0026#34; 程序。 The conditions for the filter are specified using simple expressions: 使用简单的表达式指定过滤条件： $worksheet-\u0026gt;filter_column( \u0026#39;A\u0026#39;, \u0026#39;x \u0026gt; 2000\u0026#39; ); $worksheet-\u0026gt;filter_column( \u0026#39;B\u0026#39;, \u0026#39;x \u0026gt; 2000 and x \u0026lt; 5000\u0026#39; ); The $column parameter can either be a zero indexed column number or a string column name. $column参数可以是从0索引的一个列编号或一个字符串列名。 下面的操作符是可用的： 操作符 同义词 == = eq =~ != \u0026lt;\u0026gt; ne != \u0026gt; \u0026lt; \u0026gt;= \u0026lt;= and \u0026amp;\u0026amp; or || 操作符的同义词仅仅是让你更舒服地使用表达式的语法糖。有一点很重要：表达式会被Excel解释而不是perl 一个表达式能由一个单一的语句组成或由\u0026#34;and\u0026#34; 和 \u0026#34;or\u0026#34;操作符分开的2个语句组成，例如： \u0026#39;x \u0026lt; 2000\u0026#39; \u0026#39;x \u0026gt; 2000\u0026#39; \u0026#39;x == 2000\u0026#39; \u0026#39;x \u0026gt; 2000 and x \u0026lt; 5000\u0026#39; \u0026#39;x == 2000 or x == 5000\u0026#39; 在表达式中使用\u0026#34;Blanks\u0026#34;或 \u0026#34;NonBlanks\u0026#34;值能达到过滤空开或非空白数据的作用： \u0026#39;x == Blanks\u0026#39; \u0026#39;x == NonBlanks\u0026#39; Excel也允许一些简单的字符串匹配操作： \u0026#39;x =~ b*\u0026#39; # begins with b \u0026#39;x !~ b*\u0026#39; # doesn\u0026#39;t begin with b \u0026#39;x =~ *b\u0026#39; # ends with b \u0026#39;x !~ *b\u0026#39; # doesn\u0026#39;t end with b \u0026#39;x =~ *b*\u0026#39; # contains b \u0026#39;x !~ *b*\u0026#39; # doesn\u0026#39;t contains b 你可以使用\u0026#34;*\u0026#34;匹配任意字符或数字，使用\u0026#34;?\u0026#34;匹配任一字符或数字。Excel的过滤器不支持其它的正则表达式量词。Excel的正则表达式字符能使用\u0026#34;~\u0026#34;符号转义。 上面的占位符变量\u0026#34;x\u0026#34;能被任意的简单字符串代替。实际的占位符名在内部被忽略，所以下面的是等价的： \u0026#39;x \u0026lt; 2000\u0026#39; \u0026#39;col \u0026lt; 2000\u0026#39; \u0026#39;Price \u0026lt; 2000\u0026#39; Also, note that a filter condition can only be applied to a column in a range specified by the \u0026#34;autofilter()\u0026#34; Worksheet method. 注意，过滤条件仅能应用到由\u0026#34;autofilter()\u0026#34;工作表方法所指定范围的列上。 查看\u0026#34;autofilter.pl\u0026#34; 程序。 注意Spreadsheet::WriteExcel支持最多10种类型的过滤。这些目前不被 Excel::Writer::XLSX支持，但会在以后添加。 filter_column_list( $column, @matches ) 在Excel 2007以前只有1到2个过滤条件，比如上面展示的\u0026#34;filter_column\u0026#34; 方法。 Excel 2007 introduced a new list style filter where it is possible to specify 1 or more \u0026#39;or\u0026#39; style criteria. 例如， if your column contained data for the first six months Then if you selected \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39; and \u0026#39;May\u0026#39; they would be displayed as shown on the right. Excel 2007引进一种新的列表类型过滤，能指定1个或多个\u0026#39;or\u0026#39;类型的标准。例如，如果你的列中含有前六个月的数据，初始数据会按所有选择the initial data would be displayed as all selected as shown on the left.而如果你选择了 \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39; 和 \u0026#39;May\u0026#39; 它们会显示在右边。 No criteria selected Some criteria selected. [/] (Select all) [X] (Select all) [/] January [ ] January [/] February [ ] February [/] March [/] March [/] April [/] April [/] May [/] May [/] June [ ] June The \u0026#34;filter_column_list()\u0026#34; method can be used to represent these types of filters: \u0026#34;filter_column_list()\u0026#34; 方法能用于代表这些类型的过滤： $worksheet-\u0026gt;filter_column_list( \u0026#39;A\u0026#39;, \u0026#39;March\u0026#39;, \u0026#39;April\u0026#39;, \u0026#39;May\u0026#39; ); The $column parameter can either be a zero indexed column number or a string column name. $column 参数可以是从0索引的列编号或一个字符串列名。 可以选择一个或多个标准: $worksheet-\u0026gt;filter_column_list( 0, \u0026#39;March\u0026#39; ); $worksheet-\u0026gt;filter_column_list( 1, 100, 110, 120, 130 ); NOTE: It isn\u0026#39;t sufficient to just specify the filter condition. You must also hide any rows that don\u0026#39;t match the filter condition. Rows are hidden using the \u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; parameter. \u0026#34;Excel::Writer::XLSX\u0026#34; cannot do this automatically since it isn\u0026#39;t part of the file format. See the \u0026#34;autofilter.pl\u0026#34; program in the examples directory of the distro for an example. e conditions for the filter are specified using simple expressions: 注意：仅仅指定过滤条件是不够的。你也必须隐藏任何不匹配过滤条件的行。 使用\u0026#34;set_row()\u0026#34; \u0026#34;visible\u0026#34; 参数来隐藏行。 \u0026#34;Excel::Writer::XLSX\u0026#34;不能自动地做到这点因为它不是文件格式的一部分。查看\u0026#34;autofilter.pl\u0026#34; 程序。 convert_date_time( $date_string ) \u0026#34;convert_date_time()\u0026#34; 方法在内部被\u0026#34;write_date_time()\u0026#34; 方法使用，用于将日期字符串转换为在Excel中代表日期和时间的数字。 为了实用目的，它作为一种公共方法显露在我们面前。 $date_string格式在\u0026#34;write_date_time()\u0026#34;方法中有详细说明。 PAGE SET-UP METHODS 打印的时侯，页面set-up方法影响一张工作表的外形。它们控制着诸如页眉、页脚和页边距功能。这些方法就是标准的工作表方法。为清晰起见，下面用单独的章节来说明它们的使用。 下面的方法对于页面设置是可用的： set_landscape() set_portrait() set_page_view() set_paper() center_horizontally() center_vertically() set_margins() set_header() set_footer() repeat_rows() repeat_columns() hide_gridlines() print_row_col_headers() print_area() print_across() fit_to_pages() set_start_page() set_print_scale() set_h_pagebreaks() set_v_pagebreaks() 当使用Excel::Writer::XLSX工作时，通常的需求是将同一个页面设置特性应用到工作簿中的所有工作表中。你可以使用\u0026#34;workbook\u0026#34;类的\u0026#34;sheets()\u0026#34;方法通过访问工作簿中的工作表数组来完成： for $worksheet ( $workbook-\u0026gt;sheets() ) { $worksheet-\u0026gt;set_landscape(); } set_landscape() This method is used to set the orientation of a worksheet\u0026#39;s printed page to landscape: $worksheet-\u0026gt;set_landscape(); # Landscape mode set_portrait() #设置竖排格式（【印刷】(书页、插图、表格等)竖排格式） This method is used to set the orientation of a worksheet\u0026#39;s printed page to portrait. The default worksheet orientation is portrait, so you won\u0026#39;t generally need to call this method. 该方法用于设置工作表打印页面对于竖排的方向。默认的工作表方向是竖排，所以通常你不需要调用该方法。 $worksheet-\u0026gt;set_portrait(); # Portrait mode set_page_view() 该方法用于以\u0026#34;页面查看/布局\u0026#34;模式显示工作表。 $worksheet-\u0026gt;set_page_view(); set_paper( $index ) This method is used to set the paper format for the printed output of a worksheet. The following paper styles are available: 该方法用于为工作表的打印输出设置页面格式。下面是可用的纸张类型： Index Paper format Paper size ===== ============ ========== 0 Printer default - 1 Letter 8 1/2 x 11 in 2 Letter Small 8 1/2 x 11 in 3 Tabloid 11 x 17 in 4 Ledger 17 x 11 in 5 Legal 8 1/2 x 14 in 6 Statement 5 1/2 x 8 1/2 in 7 Executive 7 1/4 x 10 1/2 in 8 A3 297 x 420 mm 9 A4 210 x 297 mm 10 A4 Small 210 x 297 mm 11 A5 148 x 210 mm 12 B4 250 x 354 mm 13 B5 182 x 257 mm 14 Folio 8 1/2 x 13 in 15 Quarto 215 x 275 mm 16 - 10x14 in 17 - 11x17 in 18 Note 8 1/2 x 11 in 19 Envelope 9 3 7/8 x 8 7/8 20 Envelope 10 4 1/8 x 9 1/2 21 Envelope 11 4 1/2 x 10 3/8 22 Envelope 12 4 3/4 x 11 23 Envelope 14 5 x 11 1/2 24 C size sheet - 25 D size sheet - 26 E size sheet - 27 Envelope DL 110 x 220 mm 28 Envelope C3 324 x 458 mm 29 Envelope C4 229 x 324 mm 30 Envelope C5 162 x 229 mm 31 Envelope C6 114 x 162 mm 32 Envelope C65 114 x 229 mm 33 Envelope B4 250 x 353 mm 34 Envelope B5 176 x 250 mm 35 Envelope B6 176 x 125 mm 36 Envelope 110 x 230 mm 37 Monarch 3.875 x 7.5 in 38 Envelope 3 5/8 x 6 1/2 in 39 Fanfold 14 7/8 x 11 in 40 German Std Fanfold 8 1/2 x 12 in 41 German Legal Fanfold 8 1/2 x 13 in Note, it is likely that not all of these paper types will be available to the end user since it will depend on the paper formats that the user\u0026#39;s printer supports. Therefore, it is best to stick to standard paper types. 注意，不是所有的纸张类型对于终端用户都是可用的，因为它依赖于用户的打印机支持的页面格式。因此，最好使用标准的纸张类型。 $worksheet-\u0026gt;set_paper( 1 ); # US Letter $worksheet-\u0026gt;set_paper( 9 ); # A4 如果你没有指定纸张类型，工作表会使用打印机默认的纸张打印。 center_horizontally() Center the worksheet data horizontally between the margins on the printed page: 在打印页面的页边距之间水平居中对齐工作表数据： $worksheet-\u0026gt;center_horizontally(); center_vertically() Center the worksheet data vertically between the margins on the printed page: 在打印页的页边距之间垂直居中对齐工作表数据： $worksheet-\u0026gt;center_vertically(); set_margins( $inches ) There are several methods available for setting the worksheet margins on the printed page: 有几种可用的方法用于设置打印页面的工作表页边距： set_margins() # 将所有页边距设为同样的值 set_margins_LR() # 将左页边距和右页边距设为同样的值 set_margins_TB() # 将上页边距和下页边距设为同样的值 set_margin_left(); # 设置左页边距 set_margin_right(); # 设置右页边距 set_margin_top(); # Set top margin设置上页边距 set_margin_bottom(); # Set bottom margin设置下页边距 All of these methods take a distance in inches as a parameter. Note: 1 inch = 25.4mm. \u0026#34;;-)\u0026#34; The default left and right margin is 0.7 inch. The default top and bottom margin is 0.75 inch. Note, these defaults are different from the defaults used in the binary file format by Spreadsheet::WriteExcel. 所有这些参数以英寸距离作为参数。注意：1英寸=25.4毫米。默认的左页边距和右页边距是0.7英寸。 默认的上页边距和下页边距是0.75英寸。注意，这些默认值与Spreadsheet::WriteExcel中使用的二进制文件格式的默认值不同。 set_header( $string, $margin ) 页眉和页脚使用$string生成，$string由普通文本和控制字符组成。 $margin参数是可选的。 可用的控制字符是： 控制字符 类别 描述 ======= ======== =========== \u0026amp;L 对齐 左对齐 \u0026amp;C 居中对齐 \u0026amp;R 右对齐 \u0026amp;P 信息 页码 \u0026amp;N 总页数 \u0026amp;D 日期 \u0026amp;T 时间 \u0026amp;F 文件名 \u0026amp;A 工作表名 \u0026amp;Z 工作簿路径 \u0026amp;fontsize 字体 字体大小 \u0026amp;\u0026#34;font,style\u0026#34; 字体名和字体类型 \u0026amp;U 单下划线 \u0026amp;E 双下划线 \u0026amp;S 删除线 \u0026amp;X 上标 \u0026amp;Y 下标 \u0026amp;\u0026amp; 其它 字面符号\u0026amp; 通过在文本前面前置控制字符\u0026amp;L、\u0026amp;C、和\u0026amp;R,可以将页眉和页脚中的文本调整（对齐）为居左、居中和右对齐。 例如， (使用 ASCII 插图表示结果): $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;LHello\u0026#39;); --------------------------------------------------------------- | | | Hello | | | $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;CHello\u0026#39;); --------------------------------------------------------------- | | | Hello | | | $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;RHello\u0026#39;); --------------------------------------------------------------- | | | Hello | | | For simple text, if you do not specify any justification the text will be centred. However, you must prefix the text with \u0026amp;C if you specify a font name or any other formatting: 对于纯文本，如果你没有指定任何对齐方式，文本将居中对齐。然而，如果你指定字体名或其它任何格式，你必须在文本前前置\u0026amp;C符号。 $worksheet-\u0026gt;set_header(\u0026#39;Hello\u0026#39;); --------------------------------------------------------------- | | | Hello | | | 你可以让每个对齐区域中都有文本： $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;LCiao\u0026amp;CBello\u0026amp;RCielo\u0026#39;); --------------------------------------------------------------- | | | Ciao Bello Cielo | | | 当工作表或工作簿发生变化时，信息控制字符作为Excel会更新的变量。时间和日期使用用户默认的格式： $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;CPage \u0026amp;P of \u0026amp;N\u0026#39;); --------------------------------------------------------------- | | | Page 1 of 6 | | | $worksheet-\u0026gt;set_header(\u0026#39;\u0026amp;CUpdated at \u0026amp;T\u0026#39;); --------------------------------------------------------------- | | | Updated at 12:30 PM | | | 你可以通过在字体前前置控制字符\u0026amp;n,\u0026#34;n\u0026#34;是字体大小，来指定文本区域的字体大小： $worksheet1-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;30Hello Big\u0026#39; ); $worksheet2-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;10Hello Small\u0026#39; ); 你可以在文本前前置控制序列\u0026amp;\u0026#34;font,style\u0026#34;来指定文本区域的字体。\u0026#34;font\u0026#34;是诸如\u0026#34;Courier New\u0026#34; 或 \u0026#34;Times New Roman\u0026#34;的字体名，\u0026#34;style\u0026#34;是标准的Windows字体描述之一：\u0026#34;Regular\u0026#34;, \u0026#34;Italic\u0026#34;, \u0026#34;Bold\u0026#34; 或 \u0026#34;Bold Italic\u0026#34;: $worksheet1-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;\u0026#34;Courier New,Italic\u0026#34;Hello\u0026#39; ); $worksheet2-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;\u0026#34;Courier New,Bold Italic\u0026#34;Hello\u0026#39; ); $worksheet3-\u0026gt;set_header( \u0026#39;\u0026amp;C\u0026amp;\u0026#34;Times New Roman,Regular\u0026#34;Hello\u0026#39; ); 将所有这些功能组合起来创建复杂的页眉和页脚是可能的。作为对于建立复杂页眉和页脚的帮助，你可以在Excel中记录一个页面设置的宏，并且查看VBA产生的格式字符串。记住VBA使用2个双引号\u0026#34;\u0026#34;代表单个双引号\u0026#34;.对于上面的最后一个例子，等价的VBA代码看起来像这样： .LeftHeader = \u0026#34;\u0026#34; .CenterHeader = \u0026#34;\u0026amp;\u0026#34;\u0026#34;Times New Roman,Regular\u0026#34;\u0026#34;Hello\u0026#34; .RightHeader = \u0026#34;\u0026#34; 你应该使用2个and符号\u0026#34;\u0026amp;\u0026amp;\u0026#34;在页眉或页脚中表示一个字面and符号\u0026#34;\u0026amp;\u0026#34;: $worksheet1-\u0026gt;set_header(\u0026#39;\u0026amp;CCuriouser \u0026amp;\u0026amp; Curiouser - Attorneys at Law\u0026#39;); As stated above the margin parameter is optional. As with the other margins the value should be in inches. The default header and footer margin is 0.3 inch. Note, the default margin is different from the default used in the binary file format by Spreadsheet::WriteExcel. The header and footer margin size can be set as follows: 上面的例子中，开始页边距参数是可选的。对于其它页边距其值应该是英寸。默认的页眉和页脚页边距是0.3英寸。注意，这些默认页边距值与Spreadsheet::WriteExcel中使用的二进制文件格式的默认值不同。页眉和页脚的页边距大小可以设置如下： $worksheet-\u0026gt;set_header( \u0026#39;\u0026amp;CHello\u0026#39;, 0.75 ); The header and footer margins are independent of the top and bottom margins. 页眉和页脚的页边距依赖于顶部和底部的页边距。 注意，页眉和页脚字符串必须少于255个字符。长于255个的字符串将不会被写入并生成一个警告。 \u0026#34;set_header()\u0026#34;方法也能处理UTF-8格式的Unicode字符串。 $worksheet-\u0026gt;set_header( \u0026#34;\u0026amp;C\\x{263a}\u0026#34; ) 查看 \u0026#34;headers.pl\u0026#34; 程序。 set_footer() \u0026#34;set_footer()\u0026#34; 方法与\u0026#34;set_header()\u0026#34;方法的语法一样，看上面。 repeat_rows( $first_row, $last_row ) Set the number of rows to repeat at the top of each printed page. 在每张打印页的顶部设置需要复制的行数。 For large Excel documents it is often desirable to have the first row or rows of the worksheet print out at the top of each page. This can be achieved by using the \u0026#34;repeat_rows()\u0026#34; method. The parameters $first_row and $last_row are zero based. The $last_row parameter is optional if you only wish to specify one row: 对于很大的Excel文件，在每页的顶部打印工作表的第一行或前几行通常是值得的。这可以使用 \u0026#34;repeat_rows()\u0026#34; 方法做到。$first_row和$last_row参数是基于0的。 如果你只想指定一行，$last_row参数是可选的： $worksheet1-\u0026gt;repeat_rows( 0 ); # 复制第一行 $worksheet2-\u0026gt;repeat_rows( 0, 1 ); # 复制前2行 repeat_columns( $first_col, $last_col ) Set the columns to repeat at the left hand side of each printed page. 在每张打印页的左边设置需要复制的列数。 For large Excel documents it is often desirable to have the first column or columns of the worksheet print out at the left hand side of each page. This can be achieved by using the \u0026#34;repeat_columns()\u0026#34; method. The parameters $first_column and $last_column are zero based. The $last_column parameter is optional if you only wish to specify one column. You can also specify the columns using A1 column notation, see the note about \u0026#34;Cell notation\u0026#34;. 对于很大的Excel文件，在每页的左侧打印工作表的第一列或前几列通常是值得的。这可以使用 \u0026#34;repeat_columns()\u0026#34; 方法做到。$first_column和$last_column参数是基于0的。 如果你只想指定一列，$last_column参数是可选的。你可以使用A1列表示法指定列数。 $worksheet1-\u0026gt;repeat_columns( 0 ); # Repeat the first column $worksheet2-\u0026gt;repeat_columns( 0, 1 ); # Repeat the first two columns $worksheet3-\u0026gt;repeat_columns( \u0026#39;A:A\u0026#39; ); # Repeat the first column $worksheet4-\u0026gt;repeat_columns( \u0026#39;A:B\u0026#39; ); # Repeat the first two columns hide_gridlines( $option ) This method is used to hide the gridlines on the screen and printed page. Gridlines are the lines that divide the cells on a worksheet. If you have defined your own cell borders you may wish to hide the default gridlines. 该方法用于隐藏屏幕上的网格线和打印过的页面。网格线是在工作表中分隔单元格的线。 Screen and printed gridlines are turned on by default in an Excel worksheet. 如果你定义了你自己的单元格边框你可能想隐藏默认的网格线。 $worksheet-\u0026gt;hide_gridlines(); 下面的$option值是有效的： 0 : 不隐藏网格线 1 : 只隐藏打印后的网格线Hide printed gridlines only 2 : 隐藏屏幕和打印后的网格线Hide screen and printed gridlines If you don\u0026#39;t supply an argument or use \u0026#34;undef\u0026#34; the default option is 1, i.e. only the printed gridlines are hidden. 如果你没有提供参数或使用\u0026#34;undef\u0026#34;，则默认的选项是1，i.e。只有打印后的网格线被隐藏。 print_row_col_headers() Set the option to print the row and column headers on the printed page. 在打印页面上设置选项以打印行标题和列标题。 An Excel worksheet looks something like the following： 一张工作表看起来就像如下这样： ------------------------------------------ | | A | B | C | D | ... ------------------------------------------ | 1 | | | | | ... | 2 | | | | | ... | 3 | | | | | ... | 4 | | | | | ... |...| ... | ... | ... | ... | ... The headers are the letters and numbers at the top and the left of the worksheet. Since these headers serve mainly as a indication of position on the worksheet they generally do not appear on the printed page. If you wish to have them printed you can use the \u0026#34;print_row_col_headers()\u0026#34; method : 标题就是工作表顶部和左侧的字母和数字。因为这些标题主要在工作表中指明位置，它们一般不会出现在打印页面上。如果你想连标题一块打印，你可以使用\u0026#34;print_row_col_headers()\u0026#34;方法。 $worksheet-\u0026gt;print_row_col_headers(); Do not confuse these headers with page headers as described in the \u0026#34;set_header()\u0026#34; section above. 不要把这些标题和上面提到的有关页面标题的\u0026#34;set_header()\u0026#34;章节弄混淆。 print_area( $first_row, $first_col, $last_row, $last_col ) This method is used to specify the area of the worksheet that will be printed. All four parameters must be specified. You can also use A1 notation, 该方法用于指定将被打印的工作表区域。4个参数必须都指定。你也可以使用A1表示法： $worksheet1-\u0026gt;print_area( \u0026#39;A1:H20\u0026#39; ); # Cells A1 to H20 $worksheet2-\u0026gt;print_area( 0, 0, 19, 7 ); # The same $worksheet2-\u0026gt;print_area( \u0026#39;A:H\u0026#39; ); # Columns A to H if rows have data print_across() The \u0026#34;print_across\u0026#34; method is used to change the default print direction. This is referred to by Excel as the sheet \u0026#34;page order\u0026#34;. \u0026#34;print_across\u0026#34;方法用于改变默认的打印方向。这在Excel工作表中被称为“页面顺序”。 $worksheet-\u0026gt;print_across(); The default page order is shown below for a worksheet that extends over 4 pages. The order is called \u0026#34;down then across\u0026#34;: 下面显示的是拥有超过4页的工作表的默认的页面顺序。该顺序叫做“向下然后交叉” [1] [3] [2] [4] However, by using the \u0026#34;print_across\u0026#34; method the print order will be changed to \u0026#34;across then down\u0026#34;: 然而，通过使用\u0026#34;print_across\u0026#34;方法，打印顺序会更改为\u0026#34;交叉向下\u0026#34;： [1] [2] [3] [4] fit_to_pages( $width, $height ) The \u0026#34;fit_to_pages()\u0026#34; method is used to fit the printed area to a specific number of pages both vertically and horizontally. If the printed area exceeds the specified number of pages it will be scaled down to fit. This guarantees that the printed area will always appear on the specified number of pages even if the page size or margins change. \u0026#34;fit_to_pages()\u0026#34;方法用于垂直和水平地使打印区域与指定页数相适。如果打印区域超过了指定的页数，它会按比列缩小来适应。这保证了即使页面尺寸或页边距发生变化，打印区域也会一直出现在指定页上。 $worksheet1-\u0026gt;fit_to_pages( 1, 1 ); # Fit to 1x1 pages $worksheet2-\u0026gt;fit_to_pages( 2, 1 ); # Fit to 2x1 pages $worksheet3-\u0026gt;fit_to_pages( 1, 2 ); # Fit to 1x2 pages 打印区域能使用上面描述的\u0026#34;print_area()\u0026#34;方法定义。 A common requirement is to fit the printed output to *n* pages wide but have the height be as long as necessary. To achieve this set the $height to zero: 通常的需求是将打印输出为n页宽，但让高度尽可能地长。可以把 $height设置为0来达到要求： $worksheet1-\u0026gt;fit_to_pages( 1, 0 ); # 1 page wide and as long as necessary Note that although it is valid to use both \u0026#34;fit_to_pages()\u0026#34; and \u0026#34;set_print_scale()\u0026#34; on the same worksheet only one of these options can be active at a time. The last method call made will set the active option. 注意，尽管在同一张工作表中使用\u0026#34;fit_to_pages()\u0026#34; 和 \u0026#34;set_print_scale()\u0026#34; 是正确的，但一次只能激活其中的一个选项。最后一个方法调用会设置激活选项。 Note that \u0026#34;fit_to_pages()\u0026#34; will override any manual page breaks that are defined in the worksheet. 注意\u0026#34;fit_to_pages()\u0026#34;会重写任何手册页 set_start_page( $start_page ) The \u0026#34;set_start_page()\u0026#34; method is used to set the number of the starting page when the worksheet is printed out. The default value is 1. \u0026#34;set_start_page()\u0026#34;方法用于设置工作表打印时的起始页。默认值是1. $worksheet-\u0026gt;set_start_page( 2 ); set_print_scale( $scale ) Set the scale factor of the printed page. Scale factors in the range \u0026#34;10 \u0026lt;= $scale \u0026lt;= 400\u0026#34; are valid: 设置打印页的比例系数。在范围\u0026#34;10 \u0026lt;= $scale \u0026lt;= 400\u0026#34;内的比例系数是有效的： $worksheet1-\u0026gt;set_print_scale( 50 ); $worksheet2-\u0026gt;set_print_scale( 75 ); $worksheet3-\u0026gt;set_print_scale( 300 ); $worksheet4-\u0026gt;set_print_scale( 400 ); The default scale factor is 100. Note, \u0026#34;set_print_scale()\u0026#34; does not affect the scale of the visible page in Excel. For that you should use \u0026#34;set_zoom()\u0026#34;. 默认的比例系数是100.注意，\u0026#34;set_print_scale()\u0026#34;不影响Excel可见页的尺寸。对于此。你应使用\u0026#34;set_zoom()\u0026#34;。 Note also that although it is valid to use both \u0026#34;fit_to_pages()\u0026#34; and \u0026#34;set_print_scale()\u0026#34; on the same worksheet only one of these options can be active at a time. The last method call made will set the active option. 也要注意，尽管在同一张工作表中使用\u0026#34;fit_to_pages()\u0026#34; 和 \u0026#34;set_print_scale()\u0026#34; 是正确的，但一次只能激活其中的一个选项。最后一个方法调用会设置激活选项。 set_h_pagebreaks( @breaks ) Add horizontal page breaks to a worksheet. A page break causes all the data that follows it to be printed on the next page. Horizontal page breaks act between rows. To create a page break between rows 20 and 21 you must specify the break at row 21. However in zero index notation this is actually row 20. So you can pretend for a small while that you are using 1 index notation: 添加水平分页符到工作表中。分页符导致所有在它后面的数据在下一页中被打印。水平分页符在行之间起作用。为在第20行和第21行之间创建分页符，你必须在第21行指定分页。然而，在以0开始索引的表示法中，这实际上是第20行。所以你可以假装你在使用1索引表示法。 $worksheet1-\u0026gt;set_h_pagebreaks( 20 ); # Break between row 20 and 21 The \u0026#34;set_h_pagebreaks()\u0026#34; method will accept a list of page breaks and you can call it more than once: \u0026#34;set_h_pagebreaks()\u0026#34;方法会接受一列分隔符而且你可以多次调用该方法： $worksheet2-\u0026gt;set_h_pagebreaks( 20, 40, 60, 80, 100 ); # Add breaks $worksheet2-\u0026gt;set_h_pagebreaks( 120, 140, 160, 180, 200 ); # Add some more Note: If you specify the \u0026#34;fit to page\u0026#34; option via the \u0026#34;fit_to_pages()\u0026#34; method it will override all manual page breaks. 注意，如果你通过 \u0026#34;fit_to_pages()\u0026#34;方法指定了\u0026#34;fit to page\u0026#34;选项，它会覆盖所有的手动分页符。 There is a silent limitation of about 1000 horizontal page breaks per worksheet in line with an Excel internal limitation. 与Excel内部限制一样，每张工作表的水平分页符限制为1000个。 set_v_pagebreaks( @breaks ) Add vertical page breaks to a worksheet. A page break causes all the data that follows it to be printed on the next page. Vertical page breaks act between columns. To create a page break between columns 20 and 21 you must specify the break at column 21. However in zero index notation this is actually column 20. So you can pretend for a small while that you are using 1 index notation: 添加垂直分页符到工作表中。分页符导致所有在它后面的数据在下一页中被打印。垂直分页符在列之间起作用。为在第20列和第21列之间创建分页符，你必须在第21列指定分页。然而，在以0开始索引的表示法中，这实际上是第20列。所以你可以假装你在使用1索引表示法。 $worksheet1-\u0026gt;set_v_pagebreaks(20); #在20和21列之间分页 The \u0026#34;set_v_pagebreaks()\u0026#34; method will accept a list of page breaks and you can call it more than once: \u0026#34;set_v_pagebreaks()\u0026#34;方法会接受一列分隔符而且你可以多次调用该方法： $worksheet2-\u0026gt;set_v_pagebreaks( 20, 40, 60, 80, 100 ); # Add breaks $worksheet2-\u0026gt;set_v_pagebreaks( 120, 140, 160, 180, 200 ); # Add some more Note: If you specify the \u0026#34;fit to page\u0026#34; option via the \u0026#34;fit_to_pages()\u0026#34; method it will override all manual page breaks. 注意，如果你通过 \u0026#34;fit_to_pages()\u0026#34;方法指定了\u0026#34;fit to page\u0026#34;选项，它会覆盖所有的手动分页符。 CELL FORMATTING #单元格格式化 This section describes the methods and properties that are available for formatting cells in Excel. The properties of a cell that can be formatted include: fonts, colours, patterns, borders, alignment and number formatting. 此章节描述在Excel中格式化单元格有哪些方法和属性可用。能用于格式化单元格的属性包括：字体、颜色、样式、边框、对齐和数字格式化。 创建和使用格式对象 Cell formatting is defined through a Format object. Format objects are created by calling the workbook \u0026#34;add_format()\u0026#34; method as follows: 单元格的格式是通过格式对象定义的。通过调用如下的工作簿\u0026#34;add_format()\u0026#34;方法创建格式对象： my $format1 = $workbook-\u0026gt;add_format(); # Set properties later my $format2 = $workbook-\u0026gt;add_format( %props ); # Set at creation The format object holds all the formatting properties that can be applied to a cell, a row or a column. The process of setting these properties is discussed in the next section. 格式对象存有所有能应用到单元格的格式属性，一行或一列。在下一章节讨论设置这些属性的步骤。 Once a Format object has been constructed and its properties have been set it can be passed as an argument to the worksheet \u0026#34;write\u0026#34; methods as follows: 一旦创建了格式对象并且设置了它们的属性，它可以按如下方法作为参数传递给工作表的\u0026#34;write\u0026#34;方法： $worksheet-\u0026gt;write( 0, 0, \u0026#39;One\u0026#39;, $format ); $worksheet-\u0026gt;write_string( 1, 0, \u0026#39;Two\u0026#39;, $format ); $worksheet-\u0026gt;write_number( 2, 0, 3, $format ); $worksheet-\u0026gt;write_blank( 3, 0, $format ); Formats can also be passed to the worksheet \u0026#34;set_row()\u0026#34; and \u0026#34;set_column()\u0026#34; methods to define the default property for a row or column. 格式也可以传递给工作表的\u0026#34;set_row()\u0026#34;和\u0026#34;set_column()\u0026#34;方法为行或列定义默认属性。 $worksheet-\u0026gt;set_row( 0, 15, $format ); $worksheet-\u0026gt;set_column( 0, 0, 15, $format ); Format methods and Format properties 格式方法和格式属性 The following table shows the Excel format categories, the formatting properties that can be applied and the equivalent object method: 下面的表中显示了Excel的格式类别，即能使用的格式属性和等价的对象方法： Category Description Property Method Name -------- ----------- -------- ----------- Font Font type font set_font() Font size size set_size() Font color color set_color() Bold bold set_bold() Italic italic set_italic() Underline underline set_underline() Strikeout font_strikeout set_font_strikeout() Super/Subscript font_script set_font_script() Outline font_outline set_font_outline() Shadow font_shadow set_font_shadow() Number Numeric format num_format set_num_format() Protection Lock cells locked set_locked() Hide formulas hidden set_hidden() Alignment Horizontal align align set_align() Vertical align valign set_align() Rotation rotation set_rotation() Text wrap text_wrap set_text_wrap() Justify last text_justlast set_text_justlast() Center across center_across set_center_across() Indentation indent set_indent() Shrink to fit shrink set_shrink() Pattern Cell pattern pattern set_pattern() Background color bg_color set_bg_color() Foreground color fg_color set_fg_color() Border Cell border border set_border() Bottom border bottom set_bottom() Top border top set_top() Left border left set_left() Right border right set_right() Border color border_color set_border_color() Bottom color bottom_color set_bottom_color() Top color top_color set_top_color() Left color left_color set_left_color() Right color right_color set_right_color() There are two ways of setting Format properties: by using the object method interface or by setting the property directly. 例如，, a typical use of the method interface would be as follows: 有2中方法设置格式属性：使用对象方法接口或直接设置属性。例如，下面是典型的方法接口用法： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_bold(); $format-\u0026gt;set_color( \u0026#39;red\u0026#39; ); By comparison the properties can be set directly by passing a hash of properties to the Format constructor: 通过比较，给格式构造函数传递一个属性散列能直接设置属性： my $format = $workbook-\u0026gt;add_format( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; ); or after the Format has been constructed by means of the \u0026#34;set_format_properties()\u0026#34; method as follows: 或在格式创建之后按下面的方法通过\u0026#34;set_format_properties()\u0026#34;方法设置属性： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_format_properties( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; ); You can also store the properties in one or more named hashes and pass them to the required method: 你也可以将属性存储在一个或多个具名散列中并将需要的方法传递给它们： my %font = ( font =\u0026gt; \u0026#39;Arial\u0026#39;, size =\u0026gt; 12, color =\u0026gt; \u0026#39;blue\u0026#39;, bold =\u0026gt; 1, ); my %shading = ( bg_color =\u0026gt; \u0026#39;green\u0026#39;, pattern =\u0026gt; 1, ); my $format1 = $workbook-\u0026gt;add_format( %font ); # Font only my $format2 = $workbook-\u0026gt;add_format( %font, %shading ); # Font and shading The method mechanism may be better if you prefer setting properties via method calls (which the author did when the code was first written) otherwise passing properties to the constructor has proved to be a little more flexible and self documenting in practice. An additional advantage of working with property hashes is that it allows you to share formatting between workbook objects as shown in the example above. 如果你喜欢通过方法调用设置属性，方法机制可能更好。否则，传递属性到构造函数会更复杂些并且它的文档更实用。使用属性散列的一个额外好处是它允许你在上面显示的例子中的工作簿对象之间共享格式。 The Perl/Tk style of adding properties is also supported: 也支持添加Perl/Tk风格的属性： my %font = ( -font =\u0026gt; \u0026#39;Arial\u0026#39;, -size =\u0026gt; 12, -color =\u0026gt; \u0026#39;blue\u0026#39;, -bold =\u0026gt; 1, ); Working with formats使用格式 The default format is Arial 10 with all other properties off. 默认的格式是Arial 10，其它属性都关闭。 Each unique format in Excel::Writer::XLSX must have a corresponding Format object. It isn\u0026#39;t possible to use a Format with a write() method and then redefine the Format for use at a later stage. This is because a Format is applied to a cell not in its current state but in its final state. Consider the following example: 在Excel::Writer::XLSX 中，每个单独的格式都有一个相应的格式对象。使用带有write() 方法的格式然后在以后使用阶段再重新定义格式是不可行的。 这是因为被应用到单元格中的格式不是在它们的当前状态，而是它们的最终状态。看看下面的例子： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_bold(); $format-\u0026gt;set_color( \u0026#39;red\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Cell A1\u0026#39;, $format ); $format-\u0026gt;set_color( \u0026#39;green\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;B1\u0026#39;, \u0026#39;Cell B1\u0026#39;, $format ); Cell A1 is assigned the Format $format which is initially set to the colour red. However, the colour is subsequently set to green. When Excel displays Cell A1 it will display the final state of the Format which in this case will be the colour green. 单元格A1被指定格式$format,它开始被设置为红色。然而，颜色随后被设置为绿色。当Excel显示单元格A1时，它会显示格式的最终状态，此处是绿色。 In general a method call without an argument will turn a property on, 例如，: 通常，不带参数的方法调用会开启一个属性，例如： my $format1 = $workbook-\u0026gt;add_format(); $format1-\u0026gt;set_bold(); # Turns bold on $format1-\u0026gt;set_bold( 1 ); # Also turns bold on $format1-\u0026gt;set_bold( 0 ); # Turns bold off FORMAT METHODS 格式方法 The Format object methods are described in more detail in the following sections. In addition, there is a Perl program called \u0026#34;formats.pl\u0026#34; in the \u0026#34;examples\u0026#34; directory of the WriteExcel distribution. This program creates an Excel workbook called \u0026#34;formats.xlsx\u0026#34; which contains examples of almost all the format types. 下面的章节详细描述了格式对象方法。此外，有一个叫做\u0026#34;formats.pl\u0026#34;的Perl程序。该程序创建了一个名为\u0026#34;formats.xlsx\u0026#34;的Excel工作簿，它包含了几乎所有格式类型的例子。 下面的格式方法是可用的： set_font() set_size() set_color() set_bold() set_italic() set_underline() set_font_strikeout() set_font_script() set_font_outline() set_font_shadow() set_num_format() set_locked() set_hidden() set_align() set_rotation() set_text_wrap() set_text_justlast() set_center_across() set_indent() set_shrink() set_pattern() set_bg_color() set_fg_color() set_border() set_bottom() set_top() set_left() set_right() set_border_color() set_bottom_color() set_top_color() set_left_color() set_right_color() The above methods can also be applied directly as properties. For example \u0026#34;$format-\u0026gt;set_bold()\u0026#34; is equivalent to \u0026#34;$workbook-\u0026gt;add_format(bold =\u0026gt; 1)\u0026#34;. 上面的方法能直接用于属性。例如，\u0026#34;$format-\u0026gt;set_bold()\u0026#34;方法与 \u0026#34;$workbook-\u0026gt;add_format(bold =\u0026gt; 1)\u0026#34;方法等价。 set_format_properties( %properties ) The properties of an existing Format object can be also be set by means of \u0026#34;set_format_properties()\u0026#34;: 通过设置\u0026#34;set_format_properties()\u0026#34;也能设置一个已经存在的格式对象的属性： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_format_properties( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; ); However, this method is here mainly for legacy reasons. It is preferable to set the properties in the format constructor: 然而，由于历史问题该方法主要用在这里。在格式构造函数中设置属性更合适： my $format = $workbook-\u0026gt;add_format( bold =\u0026gt; 1, color =\u0026gt; \u0026#39;red\u0026#39; ); set_font( $fontname ) Default state: Font is Arial Default action: None Valid args: Any valid font name 指定使用的字体: $format-\u0026gt;set_font(\u0026#39;Times New Roman\u0026#39;); Excel can only display fonts that are installed on the system that it is running on. Therefore it is best to use the fonts that come as standard such as \u0026#39;Arial\u0026#39;, \u0026#39;Times New Roman\u0026#39; and \u0026#39;Courier New\u0026#39;. See also the Fonts worksheet created by formats.pl Excel只能显示安装在系统中正使用着的字体。因此，最好使用作为标准的诸如\u0026#39;Arial\u0026#39;, \u0026#39;Times New Roman\u0026#39; 和 \u0026#39;Courier New\u0026#39;.字体。查看由formats.pl创建的工作表字体。 set_size() Default state: Font size is 10 Default action: Set font size to 1 Valid args: Integer values from 1 to as big as your screen. Set the font size. Excel adjusts the height of a row to accommodate the largest font size in the row. You can also explicitly specify the height of a row using the set_row() worksheet method. 设置字体大小。Excel会调整行高以适应行中的最大字体。你也可以显式地使用set_row()工作表方法指定行高。 my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_size( 30 ); set_color() Default state: Excels的默认颜色，通常是黑色 Default action: 设置默认颜色 Valid args: 8..63之间的整数或下面的字符串: \u0026#39;black\u0026#39; \u0026#39;blue\u0026#39; \u0026#39;brown\u0026#39; \u0026#39;cyan\u0026#39; \u0026#39;gray\u0026#39; \u0026#39;green\u0026#39; \u0026#39;lime\u0026#39; \u0026#39;magenta\u0026#39; \u0026#39;navy\u0026#39; \u0026#39;orange\u0026#39; \u0026#39;pink\u0026#39; \u0026#39;purple\u0026#39; \u0026#39;red\u0026#39; \u0026#39;silver\u0026#39; \u0026#39;white\u0026#39; \u0026#39;yellow\u0026#39; 设置字体颜色。\u0026#34;set_color()\u0026#34;方法用法如下： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_color( \u0026#39;red\u0026#39; ); $worksheet-\u0026gt;write( 0, 0, \u0026#39;wheelbarrow\u0026#39;, $format ); 注意：\u0026#34;set_color()\u0026#34; 方法用于单元格中字体的颜色。要设置单元格的颜色，使用\u0026#34;set_bg_color()\u0026#34; 和 \u0026#34;set_pattern()\u0026#34; 方法. 其它的例子，请查看formats.pl程序的\u0026#39;Named colors\u0026#39; 和 \u0026#39;Standard colors\u0026#39;工作表。 set_bold() Default state: bold is off Default action: Turn bold on Valid args: 0, 1 设置字体的bold黑体属性： $format-\u0026gt;set_bold(); # Turn bold on set_italic() Default state: Italic is off Default action: Turn italic on Valid args: 0, 1 设置字体的斜体属性： $format-\u0026gt;set_italic(); # Turn italic on set_underline() Default state: Underline is off Default action: Turn on single underline Valid args: 0 = 没有下划线 1 = 单一下划线 2 = 双下划线 33 = Single accounting underline 34 = Double accounting underline 设置字体的下划线属性。 $format-\u0026gt;set_underline(); # Single underline set_font_strikeout() Default state: Strikeout is off Default action: Turn strikeout on Valid args: 0, 1 设置字体的删除线属性。 set_font_script() Default state: Super/Subscript is off Default action: Turn Superscript on Valid args: 0 = Normal 1 = Superscript 2 = Subscript 设置字体的上标/下标属性。 set_font_outline() Default state: Outline is off Default action: Turn outline on Valid args: 0, 1 仅支持Mac. set_font_shadow() Default state: Shadow is off Default action: Turn shadow on Valid args: 0, 1 Mac only. set_num_format() Default state: General format Default action: Format index 1 Valid args: See the following table This method is used to define the numerical format of a number in Excel. It controls whether a number is displayed as an integer, a floating point number, a date, a currency value or some other user defined format. 该方法用于定义Excel中数字的数字格式。它控制着一个数字是否显示为整数、浮点数、日期、货币值或其它用户定义的格式。 The numerical format of a cell can be specified by using a format string or an index to one of Excel\u0026#39;s built-in formats: 单元格的数字格式能使用一个格式化字符串或Excel的内建格式索引指定： my $format1 = $workbook-\u0026gt;add_format(); my $format2 = $workbook-\u0026gt;add_format(); $format1-\u0026gt;set_num_format( \u0026#39;d mmm yyyy\u0026#39; ); # Format string $format2-\u0026gt;set_num_format( 0x0f ); # Format index $worksheet-\u0026gt;write( 0, 0, 36892.521, $format1 ); # 1 Jan 2001 $worksheet-\u0026gt;write( 0, 0, 36892.521, $format2 ); # 1-Jan-01 使用格式化字符串能定义很复杂的数字格式. $format01-\u0026gt;set_num_format( \u0026#39;0.000\u0026#39; ); $worksheet-\u0026gt;write( 0, 0, 3.1415926, $format01 ); # 3.142 $format02-\u0026gt;set_num_format( \u0026#39;#,##0\u0026#39; ); $worksheet-\u0026gt;write( 1, 0, 1234.56, $format02 ); # 1,235 $format03-\u0026gt;set_num_format( \u0026#39;#,##0.00\u0026#39; ); $worksheet-\u0026gt;write( 2, 0, 1234.56, $format03 ); # 1,234.56 $format04-\u0026gt;set_num_format( \u0026#39;$0.00\u0026#39; ); $worksheet-\u0026gt;write( 3, 0, 49.99, $format04 ); # $49.99 #注意，你也可以使用其它诸如英镑或日元的货币符号。 #其它货币可能要求使用Unicode。 $format07-\u0026gt;set_num_format( \u0026#39;mm/dd/yy\u0026#39; ); $worksheet-\u0026gt;write( 6, 0, 36892.521, $format07 ); # 01/01/01 $format08-\u0026gt;set_num_format( \u0026#39;mmm d yyyy\u0026#39; ); $worksheet-\u0026gt;write( 7, 0, 36892.521, $format08 ); # Jan 1 2001 $format09-\u0026gt;set_num_format( \u0026#39;d mmmm yyyy\u0026#39; ); $worksheet-\u0026gt;write( 8, 0, 36892.521, $format09 ); # 1 January 2001 $format10-\u0026gt;set_num_format( \u0026#39;dd/mm/yyyy hh:mm AM/PM\u0026#39; ); $worksheet-\u0026gt;write( 9, 0, 36892.521, $format10 ); # 01/01/2001 12:30 AM $format11-\u0026gt;set_num_format( \u0026#39;0 \u0026#34;dollar and\u0026#34; .00 \u0026#34;cents\u0026#34;\u0026#39; ); $worksheet-\u0026gt;write( 10, 0, 1.87, $format11 ); # 1 dollar and .87 cents # Conditional numerical formatting. $format12-\u0026gt;set_num_format( \u0026#39;[Green]General;[Red]-General;General\u0026#39; ); $worksheet-\u0026gt;write( 11, 0, 123, $format12 ); # \u0026gt; 0 Green $worksheet-\u0026gt;write( 12, 0, -45, $format12 ); # \u0026lt; 0 Red $worksheet-\u0026gt;write( 13, 0, 0, $format12 ); # = 0 Default colour # 邮政编码 $format13-\u0026gt;set_num_format( \u0026#39;00000\u0026#39; ); $worksheet-\u0026gt;write( 14, 0, \u0026#39;01209\u0026#39;, $format13 ); 颜色的格式应该使用下列值之一： [Black] [Blue] [Cyan] [Green] [Magenta] [Red] [White] [Yellow] Alternatively you can specify the colour based on a colour index as follows: \u0026#34;[Color n]\u0026#34;, where n is a standard Excel colour index - 7. See the \u0026#39;Standard colors\u0026#39; worksheet created by formats.pl. 作为选择，你可以根据下面的颜色索引指定颜色： \u0026#34;[Color n]\u0026#34;，n是标准的Excel颜色索引-7.查看由formats.pl创建的工作表中的\u0026#39;Standard colors\u0026#39;。 You should ensure that the format string is valid in Excel prior to using it in WriteExcel. 你应该确保格式字符串在 WriteExcel中使用它之前是合法的. 下面的表显式了Excel内建的格式： Index Index Format String 0 0x00 General 1 0x01 0 2 0x02 0.00 3 0x03 #,##0 4 0x04 #,##0.00 5 0x05 ($#,##0_);($#,##0) 6 0x06 ($#,##0_);[Red]($#,##0) 7 0x07 ($#,##0.00_);($#,##0.00) 8 0x08 ($#,##0.00_);[Red]($#,##0.00) 9 0x09 0% 10 0x0a 0.00% 11 0x0b 0.00E+00 12 0x0c # ?/? 13 0x0d # ??/?? 14 0x0e m/d/yy 15 0x0f d-mmm-yy 16 0x10 d-mmm 17 0x11 mmm-yy 18 0x12 h:mm AM/PM 19 0x13 h:mm:ss AM/PM 20 0x14 h:mm 21 0x15 h:mm:ss 22 0x16 m/d/yy h:mm .. .... ........... 37 0x25 (#,##0_);(#,##0) 38 0x26 (#,##0_);[Red](#,##0) 39 0x27 (#,##0.00_);(#,##0.00) 40 0x28 (#,##0.00_);[Red](#,##0.00) 41 0x29 _(* #,##0_);_(* (#,##0);_(* \u0026#34;-\u0026#34;_);_(@_) 42 0x2a _($* #,##0_);_($* (#,##0);_($* \u0026#34;-\u0026#34;_);_(@_) 43 0x2b _(* #,##0.00_);_(* (#,##0.00);_(* \u0026#34;-\u0026#34;??_);_(@_) 44 0x2c _($* #,##0.00_);_($* (#,##0.00);_($* \u0026#34;-\u0026#34;??_);_(@_) 45 0x2d mm:ss 46 0x2e [h]:mm:ss 47 0x2f mm:ss.0 48 0x30 ##0.0E+0 49 0x31 @ 查看 formats.pl.中的\u0026#39;Numerical formats\u0026#39;工作表。 还可查看number_formats1.html 和number_formats2.html Note 1. Numeric formats 23 to 36 are not documented by Microsoft and may differ in international versions. 注意，23到36之间的数字格式在Microsoft中没有说明文档并且内部之间的版本可能不同。 Note 2. In Excel 5 the dollar sign appears as a dollar sign. In Excel 97-2000 it appears as the defined local currency symbol. 注意2，在Excel5中美元符号以美元符号出现。在Excel97-2000中作为当地定义的货币符号出现。 set_locked() Default state: Cell locking is on Default action: Turn locking on Valid args: 0, 1 This property can be used to prevent modification of a cells contents. Following Excel\u0026#39;s convention, cell locking is turned on by default. However, it only has an effect if the worksheet has been protected, see the worksheet \u0026#34;protect()\u0026#34; method. 该属性用于防止修改单元格的内容。根据Excel的约定，单元格默认被锁定。然而，只有当工作表被保护时，它才起作用。查看\u0026#34;protect()\u0026#34;方法。 my $locked = $workbook-\u0026gt;add_format(); $locked-\u0026gt;set_locked( 1 ); # A non-op my $unlocked = $workbook-\u0026gt;add_format(); $locked-\u0026gt;set_locked( 0 ); # 开启工作表保护 $worksheet-\u0026gt;protect(); # 该单元格不能被编辑. $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=1+2\u0026#39;, $locked ); # 这个单元格能被编辑. $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, \u0026#39;=1+2\u0026#39;, $unlocked ); 注意：即使有密码这也仅提供了很弱的保护，查看与\u0026#34;protect()\u0026#34; 方法有关的注意事项。 set_hidden() Default state: Formula hiding is off Default action: Turn hiding on Valid args: 0, 1 This property is used to hide a formula while still displaying its result. This is generally used to hide complex calculations from end users who are only interested in the result. It only has an effect if the worksheet has been protected, see the worksheet \u0026#34;protect()\u0026#34; method. 该属性用于隐藏一个公式但仍然显示该公式的结果。这通常用于对只关心结果的终端用户隐藏复杂的计算过程。只有当工作表开启保护时，该方法才起作用，查看\u0026#34;protect()\u0026#34; 方法。 my $hidden = $workbook-\u0026gt;add_format(); $hidden-\u0026gt;set_hidden(); # 开启工作表保护 $worksheet-\u0026gt;protect(); # 在这个单元格中的公式不可见 $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;=1+2\u0026#39;, $hidden ); 注意：即使使用密码，这也仅仅提供了很弱的保护，查看关于\u0026#34;protect()\u0026#34;方法的注意事项。 set_align() Default state: Alignment is off Default action: Left alignment Valid args: \u0026#39;left\u0026#39; Horizontal \u0026#39;center\u0026#39; \u0026#39;right\u0026#39; \u0026#39;fill\u0026#39; \u0026#39;justify\u0026#39; \u0026#39;center_across\u0026#39; \u0026#39;top\u0026#39; Vertical \u0026#39;vcenter\u0026#39; \u0026#39;bottom\u0026#39; \u0026#39;vjustify\u0026#39; This method is used to set the horizontal and vertical text alignment within a cell. Vertical and horizontal alignments can be combined. The method is used as follows: 该方法用于在单元格中设置文本的水平和垂直对齐方式。垂直和水平对齐方式可以结合。该方法用法如下： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_align( \u0026#39;center\u0026#39; ); $format-\u0026gt;set_align( \u0026#39;vcenter\u0026#39; ); $worksheet-\u0026gt;set_row( 0, 30 ); $worksheet-\u0026gt;write( 0, 0, \u0026#39;X\u0026#39;, $format ); Text can be aligned across two or more adjacent cells using the \u0026#34;center_across\u0026#34; property. However, for genuine merged cells it is better to use the \u0026#34;merge_range()\u0026#34; worksheet method. 使用\u0026#34;center_across\u0026#34;属性，文本可以在2个或更多相邻的单元格之间对齐。然而，对于真实的合并单元格最好使用\u0026#34;merge_range()\u0026#34;工作表方法。 The \u0026#34;vjustify\u0026#34; (vertical justify) option can be used to provide automatic text wrapping in a cell. The height of the cell will be adjusted to accommodate the wrapped text. To specify where the text wraps use the \u0026#34;set_text_wrap()\u0026#34; method. 在单元格中，\u0026#34;vjustify\u0026#34;（垂直调整）选项能用于提供自动文本环绕。单元格的高度会被自动调整以适应环绕文本。使用\u0026#34;set_text_wrap()\u0026#34;方法指定文本环绕的位置。 查看formats.pl生成的\u0026#39;Alignment\u0026#39; 工作表获取更多实例。 set_center_across() Default state: Center across selection is off Default action: Turn center across on Valid args: 1 Text can be aligned across two or more adjacent cells using the \u0026#34;set_center_across()\u0026#34; method. This is an alias for the \u0026#34;set_align(\u0026#39;center_across\u0026#39;)\u0026#34; method call. 使用\u0026#34;set_center_across()\u0026#34;方法，文本能够在2个或多个相邻单元格之间对齐。这是 \u0026#34;set_align(\u0026#39;center_across\u0026#39;)\u0026#34; 方法调用的别名。 Only one cell should contain the text, the other cells should be blank: 应该只有一个单元格包含文本，其它单元格是空的： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_center_across(); $worksheet-\u0026gt;write( 1, 1, \u0026#39;Center across selection\u0026#39;, $format ); $worksheet-\u0026gt;write_blank( 1, 2, $format ); See also the \u0026#34;merge1.pl\u0026#34; to \u0026#34;merge6.pl\u0026#34; programs in the \u0026#34;examples\u0026#34; directory and the \u0026#34;merge_range()\u0026#34; method. 查看\u0026#34;merge1.pl\u0026#34; 到\u0026#34;merge6.pl\u0026#34; 程序和\u0026#34;merge_range()\u0026#34;方法。 set_text_wrap() Default state: Text wrap is off Default action: Turn text wrap on Valid args: 0, 1 这儿有个例子 using the text wrap property, the escape character \u0026#34;\\n\u0026#34; is used to indicate the end of line: 这儿有个使用文本环绕属性的例子， my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_text_wrap(); $worksheet-\u0026gt;write( 0, 0, \u0026#34;It\u0026#39;s\\na bum\\nwrap\u0026#34;, $format ); Excel will adjust the height of the row to accommodate the wrapped text. A similar effect can be obtained without newlines using the \u0026#34;set_align(\u0026#39;vjustify\u0026#39;)\u0026#34; method. See the \u0026#34;textwrap.pl\u0026#34; program in the \u0026#34;examples\u0026#34; directory. Excel会调整行高以适应环绕文本。使用\u0026#34;set_align(\u0026#39;vjustify\u0026#39;)\u0026#34; 方法不换行就能获得相似的效果。查看\u0026#34;textwrap.pl\u0026#34;程序。 set_rotation() Default state: Text rotation is off Default action: None Valid args: Integers in the range -90 to 90 and 270 Set the rotation of the text in a cell. The rotation can be any angle in the range -90 to 90 degrees. 在Excel中设置文本旋转。旋转的度数可以在-90度到90度之间。 my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_rotation( 30 ); $worksheet-\u0026gt;write( 0, 0, \u0026#39;This text is rotated\u0026#39;, $format ); The angle 270 is also supported. This indicates text where the letters run from top to bottom. 也支持270度旋转。这表明文本中的字母从顶部旋转到底部。？ set_indent() Default state: Text indentation is off Default action: Indent text 1 level Valid args: Positive integers This method can be used to indent text. The argument, which should be an integer, is taken as the level of indentation: 该方法用于缩排文本。参数应该是一个整数，作为缩进的级别： my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_indent( 2 ); $worksheet-\u0026gt;write( 0, 0, \u0026#39;This text is indented\u0026#39;, $format ); Indentation is a horizontal alignment property. It will override any other horizontal properties but it can be used in conjunction with vertical properties. 缩进是水平对齐属性。它会覆盖其它任何水平属性但它能与垂直属性一起使用。 set_shrink() Default state: Text shrinking is off Default action: Turn \u0026#34;shrink to fit\u0026#34; on Valid args: 1 This method can be used to shrink text so that it fits in a cell. 该方法用于收缩文本以适应单元格的大小。 my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_shrink(); $worksheet-\u0026gt;write( 0, 0, \u0026#39;Honey, I shrunk the text!\u0026#39;, $format ); set_text_justlast() Default state: Justify last is off Default action: Turn justify last on Valid args: 0, 1 Only applies to Far Eastern versions of Excel. 只对远东版本的Excel适用。 set_pattern() 默认状态: Pattern is off 默认行为: Solid fill is on 合法参数: 0 .. 18 Set the background pattern of a cell. 设置单元格的背景图案。 Examples of the available patterns are shown in the \u0026#39;Patterns\u0026#39; worksheet created by formats.pl. However, it is unlikely that you will ever need anything other than Pattern 1 which is a solid fill of the background color. 可用图案的例子显示在formats.pl创建的\u0026#39;Patterns\u0026#39;工作表中。然而，除了图案1是背景色的完全填充外你不在需要其它东西是不可能的。？ set_bg_color() Default state: Color is off Default action: Solid fill. Valid args: See set_color() The \u0026#34;set_bg_color()\u0026#34; method can be used to set the background colour of a pattern. Patterns are defined via the \u0026#34;set_pattern()\u0026#34; method. If a pattern hasn\u0026#39;t been defined then a solid fill pattern is used as the default. \u0026#34;set_bg_color()\u0026#34;方法用于设置图案的背景颜色。图案通过\u0026#34;set_pattern()\u0026#34;方法定义。如果没有定义图案，则默认使用完全填充图案。 这儿有个怎样在单元格中设置完全填充的例子： of how to set up a solid fill in a cell: my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_pattern(); # 使用完全填充是这是可选的 $format-\u0026gt;set_bg_color( \u0026#39;green\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;Ray\u0026#39;, $format ); 查看formats.pl程序中的\u0026#39;Patterns\u0026#39;工作表获取更多例子。 set_fg_color() Default state: Color is off Default action: Solid fill. Valid args: See set_color() \u0026#34;set_fg_color()\u0026#34;方法用于设置图案的前景色。 查看formats.pl程序中的\u0026#39;Patterns\u0026#39;工作表获取更多例子。 set_border() Also applies to: set_bottom() set_top() set_left() set_right() Default state: Border is off Default action: Set border type 1 Valid args: 0-13, See below. 单元格边框由底部的、顶部的、左侧的、右侧的边框组成。这些边框能使用\u0026#34;set_border()\u0026#34;设置为同样的颜色，或单独使用上面展示的相关方法调用。 下面显示了由Excel::Writer::XLSX按索引号排序后的边框样式： Index Name Weight Style ===== ============= ====== =========== 0 None 0 1 Continuous 1 ----------- 2 Continuous 2 ----------- 3 Dash 1 - - - - - - 4 Dot 1 . . . . . . 5 Continuous 3 ----------- 6 Double 3 =========== 7 Continuous 0 ----------- 8 Dash 2 - - - - - - 9 Dash Dot 1 - . - . - . 10 Dash Dot 2 - . - . - . 11 Dash Dot Dot 1 - . . - . . 12 Dash Dot Dot 2 - . . - . . 13 SlantDash Dot 2 / - . / - . 下面显示了按样式排序后的边框： Name Weight Style Index ============= ====== =========== ===== Continuous 0 ----------- 7 Continuous 1 ----------- 1 Continuous 2 ----------- 2 Continuous 3 ----------- 5 Dash 1 - - - - - - 3 Dash 2 - - - - - - 8 Dash Dot 1 - . - . - . 9 Dash Dot 2 - . - . - . 10 Dash Dot Dot 1 - . . - . . 11 Dash Dot Dot 2 - . . - . . 12 Dot 1 . . . . . . 4 Double 3 =========== 6 None 0 0 SlantDash Dot 2 / - . / - . 13 下面显式了在Excel对话框中排序后的边框： Index Style Index Style ===== ===== ===== ===== 0 None 12 - . . - . . 7 ----------- 13 / - . / - . 4 . . . . . . 10 - . - . - . 11 - . . - . . 8 - - - - - - 9 - . - . - . 2 ----------- 3 - - - - - - 5 ----------- 1 ----------- 6 =========== Examples of the available border styles are shown in the \u0026#39;Borders\u0026#39; worksheet created by formats.pl. 可用的边框样式的例子显示在由formats.pl创建的\u0026#39;Borders\u0026#39;工作表中。 set_border_color() Also applies to: set_bottom_color() set_top_color() set_left_color() set_right_color() Default state: Color is off Default action: Undefined Valid args: See set_color() 设置单元格边框的颜色。单元格边框由底边框、顶边框、左边框和右边框组成。 这些边框能使用\u0026#34;set_border()\u0026#34;设置为同样的颜色，或单独使用上面展示的相关方法调用。 边框样式和颜色的例子显示在由formats.pl程序创建的 \u0026#39;Borders\u0026#39;工作表中。 copy( $format ) This method is used to copy all of the properties from one Format object to another: 该方法用于从一个格式对象中复制所有的属性到另一个格式对象中： my $lorry1 = $workbook-\u0026gt;add_format(); $lorry1-\u0026gt;set_bold(); $lorry1-\u0026gt;set_italic(); $lorry1-\u0026gt;set_color( \u0026#39;red\u0026#39; ); # lorry1 is bold, italic and red my $lorry2 = $workbook-\u0026gt;add_format(); $lorry2-\u0026gt;copy( $lorry1 ); $lorry2-\u0026gt;set_color( \u0026#39;yellow\u0026#39; ); # lorry2 is bold, italic and yellow The \u0026#34;copy()\u0026#34; method is only useful if you are using the method interface to Format properties. It generally isn\u0026#39;t required if you are setting Format properties directly using hashes. \u0026#34;copy()\u0026#34;方法只有在你使用该方法接口的格式属性是有用的。如果你直接使用散列设置格式的属性，那一般不需要copy()方法。 注意：这不是一个复制构造函数，在复制之前2个对象都必须是存在的。 UNICODE IN EXCEL 下面是在 \u0026#34;Excel::Writer::XLSX\u0026#34;中处理Unicode的简介。 Excel::Writer::XLSX与Spreadsheet::WriteExcel 的写入方式不同，后者只处理UTF-8格式的Unicode数据，并且不能处理遗留的UTF-16的Excel格式。 如果数据是UTF-8格式的，则 Excel::Writer::XLSX 会自动处理它。 如果你处理的是非UTF-8格式的non-ASCII字符，则perl会提供有用的Encode工具模块帮助你转换为需要的格式，例如： use Encode \u0026#39;decode\u0026#39;; my $string = \u0026#39;some string with koi8-r characters\u0026#39;; $string = decode(\u0026#39;koi8-r\u0026#39;, $string); # koi8-r to utf8 Alternatively you can read data from an encoded file and convert it to \u0026#34;UTF-8\u0026#34; as you read it in: 作为选择，当你读入数据时，你能从一个编码后文件中读取数据并将数据转换为UTF-8： my $file = \u0026#39;unicode_koi8r.txt\u0026#39;; open FH, \u0026#39;\u0026lt;:encoding(koi8-r)\u0026#39;, $file or die \u0026#34;Couldn\u0026#39;t open $file: $!\\n\u0026#34;; my $row = 0; while ( \u0026lt;FH\u0026gt; ) { # Data read in is now in utf8 format. chomp; $worksheet-\u0026gt;write( $row++, 0, $_ ); } 也请查看\u0026#34;unicode_*.pl\u0026#34;程序。 COLOURS IN EXCEL Excel provides a colour palette of 56 colours. In Excel::Writer::XLSX these colours are accessed via their palette index in the range 8..63. This index is used to set the colour of fonts, cell patterns and cell borders. 例如，: Excel提供了56种颜色的调色板。在Excel::Writer::XLSX中这些颜色通过它们的颜料索值引来访问，索引值范围是8..63。此处的索引值用于设置字体颜色、单元格图案和单元格边框。例如： my $format = $workbook-\u0026gt;add_format( color =\u0026gt; 12, # index for blue font =\u0026gt; \u0026#39;Arial\u0026#39;, size =\u0026gt; 12, bold =\u0026gt; 1, ); 最常用的颜色也能通过它们的名字访问。名字作为颜色索引的简单别名： black =\u0026gt; 8 blue =\u0026gt; 12 brown =\u0026gt; 16 cyan =\u0026gt; 15 gray =\u0026gt; 23 green =\u0026gt; 17 lime =\u0026gt; 11 magenta =\u0026gt; 14 navy =\u0026gt; 18 orange =\u0026gt; 53 pink =\u0026gt; 33 purple =\u0026gt; 20 red =\u0026gt; 10 silver =\u0026gt; 22 white =\u0026gt; 9 yellow =\u0026gt; 13 例如: my $font = $workbook-\u0026gt;add_format( color =\u0026gt; \u0026#39;red\u0026#39; ); Excel的VBA用户应该注意等价的颜色索引是1..56而非8..63. If the default palette does not provide a required colour you can override one of the built-in values. This is achieved by using the \u0026#34;set_custom_color()\u0026#34; workbook method to adjust the RGB (red green blue) components of the colour: 如果默认的颜料不能提供你想要的颜色，你可以重写其中的内置值。使用\u0026#34;set_custom_color()\u0026#34;工作簿方法来调整颜色的RGB（红 绿 蓝）成分可以做到这点： my $ferrari = $workbook-\u0026gt;set_custom_color( 40, 216, 12, 12 ); my $format = $workbook-\u0026gt;add_format( bg_color =\u0026gt; $ferrari, pattern =\u0026gt; 1, border =\u0026gt; 1 ); $worksheet-\u0026gt;write_blank( \u0026#39;A1\u0026#39;, $format ); 查看\u0026#34;colors.pl\u0026#34; 程序。 DATES AND TIME IN EXCEL 理解Excel中的日期和时间，有2件重要的事情： 1、Excel中的日期/时间 是一个实数加上一个Excel数字格式。 2、Excel::Writer::XLSX 中的\u0026#34;write()\u0026#34;方法不会自动将“日期/时间”字符串转换成Excel的‘日期/时间’。 伴随下面的关于怎样将时间和日期转换成需要的格式的一些建议，这2点会有更详细的解释。 Excel的“日期/时间”就是数字加上格式 If you write a date string with \u0026#34;write()\u0026#34; then all you will get is a string: 如果你使用\u0026#34;write()\u0026#34;方法写入日期字符串，则所有你将得到的会是一个字符串： $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, \u0026#39;02/03/04\u0026#39; ); # !! 写入一个字符串而非一个日期. !! Excel中日期和数字代表实数，例如，\u0026#34;Jan 1 2001 12:30 AM\u0026#34;代表数字36892.521. 数据的整数部分存储的是自纪元以来的天数，小数部分存储的是一天的百分比。 Excel中的日期或时间与其它任何数字相似。为了让数字以日期的形式显示，你必须将一个Excel数字格式应用到这个数字上。下面是一些例子： #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;date_examples.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet(); $worksheet-\u0026gt;set_column( \u0026#39;A:A\u0026#39;, 30 ); # For extra visibility. my $number = 39506.5; $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, $number ); # 39506.5 my $format2 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;dd/mm/yy\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A2\u0026#39;, $number, $format2 ); # 28/02/08 my $format3 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mm/dd/yy\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A3\u0026#39;, $number, $format3 ); # 02/28/08 my $format4 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;d-m-yyyy\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A4\u0026#39;, $number, $format4 ); # 28-2-2008 my $format5 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;dd/mm/yy hh:mm\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A5\u0026#39;, $number, $format5 ); # 28/02/08 12:00 my $format6 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;d mmm yyyy\u0026#39; ); $worksheet-\u0026gt;write( \u0026#39;A6\u0026#39;, $number, $format6 ); # 28 Feb 2008 my $format7 = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mmm d yyyy hh:mm AM/PM\u0026#39; ); $worksheet-\u0026gt;write(\u0026#39;A7\u0026#39;, $number , $format7); # Feb 28 2008 12:00 PM Excel::Writer::XLSX 不自动转换“日期/时间”字符串 Excel::Writer::XLSX doesn\u0026#39;t automatically convert input date strings into Excel\u0026#39;s formatted date numbers due to the large number of possible date formats and also due to the possibility of misinterpretation. 由于可用的日期格式数量很大，也由于可能的误解，Excel::Writer::XLSX不能将输入的日期字符串自动转换为Excel的格式化日期数字。 例如，, does \u0026#34;02/03/04\u0026#34; mean March 2 2004, February 3 2004 or even March 4 2002. 例如，\u0026#34;02/03/04\u0026#34;的意思是 March 2 2004, February 3 2004 甚至是 March 4 2002吗？ Therefore, in order to handle dates you will have to convert them to numbers and apply an Excel format. Some methods for converting dates are listed in the next section. 因此，为了处理日期你必须将它们转换为数字并应用一个Excel格式。转换日期的一些方法在下面的章节中列出。 最直接的方式是将你的数据转换为ISO8601\u0026#34;yyyy-mm-ddThh:mm:ss.sss\u0026#34; 日期格式，并使用\u0026#34;write_date_time()\u0026#34;工作表方法: $worksheet-\u0026gt;write_date_time( \u0026#39;A2\u0026#39;, \u0026#39;2001-01-01T12:20\u0026#39;, $format ); 查看文档的\u0026#34;write_date_time()\u0026#34;章节获取详细信息。 处理日期字符的一般方法是使用\u0026#34;write_date_time()\u0026#34;： 1.使用正则表达式识别输入的日期/时间。 2.使用同样的正则表达式提取日期/时间的组成部分。 3.将日期/时间转换为ISO8601格式。 4.使用 write_date_time()和数字格式写入日期/时间。 这儿有个例子: #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;example.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet(); # 为数据设置默认格式 my $date_format = $workbook-\u0026gt;add_format( num_format =\u0026gt; \u0026#39;mmm d yyyy\u0026#39; ); # Increase column width to improve visibility of data. $worksheet-\u0026gt;set_column( \u0026#39;A:C\u0026#39;, 20 ); # Simulate reading from a data source. my $row = 0; while ( \u0026lt;DATA\u0026gt; ) { chomp; my $col = 0; my @data = split \u0026#39; \u0026#39;; for my $item ( @data ) { # Match dates in the following formats: d/m/yy, d/m/yyyy if ( $item =~ qr[^(\\d{1,2})/(\\d{1,2})/(\\d{4})$] ) { # Change to the date format required by write_date_time(). my $date = sprintf \u0026#34;%4d-%02d-%02dT\u0026#34;, $3, $2, $1; $worksheet-\u0026gt;write_date_time( $row, $col++, $date, $date_format ); } else { # Just plain data $worksheet-\u0026gt;write( $row, $col++, $item ); } } $row++; } __DATA__ Item Cost Date Book 10 1/9/2007 Beer 4 12/9/2007 Bed 500 5/10/2007 更高级的方法你可以通过\u0026#34;add_write_handler()\u0026#34;方法修改\u0026#34;write()\u0026#34;方法来处理你选择的数据格式。查看\u0026#34;add_write_handler()\u0026#34;章节和write_handler3.pl、 write_handler4.pl程序。 Converting dates and times to an Excel date or time 将日期和时间转换为Excel的日期或时间 上面的\u0026#34;write_date_time()\u0026#34; 方法只是处理日期和时间的方法之一。 You can also use the \u0026#34;convert_date_time()\u0026#34; worksheet method to convert from an ISO8601 style date string to an Excel date and time number. 你也可以使用\u0026#34;convert_date_time()\u0026#34;工作表方法将ISO8601风格的字符串转换为Excel的日期和时间数字。 Excel::Writer::XLSX::Utility模块有日期时间处理函数： use Excel::Writer::XLSX::Utility; $date = xl_date_list(2002, 1, 1); # 37257 $date = xl_parse_date(\u0026#34;11 July 1997\u0026#34;); # 35622 $time = xl_parse_time(\u0026#39;3:21:36 PM\u0026#39;); # 0.64 $date = xl_decode_date_EU(\u0026#34;13 May 2002\u0026#34;); # 37389 注意，有些函数需要额外的CPAN模块。 OUTLINES AND GROUPING IN EXCEL Excel中的组和分级显示 Excel allows you to group rows or columns so that they can be hidden or displayed with a single mouse click. This feature is referred to as outlines. Excel允许你将行或列分组，以使单击鼠标时它们能被隐藏或显示。该功能叫做分级显示。 Outlines can reduce complex data down to a few salient sub-totals or summaries. 分级显示能将复杂数据减少到几个突出的小计或总结。 This feature is best viewed in Excel but the following is an ASCII representation of what a worksheet with three outlines might look like. Rows 3-4 and rows 7-8 are grouped at level 2. Rows 2-9 are grouped at level 1. The lines at the left hand side are called outline level bars. 该功能最好在Excel中查看，但下面的是带有3个分级显示的工作表所代表的ASCII图。 3-4行与7-8行在第2级别分组。2-9行在第一级别被分组。左侧的线叫做分级显示条。 ------------------------------------------ 1 2 3 | | A | B | C | D | ... ------------------------------------------ _ | 1 | A | | | | ... | _ | 2 | B | | | | ... | | | 3 | (C) | | | | ... | | | 4 | (D) | | | | ... | - | 5 | E | | | | ... | _ | 6 | F | | | | ... | | | 7 | (G) | | | | ... | | | 8 | (H) | | | | ... | - | 9 | I | | | | ... - | . | ... | ... | ... | ... | ... Clicking the minus sign on each of the level 2 outlines will collapse and hide the data as shown in the next figure. The minus sign changes to a plus sign to indicate that the data in the outline is hidden. 在每个级别2点击减号(-),分级会折叠并且隐藏下一图形中的数据。当减号变为加号时，表明分级显示中的数据被隐藏。 ------------------------------------------ 1 2 3 | | A | B | C | D | ... ------------------------------------------ _ | 1 | A | | | | ... | | 2 | B | | | | ... | + | 5 | E | | | | ... | | 6 | F | | | | ... | + | 9 | I | | | | ... - | . | ... | ... | ... | ... | ... Clicking on the minus sign on the level 1 outline will collapse the remaining rows as follows: 点击级别1中的减号，分级会按如下方式折叠剩余的行： ------------------------------------------ 1 2 3 | | A | B | C | D | ... ------------------------------------------ | 1 | A | | | | ... + | . | ... | ... | ... | ... | ... Grouping in \u0026#34;Excel::Writer::XLSX\u0026#34; is achieved by setting the outline level via the \u0026#34;set_row()\u0026#34; and \u0026#34;set_column()\u0026#34; worksheet methods: 通过\u0026#34;set_row()\u0026#34; 和 \u0026#34;set_column()\u0026#34;方法设置分级显示，\u0026#34;Excel::Writer::XLSX\u0026#34; 能完成数据分组： set_row( $row, $height, $format, $hidden, $level, $collapsed ) set_column( $first_col, $last_col, $width, $format, $hidden, $level, $collapsed ) The following example sets an outline level of 1 for rows 1 and 2 (zero-indexed) and columns B to G. The parameters $height and $XF are assigned default values since they are undefined: 下面的例子为1-2行（从0开始索引）和B-G列设置了级别为1的分级显示。参数$height 和 $XF指定了默认值，因为它们是未定义的（undefined）： $worksheet-\u0026gt;set_row( 1, undef, undef, 0, 1 ); $worksheet-\u0026gt;set_row( 2, undef, undef, 0, 1 ); $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 0, 1 ); Excel allows up to 7 outline levels. Therefore the $level parameter should be in the range \u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;. Excel允许多大7个分级显示。因此，$level参数应该在范围 \u0026#34;0 \u0026lt;= $level \u0026lt;= 7\u0026#34;。 Rows and columns can be collapsed by setting the $hidden flag for the hidden rows/columns and setting the $collapsed flag for the row/column that has the collapsed \u0026#34;+\u0026#34; symbol: 通过为隐藏的行或列设置$hidden标记并且为带有\u0026#34;+\u0026#34;号的行或列设置$collapsed标记来折叠行或列： $worksheet-\u0026gt;set_row( 1, undef, undef, 1, 1 ); $worksheet-\u0026gt;set_row( 2, undef, undef, 1, 1 ); $worksheet-\u0026gt;set_row( 3, undef, undef, 0, 0, 1 ); # Collapsed flag. $worksheet-\u0026gt;set_column( \u0026#39;B:G\u0026#39;, undef, undef, 1, 1 ); $worksheet-\u0026gt;set_column( \u0026#39;H:H\u0026#39;, undef, undef, 0, 0, 1 ); # Collapsed flag. Note: Setting the $collapsed flag is particularly important for compatibility with OpenOffice.org and Gnumeric. 注意：设置$collapsed标记对于兼容OpenOffice.org 和电子表格特别重要。 查看\u0026#34;outline.pl\u0026#34;和\u0026#34;outline_collapsed.pl\u0026#34; 程序。 Some additional outline properties can be set via the \u0026#34;outline_settings()\u0026#34; worksheet method, see above. 一些额外的分级显示属性能通过\u0026#34;outline_settings()\u0026#34;工作表方法设置，查看上面的例子。 DATA VALIDATION IN EXCEL Excel中的数据验证 Data validation is a feature of Excel which allows you to restrict the data that a users enters in a cell and to display help and warning messages. It also allows you to restrict input to values in a drop down list. 数据验证是Excel的一种功能，它允许你限制用户在单元格中输入的数据并且显示帮助和警告信息。它也允许你在一个下拉列表中限制输入值。 A typical use case might be to restrict data in a cell to integer values in a certain range, to provide a help message to indicate the required value and to issue a warning if the input data doesn\u0026#39;t meet the stated criteria. In Excel::Writer::XLSX we could do that as follows: 一个典型的使用实例可能是在一定范围内将单元格中的数据限制为整数。如果输入的数据不符合标准，它会提供帮助信息指定需要的值或发出一个警告。在Excel::Writer::XLSX中我们可以使用如下的方法： $worksheet-\u0026gt;data_validation(\u0026#39;B3\u0026#39;, { validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 1, maximum =\u0026gt; 100, input_title =\u0026gt; \u0026#39;Input an integer:\u0026#39;, input_message =\u0026gt; \u0026#39;Between 1 and 100\u0026#39;, error_message =\u0026gt; \u0026#39;Sorry, try again.\u0026#39;, }); The following sections describe how to use the \u0026#34;data_validation()\u0026#34; method and its various options. 下面的章节描述了怎样使用\u0026#34;data_validation()\u0026#34;方法和它的各种选项。 data_validation( $row, $col, { parameter =\u0026gt; \u0026#39;value\u0026#39;, ... } ) The \u0026#34;data_validation()\u0026#34; method is used to construct an Excel data validation. \u0026#34;data_validation()\u0026#34;方法用于构建一个Excel数据验证。 It can be applied to a single cell or a range of cells. You can pass 3 parameters such as \u0026#34;($row, $col, {...})\u0026#34; or 5 parameters such as \u0026#34;($first_row, $first_col, $last_row, $last_col, {...})\u0026#34;. You can also use \u0026#34;A1\u0026#34; style notation. 例如，: 它能用于单个单元格或一定范围内的单元格。你可以传递3个参数诸如\u0026#34;($row, $col, {...})\u0026#34;或5个参数诸如 \u0026#34;($first_row, $first_col, $last_row, $last_col, {...})\u0026#34;。你也可以使用A1风格的表示法，例如： $worksheet-\u0026gt;data_validation( 0, 0, {...} ); $worksheet-\u0026gt;data_validation( 0, 0, 4, 1, {...} ); # Which are the same as: $worksheet-\u0026gt;data_validation( \u0026#39;A1\u0026#39;, {...} ); $worksheet-\u0026gt;data_validation( \u0026#39;A1:B5\u0026#39;, {...} ); The last parameter in \u0026#34;data_validation()\u0026#34; must be a hash ref containing the parameters that describe the type and style of the data validation. The allowable parameters are: \u0026#34;data_validation()\u0026#34;中的最后一个参数必须是一个包含描述数据验证的类型和风格参数的散列引用。允许的参数是： validate criteria value | minimum | source maximum ignore_blank dropdown input_title input_message show_input error_title error_message error_type show_error These parameters are explained in the following sections. Most of the parameters are optional, however, you will generally require the three main options \u0026#34;validate\u0026#34;, \u0026#34;criteria\u0026#34; and \u0026#34;value\u0026#34;. 这些参数在下面的章节中有描述。大多数参数是可选的，然而，你通常需要三个主要选项\u0026#34;validate\u0026#34;, \u0026#34;criteria\u0026#34; 和 \u0026#34;value\u0026#34;. $worksheet-\u0026gt;data_validation(\u0026#39;B3\u0026#39;, { validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 100, }); \u0026#34;data_validation\u0026#34; 方法返回: 0 成功. -1 参数个数不足. -2 行或列超界. -3 参数或值不正确. validate This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 此参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 \u0026#34;validate\u0026#34;参数用于设置你想验证的数据类型。该参数总是需要的并且没有默认值。 允许的值是： any integer decimal list date time length custom * any is used to specify that the type of data is unrestricted. This is the same as not applying a data validation. It is only provided for completeness and isn\u0026#39;t used very often in the context of Excel::Writer::XLSX. any用于指定数据类型是无限制的。这与不使用数据验证相同。它只为完整性提供并且不会在Excel::Writer::XLSX内容中经常使用。 * integer restricts the cell to integer values. Excel refers to this as \u0026#39;whole number\u0026#39;. integer限制单元格的值为整数。Excel将此引用为整数。 validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 100, * decimal限制单元格的值为十进制值。 validate =\u0026gt; \u0026#39;decimal\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 38.6, * list restricts the cell to a set of user specified values. These can be passed in an array ref or as a cell range (named ranges aren\u0026#39;t currently supported): list限制单元格的值为一列用户指定的值。这些值能在数组引用或单元格范围（目前不支持命名范围）中传递： validate =\u0026gt; \u0026#39;list\u0026#39;, value =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;], # Or like this: value =\u0026gt; \u0026#39;B1:B3\u0026#39;, Excel requires that range references are only to cells on the same worksheet. Excel要求值域引用只是针对同一工作表的单元格的。 * date restricts the cell to date values. Dates in Excel are expressed as integer values but you can also pass an ISO860 style string as used in \u0026#34;write_date_time()\u0026#34;. See also \u0026#34;DATES AND TIME IN EXCEL\u0026#34; for more information about working with Excel\u0026#39;s dates. date限制单元格的值为日期。Excel中的日期被计算为整数，但你也可以像\u0026#34;write_date_time()\u0026#34;使用的那样，传递一个ISO860风格的字符串。 validate =\u0026gt; \u0026#39;date\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 39653, # 24 July 2008 # Or like this: value =\u0026gt; \u0026#39;2008-07-24T\u0026#39;, * time restricts the cell to time values. Times in Excel are expressed as decimal values but you can also pass an ISO860 style string as used in \u0026#34;write_date_time()\u0026#34;. See also \u0026#34;DATES AND TIME IN EXCEL\u0026#34; for more information about working with Excel\u0026#39;s times. time限制单元格的值为时间。Excel中的时间被解释为十进制值，但你也可以像\u0026#34;write_date_time()\u0026#34;使用的那样，传递一个ISO860风格的字符串。 validate =\u0026gt; \u0026#39;time\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 0.5, # Noon # Or like this: value =\u0026gt; \u0026#39;T12:00:00\u0026#39;, * length restricts the cell data based on an integer string length. Excel refers to this as \u0026#39;Text length\u0026#39;. length根据一个整数字符串长度限制单元格数据。Excel将该值引用为文本长度。 validate =\u0026gt; \u0026#39;length\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 10, * custom restricts the cell based on an external Excel formula that returns a \u0026#34;TRUE/FALSE\u0026#34; value. custom根据返回“TRUE/FALSE”值的外部Excel公式限制单元格。 validate =\u0026gt; \u0026#39;custom\u0026#39;, value =\u0026gt; \u0026#39;=IF(A10\u0026gt;B10,TRUE,FALSE)\u0026#39;, criteria This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在一个散列引用中传递到\u0026#34;data_validation()\u0026#34;。 The \u0026#34;criteria\u0026#34; parameter is used to set the criteria by which the data in the cell is validated. It is almost always required except for the \u0026#34;list\u0026#34; and \u0026#34;custom\u0026#34; validate options. It has no default value. Allowable values are: \u0026#34;criteria\u0026#34;参数用于设置单元格中验证后的数据设置的标准。他几乎总是需要，除了 \u0026#34;list\u0026#34; 和 \u0026#34;custom\u0026#34;验证选项。它没有默认值。允许的值为： \u0026#39;between\u0026#39; \u0026#39;not between\u0026#39; \u0026#39;equal to\u0026#39; | \u0026#39;==\u0026#39; | \u0026#39;=\u0026#39; \u0026#39;not equal to\u0026#39; | \u0026#39;!=\u0026#39; | \u0026#39;\u0026lt;\u0026gt;\u0026#39; \u0026#39;greater than\u0026#39; | \u0026#39;\u0026gt;\u0026#39; \u0026#39;less than\u0026#39; | \u0026#39;\u0026lt;\u0026#39; \u0026#39;greater than or equal to\u0026#39; | \u0026#39;\u0026gt;=\u0026#39; \u0026#39;less than or equal to\u0026#39; | \u0026#39;\u0026lt;=\u0026#39; You can either use Excel\u0026#39;s textual description strings, in the first column above, or the more common symbolic alternatives. The following are equivalent: 你也可以使用Excel的文本描述字符串，在上面的第一列中，或更普通的备选符号。下面的是等价的： validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;greater than\u0026#39;, value =\u0026gt; 100, validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 100, The \u0026#34;list\u0026#34; and \u0026#34;custom\u0026#34; validate options don\u0026#39;t require a \u0026#34;criteria\u0026#34;. If you specify one it will be ignored. \u0026#34;list\u0026#34; 和 \u0026#34;custom\u0026#34;有效性选项不需要以个标准。如果你指定一个它会被忽略。 validate =\u0026gt; \u0026#39;list\u0026#39;, value =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;], validate =\u0026gt; \u0026#39;custom\u0026#39;, value =\u0026gt; \u0026#39;=IF(A10\u0026gt;B10,TRUE,FALSE)\u0026#39;, value | minimum | source This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给 \u0026#34;data_validation()\u0026#34;。 The \u0026#34;value\u0026#34; parameter is used to set the limiting value to which the \u0026#34;criteria\u0026#34; is applied. It is always required and it has no default value. You can also use the synonyms \u0026#34;minimum\u0026#34; or \u0026#34;source\u0026#34; to make the validation a little clearer and closer to Excel\u0026#39;s description of the parameter: \u0026#34;value\u0026#34;参数用于对应用了\u0026#34;criteria\u0026#34;的值设置极限值。它总是被需要，并且它没有默认值。你也可以使用同义词 \u0026#34;minimum\u0026#34;或\u0026#34;source\u0026#34;让有效性检验更清晰并且与Excel的参数描述更相近： # Use \u0026#39;value\u0026#39; validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 100, # Use \u0026#39;minimum\u0026#39; validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 1, maximum =\u0026gt; 100, # Use \u0026#39;source\u0026#39; validate =\u0026gt; \u0026#39;list\u0026#39;, source =\u0026gt; \u0026#39;$B$1:$B$3\u0026#39;, maximum This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;maximum\u0026#34; parameter is used to set the upper limiting value when the \u0026#34;criteria\u0026#34; is either \u0026#39;between\u0026#39; or \u0026#39;not between\u0026#39;: 当\u0026#34;criteria\u0026#34;的值是 \u0026#39;between\u0026#39; 或 \u0026#39;not between\u0026#39;时，\u0026#34;maximum\u0026#34;参数用于设置值的上限。 validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 1, maximum =\u0026gt; 100, ignore_blank This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;ignore_blank\u0026#34; parameter is used to toggle on and off the \u0026#39;Ignore blank\u0026#39; option in the Excel data validation dialog. When the option is on the data validation is not applied to blank data in the cell. It is on by default. \u0026#34;ignore_blank\u0026#34;参数用于在Excel的数据有效性检查对话框中开启或关闭\u0026#39;Ignore blank\u0026#39;选项。当该选项开启时，数据有效性检验不会应用到单元格中的空白数据上。默认它是开启的。 ignore_blank =\u0026gt; 0, # Turn the option off dropdown This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;dropdown\u0026#34; parameter is used to toggle on and off the \u0026#39;In-cell dropdown\u0026#39; option in the Excel data validation dialog. When the option is on a dropdown list will be shown for \u0026#34;list\u0026#34; validations. It is on by default. \u0026#34;dropdown\u0026#34;参数用于在Excel的数据有效性对话框中开启或关闭\u0026#39;In-cell dropdown\u0026#39;选项。当开启该选项时，会因为列表验证而出现下拉列表。默认它是开启的。？ dropdown =\u0026gt; 0, # Turn the option off input_title This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;input_title\u0026#34; parameter is used to set the title of the input message that is displayed when a cell is entered. It has no default value and is only displayed if the input message is displayed. See the \u0026#34;input_message\u0026#34; parameter below. \u0026#34;input_title\u0026#34;参数用于设置输入信息的标题，它没有默认值，并且只有当输入消息显示时才出现。查看下面的 \u0026#34;input_message\u0026#34; 参数。 input_title =\u0026gt; \u0026#39;This is the input title\u0026#39;, The maximum title length is 32 characters. 最大的标题长度是32个字符。 input_message 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;input_message\u0026#34; parameter is used to set the input message that is displayed when a cell is entered. It has no default value. \u0026#34;input_message\u0026#34;参数用于设置键入单元格时显示的输入消息。它没有默认值。 validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 1, maximum =\u0026gt; 100, input_title =\u0026gt; \u0026#39;Enter the applied discount:\u0026#39;, input_message =\u0026gt; \u0026#39;between 1 and 100\u0026#39;, The message can be split over several lines using newlines, \u0026#34;\\n\u0026#34; in double quoted strings. 消息可以使用换行分隔为几行。\u0026#34;\\n\u0026#34;在双引号字符串中。 input_message =\u0026gt; \u0026#34;This is\\na test. The maximum message length is 255 characters. 消息的最大长度是255个字符。 show_input This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;show_input\u0026#34; parameter is used to toggle on and off the \u0026#39;Show input message when cell is selected\u0026#39; option in the Excel data validation dialog. When the option is off an input message is not displayed even if it has been set using \u0026#34;input_message\u0026#34;. It is on by default. \u0026#34;show_input\u0026#34;参数用于在Excel的数据有效性检查对话框中开启或关闭\u0026#39;Show input message when cell is selected\u0026#39;选项。当该选项关闭时，输入信息不会显示，即使它设置了\u0026#34;input_message\u0026#34;。默认它是开启的。 show_input =\u0026gt; 0, # Turn the option off error_title This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;error_title\u0026#34; parameter is used to set the title of the error message that is displayed when the data validation criteria is not met. The default error title is \u0026#39;Microsoft Excel\u0026#39;. error_title =\u0026gt; \u0026#39;Input value is not valid\u0026#39;, The maximum title length is 32 characters. 标题的最大长度是32个字符。 error_message This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;error_message\u0026#34; parameter is used to set the error message that is displayed when a cell is entered. The default error message is \u0026#34;The value you entered is not valid.A user has restricted values that can be entered into the cell.\u0026#34;. \u0026#34;error_message\u0026#34; 参数用于设置键入单元格时显示的输入消息。默认的错误消息是\u0026#34;The value you entered is not valid.\u0026#34;。用户限制了能输入到单元格中的值。 validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 1, maximum =\u0026gt; 100, error_title =\u0026gt; \u0026#39;Input value is not valid\u0026#39;, error_message =\u0026gt; \u0026#39;It should be an integer between 1 and 100\u0026#39;, The message can be split over several lines using newlines, \u0026#34;\\n\u0026#34; in double quoted strings. 消息可以使用换行分隔为几行。\u0026#34;\\n\u0026#34;在双引号字符串中。 input_message =\u0026gt; \u0026#34;This is\\na test.\u0026#34;, The maximum message length is 255 characters. 最大的消息长度值是255个字符。 error_type This parameter is passed in a hash ref to \u0026#34;data_validation()\u0026#34;. 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;。 The \u0026#34;error_type\u0026#34; parameter is used to specify the type of error dialog that is displayed. There are 3 options: \u0026#34;error_type\u0026#34;参数用于指定出现的错误对话框的类型。有3个选项： \u0026#39;stop\u0026#39; \u0026#39;warning\u0026#39; \u0026#39;information\u0026#39; 默认是\u0026#39;stop\u0026#39;. show_error 该参数在散列引用中被传递给\u0026#34;data_validation()\u0026#34;. The \u0026#34;show_error\u0026#34; parameter is used to toggle on and off the \u0026#39;Show error alert after invalid data is entered\u0026#39; option in the Excel data validation dialog. When the option is off an error message is not displayed even if it has been set using \u0026#34;error_message\u0026#34;. It is on by default. \u0026#34;show_error\u0026#34;参数用于在Excel的数据有效性检验对话框中开启或关闭\u0026#39;Show error alert after invalid data is entered\u0026#39;选项。当该选项关闭时，错误信息不会显示，即使它设置了\u0026#34;error_message\u0026#34;。默认它是开启的。 show_error =\u0026gt; 0, # Turn the option off Data Validation Examples Example 1. Limiting input to an integer greater than a fixed value. 例1.将输入限定为比某一固定值大的整数。 $worksheet-\u0026gt;data_validation(\u0026#39;A1\u0026#39;, { validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 0, }); Example 2. Limiting input to an integer greater than a fixed value where the value is referenced from a cell. 例2.将输入限定为比某一固定值大的整数，该固定值来自单元格引用。 $worksheet-\u0026gt;data_validation(\u0026#39;A2\u0026#39;, { validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; \u0026#39;=E3\u0026#39;, }); Example 3. Limiting input to a decimal in a fixed range. 例3.将输入限制为某一固定范围内的十进制值。 $worksheet-\u0026gt;data_validation(\u0026#39;A3\u0026#39;, { validate =\u0026gt; \u0026#39;decimal\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 0.1, maximum =\u0026gt; 0.5, }); Example 4. Limiting input to a value in a dropdown list. 例4. 将输入限制为下拉列表中的某个值。 $worksheet-\u0026gt;data_validation(\u0026#39;A4\u0026#39;, { validate =\u0026gt; \u0026#39;list\u0026#39;, source =\u0026gt; [\u0026#39;open\u0026#39;, \u0026#39;high\u0026#39;, \u0026#39;close\u0026#39;], }); Example 5. Limiting input to a value in a dropdown list where the list is specified as a cell range. 例5.将输入限制为下拉列表中的某个值，该下拉列表由单元格范围指定。 $worksheet-\u0026gt;data_validation(\u0026#39;A5\u0026#39;, { validate =\u0026gt; \u0026#39;list\u0026#39;, source =\u0026gt; \u0026#39;=$E$4:$G$4\u0026#39;, }); Example 6. Limiting input to a date in a fixed range. 例6.将输入限制为某一固定范围内的日期值。 $worksheet-\u0026gt;data_validation(\u0026#39;A6\u0026#39;, { validate =\u0026gt; \u0026#39;date\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; \u0026#39;2008-01-01T\u0026#39;, maximum =\u0026gt; \u0026#39;2008-12-12T\u0026#39;, }); Example 7. Displaying a message when the cell is selected. 例7.当选中单元格时，显示提示消息。 $worksheet-\u0026gt;data_validation(\u0026#39;A7\u0026#39;, { validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 1, maximum =\u0026gt; 100, input_title =\u0026gt; \u0026#39;Enter an integer:\u0026#39;, input_message =\u0026gt; \u0026#39;between 1 and 100\u0026#39;, }); 查看 \u0026#34;data_validate.pl\u0026#34;程序。 EXCEL 中的条件格式 条件格式是Excel的一项功能，允许你根据一定的标准将一个格式应用到一个单元格或一定范围内的单元格中。 例如，下面的标准用于在\u0026#34;conditional_format.pl\u0026#34;例子中使用红色高亮值大于或等于50的单元格： # Write a conditional format over a range. $worksheet-\u0026gt;conditional_formatting( \u0026#39;B3:K12\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;=\u0026#39;, value =\u0026gt; 50, format =\u0026gt; $format1, } ); conditional_format( $row, $col, { parameter =\u0026gt; \u0026#39;value\u0026#39;, ... } ) \u0026#34;conditional_format()\u0026#34;方法用于根据用户定义的标准将格式应用到Excel::Writer::XLSX文件中。 它能被应用到单个单元格中或一定范围内的单元格中。你可以传递3个参数，诸如：\u0026#34;($row, $col, {...})\u0026#34; 或5个参数，诸如 \u0026#34;($first_row, $first_col, $last_row, $last_col, {...})\u0026#34;.你也可以使用A1表示法，例如： $worksheet-\u0026gt;conditional_format( 0, 0, {...} ); $worksheet-\u0026gt;conditional_format( 0, 0, 4, 1, {...} ); # Which are the same as: $worksheet-\u0026gt;conditional_format( \u0026#39;A1\u0026#39;, {...} ); $worksheet-\u0026gt;conditional_format( \u0026#39;A1:B5\u0026#39;, {...} ); \u0026#34;conditional_format()\u0026#34; 里的最后一个参数必须是一个散列引用，它包含描述数据合法性的类型和风格。主要参数有: \u0026#34;conditional_format()\u0026#34; 方法中的最后一个参数必须是一个散列引用，该引用包含了描述数据有效性的类型和样式的参数。主要的参数有： type format criteria #标准 value minimum maximum 用于指定条件格式类型的其它参数在下面的相关章节有显示。 type 该参数在散列引用中被传递给\u0026#34;conditional_format()\u0026#34; \u0026#34;type\u0026#34;参数用于设置你想应用的条件格式。它总是需要的，并且没有默认值。允许的\u0026#34;type\u0026#34;值和它们的有关参数是： Type Parameters ==== ========== cell criteria value minimum maximum date criteria value minimum maximum time_period criteria text criteria value average criteria duplicate (none) unique (none) top criteria value bottom criteria value blanks (none) no_blanks (none) errors (none) no_errors (none) 2_color_scale (none) 3_color_scale (none) data_bar (none) formula criteria 所有的格式类型都有\u0026#34;format\u0026#34;参数，看下面。其它类型和参数诸如图标设置会在合适的时间添加。 type =\u0026gt; \u0026#39;cell\u0026#39; This is the most common conditional formatting type. It is used when a format is applied to a cell based on a simple criteria. 例如，: 这是最常用的条件格式类型。根据一个简单的标准，该格式类型在将格式应用到单元格中时被使用。例如： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;greater than\u0026#39;, value =\u0026gt; 5, format =\u0026gt; $red_format, } ); 或者使用\u0026#34;between\u0026#34;标准: $worksheet-\u0026gt;conditional_formatting( \u0026#39;C1:C4\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 20, maximum =\u0026gt; 30, format =\u0026gt; $green_format, } ); criteria # 标准 The \u0026#34;criteria\u0026#34; parameter is used to set the criteria by which the cell data will be evaluated. It has no default value. The most common criteria as applied to \u0026#34;{ type =\u0026gt; \u0026#39;cell\u0026#39; }\u0026#34; are: \u0026#34;criteria\u0026#34;参数用于设置单元格数据将被计算的标准。它没有默认值。最常用类似\u0026#34;{ type =\u0026gt; \u0026#39;cell\u0026#39; }\u0026#34;的标准有： \u0026#39;between\u0026#39; \u0026#39;not between\u0026#39; \u0026#39;equal to\u0026#39; | \u0026#39;==\u0026#39; | \u0026#39;=\u0026#39; \u0026#39;not equal to\u0026#39; | \u0026#39;!=\u0026#39; | \u0026#39;\u0026lt;\u0026gt;\u0026#39; \u0026#39;greater than\u0026#39; | \u0026#39;\u0026gt;\u0026#39; \u0026#39;less than\u0026#39; | \u0026#39;\u0026lt;\u0026#39; \u0026#39;greater than or equal to\u0026#39; | \u0026#39;\u0026gt;=\u0026#39; \u0026#39;less than or equal to\u0026#39; | \u0026#39;\u0026lt;=\u0026#39; You can either use Excel\u0026#39;s textual description strings, in the first column above, or the more common symbolic alternatives. 你也可以使用Excel的描述字符串，即上面的第一列，或使用更普通的符号。 Additional criteria which are specific to other conditional format types are shown in the relevant sections below. 用于指定条件格式类型的其它标准在下面的相关章节有显示。 value \u0026#34;value\u0026#34;通常与\u0026#34;criteria\u0026#34;参数一起使用，用于设置将被计算的单元格数据的规则。 type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 5 format =\u0026gt; $format, \u0026#34;value\u0026#34;属性也可以是单元格引用。 type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; \u0026#39;$C$1\u0026#39;, format =\u0026gt; $format, format The \u0026#34;format\u0026#34; parameter is used to specify the format that will be applied to the cell when the conditional formatting criteria is set. The format is created using the \u0026#34;add_format()\u0026#34; method in the same way as cell formats: 当条件格式标准设置后，\u0026#34;format\u0026#34;参数用于指定将被应用到单元格中的格式。该格式使用与单元格格式一样的\u0026#34;add_format()\u0026#34;方法创建： $format = $workbook-\u0026gt;add_format( bold =\u0026gt; 1, italic =\u0026gt; 1 ); $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;\u0026#39;, value =\u0026gt; 5 format =\u0026gt; $format, } ); The conditional format follows the same rules as in Excel: it is superimposed over the existing cell format and not all font and border properties can be modified. Font properties that can\u0026#39;t be modified are font name, font size, superscript and subscript. The border property that cannot be modified is diagonal borders. 条件格式允许与Excel同样的规则：它与已经存在的单元格格式重叠，并且不是所有的字体和边框属性能被修改。不能修改的属性有字体名、字体大小、上标和下标。不能被修改的边框属性是斜线边框。 Excel specifies some default formats to be used with conditional formatting. You can replicate them using the following Excel::Writer::XLSX formats: Excel指定了一些与条件格式一起使用的默认格式。你可以使用下面的Excel::Writer::XLSX的格式复写它们： # Light red fill with dark red text. my $format1 = $workbook-\u0026gt;add_format( bg_color =\u0026gt; \u0026#39;#FFC7CE\u0026#39;, color =\u0026gt; \u0026#39;#9C0006\u0026#39;, ); # Light yellow fill with dark yellow text. my $format2 = $workbook-\u0026gt;add_format( bg_color =\u0026gt; \u0026#39;#FFEB9C\u0026#39;, color =\u0026gt; \u0026#39;#9C6500\u0026#39;, ); # Green fill with dark green text. my $format3 = $workbook-\u0026gt;add_format( bg_color =\u0026gt; \u0026#39;#C6EFCE\u0026#39;, color =\u0026gt; \u0026#39;#006100\u0026#39;, ); minimum The \u0026#34;minimum\u0026#34; parameter is used to set the lower limiting value when the \u0026#34;criteria\u0026#34; is either \u0026#39;between\u0026#39; or \u0026#39;not between\u0026#39;: 当标准是\u0026#39;between\u0026#39; 或 \u0026#39;not between\u0026#39;时，\u0026#34;minimum\u0026#34;参数用于设置值的下限： validate =\u0026gt; \u0026#39;integer\u0026#39;, criteria =\u0026gt; \u0026#39;between\u0026#39;, minimum =\u0026gt; 1, maximum =\u0026gt; 100, maximum The \u0026#34;maximum\u0026#34; parameter is used to set the upper limiting value when the \u0026#34;criteria\u0026#34; is either \u0026#39;between\u0026#39; or \u0026#39;not between\u0026#39;. See the previous example. 当标准是\u0026#39;between\u0026#39; 或 \u0026#39;not between\u0026#39;时，\u0026#34;maximum\u0026#34;参数用于设置值的上限。查看前一个例子： type =\u0026gt; \u0026#39;date\u0026#39; The \u0026#34;date\u0026#34; type is the same as \u0026#34;cell\u0026#34; type and uses the same criteria and values. However it allows the \u0026#34;value\u0026#34;, \u0026#34;minimum\u0026#34; and \u0026#34;maximum\u0026#34; properties to be specified in the ISO8601 \u0026#34;yyyy-mm-ddThh:mm:ss.sss\u0026#34; date format which is detailed in the \u0026#34;write_date_time()\u0026#34; method. \u0026#34;date\u0026#34;类型与\u0026#34;cell\u0026#34;类型相同并使用相同的标准和值。然而，它允许 \u0026#34;value\u0026#34;, \u0026#34;minimum\u0026#34; 和 \u0026#34;maximum\u0026#34;属性指定为ISO8601 \u0026#34;yyyy-mm-ddThh:mm:ss.sss\u0026#34;日期格式，它在\u0026#34;write_date_time()\u0026#34;方法上更详细。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;date\u0026#39;, criteria =\u0026gt; \u0026#39;greater than\u0026#39;, value =\u0026gt; \u0026#39;2011-01-01T\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;time_period\u0026#39; The \u0026#34;time_period\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Dates Occurring\u0026#34; style conditional format. \u0026#34;time_period\u0026#34; 类型用于指定Excel的\u0026#34;Dates Occurring\u0026#34;风格的条件格式。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;time_period\u0026#39;, criteria =\u0026gt; \u0026#39;yesterday\u0026#39;, format =\u0026gt; $format, } ); The period is set in the \u0026#34;criteria\u0026#34; and can have one of the following values: 周期在\u0026#34;criteria\u0026#34;中设置，并且可以是如下的值之一： criteria =\u0026gt; \u0026#39;yesterday\u0026#39;, criteria =\u0026gt; \u0026#39;today\u0026#39;, criteria =\u0026gt; \u0026#39;last 7 days\u0026#39;, criteria =\u0026gt; \u0026#39;last week\u0026#39;, criteria =\u0026gt; \u0026#39;this week\u0026#39;, criteria =\u0026gt; \u0026#39;next week\u0026#39;, criteria =\u0026gt; \u0026#39;last month\u0026#39;, criteria =\u0026gt; \u0026#39;this month\u0026#39;, criteria =\u0026gt; \u0026#39;next month\u0026#39; type =\u0026gt; \u0026#39;text\u0026#39; The \u0026#34;text\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Specific Text\u0026#34; style conditional format. It is used to do simple string matching using the \u0026#34;criteria\u0026#34; and \u0026#34;value\u0026#34; parameters: \u0026#34;text\u0026#34;类型用于指定Excel的\u0026#34;Specific Text\u0026#34;风格的条件格式。它用于使用\u0026#34;criteria\u0026#34; 和 \u0026#34;value\u0026#34;参数做简单的字符串匹配： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;text\u0026#39;, criteria =\u0026gt; \u0026#39;containing\u0026#39;, value =\u0026gt; \u0026#39;foo\u0026#39;, format =\u0026gt; $format, } ); \u0026#34;criteria\u0026#34;能使用如下的值： criteria =\u0026gt; \u0026#39;containing\u0026#39;, criteria =\u0026gt; \u0026#39;not containing\u0026#39;, criteria =\u0026gt; \u0026#39;begins with\u0026#39;, criteria =\u0026gt; \u0026#39;ends with\u0026#39;, \u0026#34;value\u0026#34;参数可以是一个字符串或单个字符。 type =\u0026gt; \u0026#39;average\u0026#39; The \u0026#34;average\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Average\u0026#34; style conditional format. \u0026#34;average\u0026#34;类型用于指定Excel的\u0026#34;Average\u0026#34;风格条件格式。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;average\u0026#39;, criteria =\u0026gt; \u0026#39;above\u0026#39;, format =\u0026gt; $format, } ); The type of average for the conditional format range is specified by the \u0026#34;criteria\u0026#34;: 条件格式范围的average类型由\u0026#34;criteria\u0026#34;指定：？ criteria =\u0026gt; \u0026#39;above\u0026#39;, criteria =\u0026gt; \u0026#39;below\u0026#39;, criteria =\u0026gt; \u0026#39;equal or above\u0026#39;, criteria =\u0026gt; \u0026#39;equal or below\u0026#39;, criteria =\u0026gt; \u0026#39;1 std dev above\u0026#39;, criteria =\u0026gt; \u0026#39;1 std dev below\u0026#39;, criteria =\u0026gt; \u0026#39;2 std dev above\u0026#39;, criteria =\u0026gt; \u0026#39;2 std dev below\u0026#39;, criteria =\u0026gt; \u0026#39;3 std dev above\u0026#39;, criteria =\u0026gt; \u0026#39;3 std dev below\u0026#39;, type =\u0026gt; \u0026#39;duplicate\u0026#39; The \u0026#34;duplicate\u0026#34; type is used to highlight duplicate cells in a range: \u0026#34;duplicate\u0026#34;类型用于高亮一定范围内完全相同的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;duplicate\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;unique\u0026#39; The \u0026#34;unique\u0026#34; type is used to highlight unique cells in a range: \u0026#34;unique\u0026#34;类型用于高亮一定范围内的唯一单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;unique\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;top\u0026#39; The \u0026#34;top\u0026#34; type is used to specify the top \u0026#34;n\u0026#34; values by number or percentage in a range: \u0026#34;top\u0026#34;类型用于使用数字或百分比指定单元格的前\u0026#34;n\u0026#34;个值：？ $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;top\u0026#39;, value =\u0026gt; 10, format =\u0026gt; $format, } ); The \u0026#34;criteria\u0026#34; can be used to indicate that a percentage condition is required: \u0026#34;criteria\u0026#34;能用于表明需要一个百分比条件： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;top\u0026#39;, value =\u0026gt; 10, criteria =\u0026gt; \u0026#39;%\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;bottom\u0026#39; The \u0026#34;bottom\u0026#34; type is used to specify the bottom \u0026#34;n\u0026#34; values by number or percentage in a range. \u0026#34;bottom\u0026#34;类型用于使用数字或百分比指定单元格的后“n”个值。？ It takes the same parameters as \u0026#34;top\u0026#34;, see above. 它的参数与“top”一样，看上面。 type =\u0026gt; \u0026#39;blanks\u0026#39; The \u0026#34;blanks\u0026#34; type is used to highlight blank cells in a range: \u0026#34;blanks\u0026#34;类型用于在一定范围内高亮空白单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;blanks\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;no_blanks\u0026#39; The \u0026#34;no_blanks\u0026#34; type is used to highlight non blank cells in a range: \u0026#34;no_blanks\u0026#34;类型用于在一定范围内高亮非空白单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;no_blanks\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;errors\u0026#39; The \u0026#34;errors\u0026#34; type is used to highlight error cells in a range: \u0026#34;errors\u0026#34;类型用于在一定范围内高亮有错误的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;errors\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;no_errors\u0026#39; The \u0026#34;no_errors\u0026#34; type is used to highlight non error cells in a range: \u0026#34;no_errors\u0026#34;类型用于在一定范围内高亮没有错误的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;no_errors\u0026#39;, format =\u0026gt; $format, } ); type =\u0026gt; \u0026#39;2_color_scale\u0026#39; The \u0026#34;2_color_scale\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;2 Color Scale\u0026#34; style conditional format. \u0026#34;2_color_scale\u0026#34;类型用于指定Excel的\u0026#34;2 Color Scale\u0026#34;风格的条件格式。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A12\u0026#39;, { type =\u0026gt; \u0026#39;2_color_scale\u0026#39;, } ); At the moment only the default colors and properties can be used. These will be extended in time. 现在只能使用默认的颜色和属性。将来会及时进行扩展。 type =\u0026gt; \u0026#39;3_color_scale\u0026#39; The \u0026#34;3_color_scale\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;3 Color Scale\u0026#34; style conditional format. \u0026#34;3_color_scale\u0026#34;类型用于指定Excel的\u0026#34;3 Color Scale\u0026#34;风格的条件格式。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A12\u0026#39;, { type =\u0026gt; \u0026#39;3_color_scale\u0026#39;, } ); At the moment only the default colors and properties can be used. These will be extended in time. 现在只能使用默认的颜色和属性。将来会及时进行扩展。 type =\u0026gt; \u0026#39;data_bar\u0026#39; The \u0026#34;data_bar\u0026#34; type is used to specify Excel\u0026#39;s \u0026#34;Data Bar\u0026#34; style conditional format. \u0026#34;data_bar\u0026#34;类型用于指定Excel的\u0026#34;data_bar\u0026#34;风格的条件格式。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A12\u0026#39;, { type =\u0026gt; \u0026#39;data_bar\u0026#39;, } ); At the moment only the default colors and properties can be used. These will be extended in time. 现在只能使用默认的颜色和属性。将来会及时进行扩展。 type =\u0026gt; \u0026#39;formula\u0026#39; The \u0026#34;formula\u0026#34; type is used to specify a conditional format based on a user defined formula: \u0026#34;formula\u0026#34;类型用于根据用户定义的公式指定一个条件格式： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:A4\u0026#39;, { type =\u0026gt; \u0026#39;formula\u0026#39;, criteria =\u0026gt; \u0026#39;=$A$1 \u0026gt; 5\u0026#39;, format =\u0026gt; $format, } ); The formula is specified in the \u0026#34;criteria\u0026#34;. 公式在\u0026#34;criteria\u0026#34;中指定。 Conditional Formatting Examples 条件格式例子 Example 1. Highlight cells greater than or equal to an integer value. 例1.高亮值大于或等于某个整数值的单元格。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;greater than\u0026#39;, value =\u0026gt; 5, format =\u0026gt; $format, } ); Example 2. Highlight cells greater than or equal to a value in a reference cell. 例2.高亮值大于或等于某个值的引用单元格。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;greater than\u0026#39;, value =\u0026gt; \u0026#39;$H$1\u0026#39;, format =\u0026gt; $format, } ); Example 3. Highlight cells greater than a certain date: 例3.高亮其值比某一确定日期大的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;date\u0026#39;, criteria =\u0026gt; \u0026#39;greater than\u0026#39;, value =\u0026gt; \u0026#39;2011-01-01T\u0026#39;, format =\u0026gt; $format, } ); Example 4. Highlight cells with a date in the last seven days: 例4.高亮含有最后7天日期的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;time_period\u0026#39;, criteria =\u0026gt; \u0026#39;last 7 days\u0026#39;, format =\u0026gt; $format, } ); Example 5. Highlight cells with strings starting with the letter \u0026#34;b\u0026#34;: 例5.高亮字符串中以字符\u0026#34;b\u0026#34;开头的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;text\u0026#39;, criteria =\u0026gt; \u0026#39;begins with\u0026#39;, value =\u0026gt; \u0026#39;b\u0026#39;, format =\u0026gt; $format, } ); Example 6. Highlight cells that are 1 std deviation above the average for the range: 例6.高亮一定范围内，高亮标准差比平均数大1的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;average\u0026#39;, format =\u0026gt; $format, } ); Example 7. Highlight duplicate cells in a range: 例7.高亮一定范围内完全相同的单元格： $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;duplicate\u0026#39;, format =\u0026gt; $format, } ); Example 8. Highlight unique cells in a range. 例8.高亮在一定范围内唯一的单元格。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;unique\u0026#39;, format =\u0026gt; $format, } ); Example 9. Highlight the top 10 cells. 例9.高亮头10个单元格。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;top\u0026#39;, value =\u0026gt; 10, format =\u0026gt; $format, } ); Example 10. Highlight blank cells. 例10.高亮空白单元格。 $worksheet-\u0026gt;conditional_formatting( \u0026#39;A1:F10\u0026#39;, { type =\u0026gt; \u0026#39;blanks\u0026#39;, format =\u0026gt; $format, } ); 也请查看 \u0026#34;conditional_format.pl\u0026#34;程序。 Excel中的公式和函数 Introduction 介绍 下面是Excel和Excel::Writer::XLSX中公式和函数的简明介绍。 公式是以一个等号开始的字符串： \u0026#39;=A1+B1\u0026#39; \u0026#39;=AVERAGE(1, 2, 3)\u0026#39; The formula can contain numbers, strings, boolean values, cell references, cell ranges and functions. Named ranges are not supported. Formulas should be written as they appear in Excel, that is cells and functions must be in uppercase. 公式可以包含数字、字符串、布尔值、单元格引用、单元格值域和函数。不支持命名值域。公式应该像在Excel中那样写入，即单元格和函数必须是大写的。 Cells in Excel are referenced using the A1 notation system where the column is designated by a letter and the row by a number. Columns range from A to XFD i.e. 0 to 16384, rows range from 1 to 1048576. 单元格使用A1表示法系统引用，即用字母标示列，数字标示行。列的范围是从A到XFD或0..16384；行的范围是从1到1048576.例如： use Excel::Writer::XLSX::Utility; ( $row, $col ) = xl_cell_to_rowcol( \u0026#39;C2\u0026#39; ); # (1, 2) $str = xl_rowcol_to_cell( 1, 2 ); # C2 The Excel \u0026#34;$\u0026#34; notation in cell references is also supported. This allows you to specify whether a row or column is relative or absolute. This only has an effect if the cell is copied. The following examples show relative and absolute values. 在Excel里，也支持单元格引用的\u0026#34;$\u0026#34;表示法。这允许你指定行或列是否是相对引用或绝对应用。这只有在复制单元格时有作用。下面的例子显示了相对和绝对值： \u0026#39;=A1\u0026#39; # 列和行是相对的 \u0026#39;=$A1\u0026#39; # 列式绝对的，行是相对的 \u0026#39;=A$1\u0026#39; # 列是相对的，行是绝对的 \u0026#39;=$A$1\u0026#39; # 列和行是绝对的 公式也能引用当前工作簿中其它工作表中的单元格，例如： \u0026#39;=Sheet2!A1\u0026#39; \u0026#39;=Sheet2!A1:A5\u0026#39; \u0026#39;=Sheet2:Sheet3!A1\u0026#39; \u0026#39;=Sheet2:Sheet3!A1:A5\u0026#39; q{=\u0026#39;Test Data\u0026#39;!A1} q{=\u0026#39;Test Data1:Test Data2\u0026#39;!A1} The sheet reference and the cell reference are separated by \u0026#34;!\u0026#34; the exclamation mark symbol. If worksheet names contain spaces, commas or parentheses then Excel requires that the name is enclosed in single quotes as shown in the last two examples above. In order to avoid using a lot of escape characters you can use the quote operator \u0026#34;q{}\u0026#34; to protect the quotes. See \u0026#34;perlop\u0026#34; in the main Perl documentation. Only valid sheet names that have been added using the \u0026#34;add_worksheet()\u0026#34; method can be used in formulas. You cannot reference external workbooks. 工作表引用和单元格引用被感叹号分离。如果工作表名含有空格、逗号或括号，则Excel要求使用单引号将名字引起来，就像上面的最后2个例子一样。 为避免使用太多转义字符，你可以使用引起操作符\u0026#34;q{}\u0026#34;保护引号。只有使用\u0026#34;add_worksheet()\u0026#34;方法添加的合法工作表名才能被用于公式。你不能引用外部工作簿。 The following table lists the operators that are available in Excel\u0026#39;s formulas. The majority of the operators are the same as Perl\u0026#39;s, differences are indicated: 下面的表列出了在Excel公式中可用的操作符。其中大多数操作符与Perl中的操作符相同，不同之处也被指出来了： 算数操作符: ===================== 操作符 含义 例子 + Addition 1+2 - Subtraction 2-1 * Multiplication 2*3 / Division 1/4 ^ Exponentiation 2^3 # 等价于 ** - Unary minus -(1+2) # 还不支持 % Percent (Not modulus) 13% # 不支持, [1] 比较操作符: ===================== Operator Meaning Example = Equal to A1 = B1 #等价于== \u0026lt;\u0026gt; Not equal to A1 \u0026lt;\u0026gt; B1 #等价于!= \u0026gt; Greater than A1 \u0026gt; B1 \u0026lt; Less than A1 \u0026lt; B1 \u0026gt;= Greater than or equal to A1 \u0026gt;= B1 \u0026lt;= Less than or equal to A1 \u0026lt;= B1 字符串操作符: ================ Operator Meaning Example \u0026amp; Concatenation \u0026#34;Hello \u0026#34; \u0026amp; \u0026#34;World!\u0026#34; # [2] Reference operators: ==================== Operator Meaning Example : Range operator A1:A4 # [3] , Union operator SUM(1, 2+2, B3) # [4] 注意: [1]:You can get a percentage with formatting and modulus with MOD(). [1]: 你可以使用格式化得到一个百分数，使用MOD()得到一个模。 [2]: 在Perl中与(\u0026#34;Hello \u0026#34; . \u0026#34;World!\u0026#34;)等价。 [3]: 该范围等价于单元格 A1, A2, A3和 A4. [4]: 逗号与Perl中的列表操作符行为相似。 The range and comma operators can have different symbols in non-English versions of Excel. These will be supported in a later version of Excel::Writer::XLSX. European users of Excel take note: 范围和逗号操作符在非英语版本的Excel中有不同的符号。这些会在以后版本的Excel::Writer::XLSX中支持。欧洲的Excel用户注意： $worksheet-\u0026gt;write(\u0026#39;A1\u0026#39;, \u0026#39;=SUM(1; 2; 3)\u0026#39;); # Wrong!! $worksheet-\u0026gt;write(\u0026#39;A1\u0026#39;, \u0026#39;=SUM(1, 2, 3)\u0026#39;); # Okay If your formula doesn\u0026#39;t work in Excel::Writer::XLSX try the following: 如果你的公式在Excel::Writer::XLSX中不起作用，尝试下面的： 1. Verify that the formula works in Excel (or Gnumeric or OpenOffice.org). 1.检查公式在Excel中有效 2. Ensure that cell references and formula names are in uppercase. 2.确保单元格引用和公式名字是大写的。 3. Ensure that you are using \u0026#39;:\u0026#39; as the range operator, A1:A4. 3.确保你使用\u0026#39;:\u0026#39;作为范围操作符，A1:A4. 4. Ensure that you are using \u0026#39;,\u0026#39; as the union operator, SUM(1,2,3). 4.确保你使用\u0026#39;,\u0026#39;作为并集操作符，SUM(1,2,3). 5. Ensure that the function is in the above table. 5.确保函数是上表中出现的函数。 EXAMPLES 例子 查看 Excel::Writer::XLSX::Examples 获取完整的示例清单. 例1 The following example shows some of the basic features of Excel::Writer::XLSX. 下面的例子显示了 Excel::Writer::XLSX的一些基本特征。 #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; # 创建一个叫simple.xlsx的新工作簿并添加一张工作表 my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;simple.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet(); # The general syntax is write($row, $column, $token). Note that row and # column are zero indexed # 写入一些文本 $worksheet-\u0026gt;write( 0, 0, \u0026#39;Hi Excel!\u0026#39; ); # Write some numbers $worksheet-\u0026gt;write( 2, 0, 1 ); $worksheet-\u0026gt;write( 3, 0, 1.00000 ); $worksheet-\u0026gt;write( 4, 0, 2.00001 ); $worksheet-\u0026gt;write( 5, 0, 3.14159 ); # Write some formulas $worksheet-\u0026gt;write( 7, 0, \u0026#39;=A3 + A6\u0026#39; ); $worksheet-\u0026gt;write( 8, 0, \u0026#39;=IF(A5\u0026gt;3,\u0026#34;Yes\u0026#34;, \u0026#34;No\u0026#34;)\u0026#39; ); # 写入一个超链接 $worksheet-\u0026gt;write( 10, 0, \u0026#39;http://www.perl.com/\u0026#39; ); 例2 The following is a general example which demonstrates some features of working with multiple worksheets. 下面是一些普通的例子，它们说明了一些使用多张工作表的特性。 #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; # 创建一个新的Excel工作簿 my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;regions.xlsx\u0026#39; ); # 添加一些工作表 my $north = $workbook-\u0026gt;add_worksheet( \u0026#39;North\u0026#39; ); my $south = $workbook-\u0026gt;add_worksheet( \u0026#39;South\u0026#39; ); my $east = $workbook-\u0026gt;add_worksheet( \u0026#39;East\u0026#39; ); my $west = $workbook-\u0026gt;add_worksheet( \u0026#39;West\u0026#39; ); # 添加一个格式 my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_bold(); $format-\u0026gt;set_color( \u0026#39;blue\u0026#39; ); #给每张工作表添加一个标题 for my $worksheet ( $workbook-\u0026gt;sheets() ) { $worksheet-\u0026gt;write( 0, 0, \u0026#39;Sales\u0026#39;, $format ); } # 写入一些数据 $north-\u0026gt;write( 0, 1, 200000 ); $south-\u0026gt;write( 0, 1, 100000 ); $east-\u0026gt;write( 0, 1, 150000 ); $west-\u0026gt;write( 0, 1, 100000 ); # 设置活动工作表 $south-\u0026gt;activate(); # 设置第一列的宽度 $south-\u0026gt;set_column( 0, 0, 20 ); # 设置活动单元格 $south-\u0026gt;set_selection( 0, 1 ); 例3 Example of how to add conditional formatting to an Excel::Writer::XLSX file. The example below highlights cells that have a value greater than or equal to 50 in red and cells below that value in green. 下面是怎样向一个Excel::Writer::XLSX格式的文件添加条件格式的例子。下面的例子使用红色高亮值大于或等于50的单元格，使用绿色高亮值小于50的单元格。 #!/usr/bin/perl use strict; use warnings; use Excel::Writer::XLSX; my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;conditional_format.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet(); #下面的例子使用红色高亮值大于或等于50的单元格，使用绿色高亮值小于50的单元格 # Light red fill with dark red text. #使用暗红色文本进行淡红色填充？ my $format1 = $workbook-\u0026gt;add_format( bg_color =\u0026gt; \u0026#39;#FFC7CE\u0026#39;, color =\u0026gt; \u0026#39;#9C0006\u0026#39;, ); # Green fill with dark green text. #使用暗绿色文本进行绿色填充 my $format2 = $workbook-\u0026gt;add_format( bg_color =\u0026gt; \u0026#39;#C6EFCE\u0026#39;, color =\u0026gt; \u0026#39;#006100\u0026#39;, ); # Some sample data to run the conditional formatting against. #一些简单的用于运行条件格式的数据 my $data = [ [ 34, 72, 38, 30, 75, 48, 75, 66, 84, 86 ], [ 6, 24, 1, 84, 54, 62, 60, 3, 26, 59 ], [ 28, 79, 97, 13, 85, 93, 93, 22, 5, 14 ], [ 27, 71, 40, 17, 18, 79, 90, 93, 29, 47 ], [ 88, 25, 33, 23, 67, 1, 59, 79, 47, 36 ], [ 24, 100, 20, 88, 29, 33, 38, 54, 54, 88 ], [ 6, 57, 88, 28, 10, 26, 37, 7, 41, 48 ], [ 52, 78, 1, 96, 26, 45, 47, 33, 96, 36 ], [ 60, 54, 81, 66, 81, 90, 80, 93, 12, 55 ], [ 70, 5, 46, 14, 71, 19, 66, 36, 41, 21 ], ]; my $caption = \u0026#39;Cells with values \u0026gt;= 50 are in light red. \u0026#39; . \u0026#39;Values \u0026lt; 50 are in light green\u0026#39;; # 写入数据. $worksheet-\u0026gt;write( \u0026#39;A1\u0026#39;, $caption ); $worksheet-\u0026gt;write_col( \u0026#39;B3\u0026#39;, $data ); # 在一定单元格范围内写入条件格式. $worksheet-\u0026gt;conditional_formatting( \u0026#39;B3:K12\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026gt;=\u0026#39;, value =\u0026gt; 50, format =\u0026gt; $format1, } ); # 在同一单元格范围内写入另外一个条件格式 $worksheet-\u0026gt;conditional_formatting( \u0026#39;B3:K12\u0026#39;, { type =\u0026gt; \u0026#39;cell\u0026#39;, criteria =\u0026gt; \u0026#39;\u0026lt;\u0026#39;, value =\u0026gt; 50, format =\u0026gt; $format2, } ); Example 4 下面程序是使用函数的一个简单的例子： #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; # 创建一个新的工作簿并添加一张工作表 my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;stats.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet( \u0026#39;Test data\u0026#39; ); # 为第一列设置列宽为 $worksheet-\u0026gt;set_column( 0, 0, 20 ); # 给标题创建一个格式 my $format = $workbook-\u0026gt;add_format(); $format-\u0026gt;set_bold(); # 写入抽样数据 $worksheet-\u0026gt;write( 0, 0, \u0026#39;Sample\u0026#39;, $format ); $worksheet-\u0026gt;write( 0, 1, 1 ); $worksheet-\u0026gt;write( 0, 2, 2 ); $worksheet-\u0026gt;write( 0, 3, 3 ); $worksheet-\u0026gt;write( 0, 4, 4 ); $worksheet-\u0026gt;write( 0, 5, 5 ); $worksheet-\u0026gt;write( 0, 6, 6 ); $worksheet-\u0026gt;write( 0, 7, 7 ); $worksheet-\u0026gt;write( 0, 8, 8 ); $worksheet-\u0026gt;write( 1, 0, \u0026#39;Length\u0026#39;, $format ); $worksheet-\u0026gt;write( 1, 1, 25.4 ); $worksheet-\u0026gt;write( 1, 2, 25.4 ); $worksheet-\u0026gt;write( 1, 3, 24.8 ); $worksheet-\u0026gt;write( 1, 4, 25.0 ); $worksheet-\u0026gt;write( 1, 5, 25.3 ); $worksheet-\u0026gt;write( 1, 6, 24.9 ); $worksheet-\u0026gt;write( 1, 7, 25.2 ); $worksheet-\u0026gt;write( 1, 8, 24.8 ); # 写入一些统计函数 $worksheet-\u0026gt;write( 4, 0, \u0026#39;Count\u0026#39;, $format ); $worksheet-\u0026gt;write( 4, 1, \u0026#39;=COUNT(B1:I1)\u0026#39; ); $worksheet-\u0026gt;write( 5, 0, \u0026#39;Sum\u0026#39;, $format ); $worksheet-\u0026gt;write( 5, 1, \u0026#39;=SUM(B2:I2)\u0026#39; ); $worksheet-\u0026gt;write( 6, 0, \u0026#39;Average\u0026#39;, $format ); $worksheet-\u0026gt;write( 6, 1, \u0026#39;=AVERAGE(B2:I2)\u0026#39; ); $worksheet-\u0026gt;write( 7, 0, \u0026#39;Min\u0026#39;, $format ); $worksheet-\u0026gt;write( 7, 1, \u0026#39;=MIN(B2:I2)\u0026#39; ); $worksheet-\u0026gt;write( 8, 0, \u0026#39;Max\u0026#39;, $format ); $worksheet-\u0026gt;write( 8, 1, \u0026#39;=MAX(B2:I2)\u0026#39; ); $worksheet-\u0026gt;write( 9, 0, \u0026#39;Standard Deviation\u0026#39;, $format ); $worksheet-\u0026gt;write( 9, 1, \u0026#39;=STDEV(B2:I2)\u0026#39; ); $worksheet-\u0026gt;write( 10, 0, \u0026#39;Kurtosis\u0026#39;, $format ); $worksheet-\u0026gt;write( 10, 1, \u0026#39;=KURT(B2:I2)\u0026#39; ); Example 5 下面这个例子将一个使用tab字符分隔的叫做“tab.txt”的文件转换为一个叫做\u0026#34;tab.xlsx\u0026#34;的Excel文件。 #!/usr/bin/perl -w use strict; use Excel::Writer::XLSX; open( TABFILE, \u0026#39;tab.txt\u0026#39; ) or die \u0026#34;tab.txt: $!\u0026#34;; my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;tab.xlsx\u0026#39; ); my $worksheet = $workbook-\u0026gt;add_worksheet(); # 行和列从0开始索引 my $row = 0; while ( \u0026lt;TABFILE\u0026gt; ) { chomp; # Split on single tab my @fields = split( \u0026#39;\\t\u0026#39;, $_ ); my $col = 0; for my $token ( @fields ) { $worksheet-\u0026gt;write( $row, $col, $token ); $col++; } $row++; } 注意：这只是一个说明性的简单的转换程序。转换CSV文件或使用Tab符号分隔或其它任何形式的分隔符分隔的文本文件，我推荐更严密的csv2xls程序，它是Text::CSV_XS模块的一部分。 在此处查看 examples/csv2xls 链接: \u0026lt;http://search.cpan.org/~hmbrand/Text-CSV_XS/MANIFEST\u0026gt;. 附加的例子 下面是Excel::Writer::XLSX标准发行版中提供的实例描述文件。它们说明了该模块的不同特征和选项。查看Excel::Writer::XLSX::Examples获取更详细的信息. Getting started =============== a_simple.pl A simple demo of some of the features. bug_report.pl A template for submitting bug reports. demo.pl A demo of some of the available features. formats.pl All the available formatting on several worksheets. regions.pl A simple example of multiple worksheets. stats.pl Basic formulas and functions. Intermediate ============ autofilter.pl Examples of worksheet autofilters. array_formula.pl Examples of how to write array formulas. cgi.pl A simple CGI program. chart_area.pl A demo of area style charts. chart_bar.pl A demo of bar (vertical histogram) style charts. chart_column.pl A demo of column (histogram) style charts. chart_line.pl A demo of line style charts. chart_pie.pl A demo of pie style charts. chart_scatter.pl A demo of scatter style charts. chart_stock.pl A demo of stock style charts. colors.pl A demo of the colour palette and named colours. comments1.pl Add comments to worksheet cells. comments2.pl Add comments with advanced options. conditional_format.pl Add conditional formats to a range of cells. data_validate.pl An example of data validation and dropdown lists. date_time.pl Write dates and times with write_date_time(). defined_name.pl Example of how to create defined names. diag_border.pl A simple example of diagonal cell borders. filehandle.pl Examples of working with filehandles. headers.pl Examples of worksheet headers and footers. hide_sheet.pl Simple example of hiding a worksheet. hyperlink1.pl Shows how to create web hyperlinks. hyperlink2.pl Examples of internal and external hyperlinks. indent.pl An example of cell indentation. merge1.pl A simple example of cell merging. merge2.pl A simple example of cell merging with formatting. merge3.pl Add hyperlinks to merged cells. merge4.pl An advanced example of merging with formatting. merge5.pl An advanced example of merging with formatting. merge6.pl An example of merging with Unicode strings. mod_perl1.pl A simple mod_perl 1 program. mod_perl2.pl A simple mod_perl 2 program. panes.pl An examples of how to create panes. outline.pl An example of outlines and grouping. outline_collapsed.pl An example of collapsed outlines. protection.pl Example of cell locking and formula hiding. protection.pl Example of cell locking and formula hiding. rich_strings.pl Example of strings with multiple formats. right_to_left.pl Change default sheet direction to right to left. sales.pl An example of a simple sales spreadsheet. stats_ext.pl Same as stats.pl with external references. stocks.pl Demonstrates conditional formatting. tab_colors.pl Example of how to set worksheet tab colours. write_handler1.pl Example of extending the write() method. Step 1. write_handler2.pl Example of extending the write() method. Step 2. write_handler3.pl Example of extending the write() method. Step 3. write_handler4.pl Example of extending the write() method. Step 4. write_to_scalar.pl Example of writing an Excel file to a Perl scalar. Unicode ======= unicode_2022_jp.pl Japanese: ISO-2022-JP. unicode_8859_11.pl Thai: ISO-8859_11. unicode_8859_7.pl Greek: ISO-8859_7. unicode_big5.pl Chinese: BIG5. unicode_cp1251.pl Russian: CP1251. unicode_cp1256.pl Arabic: CP1256. unicode_cyrillic.pl Russian: Cyrillic. unicode_koi8r.pl Russian: KOI8-R. unicode_polish_utf8.pl Polish : UTF8. unicode_shift_jis.pl Japanese: Shift JIS. LIMITATIONS 限制 The following limits are imposed by Excel 2007+: 描述 限制 ----------------------------------- ------ 一个字符串中的最大字符数 32,767 最大的列数 16,384 最大的行数 1,048,576 工作表名中的最大字符数 31 页眉/页脚中的最大字符数 254 与Spreadsheet::WriteExcel模块的兼容性 \u0026#34;Excel::Writer::XLSX\u0026#34;模块是 \u0026#34;Spreadsheet::WriteExcel\u0026#34;模块的替代者 它支持 Spreadsheet::WriteExcel所有的特性，注意下面微小的不同： 工作簿方法 支持 ================ ====== new() Yes add_worksheet() Yes add_format() Yes add_chart() Yes close() Yes set_properties() Yes define_name() Yes set_tempdir() Yes set_custom_color() Yes sheets() Yes set_1904() Yes set_optimization() Yes. Spreadsheet::WriteExcel中不需要. add_chart_ext() Not supported.Excel::Writer::XLSX中不是必须的 compatibility_mode() Deprecated. Excel::Writer::XLSX中不是必须的 set_codepage() Deprecated. Excel::Writer::XLSX中不是必须的 Worksheet Methods Support ================= ======= write() Yes write_number() Yes write_string() Yes write_rich_string() Yes. Spreadsheet::WriteExcel中没有该方法. write_blank() Yes write_row() Yes write_col() Yes write_date_time() Yes write_url() Yes write_formula() Yes write_array_formula() Yes.Spreadsheet::WriteExcel中没有该方法. keep_leading_zeros() Yes write_comment() Yes show_comments() Yes set_comments_author() Yes add_write_handler() Yes insert_image() Yes/Partial, 查看文档. insert_chart() Yes data_validation() Yes conditional_format() Yes. Spreadsheet::WriteExcel中没有该方法. get_name() Yes activate() Yes select() Yes hide() Yes set_first_sheet() Yes protect() Yes set_selection() Yes set_row() Yes. set_column() Yes. outline_settings() Yes freeze_panes() Yes split_panes() Yes merge_range() Yes merge_range_type() Yes. Spreadsheet::WriteExcel中没有该方法。 set_zoom() Yes right_to_left() Yes hide_zero() Yes set_tab_color() Yes autofilter() Yes filter_column() Yes filter_column_list() Yes. Spreadsheet::WriteExcel中没有该方法. write_utf16be_string() 不推荐使用. 使用 Perl utf8字符串代替. write_utf16le_string() 不推荐使用. 使用 Perl utf8字符串代替. store_formula() 不推荐使用. 查看文档. repeat_formula() 不推荐使用. 查看文档. write_url_range() Not supported. Excel::Writer::XLSX中不是必须的 页面设置方法 支持 =================== ======= set_landscape() Yes set_portrait() Yes set_page_view() Yes set_paper() Yes center_horizontally() Yes center_vertically() Yes set_margins() Yes set_header() Yes set_footer() Yes repeat_rows() Yes repeat_columns() Yes hide_gridlines() Yes print_row_col_headers() Yes print_area() Yes print_across() Yes fit_to_pages() Yes set_start_page() Yes set_print_scale() Yes set_h_pagebreaks() Yes set_v_pagebreaks() Yes 格式方法 支持 ============== ======= set_font() Yes set_size() Yes set_color() Yes set_bold() Yes set_italic() Yes set_underline() Yes set_font_strikeout() Yes set_font_script() Yes set_font_outline() Yes set_font_shadow() Yes set_num_format() Yes set_locked() Yes set_hidden() Yes set_align() Yes set_rotation() Yes set_text_wrap() Yes set_text_justlast() Yes set_center_across() Yes set_indent() Yes set_shrink() Yes set_pattern() Yes set_bg_color() Yes set_fg_color() Yes set_border() Yes set_bottom() Yes set_top() Yes set_left() Yes set_right() Yes set_border_color() Yes set_bottom_color() Yes set_top_color() Yes set_left_color() Yes set_right_color() Yes REQUIREMENTS 要求 \u0026lt;http://search.cpan.org/search?dist=Archive-Zip/\u0026gt;. Perl 5.10.0. SPEED AND MEMORY USAGE 速度和内存使用 \u0026#34;Spreadsheet::WriteExcel\u0026#34;用于优化速度并减少内存使用。这样的设计目标意味着实现许多用户要求的诸如格式化和单独地写入数据功能并不容易。 因此，\u0026#34;Excel::Writer::XLSX\u0026#34;采取不同的设计方法并且在内存中存入更多的数据，以至于功能更复杂。这样的结果就是Excel::Writer::XLSX 比Spreadsheet::WriteExcel 慢了50%，并且显著地使用更多内存。当你增加更多的行和列范围时，可能因为创建大的文件而用光内存。对于Spreadsheet::WriteExcel这从来都不是问题。 使用工作簿的\u0026#34;set_optimization()\u0026#34;方法，这种内存使用几乎能完全减小： $workbook-\u0026gt;set_optimization(); 这样做的代价就是你不能使用任何操作单元格的新功能，写入数据后，该优化选项被打开。 DIAGNOSTICS 诊断 Filename required by Excel::Writer::XLSX-\u0026gt;new() 必须给构造函数一个文件名。 Can\u0026#39;t open filename. It may be in use or protected. 不能打开文件写入。你要写入的那个文件夹可能被写保护或文件正被其它程序使用。 Can\u0026#39;t call method \u0026#34;XXX\u0026#34; on an undefined value at someprogram.pl. 在Windows上这常常是由于你正尝试创建的文件与一个已经被Excel打开并锁住的文件冲突了。 The file you are trying to open \u0026#39;file.xls\u0026#39; is in a different format than specified by the file extension. 当你创建一个XLSX文件，但是给它一个xls后缀时，会出现该警告。 WRITING EXCEL FILES 根据你的需求，背景和一般的感觉，你可能更喜欢下面的方法之一将数据写入Excel： * Spreadsheet::WriteExcel 它是Excel::Writer::XLSX 的先驱，并使用同样的接口。它生成xls格式的文件用于Excel 97-2003版本。这些文件仍然能被Excel2007读取但是在支持的行和列数量上有限制。 * Win32::OLE module and office automation 这需要一个Windows平台并安装一份Excel拷贝。这是与Excel交互的最强大最完全的方法。 * CSV, comma separated variables or text 如果文件扩展名是csv，Excel打开后会自动转换该格式。生成一个CSV文件并不像看起来的那么容易。查看DBD::RAM, DBD::CSV, Text::xSV 和 Text::CSV_XS 模块。 * DBI with DBD::ADO or DBD::ODBC Excel文件含有内部索引表，允许它们表现的像一个数据库。使用标准的Perl数据库模块之一，你可以将一个Excel文件当作数据库连接。 * DBD::Excel 你也可以通过 DBD::Excel 模块使用标准的DBI接口访问Spreadsheet::WriteExcel 。 查看 \u0026lt;http://search.cpan.org/dist/DBD-Excel\u0026gt; * Spreadsheet::WriteExcelXML 该模块允许你使用与 Spreadsheet::WriteExcel同样的接口来创建Excel XML 文件。 查看 \u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcelXML\u0026gt;. * Excel::Template 该模块允许你从在某种意义上与 HTML::Template相似的XML 模版上创建文件。 查看\u0026lt;http://search.cpan.org/dist/Excel-Template/\u0026gt;. * Spreadsheet::WriteExcel::FromXML 该模块允许你使用Spreadsheet::WriteExcel 作为后台将一个简单的XML文件转换为Excel文件。 XML的格式由支持的DTD来定义。 查看\u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcel-FromXML\u0026gt;. * Spreadsheet::WriteExcel::Simple 它提供了对Spreadsheet::WriteExcel更加简单的接口。 \u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcel-Simple\u0026gt;. * Spreadsheet::WriteExcel::FromDB 它对于从DB表中创建Excel文件很有用。 \u0026lt;http://search.cpan.org/dist/Spreadsheet-WriteExcel-FromDB\u0026gt;. * HTML tables This is an easy way of adding formatting via a text based format. 通过一个基于文本的格式添加格式很容易。 * READING EXCEL FILES 读取Excel文件 从Excel中读取数据，尝试： * Spreadsheet::ParseExcel 它使用OLE::Storage-Lite模块从Excel中提取数据。 查看\u0026lt;http://search.cpan.org/dist/Spreadsheet-ParseExcel\u0026gt;. * Spreadsheet::ParseExcel_XLHTML * XML::Excel 使用Spreadsheet::ParseExcel将Excel文件转换为XML文件 查看那\u0026lt;http://search.cpan.org/dist/XML-Excel\u0026gt;. * "},"name":"Excel::Writer::XLSX 翻译","published":"2013-05-04T16:16:21Z","summary":"---------------------------------------------------------------------------- 翻译: 小Perl Email:sxw2k@sina.com ---------------------------------------------------------------------------- NAME 名称 Excel::Writer::XLSX - 以Excel2007+XLSX格式创建一个新文件. VERSION 版本 该文档是在2013年11月发布的Excel::Writer::XLSX 0.75版本。 SYNOPSIS 概要 在perl.xlsx的第一个工作表中写入字符串、格式化的字符串、数字和公式： use Excel::Writer::XLSX; # 新建excel工作簿 my $workbook = Excel::Writer::XLSX-\u0026gt;new( \u0026#39;perl.xlsx\u0026#39; ); # 增加一个工作表 $worksheet = $workbook-\u0026gt;add_worksheet(); # 添加并定义一个格式 $format = $workbook-\u0026gt;add_format();#增加一种格式 $format-\u0026gt;set_bold(); #设置粗体 $format-\u0026gt;set_color( \u0026#39;red\u0026#39; ); #设置颜色 $format-\u0026gt;set_align( \u0026#39;center\u0026#39; ); #设置对齐方式（此处为居中） #写入一个格式化和非格式化的字符串，使用行列表示法。 $col = $row = 0; #设置行和列的位置 $worksheet-\u0026gt;write( $row, $col, \u0026#39;Hi Excel!\u0026#39;, $format ); $worksheet-\u0026gt;write( 1, $col, \u0026#39;Hi Excel!\u0026#39; ); #使用A1表示法写入一个数字和公式 $worksheet-\u0026gt;write( \u0026#39;A3\u0026#39;, 1.","type":"entry","url":"https://ohmyweekly.github.io/notes/excel--writer--xlsx/"}
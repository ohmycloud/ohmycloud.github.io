{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003cp\u003e假设你想给 Swift 标准库 — 比如说\u003ccode\u003eDouble\u003c/code\u003e类型添加额外的方法, 但是你又不知道\u003ccode\u003eDouble\u003c/code\u003e的实现, 所以你不能直接给它添加功能。 你改怎么办呢？\u003c/p\u003e\n\u003cp\u003eSwift 设计了一个叫做 Extensions 的功能来处理这样的情况。 Extensions 允许你为已经存在的类型添加功能。你可以扩展结构体、枚举和类。\u003c/p\u003e\n\u003cp\u003e你可以使用如下结构来扩展类型:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e计算型属性\u003c/li\u003e\n\u003cli\u003e新的初始化方法\u003c/li\u003e\n\u003cli\u003e协议的遵守\u003c/li\u003e\n\u003cli\u003e新的方法\u003c/li\u003e\n\u003cli\u003e嵌入类型\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"扩展一个已经存在的类型\"\u003e扩展一个已经存在的类型\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003eSwift 的扩展不允许你给已存在的类型添加存储属性， 但可以添加计算型属性。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etypealias\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eextension\u003c/span\u003e \u003cspan class=\"nc\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ekph\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.60934\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003emph\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e           \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e// 为已存在的类型添加要遵守的协议\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eVehicleType\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003etopSpeed\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kr\"\u003eget\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enumberOfDoors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kr\"\u003eget\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ehasFlatbed\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kr\"\u003eget\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eVehicleType\u003c/strong\u003e声明了三个属性, topSpeed, numberOfDoors 和 hasFlatbed。每个属性都要求遵守该协议的类型只需为该属性实现 getter 方法。遵守该协议的类型需要提供协议中声明的这些属性。\u003c/p\u003e\n\u003ch2 id=\"扩展你自己的类型\"\u003e扩展你自己的类型\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003e添加一个自定义的类型:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003etypealias\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eextension\u003c/span\u003e \u003cspan class=\"nc\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ekph\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.60934\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003emph\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003eself\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eprotocol\u003c/span\u003e \u003cspan class=\"nc\"\u003eVehicleType\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003etopSpeed\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kr\"\u003eget\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enumberOfDoors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kr\"\u003eget\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ehasFlatbed\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kr\"\u003eget\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003estruct\u003c/span\u003e \u003cspan class=\"nc\"\u003eCar\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003emake\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003emodel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003eyear\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003ecolor\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003elet\u003c/span\u003e \u003cspan class=\"nv\"\u003enickname\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eString\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003egasLevel\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eDouble\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"kr\"\u003ewillSet\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"bp\"\u003eprecondition\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003enewValue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;=\u003c/span\u003e \u003cspan class=\"mf\"\u003e1.0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003enewValue\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;=\u003c/span\u003e \u003cspan class=\"mf\"\u003e0.0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u0026#34;New value must be between 0 and 1.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003egasLevel\u003c/strong\u003e 是一个可变的含有属性观察器的存储属性。每次你想要给 \u003cstrong\u003egasLevel\u003c/strong\u003e设置一个新值的时候都会调用 \u003ccode\u003ewillSet\u003c/code\u003e观察器。**precondition()**函数确保被赋值给 gasLevel 属性的 newValue 在区间 0到1 之内。\u003c/p\u003e\n\u003ch2 id=\"给类添加扩展以使其遵守协议\"\u003e给类添加扩展以使其遵守协议\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003e扩展提供了很好的机制来把相关的功能块儿归为一组。在单个扩展中把相关功能片段归为一组可以让你的代码可读性更好, 并且更容易维护。\u003c/p\u003e\n\u003cp\u003e下面扩展 \u003cstrong\u003eCar\u003c/strong\u003e 类型使其遵守 \u003cstrong\u003eVeicleType\u003c/strong\u003e 协议。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-swift\" data-lang=\"swift\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kd\"\u003eextension\u003c/span\u003e \u003cspan class=\"nc\"\u003eCar\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVehicleType\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003etopSpeed\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eVelocity\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e180\u003c/span\u003e   \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003enumberOfDoors\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eInt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kd\"\u003evar\u003c/span\u003e \u003cspan class=\"nv\"\u003ehasFlatbed\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eBool\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"kc\"\u003efalse\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你在extension的主体里面实现了协议的必要属性。每个属性给了一个简单的 getter, 为了方便, 你仅仅返回简单的默认值。\u003c/p\u003e\n\u003ch2 id=\"使用扩展给已存在的类添加-initializer\"\u003e使用扩展给已存在的类添加 initializer\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003e还记得吗, 结构体给了你一个免费的逐个成员初始化函数, 如果你自己每提供的话。如果你想为你的结构体写一个新的 initializer 函数, 但是又不想失去那个免费的逐个成员初始化函数, 你可以使用扩展为你的类型添加一个 initializer 函数。\u003c/p\u003e\n\u003cp\u003e下面在新的扩展中给\u003cstrong\u003eCar\u003c/strong\u003e添加一个initializer 函数:\u003c/p\u003e\n","text":"假设你想给 Swift 标准库 — 比如说Double类型添加额外的方法, 但是你又不知道Double的实现, 所以你不能直接给它添加功能。 你改怎么办呢？\nSwift 设计了一个叫做 Extensions 的功能来处理这样的情况。 Extensions 允许你为已经存在的类型添加功能。你可以扩展结构体、枚举和类。\n你可以使用如下结构来扩展类型:\n计算型属性 新的初始化方法 协议的遵守 新的方法 嵌入类型 扩展一个已经存在的类型 Swift 的扩展不允许你给已存在的类型添加存储属性， 但可以添加计算型属性。\ntypealias Velocity = Double extension Velocity { var kph: Velocity { return self * 1.60934 } var mph: Velocity { return self } } // 为已存在的类型添加要遵守的协议 protocol VehicleType { var topSpeed: Velocity { get } var numberOfDoors: Int { get } var hasFlatbed: Bool { get } } VehicleType声明了三个属性, topSpeed, numberOfDoors 和 hasFlatbed。每个属性都要求遵守该协议的类型只需为该属性实现 getter 方法。遵守该协议的类型需要提供协议中声明的这些属性。\n扩展你自己的类型 添加一个自定义的类型:\ntypealias Velocity = Double extension Velocity { var kph: Velocity { return self * 1.60934 } var mph: Velocity { return self } } protocol VehicleType { var topSpeed: Velocity { get } var numberOfDoors: Int { get } var hasFlatbed: Bool { get } } struct Car { let make: String let model: String let year: Int let color: String let nickname: String var gasLevel: Double { willSet { precondition(newValue \u0026lt;= 1.0 \u0026amp;\u0026amp; newValue \u0026gt;= 0.0, } } \u0026#34;New value must be between 0 and 1.\u0026#34;) } gasLevel 是一个可变的含有属性观察器的存储属性。每次你想要给 gasLevel设置一个新值的时候都会调用 willSet观察器。**precondition()**函数确保被赋值给 gasLevel 属性的 newValue 在区间 0到1 之内。\n给类添加扩展以使其遵守协议 扩展提供了很好的机制来把相关的功能块儿归为一组。在单个扩展中把相关功能片段归为一组可以让你的代码可读性更好, 并且更容易维护。\n下面扩展 Car 类型使其遵守 VeicleType 协议。\nextension Car: VehicleType { var topSpeed: Velocity { return 180 } var numberOfDoors: Int { return 4 } var hasFlatbed: Bool { return false } } 你在extension的主体里面实现了协议的必要属性。每个属性给了一个简单的 getter, 为了方便, 你仅仅返回简单的默认值。\n使用扩展给已存在的类添加 initializer 还记得吗, 结构体给了你一个免费的逐个成员初始化函数, 如果你自己每提供的话。如果你想为你的结构体写一个新的 initializer 函数, 但是又不想失去那个免费的逐个成员初始化函数, 你可以使用扩展为你的类型添加一个 initializer 函数。\n下面在新的扩展中给Car添加一个initializer 函数:\n"},"name":"Swift 扩展","published":"2015-10-05T16:16:21Z","summary":"假设你想给 Swift 标准库 — 比如说Double类型添加额外的方法, 但是你又不知道Double的实现, 所以你不能直接给它添加功能。 你改怎么办呢？\nSwift 设计了一个叫做 Extensions 的功能来处理这样的情况。 Extensions 允许你为已经存在的类型添加功能。你可以扩展结构体、枚举和类。\n你可以使用如下结构来扩展类型:\n计算型属性 新的初始化方法 协议的遵守 新的方法 嵌入类型 扩展一个已经存在的类型 Swift 的扩展不允许你给已存在的类型添加存储属性， 但可以添加计算型属性。\ntypealias Velocity = Double extension Velocity { var kph: Velocity { return self * 1.60934 } var mph: Velocity { return self } } // 为已存在的类型添加要遵守的协议 protocol VehicleType { var topSpeed: Velocity { get } var numberOfDoors: Int { get } var hasFlatbed: Bool { get } } VehicleType声明了三个属性, topSpeed, numberOfDoors 和 hasFlatbed。每个属性都要求遵守该协议的类型只需为该属性实现 getter 方法。遵守该协议的类型需要提供协议中声明的这些属性。","type":"entry","url":"https://ohmycloud.github.io/notes/swift-extensions/"}
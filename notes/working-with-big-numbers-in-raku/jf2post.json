{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003cp\u003e欢迎来到第\u003ca href=\"https://raku.online/2018/12/04/working-with-big-numbers-in-perl-6/\"\u003e4\u003c/a\u003e天的 \u003cstrong\u003eRaku One-Liner Advent Calendar!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e今天我们会看一看欧拉项目的\u003ca href=\"https://projecteuler.net/problem=13\"\u003e第十三个问题\u003c/a\u003e。我先给你展示一张截图：\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"https://inraku.files.wordpress.com/2018/11/screen-shot-2018-11-28-at-18-36-10.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e实际上，它看起来很大，任务是找到一百个整数之和的前十位数，每个整数由50位数组成。\u003c/p\u003e\n\u003cp\u003e听起来像是一项任务，可能需要一些优化和简化来摆脱对结果的前十位无贡献的一切。 但不是在Raku中。\u003c/p\u003e\n\u003cp\u003e在Raku中，您可以简单地将数字相加并取其前十位数字：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"mi\"\u003e37107287433902102798797998220837590246510135740250\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# Other 98 numbers here\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"mi\"\u003e53503534526472524250874054075591789781264330331690\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;.\u003c/span\u003e\u003cspan class=\"n\"\u003esum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubstr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esay\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku默认使用任意长整数运行; 您不需要包含任何模块或以其他方式激活此行为。 您甚至可以快速计算幂并获得结果：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ raku -e\u0026#39;say 37107287433902102798797998220837590 ** 1000\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e需要注意的另一件事是我们可以透明地将整数转换为数字，反之亦然。 在我们今天的程序中，数字列表显示为一对尖括号内的字符串的引用列表。\u003c/p\u003e\n\u003cp\u003e在列表中，您调用 \u003ccode\u003esum\u003c/code\u003e 方法，该方法适用于数字。 获得总和后，再次将其视为字符串并提取其前十个字符。 整个代码看起来非常自然，易于阅读。\u003c/p\u003e\n\u003cp\u003e有了这种情绪，我们明天再见！\u003c/p\u003e\n","text":"欢迎来到第4天的 Raku One-Liner Advent Calendar!\n今天我们会看一看欧拉项目的第十三个问题。我先给你展示一张截图：\n实际上，它看起来很大，任务是找到一百个整数之和的前十位数，每个整数由50位数组成。\n听起来像是一项任务，可能需要一些优化和简化来摆脱对结果的前十位无贡献的一切。 但不是在Raku中。\n在Raku中，您可以简单地将数字相加并取其前十位数字：\n\u0026lt; 37107287433902102798797998220837590246510135740250 # Other 98 numbers here 53503534526472524250874054075591789781264330331690 \u0026gt;.sum.substr(0, 10).say Raku默认使用任意长整数运行; 您不需要包含任何模块或以其他方式激活此行为。 您甚至可以快速计算幂并获得结果：\n$ raku -e\u0026#39;say 37107287433902102798797998220837590 ** 1000\u0026#39; 需要注意的另一件事是我们可以透明地将整数转换为数字，反之亦然。 在我们今天的程序中，数字列表显示为一对尖括号内的字符串的引用列表。\n在列表中，您调用 sum 方法，该方法适用于数字。 获得总和后，再次将其视为字符串并提取其前十个字符。 整个代码看起来非常自然，易于阅读。\n有了这种情绪，我们明天再见！\n"},"name":"🎄 4/25. 在 Raku 中使用大数","published":"2018-12-04T09:58:26Z","summary":"欢迎来到第4天的 Raku One-Liner Advent Calendar!\n今天我们会看一看欧拉项目的第十三个问题。我先给你展示一张截图：\n实际上，它看起来很大，任务是找到一百个整数之和的前十位数，每个整数由50位数组成。\n听起来像是一项任务，可能需要一些优化和简化来摆脱对结果的前十位无贡献的一切。 但不是在Raku中。\n在Raku中，您可以简单地将数字相加并取其前十位数字：\n\u0026lt; 37107287433902102798797998220837590246510135740250 # Other 98 numbers here 53503534526472524250874054075591789781264330331690 \u0026gt;.sum.substr(0, 10).say Raku默认使用任意长整数运行; 您不需要包含任何模块或以其他方式激活此行为。 您甚至可以快速计算幂并获得结果：\n$ raku -e\u0026#39;say 37107287433902102798797998220837590 ** 1000\u0026#39; 需要注意的另一件事是我们可以透明地将整数转换为数字，反之亦然。 在我们今天的程序中，数字列表显示为一对尖括号内的字符串的引用列表。\n在列表中，您调用 sum 方法，该方法适用于数字。 获得总和后，再次将其视为字符串并提取其前十个字符。 整个代码看起来非常自然，易于阅读。\n有了这种情绪，我们明天再见！","type":"entry","url":"http://localhost:1313/notes/working-with-big-numbers-in-raku/"}
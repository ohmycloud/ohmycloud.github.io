{"author":{"name":null,"type":"card","url":"https://ohmyweekly.github.io/"},"content":{"html":"\u003cp\u003e\u003ca href=\"https://imagemagick.org/Usage/draw/\"\u003ehttps://imagemagick.org/Usage/draw/\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e在 IM 中绘图是在现有图像中添加新元素的方法。虽然在\u003ca href=\"https://imagemagick.org/Usage/fonts/\"\u003e复合字体效果\u003c/a\u003e的示例页和\u003ca href=\"https://imagemagick.org/Usage/annotating/\"\u003e图像注释\u003c/a\u003e中涵盖了很多文本绘制的内容，但本页涉及 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?draw\"\u003e-draw\u003c/a\u003e\u0026rdquo; 操作符的其他更普遍的方面。\u003c/p\u003e\n\u003cp\u003e绘制命令最初是作为一种创建简单图像的手段。但随着时间的推移，它已经扩展成为矢量图形到光栅图像转换的界面。\u003c/p\u003e\n\u003ch2 id=\"imagemagick-绘制命令\"\u003eImageMagick 绘制命令\u003c/h2\u003e\n\u003cp\u003e计算机中的图像通常以两种不同的方式保存。第一种也是你在这些示例页面中看到的最常见的方式被称为光栅图形。在这种方式中，图像是以像素的矩形阵列来存储的。\u003c/p\u003e\n\u003cp\u003e另一种方式不太常见，也不太容易修改，但从另一个意义上讲，它的通用性更强，即对象矢量图形。在这种形式下，图像是用线条、弧线、颜色填充，有时还有深度来描述的。这是非常有用的，因为你可以将这些图像放大到你想要的任何尺寸，而且它们仍然可以完美地显示。与光栅格式的图像相比，您还可以在很小的空间内描述非常大和复杂的图像。\u003c/p\u003e\n\u003cp\u003e矢量图形图像的例子包括 postscript 和新的 \u003ca href=\"http://www.w3.org/TR/SVG/\"\u003eSVG-可缩放矢量图形\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003eTrue-Type 字体也是矢量图形的例子，因为它允许在任何比例下使用单个字符描述。\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?draw\"\u003e-draw\u003c/a\u003e\u0026rdquo; 图像操作符，是进入 ImageMagick 矢量绘图功能的一个窗口，并形成了一套与 IM 的普通命令行图像操作符相当独立的命令。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e一般使用的矢量图形文件格式只有几种，因为每一种这样的格式通常与其他这样的格式有很大的不同。其结果是，很少有代码共享的可能。\n基于这个原因，ImageMagick 更关注使用矢量图形来绘制 SVG 格式的图像。Postscript 和 true-type 字体图形被传递给其他外部的\u0026quot;\u003ca href=\"https://imagemagick.org/Usage/files/#delegate\"\u003e代理\u003c/a\u003e\u0026ldquo;库和应用程序，它们更适合绘制这些类型的矢量图形格式。\n这并不是说 SVG 没有代理库。一个例子是 RSVG 库或 GTK SVG 库，这些库在编译时是可用的。IM 会链接到这些库来转换 SVG，而不是自己尝试去做。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"原始绘图命令\"\u003e原始绘图命令\u003c/h3\u003e\n\u003cp\u003e让我们从 MVG 命令的 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?draw\"\u003e-draw\u003c/a\u003e\u0026rdquo; 图像操作符中最古老、最简单、最常见的绘图原语开始。\u003c/p\u003e\n\u003cp\u003e请注意，所有的参数都被视为浮点数，不一定是整数，比如我在这些例子中通常使用的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Single Pixel Draw  (两种方式 -- 这些像素点都被放大了)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Point \u0026#39;paints\u0026#39; the color pixel\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 10x6 xc:skyblue  -fill black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;point 3,2\u0026#39;\u003c/span\u003e         -scale 100x60   draw_point.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Color Point \u0026#39;replaces\u0026#39; the color pixel\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 10x6 xc:skyblue  -fill black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 6,3 point\u0026#39;\u003c/span\u003e   -scale 100x60   draw_color_point.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_point.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_color_point.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e根据给出的注释，当涉及半透明颜色时，这两种点方法会产生不同的结果。详情请参见下面的\u003ca href=\"https://imagemagick.org/Usage/draw/#color\"\u003e颜色填充原语\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# 矩形  /  圆角矩形  /  矩形圆弧\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;rectangle 20,10 80,50\u0026#34;\u003c/span\u003e       draw_rect.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;roundrectangle 20,10 80,50 20,15\u0026#34;\u003c/span\u003e  draw_rrect.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;arc  20,10 80,50  0,360\u0026#34;\u003c/span\u003e     draw_arc.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;arc  20,10 80,50 45,270\u0026#34;\u003c/span\u003e     draw_arc_partial.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_rect.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_rrect.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_arc.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_arc_partial.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003earc\u003c/code\u003e 绘制原语与矩形一起列出，因为它实际上只是一个\u0026quot;椭圆\u0026rdquo;，装在两个坐标定义的\u0026quot;矩形\u0026quot;(\u003ccode\u003erectangle\u003c/code\u003e)内。部分弧线很少使用，因为很难确定端点，除非角度限制在九十度的倍数。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecircle\u003c/code\u003e 和 \u003ccode\u003eellipse\u003c/code\u003e 原语涉及\u0026quot;中心\u0026quot;坐标与\u0026quot;边缘\u0026quot;坐标，或\u0026quot;大小\u0026quot;和\u0026quot;角度\u0026quot;值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# 圆  /  椭圆    (以某一点为中心)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;circle 50,30 40,10\u0026#34;\u003c/span\u003e          draw_circle.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;ellipse 50,30 40,20 0,360\u0026#34;\u003c/span\u003e   draw_ellipse.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;ellipse 50,30 40,20 45,270\u0026#34;\u003c/span\u003e   draw_ellipse_partial.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_circle.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_ellipse.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_ellipse_partial.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你也可以看看 \u003ca href=\"https://imagemagick.org/Usage/draw/#push_context\"\u003ePush/Pop 上下文\u003c/a\u003e，了解如何创建一个旋转的椭圆的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# 直线 / 折线 / 多边形 / 贝塞尔曲线\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;line   20,50 90,10\u0026#34;\u003c/span\u003e                 draw_line.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;polyline 40,10 20,50 90,10 70,40\u0026#34;\u003c/span\u003e   draw_polyline.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;polygon  40,10 20,50 90,10 70,40\u0026#34;\u003c/span\u003e   draw_polygon.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;bezier   40,10 20,50 90,10 70,40\u0026#34;\u003c/span\u003e   draw_bezier.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e比较好的画直线和曲线的方法是使用 \u003ca href=\"https://imagemagick.org/Usage/draw/#paths\"\u003eSVG 路径画法\u003c/a\u003e，它的用途更广，甚至可以实现\u0026quot;比例画线\u0026quot;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# text drawing  / image\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -font Candice -pointsize \u003cspan class=\"m\"\u003e40\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;text 0,0 \u0026#39;Hello\u0026#39;\u0026#34;\u003c/span\u003e   draw_text.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;image over 0,0 0,0 \u0026#39;terminal.gif\u0026#39;\u0026#34;\u003c/span\u003e   draw_image.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最后这两个填充类型的操作是目前唯一受 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?gravity\"\u003e-gravity\u003c/a\u003e\u0026rdquo; 影响的绘制操作。这些操作的其他修饰符，包括 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?fill\"\u003e-fill\u003c/a\u003e\u0026quot;、\u0026rdquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?tile\"\u003e-tile\u003c/a\u003e\u0026quot;、\u0026quot;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?origin\"\u003e-origin\u003c/a\u003e\u0026quot;、\u0026quot;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?stroke\"\u003e-stroke\u003c/a\u003e\u0026quot;、\u0026quot;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?strokewidth\"\u003e-strokeidth\u003c/a\u003e\u0026quot;、\u0026quot;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?font\"\u003e-font\u003c/a\u003e\u0026quot;、\u0026quot;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?pointsize\"\u003e-pointsize\u003c/a\u003e\u0026quot;、\u0026quot;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?box\"\u003e-box\u003c/a\u003e\u0026quot;。他们还有其他的修饰符，但这些修饰符与更高级的 \u003ca href=\"https://imagemagick.org/Usage/draw/#mvg\"\u003eMagick Vector Graphics\u003c/a\u003e 语言有关。\u003c/p\u003e\n\u003ch2 id=\"贝赛尔原语\"\u003e贝赛尔原语\u003c/h2\u003e\n\u003cp\u003e\u0026ldquo;bezier\u0026rdquo; 原语用于绘制曲线。每条命令只画一条曲线段。通常会给出 4 个点（8 个数字）：一个起点\u0026rsquo;结\u0026rsquo;、两个控制点和一个终点\u0026rsquo;结\u0026rsquo;。两个控制点定义了曲线的方向以及曲线偏离附加的终点\u0026rsquo;结\u0026rsquo;点的速度。\u003c/p\u003e\n\u003cp\u003e为了顺利地将两条曲线连接起来，应该将端点的控制点通过\u0026rsquo;结\u0026rsquo;镜像，形成下一条贝塞尔曲线的控制点。例如这里我画了两条平稳连接在一起的贝赛尔曲线。请注意控制线和点（也是画出来的）是如何通过连接坐标直线镜像的，无论是角度还是长度。这一点很重要，否则曲线将不平滑。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10,10 30,90   25,10 50,50   50,50 75,90   70,10 90,40\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003eclines\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sed \u003cspan class=\"s1\"\u003e\u0026#39;s/   /\\n/g\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e             \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"nb\"\u003eread\u003c/span\u003e line\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;line \u003c/span\u003e\u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003esymbols\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e path \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e   l -2,-2 +4,+4 -2,-2   l -2,+2 +4,-4 -2,+2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc:skyblue -fill none \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke gray \u003c/span\u003e\u003cspan class=\"nv\"\u003e$clines\u003c/span\u003e\u003cspan class=\"s2\"\u003e    stroke blue \u003c/span\u003e\u003cspan class=\"nv\"\u003e$symbols\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 10,10 30,90   25,10 50,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 50,50 75,90   70,10 90,40 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          draw_bezier_joined.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_bezier_joined.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果我移动其中一个控制点，使它不从同一\u0026quot;结\u0026quot;的另一个控制点通过附加的\u0026quot;结\u0026quot;进行\u0026quot;反射\u0026quot;，那么曲线将不连续。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10,10 30,90   25,10 50,50   50,50 80,50   70,10 90,40\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003eclines\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sed \u003cspan class=\"s1\"\u003e\u0026#39;s/   /\\n/g\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e             \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"nb\"\u003eread\u003c/span\u003e line\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;line \u003c/span\u003e\u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003esymbols\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e path \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e   l -2,-2 +4,+4 -2,-2   l -2,+2 +4,-4 -2,+2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc:skyblue -fill none \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke gray \u003c/span\u003e\u003cspan class=\"nv\"\u003e$clines\u003c/span\u003e\u003cspan class=\"s2\"\u003e    stroke blue \u003c/span\u003e\u003cspan class=\"nv\"\u003e$symbols\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 10,10 30,90   25,10 50,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 50,50 80,50   70,10 90,40 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          draw_bezier_disjoint.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_bezier_disjoint.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果再次移动控制点，使其与相关的\u0026quot;结\u0026quot;点相匹配，线条将直接从该点出发，完全没有任何\u0026quot;曲线\u0026quot;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10,10 30,90   25,10 50,50   50,50 50,50   70,10 90,40\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003eclines\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sed \u003cspan class=\"s1\"\u003e\u0026#39;s/   /\\n/g\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e             \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"nb\"\u003eread\u003c/span\u003e line\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;line \u003c/span\u003e\u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003esymbols\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e path \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e   l -2,-2 +4,+4 -2,-2   l -2,+2 +4,-4 -2,+2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc:skyblue -fill none \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke gray \u003c/span\u003e\u003cspan class=\"nv\"\u003e$clines\u003c/span\u003e\u003cspan class=\"s2\"\u003e    stroke blue \u003c/span\u003e\u003cspan class=\"nv\"\u003e$symbols\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 10,10 30,90   25,10 50,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 50,50 50,50   70,10 90,40 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          draw_bezier_no_curve.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_bezier_no_curve.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果两个控制点都设置为各自的\u0026quot;结点\u0026quot;，那么就会生成一条直线。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10,10 10,10   50,50 50,50   50,50 50,50   90,40 90,40\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003eclines\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sed \u003cspan class=\"s1\"\u003e\u0026#39;s/   /\\n/g\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e             \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"nb\"\u003eread\u003c/span\u003e line\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;line \u003c/span\u003e\u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003esymbols\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e path \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e   l -2,-2 +4,+4 -2,-2   l -2,+2 +4,-4 -2,+2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc:skyblue -fill none \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke gray \u003c/span\u003e\u003cspan class=\"nv\"\u003e$clines\u003c/span\u003e\u003cspan class=\"s2\"\u003e    stroke blue \u003c/span\u003e\u003cspan class=\"nv\"\u003e$symbols\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 10,10 10,10   50,50 50,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red  bezier 50,50 50,50   90,40 90,40 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          draw_bezier_lines.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_bezier_lines.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果不指定所有 4 个点，\u0026lsquo;bezier\u0026rsquo; 原语并不真正有用。只有第一个点和最后一个点被归类为\u0026rsquo;结\u0026rsquo;，曲线将通过（或结束）这两个点。所有其他的点纯粹被视为控制点，按照给定的顺序对曲线产生影响，控制点越远，对该段曲线的影响越大。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;10,10 30,90   25,10    75,90   70,10 90,40\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003esymbols\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e   l -2,-2 +4,+4 -2,-2   l -2,+2 +4,-4 -2,+2\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"k\"\u003edone\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100  xc:skyblue  -fill none \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke gray  polyline \u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke red   bezier \u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke blue  path \u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$symbols\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          draw_bezier_multi.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_bezier_multi.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e为了保持简单，不建议你每条 \u0026lsquo;bezier\u0026rsquo; 曲线段使用超过或少于4个点。\u003c/p\u003e\n\u003cp\u003e其实我建议你完全不要使用 \u0026lsquo;bezier\u0026rsquo; 原语，而是使用 \u003ca href=\"https://imagemagick.org/Usage/draw/#cubic\"\u003eSVG Path Cubic Bezier\u003c/a\u003e 来生成曲线。它有一个特殊的 \u0026ldquo;s\u0026rdquo; 曲线延续功能，可以自动做相应的控制点\u0026quot;反射\u0026quot;，生成平滑连接的曲线段，减少你需要使用的控制点数量。您还可以定义相对于路径中最后一个端点的点。\u003c/p\u003e\n\u003ch2 id=\"颜色填充原语\"\u003e颜色填充原语\u003c/h2\u003e\n\u003cp\u003e除了上述 \u0026ldquo;简单\u0026quot;原语之外，\u0026rdquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?draw\"\u003e-draw\u003c/a\u003e\u0026ldquo;还提供了一组颜色填充或修改原语。这些原语根据所选方法，从指定的点开始修改图像中的颜色。\u003c/p\u003e\n\u003cp\u003e这些填充方法实际上不是真正的 \u0026lsquo;draw\u0026rsquo; 命令，而是颜色替换函数。它们被添加到绘图中，因为在程序的早期版本中，将它们的操作插入到 ImageMagick 中是最简单的。\u003c/p\u003e\n\u003cp\u003e就像上面一样，使用的颜色是用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?fill\"\u003e-fill\u003c/a\u003e\u0026ldquo;颜色设置的，但如果设置了，就会使用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?tile\"\u003e-tile\u003c/a\u003e\u0026rdquo; 图像来代替。\u003c/p\u003e\n\u003cp\u003e上面的其他设置选项没有使用，对这些操作没有影响。\u003c/p\u003e\n\u003cp\u003e两个额外的设置也将应用于这些原语，即 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?bordercolor\"\u003e-bordercolor\u003c/a\u003e\u0026rdquo; 和 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?fuzz\"\u003e-fuzz\u003c/a\u003e\u0026ldquo;系数设置。但是，这些设置不能在 \u0026ldquo;MVG\u0026rdquo; 语言中定义，因此只能在使用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?draw\"\u003e-draw\u003c/a\u003e\u0026rdquo; 操作符之前进行设置。\u003c/p\u003e\n\u003cp\u003e第一个 \u0026lsquo;color point\u0026rsquo; 你已经看到了，它是上述例子中 \u0026lsquo;point\u0026rsquo; 绘制原语的替代。如果你仔细观察，你会看到我们在测试图像中设置的单个白色像素。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 point\u0026#39;\u003c/span\u003e      color_point.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/color_point.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e然而在绘制透明色和半透明色时，这些功能是不一样的。\u003c/p\u003e\n\u003cp\u003e这里我们有一个三个像素的红色图像（放大了），第二个或中间的像素我们用 \u003ccode\u003epoint\u003c/code\u003e 函数在红色像素上画上半透明的蓝色，得到紫色的结果。然而如果使用 \u003ccode\u003ecolor point\u003c/code\u003e 函数（最后一个或右边的像素），红色完全被半透明的蓝色像素所取代。它不会被叠加。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 3x1 xc:red -matte -fill \u003cspan class=\"s1\"\u003e\u0026#39;#00F8\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;point 1,0\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 2,0 point\u0026#39;\u003c/span\u003e   -scale 33x33  draw_points.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_points.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e所有的 \u003ccode\u003ecolor\u003c/code\u003e 函数都会进行全色替换，而其他所有的颜色原语都会在图像上面\u0026rsquo;画\u0026rsquo;出颜色。因此，你可以使用 \u003ccode\u003ecolor\u003c/code\u003e 来绘制透明色。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecolor replace\u003c/code\u003e 绘制函数将在指定的位置替换所有精确给定颜色的实例。而且正如您所看到的，这些区域不一定要连接在一起。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 replace\u0026#39;\u003c/span\u003e      color_replace.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white   -fuzz 13%\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 replace\u0026#39;\u003c/span\u003e      color_replace_fuzz.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/color_replace.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e然而，正如你在第一个结果中所看到的，一些沿边缘的像素没有被替换。这些像素与所选像素的颜色不完全相同，所以它们被忽略了。添加一个小的\u003ca href=\"https://imagemagick.org/Usage/color_basics/#fuzz\"\u003e模糊因子\u003c/a\u003e也会包含与原色相似的颜色。如上面第二个例子所示。\u003c/p\u003e\n\u003cp\u003e当然，\u003ccode\u003efuzz factor\u003c/code\u003e 并不是一个很好的解决方案，因为它不会捕捉所有这样的边缘像素。这是所有这些 \u003ccode\u003ecolor fill\u003c/code\u003e 方法经常出现的问题，也是一个没有通用解决方案的问题。\u003c/p\u003e\n\u003cp\u003e如果你想替换一个特定的已知颜色，而不是从图像本身选择一种颜色，那么可以使用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?opaque\"\u003e-opaque\u003c/a\u003e\u0026rdquo; 图像操作符来代替。该函数还使用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?fuzz\"\u003e-fuzz\u003c/a\u003e\u0026rdquo; 因子设置来增加与给定颜色相匹配的颜色范围。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003efloodfill\u003c/code\u003e 的方法也很简单，因为它只会填充所选点周围的整个区域，而不会选择任何其他没有以某种方式连接的类似颜色的区域。\u003c/p\u003e\n\u003cp\u003e你也可以通过使用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?fuzz\"\u003e-fuzz\u003c/a\u003e\u0026rdquo; 来扩大被填充的区域，以包括相似的颜色。在这种情况下，我们选择了一个足够高的值，也包括了交叉边界，允许洪水填充\u0026quot;泄漏\u0026quot;到图像的另一侧。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 floodfill\u0026#39;\u003c/span\u003e      color_floodfill.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white   -fuzz 15%   \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 floodfill\u0026#39;\u003c/span\u003e      color_floodfill_fuzz.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/color_floodfill.png\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/color_floodfill_fuzz.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e用颜色填充区域并非没有问题。颜色可能会越过薄薄的边界，渗入到不想要的区域，(\u003ca href=\"https://imagemagick.org/Usage/formats/#bg_pattern\"\u003e请看背景图案上的 GIF\u003c/a\u003e，以证明这一点)。或者，它可能无法填满所选区域的边缘，（见\u003ca href=\"https://imagemagick.org/Usage/antialiasing/#floodfill\"\u003e反锯齿和泛滥填充问题\u003c/a\u003e）。但它确实有效。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003efilltoborder\u003c/code\u003e 就像 \u003ccode\u003efloodfill\u003c/code\u003e 一样，只是你指定了一个颜色，这个颜色的边界是要填充的区域，而不是填充过程中要替换的颜色。\u003c/p\u003e\n\u003cp\u003e当然也建议在该边框颜色选择中加入 \u003ccode\u003esimilar colors\u003c/code\u003e 的\u003ca href=\"https://imagemagick.org/Usage/color_basics/#fuzz\"\u003e模糊因子\u003c/a\u003e，以进一步限制洪水填充。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white  -bordercolor royalblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 filltoborder\u0026#39;\u003c/span\u003e   color_filltoborder.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white  -bordercolor blue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 filltoborder\u0026#39;\u003c/span\u003e   color_filltoborder2.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white  -bordercolor blue  -fuzz 30% \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 filltoborder\u0026#39;\u003c/span\u003e   color_filltoborder_fuzz.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/color_filltoborder.png\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/color_filltoborder2.png\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/color_filltoborder_fuzz.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e最后的绘制颜色方法是 \u003ccode\u003ereset\u003c/code\u003e，它只是将整个图像替换或重置为填充颜色。在这种情况下，实际选择的像素对结果没有任何影响。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;color 30,20 reset\u0026#39;\u003c/span\u003e      color_reset.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/color_reset.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这实际上是非常有用的，因为它提供了一种简单的方法从现有图像生成纯色（或平铺图像）画布。(请参见 \u003ca href=\"https://imagemagick.org/Usage/canvas/#sized\"\u003eCanvases Sized to an Existing Image\u003c/a\u003e)以了解此方法和其他做同样事情的方法。\u003c/p\u003e\n\u003cp\u003e未来：使用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?tile\"\u003e-tile\u003c/a\u003e\u0026rdquo; 图案来填充该区域。\u003c/p\u003e\n\u003ch2 id=\"matt-填充原语\"\u003eMatt 填充原语\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003ematte\u003c/code\u003e 绘制原语的工作方式与上述 \u003ccode\u003ecolor\u003c/code\u003e 原语完全相同，只是它不会替换所选区域的颜色，只会替换所选区域的 \u003ccode\u003ematte\u003c/code\u003e 通道。（也就是只有 \u003ccode\u003ealpha\u003c/code\u003e 或 \u003ccode\u003ematte\u003c/code\u003e 通道被这些填充函数调整）。\u003c/p\u003e\n\u003cp\u003e就像 \u003ccode\u003ecolor\u003c/code\u003e 填充函数一样，\u003ccode\u003ematte\u003c/code\u003e 值使用的是填充色（除非用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?tile\"\u003e-tile\u003c/a\u003e\u0026rdquo; 作为 \u003ccode\u003ealpha value\u003c/code\u003e 的来源）。\u003c/p\u003e\n\u003cp\u003e这里我们使用上面同样的 \u003ccode\u003ecolor floodfill\u003c/code\u003e 例子，但这里只调整 matte 通道，使填充部分完全透明。也就是说，原来的颜色仍然存在，只是透明而已!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill none \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;matte 30,20 floodfill\u0026#39;\u003c/span\u003e      matte_floodfill.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill none   -fuzz 15%   \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;matte 30,20 floodfill\u0026#39;\u003c/span\u003e      matte_floodfill_fuzz.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/matte_floodfill.png\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/matte_floodfill_fuzz.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e也可以使用 \u003ccode\u003ematte reset\u003c/code\u003e 函数使整个图像变成半透明的。当然在这种情况下，我们必须输出到 PNG，它可以接受半透明颜色的图像。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert color_test.png   -fill \u003cspan class=\"s1\"\u003e\u0026#39;#00000080\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;matte 30,20 reset\u0026#39;\u003c/span\u003e      matte_reset.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/matte_reset.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e注意，在操作中没有使用 \u003ccode\u003eblack\u003c/code\u003e 颜色分量，只使用了颜色的 \u003ccode\u003ematte\u003c/code\u003e 分量。图像的原色保持原样。\u003c/p\u003e\n\u003cp\u003e未来：使用 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?tile\"\u003e-tile\u003c/a\u003e\u0026rdquo; 模式来制作有趣的哑光效果。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecolor\u003c/code\u003e 和 \u003ccode\u003ematte\u003c/code\u003e 都是完全替换颜色的函数，它总是会产生一个布尔（all or nothing）类型的颜色替换。因此，这些区域的边缘总是会显示出 \u003ca href=\"https://imagemagick.org/Usage/antialiasing/\"\u003eAliasing 效果\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e正因为如此，除了设置 GIF 图像的透明区域（也是布尔型）外，一般来说，这些都不是一般图像显影的好图像运算符。不过也不是全无用处，\u003ca href=\"https://imagemagick.org/Usage/masking/#bg_remove\"\u003e从背景去除\u003c/a\u003e的例子中可以看出。\u003c/p\u003e\n\u003ch2 id=\"关于绘图命令的具体内容\"\u003e关于绘图命令的具体内容\u003c/h2\u003e\n\u003ch3 id=\"像素坐标\"\u003e像素坐标\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e[-draw](https://imagemagick.org/Usage/option_link.cgi?draw)\u003c/code\u003e 命令（以及IM中的许多其他命令）使用的是所谓的\u0026quot;像素坐标\u0026rdquo;。也就是 \u0026ldquo;10,10\u0026rdquo; 的坐标是左上角往下10个像素的中心。\u003c/p\u003e\n\u003cp\u003e在这个坐标系中，0,0 是左上角像素的中心，w-1,h-1 是右下角的中心。实际的边缘位于 -0.5,-0.5 和 w-0.5,h-0.5，中心像素（如果图像是奇数大小）位于 \u0026lsquo;(w-1)/2,(h-1)/2\u0026rsquo;。\u003c/p\u003e\n\u003cp\u003e然而，当您对图像进行数学处理时（如使用扭曲时），实际的像素没有实际意义，因此它使用\u0026quot;图像坐标\u0026rdquo;。在这个系统中，图像的实际边缘在 \u0026lsquo;0,0\u0026rsquo; 和 \u0026lsquo;w,h\u0026rsquo; 处。而图像的中心（可能是，也可能不是像素的中心）在 \u0026lsquo;w/2,h/2\u0026rsquo;。\u003c/p\u003e\n\u003cp\u003e要将 \u0026lsquo;像素坐标\u0026rsquo; 转换为图像坐标，请加上 ½ 如左上角像素的中心是 \u0026lsquo;0.5,0.5\u0026rsquo;，右下角像素的中心是 \u0026lsquo;w-0.5,h-0.5\u0026rsquo;。\n\u003cem\u003e例如：小图像中的圆心\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"绘制伽马和色域校正\"\u003e绘制伽马和色域校正\u003c/h3\u003e\n\u003cp\u003e和几乎所有的 ImageMagick 操作一样， \u003ccode\u003e[-draw](https://imagemagick.org/Usage/option_link.cgi?draw)\u003c/code\u003e 是一个线性运算符，因此在线性 RGB 色彩空间中工作。这意味着，为了得到平滑的边缘，你可能需要对图像进行一些伽玛校正，然后再保存，这样就可以使用非线性（伽玛校正）的sRGB色彩空间来存储。\u003c/p\u003e\n\u003cp\u003e例如，如果你画了一个大圆，然后保存它\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 81x81 xc:black -fill white -draw \u003cspan class=\"s1\"\u003e\u0026#39;circle 40,40 40,3\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          circle_raw.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_raw.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e看看圆圈的边缘，其实看起来并不是真的很光滑。你可以看到明显的阶梯效果。\u003c/p\u003e\n\u003cp\u003e那是因为你是在线性 RGB 色彩空间中画的圆。但是你却把图像保存成了真正的 sRGB 色域！这就导致了你的图像在保存的过程中出现了明显的阶梯效果。\u003c/p\u003e\n\u003cp\u003e为了解决这个问题，我们需要在保存图像之前给图像添加一个伽玛校正。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 81x81 xc:black -fill white -draw \u003cspan class=\"s1\"\u003e\u0026#39;circle 40,40 40,3\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -gamma 2.2 circle_gamma.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_gamma.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e现在，圆圈边缘实际上看起来光滑圆润，就像它们应该的那样。\u003c/p\u003e\n\u003cp\u003e如果你想正确地做这件事，我们真的应该使用色彩空间进行修正。然而，由于IM假设RGB是保存的默认色彩空间，你需要做一些棘手的处理来让它正确地做事情。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 81x81 xc:black -set colorspace RGB \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill white -draw \u003cspan class=\"s1\"\u003e\u0026#39;circle 40,40 40,3\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -colorspace sRGB circle_sRGB.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_sRGB.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e请注意，sRGB色彩空间（这是保存图像的正确方法）与简单地应用2.2伽玛校正并不完全相同。然而，两者之间的结果差异很小，只有在非常非常粗糙的图像中才能看到。\n在IM v6.7.5-1之前，色彩空间名称 \u0026ldquo;sRGB\u0026rdquo; 和 \u0026ldquo;RGB\u0026rdquo;（线性-RGB）实际上是颠倒的。因此，在旧版本的IM中，上面的两个标签应该被调换。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e要使用真实的图像（在IMv6中）正确地绘制（或进行任何\u0026quot;线性\u0026quot;图像处理），你需要首先删除任何现有的伽玛，处理图像，然后恢复该伽玛校正。更多细节请参见\u003ca href=\"https://imagemagick.org/Usage/resize/#resize_colorspace\"\u003e使用色域校正调整大小\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e下面是一个在真实图像上绘图的例子\u0026hellip;。首先是没有任何颜色校正（原始），然后是伽玛和色域校正。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert rose:  -fill none -stroke white -draw \u003cspan class=\"s1\"\u003e\u0026#39;line 5,40 65,5\u0026#39;\u003c/span\u003e  rose_raw.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert rose: -gamma .454545 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill none -stroke white -draw \u003cspan class=\"s1\"\u003e\u0026#39;line 5,40 65,5\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -gamma 2.2 rose_gamma.png\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert rose: -colorspace RGB \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill none -stroke white -draw \u003cspan class=\"s1\"\u003e\u0026#39;line 5,40 65,5\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -colorspace sRGB rose_sRGB.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/rose_raw.png\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/rose_gamma.png\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/rose_sRGB.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e正如你所看到的，通过使用伽玛或色彩空间校正，线条变得非常平滑，没有锯齿状的\u0026quot;楼梯\u0026quot;别离效果，比直接绘制时可以看到。(你需要一个很好的显示器才能看到它)\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e上面的线条是用 \u003ccode\u003e[-stroke](https://imagemagick.org/Usage/option_link.cgi?stroke)\u003c/code\u003e 颜色绘制的。您可以使用 \u003ccode\u003e[-fill](https://imagemagick.org/Usage/option_link.cgi?fill)\u003c/code\u003e 来绘制线条，并得到同样的结果，但这样您就不能使用 \u003ccode\u003e[-strokewidth](https://imagemagick.org/Usage/option_link.cgi?strokewidth)\u003c/code\u003e 来控制线条粗细。更多信息请参见下面的\u0026rdquo;\u003ca href=\"https://imagemagick.org/Usage/draw/#stroke\"\u003e描边颜色设置\u003c/a\u003e\u0026quot;。\n色域名称实际上是使用\u0026rsquo;sRGB\u0026rsquo;色彩空间的值来定义的，但通过绘制应用，就好像图像是在线性RGB色彩空间中一样。因此，对命名的颜色（不是\u0026quot;白\u0026quot;或\u0026quot;黑\u0026rdquo;）使用上述伽玛校正将导致这些颜色变得失真。在这种情况下，最好不要使用伽玛或色域校正，这样命名的颜色就会正确映射。\n命名的\u0026rsquo;sRGB\u0026rsquo;颜色与图像的色彩空间的正确映射，将作为IMv7开发的一部分被修正。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"描边描边宽度和填充的相互作用\"\u003e描边、描边宽度和填充的相互作用\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e[-stroke](https://imagemagick.org/Usage/option_link.cgi?stroke)\u003c/code\u003e 和 \u003ccode\u003e[-strokewidth](https://imagemagick.org/Usage/option_link.cgi?strokewidth)\u003c/code\u003e 选项用于在字体边缘绘制轮廓。\u003c/p\u003e\n\u003cp\u003e这些选项通常与 \u003ccode\u003e[-fill](https://imagemagick.org/Usage/option_link.cgi?fill)\u003c/code\u003e 一起使用，以使文字更有趣，而不费力。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    convert -size 380x70 xc:lightblue -pointsize \u003cspan class=\"m\"\u003e50\u003c/span\u003e -font Chisel \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            -fill green  -stroke black  -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 10,55 \u0026#34;Black Border\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            stroke_font.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e默认设置是 \u003ccode\u003e-strokewidth 1\u003c/code\u003e 和 \u003ccode\u003e-stroke None\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e但这样做会使轮廓笔画不可见，只留下 \u003ccode\u003e[-fill](https://imagemagick.org/Usage/option_link.cgi?fill)\u003c/code\u003e 的颜色，你不会看到它。\u003c/p\u003e\n\u003cp\u003e当 \u003ccode\u003e-strokewidth\u003c/code\u003e 为 \u0026ldquo;不可见 \u0026ldquo;时， \u003ccode\u003e-strokewidth\u003c/code\u003e 唯一的效果是对字体大小属性的影响，也就是说它仍然可以影响字体定位和 \u003ca href=\"https://imagemagick.org/Usage/text/#label\"\u003eLabel 和 Caption\u003c/a\u003e 图片生成的大小。否则，宽度在你使笔画可见之前是没有可见效果的。\u003c/p\u003e\n\u003cp\u003e为了了解 \u003ccode\u003e[-strokewidth](https://imagemagick.org/Usage/option_link.cgi?strokewidth)\u003c/code\u003e 对字体外观的实际影响（当使其可见时），我在这里绘制了一些不同宽度的文字，从 \u0026ldquo;turned off\u0026rdquo; 到越来越大。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    convert -size 320x420 xc:lightblue -pointsize \u003cspan class=\"m\"\u003e70\u003c/span\u003e -font Vademecum \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e      -fill red -stroke none                 -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 30,80  \u0026#34;Stroke -\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e      -fill red -stroke black -strokewidth \u003cspan class=\"m\"\u003e0\u003c/span\u003e -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 30,160 \u0026#34;Stroke 0\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e      -fill red -stroke black -strokewidth \u003cspan class=\"m\"\u003e1\u003c/span\u003e -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 30,240 \u0026#34;Stroke 1\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e      -fill red -stroke black -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 30,320 \u0026#34;Stroke 2\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e      -fill red -stroke black -strokewidth \u003cspan class=\"m\"\u003e3\u003c/span\u003e -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 30,400 \u0026#34;Stroke 3\u0026#34;\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e      stroke_table.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/stroke_table.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，从上面的例子中，设置 \u003ccode\u003e-strokewidth\u003c/code\u003e 为 \u0026ldquo;0\u0026rdquo; 与设置 \u003ccode\u003e-stroke\u003c/code\u003e 颜色为 \u0026ldquo;none\u0026rdquo;（默认值）是不同的。前者会画出一个非常非常细的笔触轮廓，而后者则会有效地关闭它。在这两种情况下，笔触仍然会被绘制。\u003c/p\u003e\n\u003cp\u003e然而你也应该注意到，即使 \u003ccode\u003e-strokewidth\u003c/code\u003e 为 \u0026ldquo;0\u0026rdquo;，图像的轮廓也会比普通的 \u003ccode\u003efilled\u003c/code\u003e 图像（使用 \u003ccode\u003e-stroke\u003c/code\u003e 颜色为 \u0026ldquo;none\u0026rdquo;）扩大非常小。\u003c/p\u003e\n\u003cp\u003e最后，使用任何小于 \u0026ldquo;1.0\u0026rdquo; 的宽度都不能正常工作。在这种情况下，你应该谨慎行事。\u003c/p\u003e\n\u003cp\u003e但是请记住， \u003ccode\u003e-strokewidth\u003c/code\u003e 也是一个浮点设置。也就是说，\u0026ldquo;0.5\u0026rdquo; 的笔画宽度也是有效的。然而，通常只有当您试图在关闭防锐化功能的情况下绘制薄的位图圆时，这才是重要的。\u003c/p\u003e\n\u003cp\u003e下面是一个使用超大笔触宽度的例子。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   convert -size 320x100 xc:lightblue -font Candice -pointsize \u003cspan class=\"m\"\u003e72\u003c/span\u003e -fill white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           -stroke black -strokewidth \u003cspan class=\"m\"\u003e15\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;text 25,65 \u0026#39;Anthony\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           stroke_thick.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/stroke_thick.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意， \u003ccode\u003e-strokewidth\u003c/code\u003e 可以向内和向外扩展线条。下面是同样的例子，但是重新绘制了字体，没有笔画轮廓，去掉了很粗的笔画的内侧部分。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   convert -size 320x100 xc:lightblue -font Candice -pointsize \u003cspan class=\"m\"\u003e72\u003c/span\u003e -fill white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           -stroke black -strokewidth \u003cspan class=\"m\"\u003e15\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;text 25,65 \u0026#39;Anthony\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           -stroke none                  -draw \u003cspan class=\"s2\"\u003e\u0026#34;text 25,65 \u0026#39;Anthony\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           stroke_outline.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/stroke_outline.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e更多使用描边的例子请看\u003ca href=\"https://imagemagick.org/Usage/fonts/\"\u003e复合字体效果\u003c/a\u003e。请特别看一下\u0026rdquo;\u003ca href=\"https://imagemagick.org/Usage/fonts/#balloon\"\u003e气球效果\u003c/a\u003e\u0026quot;。\u003c/p\u003e\n\u003ch3 id=\"绘制描边线条\"\u003e绘制（描边）线条\u003c/h3\u003e\n\u003cp\u003eIM中的默认画线有一些奇怪的行为，值得了解。下面就为大家介绍一下默认画线\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_default.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_default.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你可以用 \u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?fill\"\u003e\u003ccode\u003e-fill\u003c/code\u003e\u003c/a\u003e 选项设置线条的颜色。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill white -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e此外，你还可以通过设置 \u003ccode\u003e[-stroke](https://imagemagick.org/Usage/option_link.cgi?stroke)\u003c/code\u003e 颜色，使线条稍微粗一些。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill white -stroke black -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_stroke.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e但是我们用 \u003ccode\u003e-fill\u003c/code\u003e 选项指定的白色是怎么回事呢？\u003c/p\u003e\n\u003cp\u003e这就是在 ImageMagick 中绘制线条的棘手之处。该程序所做的实际上是将线条视为一个约1像素宽的填充对象。这是自然的，因为通常情况下，多条线通常用于扫出一个要填充的区域。\u003c/p\u003e\n\u003cp\u003e所以，就像我们在上一节中使用字体的描边一样，IM 用填充色绘制线条（或对象），然后用描边色在其周围绘制。结果就是，现在上面的描边色线条稍微粗了一点，填充色完全隐藏在下面。如果你把描边色做成半透明的，就可以让这个填充色再次显现出来。\u003c/p\u003e\n\u003cp\u003e综上所述，线条会出现在 \u003ccode\u003e-fill\u003c/code\u003e 颜色下绘制，但一旦 \u003ccode\u003e-stroke\u003c/code\u003e 颜色被定义为默认的\u0026quot;无\u0026quot;或\u0026quot;透明\u0026quot;颜色以外的颜色，该选项就没有任何意义了。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e选项 \u003ccode\u003e-linewidth\u003c/code\u003e 实际上只是 \u003ccode\u003e-strokewidth\u003c/code\u003e 的别名，不应该被使用。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e例如，你可能会认为这个命令会产生很粗的线条。确实如此，但由于 \u003ccode\u003e-stroke\u003c/code\u003e 的颜色是不可见的，所以你看不到它。你只能看到线条的一个像素宽的区域的内部\u0026quot;填充\u0026rdquo;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill white -strokewidth \u003cspan class=\"m\"\u003e3\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_fill_3.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_fill_3.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e以上的结果其实我认为是一个 BUG，什么都没画，因为没有\u0026rsquo;区域\u0026rsquo;填充，也没有设置线的\u0026rsquo;描边颜色\u0026rsquo;。什么都没有画，因为没有\u0026quot;区域 \u0026ldquo;需要填充，也没有设置线的\u0026quot;笔触颜色\u0026rdquo;。IM 目前这样做的原因是为了避免新用户的混淆，但实际上这只会给高级用户带来问题。详见\u003ca href=\"https://imagemagick.org/Usage/draw/#bounds\"\u003e《绘制填充边界》\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e但如果同时定义了描边颜色，就会得到要求的粗线\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -stroke black -strokewidth \u003cspan class=\"m\"\u003e3\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_stroke_3.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_3.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果将 \u003ccode\u003e-strokewidth\u003c/code\u003e 设置为1，则上面的一行将被完全覆盖。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -stroke black -strokewidth \u003cspan class=\"m\"\u003e1\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_stroke_1.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_1.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e当然当你掌握了这些知识后，你就可以利用这些知识进行创作，就像画字体一样。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -stroke black -strokewidth \u003cspan class=\"m\"\u003e5\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -stroke white -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_multi.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_multi.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e在这里，我使用了最薄的 \u003ccode\u003e-strokewidth\u003c/code\u003e 设置为 \u0026ldquo;0\u0026rdquo;，就像我对上述字体所做的一样。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill white -stroke black -strokewidth \u003cspan class=\"m\"\u003e0\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,35 95,5\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_stroke_0.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这就产生了一个非常奇怪的结果，即由黑点和灰段组成的点线。这是笔触、填充和背景色之间奇怪的\u0026quot;色拍频率\u0026quot;的结果。\u003c/p\u003e\n\u003cp\u003e下面是线条的放大图\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 25x10 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill white -stroke black -strokewidth \u003cspan class=\"m\"\u003e0\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 2,8 22,1\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -scale 400%    line_stroke_0_white.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_0_white.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e颜色节拍频率 \u0026ldquo;的效果与\u0026quot;声音节拍\u0026quot;的效果并无二致，当你有两把非常轻微的不调的吉他时，你会得到这样的效果。在这种情况下，你会得到一个黑点，其中笔触颜色完全覆盖了基本的填充颜色，你会得到一个灰色的点，其中笔触颜色与填充和背景颜色混合。\n颜色混合是反锯齿过程的自然结果，IM使用反锯齿过程来尝试改善线条和其他绘制对象的外观。更多信息请参见\u003ca href=\"https://imagemagick.org/Usage/antialiasing/\"\u003e IM 中的抗锯齿\u003c/a\u003e讨论和示例页面。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e需要注意的是，这种效果只出现在倾斜的线条上，而不是纯水平或垂直的线条，因为在这些线条上，别名没有影响，因此也就没有\u0026quot;色拍频率\u0026quot;的效果。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x40 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill white -stroke black -strokewidth \u003cspan class=\"m\"\u003e0\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 5,20 95,20\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          line_stroke_horz.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_horz.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e在这里，我在放大的视图上使用了不同的底层填充颜色，所以你可以看到颜色如何改变结果的节拍。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 25x10 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill none -stroke black -strokewidth \u003cspan class=\"m\"\u003e0\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 2,8 22,1\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -scale 400%     line_stroke_0_none.jpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 25x10 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill red -stroke black -strokewidth \u003cspan class=\"m\"\u003e0\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 2,8 22,1\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -scale 400%    line_stroke_0_red.jpg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 25x10 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill black -stroke black -strokewidth \u003cspan class=\"m\"\u003e0\u003c/span\u003e -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 2,8 22,1\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -scale 400%    line_stroke_0_black.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_0_none.jpg\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_0_red.jpg\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_0_black.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e让我们把它和无 stroke 相比\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 25x10 xc:lightblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill black -stroke none -draw \u003cspan class=\"s2\"\u003e\u0026#34;line 2,8 22,1\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -scale 400%    line_stroke_-_black.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/line_stroke_-_black.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e正如你所看到的，当绘制非常细的线条时，你可以通过使用相同的填充和描边颜色，或者将其中一种颜色设置为无来减少\u0026quot;节拍\u0026rdquo;。虽然后者是最好的主意，但前者可能对你的特定编程需求更实用。\u003c/p\u003e\n\u003cp\u003e注意，填充线的粗细是 \u0026ldquo;0\u0026rdquo;。但描边线可以有更大的厚度。它也是一个浮点值! 2.5像素宽的线条是完全有效的。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e这些结果不仅是由于笔画宽度为0的bug，导致颜色跳动，而且在没有实际需要填充的区域时，\u0026ldquo;填充色\u0026quot;被画出了额外的1.0直径厚度。这我也认为是一个bug。请看\u003ca href=\"https://imagemagick.org/Usage/draw/#bounds\"\u003e绘制填充边界\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"绘制填充边界\"\u003e绘制填充边界\u003c/h3\u003e\n\u003cp\u003e关于各种绘制原语，还有一些其他要点需要您注意。\u003c/p\u003e\n\u003cp\u003e笔画宽度对于大于 1.0 的浮点值工作得很好，但对于小于 1.0 的值似乎会崩溃。这是由于使用的实现算法造成的，而不仅仅是因为它是错误的，因为它在较大厚度的线条上工作得很好。\u003c/p\u003e\n\u003cp\u003e基本上，如果你使用的笔画宽度为零，你可以期待没有笔画颜色会被添加。相反，你会得到一种节拍模式，当线条穿过像素的实际\u0026quot;中心\u0026quot;时，笔触颜色就会达到全部强度。\u003c/p\u003e\n\u003cp\u003e真正应该发生的是，添加到像素上的颜色数量应该反映出被绘制的线条的面积，而不是像素与该线条的距离。因此，零宽度的线条不应该给图像添加任何颜色，而厚度小于1.0的线条应该只添加较少的颜色。\u003c/p\u003e\n\u003cp\u003e请看上面的例子 \u003ca href=\"https://imagemagick.org/Usage/draw/#strokewidth\"\u003eDraw Lines, with StrokeWidth and Stroke\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e另一个问题是，填充颜色没有应用到正在绘制的形状（多边形）的边缘，而是应用到更远的半像素处。这包括没有应用\u0026quot;描边\u0026quot;的情况，而边缘应该是精确的。它也包括画一条\u0026quot;线\u0026rdquo;，它的填充厚度实际上是\u0026quot;零\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e基本上，如果你画了一条线，没有启用描边，从技术上讲，你应该看到，没有线，因为它没有\u0026quot;填充\u0026quot;厚度。相反，线条的绘制至少包括1个像素宽的\u0026quot;填充\u0026quot;颜色。这是出于历史原因，一般来说可以避免新用户对IM的混淆。不幸的是，这对高级用户来说是不正确的。\u003c/p\u003e\n\u003cp\u003e这意味着，如果您只使用填充色绘制两个多边形，并共享一个边缘，该边缘将重叠1个像素，因为每个多边形的所有边缘都比它大半像素。换句话说，多边形和其他形状并不适合在一起，而是重叠的。\u003c/p\u003e\n\u003cp\u003e例如，在这里我试着使用 \u003ccode\u003edraw\u003c/code\u003e 把一张图片分成两半（在白色上绘制黑色）。要做到这一点，我画了两个多边形，共享一个边缘，完全没有重叠。由此产生的\u0026quot;微小\u0026quot;图像，已被放大显示。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 10x10 xc: -draw \u003cspan class=\"s1\"\u003e\u0026#39;polygon 2,-1 7,10 10,10 10,-1\u0026#39;\u003c/span\u003e bound_left.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 10x10 xc: -draw \u003cspan class=\"s1\"\u003e\u0026#39;polygon 2,-1 7,10 -1,10 -1,-1\u0026#39;\u003c/span\u003e bound_right.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert bound_left.gif bound_right.gif -compose Plus -composite bound_add.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/bound_left_mag.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/img_www/plus.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/bound_right_mag.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/img_www/right.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/bound_add_mag.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e两个黑色的部分(这是实际绘制的)实际上是相互重叠的! 换句话说，尽管我们试图使用绘制的多边形分别绘制这两个区域，但填充的区域比要求的略大。\u003c/p\u003e\n\u003cp\u003e我还将两张图片加（\u003ca href=\"https://imagemagick.org/Usage/compose/#plus\"\u003e加合成\u003c/a\u003e）在一起，这样你就可以实际看到绘制的黑色区域的重叠。如果两个多边形是完美契合的，那么 \u0026ldquo;添加 \u0026ldquo;的图画将是纯白色的。\u003c/p\u003e\n\u003cp\u003e实际的重叠量相当于默认的 \u003ccode\u003e-strokewidth 1.0\u003c/code\u003e 设置。因此，通常情况下，这个额外的区域会被一个正常的笔画宽度所覆盖。然而它可能会造成一些实际问题。\u003c/p\u003e\n\u003cp\u003e旁白: 对于一个完整的连接测试，你会在黑色背景上生成50%的灰色区域，然后把它们加在一起。这样你就可以看到这些区域是否不仅 \u0026ldquo;重叠\u0026rdquo;（如上图所示），而且还可以测试当你把这些区域加在一起时，它们是否 \u0026ldquo;重叠不足\u0026rdquo;（在填充的区域之间留下一个间隙）。所得到的图像应该是一个完美平滑的50%灰色，沿连接处没有颜色变化。透明度检查会涉及到，在一个完全透明的背景上应该使用50%透明，50%灰色的颜色。\u003c/p\u003e\n\u003cp\u003e要查看一个完美的剪切和重新添加的例子，基于一个单一的蒙版图像，请参阅组成方法的例子，\u003ca href=\"https://imagemagick.org/Usage/compose/#dstout\"\u003e组成 DstOut\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e未来BUG修复：填充的区域应该是精确的，但为了在绘制形状时进行补偿，默认的 \u0026ldquo;描边颜色 \u0026ldquo;应该设置为填充颜色（除非它本身被特别设置）。\u003c/p\u003e\n\u003ch2 id=\"mvg---魔法矢量图形\"\u003eMVG - 魔法矢量图形\u003c/h2\u003e\n\u003cp\u003e上面显示的原语构成了所有 \u003ccode\u003e-draw\u003c/code\u003e 操作的基础。它们共同构成了 ImageMagick 中特殊内部语言的起点，称为 Magick Vector Graphics 语言。关于这种语言的更多细节，请参见IM网站上的 \u003ca href=\"http://www.imagemagick.org/script/magick-vector-graphics.php\"\u003eMVG 原语和语法摘要\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e这种 \u0026ldquo;MVG\u0026rdquo; 语言的设计目标是让 ImageMagick 处理更复杂的 SVG（可缩放矢量图形）语言。它通过尝试将给定 SVG 格式的图像转换为更简单的内部 MVG 格式来实现。更多细节请看下面的 \u003ca href=\"https://imagemagick.org/Usage/draw/#svg\"\u003eSVG 处理\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e因此，你上面看到的只是 \u003ccode\u003e-draw\u003c/code\u003e 操作符的一小部分功能。如果你想绘制复杂的对象，我建议你使用SVG编辑器（如 \u0026ldquo;Sodipodi\u0026rdquo;）为对象创建一个单独的SVG格式图像。参见下面的非IM矢量图形程序）。\u003c/p\u003e\n\u003cp\u003e与 SVG 不同，MVG 没有任何形式的\u0026quot;容器\u0026quot;或图像命令集。在转换过程中，这些命令都被删除，以产生一个简化的 MVG 绘图命令序列。相反，它使用\u003ca href=\"https://imagemagick.org/Usage/draw/#push_context\"\u003e图形上下文\u003c/a\u003e的概念来保存和恢复各种绘图设置，这就是我们现在要看的。\u003c/p\u003e\n\u003ch3 id=\"命令行设置与-mvg-设置\"\u003e命令行设置与 MVG 设置\u003c/h3\u003e\n\u003cp\u003e首先，您通过命令行选项设置的几乎所有设置，绘制原语使用的设置在 MVG 绘制命令中都有直接对应的内容。\u003c/p\u003e\n\u003cp\u003e通过命令行选项（如 \u003ccode\u003e-strokewidth\u003c/code\u003e）或使用 MVG 绘图字符串（如 \u003ccode\u003estrok-width\u003c/code\u003e）中的设置，两者之间的主要区别在于 MVG 设置只在 MVG 命令字符串的持续时间内有效。\u003c/p\u003e\n\u003cp\u003e一般绘图设置的总结:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e  __cmd_option__   __draw_MVG__        __Argument__\n    -fill            fill                color/tile for inside shapes\n    -tile            fill                image tile, replaces fill color\n\n    -stroke          stroke              line color/tile around the shapes\n    -strokewidth     stroke-width        pixel width\n    +antialias       stroke-antialias    0/1 aliasing line edges\n\n    -font            font                font_name / font_file\n    -family          font-family            ?\n    -weight            ?                    ?\n    -stretch           ?                    ?\n    -pointsize       font-size           height in points\n    -kerning           -                 extra inter-character spacing\n\n    +antialias       text-antialias      0/1 aliasing drawing text\n    -box             text-undercolor     fill color for font bounding box\n      -              decorate        (None, Underline, LineThrough or Overline)\n\n    -gravity         gravity             (None, North, South-East,...)\n    -fuzz              -                 color delta / percentage\n    -bordercolor       -                 color\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNotes:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e  - no such option      ? unknown\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这些设置通常很好理解，因为它们经常使用，上面也有演示。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e字体、拉伸、样式和重量用于从 ImageMagick 字体列表中识别字体。然而，大多数人只是选择一个特定的字体和大小点来代替使用。因此，它们在IM中很少使用。\n正如您所看到的，\u0026ldquo;color fill\u0026rdquo; 原语的特殊设置在 MVG 中并没有直接对应的设置。这就是 \u003ccode\u003e-bordercolor\u003c/code\u003e 和 \u003ccode\u003e-fuzz\u003c/code\u003e 因子设置。在使用 \u003ccode\u003e-draw\u003c/code\u003e 操作符之前，必须从命令行指定这些设置。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e有些 MVG 设置作为全局命令行设置可能更有用，比如字体绘制的 \u003ccode\u003edecorate\u003c/code\u003e 设置。\u003c/p\u003e\n\u003cp\u003e警告： \u003ccode\u003e[-gravity](https://imagemagick.org/Usage/option_link.cgi?gravity)\u003c/code\u003e 不是 SVG 规范的一部分。在 MVG 中，它只用于文本和图像的放置以及对齐。目前没有与默认的\u0026quot;引力\u0026quot;效果分开的调整设置。然而，由于调整是 SVG 文本处理的一部分，这可能会在未来的某个时候改变。\u003c/p\u003e\n\u003cp\u003e现在，全局命令行设置（在 MVG 绘制字符串之外）用于初始化你所应用的每个 \u003ccode\u003e-draw\u003c/code\u003e 操作的设置，这就是为什么你可以设置一个 \u003ccode\u003e-fill\u003c/code\u003e 颜色，然后你可以用它来绘制该颜色的圆。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue   -fill red \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;circle 50,30 40,10\u0026#34;\u003c/span\u003e          draw_circle_global.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_circle_global.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你可以在 MVG 参数 \u003ccode\u003e-draw\u003c/code\u003e 中本地覆盖全局设置\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue   -fill red \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill green   circle 50,30 40,10\u0026#34;\u003c/span\u003e  draw_circle_override.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_circle_override.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e然而，在单个 \u003ccode\u003e-draw\u003c/code\u003e MVG 参数中设置的设置只在 \u003ccode\u003e-draw\u003c/code\u003e 操作期间存在。也就是说， \u003ccode\u003e-draw\u003c/code\u003e 中的设置只限于该次绘制，而不会带入以后单独的 \u003ccode\u003e-draw\u003c/code\u003e 参数中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue   -fill red   -draw \u003cspan class=\"s1\"\u003e\u0026#39;fill green\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;circle 50,30 40,10\u0026#34;\u003c/span\u003e          draw_circle_local.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_circle_local.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你打算进行大量的操作，那么在单个 MVG 字符串中进行这些操作可能会比多个 \u003ccode\u003e-draw\u003c/code\u003e 操作更好。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue  \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill green  circle 41,39 44,57\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill blue   circle 59,39 56,57\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill red    circle 50,21 50,3  \u0026#34;\u003c/span\u003e  draw_circle_multi.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/draw_circle_multi.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch3 id=\"mvg-特定设置\"\u003eMVG 特定设置\u003c/h3\u003e\n\u003cp\u003e其他控制线条和对象绘制方式的 MVG 设置，即使在使用原语操作时也需要了解。这些设置包括\u0026hellip;\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e   __draw_MVG__       __Description/Argument__\n  fill-opacity        fill transparency, from 0.0 to 1.0\n  clip-rule           fill style for crossed lines (evenodd, nonzero)\n\n  stroke-opacity      line transparency, number from 0.0 to 1.0\n  stroke-dasharray    list of \u0026#39;on\u0026#39; and \u0026#39;off\u0026#39; lengths for lines\n  stroke-dash\n  stroke-linecap      End of line look: butt round square\n  stroke-linejoin     Lines joins:  butt  miter round square\n  stroke-miterlimit   Angle when \u0026#39;miter\u0026#39; joins become \u0026#39;bevel\u0026#39; (or \u0026#39;butt\u0026#39;)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e记住，所有 MVG 设置和绘图操作符的完整列表可以在 IM 网站的 \u003ca href=\"http://www.imagemagick.org/script/magick-vector-graphics.php\"\u003eMVG 原语和语法摘要\u003c/a\u003e中看到。\u003c/p\u003e\n\u003cp\u003e让我们看看一些简单设置的效果\u0026hellip;\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Stroke Opacity\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill none -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;                           path \u0026#39;M 10,10 L 90,10\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-opacity 0.8         path \u0026#39;M 10,20 L 90,20\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-opacity 0.6         path \u0026#39;M 10,30 L 90,30\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-opacity 0.4         path \u0026#39;M 10,40 L 90,40\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-opacity 0.2         path \u0026#39;M 10,50 L 90,50\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          set_stroke_opacity.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Fill Opacity\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;                    rectangle  5,10 15,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-opacity 0.8    rectangle 20,10 30,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-opacity 0.6    rectangle 35,10 45,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-opacity 0.4    rectangle 50,10 60,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-opacity 0.2    rectangle 65,10 75,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-opacity  0     rectangle 80,10 90,50 \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          set_fill_opacity.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Plain and Dashed Lines\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill none -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;                           path \u0026#39;M 10,10 L 90,10\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 5 3       path \u0026#39;M 10,20 L 90,20\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 5 5       path \u0026#39;M 10,30 L 90,30\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 10 3 3 3  path \u0026#39;M 10,40 L 90,40\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 1 6       path \u0026#39;M 10,50 L 90,50\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          set_lines.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;                           path \u0026#39;M 10,10 L 90,10\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 5 3       path \u0026#39;M 10,20 L 90,20\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 5 5       path \u0026#39;M 10,30 L 90,30\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 10 3 3 3  path \u0026#39;M 10,40 L 90,40\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-dasharray 1 6       path \u0026#39;M 10,50 L 90,50\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          set_lines_fill.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Note: Technically the second image should be the same as the first\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# as the \u0026#39;filled\u0026#39; lines contain no area.  This I regard as a BUG.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Stroke Ends and Joins\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black -strokewidth \u003cspan class=\"m\"\u003e8\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;                           path \u0026#39;M 20,20 L 20,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-linecap butt        path \u0026#39;M 40,20 L 40,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-linecap round       path \u0026#39;M 60,20 L 60,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-linecap square      path \u0026#39;M 80,20 L 80,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          set_endcaps.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black -strokewidth \u003cspan class=\"m\"\u003e5\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;                        path \u0026#39;M  5,70 L 20,20  35,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-linejoin miter   path \u0026#39;M 35,70 L 50,20  65,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-linejoin bevel   path \u0026#39;M 55,70 L 70,20  85,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-linejoin round   path \u0026#39;M 75,70 L 90,20 105,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          set_linejoin.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black -strokewidth \u003cspan class=\"m\"\u003e5\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;                        path \u0026#39;M  5,70 L 20,20  35,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-miterlimit 7     path \u0026#39;M 35,70 L 50,20  65,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke-miterlimit 6     path \u0026#39;M 65,70 L 80,20  95,70\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          set_miterlimit.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/set_stroke_opacity.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/set_fill_opacity.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/set_lines.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/set_lines_fill.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/set_endcaps.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/set_linejoin.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/set_miterlimit.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003estroke-miterlimit\u003c/code\u003e 的设置是相当难以演示的。这个属性定义了将 \u003ccode\u003emiter\u003c/code\u003e 连接变为 \u003ccode\u003ebevel\u003c/code\u003e 连接的角度。基本上对于非常尖锐的角度，一个斜面可以从两条线的实际接合处延伸很长的距离。这就为这个锐角设置了一个最大限度，当它变得太长时，就会使角点变钝。但请注意，它代表的是某种角度的三角值，而不是长度或距离。该值必须大于1.0。\u003c/p\u003e\n\u003cp\u003e上面显示了对于我所显示的连接角度，斜角会突然转换成一个介于6到7之间的斜角。\u003c/p\u003e\n\u003cp\u003e例如，1.414 的 \u003ccode\u003etroke-miterlimit\u003c/code\u003e 会将小于90度的任何角度的 \u0026ldquo;miter\u0026rdquo; 转换为 \u003ccode\u003ebevel\u003c/code\u003e 。4.0的 值（默认值）将小于约29度的角度转换为连接。而10.0的值可以将小于约11.5度的角度转换为斜面。\u003c/p\u003e\n\u003ch3 id=\"svg-s路径绘制\"\u003eSVG s路径绘制\u003c/h3\u003e\n\u003cp\u003eSVG 路径是 SVG 的基本绘图原语。它用于绘制线型、圆、曲线、弧线等。SVG 路径的完整规范可以在 \u003ca href=\"http://www.w3.org/TR/SVG/paths.html#PathDataGeneralInformation\"\u003eSVG 路径规范\u003c/a\u003e文档中找到。\u003c/p\u003e\n\u003cp\u003e然而这并不是一个容易阅读的文档，因为它确实是为程序员而不是用户准备的，所以我将简化和总结路径规范\u0026hellip;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e字母是命令，而所有的数字（浮点）都是参数\u003c/li\u003e\n\u003cli\u003e逗号或空格可以作为参数分隔符，否则完全忽略\u003c/li\u003e\n\u003cli\u003e每个路径组件的最后两个参数 \u003ccode\u003e(x,y)\u003c/code\u003e 将成为该路径组件的终点(或\u0026quot;结\u0026rdquo;)\u003c/li\u003e\n\u003cli\u003e大写字母是指最终点的绝对坐标\u003c/li\u003e\n\u003cli\u003e小写字母是相对于前一个组件的终点而言的\u003c/li\u003e\n\u003cli\u003e例如 \u0026ldquo;M 1,2 L 3,4 L 2,4\u0026rdquo; 和 \u0026ldquo;M 1,2 L 4,6 L 6,2\u0026rdquo; 是一样的。\u003c/li\u003e\n\u003cli\u003e即在1,2上加了3,4，画线到4,6。\u003c/li\u003e\n\u003cli\u003e然后在1,2上加2,4，画出一条线到最后的坐标6,2。\u003c/li\u003e\n\u003cli\u003e每个元素的参数可以重复，不需要重新发布相同的路径字母，可以多加数字参数组。不过对于曲线，为了方便阅读，我建议你还是加上函数字母。\u003c/li\u003e\n\u003cli\u003e重复的参数 \u0026ldquo;M\u0026rdquo; 或 \u0026ldquo;m\u0026rdquo; 分别作为 \u0026ldquo;L\u0026rdquo; 或 \u0026ldquo;l\u0026rdquo; 处理。\u003c/li\u003e\n\u003cli\u003e例如：\u0026rdquo; M 1,2 3,4 5,6 \u0026quot; 和 \u0026quot; M 1,2 L 3,4 L 5,6 \u0026quot; 是一样的。\u003c/li\u003e\n\u003cli\u003e而：\u0026ldquo;m 1,2 3,4 2,4 \u0026quot; 与 \u0026quot; m 1,2 l 3,4 l 2,4 \u0026quot; 相同。\u003c/li\u003e\n\u003cli\u003e对于立方贝塞尔，所有的点（控制点和结点）都是相对于前一个路径组件的端点而言的。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e请注意，您可以用绝对坐标或相对坐标来指定对象。因此，你可以用相对坐标来定义一个对象，只需提供一个初始的绝对\u0026quot;移动\u0026quot;坐标来定位整个路径。\u003c/p\u003e\n\u003cp\u003e另一方面，你也可以使用其他的\u0026quot;图形内容\u0026quot;命令来移动整个图形在\u0026quot;视图框\u0026quot;或\u0026quot;转换\u0026quot;中的位置（见下文）。因此，在 SVG 路径中使用绝对或相对坐标并不重要。\n移动、线条和路径闭合是学习 SVG 对象路径的最初起点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Open, Completed and Closed Paths (same points)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 40,10 L 20,50 90,10 70,40\u0026#39;\u0026#34;\u003c/span\u003e path_open.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 40,10 L 20,50 90,10 70,40 40,10\u0026#39;\u0026#34;\u003c/span\u003e path_complete.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 40,10 20,50 90,10 70,40 Z\u0026#39;\u0026#34;\u003c/span\u003e path_closed.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_open.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_complete.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_closed.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e但是请注意，\u0026lsquo;z\u0026rsquo; 只是关闭循环。它并没有创建一个单独的对象。因此，两个\u0026quot;关闭\u0026quot;的路径仍然被归类为一个单一的绘制对象，无论它们是重叠的还是完全断开的。\u003c/p\u003e\n\u003cp\u003e这里我们展示了两个闭合但重叠的循环，在同一方向上绘制。由于只使用了一条路径，所以对象是一个单一的对象，\u003ccode\u003efill-rule\u003c/code\u003e 设置控制了重叠区域的填充方式。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Overlapping Paths and Fill Rule\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-rule evenodd \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 40,10 20,20 70,50 Z\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                       M 20,40 70,40 90,10 Z\u0026#39; \u0026#34;\u003c/span\u003e path_evenodd.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-rule nonzero \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 40,10 20,20 70,50 Z\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                       M 20,40 70,40 90,10 Z\u0026#39; \u0026#34;\u003c/span\u003e path_nonzero.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_evenodd.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_nonzero.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e由于对象围绕中心以相同的角度方向绘制，两个闭合的循环将包含一个周期值为2的区域，因此 \u003ccode\u003eevenodd\u003c/code\u003e 规则使得该区域未被填充，而非零的 \u003ccode\u003enonzero\u003c/code\u003e 规则则将其填充。但是请注意，所有的路径都是可见的，因为它们实际上是同一个对象。\u003c/p\u003e\n\u003cp\u003e绘制路径的方向是非常重要的，一般情况下，所有的路径相对于对象的\u0026rsquo;内部\u0026rsquo;应该绘制在完全相同的方向上。\u003c/p\u003e\n\u003cp\u003e例如这里我将第二个对象画成与第一个对象相反的方向。因此，当两个对象重叠时，该区域被圈出 \u0026lsquo;0\u0026rsquo; 次。也就是说，无论使用什么 \u003ccode\u003efill-rule\u003c/code\u003e，它都将是未被填充的，形成一个\u0026rsquo;洞\u0026rsquo;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Overlapping Closed Objects, Second object drawn in reverse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-rule evenodd \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 40,10 20,20 70,50 Z\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                       M 20,40 90,10 70,40 Z\u0026#39; \u0026#34;\u003c/span\u003e path_rvs_evenodd.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill-rule nonzero \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 40,10 20,20 70,50 Z\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                       M 20,40 90,10 70,40 Z\u0026#39; \u0026#34;\u003c/span\u003e path_rvs_nonzero.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_rvs_nonzero.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_rvs_evenodd.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这意味着你可以在物体上产生一个\u0026quot;洞\u0026rdquo;，通过反转方向，使物体的\u0026quot;内部\u0026quot;保持在行进方向的同一侧。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# An object with a reversed drawn hole!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,10 20,55 70,50 80,5 Z\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                       M 50,20 60,40 40,30 Z\u0026#39; \u0026#34;\u003c/span\u003e path_with_hole.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_with_hole.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e无论 \u003ccode\u003efill-rule\u003c/code\u003e 的设置如何，结果都是一样的，因为这个洞是\u0026rsquo;偶数\u0026rsquo;和\u0026rsquo;零\u0026rsquo;，所以是未填充的。\u003c/p\u003e\n\u003cp\u003e当然，如果您使用一个完全独立的 \u003ccode\u003epath\u003c/code\u003e 元素，您将生成一个完全独立的对象。在这种情况下，\u003ccode\u003efill-rule\u003c/code\u003e 不适用，而只是按照给定的顺序，将对象画在彼此的上方。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Separate paths are separate objects\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 40,10 20,20 70,50 Z\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 20,40 70,40 90,10 Z\u0026#39; \u0026#34;\u003c/span\u003e path_separate.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_separate.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e未来：坐标对准路径 \u0026ldquo;H\u0026rdquo; 和 \u0026ldquo;V\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e椭圆弧是 SVG 路径的圆圈绘制功能\u0026hellip;\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003elarge\u003c/code\u003e 和 \u003ccode\u003esweep\u003c/code\u003e 参数特别重要，因为它们用于决定从起点到终点的四种弧线中的哪一种。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003elarge\u003c/code\u003e 和 \u003ccode\u003esweep\u003c/code\u003e 这两个标志定义了四条弧线中哪一条弧线将连接这两个点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e#  Elliptical Arcs :   A  radius_x,y  angle   large,sweep  x,y\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40  A 30,15 0 0,0 70,20\u0026#39;\u0026#34;\u003c/span\u003e    path_arc.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40  A 30,15 0 0,1 70,20\u0026#39;\u0026#34;\u003c/span\u003e    path_arc2.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40  A 30,15 0 1,0 70,20\u0026#39;\u0026#34;\u003c/span\u003e    path_arc3.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40  A 30,15 0 1,1 70,20\u0026#39;\u0026#34;\u003c/span\u003e    path_arc4.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc2.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc3.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc4.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e第二个标志 \u003ccode\u003esweep\u003c/code\u003e 简单地决定了弧线路径的方向的哪一边应该被绘制。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003elarge\u003c/code\u003e 标志是用来选择较长的路径，绕着椭圆的中心走。这是设置的角度的弧线将大于180度。如果关闭，你会得到较小的\u0026rsquo;弧\u0026rsquo;，不包含椭圆的中心，并且弧线的角度小于180度。\u003c/p\u003e\n\u003cp\u003e用 \u0026ldquo;Z\u0026rdquo; 来关闭弧线，只是画出最后的直线段。\u003c/p\u003e\n\u003cp\u003e要创建一个完整的椭圆或圆，你至少需要两个\u0026rsquo;弧线\u0026rsquo;段，从第一点到第二点，然后回到第一点。两条弧线都应该有相同的 \u003ccode\u003esweep\u003c/code\u003e 设置，所以弧线将在不同的边上，有不同的移动方向。其中一条弧线应该有 \u003ccode\u003elarge\u003c/code\u003e 的设置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Closed and angled elliptical arcs  (defined by two edge points)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40  A 30,20  20  0,0 70,20 Z \u0026#39;\u0026#34;\u003c/span\u003e path_arc5.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40  A 30,20  20  1,1 70,20 Z \u0026#39;\u0026#34;\u003c/span\u003e path_arc6.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40  A 30,20  20  0,0 70,20 \\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                A 30,20  20  1,0 30,40 Z \u0026#39;\u0026#34;\u003c/span\u003e path_arc7.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc5.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc6.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc7.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，如果直线太长，在给定的角度下无法适应给定的椭圆大小，椭圆的大小将被放大，以适应以椭圆为中心的直线，这意味着通过使用小数字作为轴半径，你可以只指定轴长的比例，并保证直线路径通过椭圆的中心点。\u003c/p\u003e\n\u003cp\u003e这意味着，通过使用小数字的轴半径，你可以只指定一个轴长的比例，并保证直线路径穿过椭圆的中心点。也就是说，路径从椭圆的一侧到另一侧形成一个椭圆直径。这并不是椭圆的主轴或次轴，只是一个椭圆的直径。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40   A 3,2  45  0,0 70,20\u0026#39;\u0026#34;\u003c/span\u003e path_arc_x.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc_x.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e当然，使用长度为 \u0026ldquo;1,1\u0026rdquo; 的结果是一个完美的半圆，从一个点，到下一个点。在这种情况下，椭圆角不会有任何区别。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40   A 1,1  0  0,0 70,20\u0026#39;\u0026#34;\u003c/span\u003e path_hcircle.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_hcircle.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e对于以两点为中心的全圆，用\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40   A 1,1  0  0,0 70,20\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                 A 1,1  0  1,0 30,40  Z\u0026#39;\u0026#34;\u003c/span\u003e path_circle.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_circle.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003eSVG 对 \u0026ldquo;弧线\u0026quot;的定义也声明，如果两个半径中的任何一个是0，那么就应该画一条直线。因此，任何半径为 \u0026ldquo;0,0\u0026rdquo; 的圆弧，都只是一条简单的直线圆弧\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40   A 0,0  0  0,0 70,20\u0026#39;\u0026#34;\u003c/span\u003e path_arc_line.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_arc_line.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你为弧线指定了一个非常大的半径，而没有为回程路径指定 \u003ccode\u003elarge sweep\u003c/code\u003e，你可以在两点之间创建该半径的透镜形状。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 30,40   A 50,50  0  0,0 70,20\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                 A 50,50  0  0,0 30,40  Z\u0026#39;\u0026#34;\u003c/span\u003e path_lens.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_lens.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这种类型的弧线是一个关键特征。它可以让你很容易地把原本是直线的东西变成一条小而明显的曲线。\u003c/p\u003e\n\u003cp\u003e例如，与其说是一个简单的三角形，不如说是一个\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 20,55  L 25,10  L 70,5 L 20,55 Z\u0026#39; \u0026#34;\u003c/span\u003e   triangle.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/triangle.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你可以用一个大半径的弧线代替每条线，让它们只是有轻微的曲线。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 20,55  A 100,100 0 0,0 25,10\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                A 100,100 0 0,0 70,5\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                A 100,100 0 0,0 20,55 Z\u0026#39; \u0026#34;\u003c/span\u003e triangle_curved.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/triangle_curved.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e线条的端点没有变化，所发生的只是每个 \u0026ldquo;L\u0026rdquo; 被一个弧线段代替。然而弧线的大小应该与线的长度成正比。由于我没有这样做，较长的对角线比其他两条线有更深的曲线。\u003c/p\u003e\n\u003cp\u003e请记住，当调整对象的大小或比例时，你也应该将半径的比例与线的长度相同，这样曲线的大小就会相应地调整，所以弧线的比例也会正确。\u003c/p\u003e\n\u003cp\u003e请注意，\u003ccode\u003esweep\u003c/code\u003e 标志可以控制曲线是向外凸起还是向内凸起，这取决于每个路径段的绘制方向(见上文)。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 20,55  A 100,100 0 0,0 25,10\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                A 100,100 0 0,1 70,5\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                A 100,100 0 0,1 20,55 Z\u0026#39; \u0026#34;\u003c/span\u003e triangle_bulge.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/triangle_bulge.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e看起来 \u0026ldquo;静态\u0026quot;的直边三角形，现在看起来有点像充满风的帆。\u003c/p\u003e\n\u003cp\u003e如果你真的想让线条完美的直，而不把它们转换回真正的线段，你可以通过使用弧线半径为零来关闭曲线。\u003c/p\u003e\n\u003cp\u003e因此，弧线不仅适合生成椭圆和圆，而且对于绘制直线和微曲线段也很有用。它是一种非常通用的通用点到点的绘制路径。\u003c/p\u003e\n\u003cp\u003e使用椭圆弧来生成分离的曲线段的一个简单的替代方法是使用\u003ca href=\"https://imagemagick.org/Usage/draw/#quad\"\u003e四元贝塞尔段\u003c/a\u003e来代替，主要的区别是使用一个单一的控制点，而不是一个圆形半径来定义弧线。这也允许您将弧线偏向线段的一端，但代价是难以生成对称的弧线。\u003c/p\u003e\n\u003cp\u003e当然，您也可以通过使用这两种方法来进行 \u003ccode\u003emix-n-match\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"饼图示例\"\u003e饼图示例\u003c/h3\u003e\n\u003cp\u003e为了完成对弧线的使用，让我们举个例子，使用为它们生成圆楔。当然，你可能需要使用一些外部的三角数学（你的高中数学有多好？）来确定所需的最终路径点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 140x130 xc:white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    -fill red   -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 60,70 L   60,20   A 50,50 0 0,1 68.7,20.8 Z\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    -fill green -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 60,70 L 68.7,20.8 A 50,50 0 0,1 77.1,23.0 Z\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    -fill blue  -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 68,65 L 85.1,18.0 A 50,50 0 0,1  118,65   Z\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    -fill gold  -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 60,70 L  110,70   A 50,50 0 1,1   60,20   Z\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    -fill black -stroke none  -pointsize \u003cspan class=\"m\"\u003e10\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    -draw \u003cspan class=\"s2\"\u003e\u0026#34;text 57,19 \u0026#39;10\u0026#39; text 70,20 \u0026#39;10\u0026#39; text 90,19 \u0026#39;70\u0026#39; text 113,78 \u0026#39;270\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    piechart.jpg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/piechart.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，所有的弧线都是画在 \u003ccode\u003eline path\u003c/code\u003e 的左边，并有相应的标志（使用 \u003ccode\u003esweep\u003c/code\u003e 标志）。但如果弧线覆盖的角度大于180度，则需要设置 \u003ccode\u003elarge\u003c/code\u003e 标志。见上面例子中最后一个 \u003ccode\u003egold\u003c/code\u003e 组件。\u003c/p\u003e\n\u003cp\u003e还要注意的是，你应该完整地画出每个部分，尽管这意味着你可能要画两次边界线。如果你不这样做，你很可能要么不会完全用颜色填充该部分，要么填充颜色会覆盖之前绘制的部分轮廓。\u003c/p\u003e\n\u003cp\u003e避免重复绘制多条线的唯一方法是绘制所有填充区域，然后重复这样绘制轮廓。就是说你需要把所有的东西都画两遍，确保东西正确匹配。因此，将轮廓加倍可能是最简单的解决方案。\u003c/p\u003e\n\u003cp\u003e立方贝塞尔曲线可以使用 \u003ccode\u003ec\u003c/code\u003e 函数定义两个控制点，以及最终的终点。对于使用最后一个控制点的镜像的持续立方贝塞尔曲线（对于连续曲线），你可以使用 \u003ccode\u003es\u003c/code\u003e 函数。\u003c/p\u003e\n\u003cp\u003e下面是一个例子。由于这个函数的复杂性，我预先准备了一个画布，显示控制点的位置，以及最后一个控制点的 \u003ccode\u003eassumed mirror\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Cubic Bezier:    C  control_1_x,y control_2_x,y  x,y\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Smooth \u0026#34; :       S  control_2_x,y  x,y\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert path_cubic_canvas.gif  -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 10,30  C 10,4 50,4 50,30  S 90,55 90,30\u0026#39; \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          path_cubic.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_cubic.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e连接控制点和该路径段路径上的最终点的线（控制线）基本上定义了通过路径上该点的曲线方向。长的控制线会在该点产生一条更平滑的曲线，而短的控制线则会在该点产生一条更清晰的曲线。如果控制点与曲线的点相吻合（控制线长度为零），则曲线在该点有一个尖锐的不连续性，就像只用直线段一样。\u003c/p\u003e\n\u003cp\u003e作为一个更实际的例子，下面的代码是从 \u003ca href=\"https://imagemagick.org/Usage/scripts/generate_logo\"\u003eIM 实例 Logo 生成器脚本\u003c/a\u003e中提取出来的，该脚本创建了 \u003ca href=\"https://imagemagick.org/Usage/images/logo.gif\"\u003eIM 实例 Logo\u003c/a\u003e 的曲线溅射区域。\u003c/p\u003e\n\u003cp\u003e这个例子的棘手之处在于，我将我使用的立方贝塞尔路径字符串，转换为另一个路径，显示用于生成贝塞尔曲线的控制线。这让我可以看到曲线的控制线角度和长度，使得调整结果变得更加容易。只需要调整一组点就可以同时显示曲线和控制线，将错误控制在最小范围内。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"nv\"\u003ecurve\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;M 12,27  C 7,37  18,50 18,60  S  0,80 10,94\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e          S 40,74 50,78  S 60,99 76,95  S 72,70 75,65\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e          S 95,55 95,42  S 69,37 66,32  S 67,2  53,7\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e          S 43,17 35,22  S 17,17 12,27  Z\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"nv\"\u003ec_ctrls\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$curve\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e              sed \u003cspan class=\"s1\"\u003e\u0026#39;1s/\\([0-9]\\)  *\\([0-9]\\)/\\1 M \\2/;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e                   s/S/M/g; s/C/ /;\u0026#39;\u003c/span\u003e -\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   convert -size 100x100 xc:white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke None  fill Green  path \u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$curve\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke Red   fill None   path \u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$c_ctrls\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e           curvy_splash.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/curvy_splash.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你仔细观察图像，你会发现曲线的起点和终点有两条方向相反的控制线。对于一个封闭的连续路径来说，开始和结束的控制线应该在相同的角度（只是在镜面方向），当然也应该是相同的长度。这一点很重要，因为很容易弄错。\u003c/p\u003e\n\u003cp\u003e沿着曲线的所有其他点只有一个控制点/线，它与曲线的绘制方向相反。该线段越长，曲线在该控制点处的 \u003ccode\u003esharp\u003c/code\u003e 越低，长度为零则产生一个 \u003ccode\u003epoint\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003es\u003c/code\u003e 函数在内部根据前一段的数据生成下一段的镜像控制点/线，从而产生曲线的平滑延续。\u003c/p\u003e\n\u003cp\u003e关于这个路径函数的更多例子，请看\u003ca href=\"http://www.w3.org/TR/SVG/paths.html#PathDataCubicBezierCommands\"\u003e《SVG：立方贝塞尔曲线命令》\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e手动生成贝塞尔曲线是比较直接的，不需要任何花哨的 GUI 工具。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e首先定义所有你想让曲线经过的坐标点，在列表的最后重复起始坐标。\u003c/li\u003e\n\u003cli\u003e现在将这个列表扩大，将所有的 \u003ccode\u003ex,y\u003c/code\u003e 坐标点加倍成对，并在每对坐标点前添加一个 \u003ccode\u003es\u003c/code\u003e（Smooth Cubic）函数。每对中的第一个数字是控制点，连接到第二个数字代表曲线上的点。然而第一个点对却把这一点反过来了，第一个点是曲线的起点，第二个点代表第一个也是唯一一个反转的控制点。\u003c/li\u003e\n\u003cli\u003e将第一对坐标的函数字母由 \u0026lsquo;S\u0026rsquo; 改为 \u0026lsquo;M\u0026rsquo;，然后在这对坐标之间加一个 \u0026lsquo;C\u0026rsquo;。最后将第二对坐标的 \u0026lsquo;S\u0026rsquo; 去掉，完成初始的立方体（\u0026lsquo;C\u0026rsquo;）函数。\u003c/li\u003e\n\u003cli\u003e通过添加最后的 \u0026lsquo;Z\u0026rsquo; 来完成路径，关闭曲线。\u003c/li\u003e\n\u003cli\u003e请看上面的示例序列，它应该是怎样的。\u003c/li\u003e\n\u003cli\u003e此时您可以测试绘制您的路径。由于所有的控制线长度为零，所以路径将只由直线段组成。\u003c/li\u003e\n\u003cli\u003e现在您需要做的就是慢慢地、小心地调整控制线段的位置（每个 \u0026ldquo;S\u0026rdquo; 对的第一个坐标），以得到您想要的最终曲线。不要把控制线做得太长，或者方向不对，否则你会得到一条看起来非常滑稽的曲线。\u003c/li\u003e\n\u003cli\u003e为了帮助查看你的变化和发现错误，请使用上面的转换 \u0026ldquo;sed\u0026rdquo; 命令来绘制路径控制点和曲线控制点之间的控制线。但是请注意，零长度的控制线是不可见的，但是由于lin会产生一个尖锐的点，所以位置应该很明显。\u003c/li\u003e\n\u003cli\u003e最后，确保 \u0026ldquo;C\u0026rdquo; 之后的第一条控制点/线与终点控制点/线的位置完全相反。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e交互式曲线的生成也可以通过使用一些矢量图形编辑器来实现。\u003c/p\u003e\n\u003cp\u003e例如 Luis Guerra 报告说，\u0026ldquo;Inkscape\u0026rdquo; 生成的贝塞尔曲线可以使用 \u0026ldquo;Edit -\u0026gt; XML Editor\u0026rdquo; 功能，然后选择你想要控制点的路径或形状。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e你知道有什么其他的方法可以用GUI工具来提取贝塞尔曲线（在曲线上每个点给出两个或一个控制点）。或者是一些其他的技术来生成这样的曲线？请发邮件给我! 我很乐意听到它。你将会像其他人一样，被记入该技术的名下。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e二次方贝塞尔函数是立方贝塞尔函数的简化，当两个控制点合并成一个控制点时。同样，你可以用 \u0026lsquo;Q\u0026rsquo; 函数开始曲线，然后用 \u0026lsquo;T\u0026rsquo; 函数继续曲线，镜像最后一个控制点。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e#  Quadratic Bezier:  Q  control_x,y  x,y\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e#  Smooth \u0026#34; :         T  x,y\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert path_quad_canvas.gif  -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 10,30   Q 20,4 50,30   T 90,30\u0026#39; \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          path_quad.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/path_quad.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e但我要提醒您，\u0026ldquo;T\u0026rdquo; 继续函数只适用于连接间距相等的点的路径。我不推荐使用它。\u003c/p\u003e\n\u003cp\u003e二次方曲线的优点是可以替代\u003ca href=\"https://imagemagick.org/Usage/draw/#arcs\"\u003e椭圆弧\u003c/a\u003e，因为它使用的是实际的位置，而不是弧线的半径。它也可以使弧线偏向于一端而不是另一端，这在使用\u003ca href=\"https://imagemagick.org/Usage/draw/#arcs\"\u003e椭圆弧\u003c/a\u003e时并不实用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 20,55  Q 30,32 25,10\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                Q 50,1 70,5\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                                Q 50,45 20,55 Z\u0026#39; \u0026#34;\u003c/span\u003e triangle_bulge_2.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/triangle_bulge_2.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e在这种情况下，弧线不是那么均匀，你得到的东西就像一个倒立的鲨鱼鳍，而不是一个帆。\u003c/p\u003e\n\u003cp\u003e请记住四边形弧线是抛物线，而椭圆弧线基本上是生成圆弧线段。这可能是决定你应该使用哪种类型的弧线段的关键。\u003c/p\u003e\n\u003cp\u003e有关此路径功能的更多例子，请参见：\u003ca href=\"http://www.w3.org/TR/SVG/paths.html#PathDataQuadraticBezierCommands\"\u003eSVG: Quadratic Bezier Curve Commands\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"绘图表面的变形\"\u003e绘图表面的变形\u003c/h3\u003e\n\u003cp\u003e在这些能力之上，绘制对象的绘图表面可以以各种方式变形，让你做一些令人惊奇的事情。\u003c/p\u003e\n\u003cp\u003e首先，你可以应用一些通用的绘图表面修改，比如\u0026hellip; \u0026ldquo;translate\u0026rdquo;、\u0026ldquo;rotate\u0026rdquo;、\u0026ldquo;scale\u0026rdquo;、\u0026ldquo;skewX\u0026rdquo;、\u0026ldquo;skewY\u0026rdquo; 和 \u0026ldquo;affine\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e例如，给定一个线条的 \u003ccode\u003epath\u003c/code\u003e，我们可以 \u003ccode\u003etranslate\u003c/code\u003e 绘图表面的原点或0,0点到另一个位置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;translate 50,30\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 3,3 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e  transform_translate.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/transform_translate.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，\u0026ldquo;0,0\u0026rdquo; 或绘图区域的原点现在以图像为中心，尽管Y轴在图像的顶部仍然是负数，在底部仍然是正数。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003erotate\u003c/code\u003e 操作将旋转绘图表面，所以以后在该表面上绘制的任何东西都将被旋转绘制。当然，它会围绕转换后的原点进行旋转，所以最好同时使用这两个变换运算符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;translate 50,30    rotate -30\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e  transform_rotate.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/transform_rotate.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003escale\u003c/code\u003e 将放大和缩小原点周围的绘图面。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;translate 50,30    scale 1.5,1.5\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e  transform_scale.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/transform_scale.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e一个常见的 \u003ccode\u003escale\u003c/code\u003e 用法是将Y轴翻转，使Y的正值向上。当然原点也应该移到中心，或者左下角，以保持秩序。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;translate 50,30    scale 1,-1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e    transform_flip.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/transform_flip.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e最后，\u0026ldquo;skewX\u0026rdquo; 和 \u0026ldquo;skewY\u0026rdquo; 在X和Y方向上对图像进行剪切。例如，这里我们使用 \u0026ldquo;skewX\u0026rdquo; 给图像的垂直Y轴一个倾斜。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;translate 50,30   skewX 20\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e    transform_skewY.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/transform_skewY.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这些操作符在 MVG \u003ccode\u003e-draw\u003c/code\u003e 字符串之外有对应的操作符，供一般使用。但是这些命令行版本是运算符，并且立即应用于内存中已经存在的图像，而不是应用于尚未绘制的矢量对象的绘制表面。更多细节请看扭曲图像。\u003c/p\u003e\n\u003ch3 id=\"绘制表面的平移变形\"\u003e绘制表面的平移变形\u003c/h3\u003e\n\u003cp\u003e上述所有五种画布变换都可以组合成一个通用的 Affine Matrix Operator，可以使用 MVG 原语 \u0026ldquo;affine\u0026rdquo;，也可以在调用 \u003ccode\u003e-draw\u003c/code\u003e 之前使用 \u003ccode\u003e-affine\u003c/code\u003e 设置 Affine 变换。\u003c/p\u003e\n\u003cp\u003eAffine 变换使用一组 \u0026ldquo;Matrix Coefficients\u0026rdquo;，它定义了如何将你给出的坐标修改为实际的绘图坐标。\u003c/p\u003e\n\u003cp\u003e关于这些 \u0026ldquo;coefficients\u0026rdquo; 如何工作的更多细节，请参阅 \u003ca href=\"https://imagemagick.org/Usage/distorts/affine/\"\u003eAffine Matrix Transforms\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e例如\u0026hellip; 要设置一个相对于对象绘制时的中心原点\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;affine 1,0,0,1,50,30\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e  affine_null.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/affine_null.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e翻转图像\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;affine 1,0,0,-1,50,30\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e affine_flip.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/affine_flip.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e绕原点旋转30度\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;affine .866,-.5,.5,.866,50,30\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill none  stroke red\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 0,10 0,-10  M 10,0 -10,0\u0026#39; \u0026#34;\u003c/span\u003e    affine_rot.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/affine_rot.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e对于更复杂的仿射变换，您可以使用为此目的创建的\u003ca href=\"https://imagemagick.org/Usage/distorts/affine/#affine_scripts\"\u003e仿射辅助脚本\u003c/a\u003e。这些脚本将诸如旋转角度和中心点之类的东西转换为 Affine 坐标，你可以直接在 \u003ccode\u003e-draw affine\u003c/code\u003e 或 \u003ccode\u003e-affine\u003c/code\u003e 设置中使用。\u003c/p\u003e\n\u003ch3 id=\"推弹上下文\"\u003e推/弹上下文\u003c/h3\u003e\n\u003cp\u003e一些 MVG 原语实际上依赖于这些变换的使用才能正确使用。例如，\u003ca href=\"https://imagemagick.org/Usage/draw/#primitive_circle\"\u003e椭圆原语\u003c/a\u003e只能用正交对齐的轴直接指定。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;ellipse 50,30 30,15 0,360\u0026#34;\u003c/span\u003e   ellipse_orthogonal.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/ellipse_orthogonal.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e然而，通过使用\u003ca href=\"https://imagemagick.org/Usage/draw/#transform\"\u003e绘图变换\u003c/a\u003e，我们可以很容易地给椭圆添加一个\u0026quot;旋转角\u0026rdquo;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue -fill white -stroke black \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;push graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 translate 50,30   rotate 30\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 fill white  stroke black\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 ellipse 0,0 30,15 0,360\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 pop graphic-context\u0026#34;\u003c/span\u003e       ellipse_rotated.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/ellipse_rotated.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，椭圆的 \u003ccode\u003ecenter\u003c/code\u003e(旋转点)在应用旋转之前首先被转换。然后，\u003ccode\u003eellipse\u003c/code\u003e 在 \u0026ldquo;0,0\u0026rdquo; 处的转换位置被绘制。\u003c/p\u003e\n\u003cp\u003e上面还显示了两个新的 MVG 绘图原语。\u0026lsquo;push graphic-context\u0026rsquo; 和 \u0026lsquo;pop graphic-context\u0026rsquo;。在上面的例子中，并不是严格意义上的需要，但在进行主要的绘图转换时，建议使用这两个原语。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003epush\u003c/code\u003e 和 \u003ccode\u003epop\u003c/code\u003e 原语的作用是保存当前的绘图状态或 \u0026ldquo;graphic-context\u0026rdquo;，然后再次恢复。在这两个原语之间更改的任何绘图设置都会被遗忘。这包括曲面变形（如 \u0026ldquo;平移 \u0026ldquo;和 \u0026ldquo;旋转\u0026rdquo;）、颜色设置 \u003ccode\u003efill\u003c/code\u003e 和 \u003ccode\u003estroke\u003c/code\u003e 或任何其他修改了绘图 \u003ccode\u003estate\u003c/code\u003e 的设置。\u003c/p\u003e\n\u003cp\u003e这些原语使您可以轻松地绘制具有许多变换的非常复杂的对象，然后将事物恢复到更 \u0026ldquo;正常\u0026quot;的状态，以便以后进行绘制操作。您可以在下面的\u003ca href=\"https://imagemagick.org/Usage/draw/#arrows\"\u003e绘制箭头\u003c/a\u003e中看到更实用的演示。\u003c/p\u003e\n\u003ch3 id=\"推弹特殊对象\"\u003e推/弹特殊对象\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/img_www/const_barrier.gif\" alt=\"img\"\u003e  建设中 \u003cimg src=\"https://imagemagick.org/Usage/img_www/const_hole.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e更多专门用于 MVG 处理 SVG 格式的设置。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e    font-family   font-stretch   font-style   font-weight\n    encoding \u0026#39;UTF-8\u0026#39;\n\n    push defs\n\n      push gradient \u0026#39;def_name\u0026#39; linear X1,Y1 X2,Y2\n        stop-color \u0026#39;color\u0026#39; where\n        stop-color \u0026#39;color\u0026#39; where\n          # where is a point between the two pixels given (0 = X1,Y1  1= X2,Y2)\n        gradient-units \u0026#39;objectBoundingBox|userSpaceOnUse\u0026#39;\n        affine ....\n      pop gradient\n\n      push gradient \u0026#39;def_name\u0026#39; radial CX,CY FX,FY R\n        # Here CX,CY is the center of the radial gradient of radius R\n        # the FX,FY is the focal, and is usually the same a CX,CY\n        # unless you are trying to warp the gradient in a specific direction\n        stop-color \u0026#39;color\u0026#39; where\n        ...\n      pop gradient\n\n    pop defs\n\n    push graphic-context\n      fill \u0026#39;url(#def_name)\u0026#39;\n      ... draw things here ...\n    pop graphic-context\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e例子见 Florent Monnier 的开发网站\u0026hellip;  \u003ca href=\"http://www.linux-nantes.fr.eu.org/~fmonnier/OCaml/MVG/\"\u003ehttp://www.linux-nantes.fr.eu.org/~fmonnier/OCaml/MVG/\u003c/a\u003e。\u003c/p\u003e\n\u003ch3 id=\"阅读-mvg-文件\"\u003e阅读 MVG 文件\u003c/h3\u003e\n\u003cp\u003e正如你在上面的例子中所看到的，MVG 的 \u003ccode\u003e-draw\u003c/code\u003e 参数可以变得很长。事实上，SVG 到 MVG 的转换可以产生一些非常长的 MVG 绘图参数（见下文）。\u003c/p\u003e\n\u003cp\u003e然而，IM 的一般命令行界面允许您通过使用 \u003ccode\u003e\u0026quot;@filename\u0026quot;\u003c/code\u003e 参数从文件中读取任何字符串参数。这很方便，因为这意味着你可以从一个单独的文件中读取非常长和复杂的MVG绘图命令。\u003c/p\u003e\n\u003cp\u003e例如，如果我将 MVG 操作放入一个名为 \u0026ldquo;draw_circles.mvg\u0026rdquo; 的文件中，那么我就可以像这样绘制\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:skyblue  -draw @mvg_circles.mvg  mvg_draw.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/mvg_circles.mvg.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/mvg_draw.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e不仅如此，ImageMagick 还懂得直接读取 \u0026ldquo;MVG:\u0026rdquo; 图像文件格式，让你可以更直接地绘制此类命令。然而，除非 MVG文 件定义了一个画布，否则你可能需要指定初始画布（ \u003ccode\u003e-size\u003c/code\u003e 和\u0026rdquo;-background\u0026rdquo;）来绘制。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60  -background limegreen  mvg_circles.mvg  mvg_file.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/mvg_circles.mvg.gif\" alt=\"img\"\u003e \u003cimg src=\"https://imagemagick.org/Usage/img_www/right.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/mvg_file.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你可以通过在 MVG 文件中添加一个 \u0026ldquo;viewbox\u0026rdquo;，并添加适当的背景色填充绘制，将初始画布设置移动到 MVG 图像中。这样就完成了 MVG 图像文件作为一个完整的图像定义。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert    mvg_circles2.mvg    mvg_image.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/mvg_circles2.mvg.gif\" alt=\"img\"\u003e \u003cimg src=\"https://imagemagick.org/Usage/img_www/right.gif\" alt=\"img\"\u003e \u003cimg src=\"https://imagemagick.org/Usage/draw/mvg_image.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e目前只有一种方法可以从 MVG 参数字符串中读取外部 MVG 文件，那就是使用 \u0026ldquo;图像 \u0026ldquo;绘图原语。遗憾的是，这将 MVG 的 include 转换为光栅图像，然后再将该图像覆盖到绘图表面。\n换句话说，目前还没有MVG的 \u0026ldquo;include\u0026quot;功能。 :-(\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/img_www/const_barrier.gif\" alt=\"img\"\u003e  建设中 \u003cimg src=\"https://imagemagick.org/Usage/img_www/const_hole.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e您可以生成IM的低级绘制操作，使用 `\u003ca href=\"https://imagemagick.org/Usage/option_link.cgi?render\"\u003e+render\u003c/a\u003e 来记录它们。\u003c/p\u003e\n\u003cp\u003e当你再给 \u003ccode\u003e-render\u003c/code\u003e 设置/操作时，IM将立即绘制这些保存的操作。\u003c/p\u003e\n\u003cp\u003e奇怪的是，仅仅输出到 \u0026ldquo;MVG\u0026rdquo; 文件似乎也能做到这一点\u0026hellip;\u0026hellip;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     convert  ...   -draw \u003cspan class=\"s1\"\u003e\u0026#39;....\u0026#39;\u003c/span\u003e  draw_commands.mvg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意：如果你在输出 MVG 格式文件时画了一条曲线，文件中会列出以下内容。曲线是一系列的短线段，而不是原始曲线。\u003c/p\u003e\n\u003cp\u003e当然您也可以完全使用更通用的 SVG 格式。参见下面的 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/draw/#svg\"\u003eSVG 格式处理\u003c/a\u003e\u0026quot;。\u003c/p\u003e\n\u003ch3 id=\"mvg-阿尔法构成\"\u003eMVG 阿尔法构成\u003c/h3\u003e\n\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/img_www/const_barrier.gif\" alt=\"img\"\u003e  建设中 \u003cimg src=\"https://imagemagick.org/Usage/img_www/const_hole.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e我没有看到任何使用 Alpha 构图的情况（除了 \u003ccode\u003epainters\u003c/code\u003e 的算法之外）。基本上是一种 \u0026ldquo;over\u0026rdquo; alpha 合成）来绘制对象。\u003c/p\u003e\n\u003cp\u003e然而，这并不是说不能这样做。\u003c/p\u003e\n\u003cp\u003e如果你喜欢将你的矩形、椭圆、圆形或其他物体用不同的阿尔法成分（如 \u0026ldquo;DstOver\u0026rdquo;，这是一个类似于 Under 的成分），然后在空白的透明画布上画出你的人物，同样的构图，并将其合成到您的图像上。\u003c/p\u003e\n\u003cp\u003e然而，由于 SVG 允许您使用 alpha 合成来绘制文本和其他的图像，因此，您可以使用 SVG 来绘制图像项目到图像上，我想这将是一个未来的补充。\u003c/p\u003e\n\u003cp\u003e敬请期待\u003c/p\u003e\n\u003ch3 id=\"绘制符号\"\u003e绘制符号\u003c/h3\u003e\n\u003cp\u003e有时你在图像上有一组点，你想在那里绘制参考符号，如十字、圆圈等。遗憾的是，目前IM还没有可以轻松绘制这类符号的命令，但只要稍加努力，你就可以绘制这类符号。\u003c/p\u003e\n\u003ch4 id=\"符号绘制技巧\"\u003e符号绘制技巧\u003c/h4\u003e\n\u003cp\u003e在给定的位置列表中绘制多个符号的诀窍是使用 shell 脚本或任何你正在使用的 API 生成 MVG 绘图命令，以便将给定的点集转化为适当的绘图命令集。\n例如，我在这里将一条线上的点转换为每一个点的\u0026quot;加号\u0026rdquo;\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Define a string of X and Y coordinates\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# comma between values, space between coordinates.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;6.6,7.7  25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3  92.5,66.6\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# convert each point into a draw command for a cross (using \u0026#39;awk\u0026#39;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# the \u0026#39;tr\u0026#39; converts spaces into \u0026#39;newlines\u0026#39; (one point per line).\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003ecrosses\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e tr -s \u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\\012\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e     awk -F, \u003cspan class=\"s1\"\u003e\u0026#39;{ print \u0026#34;line \u0026#34; $1-3 \u0026#34;,\u0026#34; $2 \u0026#34; \u0026#34; $1+3 \u0026#34;,\u0026#34; $2 ;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e                print \u0026#34;line \u0026#34; $1 \u0026#34;,\u0026#34; $2-3 \u0026#34; \u0026#34; $1 \u0026#34;,\u0026#34; $2+3 ; }\u0026#39;\u003c/span\u003e -\u003cspan class=\"sb\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# draw a red line between the points, and blue crosses on the points.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc:white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill none stroke red   polyline \u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill none stroke blue  \u003c/span\u003e\u003cspan class=\"nv\"\u003e$crosses\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          points_plus.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/points_plus.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e上面使用 \u0026ldquo;tr\u0026rdquo; 将每个点（两个数字）分成每条线上的一个点，然后使用 \u0026ldquo;awk\u0026rdquo; 进行所有数学计算，在给定的点上绘制\u0026quot;加号\u0026rdquo;。你可以使用任何你喜欢的东西，因为我只是在输入点列表上应用了一种文本宏扩展的形式。几乎所有的编程语言都可以做到这一点。对于上面的shell脚本案例，我只是发现 \u0026ldquo;awk\u0026rdquo; 是最简单、最快的手段。\u003c/p\u003e\n\u003cp\u003e其实你甚至可以使用 Imagemagick 本身的 \u0026ldquo;convert\u0026rdquo; 格式选项来进行这种 \u0026ldquo;macro\u0026rdquo; 的扩展\u0026hellip;比如这里我用它来计算圆周上的一个点，对于这个\u0026quot;点符号\u0026rdquo;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Define a string of X and Y coordinates\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# comma between values, space between coordinates.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;6.6,7.7  25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3  92.5,66.6\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# circle radius (or symbol size) to draw around each point.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003eradius\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e3.5\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# convert each point into a draw command for a cross\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# In this case, points are space separated by the shell\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003ecircles\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(for\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nv\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e cut -d, -f1\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nv\"\u003ey\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e cut -d, -f2\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"c1\"\u003e# use IM to do some floating point math, EG:  y2=$y+$radius\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nv\"\u003ey2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003econvert xc: -format \u003cspan class=\"s1\"\u003e\u0026#39;%[fx:\u0026#39;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;+\u0026#39;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$radius\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;]\u0026#39;\u003c/span\u003e info:\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;circle \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y2\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"k\"\u003edone)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Draw a red line between the points, and blue circles on the points.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc:white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill none stroke red   polyline \u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;fill none stroke blue  \u003c/span\u003e\u003cspan class=\"nv\"\u003e$circles\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          points_circle.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/points_circle.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e现在，您生成的绘制字符串可能会变得相当长，并且可能会开始导致您的最终命令的长度问题。所以，与其将点转换成长字符串，然后我们在命令行上传递给 IM，不如将绘制命令以文件的形式管道化给 IM。\u003c/p\u003e\n\u003cp\u003e我这次也使用了 \u003ca href=\"https://imagemagick.org/Usage/draw/#paths\"\u003eSVG 路径\u003c/a\u003e的绘制方法来代替 \u003ca href=\"https://imagemagick.org/Usage/draw/#primitives\"\u003eDraw Primitive\u003c/a\u003e 的绘制方法。另外我生成的符号是每个点周围的三角形。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Define a string of X and Y coordinates\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# comma between values, space between coordinates.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;6.6,7.7  25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3  92.5,66.6\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# convert each point into a draw commands to draw a triangle\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003efor\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e  m 0,-5 -4,+8 +8,0 -4,-8\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003edone\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e    convert -size 100x100 xc:white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill none -stroke red  -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill none -stroke blue -draw \u003cspan class=\"s1\"\u003e\u0026#39;@-\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          points_tri.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/points_tri.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://imagemagick.org/Usage/draw/#paths\"\u003eSVG 路径\u003c/a\u003e实际上使这一点变得更容易，通过允许相对像素移动，允许你设计符号，所以它只需要一个单一的初始绝对移动\u0026rsquo;M\u0026rsquo;，然后再给出\u0026rsquo;移动\u0026rsquo;和\u0026rsquo;线\u0026rsquo;的序列来绘制符号。正因为如此，你实际上根本不需要任何浮点计算，因为IM draw会完成所需的定位数学。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e相对移动SVG路径项\u0026rsquo;m\u0026rsquo;在IM v6.4.3-5之前被破坏了。如果你的IM比这更老，上面（和下一个）的例子可能什么也画不出来。您可以通过将上面的相对移动\u0026rsquo;m\u0026rsquo;替换为适当的相对线序列\u0026rsquo;l\u0026rsquo;来解决旧版本的问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e现在你可以更进一步，将一个完整的MVG文件，包括画布规格，直接作为一个绘画命令的流水线输入到IM中。这次让我们做一个\u0026rsquo;十字\u0026rsquo;，这和上面第一个\u0026rsquo;加\u0026rsquo;的例子类似，需要大量的计算。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Define a string of X and Y coordinates\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# comma between values, space between coordinates.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003epoints\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;6.6,7.7  25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3  92.5,66.6\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"c1\"\u003e# Generate a MVG file for IM to draw all components\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e(\u003c/span\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;viewbox 0 0 100 100   fill white  rectangle 0,0 100 100\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;fill none stroke red   path \u0026#39;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;fill none stroke blue  path \u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e point in \u003cspan class=\"nv\"\u003e$points\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"k\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;  M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$point\u003c/span\u003e\u003cspan class=\"s2\"\u003e  m -2,-2 +4,+4  m -4,0 +4,-4\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e convert mvg:- points_cross.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/points_cross.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这使用了特殊的shell编程技术，在shell括号中 \u0026ldquo;echo\u0026rdquo; 的任何东西都将作为MVG文件被输入到最终的\u0026quot;转换\u0026quot;命令中。第一个 \u0026ldquo;echo\u0026rdquo; 定义并填充图像的绘图画布，而 \u0026ldquo;while\u0026rdquo; 循环则将每个 \u0026ldquo;点\u0026rdquo; 转换为一个给定半径的圆。\u003c/p\u003e\n\u003cp\u003e这种方法的优点是，你不会受到任何字符串的限制，而使用其他两种方法可能会受到限制。\u003c/p\u003e\n\u003cp\u003e其他你可以生成的符号包括方框、钻石、错误条等。\u003c/p\u003e\n\u003cp\u003e也请参见下面的\u0026quot;绘制圆圈\u0026rdquo;，了解其他圆圈方法，包括不计算相对 \u0026ldquo;路径\u0026quot;的圆圈绘制。\u003c/p\u003e\n\u003ch4 id=\"绘制符号的替代方法\"\u003e绘制符号的替代方法\u003c/h4\u003e\n\u003cp\u003e除了直接绘制符号外，还有其他的方法可以将符号添加到图像中。\u003c/p\u003e\n\u003ch5 id=\"符号字体\"\u003e符号字体\u003c/h5\u003e\n\u003cp\u003e您可以从 \u003ca href=\"https://imagemagick.org/Usage/text/#symbol\"\u003eSymbol Font\u003c/a\u003e 中提取符号，并将其保存为一个小位图。你也可以使用小的预定义但色彩丰富的图像来做这件事。\u003c/p\u003e\n\u003cp\u003e然而这样做可能会出现问题，无法准确定位字体相对于特定像素的位置。也就是说这不是一个非常精确的技术。但是你可以在任何像素位置组成任何图像。例如这些符号是从一些字体中提取出来的，用于这些示例页面的具体使用。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026lt;=   =\u0026gt;   x   +   +   +   o   o   o   o\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e在\u003ca href=\"https://imagemagick.org/Usage/layers/#composite\"\u003e分层图像\u003c/a\u003e一节中给出了将图像合成到大背景上的例子。然而，循环的方法可能更有用，例如在\u003ca href=\"https://imagemagick.org/Usage/layers/#layer_prog\"\u003e分层图像\u003c/a\u003e的程序化定位中给出了。\u003c/p\u003e\n\u003cp\u003e未来：使用坐标对图像进行分层的例子\u003c/p\u003e\n\u003ch4 id=\"形态学\"\u003e形态学\u003c/h4\u003e\n\u003cp\u003e另一种选择是使用\u003ca href=\"https://imagemagick.org/Usage/morphology/#intro\"\u003e形态学\u003c/a\u003e，使用特殊的\u0026quot;形状\u0026quot;内核，如 \u0026ldquo;磁盘\u0026rdquo;、\u0026ldquo;环形 \u0026ldquo;和 \u0026ldquo;加\u0026rdquo;，甚至是你自己的用户定义内核，来 \u0026ldquo;稀释\u0026quot;单个像素。\u003c/p\u003e\n\u003cp\u003e例如\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 80x80 xc:black -fill white \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;point 20,15 point 55,30 point 40,60\u0026#39;\u003c/span\u003e  points_pixels.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert points_pixels.gif -morphology Dilate Ring    points_rings.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert points_pixels.gif -morphology Dilate Plus:4  points_pluses.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert points_pixels.gif -morphology Dilate Cross:3 points_crosses.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/points_pixels.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/img_www/right.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/points_rings.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/points_pluses.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/points_crosses.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e然后可以通过使用 \u003ca href=\"https://imagemagick.org/Usage/masking/#alpha_shape\"\u003eAlpha Shape Operator\u003c/a\u003e 将结果直接转换为彩色叠加。\u003c/p\u003e\n\u003cp\u003e这样做的最大好处是，你其实不需要知道每个符号的单独位置。或者有多少个符号。但这也可能是一个缺点。一个主要的缺点是，位置只在整数位置。你不能使用浮点 \u0026ldquo;子像素\u0026quot;定位来\u0026quot;绘制\u0026rdquo;。\u003c/p\u003e\n\u003ch4 id=\"卷积\"\u003e卷积\u003c/h4\u003e\n\u003cp\u003e一个几乎相同的技术是使用 \u003ca href=\"https://imagemagick.org/Usage/convolve/#convolve\"\u003eConvolve\u003c/a\u003e，使用专门设计的内核，它允许你设置不同的灰度，而不仅仅是一个简单的开/关结果，如上所述。\u003c/p\u003e\n\u003cp\u003e通过使用不同的\u003ca href=\"https://imagemagick.org/Usage/morphology/#user\"\u003e用户定义内核\u003c/a\u003e，为图像的每一个通道（红、绿、蓝和阿尔法），甚至可以从每个像素坐标创建多色符号。\u003c/p\u003e\n\u003cp\u003e为此，我使用了一个我写的特殊脚本 \u003ca href=\"https://imagemagick.org/Usage/scripts/image2kernel\"\u003eimage2kernel\u003c/a\u003e 来将彩色图像（见右图）转换为每个通道的独立浮点卷积核。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  image2kernel -q marker.png marker.dat\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/marker.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这将生成四个文件，比如 \u003ca href=\"https://imagemagick.org/Usage/draw/marker_R.dat\"\u003emarker_R.dat\u003c/a\u003e，每个通道都有一个非常小的输入图像，这是\u003ca href=\"https://imagemagick.org/Usage/morphology/#user\"\u003e用户定义\u003c/a\u003e的图像表示（原点在图像中心）。\u003c/p\u003e\n\u003cp\u003e现在使用这些内核数据文件，我们可以将这些单点在透明的背景上 \u003ca href=\"https://imagemagick.org/Usage/convolve/#convolve\"\u003eConvolve\u003c/a\u003e 成我们彩色的标记图像。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert points_pixels.gif -alpha off \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          \u003cspan class=\"se\"\u003e\\(\u003c/span\u003e -clone \u003cspan class=\"m\"\u003e0\u003c/span\u003e -morphology Convolve @marker_R.dat \u003cspan class=\"se\"\u003e\\)\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          \u003cspan class=\"se\"\u003e\\(\u003c/span\u003e -clone \u003cspan class=\"m\"\u003e0\u003c/span\u003e -morphology Convolve @marker_G.dat \u003cspan class=\"se\"\u003e\\)\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          \u003cspan class=\"se\"\u003e\\(\u003c/span\u003e -clone \u003cspan class=\"m\"\u003e0\u003c/span\u003e -morphology Convolve @marker_B.dat \u003cspan class=\"se\"\u003e\\)\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          \u003cspan class=\"se\"\u003e\\(\u003c/span\u003e -clone \u003cspan class=\"m\"\u003e0\u003c/span\u003e -morphology Convolve @marker_A.dat \u003cspan class=\"se\"\u003e\\)\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -delete \u003cspan class=\"m\"\u003e0\u003c/span\u003e -channel RGBA -combine point_markers.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/points_pixels.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/img_www/right.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/point_markers.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在IM v6.7.6-9之前，Combine Operator 要求图像的透明度通道以 \u0026ldquo;哑光\u0026quot;值而不是alpha值的形式给出，因此，由此产生的alpha通道需要被否定。EG:\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  ... \u003cspan class=\"s2\"\u003e\u0026#34;`cat marker_A.dat`\u0026#34;\u003c/span\u003e -negate \u003cspan class=\"se\"\u003e\\)\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e只能使用小图像，像素点要足够分散，符号不要重叠。这是因为 \u003ca href=\"https://imagemagick.org/Usage/convolve/#convolve\"\u003eConvolve\u003c/a\u003e 会将重叠的区域加在一起，使其比预期的更亮。\u003c/p\u003e\n\u003cp\u003e以上内容已被转换成UNIX shell脚本 \u003ca href=\"https://imagemagick.org/Usage/scripts/convolve_image\"\u003econvolve_image\u003c/a\u003e，以方便使用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convolve_image  points_pixels.gif marker.png   point_markers.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个技术源于IM论坛上的一个讨论-\u003ca href=\"https://imagemagick.org/Usage/forum_link.cgi?t=17259\u0026amp;p=64696\"\u003eIM 的有趣体验\u003c/a\u003e。用户希望在足球场的背景图上放置小人，让他们的位置在图片中拼出一个人的名字。\u003c/p\u003e\n\u003ch4 id=\"分层\"\u003e分层\u003c/h4\u003e\n\u003cp\u003e一种不同的技术，如\u003ca href=\"https://imagemagick.org/Usage/layers/\"\u003e图像层\u003c/a\u003e，使用你从源图像中提取的像素列表进行定位，可能是更好的方法。你可以先叠加更远的符号图像，然后再叠加前景图像，你可以通过编程选择或随机选择什么符号替换什么点。\u003c/p\u003e\n\u003cp\u003e关于这个例子，请看\u003ca href=\"https://imagemagick.org/Usage/layers/#layer_pins\"\u003e地图中的图钉\u003c/a\u003e。\u003c/p\u003e\n\u003ch4 id=\"绘制圆圈\"\u003e绘制圆圈\u003c/h4\u003e\n\u003cp\u003e绘制选项为您提供了许多方法来完成一些非常基本的工作。绘制圆。\u003c/p\u003e\n\u003cp\u003e例如，您可以在圆周上的任何一点上画一个圆，因此您需要计算一个中心点和一个半径为25像素的第二点。因此，您需要计算一个中心点和第二个点，这个点的半径（例如25像素）离第一个点的距离。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke Firebrick  -fill tomato  -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;circle 50,30 50,55\u0026#39;\u003c/span\u003e    circle_circle.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_circle.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://www.fmwconcepts.com/fmw/fmw.html\"\u003eFred Weinhaus\u003c/a\u003e 指出，通过使用平移，你可以消除计算圆边坐标的需要，而直接给出半径即可。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke SeaGreen  -fill PaleGreen  -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;translate 50,30 circle 0,0 25,0\u0026#39;\u003c/span\u003e    circle_circle_trans.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_circle_trans.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e但是当绘制多个圆时，上述操作需要对每个圆进行单独的 \u003ccode\u003e-draw\u003c/code\u003e 操作，或者使用 \u003ca href=\"https://imagemagick.org/Usage/draw/#push_context\"\u003eContext Pushing\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e使用椭圆可以直接指定半径为轴长\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke Sienna  -fill Wheat  -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;ellipse 50,30 25,25 0,360\u0026#39;\u003c/span\u003e    circle_ellipse.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_ellipse.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你也可以用 \u003ccode\u003estroke-lineecap round\u003c/code\u003e 画一条非常非常短的线来生成一个圆。描边的宽度可以设置圆的直径。注意线条必须有一定的长度（无论多小），否则画不出任何东西。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke Blue  -strokewidth \u003cspan class=\"m\"\u003e50\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;stroke-linecap round line 50,30 50,30.0001\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          circle_line.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_line.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e这种技术，不幸的是不能勾勒出生成的圆，但对于覆盖大面积的区域，大笔触宽度是有用的。请看下面一些简单的例子。\u003c/p\u003e\n\u003cp\u003e这种方法利用了 \u003ca href=\"https://imagemagick.org/Usage/draw/#paths\"\u003eSVG 路径\u003c/a\u003e的绘制方法，所以可以在不需要计算任何额外坐标的情况下绘制圆形。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke Blue  -fill DodgerBlue  -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 50,30  m 0,25  a 1,1 0 0,0 0,-50  a 1,1 0 1,0 0,50\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          circle_path.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_path.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e只有最初的绝对移动 \u0026lsquo;M\u0026rsquo; 是用来定义中心的，接下来的路径组件中的 \u0026lsquo;25\u0026rsquo; 和 \u0026lsquo;50\u0026rsquo; 是定义相对于这个中心的圆的半径和直径。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e在IM v6.4.3-5之前，相对移动SVG路径项 \u0026rsquo;m\u0026rsquo; 是被破坏的。 如果您的IM比这更早，圆可能只显示为一个像素。您可以通过将上面的 \u0026rsquo;m\u0026rsquo; 替换为 \u0026rsquo;l\u0026rsquo; 来修复旧版本的问题。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ca href=\"http://www.fmwconcepts.com/fmw/fmw.html\"\u003eFred Weinhaus\u003c/a\u003e 添加了以下贝塞尔圆的方法。它非常接近真实的圆（虽然不精确），并且需要进行浮点计算。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e25\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nv\"\u003ecx\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e50\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nv\"\u003ecy\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e30\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003ex1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e25\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"nv\"\u003ex2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e75\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# = cx ± radius\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003ey1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e-3.25\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nv\"\u003ey2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e63.25\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# = cy ± radius*1.275\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke Purple  -fill Violet  -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;bezier \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x1\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cy\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x1\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y1\u003c/span\u003e\u003cspan class=\"s2\"\u003e  \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x2\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y1\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x2\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cy\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;bezier \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x1\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cy\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x1\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y2\u003c/span\u003e\u003cspan class=\"s2\"\u003e  \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x2\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y2\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x2\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cy\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          circle_bezier.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_bezier.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果画一个精确的圆并不重要，你可以使用这个4 Bezier段 SVG 路径，它只使用圆的X和Y边界进行计算。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003er\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e25\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nv\"\u003ecx\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e50\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nv\"\u003ecy\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e30\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003ex1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e25\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"nv\"\u003ex2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e75\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# X bounds = cx ± radius\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003ey1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e5\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"nv\"\u003ey2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e55\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# Y bounds = cy ± radius\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke Tomato  -fill Gold  -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e     -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M \u003c/span\u003e\u003cspan class=\"nv\"\u003e$cx\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y1\u003c/span\u003e\u003cspan class=\"s2\"\u003e Q \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x1\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y1\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x1\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cy\u003c/span\u003e\u003cspan class=\"s2\"\u003e T \u003c/span\u003e\u003cspan class=\"nv\"\u003e$cx\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y2\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x2\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$cy\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$cx\u003c/span\u003e\u003cspan class=\"s2\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y1\u003c/span\u003e\u003cspan class=\"s2\"\u003e z\u0026#39;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e     circle_bezier_path.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_bezier_path.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你喜欢一个完全相对于中心起点绘制的，你可以使用这种技术。只使用半径值，使其生成简单，只使用 API 中的字符串函数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc:  -stroke Orange  -fill LemonChiffon  -strokewidth \u003cspan class=\"m\"\u003e2\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e     -draw \u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 50,30  m 0,25  q 25,0 25,-25  t -25,-25  -25,25  25,25 z\u0026#39;\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e     circle_bezier_path_rel.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/circle_bezier_path_rel.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你能想到其他画圆的方法吗？\u003c/p\u003e\n\u003ch3 id=\"绘制箭头-定位旋转和缩放符号\"\u003e绘制箭头-定位、旋转和缩放符号\u003c/h3\u003e\n\u003cp\u003e使用上述技术，你可以创建一个特殊的符号，如箭头，你可以定位，使其点在线的最末端，并画在它上面。如果你画的箭头后的线（典型的情况），那么箭头将被绘制在该行的顶部。\u003c/p\u003e\n\u003cp\u003e然而，他们有三种类型的箭头，可以定义，每个类型的定义在不同的方式取决于它的使用。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e测量时，你只是想用箭头头标记线的两端，以指示一些工程图中的测量极限。非常简单。\u003c/li\u003e\n\u003cli\u003e矢量，显示一些数值的方向和强度。例如在天气风图中。需要一个尾巴，0,0点就是尾巴的末端。通常情况下，这样的向量会形成一个大网格。\u003c/li\u003e\n\u003cli\u003e指标，指出一些细节。对于这个0,0点可能应该是箭尖，或者是箭头本身前面的一些距离。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"测量箭头\"\u003e测量箭头\u003c/h4\u003e\n\u003cp\u003e简单地在一条线的末端添加一个箭头是比较容易做到的。基本上，您可以创建一个 \u0026lsquo;arrow head\u0026rsquo; \u003ca href=\"https://imagemagick.org/Usage/draw/#symbols\"\u003e符号\u003c/a\u003e，并将其画在正确的位置。\u003c/p\u003e\n\u003cp\u003e例如\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003earrow_head\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;l -15,-5  +5,+5  -5,+5  +15,-5 z\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc: -draw \u003cspan class=\"s1\"\u003e\u0026#39;line 10,30 80,30\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke blue fill skyblue\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 80,30  \u003c/span\u003e\u003cspan class=\"nv\"\u003e$arrow_head\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39; \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          arrow_horizontal.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/arrow_horizontal.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，我画的符号，使其起点是线的最末端。这样一来，它就可以在之前画好的线上面向后画，形成一个非常漂亮的整齐的符号。\u003c/p\u003e\n\u003cp\u003e箭头却有一个相关的方向。你可以在许多不同的角度创建大量的箭头定义，许多程序都这样做。但是既然箭头是一个矢量，那么为什么不把箭头作为一个矢量进行旋转呢。IM绘图命令内置了绘图旋转（\u003ca href=\"https://imagemagick.org/Usage/draw/#transform\"\u003eCanvas Warping\u003c/a\u003e），所以让我们使用它们。\u003c/p\u003e\n\u003cp\u003e这样做还有一个好处，就是把位置从箭头头的 \u003ccode\u003epath\u003c/code\u003e 定义中移出来，让你把整个路径指定为 \u003ccode\u003econstant\u003c/code\u003e\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003earrow_head\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 0,0  l -15,-5  +5,+5  -5,+5  +15,-5 z\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc: -draw \u003cspan class=\"s1\"\u003e\u0026#39;line 25,55 70,10\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke blue fill skyblue\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 translate 70,10 rotate -45\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 \u003c/span\u003e\u003cspan class=\"nv\"\u003e$arrow_head\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          arrow_rotate.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/arrow_rotate.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e如果你喜欢改变箭头的大小，可以在旋转后增加一个 \u003ccode\u003escale\u003c/code\u003e 绘制选项。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003earrow_head\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 0,0  l -15,-5  +5,+5  -5,+5  +15,-5 z\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc: -draw \u003cspan class=\"s1\"\u003e\u0026#39;line 25,55 70,10\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke blue fill skyblue\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 translate 70,10 rotate -45 scale 2,2\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 \u003c/span\u003e\u003cspan class=\"nv\"\u003e$arrow_head\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          arrow_scale.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/arrow_scale.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，它是如何放大离开箭头的\u0026quot;尖端\u0026rdquo;，你指定的地方。这是处理箭头的一个非常重要的方面，因为它是唯一的终点，和角度的线，你正在添加箭头的事项。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etransforms\u003c/code\u003e 的顺序是很重要的，而且实际上与它们实际被处理的顺序是相反的。也就是先将比例尺应用于座标，然后是旋转，再是平移。如果座标变换不是按照这个顺序进行的，我们最终也会对箭头的最终位置进行缩放，而不是我们期望的位置。\u003c/p\u003e\n\u003cp\u003e另外由于比例尺有两个数字，而原来的箭头头符号是水平设计的（角度为零），所以可以分别将箭头的宽度与高度进行比例。同时注意笔画宽度也随着箭头的大小而缩放，保持一致。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003earrow_head\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 0,0  l -15,-5  +5,+5  -5,+5  +15,-5 z\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc: -draw \u003cspan class=\"s1\"\u003e\u0026#39;line 25,55 70,10\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke blue fill skyblue\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 translate 70,10 rotate -45 scale 2,1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 \u003c/span\u003e\u003cspan class=\"nv\"\u003e$arrow_head\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          arrow_scale_aspect.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/arrow_scale_aspect.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e现在，当你在画布上翘起一个个箭头时，也许还有许多其他的绘画操作，你可能喜欢在一次 \u003ccode\u003e[\u0026quot;-draw\u0026quot;](https://imagemagick.org/Usage/option_link.cgi?draw)\u003c/code\u003e 操作中把它们全部画完。说要画线，然后在两端添加箭头，需要不同的颜色、位置、旋转，甚至可能是不同的比例。这意味着我们需要将画布翘曲的范围限制在每个单独箭头头的绘制上。如果你不限制范围，你可能会在以后开始影响到其他后面的绘制操作，永远不能很确定你生成的是什么。\u003c/p\u003e\n\u003cp\u003e为了限制翘曲的范围（以及所有其他的绘图属性），您将涉及到的部分包裹在一个 \u003ccode\u003egraphic-context\u003c/code\u003e\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003earrow_head\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 0,0  l -15,-5  +5,+5  -5,+5  +15,-5 z\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x60 xc: \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke black fill none\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 path \u0026#39;M 10,40 A 50,50 0 0,1 90,40\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 push graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   stroke blue fill skyblue\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   translate 10,40 rotate 135\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   \u003c/span\u003e\u003cspan class=\"nv\"\u003e$arrow_head\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 pop graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 push graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   stroke firebrick fill tomato\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   translate 90,40 rotate 45\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   \u003c/span\u003e\u003cspan class=\"nv\"\u003e$arrow_head\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 pop graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          arrow_context.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/arrow_context.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003epush\u003c/code\u003e 主要是将当前所有的绘图属性保存起来，以备将来使用，而 \u003ccode\u003epop\u003c/code\u003e 则恢复这些属性，用之前保存的设置替换任何设置（颜色、扭曲、位置等）。这意味着在 \u0026lsquo;popping\u0026rsquo; 之后，\u0026lsquo;canvas warp\u0026rsquo; 会被取消，画图会回到修改之前的状态。\u003c/p\u003e\n\u003cp\u003e上述技术只是生成箭头的一种方法，在绘制箭头作为测量距离的一部分时，如在技术图纸中，是一种很好的方法。\u003c/p\u003e\n\u003ch4 id=\"矢量箭头\"\u003e矢量箭头\u003c/h4\u003e\n\u003cp\u003e如前所述，矢量既显示方向，又显示某个数值的强度。这意味着箭头的长度是可变的，箭头头可以在任何位置远离向量的起点。\u003c/p\u003e\n\u003cp\u003e现在，你可以做一些沉重的数学计算的位置，箭头头应该是地方给定的向量的长度和角度，但他们是一个更好的方法，这让 ImageMagick 为你做这些计算。\u003c/p\u003e\n\u003cp\u003e解决的办法是在 \u003ca href=\"https://imagemagick.org/Usage/draw/#transform\"\u003eWarped Canvas Space\u003c/a\u003e 中画一条长度合适的水平线作为向量长度。当这条线画好后，只需将绘图空间再次转换到线的末端，而画布仍然是\u0026quot;扭曲的\u0026rdquo;(\u003ccode\u003ewarped\u003c/code\u003e)。现在你的位置已经正确了，只要正确的旋转就可以像正常的那样画出矢量的 \u003ccode\u003e'arrow head'\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e例如，这里我以-35度角生成一个70像素长的矢量。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003evector_head\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 0,0  l -15,-5  +5,+5  -5,+5  +15,-5 z\u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003eindicator\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;path \u0026#39;M 10,0  l +15,+5  -5,-5  +5,-5  -15,+5  m +10,0 +20,0 \u0026#39;\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc: \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;stroke black fill none  circle 20,50 23,50\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 push graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   stroke blue fill skyblue\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   translate 20,50 rotate -35\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   line 0,0  70,0\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   translate 70,0\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   \u003c/span\u003e\u003cspan class=\"nv\"\u003e$vector_head\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 pop graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 push graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   stroke firebrick fill tomato\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   translate 20,50 rotate 40\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   \u003c/span\u003e\u003cspan class=\"nv\"\u003e$indicator\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   translate 40,0 rotate -40\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   stroke none fill firebrick\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                   text 3,6 \u0026#39;Center\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                 pop graphic-context\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s2\"\u003e                \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          arrow_with_tails.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/arrow_with_tails.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch4 id=\"指示箭头\"\u003e指示箭头\u003c/h4\u003e\n\u003cp\u003e在上面我还演示了一个指示箭头，指向之前矢量箭头的起点。\u003c/p\u003e\n\u003cp\u003e然而我没有像之前那样画箭头，而是将它创建为一个反向的箭头符号，它的起始点距离原点（或起始点）10像素。这是一个符号位于我想要指示的位置，所以我实际上并不希望箭头直接在那个位置上面，而是离它稍微远一点。\u003c/p\u003e\n\u003cp\u003e现在，虽然指示符比向量处理起来更简单，通常不需要可变长度，但你通常要在指示符的远端添加文字来指定指示的内容。和之前一样，计算这个位置可能很困难，何必呢。\u003c/p\u003e\n\u003cp\u003e文字定位的解决方法也和向量一样。保留原来用于绘制指示箭头的翘曲空间，并将原点转换到该箭头的尾端（在翘曲空间中水平40像素）。现在我们已经重新定位了，我们可以围绕这个新的位置解除扭曲，这样你就可以像正常的那样绘制文本（有轻微的偏移）。\u003c/p\u003e\n\u003cp\u003e不幸的是，虽然默认的文字对齐方式是\u0026quot;左\u0026rdquo;，但目前你不能在 MVG 中指定文字对齐方式，作为重力的单独设置。如果这是一个问题，请在 IM bugs 论坛上提出请求，希望文本对齐（作为独立于重力定位）能够成为现实，尤其是它实际上是 SVG 规范的一部分。\u003c/p\u003e\n\u003ch3 id=\"绘制对象\"\u003e绘制对象\u003c/h3\u003e\n\u003ch4 id=\"宽广的色彩笔触\"\u003e宽广的色彩笔触\u003c/h4\u003e\n\u003cp\u003e你不需要用路径或轮廓完全封闭填充区域，就能创造出各种形状。使用非常大和宽的\u003ca href=\"https://imagemagick.org/Usage/draw/#stroke\"\u003e笔触\u003c/a\u003e，你可以在画布上生成大面积的颜色和色块。\u003c/p\u003e\n\u003cp\u003e例如，一个宽阔的笔触椭圆弧形可以生成一个漂亮的颜色区域，我实际上已经看到用于创建海报。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc: -fill none -stroke powderblue \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;stroke-width 70 ellipse -30,0 90,90 10,50\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -rotate \u003cspan class=\"m\"\u003e180\u003c/span\u003e  arc_background.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/arc_background.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e或者你可以生成一个小丑相当复杂的笑容。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 100x100 xc: \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;fill none stroke-linecap round\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e             stroke-width 40 stroke tomato ellipse 50,0 70,70 65,115\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e             stroke-width 2  stroke black  ellipse 50,0 70,70 60,120\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s1\"\u003e             stroke-width 40 stroke palegreen line 50,40 50,40.01\u0026#39;\u003c/span\u003e clown.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/clown.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e你能想出什么办法？请告诉我们。\u003c/p\u003e\n\u003ch4 id=\"圆柱体\"\u003e圆柱体\u003c/h4\u003e\n\u003cp\u003e在 \u003ca href=\"https://imagemagick.org/Usage/forum_link.cgi?t=17550\"\u003eIM 论坛的讨论\u003c/a\u003e中，有一个关于使用 ImageMagick 绘制命令绘制圆柱体（特别是阴影圆柱体）的重要讨论。\u003c/p\u003e\n\u003cp\u003e绘制圆柱体的诀窍是绘制 \u003ccode\u003eroundrectangle\u003c/code\u003e 原语，使其末端形成椭圆形。也就是说，如果圆柱体的宽度为 50 像素，则将矩形的角分别舍去 25 和 12 像素。这就是矩形宽度的一半，然后再减半。\u003c/p\u003e\n\u003cp\u003e这样，一个圆柱体就变成了两个相互叠加的圆角矩形。第二个颜色填充的 \u003ccode\u003e'end oval'\u003c/code\u003e 的大小正好是两个角的两倍。例如\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 60x100 xc:white -stroke snow4 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill chartreuse3    -draw \u003cspan class=\"s1\"\u003e\u0026#39;roundrectangle 5,5 55,95 25,12\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill chartreuse2    -draw \u003cspan class=\"s1\"\u003e\u0026#39;roundrectangle 5,5 55,29 25,12\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          cylinder.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/cylinder.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e通过将第一种填充色替换为渐变色（使用\u003ca href=\"https://imagemagick.org/Usage/canvas/#tile_memory\"\u003e记忆中的平铺技术\u003c/a\u003e），你可以让圆柱体看起来更像3D\u0026hellip;\u0026hellip;。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 60x100 xc:white -stroke snow4 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          \u003cspan class=\"se\"\u003e\\(\u003c/span\u003e -size 1x60 gradient:chartreuse1-chartreuse4 -rotate -90 \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e             -write mpr:shading +delete \u003cspan class=\"se\"\u003e\\)\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -tile mpr:shading  -draw \u003cspan class=\"s1\"\u003e\u0026#39;roundrectangle 5,5 55,95 25,12\u0026#39;\u003c/span\u003e +tile \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -fill chartreuse2  -draw \u003cspan class=\"s1\"\u003e\u0026#39;roundrectangle 5,5 55,29 25,12\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          cylinder_shade.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/cylinder_shade.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e通过慢慢完善圆柱体的绘制（如IM论坛中讨论的那样），你可以走很长的路来生成非常复杂和具有视觉吸引力的圆柱体。这包括增加封闭半透明玻璃圆柱体、阴影效果和标签。\u003c/p\u003e\n\u003cp\u003e该讨论的最终结果是一个脚本 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/scripts/cylinder_bar\"\u003ecylinder_bar\u003c/a\u003e\u0026quot;，生成一个圆柱体百分比条\u0026hellip;\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cylinder_bar \u003cspan class=\"m\"\u003e95\u003c/span\u003e cylinder_95.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/cylinder_95.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e该脚本可以生成任何尺寸的图像，根据该尺寸和脚本顶部定义的其他设置适当调整所有参数。还包括 \u003ccode\u003eglass thickness\u003c/code\u003e 的概念，在一个封闭的半透明玻璃圆柱体和内部的彩色圆柱体之间创造一个间隙。\u003c/p\u003e\n\u003cp\u003e请注意圆柱体非常微妙的阴影，特别是当绿色圆柱体的末端与玻璃圆柱体的末端重叠时。只要稍加预想，就能做出惊人的效果。\u003c/p\u003e\n\u003ch3 id=\"在文字串中绘制特殊字符\"\u003e在文字串中绘制特殊字符\u003c/h3\u003e\n\u003ch4 id=\"引号还是反斜杠\"\u003e引号还是反斜杠？\u003c/h4\u003e\n\u003cp\u003e人们在使用 \u003ccode\u003e-draw\u003c/code\u003e 时遇到的最大的问题之一是绘制字符，这些字符对 UNIX shell 和 DOS 命令行甚至其他语言如 C、Perl、PHP、R 或 Visual Basic 都有特殊意义。\u003c/p\u003e\n\u003cp\u003e在这方面最大的罪魁祸首是两种类型的引号字符，以及变量替换字符，如美元 \u003ccode\u003e'$'\u003c/code\u003e 和 shell 和 ImageMagick 的转义字符，反斜杠 \u003ccode\u003e'\\'\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e基本上作为 \u003ccode\u003e-draw\u003c/code\u003e 的MVG参数需要加引号，而里面的 \u003ccode\u003e'text'\u003c/code\u003e 字符串参数也可能需要一些额外的引号。\u003c/p\u003e\n\u003cp\u003e为了解决这个问题，用户通常会使用两个不同的引号字符，一个用于 shell，另一个用于 MVG 文本字符串。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-draw \u003cspan class=\"s1\"\u003e\u0026#39;... text 0,0 \u0026#34;string\u0026#34; ...\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e需要注意的是，对于 windows 用户来说，这是唯一真正的选择，它有自己的引号问题和方法。或者他们会交换引号，用\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-draw \u003cspan class=\"s2\"\u003e\u0026#34;... text 0,0 \u0026#39;string\u0026#39; ...\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它允许你包含 shell 变量替换(使用 \u003ccode\u003e'$'\u003c/code\u003e 而不进行转义。)\u003c/p\u003e\n\u003cp\u003e选择正确的形式可以解决大多数问题，但有些字符仍然存在困难，每个解决方案都取决于你到底使用哪一组引号，因为它们也定义了特殊字符应该如何转义。\u003c/p\u003e\n\u003cp\u003e以下是四种情况下的引号，以及特殊字符的处理\u0026hellip;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对 shell 参数使用单引号，对 MVG 文本字符串周围使用双引号。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e处理绘制文本字符串的最简单的技术是为包装 shell 参数使用单引号。然而，这意味着要在绘制的字符串中包含一个撇号，你需要离开 shell 的\u0026quot;单引号模式\u0026rdquo;，并在 shell 的单引号之外提供撇号。\u003c/p\u003e\n\u003cp\u003e例如，这里是如何处理我提到的四个特殊字符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 250x50 xc:none  -box white  -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 0,0 \u0026#34;  \u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;  \\\u0026#34;  $  \\\\  \u0026#34; \u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -trim +repage  text_special_sd.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/text_special_sd.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，由于美元符号不需要转义，你也不能用它来替代 shell 变量的内容。\u003c/p\u003e\n\u003cp\u003e重要的是要记住，反斜杠是IM绘图字符串处理的唯一特殊字符。同时，它存在的原因也纯粹是为了让你可以转义任何\u0026quot;IM 绘制字符串引号\u0026rdquo;，比如我们在上面使用的双引号。除此以外，其他所有的怪异都是由 UNIX 命令行 shell 引起的，而不是 IM。\u003c/p\u003e\n\u003cp\u003ePC-DOS 有它自己的怪异之处，我希望在使用环境中的IM时，能对特殊字符进行转义。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在 shell 参数中使用双引号。\n在 MVG 文本字符串周围使用单引号。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如果你确实想在绘制的字符串中插入一个 \u0026lsquo;shell variable\u0026rsquo;，那么你将不得不在 shell 参数的外面使用双引号。这使得整个事情变得更加复杂，因为你失去了 shell 的保护，你现在不仅要转义美元 \u003ccode\u003e'$'\u003c/code\u003e 符号，而且还要转义反斜杠 \u003ccode\u003e'\\'\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e另一方面，shell 将不需要使用单引号字符作为它的参数结束限制字符，所以这方面被简化了。让我们总结一下我们的特殊字符短名单的结果。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 250x50 xc:none  -box white  -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;text 0,0 \u0026#39;  \\\\\u0026#39;  \\\u0026#34;  \\$  \\\\\\\\  \u0026#39; \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -trim +repage  text_special_ds.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/text_special_ds.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，如果你想画一个反斜线本身，MVG 文本字符串需要将反斜线加倍（如前面的例子），但是 shell 本身也需要将每个反斜线加倍，总共产生四个反斜线才能产生一个这样的字符。\u003c/p\u003e\n\u003cp\u003e这种翻倍很快就会让人不知所措，需要大量的反斜杠才能达到你想要的效果。只要采取的是慢慢的、简单的方法，你就会针对自己的情况想出办法。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e使用单引号进行 shell 论证。\n与 MVG 文本字符串周围的单引号。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e最后，让我们总结一下最后两种引号组合。我将让你去弄清楚它们是如何被 shell 和 MVG 解码的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 250x50 xc:none  -box white  -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 0,0 \u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;  \\\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;  \u0026#34;  $  \\\\  \u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39; \u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -trim +repage  text_special_ss.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/text_special_ss.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e在shell参数中使用双引号。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在 MVG 文本字符串周围加上双引号。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 250x50 xc:none  -box white  -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -draw \u003cspan class=\"s2\"\u003e\u0026#34;text 0,0 \\\u0026#34;  \u0026#39;  \\\\\\\u0026#34;  \\$  \\\\\\\\  \\\u0026#34;\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -trim +repage  text_special_dd.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/text_special_dd.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e正如你所看到的，来自命令行的 \u003ccode\u003e-draw\u003c/code\u003e 参数既要处理命令行 shell，也要处理 MVG 文本字符串中的反斜杠和引号转义。其结果可能会让人感到困惑和棘手。只要记住，shell 对这两种引号的处理方式不同，而 MVG 文本字符串则不同。\u003c/p\u003e\n\u003cp\u003e当然，在复杂的脚本中，更好的方法可能是完全避免 shell 和任何脚本问题。你可以通过读取 MVG 绘图文件中的 \u003ccode\u003e-draw\u003c/code\u003e 参数来实现。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e-draw @drawfile.mvg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当然，你仍然需要对你使用的任何引号字符进行反斜杠处理，以及对文本中的任何反斜杠进行处理。然而，这比起同时处理 shell 自己的引号和转义系统要简单得多。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -size 500x50 xc:lightblue  -font Candice -pointsize \u003cspan class=\"m\"\u003e36\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -gravity center     -draw @text_quotes.mvg      text_quotes.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/img_www/right.gif\" alt=\"img\"\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/text_quotes.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e第一张图片来自我使用的一个 \u0026ldquo;MVG\u0026rdquo; 文本文件。它不包含转义符或引号。因此，只有 MVG 引号和转义符是存在的。\u003c/p\u003e\n\u003cp\u003e请注意，在上面的例子中，如果我对 MVG 文本字符串使用了单引号，唯一的变化是我需要对字符串中的单引号字符进行反斜杠处理，而不是双引号字符。\u003c/p\u003e\n\u003ch4 id=\"关于百分比字符\"\u003e关于百分比字符\u003c/h4\u003e\n\u003cp\u003e最后一点是关于 \u003ccode\u003e\u0026quot;-draw text\u0026quot;\u003c/code\u003e 操作符中的特殊 \u003ccode\u003eescape\u003c/code\u003e 字符。百分号字符 \u003ccode\u003e\u0026quot;%\u0026quot;\u003c/code\u003e 应该\u0026quot;按原样\u0026quot;绘制。你不需要做任何特殊的操作来绘制它们。如果它们不能\u0026quot;按原样\u0026quot;绘制，那么你的IM版本较旧，应该尽快升级。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e直到IM 6.2.4版本，\u003ccode\u003e\u0026quot;%\u0026quot;\u003c/code\u003e 字符被用作转义字符，在绘制的文本字符串中包含额外的图像信息。现在不再是这样了，因为当SVG图像也试图绘制百分数字符时，这种转义符是混乱和不正确的。\n百分号 \u0026ldquo;转义符 \u0026ldquo;的使用（以及\u0026rdquo;/n \u0026ldquo;换行符）被认为与 \u003ccode\u003e-draw\u003c/code\u003e 操作符和MVG格式处理SVG图像格式的预期用途不兼容。因此，从 IM 6.2.4 版本开始，%转义就不适用了，反斜杠只能转义自己和周围的引号。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    convert -size 250x50 xc:none -box white  -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            -draw \u003cspan class=\"s1\"\u003e\u0026#39;text 0,0 \u0026#34;%w\\n%h\u0026#34;\u0026#39;\u003c/span\u003e    -trim +repage text_escapes.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/text_escapes.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e关于\u0026quot;百分比错误\u0026quot;的更多细节，以及在旧版 ImageMagick 中使用 \u003ccode\u003e-draw\u003c/code\u003e 时避免该错误的方法，请参见 \u003ca href=\"https://imagemagick.org/Usage/bugs/draw_percent/\"\u003eDrawing a Percent Bug\u003c/a\u003e 页面。\u003c/p\u003e\n\u003ch4 id=\"用注释代替绘制\"\u003e用注释代替绘制\u003c/h4\u003e\n\u003cp\u003e避免这类问题的较好方法是使用 \u003ccode\u003e[-annotate](https://imagemagick.org/Usage/option_link.cgi?annotate)\u003c/code\u003e 而不是  \u003ccode\u003edraw\u003c/code\u003e 来绘制文本。这个操作符是 \u003ccode\u003edraw\u003c/code\u003e 操作符的一个封装器，可以使用 \u003ccode\u003edraw\u003c/code\u003e 的所有功能，但形式更简单。\u003c/p\u003e\n\u003cp\u003e基本上这个操作符只需要一组引号（对于 shell）。这使得处理特殊字符变得更加简单。\u003c/p\u003e\n\u003cp\u003e不幸的是，虽然你不再需要为 IM 转义引号，但你现在有百分比转义，如 \u003ccode\u003e'@'\u003c/code\u003e 文件读取，\u003ccode\u003e'\\n'\u003c/code\u003e 换行，以及其他\u003ca href=\"https://imagemagick.org/Usage/basics/#arg_percent\"\u003e百分号转义\u003c/a\u003e扩展。\u003c/p\u003e\n\u003cp\u003e例如，使用单引号\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    convert -size 200x50 xc:none  -box white  -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            -annotate \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;\\@  \u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;  \u0026#34;  $  \\\\  %% \u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            -trim +repage  annotate_s.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/annotate_s.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e而对于双引号\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    convert -size 200x50 xc:none -box white -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            -annotate \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\\@  \u0026#39;  \\\u0026#34;  \\$  \\\\\\\\  %% \u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            -trim +repage  annotate_d.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/annotate_d.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e然而，如果你使用 \u003ccode\u003e'@'\u003c/code\u003e 转义符从文件中读取字符串，所有的注释引号和转义符将被完全忽略。\u003c/p\u003e\n\u003cp\u003e例如，我们在这里包含了一个图像的宽度和高度的信息!\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    convert -size 200x50 xc:none -box white -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e            -annotate \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;%w\\n%h\u0026#39;\u003c/span\u003e -trim +repage    annotate_percents.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而，当从文件中读取注释字符串时，所有的转义都会被完全忽略。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e -n \u003cspan class=\"s1\"\u003e\u0026#39;@ %w\\n%h\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e      convert -size 200x50 xc:none -box white -pointsize \u003cspan class=\"m\"\u003e20\u003c/span\u003e -gravity center \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e              -annotate \u003cspan class=\"m\"\u003e0\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;@-\u0026#39;\u003c/span\u003e  -trim +repage  annotate_file.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/annotate_file.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e更多信息请参见 \u003ca href=\"https://imagemagick.org/Usage/text/#annotate\"\u003eAnnotate Text Drawing Operator\u003c/a\u003e，特别是 \u003ca href=\"https://imagemagick.org/Usage/text/#escape_chars\"\u003eAnnotate Escape Characters\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"im-和-svg-处理\"\u003eIM 和 SVG 处理\u003c/h2\u003e\n\u003ch3 id=\"svg-输入驱动rsvg-与-msvg\"\u003eSVG 输入驱动。RSVG 与 MSVG\u003c/h3\u003e\n\u003cp\u003e处理实际的 SVG 图像格式是一项非常复杂的工作。引擎需要处理 \u003ca href=\"http://www.w3.org/TR/SVG/\"\u003eSVG\u0026ndash;可缩放矢量图形\u003c/a\u003e文档所定义的所有方面。这需要大量的编程工作和时间。\u003c/p\u003e\n\u003cp\u003e因此，ImageMagick 在 SVG 格式图像的处理上提供了两种方法。第一种是使用一个开源的 RSV G库，将 SVG 格式转换成 IM 没有问题的光栅图像。这个引擎几乎在 SVG 处理的所有方面都是完整的。\u003c/p\u003e\n\u003cp\u003e第二种方法是IM尝试将 SVG 转换为 MVG，使用一个名为 MSVG 的内置IM方法。MSVG 试图将SVG图像转换成IM的 \u003ccode\u003e-draw\u003c/code\u003e 运算符 \u0026ldquo;MVG\u0026quot;绘图语言。绘制 MVG 的很多功能都是专门为此而创建的。不幸的是，虽然基本的线条绘制和着色功能是存在的，但它远不是一个完整的 SVG 转换器。\u003c/p\u003e\n\u003cp\u003e你可以通过使用特殊的输入格式 \u0026ldquo;MSVG:\u0026quot;（IM v6.3.4新增）读取 SVG 图像来强制使用内部的 MSVG 转换器。但如果 RSVG 库存在，大多数 ImageMagick 将使用它来渲染 \u003ccode\u003eSVG\u003c/code\u003e 图像。\u003c/p\u003e\n\u003cp\u003e要找出你的 IM 会做什么，请用\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -list format \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep SVG\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e从括号中的 \u0026ldquo;RSVG\u0026rdquo; 可以看出，我自己的 IM 将使用我电脑上的 RSVG 库，并给出了版本。\u003c/p\u003e\n\u003cp\u003e在这里，我\u0026quot;绘制\u0026quot;了一个小的、手工制作的 SVG 图像 \u0026ldquo;\u003ca href=\"https://imagemagick.org/Usage/draw/diagonal.svg\"\u003ediagonal.svg\u003c/a\u003e\u0026quot;（由论坛用户 \u003ca href=\"https://imagemagick.org/Usage/forum_link.cgi?u=8538\"\u003epenciledin\u003c/a\u003e 贡献），它在白色背景上创建了一个简单的对角线渐变的矩形。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert diagonal.svg  diagonal_rsvg.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/diagonal_rsvg.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e完美的。一个正确的对角线梯度被生成。\u003c/p\u003e\n\u003cp\u003e然而，如果你使用内部的 MSVG（如果没有 RSVG 库，则为默认值）来渲染\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert msvg:diagonal.svg  diagonal_msvg.gif\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/diagonal_msvg.gif\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e正如你所看到的，内部 MSVG 转换失败，返回的是垂直梯度而不是对角线。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert msvg:diagonal.svg diagonal.mvg\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你大概可以看到MSVG转换器是如何尝试将 SVG 转换为 MVG 绘图命令的。\u003c/p\u003e\n\u003cp\u003e当前内部 MSVG 已知失败的地方包括\u0026hellip;\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e非垂直梯度(没有转换到新的MVG梯度处理)\u003c/li\u003e\n\u003cli\u003e沿着弯曲路径的文字\u003c/li\u003e\n\u003cli\u003e文本对齐（与重力分开）。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e然而大多数基本的绘图动作都被处理了。\u003c/p\u003e\n\u003cp\u003e还请记住，MVG 语言实际上可以处理 SVG 不能处理的事情，包括使用重力来定位图像和文本。重力不是 SVG 规范的一部分，尽管它是 IM 文本和字体处理的一个组成部分。\u003c/p\u003e\n\u003cp\u003e另外请记住，MVG 没有 SVG 所拥有的容器机制。内部的 MSVG 转换器用图形上下文的推送和弹出代替了 XML 容器（见上面的 MVG  输出），效果是一样的。\nSVG 的设置\u003c/p\u003e\n\u003cp\u003eSVG 图像格式是一种矢量格式（请参见\u003ca href=\"https://imagemagick.org/Usage/formats/#vector\"\u003e关于矢量图像格式的一句话\u003c/a\u003e），因此图像通常没有一个默认的\u0026quot;大小\u0026rdquo;，而是以特定的 \u003ccode\u003e \u0026quot;-density\u0026quot;\u003c/code\u003e 来 \u0026ldquo;绘制\u0026quot;或\u0026quot;渲染\u0026rdquo;，就像 postscript 一样（默认密度是72dpi）。\u003c/p\u003e\n\u003cp\u003e另外，如果 SVG 没有 \u0026ldquo;绘制\u0026quot;背景，您可以通过使用 \u003ccode\u003e-background\u003c/code\u003e 设置指定要使用的背景颜色。\u003c/p\u003e\n\u003cp\u003e例如这里是另一个小的 SVG 图像 \u0026ldquo;home.svg\u0026rdquo;，它已经使用3种不同的密度，3种不同的背景进行\u0026quot;渲染\u0026rdquo;，包括一个透明的背景。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -density \u003cspan class=\"m\"\u003e36\u003c/span\u003e                      home.svg  home_1.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert              -background skyblue home.svg  home_2.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -density \u003cspan class=\"m\"\u003e144\u003c/span\u003e -background none    home.svg  home_3.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/home_1.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/home_2.gif\" alt=\"img\"\u003e\n\u003cimg src=\"https://imagemagick.org/Usage/draw/home_3.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e请注意，我使用了 PNG 格式的图片来制作上面例子中较大的透明背景版本。由于半透明的边缘像素，这产生的图像比 GIF 图像格式产生的图像更干净。当最终图像中涉及到透明度时，总是建议使用 PNG。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e我发现有些 SVG 图像不能缩放。也就是说，它们被定义为\u0026quot;像素\u0026rdquo;，而不是现实世界中的长度，如\u0026quot;点\u0026rdquo;、\u0026ldquo;英寸\u0026quot;或\u0026quot;毫米\u0026rdquo;。因此，虽然 \u003ccode\u003e-density\u003c/code\u003e 设置可能会改变图像的整体大小（以现实世界为单位），但 \u0026ldquo;像素 \u0026ldquo;的大小不会改变，因此图像本身的大小也不会改变。然而这样的SVG图像是相当罕见的。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e更糟糕的是，一些 SVG 图像使用了\u0026quot;像素\u0026quot;和 \u0026ldquo;点\u0026quot;的混合测量，除非作者故意这样做，否则你可能会得到一个真正的混乱，你可以尝试使用不同的密度，而不是作者想要的。幸运的是，这种情况更加罕见。\u003c/p\u003e\n\u003cp\u003e一个简单的解决方法就是将 SVG 中所有的 \u0026ldquo;像素\u0026quot;单位改成\u0026quot;点\u0026rdquo;，但也不能盲目的使用，以防故意使用\u0026quot;像素\u0026rdquo;。\u003c/p\u003e\n\u003ch2 id=\"svg-输出处理\"\u003eSVG 输出处理\u003c/h2\u003e\n\u003cp\u003e从 IM v6.4.2 开始，IM 可以将任何位图图像转换为 SVG 矢量图! 转换并不总是成功的，但较大和/或较简单的图像（如位图蒙版）会转换得很好。\u003c/p\u003e\n\u003cp\u003e例如，我在这里将一个可怕的位图形状转换为SVG图像，然后再将其转换回来，以便将位图平滑为一个适当的反锯齿形状。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert -pointsize \u003cspan class=\"m\"\u003e72\u003c/span\u003e -font Candice label:A -threshold 50% \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e          -trim +repage -bordercolor white -border 5x5 A.gif\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert A.gif  A.svg\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert A.svg  A.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/A.gif\" alt=\"img\"\u003e -\u0026gt; \u003cimg src=\"https://imagemagick.org/Usage/draw/A.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e然而，要使之工作，必须安装\u0026quot;开发\u0026quot;的 \u003ca href=\"http://autotrace.sourceforge.net/\"\u003eAutoTrace\u003c/a\u003e 库，并在IM中配置 \u003ccode\u003e-with-autotrace\u003c/code\u003e 开关。\u003c/p\u003e\n\u003cp\u003e如果没有安装 \u003ca href=\"http://autotrace.sourceforge.net/\"\u003eAutoTrace\u003c/a\u003e 库并将其编译到 IM 中，那么生成的 SVG 输出将是大量的单像素圆圈，生成一个二进制结果，而不是一个平滑的 SVG 轮廓图像。这样的图像比较巨大，通过 SVG 渲染往往需要很长的时间来渲染。\u003c/p\u003e\n\u003cp\u003e其实需要一种更好的默认栅格到矢量的技术，可能会使用 Morphology skeletion 和 MAT 技术。\u003c/p\u003e\n\u003cp\u003e有一个 \u003ccode\u003eautotrace:\u003c/code\u003e \u003ca href=\"https://imagemagick.org/Usage/files/#delegates\"\u003e输入代理\u003c/a\u003e，来\u0026quot;平滑输入位图图像\u0026rdquo;，直接使用 \u0026ldquo;autotrace\u0026rdquo; 命令一次性完成上述所有步骤。然而我最后一次看到这个代理已经消失了。\u003c/p\u003e\n\u003cp\u003e你应该这样使用它\u0026hellip;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  convert autotrace:A.gif  A_traced.png\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cimg src=\"https://imagemagick.org/Usage/draw/A_traced.png\" alt=\"img\"\u003e\u003c/p\u003e\n\u003cp\u003e当然这并不能让你从 \u0026ldquo;autotrace\u0026rdquo; 命令中得到 SVG 输出，只是通过 SVG 过滤输入的图像来平滑它。\u003c/p\u003e\n\u003cp\u003e作为一种替代方法，你可以直接使用 \u0026ldquo;autotrace\u0026rdquo; 命令，如 \u003ca href=\"https://imagemagick.org/Usage/transform/#edge_vector\"\u003eRaster to Vector Edging\u003c/a\u003e 和 \u003ca href=\"https://imagemagick.org/Usage/morphology/#autotrace_skeleton\"\u003eSkeleton using Autotrace\u003c/a\u003e 示例所示。\u003c/p\u003e\n\u003cp\u003e你也可以看看 \u003ca href=\"https://imagemagick.org/Usage/forum_link.cgi?u=39994\"\u003ecancerberosgx\u003c/a\u003e 的结果，在\u003ca href=\"https://imagemagick.org/Usage/forum_link.cgi?p=167161\"\u003e生成 SVG 图像\u003c/a\u003e，他研究了转换照片的解决方案。\u003c/p\u003e\n\u003ch2 id=\"非im矢量图形编辑器\"\u003e非IM矢量图形编辑器\u003c/h2\u003e\n\u003cp\u003eImageMagick 是一个像素数组处理器，它一般不会保存矢量图像（\u0026lsquo;MVG\u0026rsquo; 是唯一的例外），只会读取图像并将其转换为像素数组。\u003c/p\u003e\n\u003cp\u003e其他像素图像编辑器也是如此，如 Gimp、Photoshop 等。\u003c/p\u003e\n\u003cp\u003e对于编辑和处理基于矢量的图像，可以使用以下程序，如\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSodipodi 基于SVG的矢量图形编辑器。\u003c/li\u003e\n\u003cli\u003eXfig 简单但非常好的矢量对象编辑器。(适用于标志、地图和在页面上排列照片)\u003c/li\u003e\n\u003cli\u003eDia\u003c/li\u003e\n\u003cli\u003eAutoTrace 将位图数组中的形状转换为矢量轮廓。\u003c/li\u003e\n\u003cli\u003eSketch 基于 Python 的曲线文字矢量编辑器。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e当然，这不是一个完整的列表。即使是许多文字处理程序，如 OpenOffice、Word 和 TeX，一般都有各种简单的，虽然往往难以使用的对象编辑器。\u003c/p\u003e\n\u003cp\u003e然而对于一般将矢量图形格式转换为不同的矢量格式，不要使用 ImageMagick。ImageMagick 本质上是一个光栅图像或位图图形转换器和操作器，而且永远都是这样。更多信息请参见 \u003ca href=\"https://imagemagick.org/Usage/formats/#vector\"\u003eA word about Vector Image formats\u003c/a\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e创建于: 24 March 2004\u003c/li\u003e\n\u003cli\u003e更新于: 14 March 2011\u003c/li\u003e\n\u003cli\u003e作者: Anthony Thyssen, \u003ca href=\"mailto:Anthony.Thyssen@gmail.com\"\u003eAnthony.Thyssen@gmail.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eExamples Generated with:  [version image]\u003c/li\u003e\n\u003cli\u003eURL: \u003ca href=\"http://www.imagemagick.org/Usage/draw/\"\u003ehttp://www.imagemagick.org/Usage/draw/\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","text":"https://imagemagick.org/Usage/draw/\n在 IM 中绘图是在现有图像中添加新元素的方法。虽然在复合字体效果的示例页和图像注释中涵盖了很多文本绘制的内容，但本页涉及 \u0026ldquo;-draw\u0026rdquo; 操作符的其他更普遍的方面。\n绘制命令最初是作为一种创建简单图像的手段。但随着时间的推移，它已经扩展成为矢量图形到光栅图像转换的界面。\nImageMagick 绘制命令 计算机中的图像通常以两种不同的方式保存。第一种也是你在这些示例页面中看到的最常见的方式被称为光栅图形。在这种方式中，图像是以像素的矩形阵列来存储的。\n另一种方式不太常见，也不太容易修改，但从另一个意义上讲，它的通用性更强，即对象矢量图形。在这种形式下，图像是用线条、弧线、颜色填充，有时还有深度来描述的。这是非常有用的，因为你可以将这些图像放大到你想要的任何尺寸，而且它们仍然可以完美地显示。与光栅格式的图像相比，您还可以在很小的空间内描述非常大和复杂的图像。\n矢量图形图像的例子包括 postscript 和新的 SVG-可缩放矢量图形。\nTrue-Type 字体也是矢量图形的例子，因为它允许在任何比例下使用单个字符描述。\n\u0026ldquo;-draw\u0026rdquo; 图像操作符，是进入 ImageMagick 矢量绘图功能的一个窗口，并形成了一套与 IM 的普通命令行图像操作符相当独立的命令。\n一般使用的矢量图形文件格式只有几种，因为每一种这样的格式通常与其他这样的格式有很大的不同。其结果是，很少有代码共享的可能。 基于这个原因，ImageMagick 更关注使用矢量图形来绘制 SVG 格式的图像。Postscript 和 true-type 字体图形被传递给其他外部的\u0026quot;代理\u0026ldquo;库和应用程序，它们更适合绘制这些类型的矢量图形格式。 这并不是说 SVG 没有代理库。一个例子是 RSVG 库或 GTK SVG 库，这些库在编译时是可用的。IM 会链接到这些库来转换 SVG，而不是自己尝试去做。\n原始绘图命令 让我们从 MVG 命令的 \u0026ldquo;-draw\u0026rdquo; 图像操作符中最古老、最简单、最常见的绘图原语开始。\n请注意，所有的参数都被视为浮点数，不一定是整数，比如我在这些例子中通常使用的。\n# Single Pixel Draw (两种方式 -- 这些像素点都被放大了) # Point \u0026#39;paints\u0026#39; the color pixel convert -size 10x6 xc:skyblue -fill black \\ -draw \u0026#39;point 3,2\u0026#39; -scale 100x60 draw_point.gif # Color Point \u0026#39;replaces\u0026#39; the color pixel convert -size 10x6 xc:skyblue -fill black \\ -draw \u0026#39;color 6,3 point\u0026#39; -scale 100x60 draw_color_point.gif 根据给出的注释，当涉及半透明颜色时，这两种点方法会产生不同的结果。详情请参见下面的颜色填充原语。\n# 矩形 / 圆角矩形 / 矩形圆弧 convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;rectangle 20,10 80,50\u0026#34; draw_rect.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;roundrectangle 20,10 80,50 20,15\u0026#34; draw_rrect.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;arc 20,10 80,50 0,360\u0026#34; draw_arc.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;arc 20,10 80,50 45,270\u0026#34; draw_arc_partial.gif arc 绘制原语与矩形一起列出，因为它实际上只是一个\u0026quot;椭圆\u0026rdquo;，装在两个坐标定义的\u0026quot;矩形\u0026quot;(rectangle)内。部分弧线很少使用，因为很难确定端点，除非角度限制在九十度的倍数。\ncircle 和 ellipse 原语涉及\u0026quot;中心\u0026quot;坐标与\u0026quot;边缘\u0026quot;坐标，或\u0026quot;大小\u0026quot;和\u0026quot;角度\u0026quot;值。\n# 圆 / 椭圆 (以某一点为中心) convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;circle 50,30 40,10\u0026#34; draw_circle.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;ellipse 50,30 40,20 0,360\u0026#34; draw_ellipse.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;ellipse 50,30 40,20 45,270\u0026#34; draw_ellipse_partial.gif 你也可以看看 Push/Pop 上下文，了解如何创建一个旋转的椭圆的例子。\n# 直线 / 折线 / 多边形 / 贝塞尔曲线 convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;line 20,50 90,10\u0026#34; draw_line.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;polyline 40,10 20,50 90,10 70,40\u0026#34; draw_polyline.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;polygon 40,10 20,50 90,10 70,40\u0026#34; draw_polygon.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;bezier 40,10 20,50 90,10 70,40\u0026#34; draw_bezier.gif 比较好的画直线和曲线的方法是使用 SVG 路径画法，它的用途更广，甚至可以实现\u0026quot;比例画线\u0026quot;。\n# text drawing / image convert -size 100x60 xc:skyblue -fill white -stroke black \\ -font Candice -pointsize 40 -gravity center \\ -draw \u0026#34;text 0,0 \u0026#39;Hello\u0026#39;\u0026#34; draw_text.gif convert -size 100x60 xc:skyblue -gravity center \\ -draw \u0026#34;image over 0,0 0,0 \u0026#39;terminal.gif\u0026#39;\u0026#34; draw_image.gif 最后这两个填充类型的操作是目前唯一受 \u0026ldquo;-gravity\u0026rdquo; 影响的绘制操作。这些操作的其他修饰符，包括 \u0026ldquo;-fill\u0026quot;、\u0026rdquo;-tile\u0026quot;、\u0026quot;-origin\u0026quot;、\u0026quot;-stroke\u0026quot;、\u0026quot;-strokeidth\u0026quot;、\u0026quot;-font\u0026quot;、\u0026quot;-pointsize\u0026quot;、\u0026quot;-box\u0026quot;。他们还有其他的修饰符，但这些修饰符与更高级的 Magick Vector Graphics 语言有关。\n贝赛尔原语 \u0026ldquo;bezier\u0026rdquo; 原语用于绘制曲线。每条命令只画一条曲线段。通常会给出 4 个点（8 个数字）：一个起点\u0026rsquo;结\u0026rsquo;、两个控制点和一个终点\u0026rsquo;结\u0026rsquo;。两个控制点定义了曲线的方向以及曲线偏离附加的终点\u0026rsquo;结\u0026rsquo;点的速度。\n为了顺利地将两条曲线连接起来，应该将端点的控制点通过\u0026rsquo;结\u0026rsquo;镜像，形成下一条贝塞尔曲线的控制点。例如这里我画了两条平稳连接在一起的贝赛尔曲线。请注意控制线和点（也是画出来的）是如何通过连接坐标直线镜像的，无论是角度还是长度。这一点很重要，否则曲线将不平滑。\npoints=\u0026#34;10,10 30,90 25,10 50,50 50,50 75,90 70,10 90,40\u0026#34; clines=`echo \u0026#34;$points\u0026#34; | sed \u0026#39;s/ /\\n/g\u0026#39; |\\ while read line; do echo \u0026#34;line $line\u0026#34;; done` symbols=`echo path \u0026#34;\u0026#39;\u0026#34;; for point in $points; do echo \u0026#34;M $point l -2,-2 +4,+4 -2,-2 l -2,+2 +4,-4 -2,+2\u0026#34; done; echo \u0026#34;\u0026#39;\u0026#34;` convert -size 100x100 xc:skyblue -fill none \\ -draw \u0026#34;stroke gray $clines stroke blue $symbols \u0026#34; \\ -draw \u0026#34;stroke red bezier 10,10 30,90 25,10 50,50 \u0026#34; \\ -draw \u0026#34;stroke red bezier 50,50 75,90 70,10 90,40 \u0026#34; \\ draw_bezier_joined.gif 如果我移动其中一个控制点，使它不从同一\u0026quot;结\u0026quot;的另一个控制点通过附加的\u0026quot;结\u0026quot;进行\u0026quot;反射\u0026quot;，那么曲线将不连续。\npoints=\u0026#34;10,10 30,90 25,10 50,50 50,50 80,50 70,10 90,40\u0026#34; clines=`echo \u0026#34;$points\u0026#34; | sed \u0026#39;s/ /\\n/g\u0026#39; |\\ while read line; do echo \u0026#34;line $line\u0026#34;; done` symbols=`echo path \u0026#34;\u0026#39;\u0026#34;; for point in $points; do echo \u0026#34;M $point l -2,-2 +4,+4 -2,-2 l -2,+2 +4,-4 -2,+2\u0026#34; done; echo \u0026#34;\u0026#39;\u0026#34;` convert -size 100x100 xc:skyblue -fill none \\ -draw \u0026#34;stroke gray $clines stroke blue $symbols \u0026#34; \\ -draw \u0026#34;stroke red bezier 10,10 30,90 25,10 50,50 \u0026#34; \\ -draw \u0026#34;stroke red bezier 50,50 80,50 70,10 90,40 \u0026#34; \\ draw_bezier_disjoint.gif 如果再次移动控制点，使其与相关的\u0026quot;结\u0026quot;点相匹配，线条将直接从该点出发，完全没有任何\u0026quot;曲线\u0026quot;。\npoints=\u0026#34;10,10 30,90 25,10 50,50 50,50 50,50 70,10 90,40\u0026#34; clines=`echo \u0026#34;$points\u0026#34; | sed \u0026#39;s/ /\\n/g\u0026#39; |\\ while read line; do echo \u0026#34;line $line\u0026#34;; done` symbols=`echo path \u0026#34;\u0026#39;\u0026#34;; for point in $points; do echo \u0026#34;M $point l -2,-2 +4,+4 -2,-2 l -2,+2 +4,-4 -2,+2\u0026#34; done; echo \u0026#34;\u0026#39;\u0026#34;` convert -size 100x100 xc:skyblue -fill none \\ -draw \u0026#34;stroke gray $clines stroke blue $symbols \u0026#34; \\ -draw \u0026#34;stroke red bezier 10,10 30,90 25,10 50,50 \u0026#34; \\ -draw \u0026#34;stroke red bezier 50,50 50,50 70,10 90,40 \u0026#34; \\ draw_bezier_no_curve.gif 如果两个控制点都设置为各自的\u0026quot;结点\u0026quot;，那么就会生成一条直线。\npoints=\u0026#34;10,10 10,10 50,50 50,50 50,50 50,50 90,40 90,40\u0026#34; clines=`echo \u0026#34;$points\u0026#34; | sed \u0026#39;s/ /\\n/g\u0026#39; |\\ while read line; do echo \u0026#34;line $line\u0026#34;; done` symbols=`echo path \u0026#34;\u0026#39;\u0026#34;; for point in $points; do echo \u0026#34;M $point l -2,-2 +4,+4 -2,-2 l -2,+2 +4,-4 -2,+2\u0026#34; done; echo \u0026#34;\u0026#39;\u0026#34;` convert -size 100x100 xc:skyblue -fill none \\ -draw \u0026#34;stroke gray $clines stroke blue $symbols \u0026#34; \\ -draw \u0026#34;stroke red bezier 10,10 10,10 50,50 50,50 \u0026#34; \\ -draw \u0026#34;stroke red bezier 50,50 50,50 90,40 90,40 \u0026#34; \\ draw_bezier_lines.gif 如果不指定所有 4 个点，\u0026lsquo;bezier\u0026rsquo; 原语并不真正有用。只有第一个点和最后一个点被归类为\u0026rsquo;结\u0026rsquo;，曲线将通过（或结束）这两个点。所有其他的点纯粹被视为控制点，按照给定的顺序对曲线产生影响，控制点越远，对该段曲线的影响越大。\npoints=\u0026#34;10,10 30,90 25,10 75,90 70,10 90,40\u0026#34; symbols=`for point in $points; do echo \u0026#34;M $point l -2,-2 +4,+4 -2,-2 l -2,+2 +4,-4 -2,+2\u0026#34; done` convert -size 100x100 xc:skyblue -fill none \\ -draw \u0026#34;stroke gray polyline $points \u0026#34; \\ -draw \u0026#34;stroke red bezier $points \u0026#34; \\ -draw \u0026#34;stroke blue path \u0026#39;$symbols\u0026#39; \u0026#34; \\ draw_bezier_multi.gif 为了保持简单，不建议你每条 \u0026lsquo;bezier\u0026rsquo; 曲线段使用超过或少于4个点。\n其实我建议你完全不要使用 \u0026lsquo;bezier\u0026rsquo; 原语，而是使用 SVG Path Cubic Bezier 来生成曲线。它有一个特殊的 \u0026ldquo;s\u0026rdquo; 曲线延续功能，可以自动做相应的控制点\u0026quot;反射\u0026quot;，生成平滑连接的曲线段，减少你需要使用的控制点数量。您还可以定义相对于路径中最后一个端点的点。\n颜色填充原语 除了上述 \u0026ldquo;简单\u0026quot;原语之外，\u0026rdquo;-draw\u0026ldquo;还提供了一组颜色填充或修改原语。这些原语根据所选方法，从指定的点开始修改图像中的颜色。\n这些填充方法实际上不是真正的 \u0026lsquo;draw\u0026rsquo; 命令，而是颜色替换函数。它们被添加到绘图中，因为在程序的早期版本中，将它们的操作插入到 ImageMagick 中是最简单的。\n就像上面一样，使用的颜色是用 \u0026ldquo;-fill\u0026ldquo;颜色设置的，但如果设置了，就会使用 \u0026ldquo;-tile\u0026rdquo; 图像来代替。\n上面的其他设置选项没有使用，对这些操作没有影响。\n两个额外的设置也将应用于这些原语，即 \u0026ldquo;-bordercolor\u0026rdquo; 和 \u0026ldquo;-fuzz\u0026ldquo;系数设置。但是，这些设置不能在 \u0026ldquo;MVG\u0026rdquo; 语言中定义，因此只能在使用 \u0026ldquo;-draw\u0026rdquo; 操作符之前进行设置。\n第一个 \u0026lsquo;color point\u0026rsquo; 你已经看到了，它是上述例子中 \u0026lsquo;point\u0026rsquo; 绘制原语的替代。如果你仔细观察，你会看到我们在测试图像中设置的单个白色像素。\nconvert color_test.png -fill white \\ -draw \u0026#39;color 30,20 point\u0026#39; color_point.png 然而在绘制透明色和半透明色时，这些功能是不一样的。\n这里我们有一个三个像素的红色图像（放大了），第二个或中间的像素我们用 point 函数在红色像素上画上半透明的蓝色，得到紫色的结果。然而如果使用 color point 函数（最后一个或右边的像素），红色完全被半透明的蓝色像素所取代。它不会被叠加。\nconvert -size 3x1 xc:red -matte -fill \u0026#39;#00F8\u0026#39; \\ -draw \u0026#39;point 1,0\u0026#39; \\ -draw \u0026#39;color 2,0 point\u0026#39; -scale 33x33 draw_points.png 所有的 color 函数都会进行全色替换，而其他所有的颜色原语都会在图像上面\u0026rsquo;画\u0026rsquo;出颜色。因此，你可以使用 color 来绘制透明色。\ncolor replace 绘制函数将在指定的位置替换所有精确给定颜色的实例。而且正如您所看到的，这些区域不一定要连接在一起。\nconvert color_test.png -fill white \\ -draw \u0026#39;color 30,20 replace\u0026#39; color_replace.png convert color_test.png -fill white -fuzz 13%\\ -draw \u0026#39;color 30,20 replace\u0026#39; color_replace_fuzz.png 然而，正如你在第一个结果中所看到的，一些沿边缘的像素没有被替换。这些像素与所选像素的颜色不完全相同，所以它们被忽略了。添加一个小的模糊因子也会包含与原色相似的颜色。如上面第二个例子所示。\n当然，fuzz factor 并不是一个很好的解决方案，因为它不会捕捉所有这样的边缘像素。这是所有这些 color fill 方法经常出现的问题，也是一个没有通用解决方案的问题。\n如果你想替换一个特定的已知颜色，而不是从图像本身选择一种颜色，那么可以使用 \u0026ldquo;-opaque\u0026rdquo; 图像操作符来代替。该函数还使用 \u0026ldquo;-fuzz\u0026rdquo; 因子设置来增加与给定颜色相匹配的颜色范围。\nfloodfill 的方法也很简单，因为它只会填充所选点周围的整个区域，而不会选择任何其他没有以某种方式连接的类似颜色的区域。\n你也可以通过使用 \u0026ldquo;-fuzz\u0026rdquo; 来扩大被填充的区域，以包括相似的颜色。在这种情况下，我们选择了一个足够高的值，也包括了交叉边界，允许洪水填充\u0026quot;泄漏\u0026quot;到图像的另一侧。\nconvert color_test.png -fill white \\ -draw \u0026#39;color 30,20 floodfill\u0026#39; color_floodfill.png convert color_test.png -fill white -fuzz 15% \\ -draw \u0026#39;color 30,20 floodfill\u0026#39; color_floodfill_fuzz.png 用颜色填充区域并非没有问题。颜色可能会越过薄薄的边界，渗入到不想要的区域，(请看背景图案上的 GIF，以证明这一点)。或者，它可能无法填满所选区域的边缘，（见反锯齿和泛滥填充问题）。但它确实有效。\nfilltoborder 就像 floodfill 一样，只是你指定了一个颜色，这个颜色的边界是要填充的区域，而不是填充过程中要替换的颜色。\n当然也建议在该边框颜色选择中加入 similar colors 的模糊因子，以进一步限制洪水填充。\nconvert color_test.png -fill white -bordercolor royalblue \\ -draw \u0026#39;color 30,20 filltoborder\u0026#39; color_filltoborder.png convert color_test.png -fill white -bordercolor blue \\ -draw \u0026#39;color 30,20 filltoborder\u0026#39; color_filltoborder2.png convert color_test.png -fill white -bordercolor blue -fuzz 30% \\ -draw \u0026#39;color 30,20 filltoborder\u0026#39; color_filltoborder_fuzz.png 最后的绘制颜色方法是 reset，它只是将整个图像替换或重置为填充颜色。在这种情况下，实际选择的像素对结果没有任何影响。\nconvert color_test.png -fill white \\ -draw \u0026#39;color 30,20 reset\u0026#39; color_reset.png 这实际上是非常有用的，因为它提供了一种简单的方法从现有图像生成纯色（或平铺图像）画布。(请参见 Canvases Sized to an Existing Image)以了解此方法和其他做同样事情的方法。\n未来：使用 \u0026ldquo;-tile\u0026rdquo; 图案来填充该区域。\nMatt 填充原语 matte 绘制原语的工作方式与上述 color 原语完全相同，只是它不会替换所选区域的颜色，只会替换所选区域的 matte 通道。（也就是只有 alpha 或 matte 通道被这些填充函数调整）。\n就像 color 填充函数一样，matte 值使用的是填充色（除非用 \u0026ldquo;-tile\u0026rdquo; 作为 alpha value 的来源）。\n这里我们使用上面同样的 color floodfill 例子，但这里只调整 matte 通道，使填充部分完全透明。也就是说，原来的颜色仍然存在，只是透明而已!\nconvert color_test.png -fill none \\ -draw \u0026#39;matte 30,20 floodfill\u0026#39; matte_floodfill.png convert color_test.png -fill none -fuzz 15% \\ -draw \u0026#39;matte 30,20 floodfill\u0026#39; matte_floodfill_fuzz.png 也可以使用 matte reset 函数使整个图像变成半透明的。当然在这种情况下，我们必须输出到 PNG，它可以接受半透明颜色的图像。\nconvert color_test.png -fill \u0026#39;#00000080\u0026#39; \\ -draw \u0026#39;matte 30,20 reset\u0026#39; matte_reset.png 注意，在操作中没有使用 black 颜色分量，只使用了颜色的 matte 分量。图像的原色保持原样。\n未来：使用 \u0026ldquo;-tile\u0026rdquo; 模式来制作有趣的哑光效果。\ncolor 和 matte 都是完全替换颜色的函数，它总是会产生一个布尔（all or nothing）类型的颜色替换。因此，这些区域的边缘总是会显示出 Aliasing 效果。\n正因为如此，除了设置 GIF 图像的透明区域（也是布尔型）外，一般来说，这些都不是一般图像显影的好图像运算符。不过也不是全无用处，从背景去除的例子中可以看出。\n关于绘图命令的具体内容 像素坐标 [-draw](https://imagemagick.org/Usage/option_link.cgi?draw) 命令（以及IM中的许多其他命令）使用的是所谓的\u0026quot;像素坐标\u0026rdquo;。也就是 \u0026ldquo;10,10\u0026rdquo; 的坐标是左上角往下10个像素的中心。\n在这个坐标系中，0,0 是左上角像素的中心，w-1,h-1 是右下角的中心。实际的边缘位于 -0.5,-0.5 和 w-0.5,h-0.5，中心像素（如果图像是奇数大小）位于 \u0026lsquo;(w-1)/2,(h-1)/2\u0026rsquo;。\n然而，当您对图像进行数学处理时（如使用扭曲时），实际的像素没有实际意义，因此它使用\u0026quot;图像坐标\u0026rdquo;。在这个系统中，图像的实际边缘在 \u0026lsquo;0,0\u0026rsquo; 和 \u0026lsquo;w,h\u0026rsquo; 处。而图像的中心（可能是，也可能不是像素的中心）在 \u0026lsquo;w/2,h/2\u0026rsquo;。\n要将 \u0026lsquo;像素坐标\u0026rsquo; 转换为图像坐标，请加上 ½ 如左上角像素的中心是 \u0026lsquo;0.5,0.5\u0026rsquo;，右下角像素的中心是 \u0026lsquo;w-0.5,h-0.5\u0026rsquo;。 例如：小图像中的圆心\n绘制伽马和色域校正 和几乎所有的 ImageMagick 操作一样， [-draw](https://imagemagick.org/Usage/option_link.cgi?draw) 是一个线性运算符，因此在线性 RGB 色彩空间中工作。这意味着，为了得到平滑的边缘，你可能需要对图像进行一些伽玛校正，然后再保存，这样就可以使用非线性（伽玛校正）的sRGB色彩空间来存储。\n例如，如果你画了一个大圆，然后保存它\u0026hellip;\nconvert -size 81x81 xc:black -fill white -draw \u0026#39;circle 40,40 40,3\u0026#39; \\ circle_raw.png 看看圆圈的边缘，其实看起来并不是真的很光滑。你可以看到明显的阶梯效果。\n那是因为你是在线性 RGB 色彩空间中画的圆。但是你却把图像保存成了真正的 sRGB 色域！这就导致了你的图像在保存的过程中出现了明显的阶梯效果。\n为了解决这个问题，我们需要在保存图像之前给图像添加一个伽玛校正。\nconvert -size 81x81 xc:black -fill white -draw \u0026#39;circle 40,40 40,3\u0026#39; \\ -gamma 2.2 circle_gamma.png 现在，圆圈边缘实际上看起来光滑圆润，就像它们应该的那样。\n如果你想正确地做这件事，我们真的应该使用色彩空间进行修正。然而，由于IM假设RGB是保存的默认色彩空间，你需要做一些棘手的处理来让它正确地做事情。\nconvert -size 81x81 xc:black -set colorspace RGB \\ -fill white -draw \u0026#39;circle 40,40 40,3\u0026#39; \\ -colorspace sRGB circle_sRGB.png 请注意，sRGB色彩空间（这是保存图像的正确方法）与简单地应用2.2伽玛校正并不完全相同。然而，两者之间的结果差异很小，只有在非常非常粗糙的图像中才能看到。 在IM v6.7.5-1之前，色彩空间名称 \u0026ldquo;sRGB\u0026rdquo; 和 \u0026ldquo;RGB\u0026rdquo;（线性-RGB）实际上是颠倒的。因此，在旧版本的IM中，上面的两个标签应该被调换。\n要使用真实的图像（在IMv6中）正确地绘制（或进行任何\u0026quot;线性\u0026quot;图像处理），你需要首先删除任何现有的伽玛，处理图像，然后恢复该伽玛校正。更多细节请参见使用色域校正调整大小。\n下面是一个在真实图像上绘图的例子\u0026hellip;。首先是没有任何颜色校正（原始），然后是伽玛和色域校正。\nconvert rose: -fill none -stroke white -draw \u0026#39;line 5,40 65,5\u0026#39; rose_raw.png convert rose: -gamma .454545 \\ -fill none -stroke white -draw \u0026#39;line 5,40 65,5\u0026#39; \\ -gamma 2.2 rose_gamma.png convert rose: -colorspace RGB \\ -fill none -stroke white -draw \u0026#39;line 5,40 65,5\u0026#39; \\ -colorspace sRGB rose_sRGB.png 正如你所看到的，通过使用伽玛或色彩空间校正，线条变得非常平滑，没有锯齿状的\u0026quot;楼梯\u0026quot;别离效果，比直接绘制时可以看到。(你需要一个很好的显示器才能看到它)\n上面的线条是用 [-stroke](https://imagemagick.org/Usage/option_link.cgi?stroke) 颜色绘制的。您可以使用 [-fill](https://imagemagick.org/Usage/option_link.cgi?fill) 来绘制线条，并得到同样的结果，但这样您就不能使用 [-strokewidth](https://imagemagick.org/Usage/option_link.cgi?strokewidth) 来控制线条粗细。更多信息请参见下面的\u0026rdquo;描边颜色设置\u0026quot;。 色域名称实际上是使用\u0026rsquo;sRGB\u0026rsquo;色彩空间的值来定义的，但通过绘制应用，就好像图像是在线性RGB色彩空间中一样。因此，对命名的颜色（不是\u0026quot;白\u0026quot;或\u0026quot;黑\u0026rdquo;）使用上述伽玛校正将导致这些颜色变得失真。在这种情况下，最好不要使用伽玛或色域校正，这样命名的颜色就会正确映射。 命名的\u0026rsquo;sRGB\u0026rsquo;颜色与图像的色彩空间的正确映射，将作为IMv7开发的一部分被修正。\n描边、描边宽度和填充的相互作用 [-stroke](https://imagemagick.org/Usage/option_link.cgi?stroke) 和 [-strokewidth](https://imagemagick.org/Usage/option_link.cgi?strokewidth) 选项用于在字体边缘绘制轮廓。\n这些选项通常与 [-fill](https://imagemagick.org/Usage/option_link.cgi?fill) 一起使用，以使文字更有趣，而不费力。\nconvert -size 380x70 xc:lightblue -pointsize 50 -font Chisel \\ -fill green -stroke black -draw \u0026#39;text 10,55 \u0026#34;Black Border\u0026#34;\u0026#39; \\ stroke_font.jpg 默认设置是 -strokewidth 1 和 -stroke None。\n但这样做会使轮廓笔画不可见，只留下 [-fill](https://imagemagick.org/Usage/option_link.cgi?fill) 的颜色，你不会看到它。\n当 -strokewidth 为 \u0026ldquo;不可见 \u0026ldquo;时， -strokewidth 唯一的效果是对字体大小属性的影响，也就是说它仍然可以影响字体定位和 Label 和 Caption 图片生成的大小。否则，宽度在你使笔画可见之前是没有可见效果的。\n为了了解 [-strokewidth](https://imagemagick.org/Usage/option_link.cgi?strokewidth) 对字体外观的实际影响（当使其可见时），我在这里绘制了一些不同宽度的文字，从 \u0026ldquo;turned off\u0026rdquo; 到越来越大。\nconvert -size 320x420 xc:lightblue -pointsize 70 -font Vademecum \\ -fill red -stroke none -draw \u0026#39;text 30,80 \u0026#34;Stroke -\u0026#34;\u0026#39; \\ -fill red -stroke black -strokewidth 0 -draw \u0026#39;text 30,160 \u0026#34;Stroke 0\u0026#34;\u0026#39; \\ -fill red -stroke black -strokewidth 1 -draw \u0026#39;text 30,240 \u0026#34;Stroke 1\u0026#34;\u0026#39; \\ -fill red -stroke black -strokewidth 2 -draw \u0026#39;text 30,320 \u0026#34;Stroke 2\u0026#34;\u0026#39; \\ -fill red -stroke black -strokewidth 3 -draw \u0026#39;text 30,400 \u0026#34;Stroke 3\u0026#34;\u0026#39; \\ stroke_table.jpg 请注意，从上面的例子中，设置 -strokewidth 为 \u0026ldquo;0\u0026rdquo; 与设置 -stroke 颜色为 \u0026ldquo;none\u0026rdquo;（默认值）是不同的。前者会画出一个非常非常细的笔触轮廓，而后者则会有效地关闭它。在这两种情况下，笔触仍然会被绘制。\n然而你也应该注意到，即使 -strokewidth 为 \u0026ldquo;0\u0026rdquo;，图像的轮廓也会比普通的 filled 图像（使用 -stroke 颜色为 \u0026ldquo;none\u0026rdquo;）扩大非常小。\n最后，使用任何小于 \u0026ldquo;1.0\u0026rdquo; 的宽度都不能正常工作。在这种情况下，你应该谨慎行事。\n但是请记住， -strokewidth 也是一个浮点设置。也就是说，\u0026ldquo;0.5\u0026rdquo; 的笔画宽度也是有效的。然而，通常只有当您试图在关闭防锐化功能的情况下绘制薄的位图圆时，这才是重要的。\n下面是一个使用超大笔触宽度的例子。\nconvert -size 320x100 xc:lightblue -font Candice -pointsize 72 -fill white \\ -stroke black -strokewidth 15 -draw \u0026#34;text 25,65 \u0026#39;Anthony\u0026#39;\u0026#34; \\ stroke_thick.jpg 请注意， -strokewidth 可以向内和向外扩展线条。下面是同样的例子，但是重新绘制了字体，没有笔画轮廓，去掉了很粗的笔画的内侧部分。\nconvert -size 320x100 xc:lightblue -font Candice -pointsize 72 -fill white \\ -stroke black -strokewidth 15 -draw \u0026#34;text 25,65 \u0026#39;Anthony\u0026#39;\u0026#34; \\ -stroke none -draw \u0026#34;text 25,65 \u0026#39;Anthony\u0026#39;\u0026#34; \\ stroke_outline.jpg 更多使用描边的例子请看复合字体效果。请特别看一下\u0026rdquo;气球效果\u0026quot;。\n绘制（描边）线条 IM中的默认画线有一些奇怪的行为，值得了解。下面就为大家介绍一下默认画线\u0026hellip;\nconvert -size 100x40 xc:lightblue \\ -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line_default.jpg 你可以用 -fill 选项设置线条的颜色。\nconvert -size 100x40 xc:lightblue \\ -fill white -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line.jpg 此外，你还可以通过设置 [-stroke](https://imagemagick.org/Usage/option_link.cgi?stroke) 颜色，使线条稍微粗一些。\nconvert -size 100x40 xc:lightblue \\ -fill white -stroke black -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line_stroke.jpg 但是我们用 -fill 选项指定的白色是怎么回事呢？\n这就是在 ImageMagick 中绘制线条的棘手之处。该程序所做的实际上是将线条视为一个约1像素宽的填充对象。这是自然的，因为通常情况下，多条线通常用于扫出一个要填充的区域。\n所以，就像我们在上一节中使用字体的描边一样，IM 用填充色绘制线条（或对象），然后用描边色在其周围绘制。结果就是，现在上面的描边色线条稍微粗了一点，填充色完全隐藏在下面。如果你把描边色做成半透明的，就可以让这个填充色再次显现出来。\n综上所述，线条会出现在 -fill 颜色下绘制，但一旦 -stroke 颜色被定义为默认的\u0026quot;无\u0026quot;或\u0026quot;透明\u0026quot;颜色以外的颜色，该选项就没有任何意义了。\n选项 -linewidth 实际上只是 -strokewidth 的别名，不应该被使用。\n例如，你可能会认为这个命令会产生很粗的线条。确实如此，但由于 -stroke 的颜色是不可见的，所以你看不到它。你只能看到线条的一个像素宽的区域的内部\u0026quot;填充\u0026rdquo;。\nconvert -size 100x40 xc:lightblue \\ -fill white -strokewidth 3 -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line_fill_3.jpg 以上的结果其实我认为是一个 BUG，什么都没画，因为没有\u0026rsquo;区域\u0026rsquo;填充，也没有设置线的\u0026rsquo;描边颜色\u0026rsquo;。什么都没有画，因为没有\u0026quot;区域 \u0026ldquo;需要填充，也没有设置线的\u0026quot;笔触颜色\u0026rdquo;。IM 目前这样做的原因是为了避免新用户的混淆，但实际上这只会给高级用户带来问题。详见《绘制填充边界》。\n但如果同时定义了描边颜色，就会得到要求的粗线\u0026hellip;\nconvert -size 100x40 xc:lightblue \\ -stroke black -strokewidth 3 -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line_stroke_3.jpg 如果将 -strokewidth 设置为1，则上面的一行将被完全覆盖。\nconvert -size 100x40 xc:lightblue \\ -stroke black -strokewidth 1 -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line_stroke_1.jpg 当然当你掌握了这些知识后，你就可以利用这些知识进行创作，就像画字体一样。\nconvert -size 100x40 xc:lightblue \\ -stroke black -strokewidth 5 -draw \u0026#34;line 5,35 95,5\u0026#34; \\ -stroke white -strokewidth 2 -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line_multi.jpg 在这里，我使用了最薄的 -strokewidth 设置为 \u0026ldquo;0\u0026rdquo;，就像我对上述字体所做的一样。\nconvert -size 100x40 xc:lightblue \\ -fill white -stroke black -strokewidth 0 -draw \u0026#34;line 5,35 95,5\u0026#34; \\ line_stroke_0.jpg 这就产生了一个非常奇怪的结果，即由黑点和灰段组成的点线。这是笔触、填充和背景色之间奇怪的\u0026quot;色拍频率\u0026quot;的结果。\n下面是线条的放大图\u0026hellip;\nconvert -size 25x10 xc:lightblue \\ -fill white -stroke black -strokewidth 0 -draw \u0026#34;line 2,8 22,1\u0026#34; \\ -scale 400% line_stroke_0_white.jpg 颜色节拍频率 \u0026ldquo;的效果与\u0026quot;声音节拍\u0026quot;的效果并无二致，当你有两把非常轻微的不调的吉他时，你会得到这样的效果。在这种情况下，你会得到一个黑点，其中笔触颜色完全覆盖了基本的填充颜色，你会得到一个灰色的点，其中笔触颜色与填充和背景颜色混合。 颜色混合是反锯齿过程的自然结果，IM使用反锯齿过程来尝试改善线条和其他绘制对象的外观。更多信息请参见 IM 中的抗锯齿讨论和示例页面。\n需要注意的是，这种效果只出现在倾斜的线条上，而不是纯水平或垂直的线条，因为在这些线条上，别名没有影响，因此也就没有\u0026quot;色拍频率\u0026quot;的效果。\nconvert -size 100x40 xc:lightblue \\ -fill white -stroke black -strokewidth 0 -draw \u0026#34;line 5,20 95,20\u0026#34; \\ line_stroke_horz.jpg 在这里，我在放大的视图上使用了不同的底层填充颜色，所以你可以看到颜色如何改变结果的节拍。\nconvert -size 25x10 xc:lightblue \\ -fill none -stroke black -strokewidth 0 -draw \u0026#34;line 2,8 22,1\u0026#34; \\ -scale 400% line_stroke_0_none.jpg convert -size 25x10 xc:lightblue \\ -fill red -stroke black -strokewidth 0 -draw \u0026#34;line 2,8 22,1\u0026#34; \\ -scale 400% line_stroke_0_red.jpg convert -size 25x10 xc:lightblue \\ -fill black -stroke black -strokewidth 0 -draw \u0026#34;line 2,8 22,1\u0026#34; \\ -scale 400% line_stroke_0_black.jpg 让我们把它和无 stroke 相比\u0026hellip;\nconvert -size 25x10 xc:lightblue \\ -fill black -stroke none -draw \u0026#34;line 2,8 22,1\u0026#34; \\ -scale 400% line_stroke_-_black.jpg 正如你所看到的，当绘制非常细的线条时，你可以通过使用相同的填充和描边颜色，或者将其中一种颜色设置为无来减少\u0026quot;节拍\u0026rdquo;。虽然后者是最好的主意，但前者可能对你的特定编程需求更实用。\n注意，填充线的粗细是 \u0026ldquo;0\u0026rdquo;。但描边线可以有更大的厚度。它也是一个浮点值! 2.5像素宽的线条是完全有效的。\n这些结果不仅是由于笔画宽度为0的bug，导致颜色跳动，而且在没有实际需要填充的区域时，\u0026ldquo;填充色\u0026quot;被画出了额外的1.0直径厚度。这我也认为是一个bug。请看绘制填充边界。\n绘制填充边界 关于各种绘制原语，还有一些其他要点需要您注意。\n笔画宽度对于大于 1.0 的浮点值工作得很好，但对于小于 1.0 的值似乎会崩溃。这是由于使用的实现算法造成的，而不仅仅是因为它是错误的，因为它在较大厚度的线条上工作得很好。\n基本上，如果你使用的笔画宽度为零，你可以期待没有笔画颜色会被添加。相反，你会得到一种节拍模式，当线条穿过像素的实际\u0026quot;中心\u0026quot;时，笔触颜色就会达到全部强度。\n真正应该发生的是，添加到像素上的颜色数量应该反映出被绘制的线条的面积，而不是像素与该线条的距离。因此，零宽度的线条不应该给图像添加任何颜色，而厚度小于1.0的线条应该只添加较少的颜色。\n请看上面的例子 Draw Lines, with StrokeWidth and Stroke。\n另一个问题是，填充颜色没有应用到正在绘制的形状（多边形）的边缘，而是应用到更远的半像素处。这包括没有应用\u0026quot;描边\u0026quot;的情况，而边缘应该是精确的。它也包括画一条\u0026quot;线\u0026rdquo;，它的填充厚度实际上是\u0026quot;零\u0026rdquo;。\n基本上，如果你画了一条线，没有启用描边，从技术上讲，你应该看到，没有线，因为它没有\u0026quot;填充\u0026quot;厚度。相反，线条的绘制至少包括1个像素宽的\u0026quot;填充\u0026quot;颜色。这是出于历史原因，一般来说可以避免新用户对IM的混淆。不幸的是，这对高级用户来说是不正确的。\n这意味着，如果您只使用填充色绘制两个多边形，并共享一个边缘，该边缘将重叠1个像素，因为每个多边形的所有边缘都比它大半像素。换句话说，多边形和其他形状并不适合在一起，而是重叠的。\n例如，在这里我试着使用 draw 把一张图片分成两半（在白色上绘制黑色）。要做到这一点，我画了两个多边形，共享一个边缘，完全没有重叠。由此产生的\u0026quot;微小\u0026quot;图像，已被放大显示。\nconvert -size 10x10 xc: -draw \u0026#39;polygon 2,-1 7,10 10,10 10,-1\u0026#39; bound_left.gif convert -size 10x10 xc: -draw \u0026#39;polygon 2,-1 7,10 -1,10 -1,-1\u0026#39; bound_right.gif convert bound_left.gif bound_right.gif -compose Plus -composite bound_add.gif 两个黑色的部分(这是实际绘制的)实际上是相互重叠的! 换句话说，尽管我们试图使用绘制的多边形分别绘制这两个区域，但填充的区域比要求的略大。\n我还将两张图片加（加合成）在一起，这样你就可以实际看到绘制的黑色区域的重叠。如果两个多边形是完美契合的，那么 \u0026ldquo;添加 \u0026ldquo;的图画将是纯白色的。\n实际的重叠量相当于默认的 -strokewidth 1.0 设置。因此，通常情况下，这个额外的区域会被一个正常的笔画宽度所覆盖。然而它可能会造成一些实际问题。\n旁白: 对于一个完整的连接测试，你会在黑色背景上生成50%的灰色区域，然后把它们加在一起。这样你就可以看到这些区域是否不仅 \u0026ldquo;重叠\u0026rdquo;（如上图所示），而且还可以测试当你把这些区域加在一起时，它们是否 \u0026ldquo;重叠不足\u0026rdquo;（在填充的区域之间留下一个间隙）。所得到的图像应该是一个完美平滑的50%灰色，沿连接处没有颜色变化。透明度检查会涉及到，在一个完全透明的背景上应该使用50%透明，50%灰色的颜色。\n要查看一个完美的剪切和重新添加的例子，基于一个单一的蒙版图像，请参阅组成方法的例子，组成 DstOut。\n未来BUG修复：填充的区域应该是精确的，但为了在绘制形状时进行补偿，默认的 \u0026ldquo;描边颜色 \u0026ldquo;应该设置为填充颜色（除非它本身被特别设置）。\nMVG - 魔法矢量图形 上面显示的原语构成了所有 -draw 操作的基础。它们共同构成了 ImageMagick 中特殊内部语言的起点，称为 Magick Vector Graphics 语言。关于这种语言的更多细节，请参见IM网站上的 MVG 原语和语法摘要。\n这种 \u0026ldquo;MVG\u0026rdquo; 语言的设计目标是让 ImageMagick 处理更复杂的 SVG（可缩放矢量图形）语言。它通过尝试将给定 SVG 格式的图像转换为更简单的内部 MVG 格式来实现。更多细节请看下面的 SVG 处理。\n因此，你上面看到的只是 -draw 操作符的一小部分功能。如果你想绘制复杂的对象，我建议你使用SVG编辑器（如 \u0026ldquo;Sodipodi\u0026rdquo;）为对象创建一个单独的SVG格式图像。参见下面的非IM矢量图形程序）。\n与 SVG 不同，MVG 没有任何形式的\u0026quot;容器\u0026quot;或图像命令集。在转换过程中，这些命令都被删除，以产生一个简化的 MVG 绘图命令序列。相反，它使用图形上下文的概念来保存和恢复各种绘图设置，这就是我们现在要看的。\n命令行设置与 MVG 设置 首先，您通过命令行选项设置的几乎所有设置，绘制原语使用的设置在 MVG 绘制命令中都有直接对应的内容。\n通过命令行选项（如 -strokewidth）或使用 MVG 绘图字符串（如 strok-width）中的设置，两者之间的主要区别在于 MVG 设置只在 MVG 命令字符串的持续时间内有效。\n一般绘图设置的总结:\n__cmd_option__ __draw_MVG__ __Argument__ -fill fill color/tile for inside shapes -tile fill image tile, replaces fill color -stroke stroke line color/tile around the shapes -strokewidth stroke-width pixel width +antialias stroke-antialias 0/1 aliasing line edges -font font font_name / font_file -family font-family ? -weight ? ? -stretch ? ? -pointsize font-size height in points -kerning - extra inter-character spacing +antialias text-antialias 0/1 aliasing drawing text -box text-undercolor fill color for font bounding box - decorate (None, Underline, LineThrough or Overline) -gravity gravity (None, North, South-East,...) -fuzz - color delta / percentage -bordercolor - color Notes:\n- no such option ? unknown 这些设置通常很好理解，因为它们经常使用，上面也有演示。\n字体、拉伸、样式和重量用于从 ImageMagick 字体列表中识别字体。然而，大多数人只是选择一个特定的字体和大小点来代替使用。因此，它们在IM中很少使用。 正如您所看到的，\u0026ldquo;color fill\u0026rdquo; 原语的特殊设置在 MVG 中并没有直接对应的设置。这就是 -bordercolor 和 -fuzz 因子设置。在使用 -draw 操作符之前，必须从命令行指定这些设置。\n有些 MVG 设置作为全局命令行设置可能更有用，比如字体绘制的 decorate 设置。\n警告： [-gravity](https://imagemagick.org/Usage/option_link.cgi?gravity) 不是 SVG 规范的一部分。在 MVG 中，它只用于文本和图像的放置以及对齐。目前没有与默认的\u0026quot;引力\u0026quot;效果分开的调整设置。然而，由于调整是 SVG 文本处理的一部分，这可能会在未来的某个时候改变。\n现在，全局命令行设置（在 MVG 绘制字符串之外）用于初始化你所应用的每个 -draw 操作的设置，这就是为什么你可以设置一个 -fill 颜色，然后你可以用它来绘制该颜色的圆。\nconvert -size 100x60 xc:skyblue -fill red \\ -draw \u0026#34;circle 50,30 40,10\u0026#34; draw_circle_global.gif 你可以在 MVG 参数 -draw 中本地覆盖全局设置\u0026hellip;\nconvert -size 100x60 xc:skyblue -fill red \\ -draw \u0026#34;fill green circle 50,30 40,10\u0026#34; draw_circle_override.gif 然而，在单个 -draw MVG 参数中设置的设置只在 -draw 操作期间存在。也就是说， -draw 中的设置只限于该次绘制，而不会带入以后单独的 -draw 参数中。\nconvert -size 100x60 xc:skyblue -fill red -draw \u0026#39;fill green\u0026#39; \\ -draw \u0026#34;circle 50,30 40,10\u0026#34; draw_circle_local.gif 如果你打算进行大量的操作，那么在单个 MVG 字符串中进行这些操作可能会比多个 -draw 操作更好。\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;fill green circle 41,39 44,57 fill blue circle 59,39 56,57 fill red circle 50,21 50,3 \u0026#34; draw_circle_multi.gif MVG 特定设置 其他控制线条和对象绘制方式的 MVG 设置，即使在使用原语操作时也需要了解。这些设置包括\u0026hellip;\n__draw_MVG__ __Description/Argument__ fill-opacity fill transparency, from 0.0 to 1.0 clip-rule fill style for crossed lines (evenodd, nonzero) stroke-opacity line transparency, number from 0.0 to 1.0 stroke-dasharray list of \u0026#39;on\u0026#39; and \u0026#39;off\u0026#39; lengths for lines stroke-dash stroke-linecap End of line look: butt round square stroke-linejoin Lines joins: butt miter round square stroke-miterlimit Angle when \u0026#39;miter\u0026#39; joins become \u0026#39;bevel\u0026#39; (or \u0026#39;butt\u0026#39;) 记住，所有 MVG 设置和绘图操作符的完整列表可以在 IM 网站的 MVG 原语和语法摘要中看到。\n让我们看看一些简单设置的效果\u0026hellip;\u0026hellip;\n# Stroke Opacity convert -size 100x60 xc:skyblue -fill none -stroke black \\ -draw \u0026#34; path \u0026#39;M 10,10 L 90,10\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-opacity 0.8 path \u0026#39;M 10,20 L 90,20\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-opacity 0.6 path \u0026#39;M 10,30 L 90,30\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-opacity 0.4 path \u0026#39;M 10,40 L 90,40\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-opacity 0.2 path \u0026#39;M 10,50 L 90,50\u0026#39;\u0026#34; \\ set_stroke_opacity.gif # Fill Opacity convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34; rectangle 5,10 15,50 \u0026#34; \\ -draw \u0026#34;fill-opacity 0.8 rectangle 20,10 30,50 \u0026#34; \\ -draw \u0026#34;fill-opacity 0.6 rectangle 35,10 45,50 \u0026#34; \\ -draw \u0026#34;fill-opacity 0.4 rectangle 50,10 60,50 \u0026#34; \\ -draw \u0026#34;fill-opacity 0.2 rectangle 65,10 75,50 \u0026#34; \\ -draw \u0026#34;fill-opacity 0 rectangle 80,10 90,50 \u0026#34; \\ set_fill_opacity.gif # Plain and Dashed Lines convert -size 100x60 xc:skyblue -fill none -stroke black \\ -draw \u0026#34; path \u0026#39;M 10,10 L 90,10\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 5 3 path \u0026#39;M 10,20 L 90,20\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 5 5 path \u0026#39;M 10,30 L 90,30\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 10 3 3 3 path \u0026#39;M 10,40 L 90,40\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 1 6 path \u0026#39;M 10,50 L 90,50\u0026#39;\u0026#34; \\ set_lines.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34; path \u0026#39;M 10,10 L 90,10\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 5 3 path \u0026#39;M 10,20 L 90,20\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 5 5 path \u0026#39;M 10,30 L 90,30\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 10 3 3 3 path \u0026#39;M 10,40 L 90,40\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-dasharray 1 6 path \u0026#39;M 10,50 L 90,50\u0026#39;\u0026#34; \\ set_lines_fill.gif # Note: Technically the second image should be the same as the first # as the \u0026#39;filled\u0026#39; lines contain no area. This I regard as a BUG. # Stroke Ends and Joins convert -size 100x60 xc:skyblue -fill white -stroke black -strokewidth 8 \\ -draw \u0026#34; path \u0026#39;M 20,20 L 20,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-linecap butt path \u0026#39;M 40,20 L 40,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-linecap round path \u0026#39;M 60,20 L 60,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-linecap square path \u0026#39;M 80,20 L 80,70\u0026#39;\u0026#34; \\ set_endcaps.gif convert -size 100x60 xc:skyblue -fill white -stroke black -strokewidth 5 \\ -draw \u0026#34; path \u0026#39;M 5,70 L 20,20 35,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-linejoin miter path \u0026#39;M 35,70 L 50,20 65,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-linejoin bevel path \u0026#39;M 55,70 L 70,20 85,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-linejoin round path \u0026#39;M 75,70 L 90,20 105,70\u0026#39;\u0026#34; \\ set_linejoin.gif convert -size 100x60 xc:skyblue -fill white -stroke black -strokewidth 5 \\ -draw \u0026#34; path \u0026#39;M 5,70 L 20,20 35,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-miterlimit 7 path \u0026#39;M 35,70 L 50,20 65,70\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke-miterlimit 6 path \u0026#39;M 65,70 L 80,20 95,70\u0026#39;\u0026#34; \\ set_miterlimit.gif stroke-miterlimit 的设置是相当难以演示的。这个属性定义了将 miter 连接变为 bevel 连接的角度。基本上对于非常尖锐的角度，一个斜面可以从两条线的实际接合处延伸很长的距离。这就为这个锐角设置了一个最大限度，当它变得太长时，就会使角点变钝。但请注意，它代表的是某种角度的三角值，而不是长度或距离。该值必须大于1.0。\n上面显示了对于我所显示的连接角度，斜角会突然转换成一个介于6到7之间的斜角。\n例如，1.414 的 troke-miterlimit 会将小于90度的任何角度的 \u0026ldquo;miter\u0026rdquo; 转换为 bevel 。4.0的 值（默认值）将小于约29度的角度转换为连接。而10.0的值可以将小于约11.5度的角度转换为斜面。\nSVG s路径绘制 SVG 路径是 SVG 的基本绘图原语。它用于绘制线型、圆、曲线、弧线等。SVG 路径的完整规范可以在 SVG 路径规范文档中找到。\n然而这并不是一个容易阅读的文档，因为它确实是为程序员而不是用户准备的，所以我将简化和总结路径规范\u0026hellip;\n字母是命令，而所有的数字（浮点）都是参数 逗号或空格可以作为参数分隔符，否则完全忽略 每个路径组件的最后两个参数 (x,y) 将成为该路径组件的终点(或\u0026quot;结\u0026rdquo;) 大写字母是指最终点的绝对坐标 小写字母是相对于前一个组件的终点而言的 例如 \u0026ldquo;M 1,2 L 3,4 L 2,4\u0026rdquo; 和 \u0026ldquo;M 1,2 L 4,6 L 6,2\u0026rdquo; 是一样的。 即在1,2上加了3,4，画线到4,6。 然后在1,2上加2,4，画出一条线到最后的坐标6,2。 每个元素的参数可以重复，不需要重新发布相同的路径字母，可以多加数字参数组。不过对于曲线，为了方便阅读，我建议你还是加上函数字母。 重复的参数 \u0026ldquo;M\u0026rdquo; 或 \u0026ldquo;m\u0026rdquo; 分别作为 \u0026ldquo;L\u0026rdquo; 或 \u0026ldquo;l\u0026rdquo; 处理。 例如：\u0026rdquo; M 1,2 3,4 5,6 \u0026quot; 和 \u0026quot; M 1,2 L 3,4 L 5,6 \u0026quot; 是一样的。 而：\u0026ldquo;m 1,2 3,4 2,4 \u0026quot; 与 \u0026quot; m 1,2 l 3,4 l 2,4 \u0026quot; 相同。 对于立方贝塞尔，所有的点（控制点和结点）都是相对于前一个路径组件的端点而言的。 请注意，您可以用绝对坐标或相对坐标来指定对象。因此，你可以用相对坐标来定义一个对象，只需提供一个初始的绝对\u0026quot;移动\u0026quot;坐标来定位整个路径。\n另一方面，你也可以使用其他的\u0026quot;图形内容\u0026quot;命令来移动整个图形在\u0026quot;视图框\u0026quot;或\u0026quot;转换\u0026quot;中的位置（见下文）。因此，在 SVG 路径中使用绝对或相对坐标并不重要。 移动、线条和路径闭合是学习 SVG 对象路径的最初起点。\n# Open, Completed and Closed Paths (same points) convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 40,10 L 20,50 90,10 70,40\u0026#39;\u0026#34; path_open.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 40,10 L 20,50 90,10 70,40 40,10\u0026#39;\u0026#34; path_complete.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 40,10 20,50 90,10 70,40 Z\u0026#39;\u0026#34; path_closed.gif 但是请注意，\u0026lsquo;z\u0026rsquo; 只是关闭循环。它并没有创建一个单独的对象。因此，两个\u0026quot;关闭\u0026quot;的路径仍然被归类为一个单一的绘制对象，无论它们是重叠的还是完全断开的。\n这里我们展示了两个闭合但重叠的循环，在同一方向上绘制。由于只使用了一条路径，所以对象是一个单一的对象，fill-rule 设置控制了重叠区域的填充方式。\n# Overlapping Paths and Fill Rule convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;fill-rule evenodd \\ path \u0026#39;M 40,10 20,20 70,50 Z M 20,40 70,40 90,10 Z\u0026#39; \u0026#34; path_evenodd.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;fill-rule nonzero \\ path \u0026#39;M 40,10 20,20 70,50 Z M 20,40 70,40 90,10 Z\u0026#39; \u0026#34; path_nonzero.gif 由于对象围绕中心以相同的角度方向绘制，两个闭合的循环将包含一个周期值为2的区域，因此 evenodd 规则使得该区域未被填充，而非零的 nonzero 规则则将其填充。但是请注意，所有的路径都是可见的，因为它们实际上是同一个对象。\n绘制路径的方向是非常重要的，一般情况下，所有的路径相对于对象的\u0026rsquo;内部\u0026rsquo;应该绘制在完全相同的方向上。\n例如这里我将第二个对象画成与第一个对象相反的方向。因此，当两个对象重叠时，该区域被圈出 \u0026lsquo;0\u0026rsquo; 次。也就是说，无论使用什么 fill-rule，它都将是未被填充的，形成一个\u0026rsquo;洞\u0026rsquo;。\n# Overlapping Closed Objects, Second object drawn in reverse convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;fill-rule evenodd \\ path \u0026#39;M 40,10 20,20 70,50 Z M 20,40 90,10 70,40 Z\u0026#39; \u0026#34; path_rvs_evenodd.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;fill-rule nonzero \\ path \u0026#39;M 40,10 20,20 70,50 Z M 20,40 90,10 70,40 Z\u0026#39; \u0026#34; path_rvs_nonzero.gif 这意味着你可以在物体上产生一个\u0026quot;洞\u0026rdquo;，通过反转方向，使物体的\u0026quot;内部\u0026quot;保持在行进方向的同一侧。\n# An object with a reversed drawn hole! convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,10 20,55 70,50 80,5 Z M 50,20 60,40 40,30 Z\u0026#39; \u0026#34; path_with_hole.gif 无论 fill-rule 的设置如何，结果都是一样的，因为这个洞是\u0026rsquo;偶数\u0026rsquo;和\u0026rsquo;零\u0026rsquo;，所以是未填充的。\n当然，如果您使用一个完全独立的 path 元素，您将生成一个完全独立的对象。在这种情况下，fill-rule 不适用，而只是按照给定的顺序，将对象画在彼此的上方。\n# Separate paths are separate objects convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 40,10 20,20 70,50 Z\u0026#39; path \u0026#39;M 20,40 70,40 90,10 Z\u0026#39; \u0026#34; path_separate.gif 未来：坐标对准路径 \u0026ldquo;H\u0026rdquo; 和 \u0026ldquo;V\u0026rdquo;。\n椭圆弧是 SVG 路径的圆圈绘制功能\u0026hellip;\nlarge 和 sweep 参数特别重要，因为它们用于决定从起点到终点的四种弧线中的哪一种。\nlarge 和 sweep 这两个标志定义了四条弧线中哪一条弧线将连接这两个点。\n# Elliptical Arcs : A radius_x,y angle large,sweep x,y convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 30,15 0 0,0 70,20\u0026#39;\u0026#34; path_arc.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 30,15 0 0,1 70,20\u0026#39;\u0026#34; path_arc2.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 30,15 0 1,0 70,20\u0026#39;\u0026#34; path_arc3.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 30,15 0 1,1 70,20\u0026#39;\u0026#34; path_arc4.gif 第二个标志 sweep 简单地决定了弧线路径的方向的哪一边应该被绘制。\nlarge 标志是用来选择较长的路径，绕着椭圆的中心走。这是设置的角度的弧线将大于180度。如果关闭，你会得到较小的\u0026rsquo;弧\u0026rsquo;，不包含椭圆的中心，并且弧线的角度小于180度。\n用 \u0026ldquo;Z\u0026rdquo; 来关闭弧线，只是画出最后的直线段。\n要创建一个完整的椭圆或圆，你至少需要两个\u0026rsquo;弧线\u0026rsquo;段，从第一点到第二点，然后回到第一点。两条弧线都应该有相同的 sweep 设置，所以弧线将在不同的边上，有不同的移动方向。其中一条弧线应该有 large 的设置。\n# Closed and angled elliptical arcs (defined by two edge points) convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 30,20 20 0,0 70,20 Z \u0026#39;\u0026#34; path_arc5.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 30,20 20 1,1 70,20 Z \u0026#39;\u0026#34; path_arc6.gif convert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 30,20 20 0,0 70,20 \\ A 30,20 20 1,0 30,40 Z \u0026#39;\u0026#34; path_arc7.gif 请注意，如果直线太长，在给定的角度下无法适应给定的椭圆大小，椭圆的大小将被放大，以适应以椭圆为中心的直线，这意味着通过使用小数字作为轴半径，你可以只指定轴长的比例，并保证直线路径通过椭圆的中心点。\n这意味着，通过使用小数字的轴半径，你可以只指定一个轴长的比例，并保证直线路径穿过椭圆的中心点。也就是说，路径从椭圆的一侧到另一侧形成一个椭圆直径。这并不是椭圆的主轴或次轴，只是一个椭圆的直径。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 3,2 45 0,0 70,20\u0026#39;\u0026#34; path_arc_x.gif 当然，使用长度为 \u0026ldquo;1,1\u0026rdquo; 的结果是一个完美的半圆，从一个点，到下一个点。在这种情况下，椭圆角不会有任何区别。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 1,1 0 0,0 70,20\u0026#39;\u0026#34; path_hcircle.gif 对于以两点为中心的全圆，用\u0026hellip;\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 1,1 0 0,0 70,20 A 1,1 0 1,0 30,40 Z\u0026#39;\u0026#34; path_circle.gif SVG 对 \u0026ldquo;弧线\u0026quot;的定义也声明，如果两个半径中的任何一个是0，那么就应该画一条直线。因此，任何半径为 \u0026ldquo;0,0\u0026rdquo; 的圆弧，都只是一条简单的直线圆弧\u0026hellip;\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 0,0 0 0,0 70,20\u0026#39;\u0026#34; path_arc_line.gif 如果你为弧线指定了一个非常大的半径，而没有为回程路径指定 large sweep，你可以在两点之间创建该半径的透镜形状。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 30,40 A 50,50 0 0,0 70,20 A 50,50 0 0,0 30,40 Z\u0026#39;\u0026#34; path_lens.gif 这种类型的弧线是一个关键特征。它可以让你很容易地把原本是直线的东西变成一条小而明显的曲线。\n例如，与其说是一个简单的三角形，不如说是一个\u0026hellip;\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 20,55 L 25,10 L 70,5 L 20,55 Z\u0026#39; \u0026#34; triangle.gif 你可以用一个大半径的弧线代替每条线，让它们只是有轻微的曲线。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 20,55 A 100,100 0 0,0 25,10 A 100,100 0 0,0 70,5 A 100,100 0 0,0 20,55 Z\u0026#39; \u0026#34; triangle_curved.gif 线条的端点没有变化，所发生的只是每个 \u0026ldquo;L\u0026rdquo; 被一个弧线段代替。然而弧线的大小应该与线的长度成正比。由于我没有这样做，较长的对角线比其他两条线有更深的曲线。\n请记住，当调整对象的大小或比例时，你也应该将半径的比例与线的长度相同，这样曲线的大小就会相应地调整，所以弧线的比例也会正确。\n请注意，sweep 标志可以控制曲线是向外凸起还是向内凸起，这取决于每个路径段的绘制方向(见上文)。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 20,55 A 100,100 0 0,0 25,10 A 100,100 0 0,1 70,5 A 100,100 0 0,1 20,55 Z\u0026#39; \u0026#34; triangle_bulge.gif 看起来 \u0026ldquo;静态\u0026quot;的直边三角形，现在看起来有点像充满风的帆。\n如果你真的想让线条完美的直，而不把它们转换回真正的线段，你可以通过使用弧线半径为零来关闭曲线。\n因此，弧线不仅适合生成椭圆和圆，而且对于绘制直线和微曲线段也很有用。它是一种非常通用的通用点到点的绘制路径。\n使用椭圆弧来生成分离的曲线段的一个简单的替代方法是使用四元贝塞尔段来代替，主要的区别是使用一个单一的控制点，而不是一个圆形半径来定义弧线。这也允许您将弧线偏向线段的一端，但代价是难以生成对称的弧线。\n当然，您也可以通过使用这两种方法来进行 mix-n-match。\n饼图示例 为了完成对弧线的使用，让我们举个例子，使用为它们生成圆楔。当然，你可能需要使用一些外部的三角数学（你的高中数学有多好？）来确定所需的最终路径点。\nconvert -size 140x130 xc:white -stroke black \\ -fill red -draw \u0026#34;path \u0026#39;M 60,70 L 60,20 A 50,50 0 0,1 68.7,20.8 Z\u0026#39;\u0026#34; \\ -fill green -draw \u0026#34;path \u0026#39;M 60,70 L 68.7,20.8 A 50,50 0 0,1 77.1,23.0 Z\u0026#39;\u0026#34; \\ -fill blue -draw \u0026#34;path \u0026#39;M 68,65 L 85.1,18.0 A 50,50 0 0,1 118,65 Z\u0026#39;\u0026#34; \\ -fill gold -draw \u0026#34;path \u0026#39;M 60,70 L 110,70 A 50,50 0 1,1 60,20 Z\u0026#39;\u0026#34; \\ -fill black -stroke none -pointsize 10 \\ -draw \u0026#34;text 57,19 \u0026#39;10\u0026#39; text 70,20 \u0026#39;10\u0026#39; text 90,19 \u0026#39;70\u0026#39; text 113,78 \u0026#39;270\u0026#39;\u0026#34; \\ piechart.jpg 请注意，所有的弧线都是画在 line path 的左边，并有相应的标志（使用 sweep 标志）。但如果弧线覆盖的角度大于180度，则需要设置 large 标志。见上面例子中最后一个 gold 组件。\n还要注意的是，你应该完整地画出每个部分，尽管这意味着你可能要画两次边界线。如果你不这样做，你很可能要么不会完全用颜色填充该部分，要么填充颜色会覆盖之前绘制的部分轮廓。\n避免重复绘制多条线的唯一方法是绘制所有填充区域，然后重复这样绘制轮廓。就是说你需要把所有的东西都画两遍，确保东西正确匹配。因此，将轮廓加倍可能是最简单的解决方案。\n立方贝塞尔曲线可以使用 c 函数定义两个控制点，以及最终的终点。对于使用最后一个控制点的镜像的持续立方贝塞尔曲线（对于连续曲线），你可以使用 s 函数。\n下面是一个例子。由于这个函数的复杂性，我预先准备了一个画布，显示控制点的位置，以及最后一个控制点的 assumed mirror。\n# Cubic Bezier: C control_1_x,y control_2_x,y x,y # Smooth \u0026#34; : S control_2_x,y x,y convert path_cubic_canvas.gif -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 10,30 C 10,4 50,4 50,30 S 90,55 90,30\u0026#39; \u0026#34; \\ path_cubic.gif 连接控制点和该路径段路径上的最终点的线（控制线）基本上定义了通过路径上该点的曲线方向。长的控制线会在该点产生一条更平滑的曲线，而短的控制线则会在该点产生一条更清晰的曲线。如果控制点与曲线的点相吻合（控制线长度为零），则曲线在该点有一个尖锐的不连续性，就像只用直线段一样。\n作为一个更实际的例子，下面的代码是从 IM 实例 Logo 生成器脚本中提取出来的，该脚本创建了 IM 实例 Logo 的曲线溅射区域。\n这个例子的棘手之处在于，我将我使用的立方贝塞尔路径字符串，转换为另一个路径，显示用于生成贝塞尔曲线的控制线。这让我可以看到曲线的控制线角度和长度，使得调整结果变得更加容易。只需要调整一组点就可以同时显示曲线和控制线，将错误控制在最小范围内。\ncurve=\u0026#34;M 12,27 C 7,37 18,50 18,60 S 0,80 10,94 S 40,74 50,78 S 60,99 76,95 S 72,70 75,65 S 95,55 95,42 S 69,37 66,32 S 67,2 53,7 S 43,17 35,22 S 17,17 12,27 Z\u0026#34; c_ctrls=`echo $curve | \\ sed \u0026#39;1s/\\([0-9]\\) *\\([0-9]\\)/\\1 M \\2/; s/S/M/g; s/C/ /;\u0026#39; -` convert -size 100x100 xc:white \\ -draw \u0026#34;stroke None fill Green path \u0026#39;$curve\u0026#39;\u0026#34; \\ -draw \u0026#34;stroke Red fill None path \u0026#39;$c_ctrls\u0026#39;\u0026#34; \\ curvy_splash.gif 如果你仔细观察图像，你会发现曲线的起点和终点有两条方向相反的控制线。对于一个封闭的连续路径来说，开始和结束的控制线应该在相同的角度（只是在镜面方向），当然也应该是相同的长度。这一点很重要，因为很容易弄错。\n沿着曲线的所有其他点只有一个控制点/线，它与曲线的绘制方向相反。该线段越长，曲线在该控制点处的 sharp 越低，长度为零则产生一个 point。\ns 函数在内部根据前一段的数据生成下一段的镜像控制点/线，从而产生曲线的平滑延续。\n关于这个路径函数的更多例子，请看《SVG：立方贝塞尔曲线命令》。\n手动生成贝塞尔曲线是比较直接的，不需要任何花哨的 GUI 工具。\n首先定义所有你想让曲线经过的坐标点，在列表的最后重复起始坐标。 现在将这个列表扩大，将所有的 x,y 坐标点加倍成对，并在每对坐标点前添加一个 s（Smooth Cubic）函数。每对中的第一个数字是控制点，连接到第二个数字代表曲线上的点。然而第一个点对却把这一点反过来了，第一个点是曲线的起点，第二个点代表第一个也是唯一一个反转的控制点。 将第一对坐标的函数字母由 \u0026lsquo;S\u0026rsquo; 改为 \u0026lsquo;M\u0026rsquo;，然后在这对坐标之间加一个 \u0026lsquo;C\u0026rsquo;。最后将第二对坐标的 \u0026lsquo;S\u0026rsquo; 去掉，完成初始的立方体（\u0026lsquo;C\u0026rsquo;）函数。 通过添加最后的 \u0026lsquo;Z\u0026rsquo; 来完成路径，关闭曲线。 请看上面的示例序列，它应该是怎样的。 此时您可以测试绘制您的路径。由于所有的控制线长度为零，所以路径将只由直线段组成。 现在您需要做的就是慢慢地、小心地调整控制线段的位置（每个 \u0026ldquo;S\u0026rdquo; 对的第一个坐标），以得到您想要的最终曲线。不要把控制线做得太长，或者方向不对，否则你会得到一条看起来非常滑稽的曲线。 为了帮助查看你的变化和发现错误，请使用上面的转换 \u0026ldquo;sed\u0026rdquo; 命令来绘制路径控制点和曲线控制点之间的控制线。但是请注意，零长度的控制线是不可见的，但是由于lin会产生一个尖锐的点，所以位置应该很明显。 最后，确保 \u0026ldquo;C\u0026rdquo; 之后的第一条控制点/线与终点控制点/线的位置完全相反。 交互式曲线的生成也可以通过使用一些矢量图形编辑器来实现。\n例如 Luis Guerra 报告说，\u0026ldquo;Inkscape\u0026rdquo; 生成的贝塞尔曲线可以使用 \u0026ldquo;Edit -\u0026gt; XML Editor\u0026rdquo; 功能，然后选择你想要控制点的路径或形状。\n你知道有什么其他的方法可以用GUI工具来提取贝塞尔曲线（在曲线上每个点给出两个或一个控制点）。或者是一些其他的技术来生成这样的曲线？请发邮件给我! 我很乐意听到它。你将会像其他人一样，被记入该技术的名下。\n二次方贝塞尔函数是立方贝塞尔函数的简化，当两个控制点合并成一个控制点时。同样，你可以用 \u0026lsquo;Q\u0026rsquo; 函数开始曲线，然后用 \u0026lsquo;T\u0026rsquo; 函数继续曲线，镜像最后一个控制点。\n# Quadratic Bezier: Q control_x,y x,y # Smooth \u0026#34; : T x,y convert path_quad_canvas.gif -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 10,30 Q 20,4 50,30 T 90,30\u0026#39; \u0026#34; \\ path_quad.gif 但我要提醒您，\u0026ldquo;T\u0026rdquo; 继续函数只适用于连接间距相等的点的路径。我不推荐使用它。\n二次方曲线的优点是可以替代椭圆弧，因为它使用的是实际的位置，而不是弧线的半径。它也可以使弧线偏向于一端而不是另一端，这在使用椭圆弧时并不实用。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;path \u0026#39;M 20,55 Q 30,32 25,10 Q 50,1 70,5 Q 50,45 20,55 Z\u0026#39; \u0026#34; triangle_bulge_2.gif 在这种情况下，弧线不是那么均匀，你得到的东西就像一个倒立的鲨鱼鳍，而不是一个帆。\n请记住四边形弧线是抛物线，而椭圆弧线基本上是生成圆弧线段。这可能是决定你应该使用哪种类型的弧线段的关键。\n有关此路径功能的更多例子，请参见：SVG: Quadratic Bezier Curve Commands。\n绘图表面的变形 在这些能力之上，绘制对象的绘图表面可以以各种方式变形，让你做一些令人惊奇的事情。\n首先，你可以应用一些通用的绘图表面修改，比如\u0026hellip; \u0026ldquo;translate\u0026rdquo;、\u0026ldquo;rotate\u0026rdquo;、\u0026ldquo;scale\u0026rdquo;、\u0026ldquo;skewX\u0026rdquo;、\u0026ldquo;skewY\u0026rdquo; 和 \u0026ldquo;affine\u0026rdquo;。\n例如，给定一个线条的 path，我们可以 translate 绘图表面的原点或0,0点到另一个位置。\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;translate 50,30 image over 3,3 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; transform_translate.gif 请注意，\u0026ldquo;0,0\u0026rdquo; 或绘图区域的原点现在以图像为中心，尽管Y轴在图像的顶部仍然是负数，在底部仍然是正数。\nrotate 操作将旋转绘图表面，所以以后在该表面上绘制的任何东西都将被旋转绘制。当然，它会围绕转换后的原点进行旋转，所以最好同时使用这两个变换运算符。\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;translate 50,30 rotate -30 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; transform_rotate.gif scale 将放大和缩小原点周围的绘图面。\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;translate 50,30 scale 1.5,1.5 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; transform_scale.gif 一个常见的 scale 用法是将Y轴翻转，使Y的正值向上。当然原点也应该移到中心，或者左下角，以保持秩序。\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;translate 50,30 scale 1,-1 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; transform_flip.gif 最后，\u0026ldquo;skewX\u0026rdquo; 和 \u0026ldquo;skewY\u0026rdquo; 在X和Y方向上对图像进行剪切。例如，这里我们使用 \u0026ldquo;skewX\u0026rdquo; 给图像的垂直Y轴一个倾斜。\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;translate 50,30 skewX 20 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; transform_skewY.gif 这些操作符在 MVG -draw 字符串之外有对应的操作符，供一般使用。但是这些命令行版本是运算符，并且立即应用于内存中已经存在的图像，而不是应用于尚未绘制的矢量对象的绘制表面。更多细节请看扭曲图像。\n绘制表面的平移变形 上述所有五种画布变换都可以组合成一个通用的 Affine Matrix Operator，可以使用 MVG 原语 \u0026ldquo;affine\u0026rdquo;，也可以在调用 -draw 之前使用 -affine 设置 Affine 变换。\nAffine 变换使用一组 \u0026ldquo;Matrix Coefficients\u0026rdquo;，它定义了如何将你给出的坐标修改为实际的绘图坐标。\n关于这些 \u0026ldquo;coefficients\u0026rdquo; 如何工作的更多细节，请参阅 Affine Matrix Transforms。\n例如\u0026hellip; 要设置一个相对于对象绘制时的中心原点\u0026hellip;\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;affine 1,0,0,1,50,30 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; affine_null.gif 翻转图像\u0026hellip;\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;affine 1,0,0,-1,50,30 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; affine_flip.gif 绕原点旋转30度\u0026hellip;\nconvert -size 100x60 xc:skyblue \\ -draw \u0026#34;affine .866,-.5,.5,.866,50,30 image over 4,4 0,0 \u0026#39;terminal.gif\u0026#39; fill white stroke black path \u0026#39;M 0,20 -45,20 20,-25 -25,-25\u0026#39; fill none stroke red path \u0026#39;M 0,10 0,-10 M 10,0 -10,0\u0026#39; \u0026#34; affine_rot.gif 对于更复杂的仿射变换，您可以使用为此目的创建的仿射辅助脚本。这些脚本将诸如旋转角度和中心点之类的东西转换为 Affine 坐标，你可以直接在 -draw affine 或 -affine 设置中使用。\n推/弹上下文 一些 MVG 原语实际上依赖于这些变换的使用才能正确使用。例如，椭圆原语只能用正交对齐的轴直接指定。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;ellipse 50,30 30,15 0,360\u0026#34; ellipse_orthogonal.gif 然而，通过使用绘图变换，我们可以很容易地给椭圆添加一个\u0026quot;旋转角\u0026rdquo;。\nconvert -size 100x60 xc:skyblue -fill white -stroke black \\ -draw \u0026#34;push graphic-context translate 50,30 rotate 30 fill white stroke black ellipse 0,0 30,15 0,360 pop graphic-context\u0026#34; ellipse_rotated.gif 请注意，椭圆的 center(旋转点)在应用旋转之前首先被转换。然后，ellipse 在 \u0026ldquo;0,0\u0026rdquo; 处的转换位置被绘制。\n上面还显示了两个新的 MVG 绘图原语。\u0026lsquo;push graphic-context\u0026rsquo; 和 \u0026lsquo;pop graphic-context\u0026rsquo;。在上面的例子中，并不是严格意义上的需要，但在进行主要的绘图转换时，建议使用这两个原语。\npush 和 pop 原语的作用是保存当前的绘图状态或 \u0026ldquo;graphic-context\u0026rdquo;，然后再次恢复。在这两个原语之间更改的任何绘图设置都会被遗忘。这包括曲面变形（如 \u0026ldquo;平移 \u0026ldquo;和 \u0026ldquo;旋转\u0026rdquo;）、颜色设置 fill 和 stroke 或任何其他修改了绘图 state 的设置。\n这些原语使您可以轻松地绘制具有许多变换的非常复杂的对象，然后将事物恢复到更 \u0026ldquo;正常\u0026quot;的状态，以便以后进行绘制操作。您可以在下面的绘制箭头中看到更实用的演示。\n推/弹特殊对象 建设中 更多专门用于 MVG 处理 SVG 格式的设置。\nfont-family font-stretch font-style font-weight encoding \u0026#39;UTF-8\u0026#39; push defs push gradient \u0026#39;def_name\u0026#39; linear X1,Y1 X2,Y2 stop-color \u0026#39;color\u0026#39; where stop-color \u0026#39;color\u0026#39; where # where is a point between the two pixels given (0 = X1,Y1 1= X2,Y2) gradient-units \u0026#39;objectBoundingBox|userSpaceOnUse\u0026#39; affine .... pop gradient push gradient \u0026#39;def_name\u0026#39; radial CX,CY FX,FY R # Here CX,CY is the center of the radial gradient of radius R # the FX,FY is the focal, and is usually the same a CX,CY # unless you are trying to warp the gradient in a specific direction stop-color \u0026#39;color\u0026#39; where ... pop gradient pop defs push graphic-context fill \u0026#39;url(#def_name)\u0026#39; ... draw things here ... pop graphic-context 例子见 Florent Monnier 的开发网站\u0026hellip; http://www.linux-nantes.fr.eu.org/~fmonnier/OCaml/MVG/。\n阅读 MVG 文件 正如你在上面的例子中所看到的，MVG 的 -draw 参数可以变得很长。事实上，SVG 到 MVG 的转换可以产生一些非常长的 MVG 绘图参数（见下文）。\n然而，IM 的一般命令行界面允许您通过使用 \u0026quot;@filename\u0026quot; 参数从文件中读取任何字符串参数。这很方便，因为这意味着你可以从一个单独的文件中读取非常长和复杂的MVG绘图命令。\n例如，如果我将 MVG 操作放入一个名为 \u0026ldquo;draw_circles.mvg\u0026rdquo; 的文件中，那么我就可以像这样绘制\u0026hellip;\nconvert -size 100x60 xc:skyblue -draw @mvg_circles.mvg mvg_draw.gif 不仅如此，ImageMagick 还懂得直接读取 \u0026ldquo;MVG:\u0026rdquo; 图像文件格式，让你可以更直接地绘制此类命令。然而，除非 MVG文 件定义了一个画布，否则你可能需要指定初始画布（ -size 和\u0026rdquo;-background\u0026rdquo;）来绘制。\nconvert -size 100x60 -background limegreen mvg_circles.mvg mvg_file.gif 你可以通过在 MVG 文件中添加一个 \u0026ldquo;viewbox\u0026rdquo;，并添加适当的背景色填充绘制，将初始画布设置移动到 MVG 图像中。这样就完成了 MVG 图像文件作为一个完整的图像定义。\nconvert mvg_circles2.mvg mvg_image.gif 目前只有一种方法可以从 MVG 参数字符串中读取外部 MVG 文件，那就是使用 \u0026ldquo;图像 \u0026ldquo;绘图原语。遗憾的是，这将 MVG 的 include 转换为光栅图像，然后再将该图像覆盖到绘图表面。 换句话说，目前还没有MVG的 \u0026ldquo;include\u0026quot;功能。 :-(\n建设中 您可以生成IM的低级绘制操作，使用 `+render 来记录它们。\n当你再给 -render 设置/操作时，IM将立即绘制这些保存的操作。\n奇怪的是，仅仅输出到 \u0026ldquo;MVG\u0026rdquo; 文件似乎也能做到这一点\u0026hellip;\u0026hellip;。\nconvert ... -draw \u0026#39;....\u0026#39; draw_commands.mvg 注意：如果你在输出 MVG 格式文件时画了一条曲线，文件中会列出以下内容。曲线是一系列的短线段，而不是原始曲线。\n当然您也可以完全使用更通用的 SVG 格式。参见下面的 \u0026ldquo;SVG 格式处理\u0026quot;。\nMVG 阿尔法构成 建设中 我没有看到任何使用 Alpha 构图的情况（除了 painters 的算法之外）。基本上是一种 \u0026ldquo;over\u0026rdquo; alpha 合成）来绘制对象。\n然而，这并不是说不能这样做。\n如果你喜欢将你的矩形、椭圆、圆形或其他物体用不同的阿尔法成分（如 \u0026ldquo;DstOver\u0026rdquo;，这是一个类似于 Under 的成分），然后在空白的透明画布上画出你的人物，同样的构图，并将其合成到您的图像上。\n然而，由于 SVG 允许您使用 alpha 合成来绘制文本和其他的图像，因此，您可以使用 SVG 来绘制图像项目到图像上，我想这将是一个未来的补充。\n敬请期待\n绘制符号 有时你在图像上有一组点，你想在那里绘制参考符号，如十字、圆圈等。遗憾的是，目前IM还没有可以轻松绘制这类符号的命令，但只要稍加努力，你就可以绘制这类符号。\n符号绘制技巧 在给定的位置列表中绘制多个符号的诀窍是使用 shell 脚本或任何你正在使用的 API 生成 MVG 绘图命令，以便将给定的点集转化为适当的绘图命令集。 例如，我在这里将一条线上的点转换为每一个点的\u0026quot;加号\u0026rdquo;\u0026hellip;\n# Define a string of X and Y coordinates # comma between values, space between coordinates. points=\u0026#34;6.6,7.7 25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3 92.5,66.6\u0026#34; # convert each point into a draw command for a cross (using \u0026#39;awk\u0026#39;) # the \u0026#39;tr\u0026#39; converts spaces into \u0026#39;newlines\u0026#39; (one point per line). crosses=`echo $points | tr -s \u0026#39; \u0026#39; \u0026#39;\\012\u0026#39; |\\ awk -F, \u0026#39;{ print \u0026#34;line \u0026#34; $1-3 \u0026#34;,\u0026#34; $2 \u0026#34; \u0026#34; $1+3 \u0026#34;,\u0026#34; $2 ; print \u0026#34;line \u0026#34; $1 \u0026#34;,\u0026#34; $2-3 \u0026#34; \u0026#34; $1 \u0026#34;,\u0026#34; $2+3 ; }\u0026#39; -` # draw a red line between the points, and blue crosses on the points. convert -size 100x100 xc:white \\ -draw \u0026#34;fill none stroke red polyline $points \u0026#34; \\ -draw \u0026#34;fill none stroke blue $crosses \u0026#34; \\ points_plus.gif 上面使用 \u0026ldquo;tr\u0026rdquo; 将每个点（两个数字）分成每条线上的一个点，然后使用 \u0026ldquo;awk\u0026rdquo; 进行所有数学计算，在给定的点上绘制\u0026quot;加号\u0026rdquo;。你可以使用任何你喜欢的东西，因为我只是在输入点列表上应用了一种文本宏扩展的形式。几乎所有的编程语言都可以做到这一点。对于上面的shell脚本案例，我只是发现 \u0026ldquo;awk\u0026rdquo; 是最简单、最快的手段。\n其实你甚至可以使用 Imagemagick 本身的 \u0026ldquo;convert\u0026rdquo; 格式选项来进行这种 \u0026ldquo;macro\u0026rdquo; 的扩展\u0026hellip;比如这里我用它来计算圆周上的一个点，对于这个\u0026quot;点符号\u0026rdquo;。\n# Define a string of X and Y coordinates # comma between values, space between coordinates. points=\u0026#34;6.6,7.7 25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3 92.5,66.6\u0026#34; # circle radius (or symbol size) to draw around each point. radius=3.5 # convert each point into a draw command for a cross # In this case, points are space separated by the shell circles=$(for point in $points; do x=$(echo \u0026#34;$point\u0026#34; | cut -d, -f1) y=$(echo \u0026#34;$point\u0026#34; | cut -d, -f2) # use IM to do some floating point math, EG: y2=$y+$radius y2=$(convert xc: -format \u0026#39;%[fx:\u0026#39;\u0026#34;$y\u0026#34;\u0026#39;+\u0026#39;\u0026#34;$radius\u0026#34;\u0026#39;]\u0026#39; info:) echo \u0026#34;circle $x,$y $x,$y2\u0026#34; done) # Draw a red line between the points, and blue circles on the points. convert -size 100x100 xc:white \\ -draw \u0026#34;fill none stroke red polyline $points \u0026#34; \\ -draw \u0026#34;fill none stroke blue $circles \u0026#34; \\ points_circle.gif 现在，您生成的绘制字符串可能会变得相当长，并且可能会开始导致您的最终命令的长度问题。所以，与其将点转换成长字符串，然后我们在命令行上传递给 IM，不如将绘制命令以文件的形式管道化给 IM。\n我这次也使用了 SVG 路径的绘制方法来代替 Draw Primitive 的绘制方法。另外我生成的符号是每个点周围的三角形。\n# Define a string of X and Y coordinates # comma between values, space between coordinates. points=\u0026#34;6.6,7.7 25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3 92.5,66.6\u0026#34; # convert each point into a draw commands to draw a triangle for point in $points; do echo \u0026#34;path \u0026#39;M $point m 0,-5 -4,+8 +8,0 -4,-8\u0026#39;\u0026#34; done |\\ convert -size 100x100 xc:white \\ -fill none -stroke red -draw \u0026#34;path \u0026#39;M $points\u0026#39; \u0026#34; \\ -fill none -stroke blue -draw \u0026#39;@-\u0026#39; \\ points_tri.gif SVG 路径实际上使这一点变得更容易，通过允许相对像素移动，允许你设计符号，所以它只需要一个单一的初始绝对移动\u0026rsquo;M\u0026rsquo;，然后再给出\u0026rsquo;移动\u0026rsquo;和\u0026rsquo;线\u0026rsquo;的序列来绘制符号。正因为如此，你实际上根本不需要任何浮点计算，因为IM draw会完成所需的定位数学。\n相对移动SVG路径项\u0026rsquo;m\u0026rsquo;在IM v6.4.3-5之前被破坏了。如果你的IM比这更老，上面（和下一个）的例子可能什么也画不出来。您可以通过将上面的相对移动\u0026rsquo;m\u0026rsquo;替换为适当的相对线序列\u0026rsquo;l\u0026rsquo;来解决旧版本的问题。\n现在你可以更进一步，将一个完整的MVG文件，包括画布规格，直接作为一个绘画命令的流水线输入到IM中。这次让我们做一个\u0026rsquo;十字\u0026rsquo;，这和上面第一个\u0026rsquo;加\u0026rsquo;的例子类似，需要大量的计算。\n# Define a string of X and Y coordinates # comma between values, space between coordinates. points=\u0026#34;6.6,7.7 25.0,75.0 42.2,85.4 75.8,94.7 51.5,39.3 92.5,66.6\u0026#34; # Generate a MVG file for IM to draw all components ( echo \u0026#34;viewbox 0 0 100 100 fill white rectangle 0,0 100 100\u0026#34; echo \u0026#34;fill none stroke red path \u0026#39;M $points\u0026#39;\u0026#34; echo \u0026#34;fill none stroke blue path \u0026#39;\u0026#34; for point in $points; do echo \u0026#34; M $point m -2,-2 +4,+4 m -4,0 +4,-4\u0026#34; done echo \u0026#34;\u0026#39;\u0026#34; ) | convert mvg:- points_cross.gif 这使用了特殊的shell编程技术，在shell括号中 \u0026ldquo;echo\u0026rdquo; 的任何东西都将作为MVG文件被输入到最终的\u0026quot;转换\u0026quot;命令中。第一个 \u0026ldquo;echo\u0026rdquo; 定义并填充图像的绘图画布，而 \u0026ldquo;while\u0026rdquo; 循环则将每个 \u0026ldquo;点\u0026rdquo; 转换为一个给定半径的圆。\n这种方法的优点是，你不会受到任何字符串的限制，而使用其他两种方法可能会受到限制。\n其他你可以生成的符号包括方框、钻石、错误条等。\n也请参见下面的\u0026quot;绘制圆圈\u0026rdquo;，了解其他圆圈方法，包括不计算相对 \u0026ldquo;路径\u0026quot;的圆圈绘制。\n绘制符号的替代方法 除了直接绘制符号外，还有其他的方法可以将符号添加到图像中。\n符号字体 您可以从 Symbol Font 中提取符号，并将其保存为一个小位图。你也可以使用小的预定义但色彩丰富的图像来做这件事。\n然而这样做可能会出现问题，无法准确定位字体相对于特定像素的位置。也就是说这不是一个非常精确的技术。但是你可以在任何像素位置组成任何图像。例如这些符号是从一些字体中提取出来的，用于这些示例页面的具体使用。\n\u0026lt;= =\u0026gt; x + + + o o o o 在分层图像一节中给出了将图像合成到大背景上的例子。然而，循环的方法可能更有用，例如在分层图像的程序化定位中给出了。\n未来：使用坐标对图像进行分层的例子\n形态学 另一种选择是使用形态学，使用特殊的\u0026quot;形状\u0026quot;内核，如 \u0026ldquo;磁盘\u0026rdquo;、\u0026ldquo;环形 \u0026ldquo;和 \u0026ldquo;加\u0026rdquo;，甚至是你自己的用户定义内核，来 \u0026ldquo;稀释\u0026quot;单个像素。\n例如\u0026hellip;\nconvert -size 80x80 xc:black -fill white \\ -draw \u0026#39;point 20,15 point 55,30 point 40,60\u0026#39; points_pixels.gif convert points_pixels.gif -morphology Dilate Ring points_rings.gif convert points_pixels.gif -morphology Dilate Plus:4 points_pluses.gif convert points_pixels.gif -morphology Dilate Cross:3 points_crosses.gif 然后可以通过使用 Alpha Shape Operator 将结果直接转换为彩色叠加。\n这样做的最大好处是，你其实不需要知道每个符号的单独位置。或者有多少个符号。但这也可能是一个缺点。一个主要的缺点是，位置只在整数位置。你不能使用浮点 \u0026ldquo;子像素\u0026quot;定位来\u0026quot;绘制\u0026rdquo;。\n卷积 一个几乎相同的技术是使用 Convolve，使用专门设计的内核，它允许你设置不同的灰度，而不仅仅是一个简单的开/关结果，如上所述。\n通过使用不同的用户定义内核，为图像的每一个通道（红、绿、蓝和阿尔法），甚至可以从每个像素坐标创建多色符号。\n为此，我使用了一个我写的特殊脚本 image2kernel 来将彩色图像（见右图）转换为每个通道的独立浮点卷积核。\nimage2kernel -q marker.png marker.dat 这将生成四个文件，比如 marker_R.dat，每个通道都有一个非常小的输入图像，这是用户定义的图像表示（原点在图像中心）。\n现在使用这些内核数据文件，我们可以将这些单点在透明的背景上 Convolve 成我们彩色的标记图像。\nconvert points_pixels.gif -alpha off \\ \\( -clone 0 -morphology Convolve @marker_R.dat \\) \\ \\( -clone 0 -morphology Convolve @marker_G.dat \\) \\ \\( -clone 0 -morphology Convolve @marker_B.dat \\) \\ \\( -clone 0 -morphology Convolve @marker_A.dat \\) \\ -delete 0 -channel RGBA -combine point_markers.png 在IM v6.7.6-9之前，Combine Operator 要求图像的透明度通道以 \u0026ldquo;哑光\u0026quot;值而不是alpha值的形式给出，因此，由此产生的alpha通道需要被否定。EG:\n... \u0026#34;`cat marker_A.dat`\u0026#34; -negate \\) \\ 只能使用小图像，像素点要足够分散，符号不要重叠。这是因为 Convolve 会将重叠的区域加在一起，使其比预期的更亮。\n以上内容已被转换成UNIX shell脚本 convolve_image，以方便使用。\nconvolve_image points_pixels.gif marker.png point_markers.png 这个技术源于IM论坛上的一个讨论-IM 的有趣体验。用户希望在足球场的背景图上放置小人，让他们的位置在图片中拼出一个人的名字。\n分层 一种不同的技术，如图像层，使用你从源图像中提取的像素列表进行定位，可能是更好的方法。你可以先叠加更远的符号图像，然后再叠加前景图像，你可以通过编程选择或随机选择什么符号替换什么点。\n关于这个例子，请看地图中的图钉。\n绘制圆圈 绘制选项为您提供了许多方法来完成一些非常基本的工作。绘制圆。\n例如，您可以在圆周上的任何一点上画一个圆，因此您需要计算一个中心点和一个半径为25像素的第二点。因此，您需要计算一个中心点和第二个点，这个点的半径（例如25像素）离第一个点的距离。\nconvert -size 100x60 xc: -stroke Firebrick -fill tomato -strokewidth 2 \\ -draw \u0026#39;circle 50,30 50,55\u0026#39; circle_circle.gif Fred Weinhaus 指出，通过使用平移，你可以消除计算圆边坐标的需要，而直接给出半径即可。\nconvert -size 100x60 xc: -stroke SeaGreen -fill PaleGreen -strokewidth 2 \\ -draw \u0026#39;translate 50,30 circle 0,0 25,0\u0026#39; circle_circle_trans.gif 但是当绘制多个圆时，上述操作需要对每个圆进行单独的 -draw 操作，或者使用 Context Pushing。\n使用椭圆可以直接指定半径为轴长\nconvert -size 100x60 xc: -stroke Sienna -fill Wheat -strokewidth 2 \\ -draw \u0026#39;ellipse 50,30 25,25 0,360\u0026#39; circle_ellipse.gif 你也可以用 stroke-lineecap round 画一条非常非常短的线来生成一个圆。描边的宽度可以设置圆的直径。注意线条必须有一定的长度（无论多小），否则画不出任何东西。\nconvert -size 100x60 xc: -stroke Blue -strokewidth 50 \\ -draw \u0026#39;stroke-linecap round line 50,30 50,30.0001\u0026#39; \\ circle_line.gif 这种技术，不幸的是不能勾勒出生成的圆，但对于覆盖大面积的区域，大笔触宽度是有用的。请看下面一些简单的例子。\n这种方法利用了 SVG 路径的绘制方法，所以可以在不需要计算任何额外坐标的情况下绘制圆形。\nconvert -size 100x60 xc: -stroke Blue -fill DodgerBlue -strokewidth 2 \\ -draw \u0026#34;path \u0026#39;M 50,30 m 0,25 a 1,1 0 0,0 0,-50 a 1,1 0 1,0 0,50\u0026#39;\u0026#34; \\ circle_path.gif 只有最初的绝对移动 \u0026lsquo;M\u0026rsquo; 是用来定义中心的，接下来的路径组件中的 \u0026lsquo;25\u0026rsquo; 和 \u0026lsquo;50\u0026rsquo; 是定义相对于这个中心的圆的半径和直径。\n在IM v6.4.3-5之前，相对移动SVG路径项 \u0026rsquo;m\u0026rsquo; 是被破坏的。 如果您的IM比这更早，圆可能只显示为一个像素。您可以通过将上面的 \u0026rsquo;m\u0026rsquo; 替换为 \u0026rsquo;l\u0026rsquo; 来修复旧版本的问题。\nFred Weinhaus 添加了以下贝塞尔圆的方法。它非常接近真实的圆（虽然不精确），并且需要进行浮点计算。\nr=25; cx=50; cy=30; x1=25; x2=75; # = cx ± radius y1=-3.25; y2=63.25; # = cy ± radius*1.275 convert -size 100x60 xc: -stroke Purple -fill Violet -strokewidth 2 \\ -draw \u0026#34;bezier $x1,$cy $x1,$y1 $x2,$y1 $x2,$cy\u0026#34; \\ -draw \u0026#34;bezier $x1,$cy $x1,$y2 $x2,$y2 $x2,$cy\u0026#34; \\ circle_bezier.gif 如果画一个精确的圆并不重要，你可以使用这个4 Bezier段 SVG 路径，它只使用圆的X和Y边界进行计算。\nr=25; cx=50; cy=30; x1=25; x2=75; # X bounds = cx ± radius y1=5; y2=55; # Y bounds = cy ± radius convert -size 100x60 xc: -stroke Tomato -fill Gold -strokewidth 2 \\ -draw \u0026#34;path \u0026#39;M $cx,$y1 Q $x1,$y1 $x1,$cy T $cx,$y2 $x2,$cy $cx,$y1 z\u0026#39;\u0026#34; \\ circle_bezier_path.gif 如果你喜欢一个完全相对于中心起点绘制的，你可以使用这种技术。只使用半径值，使其生成简单，只使用 API 中的字符串函数。\nconvert -size 100x60 xc: -stroke Orange -fill LemonChiffon -strokewidth 2 \\ -draw \u0026#34;path \u0026#39;M 50,30 m 0,25 q 25,0 25,-25 t -25,-25 -25,25 25,25 z\u0026#39;\u0026#34;\\ circle_bezier_path_rel.gif 你能想到其他画圆的方法吗？\n绘制箭头-定位、旋转和缩放符号 使用上述技术，你可以创建一个特殊的符号，如箭头，你可以定位，使其点在线的最末端，并画在它上面。如果你画的箭头后的线（典型的情况），那么箭头将被绘制在该行的顶部。\n然而，他们有三种类型的箭头，可以定义，每个类型的定义在不同的方式取决于它的使用。\n测量时，你只是想用箭头头标记线的两端，以指示一些工程图中的测量极限。非常简单。 矢量，显示一些数值的方向和强度。例如在天气风图中。需要一个尾巴，0,0点就是尾巴的末端。通常情况下，这样的向量会形成一个大网格。 指标，指出一些细节。对于这个0,0点可能应该是箭尖，或者是箭头本身前面的一些距离。 测量箭头 简单地在一条线的末端添加一个箭头是比较容易做到的。基本上，您可以创建一个 \u0026lsquo;arrow head\u0026rsquo; 符号，并将其画在正确的位置。\n例如\u0026hellip;\narrow_head=\u0026#34;l -15,-5 +5,+5 -5,+5 +15,-5 z\u0026#34; convert -size 100x60 xc: -draw \u0026#39;line 10,30 80,30\u0026#39; \\ -draw \u0026#34;stroke blue fill skyblue path \u0026#39;M 80,30 $arrow_head\u0026#39; \u0026#34; \\ arrow_horizontal.gif 请注意，我画的符号，使其起点是线的最末端。这样一来，它就可以在之前画好的线上面向后画，形成一个非常漂亮的整齐的符号。\n箭头却有一个相关的方向。你可以在许多不同的角度创建大量的箭头定义，许多程序都这样做。但是既然箭头是一个矢量，那么为什么不把箭头作为一个矢量进行旋转呢。IM绘图命令内置了绘图旋转（Canvas Warping），所以让我们使用它们。\n这样做还有一个好处，就是把位置从箭头头的 path 定义中移出来，让你把整个路径指定为 constant\u0026hellip;\narrow_head=\u0026#34;path \u0026#39;M 0,0 l -15,-5 +5,+5 -5,+5 +15,-5 z\u0026#39;\u0026#34; convert -size 100x60 xc: -draw \u0026#39;line 25,55 70,10\u0026#39; \\ -draw \u0026#34;stroke blue fill skyblue translate 70,10 rotate -45 $arrow_head \u0026#34; \\ arrow_rotate.gif 如果你喜欢改变箭头的大小，可以在旋转后增加一个 scale 绘制选项。\narrow_head=\u0026#34;path \u0026#39;M 0,0 l -15,-5 +5,+5 -5,+5 +15,-5 z\u0026#39;\u0026#34; convert -size 100x60 xc: -draw \u0026#39;line 25,55 70,10\u0026#39; \\ -draw \u0026#34;stroke blue fill skyblue translate 70,10 rotate -45 scale 2,2 $arrow_head \u0026#34; \\ arrow_scale.gif 请注意，它是如何放大离开箭头的\u0026quot;尖端\u0026rdquo;，你指定的地方。这是处理箭头的一个非常重要的方面，因为它是唯一的终点，和角度的线，你正在添加箭头的事项。\ntransforms 的顺序是很重要的，而且实际上与它们实际被处理的顺序是相反的。也就是先将比例尺应用于座标，然后是旋转，再是平移。如果座标变换不是按照这个顺序进行的，我们最终也会对箭头的最终位置进行缩放，而不是我们期望的位置。\n另外由于比例尺有两个数字，而原来的箭头头符号是水平设计的（角度为零），所以可以分别将箭头的宽度与高度进行比例。同时注意笔画宽度也随着箭头的大小而缩放，保持一致。\narrow_head=\u0026#34;path \u0026#39;M 0,0 l -15,-5 +5,+5 -5,+5 +15,-5 z\u0026#39;\u0026#34; convert -size 100x60 xc: -draw \u0026#39;line 25,55 70,10\u0026#39; \\ -draw \u0026#34;stroke blue fill skyblue translate 70,10 rotate -45 scale 2,1 $arrow_head \u0026#34; \\ arrow_scale_aspect.gif 现在，当你在画布上翘起一个个箭头时，也许还有许多其他的绘画操作，你可能喜欢在一次 [\u0026quot;-draw\u0026quot;](https://imagemagick.org/Usage/option_link.cgi?draw) 操作中把它们全部画完。说要画线，然后在两端添加箭头，需要不同的颜色、位置、旋转，甚至可能是不同的比例。这意味着我们需要将画布翘曲的范围限制在每个单独箭头头的绘制上。如果你不限制范围，你可能会在以后开始影响到其他后面的绘制操作，永远不能很确定你生成的是什么。\n为了限制翘曲的范围（以及所有其他的绘图属性），您将涉及到的部分包裹在一个 graphic-context\u0026hellip;\narrow_head=\u0026#34;path \u0026#39;M 0,0 l -15,-5 +5,+5 -5,+5 +15,-5 z\u0026#39;\u0026#34; convert -size 100x60 xc: \\ -draw \u0026#34;stroke black fill none path \u0026#39;M 10,40 A 50,50 0 0,1 90,40\u0026#39; push graphic-context stroke blue fill skyblue translate 10,40 rotate 135 $arrow_head pop graphic-context push graphic-context stroke firebrick fill tomato translate 90,40 rotate 45 $arrow_head pop graphic-context \u0026#34; \\ arrow_context.gif push 主要是将当前所有的绘图属性保存起来，以备将来使用，而 pop 则恢复这些属性，用之前保存的设置替换任何设置（颜色、扭曲、位置等）。这意味着在 \u0026lsquo;popping\u0026rsquo; 之后，\u0026lsquo;canvas warp\u0026rsquo; 会被取消，画图会回到修改之前的状态。\n上述技术只是生成箭头的一种方法，在绘制箭头作为测量距离的一部分时，如在技术图纸中，是一种很好的方法。\n矢量箭头 如前所述，矢量既显示方向，又显示某个数值的强度。这意味着箭头的长度是可变的，箭头头可以在任何位置远离向量的起点。\n现在，你可以做一些沉重的数学计算的位置，箭头头应该是地方给定的向量的长度和角度，但他们是一个更好的方法，这让 ImageMagick 为你做这些计算。\n解决的办法是在 Warped Canvas Space 中画一条长度合适的水平线作为向量长度。当这条线画好后，只需将绘图空间再次转换到线的末端，而画布仍然是\u0026quot;扭曲的\u0026rdquo;(warped)。现在你的位置已经正确了，只要正确的旋转就可以像正常的那样画出矢量的 'arrow head'。\n例如，这里我以-35度角生成一个70像素长的矢量。\nvector_head=\u0026#34;path \u0026#39;M 0,0 l -15,-5 +5,+5 -5,+5 +15,-5 z\u0026#39;\u0026#34; indicator=\u0026#34;path \u0026#39;M 10,0 l +15,+5 -5,-5 +5,-5 -15,+5 m +10,0 +20,0 \u0026#39;\u0026#34; convert -size 100x100 xc: \\ -draw \u0026#34;stroke black fill none circle 20,50 23,50 push graphic-context stroke blue fill skyblue translate 20,50 rotate -35 line 0,0 70,0 translate 70,0 $vector_head pop graphic-context push graphic-context stroke firebrick fill tomato translate 20,50 rotate 40 $indicator translate 40,0 rotate -40 stroke none fill firebrick text 3,6 \u0026#39;Center\u0026#39; pop graphic-context \u0026#34; \\ arrow_with_tails.gif 指示箭头 在上面我还演示了一个指示箭头，指向之前矢量箭头的起点。\n然而我没有像之前那样画箭头，而是将它创建为一个反向的箭头符号，它的起始点距离原点（或起始点）10像素。这是一个符号位于我想要指示的位置，所以我实际上并不希望箭头直接在那个位置上面，而是离它稍微远一点。\n现在，虽然指示符比向量处理起来更简单，通常不需要可变长度，但你通常要在指示符的远端添加文字来指定指示的内容。和之前一样，计算这个位置可能很困难，何必呢。\n文字定位的解决方法也和向量一样。保留原来用于绘制指示箭头的翘曲空间，并将原点转换到该箭头的尾端（在翘曲空间中水平40像素）。现在我们已经重新定位了，我们可以围绕这个新的位置解除扭曲，这样你就可以像正常的那样绘制文本（有轻微的偏移）。\n不幸的是，虽然默认的文字对齐方式是\u0026quot;左\u0026rdquo;，但目前你不能在 MVG 中指定文字对齐方式，作为重力的单独设置。如果这是一个问题，请在 IM bugs 论坛上提出请求，希望文本对齐（作为独立于重力定位）能够成为现实，尤其是它实际上是 SVG 规范的一部分。\n绘制对象 宽广的色彩笔触 你不需要用路径或轮廓完全封闭填充区域，就能创造出各种形状。使用非常大和宽的笔触，你可以在画布上生成大面积的颜色和色块。\n例如，一个宽阔的笔触椭圆弧形可以生成一个漂亮的颜色区域，我实际上已经看到用于创建海报。\nconvert -size 100x100 xc: -fill none -stroke powderblue \\ -draw \u0026#39;stroke-width 70 ellipse -30,0 90,90 10,50\u0026#39; \\ -rotate 180 arc_background.gif 或者你可以生成一个小丑相当复杂的笑容。\nconvert -size 100x100 xc: \\ -draw \u0026#39;fill none stroke-linecap round stroke-width 40 stroke tomato ellipse 50,0 70,70 65,115 stroke-width 2 stroke black ellipse 50,0 70,70 60,120 stroke-width 40 stroke palegreen line 50,40 50,40.01\u0026#39; clown.gif 你能想出什么办法？请告诉我们。\n圆柱体 在 IM 论坛的讨论中，有一个关于使用 ImageMagick 绘制命令绘制圆柱体（特别是阴影圆柱体）的重要讨论。\n绘制圆柱体的诀窍是绘制 roundrectangle 原语，使其末端形成椭圆形。也就是说，如果圆柱体的宽度为 50 像素，则将矩形的角分别舍去 25 和 12 像素。这就是矩形宽度的一半，然后再减半。\n这样，一个圆柱体就变成了两个相互叠加的圆角矩形。第二个颜色填充的 'end oval' 的大小正好是两个角的两倍。例如\u0026hellip;\nconvert -size 60x100 xc:white -stroke snow4 \\ -fill chartreuse3 -draw \u0026#39;roundrectangle 5,5 55,95 25,12\u0026#39; \\ -fill chartreuse2 -draw \u0026#39;roundrectangle 5,5 55,29 25,12\u0026#39; \\ cylinder.gif 通过将第一种填充色替换为渐变色（使用记忆中的平铺技术），你可以让圆柱体看起来更像3D\u0026hellip;\u0026hellip;。\nconvert -size 60x100 xc:white -stroke snow4 \\ \\( -size 1x60 gradient:chartreuse1-chartreuse4 -rotate -90 \\ -write mpr:shading +delete \\) \\ -tile mpr:shading -draw \u0026#39;roundrectangle 5,5 55,95 25,12\u0026#39; +tile \\ -fill chartreuse2 -draw \u0026#39;roundrectangle 5,5 55,29 25,12\u0026#39; \\ cylinder_shade.gif 通过慢慢完善圆柱体的绘制（如IM论坛中讨论的那样），你可以走很长的路来生成非常复杂和具有视觉吸引力的圆柱体。这包括增加封闭半透明玻璃圆柱体、阴影效果和标签。\n该讨论的最终结果是一个脚本 \u0026ldquo;cylinder_bar\u0026quot;，生成一个圆柱体百分比条\u0026hellip;\u0026hellip;\ncylinder_bar 95 cylinder_95.png 该脚本可以生成任何尺寸的图像，根据该尺寸和脚本顶部定义的其他设置适当调整所有参数。还包括 glass thickness 的概念，在一个封闭的半透明玻璃圆柱体和内部的彩色圆柱体之间创造一个间隙。\n请注意圆柱体非常微妙的阴影，特别是当绿色圆柱体的末端与玻璃圆柱体的末端重叠时。只要稍加预想，就能做出惊人的效果。\n在文字串中绘制特殊字符 引号还是反斜杠？ 人们在使用 -draw 时遇到的最大的问题之一是绘制字符，这些字符对 UNIX shell 和 DOS 命令行甚至其他语言如 C、Perl、PHP、R 或 Visual Basic 都有特殊意义。\n在这方面最大的罪魁祸首是两种类型的引号字符，以及变量替换字符，如美元 '$' 和 shell 和 ImageMagick 的转义字符，反斜杠 '\\'。\n基本上作为 -draw 的MVG参数需要加引号，而里面的 'text' 字符串参数也可能需要一些额外的引号。\n为了解决这个问题，用户通常会使用两个不同的引号字符，一个用于 shell，另一个用于 MVG 文本字符串。\n-draw \u0026#39;... text 0,0 \u0026#34;string\u0026#34; ...\u0026#39; 需要注意的是，对于 windows 用户来说，这是唯一真正的选择，它有自己的引号问题和方法。或者他们会交换引号，用\u0026hellip;\n-draw \u0026#34;... text 0,0 \u0026#39;string\u0026#39; ...\u0026#34; 它允许你包含 shell 变量替换(使用 '$' 而不进行转义。)\n选择正确的形式可以解决大多数问题，但有些字符仍然存在困难，每个解决方案都取决于你到底使用哪一组引号，因为它们也定义了特殊字符应该如何转义。\n以下是四种情况下的引号，以及特殊字符的处理\u0026hellip;\n对 shell 参数使用单引号，对 MVG 文本字符串周围使用双引号。 处理绘制文本字符串的最简单的技术是为包装 shell 参数使用单引号。然而，这意味着要在绘制的字符串中包含一个撇号，你需要离开 shell 的\u0026quot;单引号模式\u0026rdquo;，并在 shell 的单引号之外提供撇号。\n例如，这里是如何处理我提到的四个特殊字符。\nconvert -size 250x50 xc:none -box white -pointsize 20 -gravity center \\ -draw \u0026#39;text 0,0 \u0026#34; \u0026#39;\\\u0026#39;\u0026#39; \\\u0026#34; $ \\\\ \u0026#34; \u0026#39; \\ -trim +repage text_special_sd.gif 请注意，由于美元符号不需要转义，你也不能用它来替代 shell 变量的内容。\n重要的是要记住，反斜杠是IM绘图字符串处理的唯一特殊字符。同时，它存在的原因也纯粹是为了让你可以转义任何\u0026quot;IM 绘制字符串引号\u0026rdquo;，比如我们在上面使用的双引号。除此以外，其他所有的怪异都是由 UNIX 命令行 shell 引起的，而不是 IM。\nPC-DOS 有它自己的怪异之处，我希望在使用环境中的IM时，能对特殊字符进行转义。\n在 shell 参数中使用双引号。 在 MVG 文本字符串周围使用单引号。 如果你确实想在绘制的字符串中插入一个 \u0026lsquo;shell variable\u0026rsquo;，那么你将不得不在 shell 参数的外面使用双引号。这使得整个事情变得更加复杂，因为你失去了 shell 的保护，你现在不仅要转义美元 '$' 符号，而且还要转义反斜杠 '\\'。\n另一方面，shell 将不需要使用单引号字符作为它的参数结束限制字符，所以这方面被简化了。让我们总结一下我们的特殊字符短名单的结果。\nconvert -size 250x50 xc:none -box white -pointsize 20 -gravity center \\ -draw \u0026#34;text 0,0 \u0026#39; \\\\\u0026#39; \\\u0026#34; \\$ \\\\\\\\ \u0026#39; \u0026#34; \\ -trim +repage text_special_ds.gif 请注意，如果你想画一个反斜线本身，MVG 文本字符串需要将反斜线加倍（如前面的例子），但是 shell 本身也需要将每个反斜线加倍，总共产生四个反斜线才能产生一个这样的字符。\n这种翻倍很快就会让人不知所措，需要大量的反斜杠才能达到你想要的效果。只要采取的是慢慢的、简单的方法，你就会针对自己的情况想出办法。\n使用单引号进行 shell 论证。 与 MVG 文本字符串周围的单引号。 最后，让我们总结一下最后两种引号组合。我将让你去弄清楚它们是如何被 shell 和 MVG 解码的。\nconvert -size 250x50 xc:none -box white -pointsize 20 -gravity center \\ -draw \u0026#39;text 0,0 \u0026#39;\\\u0026#39;\u0026#39; \\\u0026#39;\\\u0026#39;\u0026#39; \u0026#34; $ \\\\ \u0026#39;\\\u0026#39;\u0026#39; \u0026#39; \\ -trim +repage text_special_ss.gif 在shell参数中使用双引号。 在 MVG 文本字符串周围加上双引号。\nconvert -size 250x50 xc:none -box white -pointsize 20 -gravity center \\ -draw \u0026#34;text 0,0 \\\u0026#34; \u0026#39; \\\\\\\u0026#34; \\$ \\\\\\\\ \\\u0026#34;\u0026#34; \\ -trim +repage text_special_dd.gif 正如你所看到的，来自命令行的 -draw 参数既要处理命令行 shell，也要处理 MVG 文本字符串中的反斜杠和引号转义。其结果可能会让人感到困惑和棘手。只要记住，shell 对这两种引号的处理方式不同，而 MVG 文本字符串则不同。\n当然，在复杂的脚本中，更好的方法可能是完全避免 shell 和任何脚本问题。你可以通过读取 MVG 绘图文件中的 -draw 参数来实现。\n-draw @drawfile.mvg 当然，你仍然需要对你使用的任何引号字符进行反斜杠处理，以及对文本中的任何反斜杠进行处理。然而，这比起同时处理 shell 自己的引号和转义系统要简单得多。\nconvert -size 500x50 xc:lightblue -font Candice -pointsize 36 \\ -gravity center -draw @text_quotes.mvg text_quotes.gif 第一张图片来自我使用的一个 \u0026ldquo;MVG\u0026rdquo; 文本文件。它不包含转义符或引号。因此，只有 MVG 引号和转义符是存在的。\n请注意，在上面的例子中，如果我对 MVG 文本字符串使用了单引号，唯一的变化是我需要对字符串中的单引号字符进行反斜杠处理，而不是双引号字符。\n关于百分比字符 最后一点是关于 \u0026quot;-draw text\u0026quot; 操作符中的特殊 escape 字符。百分号字符 \u0026quot;%\u0026quot; 应该\u0026quot;按原样\u0026quot;绘制。你不需要做任何特殊的操作来绘制它们。如果它们不能\u0026quot;按原样\u0026quot;绘制，那么你的IM版本较旧，应该尽快升级。\n直到IM 6.2.4版本，\u0026quot;%\u0026quot; 字符被用作转义字符，在绘制的文本字符串中包含额外的图像信息。现在不再是这样了，因为当SVG图像也试图绘制百分数字符时，这种转义符是混乱和不正确的。 百分号 \u0026ldquo;转义符 \u0026ldquo;的使用（以及\u0026rdquo;/n \u0026ldquo;换行符）被认为与 -draw 操作符和MVG格式处理SVG图像格式的预期用途不兼容。因此，从 IM 6.2.4 版本开始，%转义就不适用了，反斜杠只能转义自己和周围的引号。\nconvert -size 250x50 xc:none -box white -pointsize 20 -gravity center \\ -draw \u0026#39;text 0,0 \u0026#34;%w\\n%h\u0026#34;\u0026#39; -trim +repage text_escapes.gif 关于\u0026quot;百分比错误\u0026quot;的更多细节，以及在旧版 ImageMagick 中使用 -draw 时避免该错误的方法，请参见 Drawing a Percent Bug 页面。\n用注释代替绘制 避免这类问题的较好方法是使用 [-annotate](https://imagemagick.org/Usage/option_link.cgi?annotate) 而不是 draw 来绘制文本。这个操作符是 draw 操作符的一个封装器，可以使用 draw 的所有功能，但形式更简单。\n基本上这个操作符只需要一组引号（对于 shell）。这使得处理特殊字符变得更加简单。\n不幸的是，虽然你不再需要为 IM 转义引号，但你现在有百分比转义，如 '@' 文件读取，'\\n' 换行，以及其他百分号转义扩展。\n例如，使用单引号\u0026hellip;\nconvert -size 200x50 xc:none -box white -pointsize 20 -gravity center \\ -annotate 0 \u0026#39;\\@ \u0026#39;\\\u0026#39;\u0026#39; \u0026#34; $ \\\\ %% \u0026#39; \\ -trim +repage annotate_s.gif 而对于双引号\u0026hellip;\nconvert -size 200x50 xc:none -box white -pointsize 20 -gravity center \\ -annotate 0 \u0026#34;\\@ \u0026#39; \\\u0026#34; \\$ \\\\\\\\ %% \u0026#34; \\ -trim +repage annotate_d.gif 然而，如果你使用 '@' 转义符从文件中读取字符串，所有的注释引号和转义符将被完全忽略。\n例如，我们在这里包含了一个图像的宽度和高度的信息!\nconvert -size 200x50 xc:none -box white -pointsize 20 -gravity center \\ -annotate 0 \u0026#39;%w\\n%h\u0026#39; -trim +repage annotate_percents.gif 然而，当从文件中读取注释字符串时，所有的转义都会被完全忽略。\necho -n \u0026#39;@ %w\\n%h\u0026#39; |\\ convert -size 200x50 xc:none -box white -pointsize 20 -gravity center \\ -annotate 0 \u0026#39;@-\u0026#39; -trim +repage annotate_file.gif 更多信息请参见 Annotate Text Drawing Operator，特别是 Annotate Escape Characters。\nIM 和 SVG 处理 SVG 输入驱动。RSVG 与 MSVG 处理实际的 SVG 图像格式是一项非常复杂的工作。引擎需要处理 SVG\u0026ndash;可缩放矢量图形文档所定义的所有方面。这需要大量的编程工作和时间。\n因此，ImageMagick 在 SVG 格式图像的处理上提供了两种方法。第一种是使用一个开源的 RSV G库，将 SVG 格式转换成 IM 没有问题的光栅图像。这个引擎几乎在 SVG 处理的所有方面都是完整的。\n第二种方法是IM尝试将 SVG 转换为 MVG，使用一个名为 MSVG 的内置IM方法。MSVG 试图将SVG图像转换成IM的 -draw 运算符 \u0026ldquo;MVG\u0026quot;绘图语言。绘制 MVG 的很多功能都是专门为此而创建的。不幸的是，虽然基本的线条绘制和着色功能是存在的，但它远不是一个完整的 SVG 转换器。\n你可以通过使用特殊的输入格式 \u0026ldquo;MSVG:\u0026quot;（IM v6.3.4新增）读取 SVG 图像来强制使用内部的 MSVG 转换器。但如果 RSVG 库存在，大多数 ImageMagick 将使用它来渲染 SVG 图像。\n要找出你的 IM 会做什么，请用\u0026hellip;\nconvert -list format | grep SVG 从括号中的 \u0026ldquo;RSVG\u0026rdquo; 可以看出，我自己的 IM 将使用我电脑上的 RSVG 库，并给出了版本。\n在这里，我\u0026quot;绘制\u0026quot;了一个小的、手工制作的 SVG 图像 \u0026ldquo;diagonal.svg\u0026quot;（由论坛用户 penciledin 贡献），它在白色背景上创建了一个简单的对角线渐变的矩形。\nconvert diagonal.svg diagonal_rsvg.gif 完美的。一个正确的对角线梯度被生成。\n然而，如果你使用内部的 MSVG（如果没有 RSVG 库，则为默认值）来渲染\u0026hellip;\nconvert msvg:diagonal.svg diagonal_msvg.gif 正如你所看到的，内部 MSVG 转换失败，返回的是垂直梯度而不是对角线。\nconvert msvg:diagonal.svg diagonal.mvg 你大概可以看到MSVG转换器是如何尝试将 SVG 转换为 MVG 绘图命令的。\n当前内部 MSVG 已知失败的地方包括\u0026hellip;\n非垂直梯度(没有转换到新的MVG梯度处理) 沿着弯曲路径的文字 文本对齐（与重力分开）。 然而大多数基本的绘图动作都被处理了。\n还请记住，MVG 语言实际上可以处理 SVG 不能处理的事情，包括使用重力来定位图像和文本。重力不是 SVG 规范的一部分，尽管它是 IM 文本和字体处理的一个组成部分。\n另外请记住，MVG 没有 SVG 所拥有的容器机制。内部的 MSVG 转换器用图形上下文的推送和弹出代替了 XML 容器（见上面的 MVG 输出），效果是一样的。 SVG 的设置\nSVG 图像格式是一种矢量格式（请参见关于矢量图像格式的一句话），因此图像通常没有一个默认的\u0026quot;大小\u0026rdquo;，而是以特定的 \u0026quot;-density\u0026quot; 来 \u0026ldquo;绘制\u0026quot;或\u0026quot;渲染\u0026rdquo;，就像 postscript 一样（默认密度是72dpi）。\n另外，如果 SVG 没有 \u0026ldquo;绘制\u0026quot;背景，您可以通过使用 -background 设置指定要使用的背景颜色。\n例如这里是另一个小的 SVG 图像 \u0026ldquo;home.svg\u0026rdquo;，它已经使用3种不同的密度，3种不同的背景进行\u0026quot;渲染\u0026rdquo;，包括一个透明的背景。\nconvert -density 36 home.svg home_1.gif convert -background skyblue home.svg home_2.gif convert -density 144 -background none home.svg home_3.png 请注意，我使用了 PNG 格式的图片来制作上面例子中较大的透明背景版本。由于半透明的边缘像素，这产生的图像比 GIF 图像格式产生的图像更干净。当最终图像中涉及到透明度时，总是建议使用 PNG。\n我发现有些 SVG 图像不能缩放。也就是说，它们被定义为\u0026quot;像素\u0026rdquo;，而不是现实世界中的长度，如\u0026quot;点\u0026rdquo;、\u0026ldquo;英寸\u0026quot;或\u0026quot;毫米\u0026rdquo;。因此，虽然 -density 设置可能会改变图像的整体大小（以现实世界为单位），但 \u0026ldquo;像素 \u0026ldquo;的大小不会改变，因此图像本身的大小也不会改变。然而这样的SVG图像是相当罕见的。\n更糟糕的是，一些 SVG 图像使用了\u0026quot;像素\u0026quot;和 \u0026ldquo;点\u0026quot;的混合测量，除非作者故意这样做，否则你可能会得到一个真正的混乱，你可以尝试使用不同的密度，而不是作者想要的。幸运的是，这种情况更加罕见。\n一个简单的解决方法就是将 SVG 中所有的 \u0026ldquo;像素\u0026quot;单位改成\u0026quot;点\u0026rdquo;，但也不能盲目的使用，以防故意使用\u0026quot;像素\u0026rdquo;。\nSVG 输出处理 从 IM v6.4.2 开始，IM 可以将任何位图图像转换为 SVG 矢量图! 转换并不总是成功的，但较大和/或较简单的图像（如位图蒙版）会转换得很好。\n例如，我在这里将一个可怕的位图形状转换为SVG图像，然后再将其转换回来，以便将位图平滑为一个适当的反锯齿形状。\nconvert -pointsize 72 -font Candice label:A -threshold 50% \\ -trim +repage -bordercolor white -border 5x5 A.gif convert A.gif A.svg convert A.svg A.png -\u0026gt; 然而，要使之工作，必须安装\u0026quot;开发\u0026quot;的 AutoTrace 库，并在IM中配置 -with-autotrace 开关。\n如果没有安装 AutoTrace 库并将其编译到 IM 中，那么生成的 SVG 输出将是大量的单像素圆圈，生成一个二进制结果，而不是一个平滑的 SVG 轮廓图像。这样的图像比较巨大，通过 SVG 渲染往往需要很长的时间来渲染。\n其实需要一种更好的默认栅格到矢量的技术，可能会使用 Morphology skeletion 和 MAT 技术。\n有一个 autotrace: 输入代理，来\u0026quot;平滑输入位图图像\u0026rdquo;，直接使用 \u0026ldquo;autotrace\u0026rdquo; 命令一次性完成上述所有步骤。然而我最后一次看到这个代理已经消失了。\n你应该这样使用它\u0026hellip;\nconvert autotrace:A.gif A_traced.png 当然这并不能让你从 \u0026ldquo;autotrace\u0026rdquo; 命令中得到 SVG 输出，只是通过 SVG 过滤输入的图像来平滑它。\n作为一种替代方法，你可以直接使用 \u0026ldquo;autotrace\u0026rdquo; 命令，如 Raster to Vector Edging 和 Skeleton using Autotrace 示例所示。\n你也可以看看 cancerberosgx 的结果，在生成 SVG 图像，他研究了转换照片的解决方案。\n非IM矢量图形编辑器 ImageMagick 是一个像素数组处理器，它一般不会保存矢量图像（\u0026lsquo;MVG\u0026rsquo; 是唯一的例外），只会读取图像并将其转换为像素数组。\n其他像素图像编辑器也是如此，如 Gimp、Photoshop 等。\n对于编辑和处理基于矢量的图像，可以使用以下程序，如\nSodipodi 基于SVG的矢量图形编辑器。 Xfig 简单但非常好的矢量对象编辑器。(适用于标志、地图和在页面上排列照片) Dia AutoTrace 将位图数组中的形状转换为矢量轮廓。 Sketch 基于 Python 的曲线文字矢量编辑器。 当然，这不是一个完整的列表。即使是许多文字处理程序，如 OpenOffice、Word 和 TeX，一般都有各种简单的，虽然往往难以使用的对象编辑器。\n然而对于一般将矢量图形格式转换为不同的矢量格式，不要使用 ImageMagick。ImageMagick 本质上是一个光栅图像或位图图形转换器和操作器，而且永远都是这样。更多信息请参见 A word about Vector Image formats。\n创建于: 24 March 2004 更新于: 14 March 2011 作者: Anthony Thyssen, Anthony.Thyssen@gmail.com Examples Generated with: [version image] URL: http://www.imagemagick.org/Usage/draw/ "},"name":"ImageMagick - Drawing","published":"2020-07-05T00:00:00Z","summary":"ImageMagick Drawing","type":"entry","url":"https://ohmyweekly.github.io/notes/imagemagick-drawing/"}
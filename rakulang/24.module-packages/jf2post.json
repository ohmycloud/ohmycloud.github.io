{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003cp\u003e\u003cem\u003eN.B.\u003c/em\u003e \u0026ldquo;Module\u0026rdquo; is an overloaded term in Raku; this document focuses on use of the \u003ccode\u003emodule\u003c/code\u003e declarator.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e注意\u003c/em\u003e “模块”是 Raku 中的重载术语; 本文档重点介绍 \u003ccode\u003emodule\u003c/code\u003e 声明符的使用。\u003c/p\u003e\n\u003ch1 id=\"什么是模块httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e什么是模块?\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e模块，如类和 grammars，是一种\u003ca href=\"https://docs.raku.org/language/packages\"\u003e包\u003c/a\u003e。模块对象是 \u003ccode\u003eModuleHOW\u003c/code\u003e 元类的实例; 这提供了某些功能，可用于创建命名空间，版本控制，代理和数据封装（另请参见\u003ca href=\"https://docs.raku.org/syntax/class\"\u003e类\u003c/a\u003e和\u003ca href=\"https://docs.raku.org/syntax/role\"\u003e角色\u003c/a\u003e）。\u003c/p\u003e\n\u003cp\u003e要创建模块，请使用 \u003ccode\u003emodule\u003c/code\u003e 声明符：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eM\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eM\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eHOW\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «Raku::Metamodel::ModuleHOW.new» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里我们定义一个名为 \u003ccode\u003eM\u003c/code\u003e 的新模块; 内省 \u003ccode\u003eHOW\u003c/code\u003e 确认了底层的元类 \u003ccode\u003eM\u003c/code\u003e 是 \u003ccode\u003eRaku::Metamodel::ModuleHOW\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"何时使用模块httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e何时使用模块\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e模块主要用于封装不属于类或角色定义的代码和数据。模块内容（类，子程序，变量等）可以从具有 \u003ccode\u003eis export\u003c/code\u003e trait 的模块中导出; 一旦\u003ccode\u003eimport\u003c/code\u003e 或 \u003ccode\u003euse\u003c/code\u003e 了模块，这些内容在调用者的命名空间中就可用了。模块还可以选择性地在其命名空间中通过 \u003ccode\u003eour\u003c/code\u003e 暴露符号以进行限定引用。\u003c/p\u003e\n\u003ch2 id=\"使用模块httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e使用模块\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e为了说明模块作用域和导出规则，我们首先定义一个简单的模块 \u003ccode\u003eM\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eM\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCamelia\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eGreetings, \u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"s2\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eour\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eloud-greeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euc\u003c/span\u003e       \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003eexport\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efriend\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e回想一下，子例程是词法作用域的，除非另有说明（声明符 \u003ca href=\"https://docs.raku.org/syntax/sub\"\u003e\u003ccode\u003esub\u003c/code\u003e\u003c/a\u003e 等效于 \u003ccode\u003emy sub\u003c/code\u003e），因此\u003ccode\u003egreeting\u003c/code\u003e 在上面的示例中，词法作用域为模块并且在其外部不可访问。我们还使用 \u003ccode\u003eour\u003c/code\u003e 声明符定义了 \u003ccode\u003eloud-greeting\u003c/code\u003e，这意味着除了在词法作用域内，它还在模块的符号表中起了别名。最后，\u003ccode\u003efriendly-greeting\u003c/code\u003e 标记为导出; 导入模块时，它将在\u003cem\u003e调用者的\u003c/em\u003e符号表中注册：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eimport\u003c/span\u003e \u003cspan class=\"n\"\u003eM\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e               \u003cspan class=\"c1\"\u003e# import the module \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eM::loud-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «GREETINGS, CAMELIA!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «Greetings, friend!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"磁盘上的模块httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e磁盘上的模块\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e虽然 \u003ccode\u003e.pm\u003c/code\u003e 和 \u003ccode\u003e.pm6\u003c/code\u003e 文件（以下简称: \u003ccode\u003e.pm6\u003c/code\u003e) 有时被称为“模块”，但它们实际上只是在您写了 \u003ccode\u003eneed\u003c/code\u003e，\u003ccode\u003euse\u003c/code\u003e 或者 \u003ccode\u003erequire\u003c/code\u003e 时加载和编译的普通文件。\u003c/p\u003e\n\u003cp\u003e对于我们一直使用的意义上提供模块的 \u003ccode\u003e.pm6\u003c/code\u003e  文件，它需要如上所述用的用 \u003ccode\u003emodule\u003c/code\u003e 声明一个模块。例如，通过将模块 \u003ccode\u003eM\u003c/code\u003e 放入 \u003ccode\u003eFoo.pm6\u003c/code\u003e 内部，我们可以按如下方式加载和使用模块：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eFoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# find Foo.pm6, run need followed by import \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eM::loud-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «GREETINGS, CAMELIA!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «Greetings, friend!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意文件名和模块名之间的解耦 - \u003ccode\u003e.pm6\u003c/code\u003e 文件可以声明零个或多个具有任意标识符的模块。\u003c/p\u003e\n\u003ch2 id=\"文件和模块命名httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e文件和模块命名\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e我们通常希望 \u003ccode\u003e.pm6\u003c/code\u003e 文件提供\u003cem\u003e单个\u003c/em\u003e模块，仅此而已。这里的常见约定是文件 basename 与模块名称匹配。回到 \u003ccode\u003eFoo.pm6\u003c/code\u003e，显而易见的是，它仅提供单个模块，\u003ccode\u003eM\u003c/code\u003e; 在这种情况下，我们可能想要重命名 \u003ccode\u003eM\u003c/code\u003e 为 \u003ccode\u003eFoo\u003c/code\u003e。修改后的文件将为：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eFoo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCamelia\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eGreetings, \u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"s2\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003eour\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eloud-greeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euc\u003c/span\u003e       \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003eexport\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efriend\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可被调用者更一致地使用（注意 \u003ccode\u003euse Foo\u003c/code\u003e 和 \u003ccode\u003eFoo::\u003c/code\u003e 之间的关系）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eFoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo::loud-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «GREETINGS, CAMELIA!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «Greetings, friend!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果 \u003ccode\u003eFoo.pm6\u003c/code\u003e 在源树中放置得更深，例如在 \u003ccode\u003elib/Utils/Foo.pm6\u003c/code\u003e 中，我们可以选择命名模块 \u003ccode\u003eUtils::Foo\u003c/code\u003e 以保持一致性。\u003c/p\u003e\n\u003ch3 id=\"unit-关键字httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e\u003ccode\u003eunit\u003c/code\u003e 关键字\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e只提供单个模块的文件可以用 \u003ccode\u003eunit\u003c/code\u003e 关键字更简洁地编写; \u003ccode\u003eunit module\u003c/code\u003e 指定编译单元的其余部分是声明的模块的一部分。这里 \u003ccode\u003eFoo.pm6\u003c/code\u003e 使用 \u003ccode\u003eunit\u003c/code\u003e 重写：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eunit\u003c/span\u003e \u003cspan class=\"k\"\u003emodule\u003c/span\u003e \u003cspan class=\"nn\"\u003eFoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCamelia\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eGreetings, \u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"s2\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eour\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eloud-greeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euc\u003c/span\u003e       \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003eexport\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efriend\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e单元声明后的所有内容都是 \u003ccode\u003eFoo\u003c/code\u003e 模块规范的一部分。\u003c/p\u003e\n\u003cp\u003e（请注意，\u003ccode\u003eunit\u003c/code\u003e 也可以用于 \u003ccode\u003eclass\u003c/code\u003e，\u003ccode\u003egrammar\u003c/code\u003e 和 \u003ccode\u003erole\u003c/code\u003e）。\u003c/p\u003e\n\u003ch2 id=\"如果我省略了module会发生什么httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e如果我省略了\u003ccode\u003emodule\u003c/code\u003e会发生什么?\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003e为了更好地理解在 \u003ccode\u003eFoo.pm6\u003c/code\u003e 中 \u003ccode\u003emodule\u003c/code\u003e 声明符在做什么，让我们将它与变体文件 \u003ccode\u003eBar.pm6\u003c/code\u003e 进行对比，它省略了声明。下面的子程序定义几乎相同（唯一的区别在于 \u003ccode\u003egreeting\u003c/code\u003e 的正文，为了清晰起见而修改）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCamelia\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eGreetings from Bar, \u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"s2\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eour\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eloud-greeting\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euc\u003c/span\u003e                \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003eexport\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nf\"\u003egreeting\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efriend\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e           \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e提醒一下，这是我们以前使用 \u003ccode\u003eFoo.pm6\u003c/code\u003e 的方式，\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eFoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eFoo::loud-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «GREETINGS, CAMELIA!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «Greetings, friend!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这是我们使用 \u003ccode\u003eBar.pm6\u003c/code\u003e 的方式，\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eBar\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eloud-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# OUTPUT: «GREETINGS FROM BAR, CAMELIA!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003efriendly-greeting\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «Greetings from Bar, friend!» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意 \u003ccode\u003eloud-greeting\u003c/code\u003e 的使用，而不是 \u003ccode\u003eBar::loud-greeting\u003c/code\u003e 因为 \u003ccode\u003eBar\u003c/code\u003e 不是已知符号（我们没有在 \u003ccode\u003eBar.pm6\u003c/code\u003e 中创建一个以那个名字命名的 \u003ccode\u003emodule\u003c/code\u003e）。但是为什么 \u003ccode\u003eloud-greeting\u003c/code\u003e是可调用的, 即使我们没有将其标记为导出。答案很简单，\u003ccode\u003eBar.pm6\u003c/code\u003e 不创建一个新的包命名空间 - \u003ccode\u003e$?PACKAGE\u003c/code\u003e 仍设置为 \u003ccode\u003eGLOBAL\u003c/code\u003e 当我们将 \u003ccode\u003eloud-greeting\u003c/code\u003e声明为 \u003ccode\u003eour\u003c/code\u003e 时，它被注册到 \u003ccode\u003eGLOBAL\u003c/code\u003e 符号表中。\u003c/p\u003e\n\u003ch3 id=\"词法别名和安全httpsdocsrakuorglanguagemodule-packages___top\"\u003e\u003ca href=\"https://docs.raku.org/language/module-packages#___top\"\u003e词法别名和安全\u003c/a\u003e\u003c/h3\u003e\n\u003cp\u003e值得庆幸的是，Raku 保护我们免受意外调用地点定义的痛击（例如内置函数）。除了 \u003ccode\u003eBar.pm6\u003c/code\u003e 考虑以下内容：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eour\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$ignored\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eoh dear\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这会创建一个词法别名，将内置 \u003ccode\u003esay\u003c/code\u003e 隐藏在 \u003ccode\u003eBar.pm6\u003c/code\u003e \u003cem\u003e内部\u003c/em\u003e 但保持调用者 \u003ccode\u003esay\u003c/code\u003e 不变。因此，以下 \u003ccode\u003esay\u003c/code\u003e 调用仍然按预期工作：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eBar\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eCarry on, carry on...\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «Carry on, carry on...» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"N.B. \u0026ldquo;Module\u0026rdquo; is an overloaded term in Raku; this document focuses on use of the module declarator.\n注意 “模块”是 Raku 中的重载术语; 本文档重点介绍 module 声明符的使用。\n什么是模块? 模块，如类和 grammars，是一种包。模块对象是 ModuleHOW 元类的实例; 这提供了某些功能，可用于创建命名空间，版本控制，代理和数据封装（另请参见类和角色）。\n要创建模块，请使用 module 声明符：\nmodule M {} say M.HOW; # OUTPUT: «Raku::Metamodel::ModuleHOW.new» 这里我们定义一个名为 M 的新模块; 内省 HOW 确认了底层的元类 M 是 Raku::Metamodel::ModuleHOW。\n何时使用模块 模块主要用于封装不属于类或角色定义的代码和数据。模块内容（类，子程序，变量等）可以从具有 is export trait 的模块中导出; 一旦import 或 use 了模块，这些内容在调用者的命名空间中就可用了。模块还可以选择性地在其命名空间中通过 our 暴露符号以进行限定引用。\n使用模块 为了说明模块作用域和导出规则，我们首先定义一个简单的模块 M：\nmodule M { sub greeting ($name = \u0026#39;Camelia\u0026#39;) { \u0026#34;Greetings, $name!\u0026#34; } our sub loud-greeting (--\u0026gt; Str) { greeting().uc } sub friendly-greeting is export { greeting(\u0026#39;friend\u0026#39;) } } 回想一下，子例程是词法作用域的，除非另有说明（声明符 sub 等效于 my sub），因此greeting 在上面的示例中，词法作用域为模块并且在其外部不可访问。我们还使用 our 声明符定义了 loud-greeting，这意味着除了在词法作用域内，它还在模块的符号表中起了别名。最后，friendly-greeting 标记为导出; 导入模块时，它将在调用者的符号表中注册：\nimport M; # import the module say M::loud-greeting; # OUTPUT: «GREETINGS, CAMELIA!» say friendly-greeting; # OUTPUT: «Greetings, friend!» 磁盘上的模块 虽然 .pm 和 .pm6 文件（以下简称: .pm6) 有时被称为“模块”，但它们实际上只是在您写了 need，use 或者 require 时加载和编译的普通文件。\n对于我们一直使用的意义上提供模块的 .pm6 文件，它需要如上所述用的用 module 声明一个模块。例如，通过将模块 M 放入 Foo.pm6 内部，我们可以按如下方式加载和使用模块：\nuse Foo; # find Foo.pm6, run need followed by import say M::loud-greeting; # OUTPUT: «GREETINGS, CAMELIA!» say friendly-greeting; # OUTPUT: «Greetings, friend!» 注意文件名和模块名之间的解耦 - .pm6 文件可以声明零个或多个具有任意标识符的模块。\n文件和模块命名 我们通常希望 .pm6 文件提供单个模块，仅此而已。这里的常见约定是文件 basename 与模块名称匹配。回到 Foo.pm6，显而易见的是，它仅提供单个模块，M; 在这种情况下，我们可能想要重命名 M 为 Foo。修改后的文件将为：\nmodule Foo { sub greeting ($name = \u0026#39;Camelia\u0026#39;) { \u0026#34;Greetings, $name!\u0026#34; } our sub loud-greeting (--\u0026gt; Str) { greeting().uc } sub friendly-greeting is export { greeting(\u0026#39;friend\u0026#39;) } } 可被调用者更一致地使用（注意 use Foo 和 Foo:: 之间的关系）：\nuse Foo; say Foo::loud-greeting; # OUTPUT: «GREETINGS, CAMELIA!» say friendly-greeting; # OUTPUT: «Greetings, friend!» 如果 Foo.pm6 在源树中放置得更深，例如在 lib/Utils/Foo.pm6 中，我们可以选择命名模块 Utils::Foo 以保持一致性。\nunit 关键字 只提供单个模块的文件可以用 unit 关键字更简洁地编写; unit module 指定编译单元的其余部分是声明的模块的一部分。这里 Foo.pm6 使用 unit 重写：\nunit module Foo; sub greeting ($name = \u0026#39;Camelia\u0026#39;) { \u0026#34;Greetings, $name!\u0026#34; } our sub loud-greeting (--\u0026gt; Str) { greeting().uc } sub friendly-greeting is export { greeting(\u0026#39;friend\u0026#39;) } 单元声明后的所有内容都是 Foo 模块规范的一部分。\n（请注意，unit 也可以用于 class，grammar 和 role）。\n如果我省略了module会发生什么? 为了更好地理解在 Foo.pm6 中 module 声明符在做什么，让我们将它与变体文件 Bar.pm6 进行对比，它省略了声明。下面的子程序定义几乎相同（唯一的区别在于 greeting 的正文，为了清晰起见而修改）：\nsub greeting ($name = \u0026#39;Camelia\u0026#39;) { \u0026#34;Greetings from Bar, $name!\u0026#34; } our sub loud-greeting (--\u0026gt; Str) { greeting().uc } sub friendly-greeting is export { greeting(\u0026#39;friend\u0026#39;) } 提醒一下，这是我们以前使用 Foo.pm6 的方式，\nuse Foo; say Foo::loud-greeting; # OUTPUT: «GREETINGS, CAMELIA!» say friendly-greeting; # OUTPUT: «Greetings, friend!» 这是我们使用 Bar.pm6 的方式，\nuse Bar; say loud-greeting; # OUTPUT: «GREETINGS FROM BAR, CAMELIA!» say friendly-greeting; # OUTPUT: «Greetings from Bar, friend!» 注意 loud-greeting 的使用，而不是 Bar::loud-greeting 因为 Bar 不是已知符号（我们没有在 Bar.pm6 中创建一个以那个名字命名的 module）。但是为什么 loud-greeting是可调用的, 即使我们没有将其标记为导出。答案很简单，Bar.pm6 不创建一个新的包命名空间 - $?PACKAGE 仍设置为 GLOBAL 当我们将 loud-greeting声明为 our 时，它被注册到 GLOBAL 符号表中。\n词法别名和安全 值得庆幸的是，Raku 保护我们免受意外调用地点定义的痛击（例如内置函数）。除了 Bar.pm6 考虑以下内容：\nour sub say ($ignored) { print \u0026#34;oh dear\\n\u0026#34; } 这会创建一个词法别名，将内置 say 隐藏在 Bar.pm6 内部 但保持调用者 say 不变。因此，以下 say 调用仍然按预期工作：\nuse Bar; say \u0026#39;Carry on, carry on...\u0026#39;; # OUTPUT: «Carry on, carry on...» "},"name":"模块包","published":"2018-10-30T21:13:31+08:00","summary":"N.B. \u0026ldquo;Module\u0026rdquo; is an overloaded term in Raku; this document focuses on use of the module declarator.\n注意 “模块”是 Raku 中的重载术语; 本文档重点介绍 module 声明符的使用。\n什么是模块? 模块，如类和 grammars，是一种包。模块对象是 ModuleHOW 元类的实例; 这提供了某些功能，可用于创建命名空间，版本控制，代理和数据封装（另请参见类和角色）。\n要创建模块，请使用 module 声明符：\nmodule M {} say M.HOW; # OUTPUT: «Raku::Metamodel::ModuleHOW.new» 这里我们定义一个名为 M 的新模块; 内省 HOW 确认了底层的元类 M 是 Raku::Metamodel::ModuleHOW。\n何时使用模块 模块主要用于封装不属于类或角色定义的代码和数据。模块内容（类，子程序，变量等）可以从具有 is export trait 的模块中导出; 一旦import 或 use 了模块，这些内容在调用者的命名空间中就可用了。模块还可以选择性地在其命名空间中通过 our 暴露符号以进行限定引用。\n使用模块 为了说明模块作用域和导出规则，我们首先定义一个简单的模块 M：\nmodule M { sub greeting ($name = \u0026#39;Camelia\u0026#39;) { \u0026#34;Greetings, $name!","type":"entry","url":"http://localhost:1313/rakulang/24.module-packages/"}
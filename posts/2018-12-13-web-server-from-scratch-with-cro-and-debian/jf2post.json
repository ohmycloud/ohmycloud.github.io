{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003cp\u003e我和圣诞老人​​谈过，他说他不知道如何在 \u003cstrong\u003eDebian\u003c/strong\u003e 上安装 \u003cstrong\u003eCro\u003c/strong\u003e，所以我对自己说：我要帮助他。\u003c/p\u003e\n\u003cp\u003e如果您对 \u003cstrong\u003eApache\u003c/strong\u003e 等 Web 服务器有一些经验，并且您已经听说过 \u003cstrong\u003eRaku\u003c/strong\u003e 强大的并发/响应方面，那么您肯定有兴趣了解 \u003ca href=\"https://cro.services/\"\u003eCro 服务\u003c/a\u003e。这篇文章的受众是\u003cstrong\u003e具有 Debian 基本经验的人\u003c/strong\u003e，或者在 \u003cstrong\u003eRaku\u003c/strong\u003e 新手\u0026hellip;就像圣诞老人一样。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCro\u003c/strong\u003e 是一个 \u003cstrong\u003eRaku 模块\u003c/strong\u003e，它提供了轻松构建反应式和并发服务所需的一切，例如：Web 服务器。\u003c/p\u003e\n\u003cp\u003e在这篇文章中，我们将看到如何在 \u003cstrong\u003eDebian\u003c/strong\u003e 中安装 \u003cstrong\u003eCro\u003c/strong\u003e，这是最受欢迎的 Linux 发行版之一。然后，我将解释 \u003cstrong\u003eCro\u003c/strong\u003e 的演示示例。\u003c/p\u003e\n\u003cp\u003e我们将使用 \u003cstrong\u003eDebian 9,64 位\u003c/strong\u003e（Stretch），我们将在安装后启动它。\u003c/p\u003e\n\u003ch2 id=\"安装-rakudo-raku-编译器\"\u003e安装 Rakudo Raku 编译器\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://rakudo.org/\"\u003eRakudo\u003c/a\u003e 是 \u003cstrong\u003eCro\u003c/strong\u003e 模块运行的当前 \u003cstrong\u003eRaku\u003c/strong\u003e 编译器。安装 \u003cstrong\u003eRakudo\u003c/strong\u003e 的常规方法是安装 \u003ca href=\"https://rakudo.org/files\"\u003eRakudo Star\u003c/a\u003e，但我更喜欢快速的方式：\u003ca href=\"https://github.com/nxadm/rakudo-pkg\"\u003erakudo-pkg\u003c/a\u003e \u0026hellip;\u0026hellip;怎么样？只需从此 \u003ca href=\"https://github.com/nxadm/rakudo-pkg#direct-downloads\"\u003erepo\u003c/a\u003e 下载并安装相应的 \u003cstrong\u003eDebian 软件包\u003c/strong\u003e。在我们的例子中，是来自 \u003cstrong\u003eDebian 9, 64位\u003c/strong\u003e的 \u003cstrong\u003e.deb\u003c/strong\u003e 文件。\u003c/p\u003e\n\u003cp\u003e使用 \u003cstrong\u003eDebian\u003c/strong\u003e 中的 root 用户，我们可以在 root home 中为 \u003cstrong\u003eRakudo\u003c/strong\u003e 创建一个包文件夹，进入这个目录，下载 \u003cstrong\u003eDebian 9, 64 位\u003c/strong\u003e的当前 \u003cstrong\u003eRakudo\u003c/strong\u003e 包，并安装它。就我而言：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003emkdir\u003c/span\u003e \u003cspan class=\"o\"\u003e~/\u003c/span\u003e\u003cspan class=\"n\"\u003erakudo-packages\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"n\"\u003ecd\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003ewget\u003c/span\u003e \u003cspan class=\"n\"\u003ehttps:\u003c/span\u003e\u003cspan class=\"p\"\u003e//\u003c/span\u003e\u003cspan class=\"n\"\u003egithub\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecom\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003enxadm\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003erakudo-pkg\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003ereleases\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003edownload\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"k\"\u003ev\u003c/span\u003e\u003cspan class=\"mi\"\u003e2018\u003c/span\u003e\u003cspan class=\"ni\"\u003e.10\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mo\"\u003e02\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003erakudo-pkg-Debian9_2018\u003c/span\u003e\u003cspan class=\"mf\"\u003e.10\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mo\"\u003e02\u003c/span\u003e\u003cspan class=\"n\"\u003e_amd64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edeb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edpkg\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"no\"\u003ei\u003c/span\u003e \u003cspan class=\"n\"\u003erakudo-pkg-Debian9_2018\u003c/span\u003e\u003cspan class=\"mf\"\u003e.10\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mo\"\u003e02\u003c/span\u003e\u003cspan class=\"n\"\u003e_amd64\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edeb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eRakudo\u003c/strong\u003e 运行时编译器和相关工具现在安装在 \u003cstrong\u003e/opt/rakudo-pkg\u003c/strong\u003e 文件夹中。在 \u003cstrong\u003eexport PATH\u003c/strong\u003e 行之前，让所有用户在 \u003cstrong\u003e/etc/profile\u003c/strong\u003e 文件中插入以下行：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ePATH=$PATH:/opt/rakudo-pkg/bin\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e最后运行：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esource\u003c/span\u003e /etc/profile\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为所有用户重新加载 \u003cstrong\u003eDebian\u003c/strong\u003e 配置文件。\u003c/p\u003e\n\u003cp\u003e输入 \u003cstrong\u003eraku -v\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eraku -v\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eThis is Rakudo version 2018.10 built on MoarVM version 2018.10\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eimplementing Raku.c.\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e欢迎来到 \u003cstrong\u003eRakudo Raku!\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"安装-cro-服务\"\u003e安装 Cro 服务\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eCro\u003c/strong\u003e 是 Raku 模块，\u003cstrong\u003eZef\u003c/strong\u003e 是已经安装的当前 \u003cstrong\u003eRaku\u003c/strong\u003e 模块管理器。我们来安装 \u003cstrong\u003eCro\u003c/strong\u003e 吧！\u003c/p\u003e\n\u003cp\u003e首先，我们将安装一些 \u003cstrong\u003eCro 包依赖项\u003c/strong\u003e，例如 \u003cstrong\u003egit\u003c/strong\u003e 来连接和下载来自 Cro 相关存储库的文件，\u003cstrong\u003elibssl-dev\u003c/strong\u003e 以提供对安全套接字层的支持，\u003cstrong\u003ebuild-essential\u003c/strong\u003e 用于构建在安装期间 \u003cstrong\u003eCro\u003c/strong\u003e 所使用的一些依赖项：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eapt-get install git libssl-dev build-essential\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果您位于仅允许 Web 流量（端口80和443）的防火墙下，它将阻止 \u003cstrong\u003egit\u003c/strong\u003e 协议使用的端口，并且 \u003cstrong\u003eCro\u003c/strong\u003e 安装将失败。要避免这种情况，请键入：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit config --global url.\u003cspan class=\"s2\"\u003e\u0026#34;https://\u0026#34;\u003c/span\u003e.insteadOf git://\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这告诉 \u003cstrong\u003egit\u003c/strong\u003e 使用 \u003cstrong\u003ehttps\u003c/strong\u003e 而不是 \u003cstrong\u003egit\u003c/strong\u003e 协议来连接 git 远程仓库。\u003c/p\u003e\n\u003cp\u003e现在我们准备用 \u003cstrong\u003eZef\u003c/strong\u003e（及其所有依赖项）安装 \u003cstrong\u003eCro\u003c/strong\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ezef install cro\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果在测试阶段安装失败，请尝试：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ezef install --/test cro\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果 \u003cstrong\u003eCro\u003c/strong\u003e 安装正确完成，\u003cstrong\u003eCro\u003c/strong\u003e 就准备好了。\u003c/p\u003e\n\u003ch2 id=\"cro-实战\"\u003eCro 实战\u003c/h2\u003e\n\u003cp\u003e让我们继续演示脚本。创建一个工作区文件夹，输入它并将下面的代码粘贴到名为 \u003cstrong\u003eserver.p6\u003c/strong\u003e 的新文件中：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eCro::HTTP::Router\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eCro::HTTP::Server\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$application\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eroute\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003eget\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egreet\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003econtent\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etext/plain\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHello, \u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"s2\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eCro::Service\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hello\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCro::HTTP::Server\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"s\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e0.0.0.0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e10000\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$application\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$hello\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"k\"\u003estart\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ereact\u003c/span\u003e \u003cspan class=\"k\"\u003ewhenever\u003c/span\u003e \u003cspan class=\"nb\"\u003esignal\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eSIGINT\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hello\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estop\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个脚本有 \u003cstrong\u003e4个部分\u003c/strong\u003e：\u003c/p\u003e\n\u003cp\u003e“use”使\u003cstrong\u003e路由\u003c/strong\u003e和\u003cstrong\u003e服务\u003c/strong\u003e类可用于下面。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e$application\u003c/strong\u003e 是包含我们的 Web 应用程序的路由逻辑的对象，接收数据并将数据从客户端分发到我们的服务器。在这种情况下，\u003cstrong\u003eget  -\u0026gt;\u0026lsquo;greet\u0026rsquo;，$name\u003c/strong\u003e 映射来自客户端 Web 浏览器的传入 URL \u003cstrong\u003e/greet/Ramiro\u003c/strong\u003e，在对象 \u003cstrong\u003e$name\u003c/strong\u003e 中推送 Ramiro。然后将代码转换为花括号 {}，返回响应 HTTP 请求头 \u003cstrong\u003econtent \u0026rsquo;text/plain\u0026rsquo;\u003c/strong\u003e 和 HTTP 请求体 \u003cstrong\u003eHello, Ramiro!\u003c/strong\u003e 到客户端 Web 浏览器。在一个严肃的应用程序中，在这部分中将会调用应用程序本身，并且它将等待响应，如示例所示。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e$hello\u003c/strong\u003e 是一个服务对象，它使传入的数据通过新的侦听套接字传递给我们的 \u003cstrong\u003e$application\u003c/strong\u003e。它有3个参数，\u003cstrong\u003e:host\u0026lt;0.0.0.0\u0026gt;\u003c/strong\u003e 是服务启动的 localhost, \u003cstrong\u003e:port\u0026lt;10000\u0026gt;\u003c/strong\u003e 是用于监听传入数据的端口，\u003cstrong\u003e$application\u003c/strong\u003e 是我们的Web 应用程序。 下面的行 \u003cstrong\u003e$hello.start\u003c/strong\u003e 开始侦听。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ereact whenever\u003c/strong\u003e 等待按下 CTRL-C 时停止 Web 服务。\u003c/p\u003e\n\u003cp\u003e现在是从 shell 运行 Web 服务的时刻：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eraku server.p6\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在您需要知道服务器主机的当前 IP 地址，尝试使用 \u003cstrong\u003eip addr\u003c/strong\u003e。我的 Ip 地址是: \u003cstrong\u003e192.168.1.48\u003c/strong\u003e。\u003c/p\u003e\n\u003cp\u003e然后，从同一网络中的其他主机，打开 Web 浏览器并键入（在我这儿）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ehttp://192.168.1.48:10000/greet/Ramiro\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e答案应该是 \u003cstrong\u003eHello, Ramiro!\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"总结\"\u003e总结\u003c/h2\u003e\n\u003cp\u003e从 \u003cstrong\u003eDebian\u003c/strong\u003e 的新安装开始，我们已经了解了如何安装 \u003cstrong\u003eCro\u003c/strong\u003e 并运行演示脚本。现在，您已准备好继续使用 Cro 文档，并发现 \u003cstrong\u003eRaku\u003c/strong\u003e 可提供的最有前途的并发/异步服务平台。\u003c/p\u003e\n\u003cp\u003e我希望在阅读这篇文章并查看 \u003ca href=\"https://cro.services/docs\"\u003eCro 文档\u003c/a\u003e后，圣诞老人可以将他的网站迁移到 Cro Services。\u003c/p\u003e\n","text":"我和圣诞老人​​谈过，他说他不知道如何在 Debian 上安装 Cro，所以我对自己说：我要帮助他。\n如果您对 Apache 等 Web 服务器有一些经验，并且您已经听说过 Raku 强大的并发/响应方面，那么您肯定有兴趣了解 Cro 服务。这篇文章的受众是具有 Debian 基本经验的人，或者在 Raku 新手\u0026hellip;就像圣诞老人一样。\nCro 是一个 Raku 模块，它提供了轻松构建反应式和并发服务所需的一切，例如：Web 服务器。\n在这篇文章中，我们将看到如何在 Debian 中安装 Cro，这是最受欢迎的 Linux 发行版之一。然后，我将解释 Cro 的演示示例。\n我们将使用 Debian 9,64 位（Stretch），我们将在安装后启动它。\n安装 Rakudo Raku 编译器 Rakudo 是 Cro 模块运行的当前 Raku 编译器。安装 Rakudo 的常规方法是安装 Rakudo Star，但我更喜欢快速的方式：rakudo-pkg \u0026hellip;\u0026hellip;怎么样？只需从此 repo 下载并安装相应的 Debian 软件包。在我们的例子中，是来自 Debian 9, 64位的 .deb 文件。\n使用 Debian 中的 root 用户，我们可以在 root home 中为 Rakudo 创建一个包文件夹，进入这个目录，下载 Debian 9, 64 位的当前 Rakudo 包，并安装它。就我而言：\nmkdir ~/rakudo-packages \u0026amp;\u0026amp; cd $_ wget https://github.com/nxadm/rakudo-pkg/releases/download/v2018.10-02/rakudo-pkg-Debian9_2018.10-02_amd64.deb dpkg -i rakudo-pkg-Debian9_2018.10-02_amd64.deb Rakudo 运行时编译器和相关工具现在安装在 /opt/rakudo-pkg 文件夹中。在 export PATH 行之前，让所有用户在 /etc/profile 文件中插入以下行：\nPATH=$PATH:/opt/rakudo-pkg/bin 最后运行：\nsource /etc/profile 为所有用户重新加载 Debian 配置文件。\n输入 raku -v:\nraku -v This is Rakudo version 2018.10 built on MoarVM version 2018.10 implementing Raku.c. 欢迎来到 Rakudo Raku!\n安装 Cro 服务 Cro 是 Raku 模块，Zef 是已经安装的当前 Raku 模块管理器。我们来安装 Cro 吧！\n首先，我们将安装一些 Cro 包依赖项，例如 git 来连接和下载来自 Cro 相关存储库的文件，libssl-dev 以提供对安全套接字层的支持，build-essential 用于构建在安装期间 Cro 所使用的一些依赖项：\napt-get install git libssl-dev build-essential 如果您位于仅允许 Web 流量（端口80和443）的防火墙下，它将阻止 git 协议使用的端口，并且 Cro 安装将失败。要避免这种情况，请键入：\ngit config --global url.\u0026#34;https://\u0026#34;.insteadOf git:// 这告诉 git 使用 https 而不是 git 协议来连接 git 远程仓库。\n现在我们准备用 Zef（及其所有依赖项）安装 Cro：\nzef install cro 如果在测试阶段安装失败，请尝试：\nzef install --/test cro 如果 Cro 安装正确完成，Cro 就准备好了。\nCro 实战 让我们继续演示脚本。创建一个工作区文件夹，输入它并将下面的代码粘贴到名为 server.p6 的新文件中：\nuse Cro::HTTP::Router; use Cro::HTTP::Server; my $application = route { get -\u0026gt; \u0026#39;greet\u0026#39;, $name { content \u0026#39;text/plain\u0026#39;, \u0026#34;Hello, $name!\u0026#34;; } } my Cro::Service $hello = Cro::HTTP::Server.new(:host\u0026lt;0.0.0.0\u0026gt;, :port\u0026lt;10000\u0026gt;, :$application); $hello.start; react whenever signal(SIGINT) { $hello.stop; exit; } 这个脚本有 4个部分：\n“use”使路由和服务类可用于下面。\n$application 是包含我们的 Web 应用程序的路由逻辑的对象，接收数据并将数据从客户端分发到我们的服务器。在这种情况下，get -\u0026gt;\u0026lsquo;greet\u0026rsquo;，$name 映射来自客户端 Web 浏览器的传入 URL /greet/Ramiro，在对象 $name 中推送 Ramiro。然后将代码转换为花括号 {}，返回响应 HTTP 请求头 content \u0026rsquo;text/plain\u0026rsquo; 和 HTTP 请求体 Hello, Ramiro! 到客户端 Web 浏览器。在一个严肃的应用程序中，在这部分中将会调用应用程序本身，并且它将等待响应，如示例所示。\n$hello 是一个服务对象，它使传入的数据通过新的侦听套接字传递给我们的 $application。它有3个参数，:host\u0026lt;0.0.0.0\u0026gt; 是服务启动的 localhost, :port\u0026lt;10000\u0026gt; 是用于监听传入数据的端口，$application 是我们的Web 应用程序。 下面的行 $hello.start 开始侦听。\nreact whenever 等待按下 CTRL-C 时停止 Web 服务。\n现在是从 shell 运行 Web 服务的时刻：\nraku server.p6 现在您需要知道服务器主机的当前 IP 地址，尝试使用 ip addr。我的 Ip 地址是: 192.168.1.48。\n然后，从同一网络中的其他主机，打开 Web 浏览器并键入（在我这儿）：\nhttp://192.168.1.48:10000/greet/Ramiro 答案应该是 Hello, Ramiro!\n总结 从 Debian 的新安装开始，我们已经了解了如何安装 Cro 并运行演示脚本。现在，您已准备好继续使用 Cro 文档，并发现 Raku 可提供的最有前途的并发/异步服务平台。\n我希望在阅读这篇文章并查看 Cro 文档后，圣诞老人可以将他的网站迁移到 Cro Services。\n"},"name":"第十三天 - 使用 Cro 和 Debian 从头构建 Web 服务","published":"2018-12-13T10:43:05+08:00","summary":"我和圣诞老人​​谈过，他说他不知道如何在 Debian 上安装 Cro，所以我对自己说：我要帮助他。\n如果您对 Apache 等 Web 服务器有一些经验，并且您已经听说过 Raku 强大的并发/响应方面，那么您肯定有兴趣了解 Cro 服务。这篇文章的受众是具有 Debian 基本经验的人，或者在 Raku 新手\u0026hellip;就像圣诞老人一样。\nCro 是一个 Raku 模块，它提供了轻松构建反应式和并发服务所需的一切，例如：Web 服务器。\n在这篇文章中，我们将看到如何在 Debian 中安装 Cro，这是最受欢迎的 Linux 发行版之一。然后，我将解释 Cro 的演示示例。\n我们将使用 Debian 9,64 位（Stretch），我们将在安装后启动它。\n安装 Rakudo Raku 编译器 Rakudo 是 Cro 模块运行的当前 Raku 编译器。安装 Rakudo 的常规方法是安装 Rakudo Star，但我更喜欢快速的方式：rakudo-pkg \u0026hellip;\u0026hellip;怎么样？只需从此 repo 下载并安装相应的 Debian 软件包。在我们的例子中，是来自 Debian 9, 64位的 .deb 文件。\n使用 Debian 中的 root 用户，我们可以在 root home 中为 Rakudo 创建一个包文件夹，进入这个目录，下载 Debian 9, 64 位的当前 Rakudo 包，并安装它。就我而言：","type":"entry","url":"https://ohmycloud.github.io/posts/2018-12-13-web-server-from-scratch-with-cro-and-debian/"}
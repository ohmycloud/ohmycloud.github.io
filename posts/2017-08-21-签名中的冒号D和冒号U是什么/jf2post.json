{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003cp\u003e在 Rakudo 中, 类和其他类型都是对象, 并且通过它们自身类型的类型检测。\u003c/p\u003e\n\u003cp\u003e例如, 如果你定义一个变量:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e那么你不仅可以给这个变量赋值整数(即, Int 类的实例), 而且可以给该变量赋值 Int 类型本身:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你想排除类型对象, 你可以在类型后面追加 \u003ccode\u003e:D\u003c/code\u003e 类型微笑符, 它代表着 \u0026ldquo;definite\u0026rdquo;(有定义的):\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt:D\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# dies with: \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                     \u003cspan class=\"c1\"\u003e# Type check failed in assignment to $x; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                     \u003cspan class=\"c1\"\u003e# expected Int:D but got Int \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e同样地, \u003ccode\u003e:U\u003c/code\u003e 代表未定义的(undefined)值, 即, 类型对象。\u003c/p\u003e\n\u003cp\u003e要显示地允许类型对象或实例, 那么使用 \u003ccode\u003e:_\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e更多例子, 见 \u003ca href=\"https://github.com/raku/roast/blob/master/S12-attributes/smiley.t\"\u003esmiley\u003c/a\u003e\u003c/p\u003e\n","text":"在 Rakudo 中, 类和其他类型都是对象, 并且通过它们自身类型的类型检测。\n例如, 如果你定义一个变量:\nmy Int $x = 42; 那么你不仅可以给这个变量赋值整数(即, Int 类的实例), 而且可以给该变量赋值 Int 类型本身:\n$x = Int 如果你想排除类型对象, 你可以在类型后面追加 :D 类型微笑符, 它代表着 \u0026ldquo;definite\u0026rdquo;(有定义的):\nmy Int:D $x = 42; $x = Int; # dies with: # Type check failed in assignment to $x; # expected Int:D but got Int 同样地, :U 代表未定义的(undefined)值, 即, 类型对象。\n要显示地允许类型对象或实例, 那么使用 :_。\n更多例子, 见 smiley\n"},"name":"签名中的 :D 和 :U 是什么?","published":"2017-08-21T00:00:00Z","summary":"signature","type":"entry","url":"http://localhost:1313/posts/2017-08-21-%E7%AD%BE%E5%90%8D%E4%B8%AD%E7%9A%84%E5%86%92%E5%8F%B7d%E5%92%8C%E5%86%92%E5%8F%B7u%E6%98%AF%E4%BB%80%E4%B9%88/"}
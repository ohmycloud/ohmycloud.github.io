{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003ch1 id=\"subscriptshttpsdocsrakuorglanguagesubscripts\"\u003e\u003ca href=\"https://docs.raku.org/language/subscripts\"\u003eSubscripts\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e通过索引或键访问数据结构中的元素。\u003c/p\u003e\n\u003cp\u003e通常，人们需要引用集合或数据结构中的一个特定的元素（或特定的元素切片）。从数学标记法中偷学到的，向量 \u003ccode\u003ev\u003c/code\u003e 的组成部分用 \u003cem\u003ev₁, v₂, v₃\u003c/em\u003e 来引用，在 Raku 中这个概念叫做 “下标” （或“索引”）。\u003c/p\u003e\n\u003ch1 id=\"basics\"\u003eBasics\u003c/h1\u003e\n\u003cp\u003eRaku 提供了两个通用的下标接口：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\t   elements are identified by     interface name    supported by\n[ ]\t zero-based indices\t              Positional        Array, List, Buf, Match, ...\n{ }\t string or object keys            Associative       Hash, Bag, Mix, Match, ...\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePositional\u003c/strong\u003e 下标 (通过 \u003ca href=\"http://doc.raku.org/language/operators#postcircumfix_%5B_%5D\"\u003epostcircumfix [ ]\u003c/a\u003e 通过元素在有序集合中的位置来寻址元素。)索引 0 引用第一个元素， 索引 1 引用第二个元素， 以此类推：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@chores\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ebuy groceries\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003efeed dog\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ewash car\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@chores\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; buy groceries\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@chores\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; feed dog\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@chores\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; wash car\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAssociative\u003c/strong\u003e 下标 (通过 \u003ca href=\"http://doc.raku.org/language/operators#postcircumfix_%7B_%7D\"\u003epostcircumfix { }\u003c/a\u003e), 不要求集合以任何特定的顺序保存元素 - 相反，它使用一个唯一的键来寻址每个值。键的种类取决于使用的集合： 举个例子， 一个标准的\u003ca href=\"http://doc.raku.org/type/Hash\"\u003e散列\u003c/a\u003e 使用字符串作为键， 而一个 \u003ca href=\"http://doc.raku.org/type/Mix\"\u003eMix\u003c/a\u003e 能使用任意的对象作为键， 等等:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%grade\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eZoe\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eC\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eBen\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eB+\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%grade\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eZoe\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;};\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; C\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%grade\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eBen\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;};\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; B+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stats\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003etoday\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mf\"\u003e4.18\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mf\"\u003e17.253\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eMix\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stats\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; 17.253\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e相对于传递单个-单词字符串键给 \u003ccode\u003e{ }\u003c/code\u003e , 你也可以使用\u003ca href=\"http://doc.raku.org/language/quoting#Word_quoting:_qw\"\u003e以尖括号引起单词的结构\u003c/a\u003e ，就像它们是后缀操作符一样：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%grade\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eZoe\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#-\u0026gt; C\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%grade\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eBen\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#-\u0026gt; B+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这实际上仅仅是在编译时被转换为对应 \u003ccode\u003e{ }\u003c/code\u003e 形式的语法糖：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003efoo bar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# same as %hash{ \u0026lt;foo bar\u0026gt; }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e«\u003c/span\u003e\u003cspan class=\"s2\"\u003efoo \u003c/span\u003e\u003cspan class=\"nv\"\u003e$var\u003c/span\u003e\u003cspan class=\"p\"\u003e»;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# same as %hash{ «foo $var» }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"s2\"\u003efoo \u003c/span\u003e\u003cspan class=\"nv\"\u003e$var\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026gt;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# same as %hash{ \u0026lt;\u0026lt;foo $var\u0026gt;\u0026gt; }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下标能应用到能返回可下标化对象的任何表达式上， 而不仅仅应用到变量上：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e__Hello__\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u003c/span\u003e\u003cspan class=\"sr\"\u003e__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e__\u003c/span\u003e\u003cspan class=\"p\"\u003e/)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e#-\u0026gt; ｢Hello｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e__Hello__\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u003c/span\u003e\u003cspan class=\"sr\"\u003e__\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e__\u003c/span\u003e\u003cspan class=\"p\"\u003e/)\u003c/span\u003e\u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# same, in method notation\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ePositional 和 associative  下标并不互相排斥 - 举个例子， \u003ccode\u003eMatch\u003c/code\u003e 对象两个都支持（每个访问不同的数据集）。还有， 为了让列表处理更方便， 类 \u003ccode\u003eAny\u003c/code\u003e 为\u003ccode\u003e位置下标\u003c/code\u003e提供了备用的实现，这会把调用者看作含有\u003ccode\u003e一个\u003c/code\u003e元素的列表。(但是对于关系下标，没有这样的备用实现， 所以会抛出一个异常，当下标被应用到没有实现支持的对象上时。)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#-\u0026gt; 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# ERROR: postcircumfix { } not defined for type Int\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"nonexistent-elements\"\u003eNonexistent elements\u003c/h1\u003e\n\u003cp\u003e当通过下标寻址一个不存在的元素所发生的事情取决于正在使用的集合类型。标准的 Array 和 Hash 集合返回它们的\u003ca href=\"http://doc.raku.org/routine/of\"\u003evalue type constraint\u003c/a\u003e  的类型对象（这默认是 \u003ccode\u003eAny\u003c/code\u003e）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array1\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (Any)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array2\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (Int)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash1\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (Any)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash2\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (Int)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而， 其它类型的集合可能在寻址不存在的元素的下标时反应也不用：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e#-\u0026gt; Nil\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea a b b b\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;)\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; 0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了在下标操作中默默地跳过不存在的元素， 查看 \u003ca href=\"http://doc.raku.org/language/subscripts#Truncating_slices\"\u003e#Truncating slices\u003c/a\u003e  和 \u003ca href=\"http://doc.raku.org/language/subscripts#%3Av\"\u003e\u003ccode\u003e#:v\u003c/code\u003e\u003c/a\u003e 副词。\u003c/p\u003e\n\u003ch1 id=\"from-the-end\"\u003eFrom the end\u003c/h1\u003e\n\u003cp\u003ePositional  索引是从集合的开头计数的， 但是也有一种标记法用于，通过相对于末尾的位置来寻址元素：\u003ccode\u003e*-1\u003c/code\u003e 引用最后一个元素， \u003ccode\u003e*-2\u003c/code\u003e 引用倒数第二个元素， 以此类推。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eZ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; Z\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; Y\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; X\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意：星号很重要。在 Raku中，如果像在很多其它编程语言中那样传递一个裸的负整数（例如 \u003ccode\u003e@alphabet[-1]\u003c/code\u003e）， 会抛出错误。\u003c/p\u003e\n\u003cp\u003e这里实际发生的是， \u003ccode\u003e*-1\u003c/code\u003e 那样的表达式通过 \u003ca href=\"http://doc.raku.org/type/Whatever\"\u003eWhatever\u003c/a\u003e 柯里化声明了一个代码对象 - \u003ccode\u003e[ ]\u003c/code\u003e会把代码对象作为索引， 通过集合的长度作为参数来调用它并使用结果值作为实际的索引。 换句话说，\u003ccode\u003e@alphabet[*-1]\u003c/code\u003e 变成了 \u003ccode\u003e@alphabet[@alphabet.elems - 1]\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e这意味着你可以使用任何依赖于集合尺寸的表达式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e[*\u003c/span\u003e \u003cspan class=\"ow\"\u003ediv\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 选择最中间的那个元素\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"o\"\u003e*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# wrap around a given index (\u0026#34;模运算\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$size\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"nv\"\u003e$size\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# same as previous\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"slices\"\u003eSlices\u003c/h1\u003e\n\u003cp\u003e当需要访问集合中的多个元素时，有一个快捷方式用于处理多个单独的下标操作：仅仅在下标中指定一个\u003ccode\u003e索引/键\u003c/code\u003e的列表，来取回一个元素的列表 - 也被叫做”切片” - 以相同的顺序。\u003c/p\u003e\n\u003cp\u003e对于 positional  切片， 你可以混合普通切片和  \u003ca href=\"http://doc.raku.org/language/subscripts#From_the_end\"\u003efrom-the-end\u003c/a\u003e 切片：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e15\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;p\u0026#34;, \u0026#34;e\u0026#34;, \u0026#34;r\u0026#34;, \u0026#34;l\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于 associative  切片，尖括号形式的切片通常会很方便：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%color\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003ekiwi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003egreen\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003ebanana\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eyellow\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003echerry\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ered\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%color\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003echerry\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ekiwi\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;};\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;red\u0026#34;, \u0026#34;green\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%color\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003echerry kiwi\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;red\u0026#34;, \u0026#34;green\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%color\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;green\u0026#34;, \u0026#34;red\u0026#34;, \u0026#34;yellow\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要知道切片是由传入 (\u003ca href=\"http://doc.raku.org/language/subscripts#Multiple_dimensions\"\u003eone dimension of\u003c/a\u003e)下标的类型控制的，而非它的长度：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esubscript\u003c/span\u003e\t                               \u003cspan class=\"nb\"\u003eresult\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eany\u003c/span\u003e \u003cspan class=\"kt\"\u003ePositional\u003c/span\u003e \u003cspan class=\"n\"\u003eobject\u003c/span\u003e \u003cspan class=\"nb\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003ecovered\u003c/span\u003e \u003cspan class=\"n\"\u003ebelow\u003c/span\u003e\t   \u003cspan class=\"n\"\u003enormal\u003c/span\u003e \u003cspan class=\"n\"\u003eslice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"kt\"\u003eRange\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"nb\"\u003einfinite\u003c/span\u003e \u003cspan class=\"n\"\u003esequence\u003c/span\u003e\t           \u003cspan class=\"n\"\u003etruncating\u003c/span\u003e \u003cspan class=\"n\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eonly\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003epositional\u003c/span\u003e \u003cspan class=\"n\"\u003esubscripts\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eWhatever-star\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\t                       \u003cspan class=\"nb\"\u003efull\u003c/span\u003e \u003cspan class=\"n\"\u003eslice\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eas\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eall\u003c/span\u003e \u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nb\"\u003eindices\u003c/span\u003e \u003cspan class=\"n\"\u003ewere\u003c/span\u003e \u003cspan class=\"n\"\u003especified\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eany\u003c/span\u003e \u003cspan class=\"n\"\u003eother\u003c/span\u003e \u003cspan class=\"n\"\u003eobject\u003c/span\u003e\t                       \u003cspan class=\"n\"\u003esingle-element\u003c/span\u003e \u003cspan class=\"n\"\u003eaccess\u003c/span\u003e \u003cspan class=\"n\"\u003erather\u003c/span\u003e \u003cspan class=\"n\"\u003ethan\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eslice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eempty\u003c/span\u003e\t                                   \u003cspan class=\"n\"\u003eZen\u003c/span\u003e \u003cspan class=\"n\"\u003eslice\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所以，即使一个单个元素的列表也会返回一个切片， 而一个裸的标量值不会：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;c\u0026#34;,)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e#-\u0026gt; \u0026#34;c\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e(尖括号形式的 associative 下标也没有问题，因为 \u003ca href=\"http://doc.raku.org/language/quoting#Word_quoting:_qw\"\u003eword quoting\u003c/a\u003e  在单个单词的情况下很方便的返回一个 Str, 但是在多个单词的情况下返回一个 \u003ca href=\"http://doc.raku.org/type/Parcel\"\u003eParcel\u003c/a\u003e)。\u003c/p\u003e\n\u003cp\u003e对于普通的切片，下标的内容 (\u003ca href=\"http://doc.raku.org/language/subscripts#Multiple_dimensions\"\u003ethe current dimension of\u003c/a\u003e) 在它的元素被解释为 \u003ccode\u003e索引/键\u003c/code\u003e 之前会被展平(flattened)：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\u003cspan class=\"err\"\u003e];  #-\u0026gt; (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"truncating-slices\"\u003eTruncating slices\u003c/h2\u003e\n\u003cp\u003e通常, 在切片下标中引用不存在的元素会让输出列表包含未定义的值。然而， 如果传递给位置下标的对象是一个 Range 或使用序列操作符构建的无限序列， 它会被自动截断到集合的实际尺寸：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@letters\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e f\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@letters\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;d\u0026#34;, \u0026#34;e\u0026#34;, \u0026#34;f\u0026#34;, Any, Any)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@letters\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;d\u0026#34;, \u0026#34;e\u0026#34;, \u0026#34;f\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"http://doc.raku.org/language/subscripts#From_the_end\"\u003eFrom-the-end\u003c/a\u003e  索引被允许作为范围的端点，代表无限的范围和序列：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"o\"\u003e*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# select the last three elements\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@array\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# select all elements with even indices\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想把你的切片指定为 \u003ccode\u003erange/sequence\u003c/code\u003e 但仍旧想默默地跳过不存在的元素， 你可以使用 \u003ca href=\"http://doc.raku.org/language/subscripts#%3Av\"\u003e#:v\u003c/a\u003e 副词。\u003c/p\u003e\n\u003ch2 id=\"zen-slices\"\u003eZen slices\u003c/h2\u003e\n\u003cp\u003e如果你写的下标没有指定任何 \u003ccode\u003e索引/键\u003c/code\u003e ，那它就会返回被脚注的对象自身。因为它是空的但是返回了全部东西， 这就是所谓的 \u0026ldquo;Zen slice\u0026rdquo;。\u003c/p\u003e\n\u003cp\u003e这和传递一个  Whatever-star （这，像普通的切片， 总是返回一个元素的 Parcel，不管原对象的类型）还有传递一个空的列表都不同（它返回一个空的切片）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%bag\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eorange\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eapple\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eBag\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%bag\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;orange\u0026#34;=\u0026gt;1,\u0026#34;apple\u0026#34;=\u0026gt;3).Bag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%bag\u003c/span\u003e\u003cspan class=\"p\"\u003e{};\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;orange\u0026#34;=\u0026gt;1,\u0026#34;apple\u0026#34;=\u0026gt;3).Bag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%bag\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e   \u003cspan class=\"c1\"\u003e#-\u0026gt; (1, 3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%bag\u003c/span\u003e\u003cspan class=\"p\"\u003e{()};\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; ()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这通常被用于把整个 \u003ccode\u003e数组/散列\u003c/code\u003e 插值到字符串中：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@words\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ecruel\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eworld\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHello, \u003c/span\u003e\u003cspan class=\"nv\"\u003e@words\u003c/span\u003e\u003cspan class=\"s2\"\u003e[]!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; Hello, cruel world!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"multiple-dimensions\"\u003eMultiple dimensions\u003c/h1\u003e\n\u003cp\u003e尚未实现！等到 9 月份？\u003c/p\u003e\n\u003ch1 id=\"modifying-elements\"\u003eModifying elements\u003c/h1\u003e\n\u003ch1 id=\"autovivification\"\u003eAutovivification\u003c/h1\u003e\n\u003cp\u003e下标参与 \u0026ldquo;autovivification”（自动复活），i.e. 这是一种数组和散列在需要时会自动存在的处理， 以至于你没有必要在每一层级预声明集合的类型来构建嵌套的数据结构：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$beatles\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$beatles\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eWhite Album\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;}\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eBack in the U.S.S.R.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# autovivification!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$beatles\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; {\u0026#34;White Album\u0026#34; =\u0026gt; [\u0026#34;Back in the U.S.S.R.\u0026#34;]}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e$beatles\u003c/code\u003e  从未定义开始， 但是它变成了一个 Hash 对象， 因为它在赋值时用 \u003ccode\u003e{ }\u003c/code\u003e 标注了。 类似地，  \u003ccode\u003e$beatles{\u0026quot;White Album”}\u003c/code\u003e 变成一个 Array 对象， 因为它在赋值时用 \u003ccode\u003e[ ]\u003c/code\u003e 标注了。\u003c/p\u003e\n\u003cp\u003e注意下标本身不会引起 autovivification（自动复活）：它只发生在下标链的结果被赋值时（或变化时）。\u003c/p\u003e\n\u003ch1 id=\"binding\"\u003eBinding\u003c/h1\u003e\n\u003cp\u003e下标表达式也可以用在绑定语句的左侧。如果被标注的集合的类型支持， 这会使用指定的容器替换集合里的插槽的值：（给跪了！）\u003c/p\u003e\n\u003cp\u003e内置的 Array 和 Hash 类型支持这种绑定， 为了允许构建复杂的联动的数据结构：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# binding! (@a[2] and $x refer to the same container now.)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; [10, 11, 3, 13]\u0026lt;\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e查看 \u003ca href=\"http://doc.raku.org/language/subscripts#method_BIND-POS\"\u003e#method BIND-POS\u003c/a\u003e 和 \u003ca href=\"http://doc.raku.org/language/subscripts#method_BIND-KEY\"\u003e#method BIND-KEY\u003c/a\u003e 了解底层机制.\u003c/p\u003e\n\u003ch1 id=\"adverbs\"\u003eAdverbs\u003c/h1\u003e\n\u003cp\u003e下标操作的返回值和可能存在的副作用能够使用副词来控制。\u003c/p\u003e\n\u003cp\u003e要知道副词操作符的优先级相对宽松，这可能需要你在合成表达式中添加括号：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# WRONG, tries to adverb the || op\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e%hash\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# correct\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e支持的副词有:\u003c/p\u003e\n\u003ch2 id=\"exists\"\u003e:exists\u003c/h2\u003e\n\u003cp\u003e返回请求的元素是否存在，而不是返回元素实际的值。这能够用于区别未定义值的元素和一点儿也不属于集合部分的元素：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003edefined\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#-\u0026gt; False\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e#-\u0026gt; True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e#-\u0026gt; False\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (True, False)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eapple\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eorange\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eapple\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003edefined\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e#-\u0026gt; False\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eapple\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e#-\u0026gt; True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ebanana\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e#-\u0026gt; False\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eapple banana\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e#-\u0026gt; (True, False)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以对副词取反来测试不存在：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eapple banana\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e#-\u0026gt; (False, True)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要检查切片的所有元素是否存在， 使用 \u003ca href=\"http://doc.raku.org/routine/all\"\u003eall\u003c/a\u003e junction:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eall\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eapple orange banana\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e:exists\u003c/code\u003e  可以和  \u003ca href=\"http://doc.raku.org/language/subscripts#%3Adelete\"\u003e:delete\u003c/a\u003e 还有 \u003ccode\u003e:p/:kv\u003c/code\u003e 副词组合 - 这时表达式的行为就由那些副词决定，除了使用表明元素存在的对应 Bool 值替换返回的元素值之外。\u003c/p\u003e\n\u003cp\u003e查看 \u003ca href=\"http://doc.raku.org/language/subscripts#method_EXISTS-POS\"\u003emethod EXISTS-POS\u003c/a\u003e  和 \u003ca href=\"http://doc.raku.org/language/subscripts#method_EXISTS-KEY\"\u003emethod EXISTS-KEY\u003c/a\u003e \b了解底层机制.\u003c/p\u003e\n\u003ch2 id=\"delete\"\u003e:delete\u003c/h2\u003e\n\u003cp\u003e从集合中删除元素， 除了返回它们的值以外。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e#-\u0026gt; 30\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e               \u003cspan class=\"c1\"\u003e#-\u0026gt; [0, 10, 20]\u0026lt;\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eapple\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eorange\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003ebanana\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003epeach\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e17\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eapple\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e#-\u0026gt; 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003epeach orange\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (17, 10)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                       \u003cspan class=\"c1\"\u003e#-\u0026gt; {banana =\u0026gt; 4}\u0026lt;\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用否定形式的副词，元素实际上不会被删除。这意味着你可以传递一个标记，让它变成有条件的删除：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%fruit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eapple\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003edelete\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$flag\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# deletes the element only if $flag is\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                  \u003cspan class=\"c1\"\u003e# true, but always returns the value.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e能和 \u003ccode\u003e:exists\u003c/code\u003e 还有 \u003ccode\u003e:p/:kv/:k/:v\u003c/code\u003e 副词组合 - 这时返回值由那些副词决定， 但是同时元素也会被删除。\u003c/p\u003e\n\u003cp\u003e查看 \u003ca href=\"http://doc.raku.org/language/subscripts#method_DELETE-POS\"\u003emethod DELETE-POS\u003c/a\u003e and \u003ca href=\"http://doc.raku.org/language/subscripts#method_DELETE-KEY\"\u003emethod DELETE-KEY\u003c/a\u003e 了解底层机制.\u003c/p\u003e\n\u003ch2 id=\"p\"\u003e:p\u003c/h2\u003e\n\u003cp\u003e以 Pair 的形式，返回元素的\u003ccode\u003e索引/键\u003c/code\u003e 和元素值， 并默默跳过不存在的元素：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e#-\u0026gt; 1 =\u0026gt; 10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (0 =\u0026gt; 0, 2 =\u0026gt; 20)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eJan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eFeb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eMar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eFeb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e#-\u0026gt; \u0026#34;Feb\u0026#34; =\u0026gt; 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;Jan\u0026#34; =\u0026gt; 1, \u0026#34;Mar\u0026#34; =\u0026gt; 3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想跳过不存在的元素， 使用否定形式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"s\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;Jan\u0026#34; =\u0026gt; 1, \u0026#34;Foo\u0026#34; =\u0026gt; Any, \u0026#34;Mar\u0026#34; =\u0026gt; 3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e能和 \u003ccode\u003e:exists\u003c/code\u003e 还有 \u003ccode\u003e:delete\u003c/code\u003e 组合。\u003c/p\u003e\n\u003cp\u003e也可以查看  \u003ca href=\"http://doc.raku.org/routine/pairs\"\u003epairs\u003c/a\u003e 子例程.\u003c/p\u003e\n\u003ch2 id=\"kv\"\u003e:kv\u003c/h2\u003e\n\u003cp\u003e以列表的形式返回元素的\u003ccode\u003e索引/键\u003c/code\u003e和\u003ccode\u003e值\u003c/code\u003e , 并默默地跳过不存在的元素。 当作用在切片上时，返回值是一个展平的键和值交叉着的单个列表：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ekv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e#-\u0026gt; (1, 10)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ekv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (0, 0, 2, 20)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eJan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eFeb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eMar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eFeb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ekv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;Feb\u0026#34;, 2)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ekv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;Jan\u0026#34;, 1, \u0026#34;Mar\u0026#34;, 3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想跳过不存在的元素， 使用否定形式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"s\"\u003ekv\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;Jan\u0026#34;, 1, \u0026#34;Foo\u0026#34;, Any, \u0026#34;Mar\u0026#34;, 3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个副词一般用于遍历切片：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eFeb Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ekv\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$month\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$month\u003c/span\u003e\u003cspan class=\"s2\"\u003e had \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$i\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003edays-in-month\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e days in 2015\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e能和 \u003ccode\u003e:exists\u003c/code\u003e 还有 \u003ccode\u003e:delete\u003c/code\u003e 组合。\u003c/p\u003e\n\u003cp\u003e也可以查看  \u003ca href=\"http://doc.raku.org/routine/kv\"\u003ekv\u003c/a\u003e 子例程.\u003c/p\u003e\n\u003ch2 id=\"k\"\u003e:k\u003c/h2\u003e\n\u003cp\u003e只返回元素的\u003ccode\u003e索引/键\u003c/code\u003e , 而不是它们的值, 并默默地跳过不存在的元素：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e#-\u0026gt; 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (0, 2)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eJan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eFeb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eMar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eFeb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e#-\u0026gt; \u0026#34;Feb\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;Jan\u0026#34;, \u0026#34;Mar\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想跳过不存在的元素， 使用否定形式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"s\"\u003ek\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (\u0026#34;Jan\u0026#34;, \u0026#34;Foo\u0026#34;, \u0026#34;Mar\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e还可以查看  \u003ca href=\"http://doc.raku.org/routine/keys\"\u003ekeys\u003c/a\u003e 子例程.\u003c/p\u003e\n\u003ch2 id=\"v\"\u003e:v\u003c/h2\u003e\n\u003cp\u003e返回元素的裸值（不是有可能返回一个可变值容器），并默默跳过不存在的元素：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e#-\u0026gt; 10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (0, 20)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e31\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OK\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@tens\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e31\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# ERROR, cannot assign to immutable integer value\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003eJan\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eFeb\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eMar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eFeb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e#-\u0026gt; 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (1, 3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想跳过不存在的元素， 使用否定形式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003edd\u003c/span\u003e \u003cspan class=\"nv\"\u003e%month\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eJan Foo Mar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (1, Any, 3)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e还可以查看  \u003ca href=\"http://doc.raku.org/routine/values\"\u003evalues\u003c/a\u003e 子例程.\u003c/p\u003e\n\u003ch1 id=\"custom-types\"\u003eCustom types\u003c/h1\u003e\n\u003cp\u003e这页描述的下标接口并不意味着和 Raku 的内置集合类型相排斥 - 你可以（并且应该）为任何想通过索引或键提供数据访问的自定义类型重用它们。\u003c/p\u003e\n\u003cp\u003e你不必手动重载  \u003ca href=\"http://doc.raku.org/routine/%5B%20%5D#postcircumfix_%5B_%5D\"\u003epostcircumfix [ ]\u003c/a\u003e \b和  \u003ca href=\"http://doc.raku.org/\"\u003epostcircumfix { }\u003c/a\u003e  操作符并重新实现它们所有的戏法， 为了实现它， 相反，你可以依赖这个事实， 在幕后，它们的标准实现分派给了一个定义良好的底层方法集。例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003e当你这样写:\u003c/span\u003e\t         \u003cspan class=\"n\"\u003e这会在幕后调用如下底层方法:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e%foo\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eaa\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\t        \u003cspan class=\"nv\"\u003e%foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eAT-KEY\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e%foo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;:\u003c/span\u003e\u003cspan class=\"s\"\u003edelete\u003c/span\u003e\t    \u003cspan class=\"nv\"\u003e%foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eDELETE-KEY\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\t        \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eAT-POS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eAT-POS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eAT-POS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\t        \u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eAT-POS\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@foo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所以， 为了让你的下标工作， 你只需要为你的自定义类型实现或委托那些底层方法（\u003ca href=\"http://doc.raku.org/language/subscripts#Methods_to_implement_for_positional_subscripting\"\u003e下面描述详情\u003c/a\u003e）。\u003c/p\u003e\n\u003cp\u003e如果你这样做了， 你还应该让你的类型各自遵守 \u003ca href=\"http://doc.raku.org/type/Positional\"\u003ePositional\u003c/a\u003e 或 \u003ca href=\"http://doc.raku.org/type/Associative\"\u003eAssociative\u003c/a\u003e role\u003c/p\u003e\n\u003ch2 id=\"custom-type-example\"\u003eCustom type example\u003c/h2\u003e\n\u003cp\u003e设想一下 HTTP::Header 类型，尽管它作为一个有特定行为的自定义类，却能像散列那样索引：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eHTTP::Request\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003eGET\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eraku.org\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eWHAT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; (HTTP::Header)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eAccept\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003etext/plain\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAccept-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eCharset Encoding Language\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eutf-8 gzip en\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAccept-Language\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003efr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# like .push on a Hash\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eAccept-Language\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e#-\u0026gt; [\u0026#34;en\u0026#34;, \u0026#34;fr\u0026#34;]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rawheader\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$request\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# stringify according to HTTP spec\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e实现这个类的最简单的方法是，给它一个 Hash 类型的属性，并把所有的下标和迭代相关功能性委托给那个属性。（使用一个自定义类型约束来确保使用者不会在里面插入任何不合法的值）：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eHTTP::Header\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"kt\"\u003eAssociative\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"kt\"\u003eIterable\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003eStrOrArrayOfStr\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"kt\"\u003eArray\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!fields\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nc\"\u003eStrOrArrayOfStr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                 \u003cspan class=\"nb\"\u003ehandles\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eAT-KEY EXISTS-KEY DELETE-KEY push\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e                          iterator list kv keys values\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"cm\"\u003e#`[not shown, for brevity]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而， HTTP header 字段名被认为是大小写无关的（更偏好驼峰法）。我们可以通过把 \u003ccode\u003e*-key\u003c/code\u003e 和 \u003ccode\u003epush\u003c/code\u003e 方法拿到 \u003ccode\u003ehandles\u003c/code\u003e 列表的外面来容纳它， 并像这样各自实现它们：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eAT-KEY\u003c/span\u003e     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003erw\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!fields\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize-key\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eEXISTS-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!fields\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize-key\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e}:\u003c/span\u003e\u003cspan class=\"s\"\u003eexists\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eDELETE-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e       \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!fields\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize-key\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e}:\u003c/span\u003e\u003cspan class=\"s\"\u003edelete\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003epush\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e@_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"cm\"\u003e#`[not shown, for brevity]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003enormalize-key\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003etc\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意下标  \u003ccode\u003e%!fields\u003c/code\u003e 返回一个适当的 rw 容器， 而我们的 \u003ccode\u003eAT-KEY\u003c/code\u003e 能够简单地传递。\u003c/p\u003e\n\u003cp\u003e然而， 我们可能倾向于少一点对用户输入的限制， 相反我们自己关心字段值的消毒。那种情况下，我们可以移除 \u003ccode\u003e%!fields\u003c/code\u003e 上的 \u003ccode\u003eStrOrArrayOfStr\u003c/code\u003e  类型约束， 并在赋值时使用返回自定义的关心消毒值的 Proxy 容器来替换我们的 \u003ccode\u003eAT-KEY\u003c/code\u003e 实现：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eAT-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003erw\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$element\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!fields\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003enormalize-key\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kt\"\u003eProxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eFETCH\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$element\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eSTORE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$value\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$element\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003edo\u003c/span\u003e \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$value\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# a single value is stored as a string\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eArray\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# multiple values are stored as an array\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意把方法声明为 \u003ccode\u003emulti\u003c/code\u003e 并把它限制为 \u003ccode\u003e:D\u003c/code\u003e (defined invocants) 确保未定义情况被传递给由 Any（这在自动复活中被调用） 提供的默认实现。（我去，翻译不来哦！）\u003c/p\u003e\n\u003ch2 id=\"methods-to-implement-for-positional-subscripting\"\u003eMethods to implement for positional subscripting\u003c/h2\u003e\n\u003cp\u003e为了通过  \u003ca href=\"http://doc.raku.org/routine/%5B%20%5D#postcircumfix_%5B_%5D\"\u003epostcircumfix [ ]\u003c/a\u003e  让基于索引的下标在你的自定义类型中工作，你应该至少实现下面的  \u003ccode\u003eelems\u003c/code\u003e, \u003ccode\u003eAT-POS\u003c/code\u003e 和 \u003ccode\u003eEXISTS-POS-\u003c/code\u003e 还有其它可选项。\u003c/p\u003e\n\u003ch3 id=\"elems-方法\"\u003eelems 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eelems\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e预期返回一个数字，用于表明对象中有多少个可标注的元素。 可能被用户直接调用， 并且当从末尾索引元素的时候， 还会被  \u003ccode\u003epostcircumfix [ ]\u003c/code\u003e 调用， 就像 \u003ccode\u003e@foo[*-1]\u003c/code\u003e 中那样。\u003c/p\u003e\n\u003cp\u003e如果没有实现这个方法， 你的类型会从 Any 继承默认的实现， 对定义过的调用者这总是返回 1 - 这最不可能是你想要的。 所以， 如果不能从你的位置类型知晓元素的个数， 那就添加一个 fails 或 dies 实现， 以避免沉默地做了错事。\u003c/p\u003e\n\u003ch3 id=\"at-pos-方法\"\u003eAT-POS 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eAT-POS\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e期望返回 \u003ccode\u003e$index\u003c/code\u003e 位置处的元素。这就是 \u003ccode\u003epostcircumfix [ ]\u003c/code\u003e 通常调用的方法。\n如果你想让元素可变(像它们用于 Array 类型那样), 你就必须确保以 item 容器的形式返回它, 并在被赋值时更新它。(记得使用 \u003ccode\u003ereturn-rw\u003c/code\u003e 或 \u003ccode\u003erw\u003c/code\u003e 子例程 trait 以使它工作; 查看例子。)\u003c/p\u003e\n\u003ch3 id=\"exists-pos-方法\"\u003eEXISTS-POS 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eEXISTS-POS\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回一个布尔值以表明在 \u003ccode\u003e$index\u003c/code\u003e 位置处是否有元素。这就是引用 \u003ccode\u003e@foo[42]:exists\u003c/code\u003e 时, \u003ccode\u003epostcircumfix [ ]\u003c/code\u003e 所调用的方法。\u003c/p\u003e\n\u003cp\u003e元素\u0026quot;存在\u0026quot;意味着什么, 取决于你的类型。\u003c/p\u003e\n\u003cp\u003e如果你没有实现它, 你的类型会从 \u003ccode\u003eAny\u003c/code\u003e 那儿继承默认的实现, 对于索引 0 它会返回 True, 对于 其它索引它会返回 \u003ccode\u003efalse\u003c/code\u003e \u0026ndash; 这可能不是你想要的。所以如果你的类型不能做元素存在检测, 那就添加一个 fails 或 die 实现, 以避免静默地做错事情。\u003c/p\u003e\n\u003ch3 id=\"delete-pos-方法\"\u003eDELETE-POS 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eDELETE-POS\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e删除 \u003ccode\u003e$index\u003c/code\u003e 处的元素, 并返回它所删除的这个元素。这就是引用 \u003ccode\u003e@foo[42]:delete\u003c/code\u003e 时, \u003ccode\u003epostcircumfix [ ]\u003c/code\u003e 所调用的方法。\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;删除\u0026quot;元素的意思是什么, 取决于你的类型。\u003c/p\u003e\n\u003cp\u003e实现这个方法是可选的; 如果你没有实现它, 那么用户尝试从这种类型的对象中删除元素会得到一个合适的错误信息。\u003c/p\u003e\n\u003ch3 id=\"assign-pos-方法\"\u003eASSIGN-POS 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eASSIGN-POS\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把 \u003ccode\u003e$index\u003c/code\u003e 位置处的元素设置为 \u003ccode\u003e$new\u003c/code\u003e 值。实现这个方法完全是可选的; 如果你没有实现这个方法, 那么会使用 \u003ccode\u003eself.AT-POS($index) = $new\u003c/code\u003e  代替, 如果你确实实现了该方法, 那么确保它拥有相同的效果。\u003c/p\u003e\n\u003cp\u003e这意味着 opt-in 性能优化, 以至于简单的诸如 \u003ccode\u003e@numbers[5] = \u0026quot;five\u0026quot;\u003c/code\u003e 的赋值能在不调用 \u003ccode\u003eAT-POS\u003c/code\u003e(这必须创建并返回一个潜在的昂贵的容器对象) 方法时操作。\u003c/p\u003e\n\u003cp\u003e注意, 实现 \u003ccode\u003eASSIGN-POS\u003c/code\u003e 不能解除让 \u003ccode\u003eAT-POS\u003c/code\u003e 变成一个 \u003ccode\u003erw\u003c/code\u003e 方法, 因为诸如 \u003ccode\u003e@numbers[5]++\u003c/code\u003e 的不太重要的赋值/修改 仍旧会使用 \u003ccode\u003eAT-POS\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"bind-pos-方法\"\u003eBIND-POS 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eBIND-POS\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$index\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \\\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把值或容器 \u003ccode\u003enew\u003c/code\u003e 绑定给位置 \u003ccode\u003e$index\u003c/code\u003e 处的插槽上, 替换那儿能找到的任何容器。这是当你这样写的时候所调用的东西:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@numbers\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一般的数组类支持这以允许创建复杂的链接数据结构,  但是对于更特定领域类型它可能没有意义, 所以不强求去实现它。如果你没有实现该方法, 用户会获得一个合适的错误信息, 当它们尝试绑定到这种类型的对象的一个位置插槽上时。\u003c/p\u003e\n\u003ch2 id=\"methods-to-implement-for-associative-subscripting\"\u003eMethods to implement for associative subscripting\u003c/h2\u003e\n\u003cp\u003e为了通过 \u003ccode\u003epostcircumfix { }\u003c/code\u003e 让基于键的下标能够工作于你的自定义类型中, 你应该至少实现 \u003ccode\u003eAT-KEY\u003c/code\u003e 和 \u003ccode\u003eEXISTS-KEY\u003c/code\u003e \u0026ndash; 还有可选地实现下面的方法。\u003c/p\u003e\n\u003ch3 id=\"at-key-方法\"\u003eAT-KEY 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eAT-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回和 \u003ccode\u003e$key\u003c/code\u003e 相关联的元素。这正是 \u003ccode\u003epostcircumfix { }\u003c/code\u003e 通常所调用的方法。\u003c/p\u003e\n\u003cp\u003e如果你想让元素可变(就像它们是为了内置的 Hash 类型), 你必须确保以 item 容器的形式返回它, 并在被赋值时更新它。(记得使用 \u003ccode\u003ereturn-rw\u003c/code\u003e 或 \u003ccode\u003eis rw\u003c/code\u003e 子例程 trait 以使其有效; 查看例子。)\u003c/p\u003e\n\u003cp\u003e另一方面, 如果你想让你的集合只读, 请直接返回非容器值。\u003c/p\u003e\n\u003ch3 id=\"exists-key-方法\"\u003eEXISTS-KEY 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eEXISTS-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e返回一个布尔值以表明和 \u003ccode\u003e$key\u003c/code\u003e 相关联的元素是否存在。这就是引用 \u003ccode\u003e%foo\u0026lt;aa\u0026gt;:exists\u003c/code\u003e 时, \u003ccode\u003epostcircumfix { }\u003c/code\u003e 所调用的方法。\u003c/p\u003e\n\u003cp\u003e元素\u0026quot;存在\u0026quot;意味着什么, 取决于你的类型。\u003c/p\u003e\n\u003cp\u003e如果你没有实现它, 你的类型会从 \u003ccode\u003eAny\u003c/code\u003e 那儿继承默认的实现, 这通常返回 False \u0026ndash; 这可能不是你想要的。所以如果你的类型不能做元素存在检测, 那就添加一个 fails 或 die 实现, 以避免静默地做错事情\u003c/p\u003e\n\u003ch3 id=\"delete-key-方法\"\u003eDELETE-KEY 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eDELETE-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e删除和 \u003ccode\u003e$key\u003c/code\u003e 相关联的元素, 并返回它所删除的这个元素。这就是引用 \u003ccode\u003e%foo\u0026lt;aa\u0026gt;:delete\u003c/code\u003e 时, \u003ccode\u003epostcircumfix { }\u003c/code\u003e 所调用的方法。\u003c/p\u003e\n\u003cp\u003e\u0026ldquo;删除\u0026quot;元素的意思是什么, 取决于你的类型 \u0026ndash; 尽管它通常让 \u003ccode\u003eEXISTS-KEY\u003c/code\u003e 因为那个键变为 \u003ccode\u003eFalse\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e实现这个方法是可选的; 如果你没有实现它, 那么用户尝试从这种类型的对象中删除元素会得到一个合适的错误信息。\u003c/p\u003e\n\u003ch3 id=\"assign-key-方法\"\u003eASSIGN-KEY 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eASSIGN-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把和 \u003ccode\u003e$key\u003c/code\u003e  相关联的元素设置为 \u003ccode\u003e$new\u003c/code\u003e 值。实现这个方法完全是可选的; 如果你没有实现这个方法, 那么会使用 \u003ccode\u003eself.AT-KEY($key) = $new\u003c/code\u003e 代替, 如果你确实实现了该方法, 那么确保它拥有相同的效果。\u003c/p\u003e\n\u003cp\u003e这意味着 opt-in 性能优化, 以至于简单的诸如 \u003ccode\u003e%age\u0026lt;Claire\u0026gt; = 29\u003c/code\u003e 的赋值能在不调用 \u003ccode\u003eAT-KEY\u003c/code\u003e(这必须创建并返回一个潜在的昂贵的容器对象) 方法时操作。\u003c/p\u003e\n\u003cp\u003e注意, 实现 \u003ccode\u003eASSIGN-KEY\u003c/code\u003e 不能解除让 \u003ccode\u003eAT-KEY\u003c/code\u003e 变成一个 \u003ccode\u003erw\u003c/code\u003e 方法, 因为诸如 \u003ccode\u003e%age\u0026lt;Claire\u0026gt;++\u003c/code\u003e 的不太重要的赋值/修改 仍旧会使用 \u003ccode\u003eAT-KEY\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"bind-key-方法\"\u003eBIND-KEY 方法\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eBIND-KEY\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$key\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \\\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把值或容器 \u003ccode\u003enew\u003c/code\u003e 绑定给跟 \u003ccode\u003e$key\u003c/code\u003e 相关联的插槽上, 替换那儿能找到的任何容器。这是当你这样写的时候所调用的东西:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e%age\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eClaire\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一般的散列类支持这以允许创建复杂的链接数据结构,  但是对于更特定领域类型它可能没有意义, 所以不强求去实现它。如果你没有实现该方法, 用户会获得一个合适的错误信息, 当它们尝试绑定到这种类型的对象的一个位置插槽上时。\u003c/p\u003e\n","text":"Subscripts 通过索引或键访问数据结构中的元素。\n通常，人们需要引用集合或数据结构中的一个特定的元素（或特定的元素切片）。从数学标记法中偷学到的，向量 v 的组成部分用 v₁, v₂, v₃ 来引用，在 Raku 中这个概念叫做 “下标” （或“索引”）。\nBasics Raku 提供了两个通用的下标接口：\nelements are identified by interface name supported by [ ]\tzero-based indices\tPositional Array, List, Buf, Match, ... { }\tstring or object keys Associative Hash, Bag, Mix, Match, ... Positional 下标 (通过 postcircumfix [ ] 通过元素在有序集合中的位置来寻址元素。)索引 0 引用第一个元素， 索引 1 引用第二个元素， 以此类推： my @chores = \u0026#34;buy groceries\u0026#34;, \u0026#34;feed dog\u0026#34;, \u0026#34;wash car\u0026#34;; say @chores[0]; #-\u0026gt; buy groceries say @chores[1]; #-\u0026gt; feed dog say @chores[2]; #-\u0026gt; wash car Associative 下标 (通过 postcircumfix { }), 不要求集合以任何特定的顺序保存元素 - 相反，它使用一个唯一的键来寻址每个值。键的种类取决于使用的集合： 举个例子， 一个标准的散列 使用字符串作为键， 而一个 Mix 能使用任意的对象作为键， 等等: my %grade = Zoe =\u0026gt; \u0026#34;C\u0026#34;, Ben =\u0026gt; \u0026#34;B+\u0026#34;; say %grade{\u0026#34;Zoe\u0026#34;}; #-\u0026gt; C say %grade{\u0026#34;Ben\u0026#34;}; #-\u0026gt; B+ my $stats = ( Date.today =\u0026gt; 4.18, Date.new(2015, 4, 5) =\u0026gt; 17.253 ).Mix; say $stats{ Date.new(2015, 4, 5) }; #-\u0026gt; 17.253 相对于传递单个-单词字符串键给 { } , 你也可以使用以尖括号引起单词的结构 ，就像它们是后缀操作符一样：\nsay %grade\u0026lt;Zoe\u0026gt;; #-\u0026gt; C say %grade\u0026lt;Ben\u0026gt;; #-\u0026gt; B+ 这实际上仅仅是在编译时被转换为对应 { } 形式的语法糖：\n%hash\u0026lt;foo bar\u0026gt;; # same as %hash{ \u0026lt;foo bar\u0026gt; } %hash«foo $var»; # same as %hash{ «foo $var» } %hash\u0026lt;\u0026lt;foo $var\u0026gt;\u0026gt;; # same as %hash{ \u0026lt;\u0026lt;foo $var\u0026gt;\u0026gt; } 下标能应用到能返回可下标化对象的任何表达式上， 而不仅仅应用到变量上：\nsay \u0026#34;__Hello__\u0026#34;.match(/__(.*)__/)[0]; #-\u0026gt; ｢Hello｣ say \u0026#34;__Hello__\u0026#34;.match(/__(.*)__/).[0]; # same, in method notation Positional 和 associative 下标并不互相排斥 - 举个例子， Match 对象两个都支持（每个访问不同的数据集）。还有， 为了让列表处理更方便， 类 Any 为位置下标提供了备用的实现，这会把调用者看作含有一个元素的列表。(但是对于关系下标，没有这样的备用实现， 所以会抛出一个异常，当下标被应用到没有实现支持的对象上时。)\nsay 42[0]; #-\u0026gt; 42 say 42\u0026lt;foo\u0026gt;; # ERROR: postcircumfix { } not defined for type Int Nonexistent elements 当通过下标寻址一个不存在的元素所发生的事情取决于正在使用的集合类型。标准的 Array 和 Hash 集合返回它们的value type constraint 的类型对象（这默认是 Any）。\nmy @array1; say @array1[10]; #-\u0026gt; (Any) my Int @array2; say @array2[10]; #-\u0026gt; (Int) my %hash1; say %hash1\u0026lt;foo\u0026gt;; #-\u0026gt; (Any) my Int %hash2; say %hash2\u0026lt;foo\u0026gt;; #-\u0026gt; (Int) 然而， 其它类型的集合可能在寻址不存在的元素的下标时反应也不用：\nsay (0, 10, 20)[3]; #-\u0026gt; Nil say bag(\u0026lt;a a b b b\u0026gt;)\u0026lt;c\u0026gt;; #-\u0026gt; 0 为了在下标操作中默默地跳过不存在的元素， 查看 #Truncating slices 和 #:v 副词。\nFrom the end Positional 索引是从集合的开头计数的， 但是也有一种标记法用于，通过相对于末尾的位置来寻址元素：*-1 引用最后一个元素， *-2 引用倒数第二个元素， 以此类推。\nmy @alphabet = \u0026#39;A\u0026#39; .. \u0026#39;Z\u0026#39;; say @alphabet[*-1]; #-\u0026gt; Z say @alphabet[*-2]; #-\u0026gt; Y say @alphabet[*-3]; #-\u0026gt; X 注意：星号很重要。在 Raku中，如果像在很多其它编程语言中那样传递一个裸的负整数（例如 @alphabet[-1]）， 会抛出错误。\n这里实际发生的是， *-1 那样的表达式通过 Whatever 柯里化声明了一个代码对象 - [ ]会把代码对象作为索引， 通过集合的长度作为参数来调用它并使用结果值作为实际的索引。 换句话说，@alphabet[*-1] 变成了 @alphabet[@alphabet.elems - 1]。\n这意味着你可以使用任何依赖于集合尺寸的表达式：\nsay @array[* div 2]; # 选择最中间的那个元素 say @array[$i % *]; # wrap around a given index (\u0026#34;模运算\u0026#34;) say @array[ -\u0026gt; $size { $i % $size } ]; # same as previous Slices 当需要访问集合中的多个元素时，有一个快捷方式用于处理多个单独的下标操作：仅仅在下标中指定一个索引/键的列表，来取回一个元素的列表 - 也被叫做”切片” - 以相同的顺序。\n对于 positional 切片， 你可以混合普通切片和 from-the-end 切片：\nmy @alphabet = \u0026#39;a\u0026#39; .. \u0026#39;z\u0026#39;; dd @alphabet[15, 4, *-9, 11]; #-\u0026gt; (\u0026#34;p\u0026#34;, \u0026#34;e\u0026#34;, \u0026#34;r\u0026#34;, \u0026#34;l\u0026#34;) 对于 associative 切片，尖括号形式的切片通常会很方便：\nmy %color = kiwi =\u0026gt; \u0026#34;green\u0026#34;, banana =\u0026gt; \u0026#34;yellow\u0026#34;, cherry =\u0026gt; \u0026#34;red\u0026#34;; dd %color{\u0026#34;cherry\u0026#34;, \u0026#34;kiwi\u0026#34;}; #-\u0026gt; (\u0026#34;red\u0026#34;, \u0026#34;green\u0026#34;) dd %color\u0026lt;cherry kiwi\u0026gt;; #-\u0026gt; (\u0026#34;red\u0026#34;, \u0026#34;green\u0026#34;) dd %color{*}; #-\u0026gt; (\u0026#34;green\u0026#34;, \u0026#34;red\u0026#34;, \u0026#34;yellow\u0026#34;) 要知道切片是由传入 (one dimension of)下标的类型控制的，而非它的长度：\nsubscript\tresult any Positional object not covered below\tnormal slice a Range or infinite sequence\ttruncating slice (only for positional subscripts) * (Whatever-star)\tfull slice (as if all keys/indices were specified) any other object\tsingle-element access rather than a slice empty\tZen slice 所以，即使一个单个元素的列表也会返回一个切片， 而一个裸的标量值不会：\ndd @alphabet[2,]; #-\u0026gt; (\u0026#34;c\u0026#34;,) dd @alphabet[2]; #-\u0026gt; \u0026#34;c\u0026#34; (尖括号形式的 associative 下标也没有问题，因为 word quoting 在单个单词的情况下很方便的返回一个 Str, 但是在多个单词的情况下返回一个 Parcel)。\n对于普通的切片，下标的内容 (the current dimension of) 在它的元素被解释为 索引/键 之前会被展平(flattened)：\ndd @alphabet[0, (1..2, (3,)))]; #-\u0026gt; (\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;, \u0026#34;d\u0026#34;) Truncating slices 通常, 在切片下标中引用不存在的元素会让输出列表包含未定义的值。然而， 如果传递给位置下标的对象是一个 Range 或使用序列操作符构建的无限序列， 它会被自动截断到集合的实际尺寸：\nmy @letters = \u0026lt;a b c d e f\u0026gt;; dd @letters[3, 4, 5, 6, 7]; #-\u0026gt; (\u0026#34;d\u0026#34;, \u0026#34;e\u0026#34;, \u0026#34;f\u0026#34;, Any, Any) dd @letters[3 .. 7]; #-\u0026gt; (\u0026#34;d\u0026#34;, \u0026#34;e\u0026#34;, \u0026#34;f\u0026#34;) From-the-end 索引被允许作为范围的端点，代表无限的范围和序列：\nsay @array[*-3 .. *]; # select the last three elements say @array[0, 2, 4 ... *]; # select all elements with even indices 如果你不想把你的切片指定为 range/sequence 但仍旧想默默地跳过不存在的元素， 你可以使用 #:v 副词。\nZen slices 如果你写的下标没有指定任何 索引/键 ，那它就会返回被脚注的对象自身。因为它是空的但是返回了全部东西， 这就是所谓的 \u0026ldquo;Zen slice\u0026rdquo;。\n这和传递一个 Whatever-star （这，像普通的切片， 总是返回一个元素的 Parcel，不管原对象的类型）还有传递一个空的列表都不同（它返回一个空的切片）：\nmy %bag := (\u0026#34;orange\u0026#34; =\u0026gt; 1, \u0026#34;apple\u0026#34; =\u0026gt; 3).Bag; dd %bag\u0026lt;\u0026gt;; #-\u0026gt; (\u0026#34;orange\u0026#34;=\u0026gt;1,\u0026#34;apple\u0026#34;=\u0026gt;3).Bag dd %bag{}; #-\u0026gt; (\u0026#34;orange\u0026#34;=\u0026gt;1,\u0026#34;apple\u0026#34;=\u0026gt;3).Bag dd %bag{*}; #-\u0026gt; (1, 3) dd %bag{()}; #-\u0026gt; () 这通常被用于把整个 数组/散列 插值到字符串中：\nmy @words = \u0026#34;cruel\u0026#34;, \u0026#34;world\u0026#34;; say \u0026#34;Hello, @words[]!\u0026#34; #-\u0026gt; Hello, cruel world! Multiple dimensions 尚未实现！等到 9 月份？\nModifying elements Autovivification 下标参与 \u0026ldquo;autovivification”（自动复活），i.e. 这是一种数组和散列在需要时会自动存在的处理， 以至于你没有必要在每一层级预声明集合的类型来构建嵌套的数据结构：\nmy $beatles; $beatles{\u0026#34;White Album\u0026#34;}[0] = \u0026#34;Back in the U.S.S.R.\u0026#34;; # autovivification! say $beatles.perl; #-\u0026gt; {\u0026#34;White Album\u0026#34; =\u0026gt; [\u0026#34;Back in the U.S.S.R.\u0026#34;]} $beatles 从未定义开始， 但是它变成了一个 Hash 对象， 因为它在赋值时用 { } 标注了。 类似地， $beatles{\u0026quot;White Album”} 变成一个 Array 对象， 因为它在赋值时用 [ ] 标注了。\n注意下标本身不会引起 autovivification（自动复活）：它只发生在下标链的结果被赋值时（或变化时）。\nBinding 下标表达式也可以用在绑定语句的左侧。如果被标注的集合的类型支持， 这会使用指定的容器替换集合里的插槽的值：（给跪了！）\n内置的 Array 和 Hash 类型支持这种绑定， 为了允许构建复杂的联动的数据结构：\nmy @a = 10, 11, 12, 13; my $x = 1; @a[2] := $x; # binding! (@a[2] and $x refer to the same container now.) $x++; @a[2]++; dd @a; #-\u0026gt; [10, 11, 3, 13]\u0026lt;\u0026gt; dd $x; #-\u0026gt; 3 查看 #method BIND-POS 和 #method BIND-KEY 了解底层机制.\nAdverbs 下标操作的返回值和可能存在的副作用能够使用副词来控制。\n要知道副词操作符的优先级相对宽松，这可能需要你在合成表达式中添加括号：\nif $foo || %hash\u0026lt;key\u0026gt;:exists { ... } # WRONG, tries to adverb the || op if $foo || (%hash\u0026lt;key\u0026gt;:exists) { ... } # correct 支持的副词有:\n:exists 返回请求的元素是否存在，而不是返回元素实际的值。这能够用于区别未定义值的元素和一点儿也不属于集合部分的元素：\nmy @foo = Any, 10; dd @foo[0].defined; #-\u0026gt; False dd @foo[0]:exists; #-\u0026gt; True dd @foo[2]:exists; #-\u0026gt; False dd @foo[0, 2]:exists; #-\u0026gt; (True, False) my %fruit = apple =\u0026gt; Any, orange =\u0026gt; 10; dd %fruit\u0026lt;apple\u0026gt;.defined; #-\u0026gt; False dd %fruit\u0026lt;apple\u0026gt;:exists; #-\u0026gt; True dd %fruit\u0026lt;banana\u0026gt;:exists; #-\u0026gt; False dd %fruit\u0026lt;apple banana\u0026gt;:exists; #-\u0026gt; (True, False) 也可以对副词取反来测试不存在：\ndd %fruit\u0026lt;apple banana\u0026gt;:!exists; #-\u0026gt; (False, True) 要检查切片的所有元素是否存在， 使用 all junction:\nif all %fruit\u0026lt;apple orange banana\u0026gt;:exists { ... } :exists 可以和 :delete 还有 :p/:kv 副词组合 - 这时表达式的行为就由那些副词决定，除了使用表明元素存在的对应 Bool 值替换返回的元素值之外。\n查看 method EXISTS-POS 和 method EXISTS-KEY \b了解底层机制.\n:delete 从集合中删除元素， 除了返回它们的值以外。\nmy @tens = 0, 10, 20, 30; dd @tens[3]:delete; #-\u0026gt; 30 dd @tens; #-\u0026gt; [0, 10, 20]\u0026lt;\u0026gt; my %fruit = apple =\u0026gt; 5, orange =\u0026gt; 10, banana =\u0026gt; 4, peach =\u0026gt; 17; dd %fruit\u0026lt;apple\u0026gt;:delete; #-\u0026gt; 5 dd %fruit\u0026lt;peach orange\u0026gt;:delete; #-\u0026gt; (17, 10) dd %fruit; #-\u0026gt; {banana =\u0026gt; 4}\u0026lt;\u0026gt; 使用否定形式的副词，元素实际上不会被删除。这意味着你可以传递一个标记，让它变成有条件的删除：\ndd %fruit\u0026lt;apple\u0026gt; :delete($flag); # deletes the element only if $flag is # true, but always returns the value. 能和 :exists 还有 :p/:kv/:k/:v 副词组合 - 这时返回值由那些副词决定， 但是同时元素也会被删除。\n查看 method DELETE-POS and method DELETE-KEY 了解底层机制.\n:p 以 Pair 的形式，返回元素的索引/键 和元素值， 并默默跳过不存在的元素：\nmy @tens = 0, 10, 20, 30; dd @tens[1]:p; #-\u0026gt; 1 =\u0026gt; 10 dd @tens[0, 4, 2]:p; #-\u0026gt; (0 =\u0026gt; 0, 2 =\u0026gt; 20) my %month = Jan =\u0026gt; 1, Feb =\u0026gt; 2, Mar =\u0026gt; 3; dd %month\u0026lt;Feb\u0026gt;:p; #-\u0026gt; \u0026#34;Feb\u0026#34; =\u0026gt; 2 dd %month\u0026lt;Jan Foo Mar\u0026gt;:p; #-\u0026gt; (\u0026#34;Jan\u0026#34; =\u0026gt; 1, \u0026#34;Mar\u0026#34; =\u0026gt; 3) 如果你不想跳过不存在的元素， 使用否定形式:\ndd %month\u0026lt;Jan Foo Mar\u0026gt;:!p; #-\u0026gt; (\u0026#34;Jan\u0026#34; =\u0026gt; 1, \u0026#34;Foo\u0026#34; =\u0026gt; Any, \u0026#34;Mar\u0026#34; =\u0026gt; 3) 能和 :exists 还有 :delete 组合。\n也可以查看 pairs 子例程.\n:kv 以列表的形式返回元素的索引/键和值 , 并默默地跳过不存在的元素。 当作用在切片上时，返回值是一个展平的键和值交叉着的单个列表：\nmy @tens = 0, 10, 20, 30; dd @tens[1]:kv; #-\u0026gt; (1, 10) dd @tens[0, 4, 2]:kv; #-\u0026gt; (0, 0, 2, 20) my %month = Jan =\u0026gt; 1, Feb =\u0026gt; 2, Mar =\u0026gt; 3; dd %month\u0026lt;Feb\u0026gt;:kv; #-\u0026gt; (\u0026#34;Feb\u0026#34;, 2) dd %month\u0026lt;Jan Foo Mar\u0026gt;:kv; #-\u0026gt; (\u0026#34;Jan\u0026#34;, 1, \u0026#34;Mar\u0026#34;, 3) 如果你不想跳过不存在的元素， 使用否定形式:\ndd %month\u0026lt;Jan Foo Mar\u0026gt;:!kv; #-\u0026gt; (\u0026#34;Jan\u0026#34;, 1, \u0026#34;Foo\u0026#34;, Any, \u0026#34;Mar\u0026#34;, 3) 这个副词一般用于遍历切片：\nfor %month\u0026lt;Feb Mar\u0026gt;:kv -\u0026gt; $month, $i { say \u0026#34;$month had {Date.new(2015, $i, 1).days-in-month} days in 2015\u0026#34; } 能和 :exists 还有 :delete 组合。\n也可以查看 kv 子例程.\n:k 只返回元素的索引/键 , 而不是它们的值, 并默默地跳过不存在的元素：\nmy @tens = 0, 10, 20, 30; dd @tens[1]:k; #-\u0026gt; 1 dd @tens[0, 4, 2]:k; #-\u0026gt; (0, 2) my %month = Jan =\u0026gt; 1, Feb =\u0026gt; 2, Mar =\u0026gt; 3; dd %month\u0026lt;Feb\u0026gt;:k; #-\u0026gt; \u0026#34;Feb\u0026#34; dd %month\u0026lt;Jan Foo Mar\u0026gt;:k; #-\u0026gt; (\u0026#34;Jan\u0026#34;, \u0026#34;Mar\u0026#34;) 如果你不想跳过不存在的元素， 使用否定形式:\ndd %month\u0026lt;Jan Foo Mar\u0026gt;:!k; #-\u0026gt; (\u0026#34;Jan\u0026#34;, \u0026#34;Foo\u0026#34;, \u0026#34;Mar\u0026#34;) 还可以查看 keys 子例程.\n:v 返回元素的裸值（不是有可能返回一个可变值容器），并默默跳过不存在的元素：\nmy @tens = 0, 10, 20, 30; dd @tens[1]:v; #-\u0026gt; 10 dd @tens[0, 4, 2]:v; #-\u0026gt; (0, 20) @tens[3] = 31; # OK @tens[3]:v = 31; # ERROR, cannot assign to immutable integer value my %month = Jan =\u0026gt; 1, Feb =\u0026gt; 2, Mar =\u0026gt; 3; dd %month\u0026lt;Feb\u0026gt;:v; #-\u0026gt; 2 dd %month\u0026lt;Jan Foo Mar\u0026gt;:v; #-\u0026gt; (1, 3) 如果你不想跳过不存在的元素， 使用否定形式:\ndd %month\u0026lt;Jan Foo Mar\u0026gt;:!v; #-\u0026gt; (1, Any, 3) 还可以查看 values 子例程.\nCustom types 这页描述的下标接口并不意味着和 Raku 的内置集合类型相排斥 - 你可以（并且应该）为任何想通过索引或键提供数据访问的自定义类型重用它们。\n你不必手动重载 postcircumfix [ ] \b和 postcircumfix { } 操作符并重新实现它们所有的戏法， 为了实现它， 相反，你可以依赖这个事实， 在幕后，它们的标准实现分派给了一个定义良好的底层方法集。例如：\n当你这样写:\t这会在幕后调用如下底层方法: %foo\u0026lt;aa\u0026gt;\t%foo.AT-KEY(\u0026#34;aa\u0026#34;) %foo\u0026lt;aa\u0026gt;:delete\t%foo.DELETE-KEY(\u0026#34;aa\u0026#34;) @foo[3,4,5]\t@foo.AT-POS(3), @foo.AT-POS(4), @foo.AT-POS(5) @foo[*-1]\t@foo.AT-POS(@foo.elems - 1) 所以， 为了让你的下标工作， 你只需要为你的自定义类型实现或委托那些底层方法（下面描述详情）。\n如果你这样做了， 你还应该让你的类型各自遵守 Positional 或 Associative role\nCustom type example 设想一下 HTTP::Header 类型，尽管它作为一个有特定行为的自定义类，却能像散列那样索引：\nmy $request = HTTP::Request.new(GET =\u0026gt; \u0026#34;raku.org\u0026#34;); say $request.header.WHAT; #-\u0026gt; (HTTP::Header) $request.header\u0026lt;Accept\u0026gt; = \u0026#34;text/plain\u0026#34;; $request.header{\u0026#39;Accept-\u0026#39; X~ \u0026lt;Charset Encoding Language\u0026gt;} = \u0026lt;utf-8 gzip en\u0026gt;; $request.header.push(\u0026#39;Accept-Language\u0026#39; =\u0026gt; \u0026#34;fr\u0026#34;); # like .push on a Hash say $request.header\u0026lt;Accept-Language\u0026gt;.perl; #-\u0026gt; [\u0026#34;en\u0026#34;, \u0026#34;fr\u0026#34;] my $rawheader = $request.header.Str; # stringify according to HTTP spec 实现这个类的最简单的方法是，给它一个 Hash 类型的属性，并把所有的下标和迭代相关功能性委托给那个属性。（使用一个自定义类型约束来确保使用者不会在里面插入任何不合法的值）：\nclass HTTP::Header does Associative is Iterable { subset StrOrArrayOfStr where Str | ( Array \u0026amp; {.all ~~ Str} ); has %!fields of StrOrArrayOfStr handles \u0026lt;AT-KEY EXISTS-KEY DELETE-KEY push iterator list kv keys values\u0026gt;; method Str { #`[not shown, for brevity] } } 然而， HTTP header 字段名被认为是大小写无关的（更偏好驼峰法）。我们可以通过把 *-key 和 push 方法拿到 handles 列表的外面来容纳它， 并像这样各自实现它们：\nmethod AT-KEY ($key) is rw { %!fields{normalize-key $key} } method EXISTS-KEY ($key) { %!fields{normalize-key $key}:exists } method DELETE-KEY ($key) { %!fields{normalize-key $key}:delete } method push (*@_) { #`[not shown, for brevity] } sub normalize-key ($key) { $key.subst(/\\w+/, *.tc, :g) } 注意下标 %!fields 返回一个适当的 rw 容器， 而我们的 AT-KEY 能够简单地传递。\n然而， 我们可能倾向于少一点对用户输入的限制， 相反我们自己关心字段值的消毒。那种情况下，我们可以移除 %!fields 上的 StrOrArrayOfStr 类型约束， 并在赋值时使用返回自定义的关心消毒值的 Proxy 容器来替换我们的 AT-KEY 实现：\nmulti method AT-KEY (::?CLASS:D: $key) is rw { my $element := %!fields{normalize-key $key}; Proxy.new( FETCH =\u0026gt; method () { $element }, STORE =\u0026gt; method ($value) { $element = do given $value».split(/\u0026#39;,\u0026#39; \\s+/).flat { when 1 { .[0] } # a single value is stored as a string default { .Array } # multiple values are stored as an array } } ); } 注意把方法声明为 multi 并把它限制为 :D (defined invocants) 确保未定义情况被传递给由 Any（这在自动复活中被调用） 提供的默认实现。（我去，翻译不来哦！）\nMethods to implement for positional subscripting 为了通过 postcircumfix [ ] 让基于索引的下标在你的自定义类型中工作，你应该至少实现下面的 elems, AT-POS 和 EXISTS-POS- 还有其它可选项。\nelems 方法 multi method elems (::?CLASS:D:) 预期返回一个数字，用于表明对象中有多少个可标注的元素。 可能被用户直接调用， 并且当从末尾索引元素的时候， 还会被 postcircumfix [ ] 调用， 就像 @foo[*-1] 中那样。\n如果没有实现这个方法， 你的类型会从 Any 继承默认的实现， 对定义过的调用者这总是返回 1 - 这最不可能是你想要的。 所以， 如果不能从你的位置类型知晓元素的个数， 那就添加一个 fails 或 dies 实现， 以避免沉默地做了错事。\nAT-POS 方法 multi method AT-POS (::?CLASS:D: $index) 期望返回 $index 位置处的元素。这就是 postcircumfix [ ] 通常调用的方法。 如果你想让元素可变(像它们用于 Array 类型那样), 你就必须确保以 item 容器的形式返回它, 并在被赋值时更新它。(记得使用 return-rw 或 rw 子例程 trait 以使它工作; 查看例子。)\nEXISTS-POS 方法 multi method EXISTS-POS (::?CLASS:D: $index) 返回一个布尔值以表明在 $index 位置处是否有元素。这就是引用 @foo[42]:exists 时, postcircumfix [ ] 所调用的方法。\n元素\u0026quot;存在\u0026quot;意味着什么, 取决于你的类型。\n如果你没有实现它, 你的类型会从 Any 那儿继承默认的实现, 对于索引 0 它会返回 True, 对于 其它索引它会返回 false \u0026ndash; 这可能不是你想要的。所以如果你的类型不能做元素存在检测, 那就添加一个 fails 或 die 实现, 以避免静默地做错事情。\nDELETE-POS 方法 multi method DELETE-POS (::?CLASS:D: $index) 删除 $index 处的元素, 并返回它所删除的这个元素。这就是引用 @foo[42]:delete 时, postcircumfix [ ] 所调用的方法。\n\u0026ldquo;删除\u0026quot;元素的意思是什么, 取决于你的类型。\n实现这个方法是可选的; 如果你没有实现它, 那么用户尝试从这种类型的对象中删除元素会得到一个合适的错误信息。\nASSIGN-POS 方法 multi method ASSIGN-POS (::?CLASS:D: $index, $new) 把 $index 位置处的元素设置为 $new 值。实现这个方法完全是可选的; 如果你没有实现这个方法, 那么会使用 self.AT-POS($index) = $new 代替, 如果你确实实现了该方法, 那么确保它拥有相同的效果。\n这意味着 opt-in 性能优化, 以至于简单的诸如 @numbers[5] = \u0026quot;five\u0026quot; 的赋值能在不调用 AT-POS(这必须创建并返回一个潜在的昂贵的容器对象) 方法时操作。\n注意, 实现 ASSIGN-POS 不能解除让 AT-POS 变成一个 rw 方法, 因为诸如 @numbers[5]++ 的不太重要的赋值/修改 仍旧会使用 AT-POS。\nBIND-POS 方法 multi method BIND-POS (::?CLASS:D: $index, \\new) 把值或容器 new 绑定给位置 $index 处的插槽上, 替换那儿能找到的任何容器。这是当你这样写的时候所调用的东西:\nmy $x = 10; @numbers[5] := $x; 一般的数组类支持这以允许创建复杂的链接数据结构, 但是对于更特定领域类型它可能没有意义, 所以不强求去实现它。如果你没有实现该方法, 用户会获得一个合适的错误信息, 当它们尝试绑定到这种类型的对象的一个位置插槽上时。\nMethods to implement for associative subscripting 为了通过 postcircumfix { } 让基于键的下标能够工作于你的自定义类型中, 你应该至少实现 AT-KEY 和 EXISTS-KEY \u0026ndash; 还有可选地实现下面的方法。\nAT-KEY 方法 multi method AT-KEY (::?CLASS:D: $key) 返回和 $key 相关联的元素。这正是 postcircumfix { } 通常所调用的方法。\n如果你想让元素可变(就像它们是为了内置的 Hash 类型), 你必须确保以 item 容器的形式返回它, 并在被赋值时更新它。(记得使用 return-rw 或 is rw 子例程 trait 以使其有效; 查看例子。)\n另一方面, 如果你想让你的集合只读, 请直接返回非容器值。\nEXISTS-KEY 方法 multi method EXISTS-KEY (::?CLASS:D: $key) 返回一个布尔值以表明和 $key 相关联的元素是否存在。这就是引用 %foo\u0026lt;aa\u0026gt;:exists 时, postcircumfix { } 所调用的方法。\n元素\u0026quot;存在\u0026quot;意味着什么, 取决于你的类型。\n如果你没有实现它, 你的类型会从 Any 那儿继承默认的实现, 这通常返回 False \u0026ndash; 这可能不是你想要的。所以如果你的类型不能做元素存在检测, 那就添加一个 fails 或 die 实现, 以避免静默地做错事情\nDELETE-KEY 方法 multi method DELETE-KEY (::?CLASS:D: $key) 删除和 $key 相关联的元素, 并返回它所删除的这个元素。这就是引用 %foo\u0026lt;aa\u0026gt;:delete 时, postcircumfix { } 所调用的方法。\n\u0026ldquo;删除\u0026quot;元素的意思是什么, 取决于你的类型 \u0026ndash; 尽管它通常让 EXISTS-KEY 因为那个键变为 False。\n实现这个方法是可选的; 如果你没有实现它, 那么用户尝试从这种类型的对象中删除元素会得到一个合适的错误信息。\nASSIGN-KEY 方法 multi method ASSIGN-KEY (::?CLASS:D: $key, $new) 把和 $key 相关联的元素设置为 $new 值。实现这个方法完全是可选的; 如果你没有实现这个方法, 那么会使用 self.AT-KEY($key) = $new 代替, 如果你确实实现了该方法, 那么确保它拥有相同的效果。\n这意味着 opt-in 性能优化, 以至于简单的诸如 %age\u0026lt;Claire\u0026gt; = 29 的赋值能在不调用 AT-KEY(这必须创建并返回一个潜在的昂贵的容器对象) 方法时操作。\n注意, 实现 ASSIGN-KEY 不能解除让 AT-KEY 变成一个 rw 方法, 因为诸如 %age\u0026lt;Claire\u0026gt;++ 的不太重要的赋值/修改 仍旧会使用 AT-KEY。\nBIND-KEY 方法 multi method BIND-KEY (::?CLASS:D: $key, \\new) 把值或容器 new 绑定给跟 $key 相关联的插槽上, 替换那儿能找到的任何容器。这是当你这样写的时候所调用的东西:\nmy $x = 10; %age\u0026lt;Claire\u0026gt; := $x; 一般的散列类支持这以允许创建复杂的链接数据结构, 但是对于更特定领域类型它可能没有意义, 所以不强求去实现它。如果你没有实现该方法, 用户会获得一个合适的错误信息, 当它们尝试绑定到这种类型的对象的一个位置插槽上时。\n"},"name":"下标","published":"2018-12-08T21:13:31+08:00","summary":"Subscripts 通过索引或键访问数据结构中的元素。\n通常，人们需要引用集合或数据结构中的一个特定的元素（或特定的元素切片）。从数学标记法中偷学到的，向量 v 的组成部分用 v₁, v₂, v₃ 来引用，在 Raku 中这个概念叫做 “下标” （或“索引”）。\nBasics Raku 提供了两个通用的下标接口：\nelements are identified by interface name supported by [ ]\tzero-based indices\tPositional Array, List, Buf, Match, ... { }\tstring or object keys Associative Hash, Bag, Mix, Match, ... Positional 下标 (通过 postcircumfix [ ] 通过元素在有序集合中的位置来寻址元素。)索引 0 引用第一个元素， 索引 1 引用第二个元素， 以此类推： my @chores = \u0026#34;buy groceries\u0026#34;, \u0026#34;feed dog\u0026#34;, \u0026#34;wash car\u0026#34;; say @chores[0]; #-\u0026gt; buy groceries say @chores[1]; #-\u0026gt; feed dog say @chores[2]; #-\u0026gt; wash car Associative 下标 (通过 postcircumfix { }), 不要求集合以任何特定的顺序保存元素 - 相反，它使用一个唯一的键来寻址每个值。键的种类取决于使用的集合： 举个例子， 一个标准的散列 使用字符串作为键， 而一个 Mix 能使用任意的对象作为键， 等等: my %grade = Zoe =\u0026gt; \u0026#34;C\u0026#34;, Ben =\u0026gt; \u0026#34;B+\u0026#34;; say %grade{\u0026#34;Zoe\u0026#34;}; #-\u0026gt; C say %grade{\u0026#34;Ben\u0026#34;}; #-\u0026gt; B+ my $stats = ( Date.","type":"entry","url":"https://ohmycloud.github.io/posts/64.subscripts/"}
{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003ch2 id=\"sets\"\u003eSets\u003c/h2\u003e\n\u003cp\u003eRaku 包括 \u003ca href=\"https://docs.raku.org/type/Set\"\u003eSet\u003c/a\u003e 数据类型，以及对\u003ca href=\"https://docs.raku.org/language/setbagmix#Set%2FBag_Operators\"\u003e大多数 set 操作\u003c/a\u003e的支持。\u003ca href=\"https://en.wikipedia.org/wiki/Algebra_of_sets\"\u003e并集和交集\u003c/a\u003e不仅是原生操作，它们使用自然符号 \u003ccode\u003e∩\u003c/code\u003e 和 \u003ccode\u003e∪\u003c/code\u003e。例如，此代码将检查有限数量集的集算术的基本定律：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@arbitrary-numbers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\U\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@arbitrary-numbers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eSet\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kt\"\u003eSet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@arbitrary-numbers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@arbitrary-numbers\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@arbitrary-numbers\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@union\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@intersection\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$set\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e@union\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$set\u003c/span\u003e \u003cspan class=\"o\"\u003e∩\u003c/span\u003e \u003cspan class=\"nv\"\u003e$set\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nv\"\u003e$set\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e@intersection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$set\u003c/span\u003e \u003cspan class=\"o\"\u003e∪\u003c/span\u003e \u003cspan class=\"nv\"\u003e$set\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"nv\"\u003e$set\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eIdempotent union is \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e@union\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: «Idempotent union is True» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eIdempotent intersection is \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e@intersection\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: «Idempotent intersection is True» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@universe\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@empty-set\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@id-universe\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@id-empty\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \\\u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e@universe\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"o\"\u003e∪\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e@id-universe\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"o\"\u003e∩\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e@empty-set\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"o\"\u003e∩\u003c/span\u003e \u003cspan class=\"no\"\u003e∅\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"no\"\u003e∅\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e@id-empty\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"o\"\u003e∪\u003c/span\u003e \u003cspan class=\"no\"\u003e∅\u003c/span\u003e \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eUniverse dominates \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e@universe\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «Universe dominates True» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eEmpty set dominates \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e@empty-set\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «Empty set dominates True» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eIdentity with U \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e@id-universe\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «Identity with U True» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eIdentity with ∅ \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e@id-empty\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# OUTPUT: «Identity with ∅ True» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这个使用 Raku 已经定义的\u003ca href=\"https://docs.raku.org/language/setbagmix#term_%25E2%2588%2585\"\u003e空集\u003c/a\u003e的代码中，我们不仅检查集合代数中的等式是否成立，我们还通过\u003ca href=\"https://docs.raku.org/language/variables#index-entry-%5C_%28sigilless_variables%29\"\u003e无符号变量\u003c/a\u003e和集合运算符的 Unicode 形式使用表达式。尽可能接近原始形式; 例如，\u003ccode\u003eA ∪ U === U\u003c/code\u003e，除了使用\u003ca href=\"https://docs.raku.org/routine/===\"\u003e值标识运算符 \u0026lt;===\u0026gt;\u003c/a\u003e 与\u003ca href=\"https://en.wikipedia.org/wiki/Algebra_of_sets\"\u003e维基百科条目\u003c/a\u003e中的实际数学表达式非常接近。\u003c/p\u003e\n\u003cp\u003e我们甚至可以测试摩根定律，如下面的代码所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\U\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eSet\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003epostfix\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e⁻\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;(\u003c/span\u003e\u003cspan class=\"kt\"\u003eSet\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"n\"\u003eU\u003c/span\u003e \u003cspan class=\"o\"\u003e⊖\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"kt\"\u003eSet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epick\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erand\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alphabet\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$de-Morgan1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$de-Morgan2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eTrue\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e \u003cspan class=\"nv\"\u003e@sets\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\\\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \\\u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e){\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$de-Morgan1\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"o\"\u003e∪\u003c/span\u003e \u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e⁻\u003c/span\u003e  \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e⁻\u003c/span\u003e \u003cspan class=\"o\"\u003e∩\u003c/span\u003e \u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"o\"\u003e⁻\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$de-Morgan2\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e \u003cspan class=\"o\"\u003e∩\u003c/span\u003e \u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e⁻\u003c/span\u003e  \u003cspan class=\"o\"\u003e===\u003c/span\u003e \u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e⁻\u003c/span\u003e \u003cspan class=\"o\"\u003e∪\u003c/span\u003e \u003cspan class=\"n\"\u003eB\u003c/span\u003e\u003cspan class=\"o\"\u003e⁻\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e1st De Morgan is \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$de-Morgan1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e2nd De Morgan is \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$de-Morgan2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们声明 - 作为补语运算，它计算通用集U和我们集之间的对称差⊖。一旦宣布这一点，就可以比较容易地表达诸如A和B的并集 \u003ccode\u003e(A ∪ B)⁻\u003c/code\u003e 的补集，其符号与原始数学符号非常接近。\u003c/p\u003e\n\u003ch2 id=\"算术\"\u003e算术\u003c/h2\u003e\n\u003cp\u003eRaku 可以使用不同的数据类型进行算术运算。 \u003ca href=\"https://docs.raku.org/type/Num\"\u003eNum\u003c/a\u003e，\u003ca href=\"https://docs.raku.org/type/Rat\"\u003eRat\u003c/a\u003e 和 \u003ca href=\"https://docs.raku.org/type/Complex\"\u003eComplex\u003c/a\u003e 都可以\u003ca href=\"https://en.wikipedia.org/wiki/Field_(mathematics)\"\u003e在操作加法，减法，乘法和除法下作为场\u003c/a\u003e运行。等效的数学领域是：\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth style=\"text-align:center\"\u003eRaku class\u003c/th\u003e\n\u003cth style=\"text-align:center\"\u003eField\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003eC\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003eℚ\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003eC\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003eℝ\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd style=\"text-align:center\"\u003eC\u003c!-- raw HTML omitted --\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003eℂ\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003ccode\u003eInt\u003c/code\u003es 虽然在技术上与 \u003cstrong\u003eZ\u003c/strong\u003e 相对应，但它并不是真正的数学领域，因为它们不是在四个算术运算下关闭的，并且整数不满足\u003ca href=\"https://math.stackexchange.com/questions/2192317/set-of-integers-not-a-field/2192330\"\u003e同一性公理\u003c/a\u003e。但是，如果使用整数除法 \u003ccode\u003ediv\u003c/code\u003e，它们的操作将始终产生其他整数;但是，如果使用 \u003ccode\u003e/\u003c/code\u003e，通常结果将是 \u003ca href=\"https://docs.raku.org/type/Rat\"\u003eRat\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e此外，\u003ccode\u003eInt\u003c/code\u003e 可以进行无限精度算术（或者至少在存储器允许的情况下无限制;还可以发生数字溢出(\u003ccode\u003eNumeric overflow\u003c/code\u003e)），如果数字太大则不会回落到 \u003ca href=\"https://docs.raku.org/type/Num\"\u003eNum\u003c/a\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@powers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"no\"\u003eInf\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@powers\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «19729␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e同样严格地说，行为类似于数学领域的 Rational 类是 \u003ca href=\"https://docs.raku.org/type/FatRat\"\u003eFatRat\u003c/a\u003e。出于效率原因，当数字足够大或者分子和分母之间存在很大差异时，操作 \u003ccode\u003eRats\u003c/code\u003e 时会回落到 \u003ccode\u003eNum\u003c/code\u003e。 \u003ccode\u003eFatRat\u003c/code\u003e 可以使用任意精度，与默认的 \u003ccode\u003eInt\u003c/code\u003e 类相同。\u003c/p\u003e\n\u003cp\u003e生态系统中的某些模块可以使用数学方法处理其他数据类型：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/pierre-vigier/Raku-Math-Matrix\"\u003eMath::Matrix\u003c/a\u003e 操作矩阵字段。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/Util/Raku-Math-Quaternion\"\u003eMath::Quaternion\u003c/a\u003e 操作\u003ca href=\"https://en.wikipedia.org/wiki/Quaternion\"\u003e四元数字段\u003c/a\u003e，这是复数的推广。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/colomon/Math-Polynomial\"\u003eMath::Polynomial\u003c/a\u003e 与多项式一起使用，并且能够用它们进行简单的算术运算。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/raydiak/Math-Symbolic\"\u003eMath::Symbolic\u003c/a\u003e，用于符号数学\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e数字会自动变为其实际表示的数字类型：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e ⅗\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mf\"\u003e1e-9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mf\"\u003e.1\u003c/span\u003e\u003cspan class=\"no\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «Int␤Rat␤Num␤Complex␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这也使算术运算最适合特定类型\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mf\"\u003e.33\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mf\"\u003e.22\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mf\"\u003e.11\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这儿，所有数字都被解释为 \u003ccode\u003eRat\u003c/code\u003es，这使得操作准确。通常，大多数语言会将它们解释为浮点数，\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mf\"\u003e.33\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eNum\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mf\"\u003e.22\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eNum\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mf\"\u003e.11\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eNum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «1.3877787807814457e-17␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于这样的情况，Raku 还包括一个近似相等的运算符(\u003ccode\u003eapproximately equal\u003c/code\u003e)，\u003ca href=\"https://docs.raku.org/language/operators#infix_%3D~%3D\"\u003e≅\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mf\"\u003e.33\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eNum\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mf\"\u003e.22\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eNum\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mf\"\u003e.11\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eNum\u003c/span\u003e \u003cspan class=\"o\"\u003e≅\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"序列\"\u003e序列\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://en.wikipedia.org/wiki/Sequence\"\u003e序列\u003c/a\u003e是允许重复的对象的枚举集合，也是 Raku 中称为 \u003ca href=\"https://docs.raku.org/type/Seq\"\u003eSeq\u003c/a\u003e 的第一类数据类型。 \u003ccode\u003eSeq\u003c/code\u003e 能够表示无限序列，如自然数：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\𝕟\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e…\u003c/span\u003e \u003cspan class=\"no\"\u003e∞\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003e𝕟\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: «4␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e无限序列使用 ∞，\u003ccode\u003eInf\u003c/code\u003e 或 \u003ccode\u003e*\u003c/code\u003e（Whatever）作为终止符。 \u003ccode\u003e...\u003c/code\u003e 是列表生成器，只要插入第一个数字，它实际上可以理解算术和几何级数：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"o\"\u003e…\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: «(1 5 9 13 17 21 25 29 33 37 41 45 49 53 57 61 65 69 73 77 81 85 89 93 97 101)␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"o\"\u003e…\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e337\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «(1 3 9 27 81 243 729)␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当生成的数字大于 100 时，第一个序列将终止; 第二个序列，当它大于 337 时，是几何级数。\u003c/p\u003e\n\u003cp\u003e可以使用任意生成器的事实可以很容易地生成像 \u003ca href=\"https://en.wikipedia.org/wiki/Fibonacci_number\"\u003eFibonacci\u003c/a\u003e 这样的序列：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e…\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e#  OUTPUT: «(1 1 2 3 5 8 13 21 34 55)␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e事实上，我们可以通过这种方式计算\u003ca href=\"https://en.wikipedia.org/wiki/Golden_ratio\"\u003e黄金比例\u003c/a\u003e的近似值：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@phis\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eFatRat\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@otherphi\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"nv\"\u003e@phis\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e],\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@otherphi\u003c/span\u003e\u003cspan class=\"o\"\u003e[^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e30\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# «((-0.61803398874989484820458683436563811772030918 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# -0.61803398874989484820458683436563811772030918 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# -0.61803398874989484820458683436563811772030918 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# -0.61803398874989484820458683436563811772030918 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# -0.61803398874989484820458683436563811772030918 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# -0.618033…» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ca href=\"https://github.com/ajs/raku-Math-Sequences\"\u003eMath::Sequences\u003c/a\u003e 模块包含许多已为你定义的数学序列。它定义了\u003ca href=\"https://oeis.org/\"\u003e百科全书中的许多序列\u003c/a\u003e，其中一些序列的原始名称，如 ℤ 或 ℝ。\u003c/p\u003e\n\u003cp\u003e一些集合运算符也对序列进行操作，它们可用于查明对象是否是其中的一部分：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e876\u003c/span\u003e \u003cspan class=\"o\"\u003e∈\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e7\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e14\u003c/span\u003e \u003cspan class=\"o\"\u003e…\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1000\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这种特殊情况下，我们可以看出 \u003ccode\u003e876\u003c/code\u003e 是否是 7 的直接倍数，但同样的原理适用于使用复杂发生器的其他序列。我们也可以使用集合包含运算符：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e55\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e89\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eSet\u003c/span\u003e \u003cspan class=\"o\"\u003e⊂\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e…\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e虽然它没有考虑到它是否实际上是一个子序列，但这里只是存在两个元素;集合没有顺序，即使您没有将子序列显式地转换为Set或显式地将其转换为Seq，它也会被强制转换为包含运算符的应用程序。\u003c/p\u003e\n\u003ch2 id=\"数学常数\"\u003e数学常数\u003c/h2\u003e\n\u003cp\u003eRaku 已经包含了一组数学常量作为核心的一部分。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"no\"\u003eπ\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «3.141592653589793» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"no\"\u003eτ\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Equivalent to 2π; OUTPUT: «6.283185307179586» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"no\"\u003e𝑒\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «2.718281828459045␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它们的拉丁名字 \u003ccode\u003ee\u003c/code\u003e, \u003ccode\u003epi\u003c/code\u003e 和 \u003ccode\u003etau\u003c/code\u003e 也是可得的, 具有相同的值 (尽管 \u003ccode\u003e𝑒\u003c/code\u003e 在 MoarVM 外面访问不了).\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/JJ/p6-math-constants/pulls\"\u003eMath::Constants\u003c/a\u003e 模块包括一系列额外的物理和数学常数，例如前面提到的黄金比率 \u003ccode\u003eφ\u003c/code\u003e 或普朗克常数 \u003ccode\u003eℎ\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e由于 Raku 允许定义使用 Unicode 字形的变量，以及没有任何类型的 sigil 的变量和常量名称，因此使用概念的实际数学名称来尽可能地命名它们被认为是一种好的做法。\u003c/p\u003e\n","text":"Sets Raku 包括 Set 数据类型，以及对大多数 set 操作的支持。并集和交集不仅是原生操作，它们使用自然符号 ∩ 和 ∪。例如，此代码将检查有限数量集的集算术的基本定律：\nmy @arbitrary-numbers = ^100; my \\U = @arbitrary-numbers.Set; my @sets; @sets.push: Set.new( @arbitrary-numbers.pick( @arbitrary-numbers.elems.rand)) for @arbitrary-numbers; my (@union, @intersection); for @sets -\u0026gt; $set { @union.push: $set ∩ $set === $set; @intersection.push: $set ∪ $set === $set; } say \u0026#34;Idempotent union is \u0026#34;, so @union.all; # OUTPUT: «Idempotent union is True» say \u0026#34;Idempotent intersection is \u0026#34;, so @intersection.all; # OUTPUT: «Idempotent intersection is True» my (@universe, @empty-set, @id-universe, @id-empty); for @sets -\u0026gt; \\A { @universe.push: A ∪ U === U; @id-universe.push: A ∩ U === A; @empty-set.push: A ∩ ∅ === ∅; @id-empty.push: A ∪ ∅ === A; } say \u0026#34;Universe dominates \u0026#34;, so @universe.all; # OUTPUT: «Universe dominates True» say \u0026#34;Empty set dominates \u0026#34;, so @empty-set.all; # OUTPUT: «Empty set dominates True» say \u0026#34;Identity with U \u0026#34;, so @id-universe.all; # OUTPUT: «Identity with U True» say \u0026#34;Identity with ∅ \u0026#34;, so @id-empty.all; # OUTPUT: «Identity with ∅ True» 在这个使用 Raku 已经定义的空集的代码中，我们不仅检查集合代数中的等式是否成立，我们还通过无符号变量和集合运算符的 Unicode 形式使用表达式。尽可能接近原始形式; 例如，A ∪ U === U，除了使用值标识运算符 \u0026lt;===\u0026gt; 与维基百科条目中的实际数学表达式非常接近。\n我们甚至可以测试摩根定律，如下面的代码所示：\nmy @alphabet = \u0026#39;a\u0026#39;..\u0026#39;z\u0026#39;; my \\U = @alphabet.Set; sub postfix:\u0026lt;⁻\u0026gt;(Set $a) { U ⊖ $a } my @sets; @sets.push: Set.new( @alphabet.pick( @alphabet.elems.rand)) for @alphabet; my ($de-Morgan1,$de-Morgan2) = (True,True); for @sets X @sets -\u0026gt; (\\A, \\B){ $de-Morgan1 \u0026amp;\u0026amp;= (A ∪ B)⁻ === A⁻ ∩ B⁻; $de-Morgan2 \u0026amp;\u0026amp;= (A ∩ B)⁻ === A⁻ ∪ B⁻; } say \u0026#34;1st De Morgan is \u0026#34;, $de-Morgan1; say \u0026#34;2nd De Morgan is \u0026#34;, $de-Morgan2; 我们声明 - 作为补语运算，它计算通用集U和我们集之间的对称差⊖。一旦宣布这一点，就可以比较容易地表达诸如A和B的并集 (A ∪ B)⁻ 的补集，其符号与原始数学符号非常接近。\n算术 Raku 可以使用不同的数据类型进行算术运算。 Num，Rat 和 Complex 都可以在操作加法，减法，乘法和除法下作为场运行。等效的数学领域是：\nRaku class Field C ℚ C ℝ C ℂ Ints 虽然在技术上与 Z 相对应，但它并不是真正的数学领域，因为它们不是在四个算术运算下关闭的，并且整数不满足同一性公理。但是，如果使用整数除法 div，它们的操作将始终产生其他整数;但是，如果使用 /，通常结果将是 Rat。\n此外，Int 可以进行无限精度算术（或者至少在存储器允许的情况下无限制;还可以发生数字溢出(Numeric overflow)），如果数字太大则不会回落到 Num：\nmy @powers = 2, 2 ** * ... Inf; say @powers[4].chars; # OUTPUT: «19729␤» 同样严格地说，行为类似于数学领域的 Rational 类是 FatRat。出于效率原因，当数字足够大或者分子和分母之间存在很大差异时，操作 Rats 时会回落到 Num。 FatRat 可以使用任意精度，与默认的 Int 类相同。\n生态系统中的某些模块可以使用数学方法处理其他数据类型：\nMath::Matrix 操作矩阵字段。 Math::Quaternion 操作四元数字段，这是复数的推广。 Math::Polynomial 与多项式一起使用，并且能够用它们进行简单的算术运算。 Math::Symbolic，用于符号数学 数字会自动变为其实际表示的数字类型：\n.^name.say for (4, ⅗, 1e-9, 3+.1i); # OUTPUT: «Int␤Rat␤Num␤Complex␤» 这也使算术运算最适合特定类型\nsay .33-.22-.11 == 0; # OUTPUT: «True␤» 在这儿，所有数字都被解释为 Rats，这使得操作准确。通常，大多数语言会将它们解释为浮点数，\nsay .33.Num -.22.Num - .11.Num; # OUTPUT: «1.3877787807814457e-17␤» 对于这样的情况，Raku 还包括一个近似相等的运算符(approximately equal)，≅\nsay .33.Num -.22.Num - .11.Num ≅ 0; # OUTPUT: «True␤» 序列 序列是允许重复的对象的枚举集合，也是 Raku 中称为 Seq 的第一类数据类型。 Seq 能够表示无限序列，如自然数：\nmy \\𝕟 = 1,2 … ∞; say 𝕟[3];# OUTPUT: «4␤» 无限序列使用 ∞，Inf 或 *（Whatever）作为终止符。 ... 是列表生成器，只要插入第一个数字，它实际上可以理解算术和几何级数：\nsay 1,5,9 … * \u0026gt; 100; # OUTPUT: «(1 5 9 13 17 21 25 29 33 37 41 45 49 53 57 61 65 69 73 77 81 85 89 93 97 101)␤» say 1,3,9 … * \u0026gt; 337; # OUTPUT: «(1 3 9 27 81 243 729)␤» 当生成的数字大于 100 时，第一个序列将终止; 第二个序列，当它大于 337 时，是几何级数。\n可以使用任意生成器的事实可以很容易地生成像 Fibonacci 这样的序列：\nsay 1,1, * + * … * \u0026gt; 50;# OUTPUT: «(1 1 2 3 5 8 13 21 34 55)␤» 事实上，我们可以通过这种方式计算黄金比例的近似值：\nmy @phis = (2.FatRat, 1 + 1 / * ... *); my @otherphi = (1 - @phis[200], 1 + 1 / * ... *); say @otherphi[^10, |(20, 30 ... 100)];# OUTPUT: # «((-0.61803398874989484820458683436563811772030918 # -0.61803398874989484820458683436563811772030918 # -0.61803398874989484820458683436563811772030918 # -0.61803398874989484820458683436563811772030918 # -0.61803398874989484820458683436563811772030918 # -0.618033…» Math::Sequences 模块包含许多已为你定义的数学序列。它定义了百科全书中的许多序列，其中一些序列的原始名称，如 ℤ 或 ℝ。\n一些集合运算符也对序列进行操作，它们可用于查明对象是否是其中的一部分：\nsay 876 ∈ (7,14 … * \u0026gt; 1000) ; # OUTPUT: «False␤» 在这种特殊情况下，我们可以看出 876 是否是 7 的直接倍数，但同样的原理适用于使用复杂发生器的其他序列。我们也可以使用集合包含运算符：\nsay (55,89).Set ⊂ (1,1, * + * … * \u0026gt; 200); # OUTPUT: «True␤» 虽然它没有考虑到它是否实际上是一个子序列，但这里只是存在两个元素;集合没有顺序，即使您没有将子序列显式地转换为Set或显式地将其转换为Seq，它也会被强制转换为包含运算符的应用程序。\n数学常数 Raku 已经包含了一组数学常量作为核心的一部分。\nsay π; # OUTPUT: «3.141592653589793» say τ; # Equivalent to 2π; OUTPUT: «6.283185307179586» say 𝑒; # OUTPUT: «2.718281828459045␤» 它们的拉丁名字 e, pi 和 tau 也是可得的, 具有相同的值 (尽管 𝑒 在 MoarVM 外面访问不了).\nMath::Constants 模块包括一系列额外的物理和数学常数，例如前面提到的黄金比率 φ 或普朗克常数 ℎ。\n由于 Raku 允许定义使用 Unicode 字形的变量，以及没有任何类型的 sigil 的变量和常量名称，因此使用概念的实际数学名称来尽可能地命名它们被认为是一种好的做法。\n"},"name":"用 Raku 做数学","published":"2018-10-23T21:13:31+08:00","summary":"Sets Raku 包括 Set 数据类型，以及对大多数 set 操作的支持。并集和交集不仅是原生操作，它们使用自然符号 ∩ 和 ∪。例如，此代码将检查有限数量集的集算术的基本定律：\nmy @arbitrary-numbers = ^100; my \\U = @arbitrary-numbers.Set; my @sets; @sets.push: Set.new( @arbitrary-numbers.pick( @arbitrary-numbers.elems.rand)) for @arbitrary-numbers; my (@union, @intersection); for @sets -\u0026gt; $set { @union.push: $set ∩ $set === $set; @intersection.push: $set ∪ $set === $set; } say \u0026#34;Idempotent union is \u0026#34;, so @union.all; # OUTPUT: «Idempotent union is True» say \u0026#34;Idempotent intersection is \u0026#34;, so @intersection.all; # OUTPUT: «Idempotent intersection is True» my (@universe, @empty-set, @id-universe, @id-empty); for @sets -\u0026gt; \\A { @universe.","type":"entry","url":"https://ohmycloud.github.io/posts/17.doing-math-with-perl-6/"}
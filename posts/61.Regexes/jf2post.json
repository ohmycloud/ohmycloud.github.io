{"author":{"name":null,"type":"card","url":"https://ohmycloud.github.io/"},"content":{"html":"\u003cp\u003e正则表达式, 简称 regexes, 是描述文本模式的字符序列。模式匹配就是将这些模式和实际的文本进行匹配的过程。\u003c/p\u003e\n\u003ch2 id=\"词法约定\"\u003e词法约定\u003c/h2\u003e\n\u003cp\u003eRaku 正则表达式有特殊的写法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# a regex that is immediately matched against $_ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# a Regex object \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# a Regex object \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对于前两个例子,  分隔符还能用除了斜线之外的其它字符:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意, 冒号和圆括号都不能用作分隔符; 禁止使用冒号作为正则表达式分割符是因为它和副词冲突, 例如 \u003ccode\u003erx:i/abc/\u003c/code\u003e(忽略大小写的正则表达式), 而圆括号表明函数调用。\u003c/p\u003e\n\u003cp\u003e空白符在正则表达式中通常被忽略(带有 \u003ccode\u003e:s\u003c/code\u003e 或 \u003ccode\u003e:sigspace\u003c/code\u003e 副词的正则表达式除外)。\u003c/p\u003e\n\u003cp\u003e通常, 对于 Raku 来说, 正则表达式中的注释以 \u003ccode\u003e#\u003c/code\u003e 号开头, 直至行尾。\u003c/p\u003e\n\u003ch2 id=\"字面值\"\u003e字面值\u003c/h2\u003e\n\u003cp\u003e正则表达式最简单的情况是匹配字符串字面值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eproperly\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e perl \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;properly\u0026#39; contains \u0026#39;perl\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字母数字和下划线 \u003ccode\u003e_\u003c/code\u003e 按字面值匹配。所有其它字符要么使用反斜线转义(例如, \u003ccode\u003e\\:\u003c/code\u003e 匹配一个冒号), 要么用引号引起来:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etwo words\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# matches \u0026#39;two words\u0026#39; including the blank \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea:b\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"sr\"\u003e       \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# matches \u0026#39;a:b\u0026#39; including the colon \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e#\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# matches a hash character \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字符串是从左往右搜索的, 所以如果只有部分字符串匹配正则表达式也足够:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabcdef\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e de \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# OUTPUT: «de␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eprematch\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «abc␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epostmatch\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «f␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «3␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eto\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# OUTPUT: «5␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e匹配结果存储在 \u003ccode\u003e$/\u003c/code\u003e 变量中并且也从匹配中返回。如果匹配成功, 那么结果就是 \u003ca href=\"https://docs.raku.org/type/Match\"\u003eMatch\u003c/a\u003e 类型, 否则它就是 \u003ca href=\"https://docs.raku.org/type/Nil\"\u003eNil\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"通配符和字符类\"\u003e通配符和字符类\u003c/h2\u003e\n\u003ch3 id=\"点号匹配任意字符-\"\u003e点号匹配任意字符: .\u003c/h3\u003e\n\u003cp\u003e在正则表达式中一个未转义的点 \u003ccode\u003e.\u003c/code\u003e  匹配任意单个字符。\u003c/p\u003e\n\u003cp\u003e所以,  这些都匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eper\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# matches the whole string \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e per \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# the same; whitespace is ignored \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e pe\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003el \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# the . matches the r \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003espeller\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e pe\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003el\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# the . matches the first l \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面这个不匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e per \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因为在目标字符串中 \u003ccode\u003eper\u003c/code\u003e 前面没有要匹配的字符。\u003c/p\u003e\n\u003ch3 id=\"反斜杠-预定义字符类\"\u003e反斜杠, 预定义字符类\u003c/h3\u003e\n\u003ch3 id=\"unicode-properties\"\u003eUnicode properties\u003c/h3\u003e\n\u003cp\u003eRaku 有 \u003ccode\u003e\\w\u003c/code\u003e 形式的预定义字符类。大写形式是它的反面, \u003ccode\u003e\\W\u003c/code\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\\d 和 \\D\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\\d\u003c/code\u003e 匹配单个数字(Unicode 属性 N) 而 \u003ccode\u003e\\D\u003c/code\u003e 匹配单个不是数字的字符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eab42\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# OUTPUT: «4␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eab42\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\D\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# OUTPUT: «a␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意, 不仅仅只有阿拉伯数字(通常用于拉丁字母表中)匹配 \u003ccode\u003e\\d\u003c/code\u003e, 还有来自其它下标的数字也匹配 \\d。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eU+0035 5 DIGIT FIVE\nU+07C2 ߂ NKO DIGIT TWO\nU+0E53 ๓ THAI DIGIT THREE\nU+1B56 ᭖ BALINESE DIGIT SIX\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\\h 和 \\H\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\\h\u003c/code\u003e 匹配单个水平空白符。 \u003ccode\u003e\\H\u003c/code\u003e 匹配单个不是水平空白符的字符。\u003c/p\u003e\n\u003cp\u003e水平空白符的例子有:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eU+0020 SPACE\nU+00A0 NO-BREAK SPACE\nU+0009 CHARACTER TABULATION\nU+2001 EM QUAD\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e像换行符那样的垂直空白被显式地排除了; 那些可以用 \u003ccode\u003e\\v\u003c/code\u003e 来匹配, 而 \u003ccode\u003e\\s\u003c/code\u003e 匹配任何类型的空白:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\\n 和 \\N\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\\n\u003c/code\u003e 匹配单个逻辑换行符。\u003ccode\u003e\\n\u003c/code\u003e 也支持匹配 Windows 的 CR LF 代码点对儿;　尽管还不清楚魔法是发生在读取数据时还是在正则表达式匹配时。 \u003ccode\u003e\\N\u003c/code\u003e 匹配单个非逻辑换行符。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\\s 和 \\S\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\\s\u003c/code\u003e 匹配单个空白符。 \u003ccode\u003e\\S\u003c/code\u003e 匹配单个非空白符。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003econtains a word starting with \u0026#34;w\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e w \u003c/span\u003e\u003cspan class=\"se\"\u003e\\S\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «word␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\\t 和 \\T\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\\t\u003c/code\u003e 匹配单个 tab/制表符, \u003ccode\u003eU+0009\u003c/code\u003e。(注意这儿不包含诸如 \u003ccode\u003eU+000B VERTICAL TABULATION\u003c/code\u003e 这样奇异的制表符)。\u003ccode\u003e\\T\u003c/code\u003e 匹配单个非制表符。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\\v 和 \\V\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\\v\u003c/code\u003e 匹配单个垂直空白符。 \u003ccode\u003e\\V\u003c/code\u003e 匹配单个非垂直空白符。\u003c/p\u003e\n\u003cp\u003e垂直空白符的例子:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eU+000A LINE FEED\nU+000B VERTICAL TABULATION\nU+000C FORM FEED\nU+000D CARRIAGE RETURN\nU+0085 NEXT LINE\nU+2028 LINE SEPARATOR\nU+2029 PARAGRAPH SEPARATOR\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e使用 \u003ccode\u003e\\s\u003c/code\u003e 去匹配任意空白, 而不仅仅匹配垂直空白。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\\w 和 \\W\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e\\w\u003c/code\u003e 匹配单个单词字符; 例如: 一个字母(Unicode 类别 L), 一个数字或一个下划线。\u003ccode\u003e\\W\u003c/code\u003e 匹配单个非单词字符。\u003c/p\u003e\n\u003cp\u003e单词字符的例子:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e0041 A LATIN CAPITAL LETTER A\n0031 1 DIGIT ONE\n03B4 δ GREEK SMALL LETTER DELTA\n03F3 ϳ GREEK LETTER YOT\n0409 Љ CYRILLIC CAPITAL LETTER LJE\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e预定义的 subrules:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ealnum\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e   \\\u003cspan class=\"nb\"\u003ew\u003c/span\u003e       \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ealpha\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003eplus\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edigit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ealpha\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e   \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e:L\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e     \u003cspan class=\"n\"\u003eAlphabetic\u003c/span\u003e \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eblank\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e   \\\u003cspan class=\"n\"\u003eh\u003c/span\u003e       \u003cspan class=\"n\"\u003eHorizontal\u003c/span\u003e \u003cspan class=\"n\"\u003ewhitespace\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ecntrl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e            \u003cspan class=\"n\"\u003eControl\u003c/span\u003e \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003edigit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e   \\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e       \u003cspan class=\"n\"\u003eDecimal\u003c/span\u003e \u003cspan class=\"n\"\u003edigits\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003egraph\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e            \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ealnum\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003eplus\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003epunct\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003elower\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e   \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e:Ll\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e    \u003cspan class=\"n\"\u003eLowercase\u003c/span\u003e \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eprint\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e            \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egraph\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003eplus\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003espace\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003ebut\u003c/span\u003e \u003cspan class=\"k\"\u003eno\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecntrl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003epunct\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e            \u003cspan class=\"n\"\u003ePunctuation\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e \u003cspan class=\"n\"\u003eSymbols\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eonly\u003c/span\u003e \u003cspan class=\"n\"\u003ePunct\u003c/span\u003e \u003cspan class=\"n\"\u003ebeyond\u003c/span\u003e \u003cspan class=\"n\"\u003eASCII\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003espace\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e   \\\u003cspan class=\"k\"\u003es\u003c/span\u003e       \u003cspan class=\"err\"\u003eWhitespace\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"sr\"\u003eupper\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e   \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e:Lu\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e    \u003cspan class=\"n\"\u003eUppercase\u003c/span\u003e \u003cspan class=\"n\"\u003echaracters\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e|wb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e               \u003cspan class=\"n\"\u003eWord\u003c/span\u003e \u003cspan class=\"n\"\u003eBoundary\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ezero-width\u003c/span\u003e \u003cspan class=\"n\"\u003eassertion\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eww\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e               \u003cspan class=\"n\"\u003eWithin\u003c/span\u003e \u003cspan class=\"n\"\u003eWord\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ezero-width\u003c/span\u003e \u003cspan class=\"n\"\u003eassertion\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003exdigit\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e           \u003cspan class=\"n\"\u003eHexadecimal\u003c/span\u003e \u003cspan class=\"n\"\u003edigit\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"n\"\u003eA-Fa-f\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"unicode-属性\"\u003eUnicode 属性\u003c/h3\u003e\n\u003cp\u003e目前提到的字符类大多是为了方便; 另一种方法是使用 Unicode 字符属性。这些以 \u003ccode\u003e\u0026lt;:property\u0026gt;\u003c/code\u003e 的形式出现, 其中 \u003cem\u003eproperty\u003c/em\u003e 可以是短的或长的 Unicode 一般类别名。它们使用 pair 语法。\u003c/p\u003e\n\u003cp\u003e要匹配一个 Unicode 属性:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euniprop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eScript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# OUTPUT: «Latin␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eScript\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eLatin\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003euniprop\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBlock\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# OUTPUT: «Basic Latin␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eBlock\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBasic Latin\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面的 Unicode 通用类别表是从 Perl 5 的 \u003ca href=\"http://perldoc.perl.org/perlunicode.html\"\u003eperlunicode\u003c/a\u003e 文档偷来的:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eShort\tLong\nL\tLetter\nLC\tCased_Letter\nLu\tUppercase_Letter\nLl\tLowercase_Letter\nLt\tTitlecase_Letter\nLm\tModifier_Letter\nLo\tOther_Letter\nM\tMark\nMn\tNonspacing_Mark\nMc\tSpacing_Mark\nMe\tEnclosing_Mark\nN\tNumber\nNd\tDecimal_Number (also Digit)\nNl\tLetter_Number\nNo\tOther_Number\nP\tPunctuation (also punct)\nPc\tConnector_Punctuation\nPd\tDash_Punctuation\nPs\tOpen_Punctuation\nPe\tClose_Punctuation\nPi\tInitial_Punctuation\n        (may behave like Ps or Pe depending on usage)\nPf\tFinal_Punctuation\n        (may behave like Ps or Pe depending on usage)\nPo\tOther_Punctuation\nS\tSymbol\nSm\tMath_Symbol\nSc\tCurrency_Symbol\nSk\tModifier_Symbol\nSo\tOther_Symbol\nZ\tSeparator\nZs\tSpace_Separator\nZl\tLine_Separator\nZp\tParagraph_Separator\nC\tOther\nCc\tControl (also cntrl)\nCf\tFormat\nCs\tSurrogate\nCo\tPrivate_Use\nCn\tUnassigned\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e举个例子: \u003ccode\u003e\u0026lt;:Lu\u0026gt;\u003c/code\u003e 匹配单个大写字母。\u003c/p\u003e\n\u003cp\u003e它的反面是这个: \u003ccode\u003e\u0026lt;:!property\u0026gt;\u003c/code\u003e。所以, \u003ccode\u003e\u0026lt;:!Lu\u0026gt;\u003c/code\u003e 匹配单个非大写字母的字符。\u003c/p\u003e\n\u003cp\u003e类别可以使用中缀操作符组合在一起:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eOperator\tMeaning\n+\t        set union\n|\t        set union\n\u0026amp;\t        set intersection\n-\t        set difference (first minus second)\n^\t        symmetric set intersection / XOR\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e要匹配要么一个小写字母,要么一个数字, 可以写 \u003ccode\u003e\u0026lt;:Ll+:N\u0026gt;\u003c/code\u003e 或 \u003ccode\u003e\u0026lt;:Ll+:Number\u0026gt;\u003c/code\u003e 或 \u003ccode\u003e\u0026lt;+ :Lowercase_Letter + :Number\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e使用圆括号将类别和一组类别分组也是可以的; 例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eraku\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026lt;:\u003c/span\u003e\u003cspan class=\"na\"\u003eLl\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;)}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «0 =\u0026gt; ｢6｣␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"可枚举的字符类和区间\"\u003e可枚举的字符类和区间\u003c/h3\u003e\n\u003cp\u003e有时候, 预先存在的通配符和字符类不够用。幸运的是, 定义你自己的字符类相当简单。在 \u003ccode\u003e\u0026lt;[]\u0026gt;\u003c/code\u003e 中, 你可以放入任何数量的单个字符和字符区间(两个端点之间有两个点号), 带有或不带有空白。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabacabadabacaba\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"sr\"\u003e c \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Unicode hex codepoint range \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eÀÁÂÃÄÅÆ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\x\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mh\"\u003e00C0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\x\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mh\"\u003e00C6\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Unicode named codepoint range \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eÀÁÂÃÄÅÆ\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\c\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003eLATIN CAPITAL LETTER A WITH GRAVE\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\c\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"s\"\u003eLATIN CAPITAL LETTER AE\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 \u003ccode\u003e\u0026lt;\u0026gt;\u003c/code\u003e 中你可以使用 \u003ccode\u003e+\u003c/code\u003e 或 \u003ccode\u003e-\u003c/code\u003e 来添加或移除多个区间定义, 甚至混合某些上面的 unicode 属性。你还可以在 \u003ccode\u003e[]\u003c/code\u003e 之间写上反斜线形式的字符类。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e13579\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# starts with \\d and removes odd ASCII digits, but not quite the same as \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"mo\"\u003e0246\u003c/span\u003e\u003cspan class=\"mi\"\u003e8\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# because the first one also contains \u0026#34;weird\u0026#34; unicodey digits \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e解析引号分割的字符串的一个常见模式涉及到对字符类取反:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34;in quotes\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u0026#34; \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这先匹配一个引号, 然后匹配任何不是引号的字符, 再然后还是一个引号。 上面例子中的 \u003ccode\u003e*\u003c/code\u003e 和 \u003ccode\u003e+\u003c/code\u003e 会在\u003ca href=\"https://docs.raku.org/language/regexes#Quantifiers\"\u003e量词\u003c/a\u003e一节中解释。\u003c/p\u003e\n\u003cp\u003e就像你可以使用 \u003ccode\u003e-\u003c/code\u003e 用于集合差集和取反单个值, 你也可以在前面显式地放上一个 \u003ccode\u003e+\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e123\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# same as \u0026lt;[123]\u0026gt; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"量词\"\u003e量词\u003c/h2\u003e\n\u003cp\u003e量词使前面的原子匹配可变次数。例如, \u003ccode\u003ea+\u003c/code\u003e 匹配一个或多个字符 \u003cem\u003ea\u003c/em\u003e。\u003c/p\u003e\n\u003cp\u003e量词比连结绑定的更紧, 所以 \u003ccode\u003eab+\u003c/code\u003e 匹配一个 \u003cem\u003ea\u003c/em\u003e, 然后跟着一个或多个 \u003cem\u003eb\u003c/em\u003e。对于引号来说, 有点不同, 所以 \u003ccode\u003e'ab'+\u003c/code\u003e 匹配字符串 \u003cem\u003eab\u003c/em\u003e, \u003cem\u003eabab\u003c/em\u003e, \u003cem\u003eababab\u003c/em\u003e 等等。\u003c/p\u003e\n\u003ch3 id=\"一次-或多次--\"\u003e一次 或多次 : +\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e+\u003c/code\u003e 量词使它前面的原子匹配一次或多次, 没有次数上限。\u003c/p\u003e\n\u003cp\u003e例如, 要匹配 \u003ccode\u003eform=value\u003c/code\u003e 形式的字符串, 你可以这样写正则表达式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"零次-或-多次-\"\u003e零次 或 多次: *\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e*\u003c/code\u003e 量词使它前面的原子匹配一次或多次, 没有次数上限。\u003c/p\u003e\n\u003cp\u003e例如, 要允许 \u003cem\u003ea\u003c/em\u003e 和 \u003cem\u003eb\u003c/em\u003e 之间出现可选的空白,  你可以这样写:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e b \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"零次-或-一次匹配-\"\u003e零次 或 一次匹配: ?\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e?\u003c/code\u003e 量词使它前面的原子匹配零次或一次。\u003c/p\u003e\n\u003ch3 id=\"常规量词--minmax\"\u003e常规量词: ** min..max\u003c/h3\u003e\n\u003cp\u003e要限定原子匹配任意次数,　你可以写出像 \u003ccode\u003ea ** 2..5\u003c/code\u003e 那样的表达式来匹配字符 \u003cem\u003ea\u003c/em\u003e 至少 2 次, 至多 5 次。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e  \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果最小匹配次数和最大匹配次数相同, 那么使用单个整数: \u003ccode\u003ea ** 5\u003c/code\u003e 精确地匹配 5 次。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaaaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也可以使用 \u003ccode\u003e^\u003c/code\u003e 脱字符来排除区间的端点:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» -- there are 2 to 5 \u0026#39;a\u0026#39;s in a row \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面这个包含从 0 开始的数值区间:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» -- there are 0 to 5 \u0026#39;a\u0026#39;s in a row \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或使用一个 Whatever Star \u003ccode\u003e*\u003c/code\u003e 操作符来表示无限区间:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaaaa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» -- there are 2 or more \u0026#39;a\u0026#39;s in a row \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"modified-quantifier-\"\u003eModified quantifier: %\u003c/h3\u003e\n\u003cp\u003e为了更容易地匹配逗号分割那样的值, 你可以在以上任何一个量词后面加上一个 \u003ccode\u003e%\u003c/code\u003e 修饰符以指定某个修饰符必须出现在每一次匹配之间。例如, \u003ccode\u003ea+ % ','\u003c/code\u003e 会匹配 \u003cem\u003ea\u003c/em\u003e, 或 \u003cem\u003ea,a\u003c/em\u003e 或 \u003cem\u003ea,a,a\u003c/em\u003e 等等, 但是不会匹配 \u003cem\u003ea,\u003c/em\u003e 或 \u003cem\u003ea,a,\u003c/em\u003e 等。要连这些也要匹配, 那么使用 \u003ccode\u003e%%\u003c/code\u003e 代替 \u003ccode\u003e%\u003c/code\u003e。\u003c/p\u003e\n\u003ch3 id=\"贪婪量词-vs-非贪婪量词-\"\u003e贪婪量词 Vs. 非贪婪量词: ?\u003c/h3\u003e\n\u003cp\u003e默认地, 量词要求进行贪婪匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabababa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «abababa␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以给量词附加一个 \u003ccode\u003e?\u003c/code\u003e 修饰符来开启非贪婪匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabababa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*?\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «aba␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你还可以使用 \u003ccode\u003e!\u003c/code\u003e 修饰符显式地要求贪婪匹配。\u003c/p\u003e\n\u003ch3 id=\"阻止回溯-\"\u003e阻止回溯: :\u003c/h3\u003e\n\u003cp\u003e你可以在正则表达式中通过为量词附加一个 \u003ccode\u003e:\u003c/code\u003e 修饰符来阻止回溯:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabababa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e aba\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabababa\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*:\u003c/span\u003e\u003cspan class=\"sr\"\u003e aba\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"alternation-\"\u003eAlternation: ||\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.raku.org/language/regexes#Alternation:_%7C%7C\"\u003e||\u003c/a\u003e 在正则表达式中表示备选分支, 在匹配由 \u003ccode\u003e||\u003c/code\u003e 分割的几个可能的备选分支之一时, \u003cstrong\u003e第一个\u003c/strong\u003e匹配的备选分支胜出。例如, \u003cem\u003eini\u003c/em\u003e 文件有如下形式:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[section]\nkey = value\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e因此, 如果你解析单行 \u003cem\u003eini\u003c/em\u003e 文件, 那么它要么是一个 section, 要么是一个键值对儿。所以正则表达式可以是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\S\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\S\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e即, 它要么是一个由方括号包围起来的单词, 要么是一个键值对。\u003c/p\u003e\n\u003ch2 id=\"longest-alternation-\"\u003eLongest Alternation: |\u003c/h2\u003e\n\u003cp\u003e如果正则表达式由 \u003ccode\u003e|\u003c/code\u003e 分割, 则最长的那个匹配胜出。独立于正则表达式中的词法顺序。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003eb \u003c/span\u003e\u003cspan class=\"p\"\u003e/)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «ab␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"anchors\"\u003eAnchors\u003c/h2\u003e\n\u003cp\u003e正则表达式引擎尝试在字符串中从左至右地搜索来查找匹配。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eproperly\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e perl\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#          ^^^^ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有时候这不是你想要的。相反, 你可能只想匹配整个字符串, 或一整行, 或精确地一个或几个完整的单词。锚或断言能帮助我们。\u003c/p\u003e\n\u003cp\u003e为了整个正则表达式能够匹配, 断言需要被成功地匹配但是断言在匹配时不消耗字符。\u003c/p\u003e\n\u003ch3 id=\"--start-of-string-and---end-of-string\"\u003e^ , Start of String and $ , End of String\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e^\u003c/code\u003e 断言只匹配字符串的开头:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eproperly\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e  perl\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eproperly\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e perl\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperly\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e perl\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e     \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e perl\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e$\u003c/code\u003e 断言只匹配字符串的结尾:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euse perl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e  perl  \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euse perl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e  perl \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperly\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e    \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e  perl \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以把这两个断言组合起来:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003euse perl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e perl \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e     \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e perl \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e记住, \u003ccode\u003e^\u003c/code\u003e 匹配\u003cstrong\u003e字符串\u003c/strong\u003e的开头, 而非\u003cstrong\u003e行\u003c/strong\u003e的开头。同样地, \u003ccode\u003e$\u003c/code\u003e 匹配\u003cstrong\u003e字符串\u003c/strong\u003e的结尾, 而非\u003cstrong\u003e行\u003c/strong\u003e的结尾。\u003c/p\u003e\n\u003cp\u003e下面的是多行字符串:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOS/;\u003c/span\u003e\u003cspan class=\"s\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e   Keep it secret\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e   and keep it safe\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e   \u003c/span\u003e\u003cspan class=\"p\"\u003eEOS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003esafe   \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»  -- \u0026#39;safe\u0026#39; is at the end of the string \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003esecret \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» -- \u0026#39;secret\u0026#39; is at the end of a line -- not the string \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003eKeep   \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»  -- \u0026#39;Keep\u0026#39; is at the start of the string \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003eand    \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» -- \u0026#39;and\u0026#39; is at the start of a line -- not the string \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"--start-of-line-and---end-of-line\"\u003e^^ , Start of Line and $$ , End of Line\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e^^\u003c/code\u003e 断言匹配逻辑行的开头。即, 要么在字符串的开头, 要么在换行符之后。然而, 它不匹配字符串的结尾, 即使它以一个换行符结尾。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e$$\u003c/code\u003e 只匹配逻辑换行符的结尾, 即, 在换行符之前, 或在字符串的结尾, 当最后一个字符不是换行符时。\u003c/p\u003e\n\u003cp\u003e(为了理解下面的示例, 最好先了解 \u003ccode\u003eq:to/EOS/...EOS\u003c/code\u003e 的 \u0026ldquo;heredoc\u0026rdquo; 语法移除了前置的缩进, 使之与 \u003ccode\u003eEOS\u003c/code\u003e 标记同级, 以至于第一行, 第二行和最后一行没有前置空格而第三行和第四行各有两个前置空格。)\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOS/;\u003c/span\u003e\u003cspan class=\"s\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    There was a young man of Japan\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    Whose limericks never would scan.\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e      When asked why this was,\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e      He replied \u0026#34;It\u0026#39;s because\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    I always try to fit as many syllables into the last line as ever I possibly can.\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003eEOS\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^^\u003c/span\u003e\u003cspan class=\"sr\"\u003e There\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»  -- start of string \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^^\u003c/span\u003e\u003cspan class=\"sr\"\u003e limericks\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» -- not at the start of a line \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^^\u003c/span\u003e\u003cspan class=\"sr\"\u003e I\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»  -- start of the last line \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^^\u003c/span\u003e\u003cspan class=\"sr\"\u003e When\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» -- there are blanks between \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                  \u003cspan class=\"c1\"\u003e#                       start of line and the \u0026#34;When\u0026#34; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e Japan \u003c/span\u003e\u003cspan class=\"ni\"\u003e$$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»  -- end of first line \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e scan \u003c/span\u003e\u003cspan class=\"ni\"\u003e$$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» -- there\u0026#39;s a . between \u0026#34;scan\u0026#34; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                  \u003cspan class=\"c1\"\u003e#                      and the end of line \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e$$\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»  -- at the last line \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"w-and-w-word-boundary\"\u003e\u0026lt;|w\u0026gt; and \u0026lt;!|w\u0026gt;, word boundary\u003c/h3\u003e\n\u003cp\u003e要匹配单词边界, 使用 \u003ccode\u003e\u0026lt;|w\u0026gt;\u003c/code\u003e。这与其它语言的 \u003ccode\u003e\\b\u003c/code\u003e 类似，要匹配一个非单词边界, 使用 \u003ccode\u003e\u0026lt;!|w\u0026gt;\u003c/code\u003e, 类似其它语言的 \u003ccode\u003e\\B\u003c/code\u003e。这些都是零宽断言。\u003c/p\u003e\n\u003ch3 id=\"-and---left-and-right-word-boundary\"\u003e\u0026laquo; and \u0026raquo; , left and right word boundary\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;\u0026lt;\u003c/code\u003e 匹配左单词边界。它匹配左侧(或者字符串的开头)是非单词字符而右侧是一个单词字符的位置。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026gt;\u0026gt;\u003c/code\u003e 匹配右单词边界。它匹配左侧有一个单词字符而右侧(或者字符串的结尾)是一个非单词字符的位置。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eThe quick brown fox\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ebr\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e br\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ebr \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eown\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e own\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eown \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以使用变体 \u003cstrong\u003e«\u003c/strong\u003e 和 \u003cstrong\u003e»\u003c/strong\u003e :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eThe quick brown fox\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e«\u003c/span\u003e\u003cspan class=\"sr\"\u003e own\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eown \u003c/span\u003e\u003cspan class=\"o\"\u003e»\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"分组和捕获\"\u003e分组和捕获\u003c/h2\u003e\n\u003cp\u003e在普通的(非正则表达式)Raku 代码中, 你可以使用圆括号把东西组织到一块, 通常用于覆盖操作符优先级:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 9, parsed as 1 + (4*2)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 输出: 10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在正则表达式中也可以使用同样的分组工具:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e b c\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 匹配 \u0026#39;a\u0026#39; 或 \u0026#39;bc\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e c\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 匹配 \u0026#39;ac\u0026#39; 或 \u0026#39;bc\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e分组可以应用在量词上:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a b\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# 匹配一个 \u0026#39;a\u0026#39;, 后面再跟着一个或多个 \u0026#39;b\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ea b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# 匹配一个或多个 \u0026#39;ab\u0026#39; 序列\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 匹配一个 \u0026#39;a\u0026#39; 序列或者 \u0026#39;b\u0026#39; 序列, 至少一次\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一个非量词化的捕获产生一个 \u003ca href=\"https://docs.raku.org/type/Match\"\u003eMatch\u003c/a\u003e对象。当捕获被量化(除了使用 ? 量词)之后, 该捕获就变成 \u003ca href=\"https://docs.raku.org/type/Match\"\u003eMatch\u003c/a\u003e对象的列表。\u003c/p\u003e\n\u003ch3 id=\"捕获\"\u003e捕获\u003c/h3\u003e\n\u003cp\u003e圆括号不仅仅能够分组, 它们也\u003cem\u003e捕获\u003c/em\u003e; 也就是说, 它们使分组中匹配到的字符串用作变量，并且还作为生成的 \u003ca href=\"https://docs.raku.org/type/Match\"\u003eMatch\u003c/a\u003e 对象的元素:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber 42\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe number is \u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# The number is 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# or\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eThe number is $/[0]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# The number is 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e圆括号对儿是从左到右编号的, 编号从零开始。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/(\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e b \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e0:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"s2\"\u003e; 1:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 输出: 0:a; 1:c\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e$0\u003c/code\u003e 和 \u003ccode\u003e$1\u003c/code\u003e 等语法是简写的。这些捕获可以从用作列表的匹配对象 \u003ccode\u003e$/\u003c/code\u003e 中规范地获取到, 所以, \u003ccode\u003e$0\u003c/code\u003e 实际上是 \u003ccode\u003e$/[0]\u003c/code\u003e 的语法糖。\u003c/p\u003e\n\u003cp\u003e将匹配对象强制转换为列表可以方便地以编程方式访问所有元素:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/(\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e b \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 输出 a,c\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"非捕获分组\"\u003e非捕获分组\u003c/h3\u003e\n\u003cp\u003e正则表达式中的圆括号扮演了双重角色: 它们将内部的正则表达式元素分组, 并通过内部的子正则表达式捕获所匹配到的内容。\u003c/p\u003e\n\u003cp\u003e要仅仅获得分组行为, 可以使用方括号 \u003ccode\u003e[...]\u003c/code\u003e 代替圆括号。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# OUTPUT: «c␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果您不需要捕获, 则使用非捕获分组可提供三个好处: 它们更干净地传达正则表达式; 它们使您更容易对您关心的捕获组计数; 并且它匹配比较快。\u003c/p\u003e\n\u003ch3 id=\"捕获编号\"\u003e捕获编号\u003c/h3\u003e\n\u003cp\u003e上面已经说明，捕获从左到右编号。 原则上是真的，这也是过于简单的。\u003c/p\u003e\n\u003cp\u003e为了完整起见，列出了以下规则。 当您发现自己经常使用它们时，考虑命名捕获（可能是 subrules）是值得的。\u003c/p\u003e\n\u003cp\u003e备选分支会重置捕获计数：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# $0  $1      $0  $1  $2 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/(\u003c/span\u003e\u003cspan class=\"sr\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"sr\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e)(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# b \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果两个（或多个）备选分支具有不同的捕获编号，则捕获编号最多的决定了下一个捕获的索引：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabcd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"ow\"\u003e(.)\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"ow\"\u003e(.)\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e#      $0     $0  $1    $2 \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# d \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e捕获可以嵌套，在这种情况下，它们的每一级都会编号:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eOuter: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e                \u003cspan class=\"c1\"\u003e# Outer: abc \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eInner: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"s2\"\u003e[0] and \u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"s2\"\u003e[1]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# Inner: b and c \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"命名捕获\"\u003e命名捕获\u003c/h3\u003e\n\u003cp\u003e除了给捕获编号，你也可以给他们起名字。 命名捕获的通用和略微冗长的方式是这样的：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;myname\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;myname\u0026gt;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# OUTPUT: «abc␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e对命名捕获 \u003cem\u003e$\u003c!-- raw HTML omitted --\u003e\u003c/em\u003e 的访问是将匹配对象作为哈希索引的简写，换句话说：\u003ccode\u003e$/{'myname'}\u003c/code\u003e 或 \u003ccode\u003e$/\u0026lt;myname\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e命名捕获也可以使用常规捕获分组语法进行嵌套:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc-abc-abc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;string\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;part\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;string\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# OUTPUT: «abc-abc-abc␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;string\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003epart\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «[abc, abc, abc]␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e将匹配对象强制为散列可让您轻松地以编程方式访问所有命名捕获:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ecount=23\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;variable\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;value\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e, \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «value, variable␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e, \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# OUTPUT: «23, count␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e%h\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekv\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$k\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$v\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eFound value \u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$v\u0026#39;\u003c/span\u003e\u003cspan class=\"s2\"\u003e with key \u0026#39;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$k\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# outputs two lines: \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e#   Found value \u0026#39;count\u0026#39; with key \u0026#39;variable\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e#   Found value \u0026#39;23\u0026#39; with key \u0026#39;value\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Subrules 部分会讨论获取命名捕获的更方便的方法。\u003c/p\u003e\n\u003ch3 id=\"capture-markers--\"\u003eCapture markers: \u0026lt;( )\u0026gt;\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e\u0026lt;(\u003c/code\u003e token 表示匹配的整体捕捉的开始，而相应的 \u003ccode\u003e)\u0026gt;\u003c/code\u003e token 表示其末端。 \u003ccode\u003e\u0026lt;(\u003c/code\u003e 类似于其他语言的 \u003ccode\u003e\\K\u003c/code\u003e 丢弃 \u003ccode\u003e\\K\u003c/code\u003e 之前找到的任何匹配项。\u003c/p\u003e\n\u003ch2 id=\"替换\"\u003e替换\u003c/h2\u003e\n\u003cp\u003e正则表达式也可以用来替换另一个文本。 您可以使用它来解决拼写错误(例如, 用 \u0026ldquo;Pearl Jam\u0026rdquo; 替换 \u0026ldquo;Perl Jam\u0026rdquo;), 从 \u003ccode\u003eyyyy-mm-ddThh:mm:ssZ\u003c/code\u003e 到 \u003ccode\u003emm-dd-yy h:m {AM,PM}\u003c/code\u003e 重新格式化 ISO8601 日期及其它。\u003c/p\u003e\n\u003cp\u003e就像搜索替换编辑器的对话框一样，\u003ccode\u003es///\u003c/code\u003e 操作符有两面，左侧和右侧。 左侧是匹配表达式的位置，右侧是您要替换的表达式。\u003c/p\u003e\n\u003ch3 id=\"词汇约定\"\u003e词汇约定\u003c/h3\u003e\n\u003cp\u003e替换和匹配的写法类似，但替换运算符既有正则表达式匹配的区域，也有替换的文本区域：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# a substitution that is applied to $_ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$str\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# a substitution applied to a scalar \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e替换操作法允许除了斜线之外的分隔符:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"sr\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e|\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e|;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"sr\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e!\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e!;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"sr\"\u003ereplace\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\u003cspan class=\"s2\"\u003ewith\u003c/span\u003e\u003cspan class=\"p\"\u003e,;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意, 冒号和诸如 \u003ccode\u003e{}\u003c/code\u003e 或 \u003ccode\u003e()\u003c/code\u003e 的分隔符不能作为替换分割符。带有副词的冒号斜线诸如 \u003ccode\u003es:i/Foo/Bar\u003c/code\u003e 和其它分割符有其它用途。\u003c/p\u003e\n\u003cp\u003e就像 \u003ccode\u003em//\u003c/code\u003e 操作符一样, 通常会忽略空白。在 Raku 中, 注释以 \u003cem\u003e#\u003c/em\u003e 号开头直到当前行的结尾。\u003c/p\u003e\n\u003ch3 id=\"替换字符串字面值\"\u003e替换字符串字面值\u003c/h3\u003e\n\u003cp\u003e要替换的最简单的东西就是字符串字面量。你要替换的字符串在替换运算符的左侧, 而替换它的字符串在替换操作符的右侧; 例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eThe Replacements\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eReplace\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eEntrap\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# OUTPUT: «The Entrapments␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e字母数字字符和下划线是文字匹配，就像其表哥 \u003ccode\u003em//\u003c/code\u003e 操作符一样。 所有其他字符都必须使用反斜杠\u003ccode\u003e\\\u003c/code\u003e转义，或包含在引号中：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eSpace: 1999\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003eSpace\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eParty like it\u0026#39;s\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e                        \u003cspan class=\"c1\"\u003e# OUTPUT: «Party like it\u0026#39;s 1999␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，匹配约束仅适用于替换表达式的左侧。\u003c/p\u003e\n\u003cp\u003e默认情况下，替换仅在第一匹配中完成：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eThere can be twly two\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003etw\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003eon\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e                     \u003cspan class=\"c1\"\u003e# replace \u0026#39;tw\u0026#39; with \u0026#39;on\u0026#39; once \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e# OUTPUT: «there can be only two␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"通配符和字符类-1\"\u003e通配符和字符类\u003c/h3\u003e\n\u003cp\u003e任何可以进入 \u003ccode\u003em//\u003c/code\u003e 操作符的内容都可以进入替换操作符的左侧，包括通配符和字符类。 当您匹配的文本不是静态的时，这很方便，例如尝试匹配字符串中间的数字：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eBlake\u0026#39;s 9\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003e7\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# replace any sequence of digits with \u0026#39;7\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# OUTPUT: «Blake\u0026#39;s 7␤»\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e当然，你可以使用任何\u003ccode\u003e+\u003c/code\u003e，\u003ccode\u003e*\u003c/code\u003e和\u003ccode\u003e?\u003c/code\u003e 修饰符，它们的行为就像在 \u003ccode\u003em//\u003c/code\u003e 操作符的上下文中一样。\u003c/p\u003e\n\u003ch3 id=\"捕获组\"\u003e捕获组\u003c/h3\u003e\n\u003cp\u003e就像在匹配运算符中一样，捕获组在左侧被允许，匹配的内容填充 \u003ccode\u003e$0..$n\u003c/code\u003e 变量和 \u003ccode\u003e$/\u003c/code\u003e 对象：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e2016-01-23 18:09:00\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"s2\"\u003etoday\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# replace YYYY-MM-DD with \u0026#39;today\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                             \u003cspan class=\"c1\"\u003e# OUTPUT: «today 18:09:00␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1-$2-$0\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                   \u003cspan class=\"c1\"\u003e# OUTPUT: «01-23-2016␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e$/[1]-$/[2]-$/[0]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# OUTPUT: «01-23-2016␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e任何这些变量 \u003ccode\u003e$0\u003c/code\u003e，\u003ccode\u003e$1\u003c/code\u003e，\u003ccode\u003e$/\u003c/code\u003e 也可以在运算符的右侧使用，所以你可以操纵你刚刚匹配的内容。 这样，您可以将日期的YYYY，MM和DD部分分开，并将其重新格式化为 \u003ccode\u003eMM-DD-YYYY\u003c/code\u003e 顺序：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e2016-01-23 18:09:00\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1-$2-$0\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# transform YYYY-MM-DD to MM-DD-YYYY \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                 \u003cspan class=\"c1\"\u003e# OUTPUT: «01-23-2016 18:09:00␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e由于右侧实际上是一个常规的 Raku 内插字符串，因此可以将时间从 \u003ccode\u003eHH:MM\u003c/code\u003e 重新格式化为 `h:MM {AM,PM} 格式, 如下所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e18:38\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)/{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\\:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e12\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eAM\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePM\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;}/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                                                    \u003cspan class=\"c1\"\u003e# OUTPUT: «6:38 PM␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e使用上面的模数 \u003ccode\u003e%\u003c/code\u003e 运算符将样本代码保留在80个字符以下，否则就是 \u003ccode\u003e$0 \u0026lt;12 ?? $0 !! $0 - 12\u003c/code\u003e。 结合解析器表达式语法的强大功能，真正使您在这里看到的内容成为可能，您可以使用“正则表达式”来解析任何文本。\u003c/p\u003e\n\u003ch3 id=\"common-adverbs\"\u003eCommon adverbs\u003c/h3\u003e\n\u003ch2 id=\"tilde-for-nesting-structures\"\u003eTilde for nesting structures\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003e~\u003c/code\u003e 运算符是一个帮助器，用于匹配具有特定终结符的嵌套子规则作为目标。 它被设计为放置在开口和闭合括号之间，如下所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eexpression\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然而, 它主要忽略左侧的参数, 并且在接下来的两个原子（可以被量化）上操作。 它对下两个原子的操作是“旋转”它们，使得它们实际上以相反的顺序匹配。 因此，上面的表达式，起初是腮红，只不过是下面的简写:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eexpression\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是除此之外，当它重写原子时，它还会插入将设置内部表达式以识别终止符的设备，并且如果内部表达式不在所需的闭合原子上终止，则产生适当的错误消息。 所以它确实也注意了左边的括号，它实际上把我们的例子改写成更像:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;OPEN\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e(\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eSETGOAL: \u0026#39;)\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003eexpression\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"nv\"\u003e$GOAL\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eFAILGOAL\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFAILGOAL 是一种可以由用户定义的特殊方法，它将在解析失败时被调用：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eA\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eFAILGOAL\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$goal\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eCannot find \u003c/span\u003e\u003cspan class=\"nv\"\u003e$goal\u003c/span\u003e\u003cspan class=\"s2\"\u003e near position \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[good]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: «｢[good]｣␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eA\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[bad\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# will throw FAILGOAL exception \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eCATCH\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eput\u003c/span\u003e \u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: «X::AdHoc: Cannot find \u0026#39;]\u0026#39;  near position 5␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，即使没有开头括号，也可以使用此构造来设置闭合结构的期望值：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e3)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e  \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# RESULT: «｢3)｣» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e(3)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# RESULT: «｢3)｣» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里 \u003ccode\u003e\u0026lt;?\u0026gt;\u003c/code\u003e 在第一个空字符串中返回true。\u003c/p\u003e\n\u003cp\u003e正则表达式捕获的顺序是原始的：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"sr\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e)/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «｢c｣␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «｢b｣␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"subrules\"\u003eSubrules\u003c/h2\u003e\n\u003cp\u003e就像你可以把代码片段放进子例程中一样, 你同样可以把正则表达式片段放进命名规则中(named rules)。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003eline\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\N\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabc\u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"s2\"\u003edef\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e def\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eFirst line:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;line\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echomp\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT:«First line: abc␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e命名正则可以使用 \u003ccode\u003emy regex_name { body here }\u003c/code\u003e 来声明, 并使用 \u003ccode\u003e\u0026lt;regex_name\u0026gt;\u003c/code\u003e 来调用。与此同时, 调用命名正则的时候会安装一个同名的命名捕获。\u003c/p\u003e\n\u003cp\u003e要给捕获起一个和 regex 不同的名字, 那么使用 \u003ccode\u003e\u0026lt;capture_name=regex_name\u0026gt;\u003c/code\u003e 语法。如果不想捕获, 那么使用一个前置的点号来抑制捕获: \u003ccode\u003e\u0026lt;.regex_name\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e下面是一个更完善的解析 ini 文件的例子:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003eheader\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003esection\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekvpair\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$contents\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOI/;\u003c/span\u003e\u003cspan class=\"s\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    [passwords]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        jack=password1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        joy=muchmoresecure123\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    [quotas]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        jack=123\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        joy=42\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003eEOI\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%config\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$contents\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003esection\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;section\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$section\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%section\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$section\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ekvpair\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$p\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$p\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%section\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$p\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$p\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003evalue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e%config\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$section\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%section\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e%config\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: «(\u0026#34;passwords\u0026#34; =\u0026gt; {\u0026#34;jack\u0026#34; =\u0026gt; \u0026#34;password1\u0026#34;, \u0026#34;joy\u0026#34; =\u0026gt; \u0026#34;muchmoresecure123\u0026#34;},␤ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#          \u0026#34;quotas\u0026#34; =\u0026gt; {\u0026#34;jack\u0026#34; =\u0026gt; \u0026#34;123\u0026#34;, \u0026#34;joy\u0026#34; =\u0026gt; \u0026#34;42\u0026#34;}).hash» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e命名正则可以规整到 \u003ca href=\"https://docs.raku.org/language/grammars\"\u003egramamrs\u003c/a\u003e 中。\u003ca href=\"https://design.raku.org/S05.html#Predefined_Subrules\"\u003eS05\u003c/a\u003e中有一组预定义的 subrules。\u003c/p\u003e\n\u003ch2 id=\"副词\"\u003e副词\u003c/h2\u003e\n\u003cp\u003e副词修改正则表达式的工作方式, 并为某些类型的循环任务提供方便的快捷方式。\u003c/p\u003e\n\u003cp\u003e有两种副词: 正则表达式副词适用于定义正则表达式时, 匹配副词适用于正则表达式与字符串匹配时。\u003c/p\u003e\n\u003cp\u003e这种区别往往是模糊的, 因为匹配和声明通常是文本上关闭的, 但使用方法形式的匹配使得区分清晰一点。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e'abc' ~~ /../\u003c/code\u003e 大致相当于 \u003ccode\u003e'abc'.match(/../)\u003c/code\u003e, 甚至可以更清楚地单独写成一行:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# definition \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# matching \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#39;abc\u0026#39; has at least two characters\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e正则表达式副词像 \u003ccode\u003e:i\u003c/code\u003e 会进入定义行而匹配副词像 \u003ccode\u003e:overlap\u003c/code\u003e 会附加到匹配调用上:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ebaA\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$regex\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eoverlap\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$m\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$m\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# OUTPUT: «ba␤aA␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"regex-adverbs\"\u003eRegex Adverbs\u003c/h3\u003e\n\u003cp\u003e在正则表达式声明时出现的副词是实际正则表达式的一部分, 并影响 Raku 编译器如何将正则表达式转换为二进制代码。\u003c/p\u003e\n\u003cp\u003e例如: \u003ccode\u003e:ignorecase (:i)\u003c/code\u003e 副词告诉编译器忽略大写, 小写和标题大小写字母之间的区别。\u003c/p\u003e\n\u003cp\u003e所以 \u003ccode\u003e'a'~~ /A/\u003c/code\u003e 是假的, 但 `\u0026lsquo;a\u0026rsquo; ~~ /:i A /是一个成功的匹配。\u003c/p\u003e\n\u003cp\u003e正则表达式副词可以在正则表达式声明之前或之内, 并且仅在词法上影响其后的正则表达式部分。 请注意, 在正则表达式之前出现的正则表达式副词必须出现在将正则表达式引入解析器之后, 如 \u0026lsquo;rx\u0026rsquo; 或 \u0026rsquo;m\u0026rsquo; 或裸的 \u0026lsquo;/\u0026rsquo;。 但是这样是无效的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ei\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# adverb is before the regex is recognized =\u0026gt; exception \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面这些是等价的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# before \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e a\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# inside \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e而下面这两种是不等价的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea \u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e b\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# matches only the b case insensitively \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$rx4\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e a b\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# matches completely case insensitively \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e方括号和圆括号约束副词的作用域:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e a b\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e c \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# matches \u0026#39;ABc\u0026#39; but not \u0026#39;ABC\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e[:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e a b\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e c \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# matches \u0026#39;ABc\u0026#39; but not \u0026#39;ABC\u0026#39; \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"ratchet\"\u003eRatchet\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e:ratchet\u003c/code\u003e 或 \u003ccode\u003e:r\u003c/code\u003e 副词会导致正则表达式引擎不回溯。\u003c/p\u003e\n\u003cp\u003e假如没有这个副词, 那么正则表达式的一部分将尝试不同的路径来匹配字符串, 以使正则表达式的其他部分可以匹配。 例如, 在 \u003ccode\u003e'abc' ~~ / \\w+ ./\u003c/code\u003e 中, \u003ccode\u003e\\w+\u003c/code\u003e 首先吃光整个字符串 abc, 然后 \u003ccode\u003e.\u003c/code\u003e 就失败了。 因此 \u003ccode\u003e\\w+\u003c/code\u003e 放弃一个字符, 只匹配 ab 而 \u003ccode\u003e.\u003c/code\u003e 可以成功匹配字符串 c。 放弃字符的过程(或在轮试的情况下, 尝试不同的分支)被称为回溯。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003er\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRatcheting 是一种优化, 因为回溯是昂贵的。 但更重要的是, 它与人类解析文本的方式密切相关。 如果你有一个正则表达式 \u003ccode\u003emy regex identifier { \\w+ } \u003c/code\u003e 和 \u003ccode\u003emy regex keyword { if | else | endif }\u003c/code\u003e, 你直观地期望 \u003ccode\u003eidentifier\u003c/code\u003e 吞噬整个单词，而不是放弃结束下一个规则，如果下一个 rule 失败时。\u003c/p\u003e\n\u003cp\u003e例如，你不想让单词 \u003ccode\u003emotif\u003c/code\u003e 被解析为标识符 mot 后面跟着关键字 if。 相反, 你想将 \u003ccode\u003emotif\u003c/code\u003e 解析为标识符; 并且如果解析器期望之后有一个 \u003ccode\u003eif\u003c/code\u003e, 那么最好让它失败, 而不是以你不期望的方式解析输入。\u003c/p\u003e\n\u003cp\u003e由于 ratcheting 行为在解析器中通常是需要的, 所以有一个快捷方式来声明一个 ratcheting 正则表达式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ething\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e....\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# short for \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003ething\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003er\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"sigspace\"\u003eSigspace\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e:sigspace\u003c/code\u003e 或 \u003ccode\u003e:s\u003c/code\u003e 副词使空白在正则表达式中有意义。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI used Photoshop®\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e   \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e   photo shop \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI used a photo shop\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e photo shop \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «True␤»\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eI used Photoshop®\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e   \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e photo shop \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤»\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003em:s/ photo shop /\u003c/code\u003e 的作用和 \u003ccode\u003em/ photo \u0026lt;.ws\u0026gt; shop \u0026lt;.ws\u0026gt; /\u003c/code\u003e 一样。默认地, \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 确保单词是分开的, 所以 \u003ccode\u003ea b\u003c/code\u003e 和 \u003ccode\u003e^$\u003c/code\u003e 会匹配中间的 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e, 但是 \u003ccode\u003eab\u003c/code\u003e 不会。\u003c/p\u003e\n\u003cp\u003e正则表达式中哪里的空白会被转换为 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 取决于空白前面是什么。在上面的例子中, 正则表达式开头的空白不会被转换为 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e, 但是字符后面的空白会被转换为 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e。通常, 规则就是, 如果某一项可能匹配某个东西, 那么它后面的空白会被转换为 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e此外, 如果空白跟在某个 term 之后, 量词(+,* 或 ?)之前, 那么 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 会在每次 term 匹配后匹配。 所以, \u003ccode\u003efoo +\u003c/code\u003e 变为 \u003ccode\u003e[foo \u0026lt;.ws\u0026gt;]+\u003c/code\u003e。另一方面, 量词后面的空白和普通的空白作用一样; 例如: \u0026ldquo;foo+\u0026rdquo; 变为 \u003ccode\u003efoo+\u0026lt;.ws\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id=\"matching-adverbs\"\u003eMatching adverbs\u003c/h3\u003e\n\u003cp\u003e和正则表达式副词对比, 其与正则表达式声明有关, 匹配副词只有在将字符串与正则表达式匹配时才有意义。\u003c/p\u003e\n\u003cp\u003e它们永远不会出现在正则表达式内部, 只能在外部 - 作为 \u003ccode\u003em/.../\u003c/code\u003e 匹配的一部分或作为匹配方法的参数。\u003c/p\u003e\n\u003ch3 id=\"continue\"\u003eContinue\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e:continue\u003c/code\u003e 或短的 \u003ccode\u003e:c\u003c/code\u003e 副词接收一个参数。 这个参数是正则表达式开始搜索的位置。 默认情况下, 它从字符串的开头搜索, 但是 \u003ccode\u003e:c\u003c/code\u003e 覆盖该位置。 如果没有为 \u003ccode\u003e:c\u003c/code\u003e 指定位置, 它将默认为 0, 除非设置了 \u003ccode\u003e$/\u003c/code\u003e, 在这种情况下, 它默认为 \u003ccode\u003e$/.to\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea1xa2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# OUTPUT: «a1␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"sr\"\u003ea\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: «a2␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意: 不同于 \u003ccode\u003e:pos\u003c/code\u003e, 使用 \u003ccode\u003e:continue()\u003c/code\u003e 的匹配将尝试在字符串中进一步匹配, 而不是马上失败:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabcdefg\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"sr\"\u003ee\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «｢efg｣␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabcdefg\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"sr\"\u003ee\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"exhaustive\"\u003eExhaustive\u003c/h3\u003e\n\u003cp\u003e要找到正则表达式的所有可能的匹配 - 包括重叠的 - 和几个从同一位置开始的匹配, 请使用 \u003ccode\u003e:exhaustive\u003c/code\u003e(short: \u003ccode\u003eex\u003c/code\u003e) 副词。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabracadabra\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eexhaustive\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efrom\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面的代码产生这样的输出:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eabracadabra\nabracada\nabraca\nabra\n   acadabra\n   acada\n   aca\n     adabra\n     ada\n       abra\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"global\"\u003eGlobal\u003c/h3\u003e\n\u003cp\u003e不是搜索一个匹配并返回一个 \u003ca href=\"https://docs.raku.org/type/Match\"\u003eMatch 对象\u003c/a\u003e, Global 搜索每个不重叠的匹配, 并将其返回到\u003ca href=\"https://docs.raku.org/type/List\"\u003e列表\u003c/a\u003e中。 为此, 请使用 \u003ccode\u003e:global\u003c/code\u003e 副词:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eseveral words here\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@matches\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eglobal\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@matches\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# OUTPUT: «3␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e@matches\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# OUTPUT: «here␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e:g\u003c/code\u003e 是 \u003ccode\u003e:global\u003c/code\u003e 的简写。\u003c/p\u003e\n\u003ch3 id=\"pos\"\u003ePos\u003c/h3\u003e\n\u003cp\u003e在字符串的特定位置锚定匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabcdef\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003epos\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efrom\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: «2␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e            \u003cspan class=\"c1\"\u003e# OUTPUT: «cdef␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e:p\u003c/code\u003e 是 \u003ccode\u003e:pos\u003c/code\u003e 的简写。\u003c/p\u003e\n\u003cp\u003e注意: 不同于 \u003ccode\u003e:continue\u003c/code\u003e, 使用 \u003ccode\u003e:pos()\u003c/code\u003e 锚定的匹配在不匹配时将立即失败, 而不是尝试进一步匹配字符串:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabcdefg\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"sr\"\u003ee\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «｢efg｣␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabcdefg\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003ep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)/\u003c/span\u003e\u003cspan class=\"sr\"\u003ee\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: «False␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"overlap\"\u003eOverlap\u003c/h3\u003e\n\u003cp\u003e要获得多个匹配, 包括重叠的匹配, 但每个起始位置只有一个(最长的)匹配, 请指定 \u003ccode\u003e:overlap\u003c/code\u003e (short \u003ccode\u003e:ov\u003c/code\u003e) 副词:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eabracadabra\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eoverlap\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e a \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efrom\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$match\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e产生:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eabracadabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \u003cspan class=\"n\"\u003eacadabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"n\"\u003eadabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"n\"\u003eabra\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"look-around-assertions\"\u003eLook-around assertions\u003c/h2\u003e\n\u003ch3 id=\"lookahead-assertions\"\u003eLookahead assertions\u003c/h3\u003e\n\u003cp\u003e要检查一个模式是否出现在另一个模式之前，请通过 \u003ccode\u003ebefore\u003c/code\u003e 断言使用 lookahead 断言。形式如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e?before pattern\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因此，要搜索字符串 foo 后面紧跟着字符串 bar, 请使用以下 regexp:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e foo \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e bar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003efoobar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e foo \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e bar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: «foo␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是，如果要搜索一个不紧随某个模式的模式, 那么您需要使用反向向前查看断言, 其形式如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e!before pattern\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因此，所有出现的不在 bar 之前的 foo 都会匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e foo \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"ow\"\u003ebefore\u003c/span\u003e\u003cspan class=\"sr\"\u003e bar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"lookbehind-assertions\"\u003eLookbehind assertions\u003c/h3\u003e\n\u003cp\u003e要检查一个模式是否出现在另一个模式之后，请通过 \u003ccode\u003eafter\u003c/code\u003e 断言使用 \u003ccode\u003elookbehind\u003c/code\u003e 断言。 其形式如下：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e?after pattern\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因此, 要搜索字符串 foo 立即跟着的 bar 字符串, 使用如下正则表达式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"ow\"\u003eafter\u003c/span\u003e\u003cspan class=\"sr\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e bar \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# read as after foo is bar\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003efoobar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"ow\"\u003eafter\u003c/span\u003e\u003cspan class=\"sr\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e bar \u003c/span\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e \u003cspan class=\"c1\"\u003e#  OUTPUT: «bar␤» \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是, 如果要搜索的模式不是紧随其后的模式, 那么您需要使用反向的 lookbehind 断言, 其形式如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e!after pattern\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因此, bar 前面不是 foo 的所有 bar 将被匹配:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"ow\"\u003eafter\u003c/span\u003e\u003cspan class=\"sr\"\u003e foo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e bar \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"best-practices-and-gotchas\"\u003eBest practices and gotchas\u003c/h2\u003e\n\u003cp\u003e为了帮助强大的正则表达式和 Grammar, 以下是代码布局和可读性的最佳实践，实际匹配的内容，并避免常见的陷阱。\u003c/p\u003e\n\u003ch3 id=\"code-layout\"\u003eCode layout\u003c/h3\u003e\n\u003cp\u003e没有 \u003ccode\u003e:sigspace\u003c/code\u003e 副词, 空白在 Raku 正则表达式中就是没有意义的。 在能增加可读性的地方插入空格。 此外, 必要时插入注释。\u003c/p\u003e\n\u003cp\u003e比较下面这个比较紧凑的正则表达式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e+-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e+-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e和可读性更好的版本:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e+-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e# optional sign \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e            \u003c/span\u003e\u003cspan class=\"c1\"\u003e# leading digits, optional \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e              \u003c/span\u003e\u003cspan class=\"c1\"\u003e# optional exponent \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e+-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e根据经验，在原子周围和分组内部使用空格; 将量词直接置于原子之后; 并垂直对齐开口和闭合方括号和圆括号。\u003c/p\u003e\n\u003cp\u003e当你在方括号或圆括号中使用一组备选分支时, 请对齐垂直条:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003eexample\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003epreamble\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003echoice_1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003echoice_2\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003echoice_3\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003epostamble\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"keep-it-small\"\u003eKeep it small\u003c/h3\u003e\n\u003cp\u003e正则表达式通常比常规代码更紧凑。 因为他们短小精悍, 保持正则表达式很短。\u003c/p\u003e\n\u003cp\u003e当你可以命名正则表达式的一部分时, 通常最好将其放入单独的命名正则表达式中。\u003c/p\u003e\n\u003cp\u003e例如, 您可以从前面获取 float 正则表达式：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e+-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"c1\"\u003e# optional sign \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e            \u003c/span\u003e\u003cspan class=\"c1\"\u003e# leading digits, optional \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e              \u003c/span\u003e\u003cspan class=\"c1\"\u003e# optional exponent \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e+-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e     \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e并把它分解成几部分:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003esign\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e+-\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003edecimal\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eexponent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003esign\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003esign\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eexponent\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这很有用, 特别是当正则表达式变得更加复杂时。 例如, 你可能希望在存在指数的情况下使小数点可选。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003efloat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003esign\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eexponent\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003edecimal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eexponent\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"what-to-match\"\u003eWhat to match\u003c/h3\u003e\n\u003cp\u003e通常，输入数据格式没有明确的规范，或规范对编程人员来说是未知的。 那么，在你期望的时候是自由的，只要没有可能的含糊不清就行了。\u003c/p\u003e\n\u003cp\u003e例如，在 ini 文件中:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003esection\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e什么可以在 section 标题内? 只允许一个单词可能太限制了。 有人会写 \u003ccode\u003e[two words]\u003c/code\u003e, 或用破折号等等。 而不是询问内部允许的内容, 可能这样问比较好: 什么是不允许的？\u003c/p\u003e\n\u003cp\u003e显然, 不允许使用括号，因为 \u003ccode\u003e[a] b]\u003c/code\u003e 是不明确的。 同样的论据, 应禁止开口方括号。 这让我们有了\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eheader\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e] \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你只处理一行就行了。 但是，如果你正在处理整个文件，突然间正则表达式解析到一句\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[with a\nnewline in between]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这可能不是一个好方法。折中的方式是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eheader\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e] \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e然后在扫尾处理中, 从 section 标题中移除前导和尾部空格和制表符。\u003c/p\u003e\n\u003ch3 id=\"matching-whitespace\"\u003eMatching Whitespace\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e:sigspace\u003c/code\u003e 副词(或使用 \u003ccode\u003erule\u003c/code\u003e 声明符, 而不是 \u003ccode\u003etoken\u003c/code\u003e 或 \u003ccode\u003eregex\u003c/code\u003e) 非常适用于隐式解析许多地方可能出现的空格。\u003c/p\u003e\n\u003cp\u003e回到解析 ini 文件的例子, 我们有\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这可能不像我们想要的那样自由, 因为用户可能会在等号周围放置空格。 那么我们可以试试这个:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003eregex\u003c/span\u003e \u003cspan class=\"nf\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但这看起来很笨重, 所以我们尝试其他方式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e可是等等! \u003ccode\u003evalue\u003c/code\u003e 之后，隐含的空白匹配用光了所有的空白, 包括换行符, 所以 \u003ccode\u003e\\n+\u003c/code\u003e 没有什么可以匹配的(rule 也禁止回溯, 所以运气不佳)。\u003c/p\u003e\n\u003cp\u003e因此, 重要的是将隐式空白的定义重新定义为输入格式无意义的空白。\u003c/p\u003e\n\u003cp\u003e这通过重新定义 token \u003ccode\u003ews\u003c/code\u003e; 但是，它只适用于 \u003ca href=\"https://docs.raku.org/language/grammars\"\u003eGrammars\u003c/a\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eIniFormat\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ews\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"ow\"\u003eww\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003eheader\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\w\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003erule\u003c/span\u003e \u003cspan class=\"nf\"\u003ekvpair\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nv\"\u003evalue\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nf\"\u003eidentifier\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\n\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003esection\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eheader\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ekvpair\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003esection\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$contents\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/EOI/;\u003c/span\u003e\u003cspan class=\"s\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    [passwords]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        jack = password1\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        joy = muchmoresecure123\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    [quotas]\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        jack = 123\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        joy = 42\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003eEOI\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"n\"\u003eIniFormat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eparse\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$contents\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e除了把所有的正则表达式都放在一个 Grammar 中并把它们变成了 tokens(因为他们不需要回溯) 之外, 有趣的新花样是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003ews\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"ow\"\u003eww\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\h\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这被称为隐式空白解析。 当它不在两个字符之间 (\u003ccode\u003e\u0026lt;ww\u0026gt;\u003c/code\u003e, 反向的\u0026quot;within word\u0026quot; 断言)时匹配, 以及零个或多个水平空格字符。 对水平空白的限制很重要, 因为换行符(它们是垂直空白)定界记录, 不应该被隐式地匹配。\u003c/p\u003e\n\u003cp\u003e还有一些与空白有关的麻烦潜伏着。 正则表达式 \u003ccode\u003e\\n+\u003c/code\u003e 将不会匹配 \u003ccode\u003e\\n \\n\u003c/code\u003e 这样的字符串, 因为两个换行符之间有空白。 要允许这样的输入字符串, 用 \u003ccode\u003e\\n\\s*\u003c/code\u003e 代替 \u003ccode\u003e\\n+\u003c/code\u003e。\u003c/p\u003e\n","text":"正则表达式, 简称 regexes, 是描述文本模式的字符序列。模式匹配就是将这些模式和实际的文本进行匹配的过程。\n词法约定 Raku 正则表达式有特殊的写法:\nm/abc/; # a regex that is immediately matched against $_ rx/abc/; # a Regex object /abc/; # a Regex object 对于前两个例子, 分隔符还能用除了斜线之外的其它字符:\nm{abc}; rx{abc}; 注意, 冒号和圆括号都不能用作分隔符; 禁止使用冒号作为正则表达式分割符是因为它和副词冲突, 例如 rx:i/abc/(忽略大小写的正则表达式), 而圆括号表明函数调用。\n空白符在正则表达式中通常被忽略(带有 :s 或 :sigspace 副词的正则表达式除外)。\n通常, 对于 Raku 来说, 正则表达式中的注释以 # 号开头, 直至行尾。\n字面值 正则表达式最简单的情况是匹配字符串字面值。\nif \u0026#39;properly\u0026#39; ~~ m/ perl / { say \u0026#34;\u0026#39;properly\u0026#39; contains \u0026#39;perl\u0026#39;\u0026#34;; } 字母数字和下划线 _ 按字面值匹配。所有其它字符要么使用反斜线转义(例如, \\: 匹配一个冒号), 要么用引号引起来:\n/ \u0026#39;two words\u0026#39; /; # matches \u0026#39;two words\u0026#39; including the blank / \u0026#34;a:b\u0026#34; /; # matches \u0026#39;a:b\u0026#39; including the colon / \u0026#39;#\u0026#39; /; # matches a hash character 字符串是从左往右搜索的, 所以如果只有部分字符串匹配正则表达式也足够:\nif \u0026#39;abcdef\u0026#39; ~~ / de / { say ~$/; # OUTPUT: «de␤» say $/.prematch; # OUTPUT: «abc␤» say $/.postmatch; # OUTPUT: «f␤» say $/.from; # OUTPUT: «3␤» say $/.to; # OUTPUT: «5␤» }; 匹配结果存储在 $/ 变量中并且也从匹配中返回。如果匹配成功, 那么结果就是 Match 类型, 否则它就是 Nil\n通配符和字符类 点号匹配任意字符: . 在正则表达式中一个未转义的点 . 匹配任意单个字符。\n所以, 这些都匹配:\n\u0026#39;perl\u0026#39; ~~ /per./; # matches the whole string \u0026#39;perl\u0026#39; ~~ / per . /; # the same; whitespace is ignored \u0026#39;perl\u0026#39; ~~ / pe.l /; # the . matches the r \u0026#39;speller\u0026#39; ~~ / pe.l/; # the . matches the first l 下面这个不匹配:\n\u0026#39;perl\u0026#39; ~~ /. per /; 因为在目标字符串中 per 前面没有要匹配的字符。\n反斜杠, 预定义字符类 Unicode properties Raku 有 \\w 形式的预定义字符类。大写形式是它的反面, \\W。\n\\d 和 \\D \\d 匹配单个数字(Unicode 属性 N) 而 \\D 匹配单个不是数字的字符。\n\u0026#39;ab42\u0026#39; ~~ /\\d/ and say ~$/; # OUTPUT: «4␤» \u0026#39;ab42\u0026#39; ~~ /\\D/ and say ~$/; # OUTPUT: «a␤» 注意, 不仅仅只有阿拉伯数字(通常用于拉丁字母表中)匹配 \\d, 还有来自其它下标的数字也匹配 \\d。\nU+0035 5 DIGIT FIVE U+07C2 ߂ NKO DIGIT TWO U+0E53 ๓ THAI DIGIT THREE U+1B56 ᭖ BALINESE DIGIT SIX \\h 和 \\H \\h 匹配单个水平空白符。 \\H 匹配单个不是水平空白符的字符。\n水平空白符的例子有:\nU+0020 SPACE U+00A0 NO-BREAK SPACE U+0009 CHARACTER TABULATION U+2001 EM QUAD 像换行符那样的垂直空白被显式地排除了; 那些可以用 \\v 来匹配, 而 \\s 匹配任何类型的空白:\n\\n 和 \\N \\n 匹配单个逻辑换行符。\\n 也支持匹配 Windows 的 CR LF 代码点对儿;　尽管还不清楚魔法是发生在读取数据时还是在正则表达式匹配时。 \\N 匹配单个非逻辑换行符。\n\\s 和 \\S \\s 匹配单个空白符。 \\S 匹配单个非空白符。\nif \u0026#39;contains a word starting with \u0026#34;w\u0026#34;\u0026#39; ~~ / w \\S+ / { say ~$/; # OUTPUT: «word␤» } \\t 和 \\T \\t 匹配单个 tab/制表符, U+0009。(注意这儿不包含诸如 U+000B VERTICAL TABULATION 这样奇异的制表符)。\\T 匹配单个非制表符。\n\\v 和 \\V \\v 匹配单个垂直空白符。 \\V 匹配单个非垂直空白符。\n垂直空白符的例子:\nU+000A LINE FEED U+000B VERTICAL TABULATION U+000C FORM FEED U+000D CARRIAGE RETURN U+0085 NEXT LINE U+2028 LINE SEPARATOR U+2029 PARAGRAPH SEPARATOR 使用 \\s 去匹配任意空白, 而不仅仅匹配垂直空白。\n\\w 和 \\W \\w 匹配单个单词字符; 例如: 一个字母(Unicode 类别 L), 一个数字或一个下划线。\\W 匹配单个非单词字符。\n单词字符的例子:\n0041 A LATIN CAPITAL LETTER A 0031 1 DIGIT ONE 03B4 δ GREEK SMALL LETTER DELTA 03F3 ϳ GREEK LETTER YOT 0409 Љ CYRILLIC CAPITAL LETTER LJE 预定义的 subrules:\n\u0026lt;alnum\u0026gt; \\w \u0026#39;alpha\u0026#39; plus \u0026#39;digit\u0026#39; \u0026lt;alpha\u0026gt; \u0026lt;:L\u0026gt; Alphabetic characters \u0026lt;blank\u0026gt; \\h Horizontal whitespace \u0026lt;cntrl\u0026gt; Control characters \u0026lt;digit\u0026gt; \\d Decimal digits \u0026lt;graph\u0026gt; \u0026#39;alnum\u0026#39; plus \u0026#39;punct\u0026#39; \u0026lt;lower\u0026gt; \u0026lt;:Ll\u0026gt; Lowercase characters \u0026lt;print\u0026gt; \u0026#39;graph\u0026#39; plus \u0026#39;space\u0026#39;, but no \u0026#39;cntrl\u0026#39; \u0026lt;punct\u0026gt; Punctuation and Symbols (only Punct beyond ASCII) \u0026lt;space\u0026gt; \\s Whitespace \u0026lt;upper\u0026gt; \u0026lt;:Lu\u0026gt; Uppercase characters \u0026lt;|wb\u0026gt; Word Boundary (zero-width assertion) \u0026lt;ww\u0026gt; Within Word (zero-width assertion) \u0026lt;xdigit\u0026gt; Hexadecimal digit [0-9A-Fa-f] Unicode 属性 目前提到的字符类大多是为了方便; 另一种方法是使用 Unicode 字符属性。这些以 \u0026lt;:property\u0026gt; 的形式出现, 其中 property 可以是短的或长的 Unicode 一般类别名。它们使用 pair 语法。\n要匹配一个 Unicode 属性:\n\u0026#34;a\u0026#34;.uniprop(\u0026#39;Script\u0026#39;); # OUTPUT: «Latin␤» \u0026#34;a\u0026#34; ~~ / \u0026lt;:Script\u0026lt;Latin\u0026gt;\u0026gt; /; \u0026#34;a\u0026#34;.uniprop(\u0026#39;Block\u0026#39;); # OUTPUT: «Basic Latin␤» \u0026#34;a\u0026#34; ~~ / \u0026lt;:Block(\u0026#39;Basic Latin\u0026#39;)\u0026gt; /; 下面的 Unicode 通用类别表是从 Perl 5 的 perlunicode 文档偷来的:\nShort\tLong L\tLetter LC\tCased_Letter Lu\tUppercase_Letter Ll\tLowercase_Letter Lt\tTitlecase_Letter Lm\tModifier_Letter Lo\tOther_Letter M\tMark Mn\tNonspacing_Mark Mc\tSpacing_Mark Me\tEnclosing_Mark N\tNumber Nd\tDecimal_Number (also Digit) Nl\tLetter_Number No\tOther_Number P\tPunctuation (also punct) Pc\tConnector_Punctuation Pd\tDash_Punctuation Ps\tOpen_Punctuation Pe\tClose_Punctuation Pi\tInitial_Punctuation (may behave like Ps or Pe depending on usage) Pf\tFinal_Punctuation (may behave like Ps or Pe depending on usage) Po\tOther_Punctuation S\tSymbol Sm\tMath_Symbol Sc\tCurrency_Symbol Sk\tModifier_Symbol So\tOther_Symbol Z\tSeparator Zs\tSpace_Separator Zl\tLine_Separator Zp\tParagraph_Separator C\tOther Cc\tControl (also cntrl) Cf\tFormat Cs\tSurrogate Co\tPrivate_Use Cn\tUnassigned 举个例子: \u0026lt;:Lu\u0026gt; 匹配单个大写字母。\n它的反面是这个: \u0026lt;:!property\u0026gt;。所以, \u0026lt;:!Lu\u0026gt; 匹配单个非大写字母的字符。\n类别可以使用中缀操作符组合在一起:\nOperator\tMeaning +\tset union |\tset union \u0026amp;\tset intersection -\tset difference (first minus second) ^\tsymmetric set intersection / XOR 要匹配要么一个小写字母,要么一个数字, 可以写 \u0026lt;:Ll+:N\u0026gt; 或 \u0026lt;:Ll+:Number\u0026gt; 或 \u0026lt;+ :Lowercase_Letter + :Number\u0026gt;。\n使用圆括号将类别和一组类别分组也是可以的; 例如:\n\u0026#39;raku\u0026#39; ~~ m{\\w+(\u0026lt;:Ll+:N\u0026gt;)} # OUTPUT: «0 =\u0026gt; ｢6｣␤» 可枚举的字符类和区间 有时候, 预先存在的通配符和字符类不够用。幸运的是, 定义你自己的字符类相当简单。在 \u0026lt;[]\u0026gt; 中, 你可以放入任何数量的单个字符和字符区间(两个端点之间有两个点号), 带有或不带有空白。\n\u0026#34;abacabadabacaba\u0026#34; ~~ / \u0026lt;[ a .. c 1 2 3 ]\u0026gt; /; # Unicode hex codepoint range \u0026#34;ÀÁÂÃÄÅÆ\u0026#34; ~~ / \u0026lt;[ \\x[00C0] .. \\x[00C6] ]\u0026gt; /; # Unicode named codepoint range \u0026#34;ÀÁÂÃÄÅÆ\u0026#34; ~~ / \u0026lt;[ \\c[LATIN CAPITAL LETTER A WITH GRAVE] .. \\c[LATIN CAPITAL LETTER AE] ]\u0026gt; /; 在 \u0026lt;\u0026gt; 中你可以使用 + 或 - 来添加或移除多个区间定义, 甚至混合某些上面的 unicode 属性。你还可以在 [] 之间写上反斜线形式的字符类。\n/ \u0026lt;[\\d] - [13579]\u0026gt; /; # starts with \\d and removes odd ASCII digits, but not quite the same as / \u0026lt;[02468]\u0026gt; /; # because the first one also contains \u0026#34;weird\u0026#34; unicodey digits 解析引号分割的字符串的一个常见模式涉及到对字符类取反:\nsay \u0026#39;\u0026#34;in quotes\u0026#34;\u0026#39; ~~ / \u0026#39;\u0026#34;\u0026#39; \u0026lt;-[ \u0026#34; ]\u0026gt; * \u0026#39;\u0026#34;\u0026#39;/; 这先匹配一个引号, 然后匹配任何不是引号的字符, 再然后还是一个引号。 上面例子中的 * 和 + 会在量词一节中解释。\n就像你可以使用 - 用于集合差集和取反单个值, 你也可以在前面显式地放上一个 +:\n/ \u0026lt;+[123]\u0026gt; / # same as \u0026lt;[123]\u0026gt; 量词 量词使前面的原子匹配可变次数。例如, a+ 匹配一个或多个字符 a。\n量词比连结绑定的更紧, 所以 ab+ 匹配一个 a, 然后跟着一个或多个 b。对于引号来说, 有点不同, 所以 'ab'+ 匹配字符串 ab, abab, ababab 等等。\n一次 或多次 : + + 量词使它前面的原子匹配一次或多次, 没有次数上限。\n例如, 要匹配 form=value 形式的字符串, 你可以这样写正则表达式:\n/ \\w+ \u0026#39;=\u0026#39; \\w+ / 零次 或 多次: * * 量词使它前面的原子匹配一次或多次, 没有次数上限。\n例如, 要允许 a 和 b 之间出现可选的空白, 你可以这样写:\n/ a \\s* b / 零次 或 一次匹配: ? ? 量词使它前面的原子匹配零次或一次。\n常规量词: ** min..max 要限定原子匹配任意次数,　你可以写出像 a ** 2..5 那样的表达式来匹配字符 a 至少 2 次, 至多 5 次。\nsay so \u0026#39;a\u0026#39; ~~ /a ** 2..5/; # OUTPUT: «False␤» say so \u0026#39;aaa\u0026#39; ~~ /a ** 2..5/; # OUTPUT: «True␤» 如果最小匹配次数和最大匹配次数相同, 那么使用单个整数: a ** 5 精确地匹配 5 次。\nsay so \u0026#39;aaaaa\u0026#39; ~~ /a ** 5/; # OUTPUT: «True␤» 也可以使用 ^ 脱字符来排除区间的端点:\nsay so \u0026#39;a\u0026#39; ~~ /a ** 1^..^6/; # OUTPUT: «False␤» -- there are 2 to 5 \u0026#39;a\u0026#39;s in a row say so \u0026#39;aaaa\u0026#39; ~~ /a ** 1^..^6/; # OUTPUT: «True␤» 下面这个包含从 0 开始的数值区间:\nsay so \u0026#39;aaa\u0026#39; ~~ /a ** ^6/; # OUTPUT: «True␤» -- there are 0 to 5 \u0026#39;a\u0026#39;s in a row 或使用一个 Whatever Star * 操作符来表示无限区间:\nsay so \u0026#39;aaaa\u0026#39; ~~ /a ** 1^..*/; # OUTPUT: «True␤» -- there are 2 or more \u0026#39;a\u0026#39;s in a row Modified quantifier: % 为了更容易地匹配逗号分割那样的值, 你可以在以上任何一个量词后面加上一个 % 修饰符以指定某个修饰符必须出现在每一次匹配之间。例如, a+ % ',' 会匹配 a, 或 a,a 或 a,a,a 等等, 但是不会匹配 a, 或 a,a, 等。要连这些也要匹配, 那么使用 %% 代替 %。\n贪婪量词 Vs. 非贪婪量词: ? 默认地, 量词要求进行贪婪匹配:\n\u0026#39;abababa\u0026#39; ~~ /a .* a/ \u0026amp;\u0026amp; say ~$/; # OUTPUT: «abababa␤» 你可以给量词附加一个 ? 修饰符来开启非贪婪匹配:\n\u0026#39;abababa\u0026#39; ~~ /a .*? a/ \u0026amp;\u0026amp; say ~$/; # OUTPUT: «aba␤» 你还可以使用 ! 修饰符显式地要求贪婪匹配。\n阻止回溯: : 你可以在正则表达式中通过为量词附加一个 : 修饰符来阻止回溯:\nsay so \u0026#39;abababa\u0026#39; ~~ /a .* aba/; # OUTPUT: «True␤» say so \u0026#39;abababa\u0026#39; ~~ /a .*: aba/; # OUTPUT: «False␤» Alternation: || || 在正则表达式中表示备选分支, 在匹配由 || 分割的几个可能的备选分支之一时, 第一个匹配的备选分支胜出。例如, ini 文件有如下形式:\n[section] key = value 因此, 如果你解析单行 ini 文件, 那么它要么是一个 section, 要么是一个键值对儿。所以正则表达式可以是:\n/ \u0026#39;[\u0026#39; \\w+ \u0026#39;]\u0026#39; || \\S+ \\s* \u0026#39;=\u0026#39; \\s* \\S* / 即, 它要么是一个由方括号包围起来的单词, 要么是一个键值对。\nLongest Alternation: | 如果正则表达式由 | 分割, 则最长的那个匹配胜出。独立于正则表达式中的词法顺序。\nsay (\u0026#39;abc\u0026#39; ~~ / a | .b /).Str; # OUTPUT: «ab␤» Anchors 正则表达式引擎尝试在字符串中从左至右地搜索来查找匹配。\nsay so \u0026#39;properly\u0026#39; ~~ / perl/; # OUTPUT: «True␤» # ^^^^ 有时候这不是你想要的。相反, 你可能只想匹配整个字符串, 或一整行, 或精确地一个或几个完整的单词。锚或断言能帮助我们。\n为了整个正则表达式能够匹配, 断言需要被成功地匹配但是断言在匹配时不消耗字符。\n^ , Start of String and $ , End of String ^ 断言只匹配字符串的开头:\nsay so \u0026#39;properly\u0026#39; ~~ / perl/; # OUTPUT: «True␤» say so \u0026#39;properly\u0026#39; ~~ /^ perl/; # OUTPUT: «False␤» say so \u0026#39;perly\u0026#39; ~~ /^ perl/; # OUTPUT: «True␤» say so \u0026#39;perl\u0026#39; ~~ /^ perl/; # OUTPUT: «True␤» $ 断言只匹配字符串的结尾:\nsay so \u0026#39;use perl\u0026#39; ~~ / perl /; # OUTPUT: «True␤» say so \u0026#39;use perl\u0026#39; ~~ / perl $/; # OUTPUT: «True␤» say so \u0026#39;perly\u0026#39; ~~ / perl $/; # OUTPUT: «False␤» 你可以把这两个断言组合起来:\nsay so \u0026#39;use perl\u0026#39; ~~ /^ perl $/; # OUTPUT: «False␤» say so \u0026#39;perl\u0026#39; ~~ /^ perl $/; # OUTPUT: «True␤» 记住, ^ 匹配字符串的开头, 而非行的开头。同样地, $ 匹配字符串的结尾, 而非行的结尾。\n下面的是多行字符串:\nmy $str = q:to/EOS/; Keep it secret and keep it safe EOS say so $str ~~ /safe $/; # OUTPUT: «True␤» -- \u0026#39;safe\u0026#39; is at the end of the string say so $str ~~ /secret $/; # OUTPUT: «False␤» -- \u0026#39;secret\u0026#39; is at the end of a line -- not the string say so $str ~~ /^Keep /; # OUTPUT: «True␤» -- \u0026#39;Keep\u0026#39; is at the start of the string say so $str ~~ /^and /; # OUTPUT: «False␤» -- \u0026#39;and\u0026#39; is at the start of a line -- not the string ^^ , Start of Line and $$ , End of Line ^^ 断言匹配逻辑行的开头。即, 要么在字符串的开头, 要么在换行符之后。然而, 它不匹配字符串的结尾, 即使它以一个换行符结尾。\n$$ 只匹配逻辑换行符的结尾, 即, 在换行符之前, 或在字符串的结尾, 当最后一个字符不是换行符时。\n(为了理解下面的示例, 最好先了解 q:to/EOS/...EOS 的 \u0026ldquo;heredoc\u0026rdquo; 语法移除了前置的缩进, 使之与 EOS 标记同级, 以至于第一行, 第二行和最后一行没有前置空格而第三行和第四行各有两个前置空格。)\nmy $str = q:to/EOS/; There was a young man of Japan Whose limericks never would scan. When asked why this was, He replied \u0026#34;It\u0026#39;s because I always try to fit as many syllables into the last line as ever I possibly can.\u0026#34; EOS say so $str ~~ /^^ There/; # OUTPUT: «True␤» -- start of string say so $str ~~ /^^ limericks/; # OUTPUT: «False␤» -- not at the start of a line say so $str ~~ /^^ I/; # OUTPUT: «True␤» -- start of the last line say so $str ~~ /^^ When/; # OUTPUT: «False␤» -- there are blanks between # start of line and the \u0026#34;When\u0026#34; say so $str ~~ / Japan $$/; # OUTPUT: «True␤» -- end of first line say so $str ~~ / scan $$/; # OUTPUT: «False␤» -- there\u0026#39;s a . between \u0026#34;scan\u0026#34; # and the end of line say so $str ~~ / \u0026#39;.\u0026#34;\u0026#39; $$/; # OUTPUT: «True␤» -- at the last line \u0026lt;|w\u0026gt; and \u0026lt;!|w\u0026gt;, word boundary 要匹配单词边界, 使用 \u0026lt;|w\u0026gt;。这与其它语言的 \\b 类似，要匹配一个非单词边界, 使用 \u0026lt;!|w\u0026gt;, 类似其它语言的 \\B。这些都是零宽断言。\n\u0026laquo; and \u0026raquo; , left and right word boundary \u0026lt;\u0026lt; 匹配左单词边界。它匹配左侧(或者字符串的开头)是非单词字符而右侧是一个单词字符的位置。\n\u0026gt;\u0026gt; 匹配右单词边界。它匹配左侧有一个单词字符而右侧(或者字符串的结尾)是一个非单词字符的位置。\nmy $str = \u0026#39;The quick brown fox\u0026#39;; say so $str ~~ /br/; # OUTPUT: «True␤» say so $str ~~ /\u0026lt;\u0026lt; br/; # OUTPUT: «True␤» say so $str ~~ /br \u0026gt;\u0026gt;/; # OUTPUT: «False␤» say so $str ~~ /own/; # OUTPUT: «True␤» say so $str ~~ /\u0026lt;\u0026lt; own/; # OUTPUT: «False␤» say so $str ~~ /own \u0026gt;\u0026gt;/; # OUTPUT: «True␤» 你可以使用变体 « 和 » :\nmy $str = \u0026#39;The quick brown fox\u0026#39;; say so $str ~~ /« own/; # OUTPUT: «False␤» say so $str ~~ /own »/; # OUTPUT: «True␤» 分组和捕获 在普通的(非正则表达式)Raku 代码中, 你可以使用圆括号把东西组织到一块, 通常用于覆盖操作符优先级:\nsay 1+4*2; # 9, parsed as 1 + (4*2) say (1+4)*2; # 输出: 10 在正则表达式中也可以使用同样的分组工具:\n/ a || b c/; # 匹配 \u0026#39;a\u0026#39; 或 \u0026#39;bc\u0026#39; / (a || b) c/; # 匹配 \u0026#39;ac\u0026#39; 或 \u0026#39;bc\u0026#39; 分组可以应用在量词上:\n/ a b+ /; # 匹配一个 \u0026#39;a\u0026#39;, 后面再跟着一个或多个 \u0026#39;b\u0026#39; / (a b)+/; # 匹配一个或多个 \u0026#39;ab\u0026#39; 序列 / (a || b)+ /; # 匹配一个 \u0026#39;a\u0026#39; 序列或者 \u0026#39;b\u0026#39; 序列, 至少一次 一个非量词化的捕获产生一个 Match对象。当捕获被量化(除了使用 ? 量词)之后, 该捕获就变成 Match对象的列表。\n捕获 圆括号不仅仅能够分组, 它们也捕获; 也就是说, 它们使分组中匹配到的字符串用作变量，并且还作为生成的 Match 对象的元素:\nmy $str = \u0026#39;number 42\u0026#39;; if $str ~~ /\u0026#39;number\u0026#39; (\\d+) / { say \u0026#34;The number is $0\u0026#34;; # The number is 42 # or say \u0026#34;The number is $/[0]\u0026#34;; # The number is 42 } 圆括号对儿是从左到右编号的, 编号从零开始。\nif \u0026#39;abc\u0026#39; ~~ /(a) b (c)/ { say \u0026#34;0:$0; 1:$1\u0026#34;; # 输出: 0:a; 1:c } $0 和 $1 等语法是简写的。这些捕获可以从用作列表的匹配对象 $/ 中规范地获取到, 所以, $0 实际上是 $/[0] 的语法糖。\n将匹配对象强制转换为列表可以方便地以编程方式访问所有元素:\nif \u0026#39;abc\u0026#39; ~~ /(a) b (c)/ { say $/.list.join: \u0026#39;,\u0026#39;; # 输出 a,c } 非捕获分组 正则表达式中的圆括号扮演了双重角色: 它们将内部的正则表达式元素分组, 并通过内部的子正则表达式捕获所匹配到的内容。\n要仅仅获得分组行为, 可以使用方括号 [...] 代替圆括号。\nif \u0026#39;abc\u0026#39; ~~ / [a||b] (c) / { say ~$0; # OUTPUT: «c␤» } 如果您不需要捕获, 则使用非捕获分组可提供三个好处: 它们更干净地传达正则表达式; 它们使您更容易对您关心的捕获组计数; 并且它匹配比较快。\n捕获编号 上面已经说明，捕获从左到右编号。 原则上是真的，这也是过于简单的。\n为了完整起见，列出了以下规则。 当您发现自己经常使用它们时，考虑命名捕获（可能是 subrules）是值得的。\n备选分支会重置捕获计数：\n/ (x) (y) || (a) (.) (.) / # $0 $1 $0 $1 $2 例子:\nif \u0026#39;abc\u0026#39; ~~ /(x)(y) || (a)(.)(.)/ { say ~$1; # b } 如果两个（或多个）备选分支具有不同的捕获编号，则捕获编号最多的决定了下一个捕获的索引：\n$_ = \u0026#39;abcd\u0026#39;; if / a [ b (.) || (x) (y) ] (.) / { # $0 $0 $1 $2 say ~$2; # d } 捕获可以嵌套，在这种情况下，它们的每一级都会编号:\nif \u0026#39;abc\u0026#39; ~~ / ( a (.) (.) ) / { say \u0026#34;Outer: $0\u0026#34;; # Outer: abc say \u0026#34;Inner: $0[0] and $0[1]\u0026#34;; # Inner: b and c } 命名捕获 除了给捕获编号，你也可以给他们起名字。 命名捕获的通用和略微冗长的方式是这样的：\nif \u0026#39;abc\u0026#39; ~~ / $\u0026lt;myname\u0026gt; = [ \\w+ ] / { say ~$\u0026lt;myname\u0026gt; # OUTPUT: «abc␤» } 对命名捕获 $ 的访问是将匹配对象作为哈希索引的简写，换句话说：$/{'myname'} 或 $/\u0026lt;myname\u0026gt;。\n命名捕获也可以使用常规捕获分组语法进行嵌套:\nif \u0026#39;abc-abc-abc\u0026#39; ~~ / $\u0026lt;string\u0026gt;=( [ $\u0026lt;part\u0026gt;=[abc] ]* % \u0026#39;-\u0026#39; ) / { say ~$\u0026lt;string\u0026gt;; # OUTPUT: «abc-abc-abc␤» say ~$\u0026lt;string\u0026gt;\u0026lt;part\u0026gt;; # OUTPUT: «[abc, abc, abc]␤» } 将匹配对象强制为散列可让您轻松地以编程方式访问所有命名捕获:\nif \u0026#39;count=23\u0026#39; ~~ / $\u0026lt;variable\u0026gt;=\\w+ \u0026#39;=\u0026#39; $\u0026lt;value\u0026gt;=\\w+ / { my %h = $/.hash; say %h.keys.sort.join: \u0026#39;, \u0026#39;; # OUTPUT: «value, variable␤» say %h.values.sort.join: \u0026#39;, \u0026#39;; # OUTPUT: «23, count␤» for %h.kv -\u0026gt; $k, $v { say \u0026#34;Found value \u0026#39;$v\u0026#39; with key \u0026#39;$k\u0026#39;\u0026#34;; # outputs two lines: # Found value \u0026#39;count\u0026#39; with key \u0026#39;variable\u0026#39; # Found value \u0026#39;23\u0026#39; with key \u0026#39;value\u0026#39; } } 在 Subrules 部分会讨论获取命名捕获的更方便的方法。\nCapture markers: \u0026lt;( )\u0026gt; \u0026lt;( token 表示匹配的整体捕捉的开始，而相应的 )\u0026gt; token 表示其末端。 \u0026lt;( 类似于其他语言的 \\K 丢弃 \\K 之前找到的任何匹配项。\n替换 正则表达式也可以用来替换另一个文本。 您可以使用它来解决拼写错误(例如, 用 \u0026ldquo;Pearl Jam\u0026rdquo; 替换 \u0026ldquo;Perl Jam\u0026rdquo;), 从 yyyy-mm-ddThh:mm:ssZ 到 mm-dd-yy h:m {AM,PM} 重新格式化 ISO8601 日期及其它。\n就像搜索替换编辑器的对话框一样，s/// 操作符有两面，左侧和右侧。 左侧是匹配表达式的位置，右侧是您要替换的表达式。\n词汇约定 替换和匹配的写法类似，但替换运算符既有正则表达式匹配的区域，也有替换的文本区域：\ns/replace/with/; # a substitution that is applied to $_ $str ~~ s/replace/with/; # a substitution applied to a scalar 替换操作法允许除了斜线之外的分隔符:\ns|replace|with|; s!replace!with!; s,replace,with,; 注意, 冒号和诸如 {} 或 () 的分隔符不能作为替换分割符。带有副词的冒号斜线诸如 s:i/Foo/Bar 和其它分割符有其它用途。\n就像 m// 操作符一样, 通常会忽略空白。在 Raku 中, 注释以 # 号开头直到当前行的结尾。\n替换字符串字面值 要替换的最简单的东西就是字符串字面量。你要替换的字符串在替换运算符的左侧, 而替换它的字符串在替换操作符的右侧; 例如:\n$_ = \u0026#39;The Replacements\u0026#39;; s/Replace/Entrap/; .say; # OUTPUT: «The Entrapments␤» 字母数字字符和下划线是文字匹配，就像其表哥 m// 操作符一样。 所有其他字符都必须使用反斜杠\\转义，或包含在引号中：\n$_ = \u0026#39;Space: 1999\u0026#39;; s/Space\\:/Party like it\u0026#39;s/; .say # OUTPUT: «Party like it\u0026#39;s 1999␤» 请注意，匹配约束仅适用于替换表达式的左侧。\n默认情况下，替换仅在第一匹配中完成：\n$_ = \u0026#39;There can be twly two\u0026#39;; s/tw/on/; # replace \u0026#39;tw\u0026#39; with \u0026#39;on\u0026#39; once .say; # OUTPUT: «there can be only two␤» 通配符和字符类 任何可以进入 m// 操作符的内容都可以进入替换操作符的左侧，包括通配符和字符类。 当您匹配的文本不是静态的时，这很方便，例如尝试匹配字符串中间的数字：\n$_ = \u0026#34;Blake\u0026#39;s 9\u0026#34;; s/\\d+/7/; # replace any sequence of digits with \u0026#39;7\u0026#39; .say; # OUTPUT: «Blake\u0026#39;s 7␤» 当然，你可以使用任何+，*和? 修饰符，它们的行为就像在 m// 操作符的上下文中一样。\n捕获组 就像在匹配运算符中一样，捕获组在左侧被允许，匹配的内容填充 $0..$n 变量和 $/ 对象：\n$_ = \u0026#39;2016-01-23 18:09:00\u0026#39;; s/ (\\d+)\\-(\\d+)\\-(\\d+) /today/; # replace YYYY-MM-DD with \u0026#39;today\u0026#39; .say; # OUTPUT: «today 18:09:00␤» \u0026#34;$1-$2-$0\u0026#34;.say; # OUTPUT: «01-23-2016␤» \u0026#34;$/[1]-$/[2]-$/[0]\u0026#34;.say; # OUTPUT: «01-23-2016␤» 任何这些变量 $0，$1，$/ 也可以在运算符的右侧使用，所以你可以操纵你刚刚匹配的内容。 这样，您可以将日期的YYYY，MM和DD部分分开，并将其重新格式化为 MM-DD-YYYY 顺序：\n$_ = \u0026#39;2016-01-23 18:09:00\u0026#39;; s/ (\\d+)\\-(\\d+)\\-(\\d+) /$1-$2-$0/; # transform YYYY-MM-DD to MM-DD-YYYY .say; # OUTPUT: «01-23-2016 18:09:00␤» 由于右侧实际上是一个常规的 Raku 内插字符串，因此可以将时间从 HH:MM 重新格式化为 `h:MM {AM,PM} 格式, 如下所示：\n$_ = \u0026#39;18:38\u0026#39;; s/(\\d+)\\:(\\d+)/{$0 % 12}\\:$1 {$0 \u0026lt; 12 ?? \u0026#39;AM\u0026#39; !! \u0026#39;PM\u0026#39;}/; .say; # OUTPUT: «6:38 PM␤» 使用上面的模数 % 运算符将样本代码保留在80个字符以下，否则就是 $0 \u0026lt;12 ?? $0 !! $0 - 12。 结合解析器表达式语法的强大功能，真正使您在这里看到的内容成为可能，您可以使用“正则表达式”来解析任何文本。\nCommon adverbs Tilde for nesting structures ~ 运算符是一个帮助器，用于匹配具有特定终结符的嵌套子规则作为目标。 它被设计为放置在开口和闭合括号之间，如下所示：\n/ \u0026#39;(\u0026#39; ~ \u0026#39;)\u0026#39; \u0026lt;expression\u0026gt; / 然而, 它主要忽略左侧的参数, 并且在接下来的两个原子（可以被量化）上操作。 它对下两个原子的操作是“旋转”它们，使得它们实际上以相反的顺序匹配。 因此，上面的表达式，起初是腮红，只不过是下面的简写:\n/ \u0026#39;(\u0026#39; \u0026lt;expression\u0026gt; \u0026#39;)\u0026#39; / 但是除此之外，当它重写原子时，它还会插入将设置内部表达式以识别终止符的设备，并且如果内部表达式不在所需的闭合原子上终止，则产生适当的错误消息。 所以它确实也注意了左边的括号，它实际上把我们的例子改写成更像:\n$\u0026lt;OPEN\u0026gt; = \u0026#39;(\u0026#39; \u0026lt;SETGOAL: \u0026#39;)\u0026#39;\u0026gt; \u0026lt;expression\u0026gt; [ $GOAL || \u0026lt;FAILGOAL\u0026gt; ] FAILGOAL 是一种可以由用户定义的特殊方法，它将在解析失败时被调用：\ngrammar A { token TOP { \u0026#39;[\u0026#39; ~ \u0026#39;]\u0026#39; \\w+ }; method FAILGOAL($goal) { die \u0026#34;Cannot find $goal near position {self.pos}\u0026#34; } } A.parse: \u0026#39;[good]\u0026#39;; # OUTPUT: «｢[good]｣␤» A.parse: \u0026#39;[bad\u0026#39;; # will throw FAILGOAL exception CATCH { default { put .^name, \u0026#39;: \u0026#39;, .Str } }; # OUTPUT: «X::AdHoc: Cannot find \u0026#39;]\u0026#39; near position 5␤» 请注意，即使没有开头括号，也可以使用此构造来设置闭合结构的期望值：\n\u0026#34;3)\u0026#34; ~~ / \u0026lt;?\u0026gt; ~ \u0026#39;)\u0026#39; \\d+ /; # RESULT: «｢3)｣» \u0026#34;(3)\u0026#34; ~~ / \u0026lt;?\u0026gt; ~ \u0026#39;)\u0026#39; \\d+ /; # RESULT: «｢3)｣» 这里 \u0026lt;?\u0026gt; 在第一个空字符串中返回true。\n正则表达式捕获的顺序是原始的：\n\u0026#34;abc\u0026#34; ~~ /a ~ (c) (b)/; say $0; # OUTPUT: «｢c｣␤» say $1; # OUTPUT: «｢b｣␤» Subrules 就像你可以把代码片段放进子例程中一样, 你同样可以把正则表达式片段放进命名规则中(named rules)。\nmy regex line { \\N*\\n } if \u0026#34;abc\\ndef\u0026#34; ~~ /\u0026lt;line\u0026gt; def/ { say \u0026#34;First line:\u0026#34;, $\u0026lt;line\u0026gt;.chomp; # OUTPUT:«First line: abc␤» } 命名正则可以使用 my regex_name { body here } 来声明, 并使用 \u0026lt;regex_name\u0026gt; 来调用。与此同时, 调用命名正则的时候会安装一个同名的命名捕获。\n要给捕获起一个和 regex 不同的名字, 那么使用 \u0026lt;capture_name=regex_name\u0026gt; 语法。如果不想捕获, 那么使用一个前置的点号来抑制捕获: \u0026lt;.regex_name\u0026gt;。\n下面是一个更完善的解析 ini 文件的例子:\nmy regex header { \\s* \u0026#39;[\u0026#39; (\\w+) \u0026#39;]\u0026#39; \\h* \\n+ } my regex identifier { \\w+ } my regex kvpair { \\s* \u0026lt;key=identifier\u0026gt; \u0026#39;=\u0026#39; \u0026lt;value=identifier\u0026gt; \\n+ } my regex section { \u0026lt;header\u0026gt; \u0026lt;kvpair\u0026gt;* } my $contents = q:to/EOI/; [passwords] jack=password1 joy=muchmoresecure123 [quotas] jack=123 joy=42 EOI my %config; if $contents ~~ /\u0026lt;section\u0026gt;*/ { for $\u0026lt;section\u0026gt;.list -\u0026gt; $section { my %section; for $section\u0026lt;kvpair\u0026gt;.list -\u0026gt; $p { say $p\u0026lt;value\u0026gt;; %section{ $p\u0026lt;key\u0026gt; } = ~$p\u0026lt;value\u0026gt;; } %config{ $section\u0026lt;header\u0026gt;[0] } = %section; } } say %config.perl; # OUTPUT: «(\u0026#34;passwords\u0026#34; =\u0026gt; {\u0026#34;jack\u0026#34; =\u0026gt; \u0026#34;password1\u0026#34;, \u0026#34;joy\u0026#34; =\u0026gt; \u0026#34;muchmoresecure123\u0026#34;},␤ # \u0026#34;quotas\u0026#34; =\u0026gt; {\u0026#34;jack\u0026#34; =\u0026gt; \u0026#34;123\u0026#34;, \u0026#34;joy\u0026#34; =\u0026gt; \u0026#34;42\u0026#34;}).hash» 命名正则可以规整到 gramamrs 中。S05中有一组预定义的 subrules。\n副词 副词修改正则表达式的工作方式, 并为某些类型的循环任务提供方便的快捷方式。\n有两种副词: 正则表达式副词适用于定义正则表达式时, 匹配副词适用于正则表达式与字符串匹配时。\n这种区别往往是模糊的, 因为匹配和声明通常是文本上关闭的, 但使用方法形式的匹配使得区分清晰一点。\n'abc' ~~ /../ 大致相当于 'abc'.match(/../), 甚至可以更清楚地单独写成一行:\nmy $regex = /../; # definition if \u0026#39;abc\u0026#39;.match($regex) { # matching say \u0026#34;\u0026#39;abc\u0026#39; has at least two characters\u0026#34;; } 正则表达式副词像 :i 会进入定义行而匹配副词像 :overlap 会附加到匹配调用上:\nmy $regex = /:i . a/; for \u0026#39;baA\u0026#39;.match($regex, :overlap) -\u0026gt; $m { say ~$m; } # OUTPUT: «ba␤aA␤» Regex Adverbs 在正则表达式声明时出现的副词是实际正则表达式的一部分, 并影响 Raku 编译器如何将正则表达式转换为二进制代码。\n例如: :ignorecase (:i) 副词告诉编译器忽略大写, 小写和标题大小写字母之间的区别。\n所以 'a'~~ /A/ 是假的, 但 `\u0026lsquo;a\u0026rsquo; ~~ /:i A /是一个成功的匹配。\n正则表达式副词可以在正则表达式声明之前或之内, 并且仅在词法上影响其后的正则表达式部分。 请注意, 在正则表达式之前出现的正则表达式副词必须出现在将正则表达式引入解析器之后, 如 \u0026lsquo;rx\u0026rsquo; 或 \u0026rsquo;m\u0026rsquo; 或裸的 \u0026lsquo;/\u0026rsquo;。 但是这样是无效的:\nmy $rx1 = :i/a/; # adverb is before the regex is recognized =\u0026gt; exception 下面这些是等价的:\nmy $rx1 = rx:i/a/; # before my $rx2 = rx/:i a/; # inside 而下面这两种是不等价的:\nmy $rx3 = rx/a :i b/; # matches only the b case insensitively my $rx4 = rx/:i a b/; # matches completely case insensitively 方括号和圆括号约束副词的作用域:\n/ (:i a b) c /; # matches \u0026#39;ABc\u0026#39; but not \u0026#39;ABC\u0026#39; / [:i a b] c /; # matches \u0026#39;ABc\u0026#39; but not \u0026#39;ABC\u0026#39; Ratchet :ratchet 或 :r 副词会导致正则表达式引擎不回溯。\n假如没有这个副词, 那么正则表达式的一部分将尝试不同的路径来匹配字符串, 以使正则表达式的其他部分可以匹配。 例如, 在 'abc' ~~ / \\w+ ./ 中, \\w+ 首先吃光整个字符串 abc, 然后 . 就失败了。 因此 \\w+ 放弃一个字符, 只匹配 ab 而 . 可以成功匹配字符串 c。 放弃字符的过程(或在轮试的情况下, 尝试不同的分支)被称为回溯。\nsay so \u0026#39;abc\u0026#39; ~~ / \\w+ . /; # OUTPUT: «True␤» say so \u0026#39;abc\u0026#39; ~~ / :r \\w+ . /; # OUTPUT: «False␤» Ratcheting 是一种优化, 因为回溯是昂贵的。 但更重要的是, 它与人类解析文本的方式密切相关。 如果你有一个正则表达式 my regex identifier { \\w+ } 和 my regex keyword { if | else | endif }, 你直观地期望 identifier 吞噬整个单词，而不是放弃结束下一个规则，如果下一个 rule 失败时。\n例如，你不想让单词 motif 被解析为标识符 mot 后面跟着关键字 if。 相反, 你想将 motif 解析为标识符; 并且如果解析器期望之后有一个 if, 那么最好让它失败, 而不是以你不期望的方式解析输入。\n由于 ratcheting 行为在解析器中通常是需要的, 所以有一个快捷方式来声明一个 ratcheting 正则表达式:\nmy token thing { .... } # short for my regex thing { :r ... } Sigspace :sigspace 或 :s 副词使空白在正则表达式中有意义。\nsay so \u0026#34;I used Photoshop®\u0026#34; ~~ m:i/ photo shop /; # OUTPUT: «True␤» say so \u0026#34;I used a photo shop\u0026#34; ~~ m:i:s/ photo shop /; # OUTPUT: «True␤» say so \u0026#34;I used Photoshop®\u0026#34; ~~ m:i:s/ photo shop /; # OUTPUT: «False␤» m:s/ photo shop / 的作用和 m/ photo \u0026lt;.ws\u0026gt; shop \u0026lt;.ws\u0026gt; / 一样。默认地, \u0026lt;.ws\u0026gt; 确保单词是分开的, 所以 a b 和 ^$ 会匹配中间的 \u0026lt;.ws\u0026gt;, 但是 ab 不会。\n正则表达式中哪里的空白会被转换为 \u0026lt;.ws\u0026gt; 取决于空白前面是什么。在上面的例子中, 正则表达式开头的空白不会被转换为 \u0026lt;.ws\u0026gt;, 但是字符后面的空白会被转换为 \u0026lt;.ws\u0026gt;。通常, 规则就是, 如果某一项可能匹配某个东西, 那么它后面的空白会被转换为 \u0026lt;.ws\u0026gt;。\n此外, 如果空白跟在某个 term 之后, 量词(+,* 或 ?)之前, 那么 \u0026lt;.ws\u0026gt; 会在每次 term 匹配后匹配。 所以, foo + 变为 [foo \u0026lt;.ws\u0026gt;]+。另一方面, 量词后面的空白和普通的空白作用一样; 例如: \u0026ldquo;foo+\u0026rdquo; 变为 foo+\u0026lt;.ws\u0026gt;\nMatching adverbs 和正则表达式副词对比, 其与正则表达式声明有关, 匹配副词只有在将字符串与正则表达式匹配时才有意义。\n它们永远不会出现在正则表达式内部, 只能在外部 - 作为 m/.../ 匹配的一部分或作为匹配方法的参数。\nContinue :continue 或短的 :c 副词接收一个参数。 这个参数是正则表达式开始搜索的位置。 默认情况下, 它从字符串的开头搜索, 但是 :c 覆盖该位置。 如果没有为 :c 指定位置, 它将默认为 0, 除非设置了 $/, 在这种情况下, 它默认为 $/.to。\ngiven \u0026#39;a1xa2\u0026#39; { say ~m/a./; # OUTPUT: «a1␤» say ~m:c(2)/a./; # OUTPUT: «a2␤» } 注意: 不同于 :pos, 使用 :continue() 的匹配将尝试在字符串中进一步匹配, 而不是马上失败:\nsay \u0026#34;abcdefg\u0026#34; ~~ m:c(3)/e.+/; # OUTPUT: «｢efg｣␤» say \u0026#34;abcdefg\u0026#34; ~~ m:p(3)/e.+/; # OUTPUT: «False␤» Exhaustive 要找到正则表达式的所有可能的匹配 - 包括重叠的 - 和几个从同一位置开始的匹配, 请使用 :exhaustive(short: ex) 副词。\ngiven \u0026#39;abracadabra\u0026#39; { for m:exhaustive/ a .* a / -\u0026gt; $match { say \u0026#39; \u0026#39; x $match.from, ~$match; } } 上面的代码产生这样的输出:\nabracadabra abracada abraca abra acadabra acada aca adabra ada abra Global 不是搜索一个匹配并返回一个 Match 对象, Global 搜索每个不重叠的匹配, 并将其返回到列表中。 为此, 请使用 :global 副词:\ngiven \u0026#39;several words here\u0026#39; { my @matches = m:global/\\w+/; say @matches.elems; # OUTPUT: «3␤» say ~@matches[2]; # OUTPUT: «here␤» } :g 是 :global 的简写。\nPos 在字符串的特定位置锚定匹配:\ngiven \u0026#39;abcdef\u0026#39; { my $match = m:pos(2)/.*/; say $match.from; # OUTPUT: «2␤» say ~$match; # OUTPUT: «cdef␤» } :p 是 :pos 的简写。\n注意: 不同于 :continue, 使用 :pos() 锚定的匹配在不匹配时将立即失败, 而不是尝试进一步匹配字符串:\nsay \u0026#34;abcdefg\u0026#34; ~~ m:c(3)/e.+/; # OUTPUT: «｢efg｣␤» say \u0026#34;abcdefg\u0026#34; ~~ m:p(3)/e.+/; # OUTPUT: «False␤» Overlap 要获得多个匹配, 包括重叠的匹配, 但每个起始位置只有一个(最长的)匹配, 请指定 :overlap (short :ov) 副词:\ngiven \u0026#39;abracadabra\u0026#39; { for m:overlap/ a .* a / -\u0026gt; $match { say \u0026#39; \u0026#39; x $match.from, ~$match; } } 产生:\nabracadabra acadabra adabra abra Look-around assertions Lookahead assertions 要检查一个模式是否出现在另一个模式之前，请通过 before 断言使用 lookahead 断言。形式如下：\n\u0026lt;?before pattern\u0026gt; 因此，要搜索字符串 foo 后面紧跟着字符串 bar, 请使用以下 regexp:\nrx{ foo \u0026lt;?before bar\u0026gt; } 例如:\nsay \u0026#34;foobar\u0026#34; ~~ rx{ foo \u0026lt;?before bar\u0026gt; }; # OUTPUT: «foo␤» 但是，如果要搜索一个不紧随某个模式的模式, 那么您需要使用反向向前查看断言, 其形式如下:\n\u0026lt;!before pattern\u0026gt; 因此，所有出现的不在 bar 之前的 foo 都会匹配:\nrx{ foo \u0026lt;!before bar\u0026gt; } Lookbehind assertions 要检查一个模式是否出现在另一个模式之后，请通过 after 断言使用 lookbehind 断言。 其形式如下：\n\u0026lt;?after pattern\u0026gt; 因此, 要搜索字符串 foo 立即跟着的 bar 字符串, 使用如下正则表达式:\nrx{ \u0026lt;?after foo\u0026gt; bar } # read as after foo is bar 例如:\nsay \u0026#34;foobar\u0026#34; ~~ rx{ \u0026lt;?after foo\u0026gt; bar }; # OUTPUT: «bar␤» 但是, 如果要搜索的模式不是紧随其后的模式, 那么您需要使用反向的 lookbehind 断言, 其形式如下:\n\u0026lt;!after pattern\u0026gt; 因此, bar 前面不是 foo 的所有 bar 将被匹配:\nrx{ \u0026lt;!after foo\u0026gt; bar } Best practices and gotchas 为了帮助强大的正则表达式和 Grammar, 以下是代码布局和可读性的最佳实践，实际匹配的内容，并避免常见的陷阱。\nCode layout 没有 :sigspace 副词, 空白在 Raku 正则表达式中就是没有意义的。 在能增加可读性的地方插入空格。 此外, 必要时插入注释。\n比较下面这个比较紧凑的正则表达式:\nmy regex float { \u0026lt;[+-]\u0026gt;?\\d*\u0026#39;.\u0026#39;\\d+[e\u0026lt;[+-]\u0026gt;?\\d+]? } 和可读性更好的版本:\nmy regex float { \u0026lt;[+-]\u0026gt;? # optional sign \\d* # leading digits, optional \u0026#39;.\u0026#39; \\d+ [ # optional exponent e \u0026lt;[+-]\u0026gt;? \\d+ ]? } 根据经验，在原子周围和分组内部使用空格; 将量词直接置于原子之后; 并垂直对齐开口和闭合方括号和圆括号。\n当你在方括号或圆括号中使用一组备选分支时, 请对齐垂直条:\nmy regex example { \u0026lt;preamble\u0026gt; [ || \u0026lt;choice_1\u0026gt; || \u0026lt;choice_2\u0026gt; || \u0026lt;choice_3\u0026gt; ]+ \u0026lt;postamble\u0026gt; } Keep it small 正则表达式通常比常规代码更紧凑。 因为他们短小精悍, 保持正则表达式很短。\n当你可以命名正则表达式的一部分时, 通常最好将其放入单独的命名正则表达式中。\n例如, 您可以从前面获取 float 正则表达式：\nmy regex float { \u0026lt;[+-]\u0026gt;? # optional sign \\d* # leading digits, optional \u0026#39;.\u0026#39; \\d+ [ # optional exponent e \u0026lt;[+-]\u0026gt;? \\d+ ]? } 并把它分解成几部分:\nmy token sign { \u0026lt;[+-]\u0026gt; } my token decimal { \\d+ } my token exponent { \u0026#39;e\u0026#39; \u0026lt;sign\u0026gt;? \u0026lt;decimal\u0026gt; } my regex float { \u0026lt;sign\u0026gt;? \u0026lt;decimal\u0026gt;? \u0026#39;.\u0026#39; \u0026lt;decimal\u0026gt; \u0026lt;exponent\u0026gt;? } 这很有用, 特别是当正则表达式变得更加复杂时。 例如, 你可能希望在存在指数的情况下使小数点可选。\nmy regex float { \u0026lt;sign\u0026gt;? [ || \u0026lt;decimal\u0026gt;? \u0026#39;.\u0026#39; \u0026lt;decimal\u0026gt; \u0026lt;exponent\u0026gt;? || \u0026lt;decimal\u0026gt; \u0026lt;exponent\u0026gt; ] } What to match 通常，输入数据格式没有明确的规范，或规范对编程人员来说是未知的。 那么，在你期望的时候是自由的，只要没有可能的含糊不清就行了。\n例如，在 ini 文件中:\n[section] key=value 什么可以在 section 标题内? 只允许一个单词可能太限制了。 有人会写 [two words], 或用破折号等等。 而不是询问内部允许的内容, 可能这样问比较好: 什么是不允许的？\n显然, 不允许使用括号，因为 [a] b] 是不明确的。 同样的论据, 应禁止开口方括号。 这让我们有了\ntoken header { \u0026#39;[\u0026#39; \u0026lt;-[ \\[\\] ]\u0026gt;+ \u0026#39;]\u0026#39; } 如果你只处理一行就行了。 但是，如果你正在处理整个文件，突然间正则表达式解析到一句\n[with a newline in between] 这可能不是一个好方法。折中的方式是:\ntoken header { \u0026#39;[\u0026#39; \u0026lt;-[ \\[\\] \\n ]\u0026gt;+ \u0026#39;]\u0026#39; } 然后在扫尾处理中, 从 section 标题中移除前导和尾部空格和制表符。\nMatching Whitespace :sigspace 副词(或使用 rule 声明符, 而不是 token 或 regex) 非常适用于隐式解析许多地方可能出现的空格。\n回到解析 ini 文件的例子, 我们有\nmy regex kvpair { \\s* \u0026lt;key=identifier\u0026gt; \u0026#39;=\u0026#39; \u0026lt;value=identifier\u0026gt; \\n+ } 这可能不像我们想要的那样自由, 因为用户可能会在等号周围放置空格。 那么我们可以试试这个:\nmy regex kvpair { \\s* \u0026lt;key=identifier\u0026gt; \\s* \u0026#39;=\u0026#39; \\s* \u0026lt;value=identifier\u0026gt; \\n+ } 但这看起来很笨重, 所以我们尝试其他方式:\nmy rule kvpair { \u0026lt;key=identifier\u0026gt; \u0026#39;=\u0026#39; \u0026lt;value=identifier\u0026gt; \\n+ } 可是等等! value 之后，隐含的空白匹配用光了所有的空白, 包括换行符, 所以 \\n+ 没有什么可以匹配的(rule 也禁止回溯, 所以运气不佳)。\n因此, 重要的是将隐式空白的定义重新定义为输入格式无意义的空白。\n这通过重新定义 token ws; 但是，它只适用于 Grammars:\ngrammar IniFormat { token ws { \u0026lt;!ww\u0026gt; \\h* } rule header { \\s* \u0026#39;[\u0026#39; (\\w+) \u0026#39;]\u0026#39; \\n+ } token identifier { \\w+ } rule kvpair { \\s* \u0026lt;key=identifier\u0026gt; \u0026#39;=\u0026#39; \u0026lt;value=identifier\u0026gt; \\n+ } token section { \u0026lt;header\u0026gt; \u0026lt;kvpair\u0026gt;* } token TOP { \u0026lt;section\u0026gt;* } } my $contents = q:to/EOI/; [passwords] jack = password1 joy = muchmoresecure123 [quotas] jack = 123 joy = 42 EOI say so IniFormat.parse($contents); 除了把所有的正则表达式都放在一个 Grammar 中并把它们变成了 tokens(因为他们不需要回溯) 之外, 有趣的新花样是:\ntoken ws { \u0026lt;!ww\u0026gt; \\h* } 这被称为隐式空白解析。 当它不在两个字符之间 (\u0026lt;ww\u0026gt;, 反向的\u0026quot;within word\u0026quot; 断言)时匹配, 以及零个或多个水平空格字符。 对水平空白的限制很重要, 因为换行符(它们是垂直空白)定界记录, 不应该被隐式地匹配。\n还有一些与空白有关的麻烦潜伏着。 正则表达式 \\n+ 将不会匹配 \\n \\n 这样的字符串, 因为两个换行符之间有空白。 要允许这样的输入字符串, 用 \\n\\s* 代替 \\n+。\n"},"name":"正则表达式","published":"2018-12-05T21:13:31+08:00","summary":"正则表达式, 简称 regexes, 是描述文本模式的字符序列。模式匹配就是将这些模式和实际的文本进行匹配的过程。\n词法约定 Raku 正则表达式有特殊的写法:\nm/abc/; # a regex that is immediately matched against $_ rx/abc/; # a Regex object /abc/; # a Regex object 对于前两个例子, 分隔符还能用除了斜线之外的其它字符:\nm{abc}; rx{abc}; 注意, 冒号和圆括号都不能用作分隔符; 禁止使用冒号作为正则表达式分割符是因为它和副词冲突, 例如 rx:i/abc/(忽略大小写的正则表达式), 而圆括号表明函数调用。\n空白符在正则表达式中通常被忽略(带有 :s 或 :sigspace 副词的正则表达式除外)。\n通常, 对于 Raku 来说, 正则表达式中的注释以 # 号开头, 直至行尾。\n字面值 正则表达式最简单的情况是匹配字符串字面值。\nif \u0026#39;properly\u0026#39; ~~ m/ perl / { say \u0026#34;\u0026#39;properly\u0026#39; contains \u0026#39;perl\u0026#39;\u0026#34;; } 字母数字和下划线 _ 按字面值匹配。所有其它字符要么使用反斜线转义(例如, \\: 匹配一个冒号), 要么用引号引起来:","type":"entry","url":"https://ohmycloud.github.io/posts/61.regexes/"}
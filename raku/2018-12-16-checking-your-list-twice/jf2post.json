{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003ch2 id=\"从命令行了解-raku\"\u003e从命令行了解 Raku\u003c/h2\u003e\n\u003cp\u003e这是 Sniffles the Elf 的大好机会！在丝带矿山经过多年的苦差事后，他们终于被提升到了清单管理部门。作为一名闪亮的新助理尼斯名单审核员，Sniffles 正在走向重要时刻。\u003c/p\u003e\n\u003cp\u003e在 Sniffles 到达的第一天，他们的新老板格伦布尔先生正等着他。“好人清单管理很麻烦，当有人在服务器上洒了牛奶和饼干时，我们的数据被意外删除了。我们一直在忙着检查列表，我们忘了检查备份！现在我们必须从头开始重建一切！裁员后，我们有点人手不足，所以由你来挽救这一天。“\u003c/p\u003e\n\u003cp\u003eSniffles，特别勤劳，津津乐道于这个问题。经过一些研究，他们意识到他们需要的所有数据都可用，他们只需要收集它。\u003c/p\u003e\n\u003cp\u003e他们的朋友在丝带矿山中，一位名叫 Hermie 的自称口述历史学家一直在谈论 Raku 有多么伟大。Sniffles 决定尝试一下。\u003c/p\u003e\n\u003ch2 id=\"就像拔牙\"\u003e就像拔牙?\u003c/h2\u003e\n\u003cp\u003eSniffles 首先用一种新语言抛出标准的第一个脚本：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"k\"\u003ev\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"ni\"\u003e.d\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNice List restored!!!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该脚本运行并尽职尽责地打印出消息。距离圣诞节还有几天了，是时候认真对待 \u003ca href=\"https://docs.raku.org/\"\u003eRaku文档\u003c/a\u003e了。\u003c/p\u003e\n\u003cp\u003e稍微浏览一下 Sniffles 的 \u003ca href=\"https://docs.raku.org/language/create-cli\"\u003eRaku 命令行界面实用程序\u003c/a\u003e 页面。他们喜欢它描述的 \u003ccode\u003eMAIN\u003c/code\u003e 这个特殊子程序的外观。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eStarted initializing nice lister.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNice List restored!!!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFinished initializing nice lister.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e产生：\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eStarted initializing nice lister.\nFinished initializing nice lister.\nNice List restored!!!\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e好吧，至少那是他们的启动代码。Sniffles 抛弃了初始化消息，它们只是噪音。但他们确信这个 \u003ccode\u003eMAIN\u003c/code\u003e 函数必须有更多的技巧才能让 Hermie 如此兴奋。\u003c/p\u003e\n\u003cp\u003e回到文档\u0026hellip;检查了\u003ca href=\"https://learnxinyminutes.com/docs/raku/\"\u003eY分钟学会X语言的 Raku 页面\u003c/a\u003e。\u003ccode\u003eMAIN\u003c/code\u003e 接近尾声的额外部分是金矿！Sniffles 对这个念头打了个寒颤。\u003c/p\u003e\n\u003cp\u003e“好的，所以如果我们提供 \u003ccode\u003eMAIN子\u003c/code\u003e 程序签名，Raku 会为我们处理命令行解析。更好的是，它会自动生成帮助内容，“他们对自己嘟囔道。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$list-of-all-kids\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$naughty-list\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e产生：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ nice-list\nUsage:\n  nicelist [--list-of-all-kids=\u0026lt;Any\u0026gt;] [--naughty-list=\u0026lt;Any\u0026gt;]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e运行脚本得到：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eStub code executed\n  in sub MAIN at foo line 1\n  in block \u0026lt;unit\u0026gt; at foo line 1\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e真棒。\u003c/p\u003e\n\u003cp\u003e但是开关名称有点长。由于 TheNorthPole.io 是一个专门的商店，Sniffles 认为他们可能不得不输入一堆。呸。如果您可以添加一些解释性文字，更短的名称将没有问题。Raku 支持使用 POD6 标记进行文字编程，因此可以轻松添加注释。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003eRebuild the Nice List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$all\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e    \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the list of all children\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e    \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$naughty\u003c/span\u003e \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the Naughty List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e产生：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eUsage:\n  nicelist [--all=\u0026lt;Any\u0026gt;] [--naughty=\u0026lt;Any\u0026gt;] -- Rebuild the Nice List\n  \n    --all=\u0026lt;Any\u0026gt;        path to file containing the list of all children\n    --naughty=\u0026lt;Any\u0026gt;    path to file containing the Naughty List\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSniffles 印象深刻，但他们知道参数验证是编写 CLI 的另一部分，可能会变得乏味。“Raku 最近为我做了什么？”他们想知道。\u003c/p\u003e\n\u003ch2 id=\"一种强大的沉默的类型\"\u003e一种强大的，沉默的类型\u003c/h2\u003e\n\u003cp\u003eRaku 有一个渐进式\u003ca href=\"https://docs.raku.org/language/typesystem\"\u003e类型系统\u003c/a\u003e，包括编译和运行时类型检查。渐进类型允许 Sniffles 到目前为止忽略类型检查。他们添加了一些类型，看看发生了什么。\u003c/p\u003e\n\u003cp\u003eSniffles 使用\u003ca href=\"https://docs.raku.org/type/Signature#Constraining_argument_definiteness\"\u003e类型 smiley\u003c/a\u003e定义了 Str 的子集，该类型使用 \u003ca href=\"https://docs.raku.org/type/Whatever\"\u003ewhatevercode\u003c/a\u003e 来验证给定路径上是否存在文件。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr:D\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"kt\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003eRebuild the Nice List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$all\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e    \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the list of all children\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$naughty\u003c/span\u003e \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the Naughty List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e他们运行这个脚本:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e$nice-list  --naughty=naughty.kids --all=notAFile.bleh\nUsage:\n  nice-list [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] -- Rebuild the Nice List\n  \n    --all=\u0026lt;FilePath\u0026gt;        path to file containing the list of all children\n    --naughty=\u0026lt;FilePath\u0026gt;    path to file containing the Naughty List\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSniffles 在没有争论和其他一些无效方式的情况下再次运行脚本。每次捕获无效输入并自动显示使用消息。 “非常好，”Sniffles 想道，“事实上，错误报告仍然很糟糕。如果你抛出一个参数就好像传入一个丢失的文件一样，你会得到相同的结果。”\u003c/p\u003e\n\u003ch2 id=\"精灵类型不匹配---弥补改进的错误处理\"\u003e精灵类型不匹配 - 弥补改进的错误处理\u003c/h2\u003e\n\u003cp\u003e\u0026ldquo;Ugh! How do I get around \u003cem\u003ethis\u003c/em\u003e problem?\u0026rdquo; Sniffles shuffled around the docs some more.  \u003ca href=\"https://docs.raku.org/syntax/multi\"\u003eMultiple Dispatch\u003c/a\u003e and \u003ca href=\"https://docs.raku.org/type/Signature#index-entry-slurpy_argument\"\u003eslurpy parameters\u003c/a\u003e.  They added another subset and a couple of new definitions of MAIN:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esubset\u003c/span\u003e \u003cspan class=\"nc\"\u003eFileNotFound\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr:D\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e!*.\u003c/span\u003e\u003cspan class=\"kt\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$all\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e    \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the list of all children\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$naughty\u003c/span\u003e \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the Naughty List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFileNotFound\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$all\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e%otherStuff\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eList of all children file does not exist\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFileNotFound\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$naughty\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e%otherStuff\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNaughty List file does not exist\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e他们得到了:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUsage:\n  nice-list [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] -- Rebuild the Nice List\n  nice-list [--all=\u0026lt;FileNotFound\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;]\n  nice-list [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FileNotFound\u0026gt;]\n  \n    --all=\u0026lt;FilePath\u0026gt;        path to file containing the list of all children\n    --naughty=\u0026lt;FilePath\u0026gt;    path to file containing the Naughty List\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e哪个工作完美\u0026hellip;除了现在他们在使用中有错误生成条目！双翘。Sniffles返回到CLI界面上的文章。将正确的特征添加到MAIN潜艇将使它们从自动生成的使用中消失：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFileNotFound\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$all\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"nv\"\u003e%otherStuff\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003ehidden-from-USAGE\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eList of all children file does not exist\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一团糟不见了！\u003c/p\u003e\n\u003ch2 id=\"我们不会去直到我们得到一些\"\u003e我们不会去，直到我们得到一些！\u003c/h2\u003e\n\u003cp\u003eGrumble 先生走了过来，他停下来看着 Sniffles 的屏幕。“那里有趣的工作，Sniffles。我们需要那个脚本，我们昨天需要它。哦，我们需要它能够审核现有的 Nice List 并重建一个。我们也需要这个。看到你。“在Sniffles眨眼之前他消失了。\u003c/p\u003e\n\u003cp\u003eSniffles 认为，做一个爬行的功能比被迫吃无花果布丁更好。他们添加了这些命令：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003eRebuild the Nice List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ebuild\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$all\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e    \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the list of all children\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$naughty\u003c/span\u003e \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the Naughty List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003eCompare all the lists for correctness\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eaudit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$all\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e     \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the list of all children\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$naughty\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the Naughty List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e    \u003cspan class=\"n\"\u003eFilePath\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$nice\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e    \u003cspan class=\"k\"\u003e#= \u003c/span\u003e\u003cspan class=\"sd\"\u003epath to file containing the Nice List\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e“好极了，”他们想，“但你必须像这样运行脚本 \u003ccode\u003enicelist --all=foo --naughty=bar build\u003c/code\u003e。可怕。”\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"vg\"\u003e%*SUB-MAIN-OPTS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003enamed-anywhere\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# allow named variables at any location \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e“它被修复了！” Sniffles 在座位上跳起来了。\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eUsage:\n  nicelist build [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] -- Rebuild the Nice List\n  nicelist audit [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] [--nice=\u0026lt;FilePath\u0026gt;] -- Compare all the lists for correctness\n  \n    --all=\u0026lt;FilePath\u0026gt;        path to file containing the list of all children\n    --naughty=\u0026lt;FilePath\u0026gt;    path to file containing the Naughty List\n    --nice=\u0026lt;FilePath\u0026gt;       path to file containing the Nice List\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id=\"跑步者走上了这条路\"\u003e跑步者走上了这条路。\u003c/h2\u003e\n\u003cp\u003e好的，现在 Sniffles 拥有一个完美的框架来构建一个优秀的实用程序脚本。是时候实际写出实际的东西了。Sniffles 知道他们真的打算雪橇这个项目。\u003c/p\u003e\n\u003cp\u003e很快，Snuffles发现Raku的功能集帮助他们制作了一个功能强大，正确的脚本。他们创建了一个 Child \u003ca href=\"https://docs.raku.org/language/classtut\"\u003e类\u003c/a\u003e，在其上\u003ca href=\"https://docs.raku.org/language/mop#index-entry-syntax_WHICH-WHICH\"\u003e定义了身份操作\u003c/a\u003e，编写了一个用于加载列表数据的简洁 CSV 解析器和一个报告函数。内置的 \u003ca href=\"https://docs.raku.org/type/Set\"\u003eSet 数据类型\u003c/a\u003e提供了操作符，可以轻松查找不合适的条目，甚至更容易重建 Nice List。\u003c/p\u003e\n\u003cp\u003e一旦\u003ca href=\"https://gist.github.com/daotoad/47bcbc6f1dc066fff982a72481c6bcd2\"\u003e完成\u003c/a\u003e，他们就恢复了 Nice List，并向 Grumbles 先生及其他团队发送了一封部门电子邮件，宣布他们取得了成功。当格罗布尔斯先生看到脚本有多好，它的用法和错误检查，仅此一次，他辜负了他们的期望。\u003c/p\u003e\n\u003cp\u003e为了表彰他们的辛勤工作和机智，Sniffles 被要求在圣诞老人最新工作室的开幕处剪彩。\u003c/p\u003e\n","text":"从命令行了解 Raku 这是 Sniffles the Elf 的大好机会！在丝带矿山经过多年的苦差事后，他们终于被提升到了清单管理部门。作为一名闪亮的新助理尼斯名单审核员，Sniffles 正在走向重要时刻。\n在 Sniffles 到达的第一天，他们的新老板格伦布尔先生正等着他。“好人清单管理很麻烦，当有人在服务器上洒了牛奶和饼干时，我们的数据被意外删除了。我们一直在忙着检查列表，我们忘了检查备份！现在我们必须从头开始重建一切！裁员后，我们有点人手不足，所以由你来挽救这一天。“\nSniffles，特别勤劳，津津乐道于这个问题。经过一些研究，他们意识到他们需要的所有数据都可用，他们只需要收集它。\n他们的朋友在丝带矿山中，一位名叫 Hermie 的自称口述历史学家一直在谈论 Raku 有多么伟大。Sniffles 决定尝试一下。\n就像拔牙? Sniffles 首先用一种新语言抛出标准的第一个脚本：\nuse v6.d; say \u0026#34;Nice List restored!!!\u0026#34;; 该脚本运行并尽职尽责地打印出消息。距离圣诞节还有几天了，是时候认真对待 Raku文档了。\n稍微浏览一下 Sniffles 的 Raku 命令行界面实用程序 页面。他们喜欢它描述的 MAIN 这个特殊子程序的外观。\nsay \u0026#39;Started initializing nice lister.\u0026#39;; sub MAIN() { say \u0026#34;Nice List restored!!!\u0026#34; } say \u0026#39;Finished initializing nice lister.\u0026#39;; 产生：\nStarted initializing nice lister. Finished initializing nice lister. Nice List restored!!! 好吧，至少那是他们的启动代码。Sniffles 抛弃了初始化消息，它们只是噪音。但他们确信这个 MAIN 函数必须有更多的技巧才能让 Hermie 如此兴奋。\n回到文档\u0026hellip;检查了Y分钟学会X语言的 Raku 页面。MAIN 接近尾声的额外部分是金矿！Sniffles 对这个念头打了个寒颤。\n“好的，所以如果我们提供 MAIN子 程序签名，Raku 会为我们处理命令行解析。更好的是，它会自动生成帮助内容，“他们对自己嘟囔道。\nsub MAIN ( :$list-of-all-kids, :$naughty-list ) { ... } 产生：\n$ nice-list Usage: nicelist [--list-of-all-kids=\u0026lt;Any\u0026gt;] [--naughty-list=\u0026lt;Any\u0026gt;] 运行脚本得到：\nStub code executed in sub MAIN at foo line 1 in block \u0026lt;unit\u0026gt; at foo line 1 真棒。\n但是开关名称有点长。由于 TheNorthPole.io 是一个专门的商店，Sniffles 认为他们可能不得不输入一堆。呸。如果您可以添加一些解释性文字，更短的名称将没有问题。Raku 支持使用 POD6 标记进行文字编程，因此可以轻松添加注释。\n#| Rebuild the Nice List sub MAIN ( :$all, #= path to file containing the list of all children :$naughty #= path to file containing the Naughty List ) { ... } 产生：\nUsage: nicelist [--all=\u0026lt;Any\u0026gt;] [--naughty=\u0026lt;Any\u0026gt;] -- Rebuild the Nice List --all=\u0026lt;Any\u0026gt; path to file containing the list of all children --naughty=\u0026lt;Any\u0026gt; path to file containing the Naughty List Sniffles 印象深刻，但他们知道参数验证是编写 CLI 的另一部分，可能会变得乏味。“Raku 最近为我做了什么？”他们想知道。\n一种强大的，沉默的类型 Raku 有一个渐进式类型系统，包括编译和运行时类型检查。渐进类型允许 Sniffles 到目前为止忽略类型检查。他们添加了一些类型，看看发生了什么。\nSniffles 使用类型 smiley定义了 Str 的子集，该类型使用 whatevercode 来验证给定路径上是否存在文件。\nsubset FilePath of Str:D where *.IO.f; #| Rebuild the Nice List sub MAIN ( FilePath :$all, #= path to file containing the list of all children FilePath :$naughty #= path to file containing the Naughty List ) { ... } 他们运行这个脚本:\n$nice-list --naughty=naughty.kids --all=notAFile.bleh Usage: nice-list [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] -- Rebuild the Nice List --all=\u0026lt;FilePath\u0026gt; path to file containing the list of all children --naughty=\u0026lt;FilePath\u0026gt; path to file containing the Naughty List Sniffles 在没有争论和其他一些无效方式的情况下再次运行脚本。每次捕获无效输入并自动显示使用消息。 “非常好，”Sniffles 想道，“事实上，错误报告仍然很糟糕。如果你抛出一个参数就好像传入一个丢失的文件一样，你会得到相同的结果。”\n精灵类型不匹配 - 弥补改进的错误处理 \u0026ldquo;Ugh! How do I get around this problem?\u0026rdquo; Sniffles shuffled around the docs some more. Multiple Dispatch and slurpy parameters. They added another subset and a couple of new definitions of MAIN:\nsubset FileNotFound of Str:D where !*.IO.f(); multi sub MAIN ( FilePath :$all, #= path to file containing the list of all children FilePath :$naughty #= path to file containing the Naughty List ) { ... } multi sub MAIN ( FileNotFound :$all, *%otherStuff ) { die \u0026#34;List of all children file does not exist\u0026#34;; } multi sub MAIN ( FileNotFound :$naughty, *%otherStuff ) { die \u0026#34;Naughty List file does not exist\u0026#34;; } 他们得到了:\nUsage: nice-list [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] -- Rebuild the Nice List nice-list [--all=\u0026lt;FileNotFound\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] nice-list [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FileNotFound\u0026gt;] --all=\u0026lt;FilePath\u0026gt; path to file containing the list of all children --naughty=\u0026lt;FilePath\u0026gt; path to file containing the Naughty List 哪个工作完美\u0026hellip;除了现在他们在使用中有错误生成条目！双翘。Sniffles返回到CLI界面上的文章。将正确的特征添加到MAIN潜艇将使它们从自动生成的使用中消失：\nmulti sub MAIN ( FileNotFound :$all, *%otherStuff ) is hidden-from-USAGE { die \u0026#34;List of all children file does not exist\u0026#34;; } 一团糟不见了！\n我们不会去，直到我们得到一些！ Grumble 先生走了过来，他停下来看着 Sniffles 的屏幕。“那里有趣的工作，Sniffles。我们需要那个脚本，我们昨天需要它。哦，我们需要它能够审核现有的 Nice List 并重建一个。我们也需要这个。看到你。“在Sniffles眨眼之前他消失了。\nSniffles 认为，做一个爬行的功能比被迫吃无花果布丁更好。他们添加了这些命令：\n#| Rebuild the Nice List multi sub MAIN ( \u0026#39;build\u0026#39;, FilePath :$all, #= path to file containing the list of all children FilePath :$naughty #= path to file containing the Naughty List ) { ... } #| Compare all the lists for correctness multi sub MAIN ( \u0026#39;audit\u0026#39;, FilePath :$all, #= path to file containing the list of all children FilePath :$naughty, #= path to file containing the Naughty List FilePath :$nice, #= path to file containing the Nice List ) { ... } “好极了，”他们想，“但你必须像这样运行脚本 nicelist --all=foo --naughty=bar build。可怕。”\nmy %*SUB-MAIN-OPTS = :named-anywhere, # allow named variables at any location ; “它被修复了！” Sniffles 在座位上跳起来了。\nUsage: nicelist build [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] -- Rebuild the Nice List nicelist audit [--all=\u0026lt;FilePath\u0026gt;] [--naughty=\u0026lt;FilePath\u0026gt;] [--nice=\u0026lt;FilePath\u0026gt;] -- Compare all the lists for correctness --all=\u0026lt;FilePath\u0026gt; path to file containing the list of all children --naughty=\u0026lt;FilePath\u0026gt; path to file containing the Naughty List --nice=\u0026lt;FilePath\u0026gt; path to file containing the Nice List 跑步者走上了这条路。 好的，现在 Sniffles 拥有一个完美的框架来构建一个优秀的实用程序脚本。是时候实际写出实际的东西了。Sniffles 知道他们真的打算雪橇这个项目。\n很快，Snuffles发现Raku的功能集帮助他们制作了一个功能强大，正确的脚本。他们创建了一个 Child 类，在其上定义了身份操作，编写了一个用于加载列表数据的简洁 CSV 解析器和一个报告函数。内置的 Set 数据类型提供了操作符，可以轻松查找不合适的条目，甚至更容易重建 Nice List。\n一旦完成，他们就恢复了 Nice List，并向 Grumbles 先生及其他团队发送了一封部门电子邮件，宣布他们取得了成功。当格罗布尔斯先生看到脚本有多好，它的用法和错误检查，仅此一次，他辜负了他们的期望。\n为了表彰他们的辛勤工作和机智，Sniffles 被要求在圣诞老人最新工作室的开幕处剪彩。\n"},"name":"第十六天 - 检查你的列表俩次","published":"2018-12-16T18:08:05+08:00","summary":"从命令行了解 Raku 这是 Sniffles the Elf 的大好机会！在丝带矿山经过多年的苦差事后，他们终于被提升到了清单管理部门。作为一名闪亮的新助理尼斯名单审核员，Sniffles 正在走向重要时刻。\n在 Sniffles 到达的第一天，他们的新老板格伦布尔先生正等着他。“好人清单管理很麻烦，当有人在服务器上洒了牛奶和饼干时，我们的数据被意外删除了。我们一直在忙着检查列表，我们忘了检查备份！现在我们必须从头开始重建一切！裁员后，我们有点人手不足，所以由你来挽救这一天。“\nSniffles，特别勤劳，津津乐道于这个问题。经过一些研究，他们意识到他们需要的所有数据都可用，他们只需要收集它。\n他们的朋友在丝带矿山中，一位名叫 Hermie 的自称口述历史学家一直在谈论 Raku 有多么伟大。Sniffles 决定尝试一下。\n就像拔牙? Sniffles 首先用一种新语言抛出标准的第一个脚本：\nuse v6.d; say \u0026#34;Nice List restored!!!\u0026#34;; 该脚本运行并尽职尽责地打印出消息。距离圣诞节还有几天了，是时候认真对待 Raku文档了。\n稍微浏览一下 Sniffles 的 Raku 命令行界面实用程序 页面。他们喜欢它描述的 MAIN 这个特殊子程序的外观。\nsay \u0026#39;Started initializing nice lister.\u0026#39;; sub MAIN() { say \u0026#34;Nice List restored!!!\u0026#34; } say \u0026#39;Finished initializing nice lister.\u0026#39;; 产生：\nStarted initializing nice lister. Finished initializing nice lister. Nice List restored!!! 好吧，至少那是他们的启动代码。Sniffles 抛弃了初始化消息，它们只是噪音。但他们确信这个 MAIN 函数必须有更多的技巧才能让 Hermie 如此兴奋。","type":"entry","url":"http://localhost:1313/raku/2018-12-16-checking-your-list-twice/"}
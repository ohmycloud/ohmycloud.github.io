{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"children":[{"content":{"html":"\u003ch1 id=\"序言\"\u003e序言\u003c/h1\u003e\n\u003ch2 id=\"介绍\"\u003e介绍\u003c/h2\u003e\n\u003cp\u003e本教程最多只关注 Raku 中的面向对象编程(OOP)的基本知识。因此，对语句/表达式、变量、条件、循环、子例程(函数)等有一个基本的了解是很重要的，如果不在 Raku 中，至少在另一种编程语言中是这样的。此外，您至少应该对类、属性和方法有一般的了解。作为对 Raku 的介绍，我强烈推荐 \u003ca href=\"https://rakuintro.com/\"\u003eRaku introduction\u003c/a\u003e。下一步是 Raku 文档。\u003c/p\u003e\n\u003cp\u003e确保你已经设置好了 Raku 编译器。如果你还没有设置好，请看\u003ca href=\"https://raku.org/getting-started/\"\u003e这里\u003c/a\u003e。\n从这里开始，你可能会厌倦代词“我们”，但它的使用是经过深思熟虑的。这是一个教程，希望你能跟上。所以，是的，我们在一起工作，你应该做好准备。顺便说一下，本教程是冗长的，这是故意的，但也是手把手教程的副产品。\u003c/p\u003e\n\u003ch2 id=\"问题陈述\"\u003e问题陈述\u003c/h2\u003e\n\u003cp\u003e我们将从现实生活中的问题开始，并尝试以面向对象的方式对其进行建模。问题陈述如下:\n在她的数学101课程中，一位教授记录了三个作业(2个作业和1个考试)的分数，按照学生交作业的顺序:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eBill Jones:1:35\nSara Tims:2:45\nSara Tims:1:39\nBill Jones:1:42\nBill Jones:E1:72\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e在一个名为 MATH-101 的简单文本文件中。您可以假设有更多的学生，而这只是数据文件的一个代表性块。在这个文件中，每行记录学生的姓名、作业编号(作业编号为1,2，第一次考试为E1)和学生获得的原始分数。\n教授使用另一个扩展名为 .std 的文件存储她课程的学生名单:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eBill Jones\nAna Smith\nSara Tims\nFrank Horza\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e除了 MATH-101，这位教授还教其他课程，并设计了一个扩展名为 .cfg 的配置文件来存储给定课程的配置格式。她这样做的目的是在她的其他课程中也使用它。配置文件格式指定了作业的类型、作业编号、作业的总分以及作业对最终课程成绩的贡献。她的数学101课程的 .cfg 文件如下:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eHomework:1:50:25\nHomework:2:50:25\nExam:1:75:50\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e您的任务是创建一个名为 report.p6 的程序。该程序生成一个报告，其中列出了班级中每个学生的姓名、每次作业的分数和最终成绩。该程序应该假设具有扩展名 .cgf 和 .std 的文件在执行该程序的目录中可用。另一方面，包含学生成绩的文件必须通过命令行传递给程序。为了简单起见，您可以假设每个文件都是根据课程命名的。对于她的数学101课程，教授会有以下的文件: MATH-101, MATH-101.std 和 MATH-101.cfg，还有脚本 report.p6。\u003c/p\u003e\n\u003ch2 id=\"分析\"\u003e分析\u003c/h2\u003e\n\u003cp\u003e如果我们看问题陈述，我们可以把所有的东西分成三类:课程，学生和作业。就目前而言，每个类别都可以被视为具有状态和行为的类。我们将从最简单的类别，作业类别，到最一般的类别，课程类别。为了做到这一点，我们首先学习 Raku 中类的定义。\u003c/p\u003e\n\u003ch1 id=\"raku-类\"\u003eRaku 类\u003c/h1\u003e\n\u003ch2 id=\"类定义\"\u003e类定义\u003c/h2\u003e\n\u003cp\u003e在 Raku 中，类是用 class 关键字定义的，通常后面跟着类名（通常以首字母大写形式）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eName-of-class\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"属性定义\"\u003e属性定义\u003c/h2\u003e\n\u003cp\u003e所有的 Raku 属性默认都是私有的，这意味着它们只能在类中访问。属性是使用 \u003ccode\u003ehas\u003c/code\u003e 关键字和 \u003ccode\u003e!\u003c/code\u003e twigil 定义的。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eName-of-class\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!attribute-name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e属性也可以使用 \u003ccode\u003e.\u003c/code\u003e twigil。这个 twigil 声明，应该生成一个以属性命名的只读访问器方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eName-of-class\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.attribute-name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# $!attribute-name + attribute-name()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这等价于:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eName-of-class\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!attribute-name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eattribute-name\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!attribute-name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e生成的访问器方法是只读的，因为属性默认是只读的(从类的外部)。为了允许通过访问器方法修改属性，必须向属性添加 \u003ccode\u003eis rw\u003c/code\u003e 特质。其他特质也可以用于属性。有关特质的更多信息，请参阅文档。\u003c/p\u003e\n\u003ch1 id=\"作业类\"\u003e作业类\u003c/h1\u003e\n\u003cp\u003e让我们从详细描述 \u003ccode\u003eAssignment\u003c/code\u003e 类所需的属性开始:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003etype\u003c/code\u003e——作业的类型(作业或考试)。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003enumber\u003c/code\u003e——作业编号(1,2等)。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003escore\u003c/code\u003e——这个作业的分数。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eraw\u003c/code\u003e——给定作业的最大点数。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econtrib\u003c/code\u003e——作业对最终成绩的贡献。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eadjusted-score\u003c/code\u003e——基于 \u003ccode\u003escore\u003c/code\u003e，\u003ccode\u003eraw\u003c/code\u003e 和 \u003ccode\u003econtrib\u003c/code\u003e 属性的格式化的分数。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econfig\u003c/code\u003e——一个包含课程配置文件的散列。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e关于 \u003ccode\u003econfig\u003c/code\u003e 哈希，每个赋值的信息将存储在一个数组中，这个数组将根据每个赋值(作业或考试)在数组中的赋值号进行索引。由于没有零赋值，这个槽将用于存储已处理的赋值总数。MATH-101.cfg 的 \u003ccode\u003econfig\u003c/code\u003e 散列是这样的:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003eHomework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003etotal\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003eExam\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003etotal\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e75\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这导致了下面的类:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAssignment\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# attributes with a read-only accessor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.number\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.score\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%.config\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# given that a hash is used, the $ (scalar) is replaced\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"c1\"\u003e# with a % (hash).\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# private attributes hence the ! twigil.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!raw\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!contrib\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!adjusted-score\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了创建 \u003ccode\u003eAssignment\u003c/code\u003e 类的实例并初始化它，我们将命名参数传递给 Raku 提供的默认的 \u003ccode\u003enew\u003c/code\u003e 构造函数方法，并由所有类继承:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# create a new instance object and initialize its attributes. \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# The new constructor is called on Assignment, the type object of \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# the class Assignment.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$assign01\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAssignment\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHomework\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"c1\"\u003e# named argument \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# Alternate colon-pair syntax for named arguments\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003escore\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e45\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003econfig\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eHomework\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003etotal\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e25\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e],\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eExam\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"s\"\u003etotal\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e75\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# accessing the instance object\u0026#39;s attributes \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# through their accessor method:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$assign01\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# OUTPUT: \u0026#39;Homework\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$assign01\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$assign01\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003escore\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# OUTPUT: 45\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e注意\u003c/strong\u003e: 如果属性是用 \u003ccode\u003e!\u003c/code\u003e twigil 定义的，那么不能使用 \u003ccode\u003enew\u003c/code\u003e 构造函数方法来初始化它。正如前面提到的，这是由于属性是私有的，这意味着它不能从类外部访问，甚至不能通过\u003ccode\u003enew\u003c/code\u003e 构造函数访问。但是，这个默认行为可以用 \u003ccode\u003eBUILD\u003c/code\u003e 子方法重写。有关 \u003ccode\u003eBUILD\u003c/code\u003e 子方法的更多信息，请参阅\u003ca href=\"https://docs.raku.org/language/objects#Object_Construction\"\u003e文档\u003c/a\u003e。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e我们已经知道赋值的类型总是字符串，数字总是整数，调整后的分数是 rational 等等，所以我们也可以相应地键入属性:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAssignment\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.number\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.score\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%.config\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!raw\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!contrib\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"kt\"\u003eRat\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!adjusted-score\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有关类型的更多信息，请参阅\u003ca href=\"https://docs.raku.org/language/typesystem\"\u003e文档\u003c/a\u003e。\n\u003ccode\u003eAssignment\u003c/code\u003e 类的行为在很大程度上取决于每个学生的数据，但我们对 \u003ccode\u003eStudent\u003c/code\u003e 类的结构还一无所知。出于这个原因，我们将继续学习 \u003ccode\u003eStudent\u003c/code\u003e 类，稍后再回到这个话题。\u003c/p\u003e\n\u003ch1 id=\"student-类\"\u003eStudent 类\u003c/h1\u003e\n\u003cp\u003e与 \u003ccode\u003eAssignment\u003c/code\u003e 类类似，让我们从详细描述 \u003ccode\u003eAssignment\u003c/code\u003e 类将具有的属性开始:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003ename\u003c/code\u003e——表示学生名字的字符串。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eassign-num\u003c/code\u003e——作业的数量(一个整数)。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eassignments\u003c/code\u003e——我们希望将作业分成不同的类型(作业或考试)，所以我们将使用哈希。每个键将指向它们各自的赋值对象的数组。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003econfig\u003c/code\u003e——在 \u003ccode\u003eAssignment\u003c/code\u003e 类中描述的课程的配置文件。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e这导致了下面的类:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!assign-num\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!assignments\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%.config\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们应该能够将作业附加到 \u003ccode\u003eStudent\u003c/code\u003e 类的一个实例中，并从中获得作业、考试等等。这些行为表示类的行为，并通过使用方法来实现。\u003c/p\u003e\n\u003ch2 id=\"公共和私有方法\"\u003e公共和私有方法\u003c/h2\u003e\n\u003cp\u003e正如在 \u003ca href=\"https://rakuintro.com/#_methods\"\u003eRaku 介绍\u003c/a\u003e中所述，“方法是对象的子例程，就像子例程一样，它们是打包一组功能的方法，它们接受参数，具有签名，可以定义为 \u003ccode\u003emulti\u003c/code\u003e。”\u003c/p\u003e\n\u003cp\u003eRaku 方法是使用 \u003ccode\u003emethod\u003c/code\u003e 关键字定义的，它是在 invocant 上使用点(\u003ccode\u003e.\u003c/code\u003e)调用的。默认情况下，所有方法都是公共的。但是，方法可以通过在名称前面加上感叹号(\u003ccode\u003e!\u003c/code\u003e)来定义为私有的。在这种情况下，使用感叹号而不是点来调用它们。\u003c/p\u003e\n\u003cp\u003e有了这些知识，我们现在将向 \u003ccode\u003eStudent\u003c/code\u003e 类添加一个 \u003ccode\u003eadd-assignment\u003c/code\u003e 方法。这个方法需要作业的编号(1、2、3等，或者E1、E2等)和收到的分数。不会提供作业的类别，但我们可以使用编号来确定:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same attributes as before.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eadd-assignment\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nb\"\u003ecopy\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# determine the assignment type.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003eE\u003c/span\u003e\u003cspan class=\"p\"\u003e//\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# do replacement in place\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eExam\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# to obtain the exam\u0026#39;s number.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHomework\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# coerce assignment number to an integer.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e \u003cspan class=\"o\"\u003e.=\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# create an Assignment object from available information.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$assign-obj\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eAssignment\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003etype\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003escore\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!config\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# add assignment into its type indexed by its number.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e%!assignments\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$number\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$assign-obj\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# increment number of assignments by 1.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$!assign-num\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了展示私有方法的创建，我们将在 \u003ccode\u003eadd-assignment\u003c/code\u003e 方法中把创建 \u003ccode\u003eAssignment\u003c/code\u003e 对象外包给一个名为 \u003ccode\u003ecreate-assignment\u003c/code\u003e 的私有方法，该方法返回一个 \u003ccode\u003eAssignment\u003c/code\u003e 对象:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# notice the ! twigil before the method\u0026#39;s name.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003e!create-assignment\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"n\"\u003eAssignment\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003etype\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003enumber\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003escore\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!config\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eadd-assignment\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nb\"\u003ecopy\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# same code as before.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \t\t        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# create an Assignment object with this information.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$assign-obj\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate-assignment\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# same code as before.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e正如您可能已经注意到的，\u003ccode\u003eself\u003c/code\u003e 关键字用于调用 \u003ccode\u003eadd-assignment\u003c/code\u003e 方法中的 \u003ccode\u003ecreate-assignment\u003c/code\u003e 方法。\u003ccode\u003eself\u003c/code\u003e 是绑定到 invocant 的特殊变量，在方法内部可用。此变量可用于调用程序上的进一步方法。其内部方法调用如下:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eself!method($arg)\u003c/code\u003e 用于私有方法。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eself.method($arg)\u003c/code\u003e 用于公共方法。 \u003ccode\u003e$.method($arg)\u003c/code\u003e 是它的快捷形式。注意，方法参数(位置和命名)的冒号语法只支持在使用 \u003ccode\u003eself\u003c/code\u003e 时调用方法，而不支持快捷形式。所以:\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eself.method: arg1, arg2\u0026hellip; is supported.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e$.method: arg1, arg2\u0026hellip; is not supported.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e方法的签名总是传递 \u003ccode\u003eself\u003c/code\u003e 作为它的第一个参数。但是，我们可以通过提供第一个参数和一个冒号来为方法指定一个显式调用者。此参数将充当方法的调用方，并允许方法引用显式调用的对象。\n例如:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePerson\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.name\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eJohn\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# attributes can be set to default values.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# here self refers to the object, albeit implicitly.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eintroduce\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHi, my name\u0026#39;s \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e#                     ^^^^^^^^^^^ calling method on self\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# here $person explicitly refers to the object.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ealt-introduce\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$person:\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHi, my name\u0026#39;s \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$person\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e#                     ^^^^^^^^^^^^^^ calling method on $person\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ePerson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eintroduce\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# OUTPUT: Hi, my name\u0026#39;s John!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ePerson\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ealt-introduce\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: Hi, my name\u0026#39;s John!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"tweak-子方法\"\u003eTWEAK 子方法\u003c/h2\u003e\n\u003cp\u003e我们回到 \u003ccode\u003eAssignment\u003c/code\u003e 类。目前，类的使用者可以在创建 \u003ccode\u003eAssignment\u003c/code\u003e 对象时传递他们想要的任何东西。出于这个原因，我们可能想检查作业类型和作业编号是否已知。我们可能要做的另一件事是修改 \u003ccode\u003eraw\u003c/code\u003e 属性和 \u003ccode\u003econtrib\u003c/code\u003e 属性，它们的值依赖于来自配置文件的数据。同样的情况也适用于 \u003ccode\u003e adjusted-score\u003c/code\u003e 属性，其值取决于 \u003ccode\u003eraw\u003c/code\u003e 属性、\u003ccode\u003econtrib\u003c/code\u003e 属性和 \u003ccode\u003escore\u003c/code\u003e 属性。\u003c/p\u003e\n\u003cp\u003eRaku 提供了一种通过 \u003ccode\u003eTWEAK\u003c/code\u003e 子方法检查对象构造后的内容或修改属性的简单方法。简单地说，子方法是不被子类继承的方法。查看\u003ca href=\"https://docs.raku.org/language/objects#Object_construction\"\u003e文档\u003c/a\u003e以获得关于 \u003ccode\u003eTWEAK\u003c/code\u003e 子方法的更多信息。\n让我们在 \u003ccode\u003eAssignment\u003c/code\u003e 类中添加 \u003ccode\u003eTWEAK\u003c/code\u003e 子方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAssignment\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same attributes as before.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# use submethod keyword, instead of method.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esubmethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eTWEAK\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# assignment type is either \u0026#39;Homework\u0026#39; or \u0026#39;Exam\u0026#39;.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!type\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHomework\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eExam\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eunknown assignment type: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!type\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# check if provided assignment type is known.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!config\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!type\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!number\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eunrecognized \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!type\u003c/span\u003e\u003cspan class=\"s2\"\u003e number: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!number\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# update raw and contrib value from configuration data.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!raw\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!contrib\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!config\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!type\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!number\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# calculate the value of the adjusted score (rounded to two \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# decimal places).\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$!adjusted-score\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e%.2f\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!score\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!raw\u003c/span\u003e\u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!contrib\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# update type with assignment number. This will be useful \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# when printing the report for a specific assignment.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$!type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!type\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eHomework\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHomework \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!number\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eExam \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!number\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"完成-assignment-和-student-类\"\u003e完成 ASSIGNMENT 和 STUDENT 类\u003c/h2\u003e\n\u003ch2 id=\"assignment-类\"\u003eASSIGNMENT 类\u003c/h2\u003e\n\u003cp\u003e我们想为特定的作业打印一个报告，因此我们将添加一个 \u003ccode\u003eformatted-score\u003c/code\u003e 方法，它将返回调整后的分数，并将一个 \u003ccode\u003eprint-report\u003c/code\u003e 方法返回给 \u003ccode\u003eAssignment\u003c/code\u003e 类。\u003ccode\u003eprint-report\u003c/code\u003e 方法应打印以下格式的作业报告:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etype number: Raw = score/raw : Adjusted = adjusted-score/contrib-final\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e例子:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eHomework 1: Raw = 42/50 : Adjusted = 8.40/10\nExam 1: Raw = 70/75 : Adjusted = 8.40/10\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eAssignment\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eformatted-score\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!adjusted-score\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!type:\u003c/span\u003e\u003cspan class=\"s2\"\u003e raw = \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!score\u003c/span\u003e\u003cspan class=\"s2\"\u003e/\u003c/span\u003e\u003cspan class=\"nv\"\u003e$!raw\u003c/span\u003e\u003cspan class=\"s2\"\u003e : \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eAdjusted = \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!adjusted-score\u003c/span\u003e\u003cspan class=\"s2\"\u003e/contrib\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"student-类-1\"\u003eSTUDENT 类\u003c/h2\u003e\n\u003cp\u003e现在，我们将添加 \u003ccode\u003eget-home-works\u003c/code\u003e 和 \u003ccode\u003eget-exams\u003c/code\u003e 方法，这些方法将返回 \u003ccode\u003eAssignment\u003c/code\u003e 对象列表。我们还将为打印学生报告添加 \u003ccode\u003eprint-report\u003c/code\u003e 方法。此方法应以下列格式打印学生报告:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003estudent:\n    type number: Raw = score/raw : Adjusted = adjusted-score/100 \n    ...\n    Final Course Grade: final-total/100\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# we use the grep() function to discard possibly empty \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# elements in either array.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eget-homeworks\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!assignments\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eHomework\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*].\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eget-exams\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!assignments\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eExam\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*].\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!name\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# print message and return if student\u0026#39;s doesn\u0026#39;t have\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# neither assignment type\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eget-homeworks\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eget-exams\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo records for this student.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$final-total\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a_count\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e_count\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Loop over student\u0026#39;s assignments (either Homework or Exam),\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# print assignment\u0026#39;s report and update final total.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eget-homeworks\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$homework\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$homework\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$final-total\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$homework\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eformatted-score\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$a_count\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eget-exams\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$exam\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003eprint\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$exam\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$final-total\u003c/span\u003e \u003cspan class=\"o\"\u003e+=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$exam\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eformatted-score\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$e_count\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# check if number of homeworks and exams in config file\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# matches student\u0026#39;s record of returned homeworks and taken exams.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e%!config\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eHomework\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003etotal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a_count\u003c/span\u003e \u003cspan class=\"ow\"\u003eand\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%!config\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eExam\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003etotal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e   \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e_count\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003eFinal Course Grade: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$final-total\u003c/span\u003e\u003cspan class=\"s2\"\u003e/100\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"se\"\u003e\\t\u003c/span\u003e\u003cspan class=\"s2\"\u003e* Incomplete Record *\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# print newline after student\u0026#39;s report.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"course-类\"\u003eCourse 类\u003c/h1\u003e\n\u003cp\u003e\u003ccode\u003eCourse\u003c/code\u003e 类有以下属性:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecourse\u003c/code\u003e——表示课程名称的字符串。\n\u003ccode\u003estudents\u003c/code\u003e——学生和 \u003ccode\u003eStudents\u003c/code\u003e 对象的哈希。\n\u003ccode\u003enumber\u003c/code\u003e——这个课程的学生人数。\u003c/p\u003e\n\u003cp\u003e这是带有其属性的类:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCourse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.course\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.number\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!students\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# specifying the type of the hash\u0026#39;s values.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e关于方法，我们需要以下几点:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003econfigure-course\u003c/code\u003e——使用当前目录中的 \u003ccode\u003e.cfg\u003c/code\u003e(配置)和 \u003ccode\u003e.std\u003c/code\u003e (学生列表)文件来配置课程。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003estudent\u003c/code\u003e——接受一个学生的名字，并返回一个 \u003ccode\u003eStudent\u003c/code\u003e 对象，前提是它存在。在该类的内部使用所以定义为私有的。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eget-roster\u003c/code\u003e——返回学生名字的排序列表。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eadd-student-record\u003c/code\u003e——接受一个学生记录(例如，\u003ccode\u003eBill Jones:1:45\u003c/code\u003e)，为那个学生查找 \u003ccode\u003eStudent\u003c/code\u003e 对象并添加一个作业。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eprint-report\u003c/code\u003e——打印整个类的报告。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCourse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003econfigure-course\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# read content of configuration file. We are to assume that \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# it has the same name as the course with \u0026#39;.cfg\u0026#39; extension.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!course\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.cfg\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course_file\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eslurp\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                          \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ecannot open \u003c/span\u003e\u003cspan class=\"nv\"\u003e$course_file\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# extract the data from file and store it into the \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# configuration hash. The structure of the configuration\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# file was discussed in the \u0026#39;The Assignment class\u0026#39; section.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%cfg\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course_data\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$datum\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$datum\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"c1\"\u003e# Example: type = \u0026#39;Homework\u0026#39;, data = (1, 50, 25)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%cfg\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@data\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%cfg\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$type\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003etotal\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# read student list file which has the same name as the course.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stud_file\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$!course\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e.std\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stud_data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stud_file\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eslurp\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ecannot open \u003c/span\u003e\u003cspan class=\"nv\"\u003e$stud_file\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# Loop over the student list and create a Student object for \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# each student and populate the hash of students and Student objects.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stud_data\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e%!students\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etrim\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eStudent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s\"\u003ename\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etrim\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"s\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e%cfg\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$!number\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# return Student object if it exists.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003e!student\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$stud-name\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e%!students\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$stud-name\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"kt\"\u003eNil\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# order student names by last name and return list.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eget-roster\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e%!students\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e                         \u003cspan class=\"c1\"\u003e# student names list\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e \u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ewords\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflat\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"c1\"\u003e# (full name, first, last)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003esort\u003c/span\u003e \u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nv\"\u003e$^a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"ow\"\u003ecmp\u003c/span\u003e \u003cspan class=\"nv\"\u003e$^b\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# sort list by last names\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003emap\u003c/span\u003e \u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# get name from sorted list\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# add record to Student object.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eadd-student-record\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@record\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@remaining\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@record\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# get Student object and add assignment to it.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estudent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$num\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@remaining\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$student\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-assignment\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$num\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$score\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# print report for all students in the course.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eClass report: course = \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!course\u003c/span\u003e\u003cspan class=\"s2\"\u003e, students = \u003c/span\u003e\u003cspan class=\"nv\"\u003e$!number\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# loop over sorted students list and print each student\u0026#39;s report.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eget-roster\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$name\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nf\"\u003estudent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$name\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"自定义构造函数\"\u003e自定义构造函数\u003c/h2\u003e\n\u003cp\u003e我们希望使用反映所创建内容的构造函数方法，而不是使用 \u003ccode\u003enew\u003c/code\u003e 构造函数从特定的类创建对象。例如，\u003ccode\u003eCourse\u003c/code\u003e 类的 \u003ccode\u003ecreate-course\u003c/code\u003e 构造函数。我们还希望使用位置参数，而不是在 \u003ccode\u003enew\u003c/code\u003e 构造函数中使用命名参数。在 Raku 中创建构造函数相当容易;只需要创建一个方法并返回 \u003cem\u003eblessed\u003c/em\u003e 后的参数:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCourse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# In addition to:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$class01\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGEO-102\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# We can also create a Course instance like this now:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$class02\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMath-101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们不只是写 \u003ccode\u003ereturn self.bless($course)\u003c/code\u003e，因为 \u003ccode\u003ebless\u003c/code\u003e 方法需要一组命名参数来为每个属性提供初始值。正如前面提到的，私有属性实际上是私有的，因此对于用\u003ccode\u003e!\u003c/code\u003e twigil 定义的属性这还不够。为此，必须使用 \u003ccode\u003eBUILD\u003c/code\u003e 子方法，\u003ccode\u003ebless\u003c/code\u003e 方法调用这个全新的对象。有关 \u003ccode\u003eBUILD\u003c/code\u003e 子方法的更多信息，请参阅\u003ca href=\"https://docs.raku.org/language/objects#Submethods\"\u003e子方法\u003c/a\u003e和\u003ca href=\"https://docs.raku.org/language/classtut#Constructors\"\u003e构造函数\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"实例和类属性\"\u003e实例和类属性\u003c/h2\u003e\n\u003cp\u003e我们已经讨论了实例属性，只是没有将它们标识为实例属性。\u003cstrong\u003e实例属性\u003c/strong\u003e是一个类的特定实例所拥有的属性，这意味着同一个类的两个不同的对象实例是不同的。例如，前几节中的实例 \u003ccode\u003e$class01\u003c/code\u003e 和 \u003ccode\u003e$class02\u003c/code\u003e 都具有相同的实例属性(\u003ccode\u003ecourse\u003c/code\u003e、\u003ccode\u003enumber\u003c/code\u003e 等)，但是值不同。在 Raku 中，任何用关键字 \u003ccode\u003ehas\u003c/code\u003e 声明的属性都是一个实例属性。\u003c/p\u003e\n\u003cp\u003e另一方面，\u003cstrong\u003e类属性\u003c/strong\u003e是属于类本身而不是它的对象的属性。与实例属性不同，类属性由类的所有实例共享。\u003c/p\u003e\n\u003cp\u003e在 Raku 中，类属性是使用关键字 \u003ccode\u003emy\u003c/code\u003e 或 \u003ccode\u003eour\u003c/code\u003e(而不是 \u003ccode\u003ehas\u003c/code\u003e)来声明的，这取决于作用域(例如，\u003ccode\u003emy $class-var;\u003c/code\u003e)。与实例属性类似，用 \u003ccode\u003e.\u003c/code\u003e twigil 生成一个访问器方法(例如，\u003ccode\u003emy $.class-var;\u003c/code\u003e)的类属性。有关类属性的更多信息，请参阅\u003ca href=\"https://docs.raku.org/language/classtut#Static_fields?\"\u003e文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e我们还没有看到类属性，但是我们现在要创建一个。例如，我们想知道我们实例化的课程的数量。为此，我们可以在 \u003ccode\u003eCourse\u003c/code\u003e 类中创建一个类属性，它跟踪实例化的 \u003ccode\u003eCourse\u003c/code\u003e 对象的数量。\u003c/p\u003e\n\u003cp\u003e每当创建新对象时这个类属性必须更新，因此我们必须修改默认的 \u003ccode\u003enew\u003c/code\u003e 和 \u003ccode\u003ecreate-course\u003c/code\u003e 构造函数:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCourse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# other attributes.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.course-count\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# class attribute with read-only accessor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$.course-count\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# updating the class attribute.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# we still want to pass named parameters to the new \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# hence the \u0026#39;:\u0026#39; before the parameter.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$.course-count\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePHYS-110\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBIO-112\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# accessing the class attribute\u0026#39;s value by calling \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# its accessor method on the class itself.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecourse-count\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: 10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"实例方法和类方法\"\u003e实例方法和类方法\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003e实例方法\u003c/strong\u003e需要在其上调用对象实例。它通常以 \u003ccode\u003e$object.instance-method()\u003c/code\u003e 的形式表示。例如，\u003ccode\u003eprint-report()\u003c/code\u003e 是 \u003ccode\u003eCourse\u003c/code\u003e 类的一个实例方法，需要调用该类的一个实例(例如，\u003ccode\u003e$class.print-report()\u003c/code\u003e)。\u003c/p\u003e\n\u003cp\u003e另一方面，\u003cstrong\u003e类方法\u003c/strong\u003e作为一个整体属于类，因此它不需要类的实例。它通常用 \u003ccode\u003eclass.class-method()\u003c/code\u003e 表示。例如，\u003ccode\u003enew\u003c/code\u003e 构造函数是直接在类上调用的类方法，而不是类的实例。\u003c/p\u003e\n\u003cp\u003e前面我们提到，显式调用者可以传递给方法。除了显式地引用对象外，方法签名中提供的调用者还允许通过使用类型约束将方法定义为实例方法或类方法。特殊变量 \u003ccode\u003e::?CLASS\u003c/code\u003e 可用于在编译时提供类名，并结合 \u003ccode\u003e:U\u003c/code\u003e (如 \u003ccode\u003e::?CLASS:U\u003c/code\u003e)用于类方法，或 \u003ccode\u003e:D\u003c/code\u003e(如 \u003ccode\u003e::?CLASS:D\u003c/code\u003e)用于实例方法。顺便说一下，在 Raku 行话中，\u003ccode\u003e:U\u003c/code\u003e 和 \u003ccode\u003e:D\u003c/code\u003e 被称为 \u003cem\u003esmileys\u003c/em\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ecreate-course\u003c/code\u003e 方法打算仅作为类方法使用，但是，到目前为止，没有任何东西阻止它在实例中使用。为了避免这种情况，我们可以在 invocant 上使用带有 \u003ccode\u003e:U\u003c/code\u003e 类型修饰符的特殊变量 \u003ccode\u003e?::CLASS\u003c/code\u003e，这会导致方法主动拒绝对实例的调用，并且只允许通过type 对象进行调用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCourse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# other attributes \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"vg\"\u003e::?CLASS:U\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$.course-count\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"vg\"\u003e::?CLASS:U\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$.course-count\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nb\"\u003eself\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebless\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Invocations on the Course class works as expected.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$math\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMATH-302\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$phys\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLING-202\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Invocations on Course instances fail.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$math\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMATH-302\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: Invocant of method \u0026#39;new\u0026#39; must be \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                 \u003cspan class=\"c1\"\u003e# a type object of type \u0026#39;Course\u0026#39;, not an \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                 \u003cspan class=\"c1\"\u003e# object instance of type \u0026#39;Course\u0026#39;.  Did you\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                 \u003cspan class=\"c1\"\u003e# forget a \u0026#39;multi\u0026#39;?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$phys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eLING-202\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# OUTPUT: Type check failed in binding to \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                 \u003cspan class=\"c1\"\u003e# parameter \u0026#39;$course\u0026#39;; expected Course but \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                 \u003cspan class=\"c1\"\u003e# got Str (\u0026#34;Phys-302\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"使用-course-类\"\u003e使用 COURSE 类\u003c/h2\u003e\n\u003cp\u003e假设我们有 \u003ccode\u003eMATH-101.cfg\u003c/code\u003e(课程设置)，\u003ccode\u003eMATH-101.std\u003c/code\u003e(学生名单)和 \u003ccode\u003eMATH-101\u003c/code\u003e(学生记录)有了问题陈述中提供的信息，我们可以使用 \u003ccode\u003eCourse\u003c/code\u003e 类(与 \u003ccode\u003eStudent\u003c/code\u003e 和 \u003ccode\u003eAssignment\u003c/code\u003e 在同一个文件中)，如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# For now, we\u0026#39;ll specify the course name manually.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s\"\u003ecourse\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMATH-101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# set up the course. Remember that the script assumes \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# \u0026#39;MATH-101.cfg\u0026#39; and \u0026#39;MATH-101.std\u0026#39; are in the current directory.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003econfigure-course\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# filename of student record. \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$data\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMATH-101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# loop over each line of student record and feed it to\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# the corresponding student.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$data\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-student-record\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# print course report.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e运行该程序之后，它打印出：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eClass report: course = MATH-101, students = 4\nFrank Horza: \n\tNo records for this student.\nBill Jones: \n\tHomework 1: Raw = 35/50 : Adjusted = 17.50/25\n\tHomework 2: Raw = 42/50 : Adjusted = 21.00/25\n\tExam 1: Raw = 72/75 : Adjusted = 48.00/50\n\tFinal Course Grade: 86.5/100\n\nAnne Smith: \n\tNo records for this student.\nSara Tims: \n\tHomework 1: Raw = 39/50 : Adjusted = 19.50/25\n\tHomework 2: Raw = 45/50 : Adjusted = 22.50/25\n\t* Incomplete Record *\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"完成程序\"\u003e完成程序\u003c/h2\u003e\n\u003cp\u003e您可能注意到，在创建 \u003ccode\u003eCourse\u003c/code\u003e 实例之后，我们必须调用 \u003ccode\u003econfigure-course\u003c/code\u003e。每次创建一个 \u003ccode\u003eCourse\u003c/code\u003e 实例后都要这样做，这样我们就可以添加一个 \u003ccode\u003eTWEAK\u003c/code\u003e 方法来执行这个任务:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eCourse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esubmethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eTWEAK\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$course:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \t\u003cspan class=\"c1\"\u003e# set up course after object creation\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003econfigure-course\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# same code as before\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e问题陈述说明程序应该通过命令行接收学生的成绩。Raku 使命令行参数解析非常容易，我们只需要定义一个 \u003ccode\u003eMAIN\u003c/code\u003e 子例程来获取一个位置参数，即以包含学生成绩的课程命名的文件。要了解关于 \u003ccode\u003eMAIN\u003c/code\u003e 子例程的更多信息，请阅读\u003ca href=\"https://uzluisf.gitlab.io/posts/command-line-raku/\"\u003e本文\u003c/a\u003e或\u003ca href=\"https://docs.raku.org/language/functions#sub_MAIN\"\u003e参考文档\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e让我们创建一个 \u003ccode\u003ereport.p6\u003c/code\u003e 文件，其中也存储了 \u003ccode\u003eAssignment\u003c/code\u003e, \u003ccode\u003eStudent\u003c/code\u003e 和 \u003ccode\u003eCourse\u003c/code\u003e 类:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"k\"\u003ev\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# assume the Assignment, Student, and Course class are here.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# CLI arguments are stored in @*ARGS. We take the first one. \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$class\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCourse\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecreate-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"vg\"\u003e@*ARGS\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eIO\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-student-record\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$line\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# printing the class report.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$class\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprint-report\u003c/span\u003e\u003cspan class=\"p\"\u003e();\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e假设这样:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ ls\nMATH-101  MATH-101.cfg  MATH-101.std  report.p6\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e然后:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$ raku report.p6 MATH-101\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e应该打印出报告。\u003c/p\u003e\n\u003ch1 id=\"继承\"\u003e继承\u003c/h1\u003e\n\u003cp\u003e我们已经完成了问题陈述所提出的任务，但是我们将在这里讨论的主题在OOP范例中非常重要。\u003ccode\u003eStudent\u003c/code\u003e 类有一个属性，用于存储学生已经注册的课程。现在，让我们假设我们想为兼职学生创建一个 \u003ccode\u003ePTStudent\u003c/code\u003e 类，它限制了一个学生可以注册的课程数量。考虑到兼职学生肯定是学生，我们可能会被诱使将 \u003ccode\u003eStudent\u003c/code\u003e 类中的代码复制到 \u003ccode\u003ePTStudent\u003c/code\u003e 中，然后添加必要的约束。虽然技术上很好，但是代码的重复被认为是次优的、容易出错的和概念上有缺陷的工作。相反，我们可以使用一种称为\u003cstrong\u003e继承\u003c/strong\u003e的机制。\u003c/p\u003e\n\u003cp\u003e简单地说，继承允许从现有类派生一个新类(带有修改)。这意味着您不必创建完整的新类来复制现有类的部分。在这个过程中，继承的类是\u003cstrong\u003e父类\u003c/strong\u003e的\u003cstrong\u003e孩子\u003c/strong\u003e(或子类)。\u003c/p\u003e\n\u003cp\u003e在 Raku 中，\u003ccode\u003eis\u003c/code\u003e 关键字定义了继承。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Assume Student is defined here.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePTStudent\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# new attributes particular to PTStudent.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.courses\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.course-limit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"c1\"\u003e# new method too.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e@.courses\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.course-limit\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNumber of courses exceeds limit of \u003c/span\u003e\u003cspan class=\"nv\"\u003e$.course-limit\u003c/span\u003e\u003cspan class=\"s2\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003epush\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.courses\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePTStudent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eTim Polaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eBIO-101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGEO-101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePHY-102\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecourses\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# OUTPUT: \u0026#39;BIO-101 GEO-101 PHY-102\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eENG-220\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# (error) OUTPUT: Number of courses exceeds \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                   \u003cspan class=\"c1\"\u003e# limit of 3.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003ePTStudent\u003c/code\u003e 类继承了其父类 \u003ccode\u003eStudent\u003c/code\u003e 的属性和方法。除此之外，我们还为它添加了两个新属性和一个新方法。\u003c/p\u003e\n\u003cp\u003e如果我们愿意，我们可以重新定义从 \u003ccode\u003eStudent\u003c/code\u003e 类继承的方法。这个概念被称为\u003cstrong\u003e覆盖\u003c/strong\u003e，它允许为父类和子类提供每个类的通用方法实现。\u003c/p\u003e\n\u003cp\u003e除了单继承之外，Raku 中还可以有多重继承(一次从多个类继承)。查看\u003ca href=\"https://docs.raku.org/language/classtut#Multiple_inheritance\"\u003e文档\u003c/a\u003e以获得关于它的更多信息。\u003c/p\u003e\n\u003ch1 id=\"角色\"\u003e角色\u003c/h1\u003e\n\u003cp\u003e与类类似，角色携带状态和行为。然而，与类不同，角色是用来描述对象行为的特定组件的。在 Raku 中，角色是用 \u003ccode\u003erole\u003c/code\u003e 关键字定义的，并使用 \u003ccode\u003edoes\u003c/code\u003e 特质(与用于继承的 \u003ccode\u003eis\u003c/code\u003e 相反)应用于类或对象。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Assume Student is defined here\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003ecourse-limitation\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.courses\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.course-limit\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e   \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$course\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e@.courses\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.course-limit\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003edie\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNumber of courses exceeds limit of \u003c/span\u003e\u003cspan class=\"nv\"\u003e$.course-limit\u003c/span\u003e\u003cspan class=\"s2\"\u003e.\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e@.courses\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epush\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$course\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# inheriting from the Student class and applying role.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003ePTStudent\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003eStudent\u003c/span\u003e \u003cspan class=\"k\"\u003edoes\u003c/span\u003e \u003cspan class=\"nc\"\u003ecourse-limitation\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePTStudent\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eTim Polaz\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003econfig\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMATH-101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eGEO-101\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePHY-102\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ecourses\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# OUTPUT: \u0026#39;MATH-101 GEO-101 PHY-102\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd-course\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eENG-220\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# (error) OUTPUT: Number of courses exceeds \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                   \u003cspan class=\"c1\"\u003e# limit of 3.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们已经演示了角色是如何工作的，但这并没有展示它们的完整画面。例如，就像多重继承一样，角色可以在一个类中多次实现(例如，\u003ccode\u003eclass Name does role1 does role2 does ...\u003c/code\u003e)。但是，与多重继承不同的是，如果多个角色的应用程序出现冲突，则会抛出编译时错误。对于多重继承，冲突不会被认为是错误，而是会在运行时解决。\u003c/p\u003e\n\u003cp\u003e简而言之，角色可以被认为是继承的另一种选择; 程序员不是通过子类化来扩展类层次结构，而是使用为类的行为提供补充行为的角色来组成类。\u003c/p\u003e\n\u003ch1 id=\"内省\"\u003e内省\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e内省\u003c/strong\u003e 是一个对象能够收集关于自身和其他对象的信息的过程，如类型、方法、属性等。\u003c/p\u003e\n\u003cp\u003e在 Raku 中，内省可以通过以下结构得到促进:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e.WHAT\u003c/code\u003e——返回与对象关联的类型对象。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.perl\u003c/code\u003e——返回一个字符串，该字符串可以作为 Raku 代码执行。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e.^name\u003c/code\u003e——返回类名。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e^attributes\u003c/code\u003e——返回对象的所有属性。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e^methods\u003c/code\u003e——返回可以在该对象上调用的所有方法。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e^parents\u003c/code\u003e——返回对象的父类。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e~~\u003c/code\u003e 是智能匹配操作符。如果对象是由正在进行比较的类或其任何它的继承类创建的，则计算为 \u003ccode\u003eTrue\u003c/code\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003e.^\u003c/code\u003e 语法是元方法调用。使用这种语法而不是单个点表示对其元类的方法调用，元类是管理所有类的属性的类。事实上, \u003ccode\u003eobj.^meth\u003c/code\u003e 相当于\u003ccode\u003eobj.HOW.meth(obj)\u003c/code\u003e, 其中 \u003ccode\u003emeth\u003c/code\u003e 是一个特定的方法。\u003c/p\u003e\n\u003cp\u003e使用上一节中的对象 \u003ccode\u003e$student2\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eWHAT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# OUTPUT: (PTStudent)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# OUTPUT: PTStudent.new(name =\u0026gt; \u0026#34;Tim Polaz\u0026#34;, \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                            \u003cspan class=\"c1\"\u003e#         config =\u0026gt; {}, courses =\u0026gt; [])\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# OUTPUT: PTStudent\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eattributes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# OUTPUT: (Str $!name Associative %!config Mu \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                            \u003cspan class=\"c1\"\u003e#          $!assig-num Associative %!assignments\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                            \u003cspan class=\"c1\"\u003e#          Positional @!courses)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003emethods\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# OUTPUT: (course-limit add-course name \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                            \u003cspan class=\"c1\"\u003e#          add-assignment courses config get-exams\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                            \u003cspan class=\"c1\"\u003e#          print-report get-homeworks BUILDALL)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003eparents\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# OUTPUT: ((Student))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003ePTStudent\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"n\"\u003eStudent\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$student2\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# False\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如您所见，通过内省，您可以从类的实例中学到很多东西。\u003c/p\u003e\n\u003cp\u003e内省并不仅限于程序员定义的类。内省是 Raku 的核心，它是一个非常有用的工具，可以帮助您了解内置类型，并从整体上了解该语言。\u003c/p\u003e\n\u003ch1 id=\"结论\"\u003e结论\u003c/h1\u003e\n\u003cp\u003e在这篇文章中，我们学习了如何定义类、私有和公共属性以及私有和公共方法。我们还学习了如何创建自定义构造函数，并将其调用限制在类或类的实例中。此外，我们还简要讨论了如何通过继承和 Raku 中的角色来促进代码重用。最后，我们讨论了内省的过程，以及如何以最简单的形式学习对象。\u003c/p\u003e\n\u003cp\u003e关于 \u003ccode\u003ereport.p6\u003c/code\u003e，我们局限于问题陈述，但是程序的用户可以从额外的功能中获益。例如，可以修改程序，为单个学生提供交互式查询，以便学生从命令行查找。此外，该程序可以读取多个课程，然后查询它们，检索并打印一个特定学生的记录。\u003c/p\u003e\n\u003cp\u003e下面我链接了我们在这里创建的程序和实现前面提到的额外功能的程序。希望这整个教程是有益的和有用的。\u003c/p\u003e\n\u003cp\u003e链接:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e整个 report.p6\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003ereport.p6\u003c/code\u003e 有额外的功能。我还添加了一个简单的函数来给课程名称上色，以便更好地将它们与其他文本区分开来。对于一些课程文件，输出结果如下:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"https://i.imgur.com/3BVTxB0.jpg\" alt=\"img\"\u003e\u003c/p\u003e\n\u003ch1 id=\"资源\"\u003e资源\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eRaku Introduction\u003c/li\u003e\n\u003cli\u003eRaku Documentation\n\u003cul\u003e\n\u003cli\u003eClasses and objects\u003c/li\u003e\n\u003cli\u003eObject orientation\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eRaku Advent Calendar\n\u003cul\u003e\n\u003cli\u003eThe humble type object\u003c/li\u003e\n\u003cli\u003eClasses, attributes, methods and more\u003c/li\u003e\n\u003cli\u003eIntrospection\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eBasic OO in Raku (slides)\u003c/li\u003e\n\u003cli\u003eLet’s build an object\u003c/li\u003e\n\u003cli\u003eThink Raku\u003c/li\u003e\n\u003cli\u003eThe problem statement was an adaptation from a section titled Grades: an object example in the book Elements of Programming with Perl by Andrew L. Johnson.\u003c/li\u003e\n\u003c/ul\u003e\n","text":"序言 介绍 本教程最多只关注 Raku 中的面向对象编程(OOP)的基本知识。因此，对语句/表达式、变量、条件、循环、子例程(函数)等有一个基本的了解是很重要的，如果不在 Raku 中，至少在另一种编程语言中是这样的。此外，您至少应该对类、属性和方法有一般的了解。作为对 Raku 的介绍，我强烈推荐 Raku introduction。下一步是 Raku 文档。\n确保你已经设置好了 Raku 编译器。如果你还没有设置好，请看这里。 从这里开始，你可能会厌倦代词“我们”，但它的使用是经过深思熟虑的。这是一个教程，希望你能跟上。所以，是的，我们在一起工作，你应该做好准备。顺便说一下，本教程是冗长的，这是故意的，但也是手把手教程的副产品。\n问题陈述 我们将从现实生活中的问题开始，并尝试以面向对象的方式对其进行建模。问题陈述如下: 在她的数学101课程中，一位教授记录了三个作业(2个作业和1个考试)的分数，按照学生交作业的顺序:\nBill Jones:1:35 Sara Tims:2:45 Sara Tims:1:39 Bill Jones:1:42 Bill Jones:E1:72 在一个名为 MATH-101 的简单文本文件中。您可以假设有更多的学生，而这只是数据文件的一个代表性块。在这个文件中，每行记录学生的姓名、作业编号(作业编号为1,2，第一次考试为E1)和学生获得的原始分数。 教授使用另一个扩展名为 .std 的文件存储她课程的学生名单:\nBill Jones Ana Smith Sara Tims Frank Horza 除了 MATH-101，这位教授还教其他课程，并设计了一个扩展名为 .cfg 的配置文件来存储给定课程的配置格式。她这样做的目的是在她的其他课程中也使用它。配置文件格式指定了作业的类型、作业编号、作业的总分以及作业对最终课程成绩的贡献。她的数学101课程的 .cfg 文件如下:\nHomework:1:50:25 Homework:2:50:25 Exam:1:75:50 您的任务是创建一个名为 report.p6 的程序。该程序生成一个报告，其中列出了班级中每个学生的姓名、每次作业的分数和最终成绩。该程序应该假设具有扩展名 .cgf 和 .std 的文件在执行该程序的目录中可用。另一方面，包含学生成绩的文件必须通过命令行传递给程序。为了简单起见，您可以假设每个文件都是根据课程命名的。对于她的数学101课程，教授会有以下的文件: MATH-101, MATH-101.std 和 MATH-101.cfg，还有脚本 report.p6。\n分析 如果我们看问题陈述，我们可以把所有的东西分成三类:课程，学生和作业。就目前而言，每个类别都可以被视为具有状态和行为的类。我们将从最简单的类别，作业类别，到最一般的类别，课程类别。为了做到这一点，我们首先学习 Raku 中类的定义。\nRaku 类 类定义 在 Raku 中，类是用 class 关键字定义的，通常后面跟着类名（通常以首字母大写形式）。\nclass Name-of-class { } 属性定义 所有的 Raku 属性默认都是私有的，这意味着它们只能在类中访问。属性是使用 has 关键字和 ! twigil 定义的。\nclass Name-of-class { has $!attribute-name; } 属性也可以使用 . twigil。这个 twigil 声明，应该生成一个以属性命名的只读访问器方法:\nclass Name-of-class { has $.attribute-name; # $!attribute-name + attribute-name() } 这等价于:\nclass Name-of-class { has $!attribute-name; method attribute-name { return $!attribute-name; } } 生成的访问器方法是只读的，因为属性默认是只读的(从类的外部)。为了允许通过访问器方法修改属性，必须向属性添加 is rw 特质。其他特质也可以用于属性。有关特质的更多信息，请参阅文档。\n作业类 让我们从详细描述 Assignment 类所需的属性开始:\ntype——作业的类型(作业或考试)。 number——作业编号(1,2等)。 score——这个作业的分数。 raw——给定作业的最大点数。 contrib——作业对最终成绩的贡献。 adjusted-score——基于 score，raw 和 contrib 属性的格式化的分数。 config——一个包含课程配置文件的散列。 关于 config 哈希，每个赋值的信息将存储在一个数组中，这个数组将根据每个赋值(作业或考试)在数组中的赋值号进行索引。由于没有零赋值，这个槽将用于存储已处理的赋值总数。MATH-101.cfg 的 config 散列是这样的:\n%( Homework =\u0026gt; [ {total =\u0026gt; 2}, (50, 25), (50, 25) ], Exam =\u0026gt; [ {total =\u0026gt; 1}, (75, 50) ], ) 这导致了下面的类:\nclass Assignment { # attributes with a read-only accessor has $.type; has $.number; has $.score; has %.config; # given that a hash is used, the $ (scalar) is replaced # with a % (hash). # private attributes hence the ! twigil. has $!raw; has $!contrib; has $!adjusted-score; } 为了创建 Assignment 类的实例并初始化它，我们将命名参数传递给 Raku 提供的默认的 new 构造函数方法，并由所有类继承:\n# create a new instance object and initialize its attributes. # The new constructor is called on Assignment, the type object of # the class Assignment. my $assign01 = Assignment.new( type =\u0026gt; \u0026#39;Homework\u0026#39;, # named argument :number(2), # Alternate colon-pair syntax for named arguments :score(45), :config(%( Homework =\u0026gt; [ {total =\u0026gt; 2}, (50, 25), (50, 25) ], Exam =\u0026gt; [ {total =\u0026gt; 1}, (75, 50) ]) ), ); # accessing the instance object\u0026#39;s attributes # through their accessor method: say $assign01.type(); # OUTPUT: \u0026#39;Homework\u0026#39; say $assign01.number(); # OUTPUT: 2 say $assign01.score(); # OUTPUT: 45 注意: 如果属性是用 ! twigil 定义的，那么不能使用 new 构造函数方法来初始化它。正如前面提到的，这是由于属性是私有的，这意味着它不能从类外部访问，甚至不能通过new 构造函数访问。但是，这个默认行为可以用 BUILD 子方法重写。有关 BUILD 子方法的更多信息，请参阅文档。\n我们已经知道赋值的类型总是字符串，数字总是整数，调整后的分数是 rational 等等，所以我们也可以相应地键入属性:\nclass Assignment { has Str $.type; has Int $.number; has $.score; has %.config; has $!raw; has $!contrib; has Rat $!adjusted-score; } 有关类型的更多信息，请参阅文档。 Assignment 类的行为在很大程度上取决于每个学生的数据，但我们对 Student 类的结构还一无所知。出于这个原因，我们将继续学习 Student 类，稍后再回到这个话题。\nStudent 类 与 Assignment 类类似，让我们从详细描述 Assignment 类将具有的属性开始:\nname——表示学生名字的字符串。 assign-num——作业的数量(一个整数)。 assignments——我们希望将作业分成不同的类型(作业或考试)，所以我们将使用哈希。每个键将指向它们各自的赋值对象的数组。 config——在 Assignment 类中描述的课程的配置文件。 这导致了下面的类:\nclass Student { has Str $.name; has Int $!assign-num = 0; has %!assignments; has %.config; } 我们应该能够将作业附加到 Student 类的一个实例中，并从中获得作业、考试等等。这些行为表示类的行为，并通过使用方法来实现。\n公共和私有方法 正如在 Raku 介绍中所述，“方法是对象的子例程，就像子例程一样，它们是打包一组功能的方法，它们接受参数，具有签名，可以定义为 multi。”\nRaku 方法是使用 method 关键字定义的，它是在 invocant 上使用点(.)调用的。默认情况下，所有方法都是公共的。但是，方法可以通过在名称前面加上感叹号(!)来定义为私有的。在这种情况下，使用感叹号而不是点来调用它们。\n有了这些知识，我们现在将向 Student 类添加一个 add-assignment 方法。这个方法需要作业的编号(1、2、3等，或者E1、E2等)和收到的分数。不会提供作业的类别，但我们可以使用编号来确定:\nclass Student { # same attributes as before. method add-assignment( $number is copy, $score ) { my $type; # determine the assignment type. if $number ~~ s/^E// { # do replacement in place $type = \u0026#39;Exam\u0026#39;; # to obtain the exam\u0026#39;s number. } else { $type = \u0026#39;Homework\u0026#39;; } # coerce assignment number to an integer. $number .= Int; # create an Assignment object from available information. my $assign-obj = Assignment.new( type =\u0026gt; $type, number =\u0026gt; $number, score =\u0026gt; $score, config =\u0026gt; %!config, ); # add assignment into its type indexed by its number. %!assignments{$type}[$number] = $assign-obj; # increment number of assignments by 1. $!assign-num++; } } 为了展示私有方法的创建，我们将在 add-assignment 方法中把创建 Assignment 对象外包给一个名为 create-assignment 的私有方法，该方法返回一个 Assignment 对象:\nclass Student { # same as before # notice the ! twigil before the method\u0026#39;s name. method !create-assignment( Str $type, Int $number, $score ) { return Assignment.new( type =\u0026gt; $type, number =\u0026gt; $number, score =\u0026gt; $score, config =\u0026gt; %!config, ); } method add-assignment( $number is copy, $score ) { # same code as before. # create an Assignment object with this information. my $assign-obj = self!create-assignment($type, $number, $score); # same code as before. } } 正如您可能已经注意到的，self 关键字用于调用 add-assignment 方法中的 create-assignment 方法。self 是绑定到 invocant 的特殊变量，在方法内部可用。此变量可用于调用程序上的进一步方法。其内部方法调用如下:\nself!method($arg) 用于私有方法。\nself.method($arg) 用于公共方法。 $.method($arg) 是它的快捷形式。注意，方法参数(位置和命名)的冒号语法只支持在使用 self 时调用方法，而不支持快捷形式。所以:\nself.method: arg1, arg2\u0026hellip; is supported.\n$.method: arg1, arg2\u0026hellip; is not supported.\n方法的签名总是传递 self 作为它的第一个参数。但是，我们可以通过提供第一个参数和一个冒号来为方法指定一个显式调用者。此参数将充当方法的调用方，并允许方法引用显式调用的对象。 例如:\nclass Person { has $.name = \u0026#39;John\u0026#39;; # attributes can be set to default values. # here self refers to the object, albeit implicitly. method introduce() { say \u0026#34;Hi, my name\u0026#39;s \u0026#34;, self.name(), \u0026#34;!\u0026#34;; # ^^^^^^^^^^^ calling method on self } # here $person explicitly refers to the object. method alt-introduce( $person: ) { say \u0026#34;Hi, my name\u0026#39;s \u0026#34;, $person.name(), \u0026#34;!\u0026#34;; # ^^^^^^^^^^^^^^ calling method on $person } } Person.new.introduce(); # OUTPUT: Hi, my name\u0026#39;s John! Person.new.alt-introduce(); # OUTPUT: Hi, my name\u0026#39;s John! TWEAK 子方法 我们回到 Assignment 类。目前，类的使用者可以在创建 Assignment 对象时传递他们想要的任何东西。出于这个原因，我们可能想检查作业类型和作业编号是否已知。我们可能要做的另一件事是修改 raw 属性和 contrib 属性，它们的值依赖于来自配置文件的数据。同样的情况也适用于 adjusted-score 属性，其值取决于 raw 属性、contrib 属性和 score 属性。\nRaku 提供了一种通过 TWEAK 子方法检查对象构造后的内容或修改属性的简单方法。简单地说，子方法是不被子类继承的方法。查看文档以获得关于 TWEAK 子方法的更多信息。 让我们在 Assignment 类中添加 TWEAK 子方法:\nclass Assignment { # same attributes as before. # use submethod keyword, instead of method. submethod TWEAK() { # assignment type is either \u0026#39;Homework\u0026#39; or \u0026#39;Exam\u0026#39;. unless $!type eq \u0026#39;Homework\u0026#39; | \u0026#39;Exam\u0026#39; { die \u0026#34;unknown assignment type: $!type\u0026#34;; } # check if provided assignment type is known. unless %!config{$!type}[$!number] { die \u0026#34;unrecognized $!type number: $!number\u0026#34;; } # update raw and contrib value from configuration data. ($!raw, $!contrib) = %!config{$!type}[$!number]; # calculate the value of the adjusted score (rounded to two # decimal places). $!adjusted-score = sprintf \u0026#34;%.2f\u0026#34;, $!score / ($!raw/$!contrib); # update type with assignment number. This will be useful # when printing the report for a specific assignment. $!type = $!type eq \u0026#39;Homework\u0026#39; ?? \u0026#34;Homework $!number\u0026#34; !! \u0026#34;Exam $!number\u0026#34;; } } 完成 ASSIGNMENT 和 STUDENT 类 ASSIGNMENT 类 我们想为特定的作业打印一个报告，因此我们将添加一个 formatted-score 方法，它将返回调整后的分数，并将一个 print-report 方法返回给 Assignment 类。print-report 方法应打印以下格式的作业报告:\ntype number: Raw = score/raw : Adjusted = adjusted-score/contrib-final 例子:\nHomework 1: Raw = 42/50 : Adjusted = 8.40/10 Exam 1: Raw = 70/75 : Adjusted = 8.40/10 class Assignment { # same code as before method formatted-score { return $!adjusted-score; } method print-report { print \u0026#34;$!type: raw = $!score/$!raw : \u0026#34;; say \u0026#34;Adjusted = $!adjusted-score/contrib\u0026#34;; } } STUDENT 类 现在，我们将添加 get-home-works 和 get-exams 方法，这些方法将返回 Assignment 对象列表。我们还将为打印学生报告添加 print-report 方法。此方法应以下列格式打印学生报告:\nstudent: type number: Raw = score/raw : Adjusted = adjusted-score/100 ... Final Course Grade: final-total/100 class Student { # same code as before # we use the grep() function to discard possibly empty # elements in either array. method get-homeworks { return %!assignments\u0026lt;Homework\u0026gt;[1..*].grep: { $_ }; } method get-exams { return %!assignments\u0026lt;Exam\u0026gt;[1..*].grep: { $_ }; } method print-report { say $!name, \u0026#34;: \u0026#34;; # print message and return if student\u0026#39;s doesn\u0026#39;t have # neither assignment type unless self.get-homeworks() || self.get-exams() { say \u0026#34;\\tNo records for this student.\u0026#34;; return; } my ($final-total, $a_count, $e_count) = (0, 0, 0); # Loop over student\u0026#39;s assignments (either Homework or Exam), # print assignment\u0026#39;s report and update final total. for self.get-homeworks() -\u0026gt; $homework { print \u0026#34;\\t\u0026#34;; $homework.print-report(); $final-total += $homework.formatted-score(); $a_count++; } for self.get-exams() -\u0026gt; $exam { print \u0026#34;\\t\u0026#34;; $exam.print-report(); $final-total += $exam.formatted-score(); $e_count++; } # check if number of homeworks and exams in config file # matches student\u0026#39;s record of returned homeworks and taken exams. if (%!config\u0026lt;Homework\u0026gt;[0]\u0026lt;total\u0026gt; == $a_count and %!config\u0026lt;Exam\u0026gt;[0]\u0026lt;total\u0026gt; == $e_count ) { say \u0026#34;\\tFinal Course Grade: $final-total/100\u0026#34;; } else { say \u0026#34;\\t* Incomplete Record *\u0026#34;; } # print newline after student\u0026#39;s report. \u0026#34;\u0026#34;.say; } } Course 类 Course 类有以下属性:\ncourse——表示课程名称的字符串。 students——学生和 Students 对象的哈希。 number——这个课程的学生人数。\n这是带有其属性的类:\nclass Course { has Str $.course; has Int $.number; has %!students of Student; # specifying the type of the hash\u0026#39;s values. } 关于方法，我们需要以下几点:\nconfigure-course——使用当前目录中的 .cfg(配置)和 .std (学生列表)文件来配置课程。 student——接受一个学生的名字，并返回一个 Student 对象，前提是它存在。在该类的内部使用所以定义为私有的。 get-roster——返回学生名字的排序列表。 add-student-record——接受一个学生记录(例如，Bill Jones:1:45)，为那个学生查找 Student 对象并添加一个作业。 print-report——打印整个类的报告。 class Course { # same code as before method configure-course { # read content of configuration file. We are to assume that # it has the same name as the course with \u0026#39;.cfg\u0026#39; extension. my $course_file = $!course ~ \u0026#39;.cfg\u0026#39;; my $course_data = $course_file.IO.slurp || die \u0026#34;cannot open $course_file\u0026#34;; # extract the data from file and store it into the # configuration hash. The structure of the configuration # file was discussed in the \u0026#39;The Assignment class\u0026#39; section. my %cfg; for $course_data.lines -\u0026gt; $datum { my ($type, @data) = $datum.split(\u0026#39;:\u0026#39;); # Example: type = \u0026#39;Homework\u0026#39;, data = (1, 50, 25) %cfg{$type}[ @data[0] ] = @data[1..*]; %cfg{$type}[0]\u0026lt;total\u0026gt;++; } # read student list file which has the same name as the course. my $stud_file = $!course ~ \u0026#39;.std\u0026#39;; my $stud_data = $stud_file.IO.slurp || die \u0026#34;cannot open $stud_file\u0026#34;; # Loop over the student list and create a Student object for # each student and populate the hash of students and Student objects. for $stud_data.lines -\u0026gt; $student { %!students{ $student.trim } = Student.new( name =\u0026gt; $student.trim, config =\u0026gt; %cfg, ); $!number++; } } # return Student object if it exists. method !student( Str $stud-name ) { return %!students{$stud-name} || Nil; } # order student names by last name and return list. method get-roster { %!students.keys # student names list ==\u0026gt; map ({ ( $_, $_.words ).flat }) # (full name, first, last) ==\u0026gt; sort ({ $^a[2] cmp $^b[2] }) # sort list by last names ==\u0026gt; map ({ $_[0] }) # get name from sorted list ==\u0026gt; my @list; return @list; } # add record to Student object. method add-student-record( @record ) { my ($name, @remaining) = @record; # get Student object and add assignment to it. my $student = self.student($name); my ($num, $score) = @remaining; $student.add-assignment($num, $score); } # print report for all students in the course. method print-report { say \u0026#34;Class report: course = $!course, students = $!number\u0026#34;; # loop over sorted students list and print each student\u0026#39;s report. for self.get-roster() -\u0026gt; $name { self!student($name).print-report(); } } } 自定义构造函数 我们希望使用反映所创建内容的构造函数方法，而不是使用 new 构造函数从特定的类创建对象。例如，Course 类的 create-course 构造函数。我们还希望使用位置参数，而不是在 new 构造函数中使用命名参数。在 Raku 中创建构造函数相当容易;只需要创建一个方法并返回 blessed 后的参数:\nclass Course { # same code as before method create-course( $course ) { return self.bless( course =\u0026gt; $course, ); } # same code as before } # In addition to: my $class01 = Course.new( course =\u0026gt; \u0026#39;GEO-102\u0026#39; ); # We can also create a Course instance like this now: my $class02 = Course.create-course( \u0026#39;Math-101\u0026#39; ); 我们不只是写 return self.bless($course)，因为 bless 方法需要一组命名参数来为每个属性提供初始值。正如前面提到的，私有属性实际上是私有的，因此对于用! twigil 定义的属性这还不够。为此，必须使用 BUILD 子方法，bless 方法调用这个全新的对象。有关 BUILD 子方法的更多信息，请参阅子方法和构造函数。\n实例和类属性 我们已经讨论了实例属性，只是没有将它们标识为实例属性。实例属性是一个类的特定实例所拥有的属性，这意味着同一个类的两个不同的对象实例是不同的。例如，前几节中的实例 $class01 和 $class02 都具有相同的实例属性(course、number 等)，但是值不同。在 Raku 中，任何用关键字 has 声明的属性都是一个实例属性。\n另一方面，类属性是属于类本身而不是它的对象的属性。与实例属性不同，类属性由类的所有实例共享。\n在 Raku 中，类属性是使用关键字 my 或 our(而不是 has)来声明的，这取决于作用域(例如，my $class-var;)。与实例属性类似，用 . twigil 生成一个访问器方法(例如，my $.class-var;)的类属性。有关类属性的更多信息，请参阅文档。\n我们还没有看到类属性，但是我们现在要创建一个。例如，我们想知道我们实例化的课程的数量。为此，我们可以在 Course 类中创建一个类属性，它跟踪实例化的 Course 对象的数量。\n每当创建新对象时这个类属性必须更新，因此我们必须修改默认的 new 和 create-course 构造函数:\nclass Course { # other attributes. my Int $.course-count = 0; # class attribute with read-only accessor method create-course( $course ) { $.course-count++; # updating the class attribute. return self.bless( course =\u0026gt; $course, ); } # we still want to pass named parameters to the new # hence the \u0026#39;:\u0026#39; before the parameter. method new( :$course ) { $.course-count++; return self.bless( course =\u0026gt; $course, ); } # same code as before } for 1..5 { Course.create-course(\u0026#39;PHYS-110\u0026#39;); Course.new(course =\u0026gt; \u0026#39;BIO-112\u0026#39;); } # accessing the class attribute\u0026#39;s value by calling # its accessor method on the class itself. say Course.course-count(); # OUTPUT: 10 实例方法和类方法 实例方法需要在其上调用对象实例。它通常以 $object.instance-method() 的形式表示。例如，print-report() 是 Course 类的一个实例方法，需要调用该类的一个实例(例如，$class.print-report())。\n另一方面，类方法作为一个整体属于类，因此它不需要类的实例。它通常用 class.class-method() 表示。例如，new 构造函数是直接在类上调用的类方法，而不是类的实例。\n前面我们提到，显式调用者可以传递给方法。除了显式地引用对象外，方法签名中提供的调用者还允许通过使用类型约束将方法定义为实例方法或类方法。特殊变量 ::?CLASS 可用于在编译时提供类名，并结合 :U (如 ::?CLASS:U)用于类方法，或 :D(如 ::?CLASS:D)用于实例方法。顺便说一下，在 Raku 行话中，:U 和 :D 被称为 smileys。\ncreate-course 方法打算仅作为类方法使用，但是，到目前为止，没有任何东西阻止它在实例中使用。为了避免这种情况，我们可以在 invocant 上使用带有 :U 类型修饰符的特殊变量 ?::CLASS，这会导致方法主动拒绝对实例的调用，并且只允许通过type 对象进行调用。\nclass Course { # other attributes method create-course( ::?CLASS:U: $course ) { $.course-count++; return self.bless( course =\u0026gt; $course, ); } method new( ::?CLASS:U: :$course ) { $.course-count++; return self.bless( course =\u0026gt; $course, ); } # same code as before } # Invocations on the Course class works as expected. my $math = Course.new(name =\u0026gt; \u0026#39;MATH-302\u0026#39;); my $phys = Course.create-course(\u0026#39;LING-202\u0026#39;); # Invocations on Course instances fail. $math.new(name =\u0026gt; \u0026#39;MATH-302\u0026#39;); # OUTPUT: Invocant of method \u0026#39;new\u0026#39; must be # a type object of type \u0026#39;Course\u0026#39;, not an # object instance of type \u0026#39;Course\u0026#39;. Did you # forget a \u0026#39;multi\u0026#39;? $phys.create-course(\u0026#39;LING-202\u0026#39;); # OUTPUT: Type check failed in binding to # parameter \u0026#39;$course\u0026#39;; expected Course but # got Str (\u0026#34;Phys-302\u0026#34;) 使用 COURSE 类 假设我们有 MATH-101.cfg(课程设置)，MATH-101.std(学生名单)和 MATH-101(学生记录)有了问题陈述中提供的信息，我们可以使用 Course 类(与 Student 和 Assignment 在同一个文件中)，如下:\n# For now, we\u0026#39;ll specify the course name manually. my $class = Course.new( course =\u0026gt; \u0026#39;MATH-101\u0026#39; ); # set up the course. Remember that the script assumes # \u0026#39;MATH-101.cfg\u0026#39; and \u0026#39;MATH-101.std\u0026#39; are in the current directory. $class.configure-course(); # filename of student record. my $data = \u0026#39;MATH-101\u0026#39;; # loop over each line of student record and feed it to # the corresponding student. for $data.IO.lines -\u0026gt; $line { $class.add-student-record( $line.split(\u0026#39;:\u0026#39;) ); } # print course report. $class.print-report(); 运行该程序之后，它打印出：\nClass report: course = MATH-101, students = 4 Frank Horza: No records for this student. Bill Jones: Homework 1: Raw = 35/50 : Adjusted = 17.50/25 Homework 2: Raw = 42/50 : Adjusted = 21.00/25 Exam 1: Raw = 72/75 : Adjusted = 48.00/50 Final Course Grade: 86.5/100 Anne Smith: No records for this student. Sara Tims: Homework 1: Raw = 39/50 : Adjusted = 19.50/25 Homework 2: Raw = 45/50 : Adjusted = 22.50/25 * Incomplete Record * 完成程序 您可能注意到，在创建 Course 实例之后，我们必须调用 configure-course。每次创建一个 Course 实例后都要这样做，这样我们就可以添加一个 TWEAK 方法来执行这个任务:\nclass Course { # same code as before submethod TWEAK($course:) { # set up course after object creation $course.configure-course(); } # same code as before } 问题陈述说明程序应该通过命令行接收学生的成绩。Raku 使命令行参数解析非常容易，我们只需要定义一个 MAIN 子例程来获取一个位置参数，即以包含学生成绩的课程命名的文件。要了解关于 MAIN 子例程的更多信息，请阅读本文或参考文档。\n让我们创建一个 report.p6 文件，其中也存储了 Assignment, Student 和 Course 类:\nuse v6; # assume the Assignment, Student, and Course class are here. sub MAIN( $course ) { # CLI arguments are stored in @*ARGS. We take the first one. my $class = Course.create-course( @*ARGS[0] ); for $course.IO.lines -\u0026gt; $line { $class.add-student-record( $line.split(\u0026#39;:\u0026#39;) ); } # printing the class report. $class.print-report(); } 假设这样:\n$ ls MATH-101 MATH-101.cfg MATH-101.std report.p6 然后:\n$ raku report.p6 MATH-101 应该打印出报告。\n继承 我们已经完成了问题陈述所提出的任务，但是我们将在这里讨论的主题在OOP范例中非常重要。Student 类有一个属性，用于存储学生已经注册的课程。现在，让我们假设我们想为兼职学生创建一个 PTStudent 类，它限制了一个学生可以注册的课程数量。考虑到兼职学生肯定是学生，我们可能会被诱使将 Student 类中的代码复制到 PTStudent 中，然后添加必要的约束。虽然技术上很好，但是代码的重复被认为是次优的、容易出错的和概念上有缺陷的工作。相反，我们可以使用一种称为继承的机制。\n简单地说，继承允许从现有类派生一个新类(带有修改)。这意味着您不必创建完整的新类来复制现有类的部分。在这个过程中，继承的类是父类的孩子(或子类)。\n在 Raku 中，is 关键字定义了继承。\n# Assume Student is defined here. class PTStudent is Student { # new attributes particular to PTStudent. has @.courses; my $.course-limit = 3; # new method too. method add-course( $course ) { @.courses == $.course-limit { die \u0026#34;Number of courses exceeds limit of $.course-limit.\u0026#34;; } push @.courses, $course; } } my $student2 = PTStudent.new( name =\u0026gt; \u0026#34;Tim Polaz\u0026#34;, config =\u0026gt; %(), ); $student2.add-course( \u0026#39;BIO-101\u0026#39; ); $student2.add-course( \u0026#39;GEO-101\u0026#39; ); $student2.add-course( \u0026#39;PHY-102\u0026#39; ); $student2.courses.join(\u0026#39; \u0026#39;); # OUTPUT: \u0026#39;BIO-101 GEO-101 PHY-102\u0026#39; $student2.add-course( \u0026#39;ENG-220\u0026#39; ); # (error) OUTPUT: Number of courses exceeds # limit of 3. PTStudent 类继承了其父类 Student 的属性和方法。除此之外，我们还为它添加了两个新属性和一个新方法。\n如果我们愿意，我们可以重新定义从 Student 类继承的方法。这个概念被称为覆盖，它允许为父类和子类提供每个类的通用方法实现。\n除了单继承之外，Raku 中还可以有多重继承(一次从多个类继承)。查看文档以获得关于它的更多信息。\n角色 与类类似，角色携带状态和行为。然而，与类不同，角色是用来描述对象行为的特定组件的。在 Raku 中，角色是用 role 关键字定义的，并使用 does 特质(与用于继承的 is 相反)应用于类或对象。\n# Assume Student is defined here role course-limitation { has @.courses; my Int $.course-limit = 3; method add-course( $course ) { if @.courses == $.course-limit { die \u0026#34;Number of courses exceeds limit of $.course-limit.\u0026#34;; } @.courses.push($course); } } # inheriting from the Student class and applying role. class PTStudent is Student does course-limitation { } my $student2 = PTStudent.new( name =\u0026gt; \u0026#34;Tim Polaz\u0026#34;, config =\u0026gt; %() ); $student2.add-course( \u0026#39;MATH-101\u0026#39; ); $student2.add-course( \u0026#39;GEO-101\u0026#39; ); $student2.add-course( \u0026#39;PHY-102\u0026#39; ); say $student2.courses.join(\u0026#39; \u0026#39;); # OUTPUT: \u0026#39;MATH-101 GEO-101 PHY-102\u0026#39; $student2.add-course( \u0026#39;ENG-220\u0026#39; ); # (error) OUTPUT: Number of courses exceeds # limit of 3. 我们已经演示了角色是如何工作的，但这并没有展示它们的完整画面。例如，就像多重继承一样，角色可以在一个类中多次实现(例如，class Name does role1 does role2 does ...)。但是，与多重继承不同的是，如果多个角色的应用程序出现冲突，则会抛出编译时错误。对于多重继承，冲突不会被认为是错误，而是会在运行时解决。\n简而言之，角色可以被认为是继承的另一种选择; 程序员不是通过子类化来扩展类层次结构，而是使用为类的行为提供补充行为的角色来组成类。\n内省 内省 是一个对象能够收集关于自身和其他对象的信息的过程，如类型、方法、属性等。\n在 Raku 中，内省可以通过以下结构得到促进:\n.WHAT——返回与对象关联的类型对象。 .perl——返回一个字符串，该字符串可以作为 Raku 代码执行。 .^name——返回类名。 ^attributes——返回对象的所有属性。 ^methods——返回可以在该对象上调用的所有方法。 ^parents——返回对象的父类。 ~~ 是智能匹配操作符。如果对象是由正在进行比较的类或其任何它的继承类创建的，则计算为 True。 .^ 语法是元方法调用。使用这种语法而不是单个点表示对其元类的方法调用，元类是管理所有类的属性的类。事实上, obj.^meth 相当于obj.HOW.meth(obj), 其中 meth 是一个特定的方法。\n使用上一节中的对象 $student2:\nsay $student2.WHAT; # OUTPUT: (PTStudent) say $student2.perl; # OUTPUT: PTStudent.new(name =\u0026gt; \u0026#34;Tim Polaz\u0026#34;, # config =\u0026gt; {}, courses =\u0026gt; []) say $student2.^name; # OUTPUT: PTStudent say $student2.^attributes; # OUTPUT: (Str $!name Associative %!config Mu # $!assig-num Associative %!assignments # Positional @!courses) say $student2.^methods; # OUTPUT: (course-limit add-course name # add-assignment courses config get-exams # print-report get-homeworks BUILDALL) say $student2.^parents; # OUTPUT: ((Student)) say $student2 ~~ PTStudent; # True say $student2 ~~ Student; # True say $student2 ~~ Str; # False 如您所见，通过内省，您可以从类的实例中学到很多东西。\n内省并不仅限于程序员定义的类。内省是 Raku 的核心，它是一个非常有用的工具，可以帮助您了解内置类型，并从整体上了解该语言。\n结论 在这篇文章中，我们学习了如何定义类、私有和公共属性以及私有和公共方法。我们还学习了如何创建自定义构造函数，并将其调用限制在类或类的实例中。此外，我们还简要讨论了如何通过继承和 Raku 中的角色来促进代码重用。最后，我们讨论了内省的过程，以及如何以最简单的形式学习对象。\n关于 report.p6，我们局限于问题陈述，但是程序的用户可以从额外的功能中获益。例如，可以修改程序，为单个学生提供交互式查询，以便学生从命令行查找。此外，该程序可以读取多个课程，然后查询它们，检索并打印一个特定学生的记录。\n下面我链接了我们在这里创建的程序和实现前面提到的额外功能的程序。希望这整个教程是有益的和有用的。\n链接:\n整个 report.p6 report.p6 有额外的功能。我还添加了一个简单的函数来给课程名称上色，以便更好地将它们与其他文本区分开来。对于一些课程文件，输出结果如下: 资源 Raku Introduction Raku Documentation Classes and objects Object orientation Raku Advent Calendar The humble type object Classes, attributes, methods and more Introspection Basic OO in Raku (slides) Let’s build an object Think Raku The problem statement was an adaptation from a section titled Grades: an object example in the book Elements of Programming with Perl by Andrew L. Johnson. "},"name":"Raku 面向对象简单入门","published":"2018-10-03T21:13:31+08:00","summary":"序言 介绍 本教程最多只关注 Raku 中的面向对象编程(OOP)的基本知识。因此，对语句/表达式、变量、条件、循环、子例程(函数)等有一个基本的了解是很重要的，如果不在 Raku 中，至少在另一种编程语言中是这样的。此外，您至少应该对类、属性和方法有一般的了解。作为对 Raku 的介绍，我强烈推荐 Raku introduction。下一步是 Raku 文档。\n确保你已经设置好了 Raku 编译器。如果你还没有设置好，请看这里。 从这里开始，你可能会厌倦代词“我们”，但它的使用是经过深思熟虑的。这是一个教程，希望你能跟上。所以，是的，我们在一起工作，你应该做好准备。顺便说一下，本教程是冗长的，这是故意的，但也是手把手教程的副产品。\n问题陈述 我们将从现实生活中的问题开始，并尝试以面向对象的方式对其进行建模。问题陈述如下: 在她的数学101课程中，一位教授记录了三个作业(2个作业和1个考试)的分数，按照学生交作业的顺序:\nBill Jones:1:35 Sara Tims:2:45 Sara Tims:1:39 Bill Jones:1:42 Bill Jones:E1:72 在一个名为 MATH-101 的简单文本文件中。您可以假设有更多的学生，而这只是数据文件的一个代表性块。在这个文件中，每行记录学生的姓名、作业编号(作业编号为1,2，第一次考试为E1)和学生获得的原始分数。 教授使用另一个扩展名为 .std 的文件存储她课程的学生名单:\nBill Jones Ana Smith Sara Tims Frank Horza 除了 MATH-101，这位教授还教其他课程，并设计了一个扩展名为 .cfg 的配置文件来存储给定课程的配置格式。她这样做的目的是在她的其他课程中也使用它。配置文件格式指定了作业的类型、作业编号、作业的总分以及作业对最终课程成绩的贡献。她的数学101课程的 .cfg 文件如下:\nHomework:1:50:25 Homework:2:50:25 Exam:1:75:50 您的任务是创建一个名为 report.p6 的程序。该程序生成一个报告，其中列出了班级中每个学生的姓名、每次作业的分数和最终成绩。该程序应该假设具有扩展名 .cgf 和 .std 的文件在执行该程序的目录中可用。另一方面，包含学生成绩的文件必须通过命令行传递给程序。为了简单起见，您可以假设每个文件都是根据课程命名的。对于她的数学101课程，教授会有以下的文件: MATH-101, MATH-101.std 和 MATH-101.cfg，还有脚本 report.p6。\n分析 如果我们看问题陈述，我们可以把所有的东西分成三类:课程，学生和作业。就目前而言，每个类别都可以被视为具有状态和行为的类。我们将从最简单的类别，作业类别，到最一般的类别，课程类别。为了做到这一点，我们首先学习 Raku 中类的定义。\nRaku 类 类定义 在 Raku 中，类是用 class 关键字定义的，通常后面跟着类名（通常以首字母大写形式）。","type":"entry","url":"http://localhost:1313/raku/2018-10-03-a-naive-introduction-to-object-orientation-in-perl-6/"},{"content":{"html":"\u003ch1 id=\"声明\"\u003e声明\u003c/h1\u003e\n\u003cp\u003e本章翻译仅用于 Raku 学习和研究, 请支持电子版或\u003ca href=\"https://www.amazon.co.uk/Learning-Perl-6-Brian-Foy/dp/149197768X/ref=sr_1_1?ie=UTF8\u0026amp;qid=1536753267\u0026amp;sr=8-1\u0026amp;keywords=Learning+Perl+6\"\u003e纸质版\u003c/a\u003e。\u003c/p\u003e\n\u003ch1 id=\"第二十章-高级话题\"\u003e第二十章. 高级话题\u003c/h1\u003e\n\u003cp\u003eIn such a short book I don’t have enough pages to show you everything that you can do. This chapter is a brief survey of some of the features I would have liked to explain in more detail. You now know these exist and you can investigate them further on your own.\u003c/p\u003e\n\u003cp\u003e在这么短的书中，我没有足够的页面向你展示你可以做的一切。本章简要介绍了一些我希望更详细解释的功能。你现在知道这些存在，你可以自己进一步研究它们。\u003c/p\u003e\n\u003ch1 id=\"单行\"\u003e单行\u003c/h1\u003e\n\u003cp\u003eYou can run \u003cem\u003eraku\u003c/em\u003e one-liners. These are programs that you compose completely on the command line. The \u003ccode\u003e-e\u003c/code\u003eswitch takes an argument that is the program:\u003c/p\u003e\n\u003cp\u003e你可以运行 raku 单行。这些完全是你在命令行上编写的程序。 \u003ccode\u003e-e\u003c/code\u003e 开关接受一个参数，即程序：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku -e \u0026#39;put \u0026#34;Hello Raku\u0026#34;\u0026#39;\nHello Raku\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e-n\u003c/code\u003e switch runs the program once for each line of input. The current line is in \u003ccode\u003e$_\u003c/code\u003e. This one uppercases and outputs the line:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e-n\u003c/code\u003e 开关为每行输入运行一次程序。当前行是 \u003ccode\u003e$_\u003c/code\u003e。这个单行大写一行并输出该行：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku -n -e \u0026#39;.uc.put\u0026#39; *.pod\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can load a module with \u003ccode\u003e-M\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e你可以使用 \u003ccode\u003e-M\u003c/code\u003e 加载模块：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku -MMath::Constants -e \u0026#39;put α\u0026#39;\n0.0072973525664\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"declarator-block-comments\"\u003eDeclarator Block Comments\u003c/h1\u003e\n\u003cp\u003eThe parser doesn’t discard all comments. It remembers special comments and attaches them to the subroutine. \u003ccode\u003e#|\u003c/code\u003e comments attach themselves to the subroutine after them and \u003ccode\u003e#=\u003c/code\u003e comments attach themselves to the subroutine before them. These comments are available through the \u003ccode\u003e.WHY\u003c/code\u003e meta-method:\u003c/p\u003e\n\u003cp\u003e解析器不会丢弃所有的注释。它会记住特殊注释并将它们附加到子例程中。 \u003ccode\u003e#|\u003c/code\u003e 注释将它们附加到它们之后的子例程中，并且 \u003ccode\u003e#=\u003c/code\u003e 注释将它们自身附加到它们之前的子例程中。这些注释可通过 \u003ccode\u003e.WHY\u003c/code\u003e 元方法获得：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e#| Hamadryas is a sort of butterfly\nclass Hamadryas {\n\n    #| Flap makes the butterfly go\n    method flap () {\n\n        }\n    }\n\nHamadryas.WHY.put;\nHamadryas.^find_method(\u0026#39;flap\u0026#39;).WHY.put;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe output is the combination of all the comments attached to that subroutine:\u003c/p\u003e\n\u003cp\u003e输出是附加到该子例程的所有注释的组合：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eHamadryas is a sort of butterfly\nFlap makes the butterfly go\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis is the sort of thing that’s handy in an integrated development environment to grab a description of the thing you are trying to use. It’s also useful when you are debugging something—that is, it’s useful if the developer documented their code.\u003c/p\u003e\n\u003cp\u003e在集成开发环境中，这种方法很方便，可以获取你尝试使用的内容的描述。当你调试某些内容时，它也很有用 - 也就是说，如果开发人员记录了他们的代码，那么它很有用。\u003c/p\u003e\n\u003ch1 id=\"feed-operators\"\u003eFeed Operators\u003c/h1\u003e\n\u003cp\u003eThe feed operators decide which way information flows. Here’s a list-processing pipeline that has a \u003ccode\u003e.grep\u003c/code\u003e, a \u003ccode\u003e.sort\u003c/code\u003e, and finally a \u003ccode\u003e.map\u003c/code\u003e. What they do doesn’t matter as much as their order:\u003c/p\u003e\n\u003cp\u003efeed 操作符决定信息的流向。这是一个列表处理管道，它有一个 \u003ccode\u003e.grep\u003c/code\u003e，一个 \u003ccode\u003e.sort\u003c/code\u003e，最后一个 \u003ccode\u003e.map\u003c/code\u003e。他们所做的事与顺序无关紧要：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @array = @some-array\n    .grep( *.chars \u0026gt; 5 )\n    .sort( *.fc )\n    .map( *.uc )\n    ;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe final step is farthest away from the assignment. You might not like that. The leftward feed operator allows you to write this in a way where the data flows in one direction. This flows bottom to top into the new variable:\u003c/p\u003e\n\u003cp\u003e最后一步是离赋值最远的。你可能不喜欢那样。向左的 feed 操作符允许你以数据在一个方向上流动的方式编写代码。下面这个从底部到顶部流入新到变量：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @array \u0026lt;==\n    map(  *.uc         ) \u0026lt;==\n    sort( *.fc         ) \u0026lt;==\n    grep( *.chars \u0026gt; 5  ) \u0026lt;==\n    @some-array\n    ;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNotice that the assignment operator disappeared because the feed operator took care of that.\u003c/p\u003e\n\u003cp\u003e请注意，赋值运算符已消失，因为 feed 运算符负责处理了。\u003c/p\u003e\n\u003cp\u003eThe rightward feed operator goes the other way. The new variable is at the end this time. This is the same thing in the other direction:\u003c/p\u003e\n\u003cp\u003e向右的 feed 操作符走另一条路。这次这个新变量在最后。在另一方向上也是如此：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e@some-array\n    ==\u0026gt; grep( *.chars \u0026gt; 5  )\n    ==\u0026gt; sort( *.fc         )\n    ==\u0026gt; map(  *.uc         )\n    ==\u0026gt; my @array;\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"destructuring-signatures\"\u003eDestructuring Signatures\u003c/h1\u003e\n\u003cp\u003eYou can group parameters with square brackets to create a subsignature. Inside the \u003ccode\u003e[]\u003c/code\u003e you can break down the aggregate into a smaller signature:\u003c/p\u003e\n\u003cp\u003e你可以使用方括号对参数进行分组以创建子签名。在 \u003ccode\u003e[]\u003c/code\u003e内部，你可以将总体分解为较小的签名：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub show-the-arguments ( $i, [$j, *@args] ) {  # slurpy\n    put \u0026#34;The arguments are i: $i j: $j and @args[]\u0026#34;;\n    }\n\nmy @a = ( 3, 7, 5 );\nshow-the-arguments( 1, @a );\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWith that, \u003ccode\u003e$i\u003c/code\u003e gets the first parameter and the \u003ccode\u003e[]\u003c/code\u003e gets the rest. The \u003ccode\u003e[]\u003c/code\u003e destructures the remaining arguments into \u003ccode\u003e$j\u003c/code\u003e and \u003ccode\u003e@args\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e有了它，\u003ccode\u003e$i\u003c/code\u003e 获得第一个参数，\u003ccode\u003e[]\u003c/code\u003e 获得其余参数。 \u003ccode\u003e[]\u003c/code\u003e 将剩余的参数解构为 \u003ccode\u003e$j\u003c/code\u003e 和 \u003ccode\u003e@args\u003c/code\u003e。\u003c/p\u003e\n\u003ch1 id=\"defining-your-own-operators\"\u003eDefining Your Own Operators\u003c/h1\u003e\n\u003cp\u003eYou can create new operators. Almost all of the things that we call “operators” are methods.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003e↑\u003c/code\u003e and \u003ccode\u003e↑↑\u003c/code\u003e represent Knuth arrows. These are higher levels of exponentiation:\u003c/p\u003e\n\u003cp\u003e你可以创建新的运算符。几乎所有我们称之为“运算符”的东西都是方法。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e↑\u003c/code\u003e 和 \u003ccode\u003e↑↑\u003c/code\u003e 代表高德纳箭头。这些是更高的取幂水平：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emulti infix:\u0026lt;↑\u0026gt; ( Int:D \\n, Int:D \\m  --\u0026gt; Int:D )\n    is equiv(\u0026amp;infix:\u0026lt;**\u0026gt;)\n    is assoc\u0026lt;right\u0026gt;\n    { n ** m }\n\nproto infix:\u0026lt;↑↑\u0026gt; ( Int:D \\n, Int:D \\m --\u0026gt; Int:D )\n    is tighter(\u0026amp;infix:\u0026lt;↑\u0026gt;)\n    is assoc\u0026lt;right\u0026gt;\n    { * }\nmulti infix:\u0026lt;↑↑\u0026gt; ( \\n,  0 ) { 1 }\nmulti infix:\u0026lt;↑↑\u0026gt; ( \\n,  1 ) { n }\nmulti infix:\u0026lt;↑↑\u0026gt; ( \\n, \\m ) { [↑] n xx m }\n\nput 2↑3;  # 2 ** 3 = 8\nput 2↑↑3; # 2 ** 2 ** 2 = 2 ** 4 = 16\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNotice that the definitions allow you to set traits for precedence and associativity. As with other subroutines these are lexically scoped, so they won’t affect other parts of your program.\u003c/p\u003e\n\u003cp\u003e请注意，这些定义允许你设置优先级和关联性的特征。与其他子例程一样，它们是词法作用域的，因此它们不会影响程序的其他部分。\u003c/p\u003e\n\u003ch1 id=\"perl-5-patterns\"\u003ePerl 5 Patterns\u003c/h1\u003e\n\u003cp\u003eIf you like Perl 5 patterns better, or already have some good ones that you’d like to reuse, you can do that. The \u003ccode\u003e:Perl5\u003c/code\u003e adverb tells the match operator to interpret the pattern as a Perl 5 regular expression:\u003c/p\u003e\n\u003cp\u003e如果你更喜欢 Perl 5 模式，或者已经有一些你想要重用的好模式，你可以这样做。 \u003ccode\u003e:Perl5\u003c/code\u003e 副词告诉匹配操作符将模式解释为 Perl 5 正则表达式：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $file = ...;\nfor $file.IO.lines {\n    next unless m:Perl5/\\A\\s+#/;  # no quoting the # in Perl 5\n    .put;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"shaped-arrays\"\u003eShaped Arrays\u003c/h1\u003e\n\u003cp\u003eWant a multidimensional matrix? You can create a shaped array that knows how wide it is in any dimension. Use the \u003ccode\u003e;\u003c/code\u003e to separate the dimensions:\u003c/p\u003e\n\u003cp\u003e想要一个多维矩阵？你可以创建一个定形数组，知道它在任何维度上的宽度。使用  \u003ccode\u003e;\u003c/code\u003e 分开维度：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @array[2;2];\nsay @array; # [[(Any) (Any)] [(Any) (Any)]]\n\n@array[1;0] = \u0026#39;Hamadryas\u0026#39;;\nsay @array; # [[(Any) (Any)] [Hamadryas (Any)]]\n\nmy $n = 0;\nmy $m = 1;\n\n@array[$n;$m] = \u0026#39;Borbo\u0026#39;;\nsay @array; # [[(Any) Borbo] [Hamadryas (Any)]]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can extend this to higher dimensions:\u003c/p\u003e\n\u003cp\u003e你可以将此扩展到更高的维度：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @array[2;2;3];\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e:shape\u003c/code\u003e adverb can describe the size in each dimension:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e:shape\u003c/code\u003e 副词可以描述每个维度的大小：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @array = Array.new: :shape(3,3);\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOnce you set the limits in each dimension the size is fixed. This means that you can create fixed-size one-dimensional arrays. You won’t be able to use operaters that increase or decrease the number of elements:\u003c/p\u003e\n\u003cp\u003e在每个维度中设置限制后，大小就固定了。这意味着你可以创建固定大小的一维数组。你将无法使用增加或减少元素数量的操作符：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @array[5];\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"typed-containers\"\u003eTyped Containers\u003c/h1\u003e\n\u003cp\u003eThe container types (\u003ca href=\"https://docs.raku.org/type/List.html\"\u003e\u003ccode\u003eList\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://docs.raku.org/type/Array.html\"\u003e\u003ccode\u003eArray\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003eHash\u003c/code\u003e\u003c/a\u003e, and so on) can limit their elements to a particular type. There are a few ways that you can constrain these. Consider this example:\u003c/p\u003e\n\u003cp\u003e容器类型（\u003ca href=\"https://docs.raku.org/type/List.html\"\u003e\u003ccode\u003eList\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://docs.raku.org/type/Array.html\"\u003e\u003ccode\u003eArray\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003eHash\u003c/code\u003e\u003c/a\u003e等）可以将其元素限制为特定类型。有几种方法可以约束这些。考虑这个例子：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy Int @array = 1, 2, 3;\n@array.push: \u0026#39;Hamadryas\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSince a \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e is not an \u003ca href=\"https://docs.raku.org/type/Int.html\"\u003e\u003ccode\u003eInt\u003c/code\u003e\u003c/a\u003e the \u003ccode\u003e.push\u003c/code\u003e fails:\u003c/p\u003e\n\u003cp\u003e由于\u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003e字符串\u003c/code\u003e\u003c/a\u003e不是\u003ca href=\"https://docs.raku.org/type/Int.html\"\u003e\u003ccode\u003eInt\u003c/code\u003e\u003c/a\u003e，因此 \u003ccode\u003e.push\u003c/code\u003e 失败：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eType check failed in assignment to @array\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat form types the \u003ccode\u003e@array\u003c/code\u003e variable. The type is actually \u003ccode\u003eArray[Int]\u003c/code\u003e. You can also bind to the object you construct directly:\u003c/p\u003e\n\u003cp\u003e该形式键入 \u003ccode\u003e@array\u003c/code\u003e 变量。该类型实际上是 \u003ccode\u003eArray [Int]\u003c/code\u003e。你还可以绑定到直接构造的对象：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @array := Array[Int].new: 1, 3, 7;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can create \u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003eHash\u003c/code\u003e\u003c/a\u003ees with objects for keys and many other interesting constraints.\u003c/p\u003e\n\u003cp\u003e你可以使用对象创建\u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003e散列\u003c/code\u003e\u003c/a\u003e以及许多其他有趣的约束。\u003c/p\u003e\n\u003ch1 id=\"nativecall\"\u003eNativeCall\u003c/h1\u003e\n\u003cp\u003eThere’s a builtin foreign function interface named \u003ccode\u003eNativeCall\u003c/code\u003e. You use the \u003ccode\u003eis native\u003c/code\u003e trait to specify the external library. This one connects your program to the argumentless \u003ccode\u003eflap\u003c/code\u003e routine in \u003cem\u003elibbutterfly\u003c/em\u003e:\u003c/p\u003e\n\u003cp\u003e有一个名为 \u003ccode\u003eNativeCall\u003c/code\u003e 的内置外部函数接口。你使用 \u003ccode\u003eis native\u003c/code\u003e  trait 指定外部库。这个程序将你的程序连接到 \u003ccode\u003elibbutterfly\u003c/code\u003e 中的无参数 \u003ccode\u003eflap\u003c/code\u003e 例程：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003euse NativeCall;\nsub flap() is native(\u0026#39;butterfly\u0026#39;) { * }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere are ways to tell \u003ccode\u003eNativeCall\u003c/code\u003e how to translate data structures to “native” types and the other way around.\u003c/p\u003e\n\u003cp\u003e有办法告诉 \u003ccode\u003eNativeCall\u003c/code\u003e 如何将数据结构转换为“原生”类型，反之亦然。\u003c/p\u003e\n\u003ch1 id=\"the-with-topicalizer\"\u003eThe with Topicalizer\u003c/h1\u003e\n\u003cp\u003eThe \u003ccode\u003ewith\u003c/code\u003e keyword sets the topic. In the postfix form you can use it so you don’t have to repeat a long variable name:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ewith\u003c/code\u003e 关键字设置主题。你可以在后缀形式中使用它，以使你不必重复长变量名称：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput \u0026#34;$_ has {.chars}\u0026#34; with $some-very-long-name;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere’s a \u003ca href=\"https://docs.raku.org/type/Block.html\"\u003e\u003ccode\u003eBlock\u003c/code\u003e\u003c/a\u003e form that’s similar to \u003ccode\u003eif-elsif-else\u003c/code\u003e but sets the topic to the result of the condition. Instead of looking for \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e it tests for definedness. In each of these the topic inside the \u003ca href=\"https://docs.raku.org/type/Block.html\"\u003e\u003ccode\u003eBlock\u003c/code\u003e\u003c/a\u003e is the result of the respective \u003ccode\u003e.index\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e有一个与 \u003ccode\u003eif-elsif-else\u003c/code\u003e 类似的 \u003ca href=\"https://docs.raku.org/type/Block.html\"\u003e\u003ccode\u003eBlock\u003c/code\u003e\u003c/a\u003e 形式，但将主题设置为条件的结果。它不是寻找 \u003ccode\u003eTrue\u003c/code\u003e 或 \u003ccode\u003eFalse\u003c/code\u003e，而是测试定义。 \u003ca href=\"https://docs.raku.org/type/Block.html\"\u003e\u003ccode\u003eBlock\u003c/code\u003e\u003c/a\u003e 里的每个这样的主题是相应的 \u003ccode\u003e.index\u003c/code\u003e 的结果：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $s = \u0026#39;Hamadryas\u0026#39;;\n\n  with $s.index: \u0026#39;a\u0026#39; { $s.substr( $_, 2 ).put }\norwith $s.index: \u0026#39;m\u0026#39; { put \u0026#39;Found m\u0026#39; }\norwith $s.index: \u0026#39;H\u0026#39; { fail \u0026#34;Why is there an H at $_?\u0026#34;  }\n\u003c/code\u003e\u003c/pre\u003e","text":"声明 本章翻译仅用于 Raku 学习和研究, 请支持电子版或纸质版。\n第二十章. 高级话题 In such a short book I don’t have enough pages to show you everything that you can do. This chapter is a brief survey of some of the features I would have liked to explain in more detail. You now know these exist and you can investigate them further on your own.\n在这么短的书中，我没有足够的页面向你展示你可以做的一切。本章简要介绍了一些我希望更详细解释的功能。你现在知道这些存在，你可以自己进一步研究它们。\n单行 You can run raku one-liners. These are programs that you compose completely on the command line. The -eswitch takes an argument that is the program:\n你可以运行 raku 单行。这些完全是你在命令行上编写的程序。 -e 开关接受一个参数，即程序：\n% raku -e \u0026#39;put \u0026#34;Hello Raku\u0026#34;\u0026#39; Hello Raku The -n switch runs the program once for each line of input. The current line is in $_. This one uppercases and outputs the line:\n-n 开关为每行输入运行一次程序。当前行是 $_。这个单行大写一行并输出该行：\n% raku -n -e \u0026#39;.uc.put\u0026#39; *.pod You can load a module with -M:\n你可以使用 -M 加载模块：\n% raku -MMath::Constants -e \u0026#39;put α\u0026#39; 0.0072973525664 Declarator Block Comments The parser doesn’t discard all comments. It remembers special comments and attaches them to the subroutine. #| comments attach themselves to the subroutine after them and #= comments attach themselves to the subroutine before them. These comments are available through the .WHY meta-method:\n解析器不会丢弃所有的注释。它会记住特殊注释并将它们附加到子例程中。 #| 注释将它们附加到它们之后的子例程中，并且 #= 注释将它们自身附加到它们之前的子例程中。这些注释可通过 .WHY 元方法获得：\n#| Hamadryas is a sort of butterfly class Hamadryas { #| Flap makes the butterfly go method flap () { } } Hamadryas.WHY.put; Hamadryas.^find_method(\u0026#39;flap\u0026#39;).WHY.put; The output is the combination of all the comments attached to that subroutine:\n输出是附加到该子例程的所有注释的组合：\nHamadryas is a sort of butterfly Flap makes the butterfly go This is the sort of thing that’s handy in an integrated development environment to grab a description of the thing you are trying to use. It’s also useful when you are debugging something—that is, it’s useful if the developer documented their code.\n在集成开发环境中，这种方法很方便，可以获取你尝试使用的内容的描述。当你调试某些内容时，它也很有用 - 也就是说，如果开发人员记录了他们的代码，那么它很有用。\nFeed Operators The feed operators decide which way information flows. Here’s a list-processing pipeline that has a .grep, a .sort, and finally a .map. What they do doesn’t matter as much as their order:\nfeed 操作符决定信息的流向。这是一个列表处理管道，它有一个 .grep，一个 .sort，最后一个 .map。他们所做的事与顺序无关紧要：\nmy @array = @some-array .grep( *.chars \u0026gt; 5 ) .sort( *.fc ) .map( *.uc ) ; The final step is farthest away from the assignment. You might not like that. The leftward feed operator allows you to write this in a way where the data flows in one direction. This flows bottom to top into the new variable:\n最后一步是离赋值最远的。你可能不喜欢那样。向左的 feed 操作符允许你以数据在一个方向上流动的方式编写代码。下面这个从底部到顶部流入新到变量：\nmy @array \u0026lt;== map( *.uc ) \u0026lt;== sort( *.fc ) \u0026lt;== grep( *.chars \u0026gt; 5 ) \u0026lt;== @some-array ; Notice that the assignment operator disappeared because the feed operator took care of that.\n请注意，赋值运算符已消失，因为 feed 运算符负责处理了。\nThe rightward feed operator goes the other way. The new variable is at the end this time. This is the same thing in the other direction:\n向右的 feed 操作符走另一条路。这次这个新变量在最后。在另一方向上也是如此：\n@some-array ==\u0026gt; grep( *.chars \u0026gt; 5 ) ==\u0026gt; sort( *.fc ) ==\u0026gt; map( *.uc ) ==\u0026gt; my @array; Destructuring Signatures You can group parameters with square brackets to create a subsignature. Inside the [] you can break down the aggregate into a smaller signature:\n你可以使用方括号对参数进行分组以创建子签名。在 []内部，你可以将总体分解为较小的签名：\nsub show-the-arguments ( $i, [$j, *@args] ) { # slurpy put \u0026#34;The arguments are i: $i j: $j and @args[]\u0026#34;; } my @a = ( 3, 7, 5 ); show-the-arguments( 1, @a ); With that, $i gets the first parameter and the [] gets the rest. The [] destructures the remaining arguments into $j and @args.\n有了它，$i 获得第一个参数，[] 获得其余参数。 [] 将剩余的参数解构为 $j 和 @args。\nDefining Your Own Operators You can create new operators. Almost all of the things that we call “operators” are methods.\nThe ↑ and ↑↑ represent Knuth arrows. These are higher levels of exponentiation:\n你可以创建新的运算符。几乎所有我们称之为“运算符”的东西都是方法。\n↑ 和 ↑↑ 代表高德纳箭头。这些是更高的取幂水平：\nmulti infix:\u0026lt;↑\u0026gt; ( Int:D \\n, Int:D \\m --\u0026gt; Int:D ) is equiv(\u0026amp;infix:\u0026lt;**\u0026gt;) is assoc\u0026lt;right\u0026gt; { n ** m } proto infix:\u0026lt;↑↑\u0026gt; ( Int:D \\n, Int:D \\m --\u0026gt; Int:D ) is tighter(\u0026amp;infix:\u0026lt;↑\u0026gt;) is assoc\u0026lt;right\u0026gt; { * } multi infix:\u0026lt;↑↑\u0026gt; ( \\n, 0 ) { 1 } multi infix:\u0026lt;↑↑\u0026gt; ( \\n, 1 ) { n } multi infix:\u0026lt;↑↑\u0026gt; ( \\n, \\m ) { [↑] n xx m } put 2↑3; # 2 ** 3 = 8 put 2↑↑3; # 2 ** 2 ** 2 = 2 ** 4 = 16 Notice that the definitions allow you to set traits for precedence and associativity. As with other subroutines these are lexically scoped, so they won’t affect other parts of your program.\n请注意，这些定义允许你设置优先级和关联性的特征。与其他子例程一样，它们是词法作用域的，因此它们不会影响程序的其他部分。\nPerl 5 Patterns If you like Perl 5 patterns better, or already have some good ones that you’d like to reuse, you can do that. The :Perl5 adverb tells the match operator to interpret the pattern as a Perl 5 regular expression:\n如果你更喜欢 Perl 5 模式，或者已经有一些你想要重用的好模式，你可以这样做。 :Perl5 副词告诉匹配操作符将模式解释为 Perl 5 正则表达式：\nmy $file = ...; for $file.IO.lines { next unless m:Perl5/\\A\\s+#/; # no quoting the # in Perl 5 .put; } Shaped Arrays Want a multidimensional matrix? You can create a shaped array that knows how wide it is in any dimension. Use the ; to separate the dimensions:\n想要一个多维矩阵？你可以创建一个定形数组，知道它在任何维度上的宽度。使用 ; 分开维度：\nmy @array[2;2]; say @array; # [[(Any) (Any)] [(Any) (Any)]] @array[1;0] = \u0026#39;Hamadryas\u0026#39;; say @array; # [[(Any) (Any)] [Hamadryas (Any)]] my $n = 0; my $m = 1; @array[$n;$m] = \u0026#39;Borbo\u0026#39;; say @array; # [[(Any) Borbo] [Hamadryas (Any)]] You can extend this to higher dimensions:\n你可以将此扩展到更高的维度：\nmy @array[2;2;3]; The :shape adverb can describe the size in each dimension:\n:shape 副词可以描述每个维度的大小：\nmy @array = Array.new: :shape(3,3); Once you set the limits in each dimension the size is fixed. This means that you can create fixed-size one-dimensional arrays. You won’t be able to use operaters that increase or decrease the number of elements:\n在每个维度中设置限制后，大小就固定了。这意味着你可以创建固定大小的一维数组。你将无法使用增加或减少元素数量的操作符：\nmy @array[5]; Typed Containers The container types (List, Array, Hash, and so on) can limit their elements to a particular type. There are a few ways that you can constrain these. Consider this example:\n容器类型（List, Array, Hash等）可以将其元素限制为特定类型。有几种方法可以约束这些。考虑这个例子：\nmy Int @array = 1, 2, 3; @array.push: \u0026#39;Hamadryas\u0026#39;; Since a Str is not an Int the .push fails:\n由于字符串不是Int，因此 .push 失败：\nType check failed in assignment to @array That form types the @array variable. The type is actually Array[Int]. You can also bind to the object you construct directly:\n该形式键入 @array 变量。该类型实际上是 Array [Int]。你还可以绑定到直接构造的对象：\nmy @array := Array[Int].new: 1, 3, 7; You can create Hashes with objects for keys and many other interesting constraints.\n你可以使用对象创建散列以及许多其他有趣的约束。\nNativeCall There’s a builtin foreign function interface named NativeCall. You use the is native trait to specify the external library. This one connects your program to the argumentless flap routine in libbutterfly:\n有一个名为 NativeCall 的内置外部函数接口。你使用 is native trait 指定外部库。这个程序将你的程序连接到 libbutterfly 中的无参数 flap 例程：\nuse NativeCall; sub flap() is native(\u0026#39;butterfly\u0026#39;) { * } There are ways to tell NativeCall how to translate data structures to “native” types and the other way around.\n有办法告诉 NativeCall 如何将数据结构转换为“原生”类型，反之亦然。\nThe with Topicalizer The with keyword sets the topic. In the postfix form you can use it so you don’t have to repeat a long variable name:\nwith 关键字设置主题。你可以在后缀形式中使用它，以使你不必重复长变量名称：\nput \u0026#34;$_ has {.chars}\u0026#34; with $some-very-long-name; There’s a Block form that’s similar to if-elsif-else but sets the topic to the result of the condition. Instead of looking for True or False it tests for definedness. In each of these the topic inside the Block is the result of the respective .index:\n有一个与 if-elsif-else 类似的 Block 形式，但将主题设置为条件的结果。它不是寻找 True 或 False，而是测试定义。 Block 里的每个这样的主题是相应的 .index 的结果：\nmy $s = \u0026#39;Hamadryas\u0026#39;; with $s.index: \u0026#39;a\u0026#39; { $s.substr( $_, 2 ).put } orwith $s.index: \u0026#39;m\u0026#39; { put \u0026#39;Found m\u0026#39; } orwith $s.index: \u0026#39;H\u0026#39; { fail \u0026#34;Why is there an H at $_?\u0026#34; } "},"name":"第二十章. 高级话题","published":"2018-09-20T00:10:09+08:00","summary":"声明 本章翻译仅用于 Raku 学习和研究, 请支持电子版或纸质版。\n第二十章. 高级话题 In such a short book I don’t have enough pages to show you everything that you can do. This chapter is a brief survey of some of the features I would have liked to explain in more detail. You now know these exist and you can investigate them further on your own.\n在这么短的书中，我没有足够的页面向你展示你可以做的一切。本章简要介绍了一些我希望更详细解释的功能。你现在知道这些存在，你可以自己进一步研究它们。\n单行 You can run raku one-liners. These are programs that you compose completely on the command line.","type":"entry","url":"http://localhost:1313/raku/2018-09-20-%E7%AC%AC%E4%BA%8C%E5%8D%81%E7%AB%A0.-%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/"},{"content":{"html":"\u003ch1 id=\"声明\"\u003e声明\u003c/h1\u003e\n\u003cp\u003e本章翻译仅用于 Raku 学习和研究, 请支持电子版或\u003ca href=\"https://www.amazon.co.uk/Learning-Perl-6-Brian-Foy/dp/149197768X/ref=sr_1_1?ie=UTF8\u0026amp;qid=1536753267\u0026amp;sr=8-1\u0026amp;keywords=Learning+Perl+6\"\u003e纸质版\u003c/a\u003e。\u003c/p\u003e\n\u003ch1 id=\"第十七章-grammars\"\u003e第十七章. Grammars\u003c/h1\u003e\n\u003cp\u003eGrammars are patterns on a higher plane of existence. They integrate and reuse pattern fragments to parse and react to complicated formats. This feature is at the core of Raku in a very literal sense; the language itself is implemented as a grammar. Once you start using it you’ll probably prefer it to regexes for all but the most simple problems.\u003c/p\u003e\n\u003cp\u003eGrammars 是存在于更高层面上的模式。它们集成并重用模式片段来解析复杂的格式并做出反应。从字面意义上讲，这个功能是Raku的核心;语言本身是作为语法实现的。一旦你开始使用它，你可能更喜欢它除了最简单的问题之外的所有正则表达式。\u003c/p\u003e\n\u003ch1 id=\"a-simple-grammar\"\u003eA Simple Grammar\u003c/h1\u003e\n\u003cp\u003eA grammar is a special sort of package. It can have methods and subroutines but mostly comprises special pattern methods called \u003ccode\u003eregex\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, and \u003ccode\u003erule\u003c/code\u003e. Each of these define a pattern and apply different modifiers.\u003c/p\u003e\n\u003ch6 id=\"note\"\u003eNOTE\u003c/h6\u003e\n\u003cp\u003eRaku tends to refer to \u003ccode\u003eregex\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, and \u003ccode\u003erule\u003c/code\u003e declarations as “rules,” which can be a bit imprecise at times. In this book, you can tell the difference between the language keyword and the general term by the typesetting. I’ll try to not present an ambiguous situation.\u003c/p\u003e\n\u003cp\u003eStart with something simple (too simple for grammars). Define a \u003ccode\u003eTOP\u003c/code\u003e pattern that matches digits as the starting point. That name is special because \u003ccode\u003e.parse\u003c/code\u003e uses it by default. In this example, you declare that with \u003ccode\u003eregex\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003eGrammar 是一种特殊的包。它可以有方法和子程序，但主要包括称为 \u003ccode\u003eregex\u003c/code\u003e，\u003ccode\u003etoken\u003c/code\u003e 和 \u003ccode\u003erule\u003c/code\u003e 的特殊模式方法。其中每个都定义了一个模式并应用了不同的修饰符。\u003c/p\u003e\n\u003ch6 id=\"注意\"\u003e注意\u003c/h6\u003e\n\u003cp\u003eRaku 倾向于将 \u003ccode\u003eregex\u003c/code\u003e，\u003ccode\u003etoken\u003c/code\u003e 和 \u003ccode\u003erule\u003c/code\u003e 声明称为“规则”，有时可能有点不精确。在本书中，您可以通过排版来区分语言关键字和一般术语。我会尽量不提出模棱两可的情况。\u003c/p\u003e\n\u003cp\u003e从简单的东西开始（对于 grammar 来说太简单了）。定义匹配数字作为起点的 \u003ccode\u003eTOP\u003c/code\u003e 模式。该名称很特殊，因为 \u003ccode\u003e.parse\u003c/code\u003e 默认使用它。在此示例中，您使用 \u003ccode\u003eregex\u003c/code\u003e 声明一个 \u003ccode\u003eTOP\u003c/code\u003e：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    regex TOP { \\d }\n    }\n\nmy $result = Number.parse( \u0026#39;7\u0026#39; );  # works\n\nput $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;;  # Parsed!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis succeeds. \u003ccode\u003e.parse\u003c/code\u003e applies the grammar to the entire value of \u003ccode\u003e7\u003c/code\u003e. It starts with the parts that \u003ccode\u003eTOP\u003c/code\u003e describes. It can match a digit, and the value you pass to \u003ccode\u003e.parse\u003c/code\u003e is a digit.\u003c/p\u003e\n\u003cp\u003eWhen \u003ccode\u003e.parse\u003c/code\u003e succeeds, it returns a \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e object (it returns \u003ccode\u003eNil\u003c/code\u003e when it fails). Try it with a different value. Instead of a single digit, try several digits:\u003c/p\u003e\n\u003cp\u003e这成功了。 \u003ccode\u003e.parse\u003c/code\u003e 将 grammar 应用于整个值 \u003ccode\u003e7\u003c/code\u003e. 它从 \u003ccode\u003eTOP\u003c/code\u003e 描述的部分开始。它可以匹配一个数字，你传递给 \u003ccode\u003e.parse\u003c/code\u003e 的值是一个数字。\u003c/p\u003e\n\u003cp\u003e当 \u003ccode\u003e.parse\u003c/code\u003e 成功时，它返回一个 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 对象（当它失败时返回 \u003ccode\u003eNil\u003c/code\u003e）。尝试使用不同的值。尝试几个数字而不是单个数字：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $result = Number.parse( \u0026#39;137\u0026#39; );  # fails (extra digits)\n\nput $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;;  # Failed!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis time \u003ccode\u003e.parse\u003c/code\u003e doesn’t succeed. It starts matching with the first character and ends matching on the last character. It asserts that the text starts, there is a single digit, and the text ends. If \u003ccode\u003e.parse\u003c/code\u003e sees that there are some characters before or after its match, it fails. It matches everything or not at all. It’s almost the same thing as explicitly using anchors:\u003c/p\u003e\n\u003cp\u003e这次 \u003ccode\u003e.parse\u003c/code\u003e 没有成功。它开始与第一个字符匹配，并在最后一个字符上结束匹配。它断言文本开始，有一个数字，文本结束。如果 \u003ccode\u003e.parse\u003c/code\u003e 看到匹配之前或之后有一些字符，则会失败。它匹配全部或根本不匹配。它与显式地使用锚点几乎相同：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    regex TOP { ^ \\d+ $ }  # explicitly anchored\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBut \u003ccode\u003eTOP\u003c/code\u003e is only the default starting point for a grammar. You can tell \u003ccode\u003e.parse\u003c/code\u003e where you’d like to start. This version defines the same pattern but calls it \u003ccode\u003edigits\u003c/code\u003e instead of \u003ccode\u003eTOP\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e但 \u003ccode\u003eTOP\u003c/code\u003e 是仅有的 grammar 的默认起点。你可以告诉 \u003ccode\u003e.parse\u003c/code\u003e 你想要开始的地方。此版本定义相同的模式但称为 \u003ccode\u003edigits\u003c/code\u003e 而不是 \u003ccode\u003eTOP\u003c/code\u003e：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    regex digits { \\d+ }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTell \u003ccode\u003e.parse\u003c/code\u003e where to start with the \u003ccode\u003e:rule\u003c/code\u003e named argument:\u003c/p\u003e\n\u003cp\u003e使用 \u003ccode\u003e:rule\u003c/code\u003e 命名参数告诉 \u003ccode\u003e.parse\u003c/code\u003e 从哪里开始：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy @strings = \u0026#39;137\u0026#39;, \u0026#39;137 \u0026#39;, \u0026#39; 137 \u0026#39;;\n\nfor @strings -\u0026gt; $string {\n    my $result = Number.parse( $string, :rule\u0026lt;digits\u0026gt; );\n    put \u0026#34;｢$string｣ \u0026#34;, $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe first element of \u003ccode\u003e@strings\u003c/code\u003e parses because it is only digits. The other ones fail because they have extra characters:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e@strings\u003c/code\u003e 的第一个元素解析成功了因为它只是数字。其他的失败了因为他们有额外的字符：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e｢137｣ parsed!\n｢137 ｣ failed!\n｢ 137 ｣ failed!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDeclare \u003ccode\u003edigits\u003c/code\u003e with \u003ccode\u003erule\u003c/code\u003e instead of \u003ccode\u003eregex\u003c/code\u003e. This implicitly allows whitespace after any part of your pattern:\u003c/p\u003e\n\u003cp\u003e使用 \u003ccode\u003erule\u003c/code\u003e 而不是 \u003ccode\u003eregex\u003c/code\u003e 声明 \u003ccode\u003edigits\u003c/code\u003e。这隐式地允许在模式的任何部分之后有空格：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    rule digits { \\d+ }  #  not anchored, and works\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow the second \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e matches too because the implicit whitespace can match the space at the end (but not the beginning):\u003c/p\u003e\n\u003cp\u003e现在第二个 \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e 也匹配，因为隐式空格可以匹配末尾的空格（但不是开头）：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e｢137｣ parsed!\n｢137 ｣ parsed!\n｢ 137 ｣ failed!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003erule\u003c/code\u003e applies \u003ccode\u003e:sigspace\u003c/code\u003e to its pattern. It’s the same thing as adding that adverb to the pattern:\u003c/p\u003e\n\u003cp\u003e该 \u003ccode\u003erule\u003c/code\u003e 将 \u003ccode\u003e:sigspace\u003c/code\u003e 应用到其模式。将该副词添加到模式中是一回事：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    regex digits { :sigspace \\d+ }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003e:sigspace\u003c/code\u003e inserts the predefined \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e \u003cem\u003eafter\u003c/em\u003e pattern tokens. Since there’s a dot before the name \u003ccode\u003ews\u003c/code\u003e, the \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e does not create a capture. It’s the same as adding optional whitespace explicitly:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e:sigspace\u003c/code\u003e在模式标记之后插入预定义的 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e。由于名称 \u003ccode\u003ews\u003c/code\u003e 之前有一个点号，\u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 不会创建捕获。它与显式添加可选空格相同：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    regex digits { \\d+ \u0026lt;.ws\u0026gt; }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eInstead of showing \u003ccode\u003eParsed!\u003c/code\u003e, you can on success output the \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e object you stored in \u003ccode\u003e$result\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e您可以在成功输出存储在 \u003ccode\u003e$result\u003c/code\u003e 中的  \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 对象，而不是显示 \u003ccode\u003eParsed!\u003c/code\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    regex digits { \\d+ \u0026lt;.ws\u0026gt; }\n    }\n\nmy @strings = \u0026#39;137\u0026#39;, \u0026#39;137 \u0026#39;, \u0026#39; 137 \u0026#39;;\n\nfor @strings -\u0026gt; $string {\n    my $result = Number.parse( $string, :rule\u0026lt;digits\u0026gt; );\n    put $result ?? $result !! \u0026#39;Failed!\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe output isn’t that different, but instead of its success status you see the text that matched:\u003c/p\u003e\n\u003cp\u003e输出没有那么不同，但您可以看到匹配到的文本，而不是其成功状态：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e｢137｣\n｢137 ｣\nFailed!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eModify the grammar to remove that dot from \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e so it captures whitespace and try again:\u003c/p\u003e\n\u003cp\u003e修改 grammar 以从 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 中删除该点号，以便捕获空格并再次尝试：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    regex digits { \\d+ \u0026lt;ws\u0026gt; }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow the output shows the nested levels of named captures:\u003c/p\u003e\n\u003cp\u003e现在输出显示了命名捕获的嵌套级别：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e｢137｣\n ws =\u0026gt; ｢｣\n｢137 ｣\n ws =\u0026gt; ｢ ｣\nFailed!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis still doesn’t match the \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e with leading whitespace. The parser couldn’t match that since \u003ccode\u003erule\u003c/code\u003e only inserts \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e after explicit parts of the pattern. To match leading whitespace you need to add something to the front of the pattern. The beginning-of-string anchor does that, and now there’s something that \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e can come after:\u003c/p\u003e\n\u003cp\u003e这仍然与带有前导空格的 \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e 不匹配。解析器无法匹配，因为 \u003ccode\u003erule\u003c/code\u003e 仅在模式的显式部分之后插入 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e。要匹配前导空格，您需要在模式的前面添加一些内容。字符串开头的锚点就是这样，现在有一些 \u003ccode\u003e\u0026lt;.ws\u0026gt;\u003c/code\u003e 后面可以出现的东西：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    rule digits { ^ \\d+ }    # ^ \u0026lt;.ws\u0026gt; \\d+ \u0026lt;.ws\u0026gt;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere’s also the zero-width always-matches token, \u003ccode\u003e\u0026lt;?\u0026gt;\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e还有零宽度始终匹配的 token 标记，\u003ccode\u003e\u0026lt;?\u0026gt;\u003c/code\u003e：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    rule digits { \u0026lt;?\u0026gt; \\d+ }  #  \u0026lt;?\u0026gt; \u0026lt;.ws\u0026gt; \\d+ \u0026lt;.ws\u0026gt;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMost of the time you don’t want to play these games. If you want leading whitespace, you can note that explicitly (and you probably don’t want to capture it):\u003c/p\u003e\n\u003cp\u003e大多数时候你不想玩这些游戏。如果你想要前导空格，你可以显式地注意到（并且你可能不想捕获它）：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    rule digits { \u0026lt;.ws\u0026gt; \\d+ }  # \u0026lt;.ws\u0026gt; \\d+ \u0026lt;.ws\u0026gt;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eUse \u003ccode\u003etoken\u003c/code\u003e instead of \u003ccode\u003erule\u003c/code\u003e if you don’t want any implicit whitespace:\u003c/p\u003e\n\u003cp\u003e如果您不想要任何隐式空格，请使用 \u003ccode\u003etoken\u003c/code\u003e 而不是 \u003ccode\u003erule\u003c/code\u003e：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Number {\n    token digits { \\d+ }  # just the digits\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou’ll see another feature of \u003ccode\u003erule\u003c/code\u003e and \u003ccode\u003etoken\u003c/code\u003e later in this chapter.\u003c/p\u003e\n\u003cp\u003e您将在本章后面看到 \u003ccode\u003erule\u003c/code\u003e 和 \u003ccode\u003etoken\u003c/code\u003e 的另一个功能。\u003c/p\u003e\n\u003cp\u003eEXERCISE 17.1Write a grammer to match octal digits, with or without a leading \u003ccode\u003e0\u003c/code\u003e or \u003ccode\u003e0o\u003c/code\u003e. Your grammar should parse numbers such as \u003ccode\u003e123\u003c/code\u003e, \u003ccode\u003e0123\u003c/code\u003e, and \u003ccode\u003e0o456\u003c/code\u003e, but not \u003ccode\u003e8\u003c/code\u003e, \u003ccode\u003e129\u003c/code\u003e, or \u003ccode\u003eo345\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e练习17.1写一个 grammar 来匹配八进制数字，带或不带前导 \u003ccode\u003e0\u003c/code\u003e 或 \u003ccode\u003e0o\u003c/code\u003e。您的 grammar 应该解析诸如 \u003ccode\u003e123\u003c/code\u003e, \u003ccode\u003e0123\u003c/code\u003e 和 \u003ccode\u003e0o456\u003c/code\u003e 之类的数字，但不能解析 \u003ccode\u003e8\u003c/code\u003e ,\u003ccode\u003e129\u003c/code\u003e 或 \u003ccode\u003eo345\u003c/code\u003e。\u003c/p\u003e\n\u003ch1 id=\"multiple-rules\"\u003eMultiple Rules\u003c/h1\u003e\n\u003cp\u003eGrammars wouldn’t be useful if you were limited to one rule. You can define additional rules and use them inside other rules. In the first exercise you had only the \u003ccode\u003eTOP\u003c/code\u003e rule but you could separate the pattern into parts. Break up the pattern in \u003ccode\u003eTOP\u003c/code\u003e into rules for \u003ccode\u003eprefix\u003c/code\u003e and \u003ccode\u003edigits\u003c/code\u003e. It’s this decomposability that makes it so easy to solve hard parsing problems:\u003c/p\u003e\n\u003cp\u003e如果你只限于一条规则，那么 grammar 就没用了。您可以定义其他规则并在其他规则中使用它们。在第一个练习中，您只有 \u003ccode\u003eTOP\u003c/code\u003e 规则，但您可以将模式分成几部分。将 \u003ccode\u003eTOP\u003c/code\u003e 中的模式分解为 \u003ccode\u003eprefix\u003c/code\u003e和\u003ccode\u003edigits\u003c/code\u003e的规则。正是这种可分解性使得解决困难的解析问题变得如此简单：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar OctalNumber {\n    regex TOP          { \u0026lt;prefix\u0026gt;? \u0026lt;digits\u0026gt;  }\n    regex prefix       {  [ 0o? ]  }\n    regex digits       { \u0026lt;[0..7]\u0026gt;+ }\n    }\n\nmy $number = \u0026#39;0o177\u0026#39;;\nmy $result = OctalNumber.parse( $number );\nsay $result // \u0026#34;failed\u0026#34;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe stringified \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e object shows the overall match and the named subcaptures:\u003c/p\u003e\n\u003cp\u003e字符串化的 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 对象显示整体匹配和命名的子捕获：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e｢0o177｣\n prefix =\u0026gt; ｢0o｣\n digits =\u0026gt; ｢177｣\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can access the pieces:\u003c/p\u003e\n\u003cp\u003e你可以访问这些部分：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput \u0026#34;Prefix: $result\u0026lt;prefix\u0026gt;\u0026#34;;\nput \u0026#34;Digits: $result\u0026lt;digits\u0026gt;\u0026#34;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 17.2Create a grammar to match a Raku variable name with a sigil (ignore sigilless variables, because that’s too easy). Use separate rules to match the sigil and the identifier. Here is a list of candidates to check if you don’t come up with your own:\u003ccode\u003emy @candidates = qw/     sigilless   $scalar  @array   %hash     $123abc    $abc'123 $ab'c123     $two-words $two-    $-dash     /;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eYou can suppress some of those named captures by prefixing the rule with a dot. You probably don’t care about the prefix, so don’t save it:\u003c/p\u003e\n\u003cp\u003e练习17.2 创建一个 grammar，匹配带有 sigil 的 Raku 变量名（忽略无符号变量，因为这太简单了）。使用单独的规则来匹配 sigil 和标识符。这是一个候选人列表，检查你是否没有自己的：\u003ccode\u003emy @candidates = qw/     sigilless   $scalar  @array   %hash     $123abc    $abc'123 $ab'c123     $two-words $two-    $-dash     /;\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003e您可以通过在规则前加一个点号来抑制某些命名捕获。您可能不关心前缀，所以不要保存它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar OctalNumber {\n    regex TOP          { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt; }\n    regex prefix       {  [ 0o? ]  }\n    regex digits       { \u0026lt;[0..7]\u0026gt;+ }\n    }\n\nmy $number = \u0026#39;0o177\u0026#39;;\nmy $result = OctalNumber.parse( $number );\nsay $result // \u0026#34;failed\u0026#34;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe output doesn’t include the prefix information:\u003c/p\u003e\n\u003cp\u003e输出不包含前缀信息：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e｢0o177｣\n digits =\u0026gt; ｢177｣\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis doesn’t make much of a difference in this small example, but imagine a complicated grammar with many, many rules. That brings you to the next big feature of grammars. Besides the grammar itself, you can specify an \u003cem\u003eaction class\u003c/em\u003e that processes the rules as the grammar successfully parses them.\u003c/p\u003e\n\u003cp\u003e这在这个小例子中并没有太大的区别，但想象一下复杂的 grammar 有很多很多规则。这将带您进入 grammar 的下一个重要特征。除 grammar 本身外，您还可以指定一个 action 类来处理规则，因为 grammar 会成功解析它们。\u003c/p\u003e\n\u003ch1 id=\"debugging-grammars\"\u003eDebugging Grammars\u003c/h1\u003e\n\u003cp\u003eThere are two modules that can help you figure out what’s going on in your grammar. Both are much more impressive in your terminal.\u003c/p\u003e\n\u003cp\u003e有两个模块可以帮助您弄清楚 grammar 中发生了什么。两者在你的终端中都更令人印象深刻。\u003c/p\u003e\n\u003ch2 id=\"grammartracer\"\u003eGrammar::Tracer\u003c/h2\u003e\n\u003cp\u003eThe \u003ccode\u003eGrammar::Tracer\u003c/code\u003e module shows you the path through a grammar (and applies to any grammar in its scope). Merely loading the module is enough to activate it:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eGrammar::Tracer\u003c/code\u003e 模块向您显示 grammar 的路径（并适用于其作用域内的任何 grammar）。仅加载模块就足以激活它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003euse Grammar::Tracer;\n\ngrammar OctalNumber {\n    regex TOP          { \u0026lt;prefix\u0026gt;? \u0026lt;digits\u0026gt;  }\n    regex prefix       {  [ 0o? ]  }\n    regex digits       { \u0026lt;[0..7]\u0026gt;+ }\n    }\n\nmy $number = \u0026#39;0o177\u0026#39;;\n$/ = OctalNumber.parse( $number );\nsay $/ // \u0026#34;failed\u0026#34;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe first part of the output is the trace. It shows which rule it’s in and the result. In this example each one matches:\u003c/p\u003e\n\u003cp\u003e输出的第一部分是跟踪。它显示了它所在的规则和结果。在这个例子中，每个规则都匹配：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eTOP\n|  prefix\n|  * MATCH \u0026#34;0o\u0026#34;\n|  digits\n|  * MATCH \u0026#34;177\u0026#34;\n* MATCH \u0026#34;0o177\u0026#34;\n｢0o177｣\n prefix =\u0026gt; ｢0o｣\n digits =\u0026gt; ｢177｣\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eChanging the data to include invalid digits, such as \u003ccode\u003e0o178\u003c/code\u003e, means the grammar will fail. In the trace you can see it matches up to \u003ccode\u003e0o17\u003c/code\u003e but can’t continue, so you know where in your \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e things went wrong. It could be that the grammar should not match the text or the grammar is not as accommodating as it should be:\u003c/p\u003e\n\u003cp\u003e更改数据以包含无效数字（例如 \u003ccode\u003e0o178\u003c/code\u003e）意味着 grammar 将失败。在跟踪中，您可以看到它最多匹配到 \u003ccode\u003e0o17\u003c/code\u003e 但无法继续，因此你就知道  \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e  中的哪些地方出错了。可能是 grammar 不应该与文本匹配，或者 grammar 不应该像它应该的那样适应：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eTOP\n|  prefix\n|  * MATCH \u0026#34;0o\u0026#34;\n|  digits\n|  * MATCH \u0026#34;17\u0026#34;\n* MATCH \u0026#34;0o17\u0026#34;\ndigits\n* FAIL\ndigits\n* MATCH \u0026#34;0\u0026#34;\nfailed\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eInstead of adding \u003ccode\u003eGrammar::Tracer\u003c/code\u003e to your program you can load it from the command line with the \u003ccode\u003e-M\u003c/code\u003eswitch. You probably don’t mean to leave it in anyway:\u003c/p\u003e\n\u003cp\u003e您可以使用 \u003ccode\u003e-M\u003c/code\u003e 开关从命令行加载 \u003ccode\u003eGrammar::Tracer\u003c/code\u003e，而不是将 \u003ccode\u003eGrammar::Tracer\u003c/code\u003e 添加到程序中。你可能并不是故意把它留下来：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku -MGrammar::Tracer program.p6\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"grammardebugger\"\u003eGrammar::Debugger\u003c/h2\u003e\n\u003cp\u003eThe \u003ccode\u003eGrammar::Debugger\u003c/code\u003e module does the same thing as \u003ccode\u003eGrammar::Tracer\u003c/code\u003e (they come together in the same distribution) but allows you to proceed one step at a time. When you start it you get a prompt; type \u003ccode\u003eh\u003c/code\u003e to get a list of commands:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eGrammar::Debugger\u003c/code\u003e 模块与 \u003ccode\u003eGrammar::Tracer\u003c/code\u003e （它们在同一个发行版中）执行相同的操作，但允许您一次执行一个步骤。当你启动它时，你得到一个提示; 键入 \u003ccode\u003eh\u003c/code\u003e 以获取命令列表：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku -MGrammar::Debugger test.p6\nTOP\n\u0026gt; h\n    r              run (until breakpoint, if any)\n    \u0026lt;enter\u0026gt;        single step\n    rf             run until a match fails\n    r \u0026lt;name\u0026gt;       run until rule \u0026lt;name\u0026gt; is reached\n    bp add \u0026lt;name\u0026gt;  add a rule name breakpoint\n    bp list        list all active rule name breakpoints\n    bp rm \u0026lt;name\u0026gt;   remove a rule name breakpoint\n    bp rm          removes all breakpoints\n    q              quit\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTyping Enter with no command single-steps through the parse process and gives you a chance to inspect the text and the state of the parser. The \u003ccode\u003erf\u003c/code\u003e command will get you to the next failing rule:\u003c/p\u003e\n\u003cp\u003e在没有命令的情况下键入回车键单步执行解析过程，并让你有机会检查文本和解析器的状态。\u003ccode\u003e rf\u003c/code\u003e 命令会使你进入下一个失败的规则：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; rf\n|  prefix\n|  * MATCH \u0026#34;0o\u0026#34;\n|  digits\n|  * MATCH \u0026#34;17\u0026#34;\n* MATCH \u0026#34;0o17\u0026#34;\ndigits\n* FAIL\n\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"a-simple-action-class\"\u003eA Simple Action Class\u003c/h1\u003e\n\u003cp\u003eA grammar does its work by descending into its rules to take apart text. You can go the opposite way by processing each part of the parsed text to build a new \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e (or data structure, or whatever you like). You can tell \u003ccode\u003e.parse\u003c/code\u003e to use an action class to do this.\u003c/p\u003e\n\u003cp\u003egrammar 通过下降到它的规则中分解文本来完成其工作。你可以通过处理已解析文本的每个部分来构建新的 \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e（或数据结构，或任何您喜欢的任何内容）。您可以告诉 \u003ccode\u003e.parse\u003c/code\u003e 使用 action 类来执行此操作。\u003c/p\u003e\n\u003cp\u003eHere’s a simple action class, \u003ccode\u003eOctalActions\u003c/code\u003e. It doesn’t need to have the same name as the grammar, but the method names are the same as the rule names. Each method takes a \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e object argument. In this example, the signature uses \u003ccode\u003e$/\u003c/code\u003e, which is a variable with a few advantages that you’ll see in a moment:\u003c/p\u003e\n\u003cp\u003e这是一个简单的 action 类 \u003ccode\u003eOctalActions\u003c/code\u003e。它不需要与 grammar 具有相同的名称，但方法名称与规则名称相同。每个方法都接收 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 对象参数。在此示例中，签名使用 \u003ccode\u003e$/\u003c/code\u003e，这是一个具有一些优势的变量，稍后你将看到：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eclass OctalActions {\n    method digits ($/) { put \u0026#34;Action class got $/\u0026#34; }\n    }\n\ngrammar OctalNumber {\n    regex TOP          { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt;  }\n    regex prefix       {  [ 0o? ]  }\n    regex digits       { \u0026lt;[0..7]\u0026gt;+ }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTell \u003ccode\u003e.parse\u003c/code\u003e which class to use with the \u003ccode\u003e:actions\u003c/code\u003e named parameter. The name does not need to correspond to the grammar:\u003c/p\u003e\n\u003cp\u003e使用 \u003ccode\u003e:actions\u003c/code\u003e 命名参数告诉 \u003ccode\u003e.parse\u003c/code\u003e 使用哪个类。该名称不需要与 grammar 对应：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $number = \u0026#39;0o177\u0026#39;;\nmy $result = OctalNumber.parse(\n    $number, :actions(OctalActions)\n    );\nsay $result // \u0026#34;failed\u0026#34;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis action class doesn’t do much. When the \u003ccode\u003edigits\u003c/code\u003e rule successfully matches it triggers the rule of the same name in the action class. That method merely outputs the argument:\u003c/p\u003e\n\u003cp\u003e这个 action 类做的不多。当 \u003ccode\u003edigits\u003c/code\u003e 规则成功匹配时，它会触发 action 类中相同名称的规则。该方法仅输出参数：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eAction class got 177\n｢0o177｣\n digits =\u0026gt; ｢177｣\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 17.3Implement your own action class for the \u003ccode\u003eOctalNumber\u003c/code\u003e grammar. When the \u003ccode\u003edigits\u003c/code\u003e method matches, output the decimal version of the number. The \u003ccode\u003eparse-base\u003c/code\u003e routine from \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e may be useful. For extra credit, take one number per line from standard input and turn them into decimal numbers.\u003c/p\u003e\n\u003cp\u003e练习17.3 为 \u003ccode\u003eOctalNumber\u003c/code\u003e grammar 实现自己的 action 类。当 \u003ccode\u003edigits\u003c/code\u003e 方法匹配时，输出数字的十进制版本。 \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e 的 \u003ccode\u003eparse-base\u003c/code\u003e 例程可能很有用。如需额外学分，请从标准输入中每行获取一个数字并将其转换为十进制数字。\u003c/p\u003e\n\u003ch2 id=\"creating-an-abstract-syntax-tree\"\u003eCreating an Abstract Syntax Tree\u003c/h2\u003e\n\u003cp\u003eActions shouldn’t output information directly. Instead, they can add values to the \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e object. Calling \u003ccode\u003emake\u003c/code\u003ein the action method sets a value in the abstract syntax tree (or \u003ccode\u003e.ast\u003c/code\u003e) slot of the \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e. You can access that with \u003ccode\u003e.made\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003eAction 不应直接输出信息。相反，他们可以向 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 对象添加值。在 action 方法中调用 \u003ccode\u003emake\u003c/code\u003e 会在 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 的抽象语法树（或 \u003ccode\u003e.ast\u003c/code\u003e ）槽中设置一个值。您可以使用 \u003ccode\u003e.made\u003c/code\u003e 访问它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eclass OctalActions {\n    method digits ($/) {\n        make parse-base( ~$/, 8 ) # must stringify $/\n        }\n    }\n\ngrammar OctalNumber {\n    regex TOP          { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt;  }\n    regex prefix       {  [ 0o? ]  }\n    regex digits       { \u0026lt;[0..7]\u0026gt;+ }\n    }\n\nmy $number = \u0026#39;0o177\u0026#39;;\nmy $result = OctalNumber.parse(\n    $number, :actions(OctalActions)\n    );\nput $result ??\n    \u0026#34;Turned ｢{$result\u0026lt;digits\u0026gt;}｣ into ｢{$result\u0026lt;digits\u0026gt;.made}｣\u0026#34;\n    !! \u0026#39;Failed!\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003emake\u003c/code\u003e puts something into the \u003ccode\u003e.ast\u003c/code\u003e slot of the \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e and \u003ccode\u003e.made\u003c/code\u003e gets it back out. You can \u003ccode\u003emake\u003c/code\u003e any value that you like, including containers, objects, and most other things you can imagine. You still get the original, literal match.\u003c/p\u003e\n\u003cp\u003eIn the previous example, the \u003ccode\u003edigits\u003c/code\u003e action method handled the value. A \u003ccode\u003eTOP\u003c/code\u003e action method could do it, but it has to reach one level below the \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e object:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003emake\u003c/code\u003e 将一些内容放入\u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e的 \u003ccode\u003e.ast\u003c/code\u003e 插槽中，然后 \u003ccode\u003e.made\u003c/code\u003e 将其恢复原状。您可以\u003ccode\u003emake\u003c/code\u003e 任何您喜欢的值，包括容器，对象和您可以想象的大多数其他内容。你仍然得到原始的，字面上的匹配。\u003c/p\u003e\n\u003cp\u003e在前面的示例中，\u003ccode\u003edigits\u003c/code\u003e action 方法处理了该值。 \u003ccode\u003eTOP\u003c/code\u003e action 方法可以做到，但它必须到达  \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 对象下面的一个级别：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eclass OctalActions {\n    method digits ($/) {\n        make parse-base( ~$/, 8 ) # must stringify $/\n        }\n    }\n\ngrammar OctalNumber {\n    regex TOP          { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt;  }\n    regex prefix       {  [ 0o? ]  }\n    regex digits       { \u0026lt;[0..7]\u0026gt;+ }\n    }\n\nmy $number = \u0026#39;0o177\u0026#39;;\nmy $result = OctalNumber.parse(\n    $number, :actions(OctalActions)\n    );\nput $result.so ??\n    \u0026#34;Turned ｢{$number}｣ into ｢{$result.made}｣\u0026#34;\n    !! \u0026#39;Failed!\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou don’t have to use \u003ccode\u003e$/\u003c/code\u003e in the signature; it’s a convenience. There’s nothing particularly magical about it. You could use some other variable if you are paid by the character:\u003c/p\u003e\n\u003cp\u003e您不必在签名中使用 \u003ccode\u003e$/\u003c/code\u003e; 这是一个方便写法。它没什么特别神奇的。如果你有其它字符，您可以使用其他变量：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eclass OctalActions {\n    method TOP ($match) { make parse-base( ~$match\u0026lt;digits\u0026gt;, 8 ) }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 17.4Create a grammar to parse a four-part, dotted-decimal IP address, such as \u003ccode\u003e192.168.1.137\u003c/code\u003e. Create an action class that turns the parse results into a 32-bit number. Output that 32-bit number in hexadecimal.\u003c/p\u003e\n\u003cp\u003e练习17.4 创建一个 grammar 来解析一个由四部分组成的点分十进制 IP 地址，例如 \u003ccode\u003e192.168.1.137\u003c/code\u003e。创建一个 action 类，将解析结果转换为32位数。以十六进制输出那个32位数。\u003c/p\u003e\n\u003ch1 id=\"ratcheting\"\u003eRatcheting\u003c/h1\u003e\n\u003cp\u003eThe \u003ccode\u003erule\u003c/code\u003e and \u003ccode\u003etoken\u003c/code\u003e declarators have a feature that \u003ccode\u003eregex\u003c/code\u003e doesn’t; they both prevent backtracking by implicitly setting the \u003ccode\u003e:ratchet\u003c/code\u003e adverb. Once one of those rules matches they don’t backtrack to try again if there’s a failure later in the grammar.\u003c/p\u003e\n\u003cp\u003eHere’s a nonsense grammar that includes a rule \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e that matches one or more of any character. The \u003ccode\u003eTOP\u003c/code\u003e token wants to match digits surrounded by unspecified stuff:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003erule\u003c/code\u003e 和 \u003ccode\u003etoken\u003c/code\u003e 声明符具有 \u003ccode\u003eregex\u003c/code\u003e 不具有的功能;他们都通过隐式设置 \u003ccode\u003e:ratchet\u003c/code\u003e 副词来阻止回溯。一旦这些规则中的一个匹配，如果在 grammar 中稍后出现失败，则它们不会回溯以再次尝试。\u003c/p\u003e\n\u003cp\u003e这是一个无意义的 grammar，其中包含能匹配一个或多个字符的 \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e 规则。 \u003ccode\u003eTOP\u003c/code\u003e token 想要匹配由未指定的东西包围的数字：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Stuff {\n    token TOP { \u0026lt;some-stuff\u0026gt; \u0026lt;digits\u0026gt; \u0026lt;some-stuff\u0026gt; }\n    token digits       { \\d+ }\n    token some-stuff   { .+  }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e could satisfy that pattern. It has stuff, some digits, and more stuff:\u003c/p\u003e\n\u003cp\u003e这个\u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003e字符串\u003c/code\u003e\u003c/a\u003e可以满足这种模式。它有东西，一些数字和更多的东西：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $string = \u0026#39;abcdef123xyx456\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBut, \u003ccode\u003eStuff\u003c/code\u003e fails to parse it:\u003c/p\u003e\n\u003cp\u003e但是，\u003ccode\u003eStuff\u003c/code\u003e 无法解析它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $result = Stuff.parse( $string );\nput \u0026#34;｢$string｣ \u0026#34;, $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;; # Failed!\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIt’s the \u003ccode\u003e:ratchet\u003c/code\u003e that makes it fail. Work out its path to see why. \u003ccode\u003eTOP\u003c/code\u003e has to first match \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e. That matches any character one or more times, greedily—it matches the entire text. \u003ccode\u003eTOP\u003c/code\u003e next needs to match\u003ccode\u003e\u0026lt;digits\u0026gt;\u003c/code\u003e, but there is nothing left to match because of that greediness. Without \u003ccode\u003e:ratchet\u003c/code\u003e the pattern might roll back some of the characters it already consumed. With \u003ccode\u003e:ratchet\u003c/code\u003e it doesn’t do that. The grammar can’t match the rest of \u003ccode\u003eTOP\u003c/code\u003e and it fails.\u003c/p\u003e\n\u003cp\u003eWithout \u003ccode\u003e:ratchet\u003c/code\u003e the situation is different. If you use \u003ccode\u003eregex\u003c/code\u003e instead of \u003ccode\u003etoken\u003c/code\u003e, you allow the grammar to give back characters it has already matched:\u003c/p\u003e\n\u003cp\u003e是 \u003ccode\u003e:ratchet\u003c/code\u003e 使它失败的。找出原因，看看为什么。 \u003ccode\u003eTOP\u003c/code\u003e 必须首先匹配 \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e。这匹配任何一个字符一次或多次，贪婪地 - 它匹配整个文本。 \u003ccode\u003eTOP\u003c/code\u003e  接着需要匹配 \u003ccode\u003e\u0026lt;digits\u0026gt;\u003c/code\u003e，但由于这种贪婪，没有什么可以匹配的了。如果没有 \u003ccode\u003e:ratchet\u003c/code\u003e 模式可能会回滚它已经消耗的一些字符。使用 \u003ccode\u003e:ratchet\u003c/code\u003e 它不会那样做。Grammar 不能匹配 \u003ccode\u003eTOP\u003c/code\u003e 的其余部分，所以失败了。\u003c/p\u003e\n\u003cp\u003e没有 \u003ccode\u003e:ratchet\u003c/code\u003e 的情况是不同的。如果使用 \u003ccode\u003eregex\u003c/code\u003e 而不是 \u003ccode\u003etoken\u003c/code\u003e，则允许 grammar 归还已匹配的字符：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Stuff {\n    # regex does not turn on ratcheting\n    regex TOP { \u0026lt;some-stuff\u0026gt; \u0026lt;digits\u0026gt; \u0026lt;some-stuff\u0026gt; }\n    token digits       { \\d+ }\n    regex some-stuff   { .+  }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat could match. The \u003ccode\u003eTOP\u003c/code\u003e matches \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e but realizes it’s run out of text and starts backtracking. All parts of the grammar that want to allow backtracking have to use \u003ccode\u003eregex\u003c/code\u003e. It’s not good enough for \u003ccode\u003eTOP\u003c/code\u003e to backtrack but not \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e那可能会匹配。 \u003ccode\u003eTOP\u003c/code\u003e 匹配 \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e，但意识到它已用完文本并开始回溯。想要允许回溯的 grammar 的所有部分都必须使用 \u003ccode\u003eregex\u003c/code\u003e。对于 \u003ccode\u003eTOP\u003c/code\u003e 来说，回溯并不是足够好，除了 \u003ccode\u003e\u0026lt;some-stuff\u0026gt;\u003c/code\u003e 。\u003c/p\u003e\n\u003ch1 id=\"parsing-json\"\u003eParsing JSON\u003c/h1\u003e\n\u003cp\u003eIn \u003cem\u003eMastering Perl\u003c/em\u003e I presented a JSON parser that Randal Schwartz created using some advanced features of Perl 5 regular expressions. In many ways his implementation was a grammar, but he was forced to inseparably combine the parsing and the actions. That made the regular expression almost impenetrable. It’s much cleaner and more accessible to write it as a Raku grammar.\u003c/p\u003e\n\u003cp\u003eJSON is actually quite simple with only a few weird things to handle, but it gives you the opportunity to see how \u003ccode\u003eproto\u003c/code\u003e rules can simplify actions:\u003c/p\u003e\n\u003cp\u003e在 Mastering Perl 中，我提到了一个 Randal Schwartz 使用 Perl 5 正则表达式的一些高级功能创建的 JSON 解析器。在许多方面，他的实现是一种 grammar，但他被迫不可分割地将解析和 action 组合在一块。这使得正则表达式几乎无法穿透。用 Raku grammar 编写它会更清晰，更容易访问。\u003c/p\u003e\n\u003cp\u003eJSON 实际上非常简单，只需处理几个奇怪的事情，但它让您有机会了解 \u003ccode\u003eproto\u003c/code\u003e 规则如何简化 action：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Grammar::JSON {\n    rule TOP                { \u0026lt;.ws\u0026gt; \u0026lt;value\u0026gt; \u0026lt;.ws\u0026gt; }\n\n    rule object             { \u0026#39;{\u0026#39; ~ \u0026#39;}\u0026#39; \u0026lt;string-value-list\u0026gt; }\n    rule string-value-list  { \u0026lt;string-value\u0026gt; * % \u0026#39;,\u0026#39; }\n    token string-value      { \u0026lt;string\u0026gt; \u0026lt;.ws\u0026gt; \u0026#39;:\u0026#39; \u0026lt;.ws\u0026gt; \u0026lt;value\u0026gt; }\n\n    rule array              { \u0026#39;[\u0026#39; ~ \u0026#39;]\u0026#39; \u0026lt;list\u0026gt; }\n    rule list               { \u0026lt;value\u0026gt; * % \u0026#39;,\u0026#39; }\n\n    token value             {\n        \u0026lt;string\u0026gt; | \u0026lt;number\u0026gt; | \u0026lt;object\u0026gt; | \u0026lt;array\u0026gt; |\n        \u0026lt;true\u0026gt; | \u0026lt;false\u0026gt; | \u0026lt;null\u0026gt;\n        }\n\n    token true  { \u0026#39;true\u0026#39;  }\n    token false { \u0026#39;false\u0026#39; }\n    token null  { \u0026#39;null\u0026#39;  }\n\n    token string {\n        (:ignoremark \\\u0026#34; ) ~ \\\u0026#34;\n        [\n            \u0026lt;u_char\u0026gt;              |\n            [ \u0026#39;\\\\\u0026#39; \u0026lt;[\\\\/bfnrt\u0026#34;]\u0026gt; ] |\n            \u0026lt;-[\\\\\\\u0026#34;\\n\\t]\u0026gt;+\n        ]*\n        }\n\n    token u_char {\n        \u0026#39;\\\\u\u0026#39; \u0026lt;code_point\u0026gt;\n        }\n\n    token code_point { \u0026lt;[0..9a..fA..F]\u0026gt;**4 }\n\n    token number {\n        \u0026#39;-\u0026#39; ?\n        [ 0 | \u0026lt;[1..9]\u0026gt;\u0026lt;[0..9]\u0026gt;* ]\n        [ \u0026#39;.\u0026#39; \u0026lt;[0..9]\u0026gt;+ ]?\n        [ \u0026lt;[eE]\u0026gt; \u0026lt;[+-]\u0026gt;? \u0026lt;[0..9]\u0026gt;+ ]?\n        }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou may be surprised at how easy and short that grammar is. It’s almost a straight translation of the grammar from \u003ca href=\"https://trac.tools.ietf.org/html/rfc8259\"\u003eRFC 8259\u003c/a\u003e. Now, create an action class for that:\u003c/p\u003e\n\u003cp\u003e您可能会对这个 grammar 的简单和简短感到惊讶。它几乎是  \u003ca href=\"https://trac.tools.ietf.org/html/rfc8259\"\u003eRFC 8259\u003c/a\u003e grammar 的直接翻译。现在，为此创建一个 action 类：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eclass JSON::Actions {\n    method TOP ($/) { make $\u0026lt;value\u0026gt;.made }\n    method object ($/) {\n        make $\u0026lt;string-value-list\u0026gt;.made.hash.item;\n        }\n    method array ($/) {\n        make $\u0026lt;list\u0026gt;.made.item;\n        }\n\n    method true       ($/) { make True }\n    method False      ($/) { make False }\n    method null       ($/) { make Nil }\n\n    method value      ($/) { make (\n        $\u0026lt;true\u0026gt; || $\u0026lt;false\u0026gt; || $\u0026lt;null\u0026gt; || $\u0026lt;object\u0026gt; ||\n        $\u0026lt;array\u0026gt; || $\u0026lt;string\u0026gt; || $\u0026lt;number\u0026gt; ).made\n        }\n\n    method string-value-list ($/) {\n        make $\u0026lt;string-value\u0026gt;\u0026gt;\u0026gt;.made.flat;\n        }\n\n    method string-value ($/) {\n        make $\u0026lt;string\u0026gt; =\u0026gt; $\u0026lt;value\u0026gt;\n        }\n\n    method list       ($/) { make ~$/ }\n    method string     ($/) { make $\u0026lt;uchar\u0026gt;.made || ~$/ }\n\n    method u_char     ($/) { make $\u0026lt;code_point\u0026gt;.made }\n    method code_point ($/) { make chr( (~$/).parse-base(16) ) }\n    method number     ($/) { make +$/ }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLook at the clunky handling of \u003ccode\u003evalue\u003c/code\u003e. Almost anything can be a value, so the action method does some ham-handed work to figure out which thing just matched. It looks into the possible submatches to find one with a defined value. Well, that’s pretty stupid even if it’s a quick way to get started (although there is some value in the immediate stupid versus the far-off smart).\u003c/p\u003e\n\u003cp\u003eA \u003ccode\u003eproto\u003c/code\u003e rule gets around this by making it easy for you to give different subrules the same name but different patterns. Instead of an alternation you have one token for each:\u003c/p\u003e\n\u003cp\u003e看看笨重的 \u003ccode\u003evalue\u003c/code\u003e 处理。几乎任何东西都可以是一个值，所以 action 方法会做一些简单的工作来弄清楚哪个东西匹配。它查找可能的子匹配以找到具有定义值的子匹配。好吧，即使这是一个快速入门的方式，这也是非常愚蠢的（虽然在愚蠢的直接智能中存在一些价值）。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eproto\u003c/code\u003e 规则可以让您轻松地为不同的子规则赋予相同的名称但不同的模式。不是备选分支，而是每个都有一个 \u003ccode\u003etoken\u003c/code\u003e：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eproto token value { * }\ntoken value:sym\u0026lt;string\u0026gt; { \u0026lt;string\u0026gt; }\ntoken value:sym\u0026lt;number\u0026gt; { \u0026lt;number\u0026gt; }\ntoken value:sym\u0026lt;object\u0026gt; { \u0026lt;object\u0026gt; }\ntoken value:sym\u0026lt;array\u0026gt;  { \u0026lt;array\u0026gt;  }\ntoken value:sym\u0026lt;true\u0026gt;   { \u0026lt;sym\u0026gt;    }\ntoken value:sym\u0026lt;false\u0026gt;  { \u0026lt;sym\u0026gt;    }\ntoken value:sym\u0026lt;null\u0026gt;   { \u0026lt;sym\u0026gt;    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe first \u003ccode\u003eproto\u003c/code\u003e rule matches \u003ccode\u003e*\u003c/code\u003e, which really means it dispatches to another rule in that group. It can dispatch to all of them and find the one that works.\u003c/p\u003e\n\u003cp\u003eSome of these use the special \u003ccode\u003e\u0026lt;sym\u0026gt;\u003c/code\u003e subrule in their pattern. This means that the name of the rule is the literal text to match. The \u003ccode\u003eproto\u003c/code\u003e rule \u003ccode\u003e\u0026lt;true\u0026gt;\u003c/code\u003e matches the literal text \u003ccode\u003etrue\u003c/code\u003e. You don’t have to type that out in the name and the pattern.\u003c/p\u003e\n\u003cp\u003eIt doesn’t matter which of those matches; the grammar calls each of them \u003ccode\u003e$\u0026lt;value\u0026gt;\u003c/code\u003e. The superrule only knows that something that is a value matched and that the subrule handled it appropriately. The action class \u003ccode\u003emake\u003c/code\u003es the right value and stores it in the \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e:\u003c/p\u003e\n\u003cp\u003e第一个 \u003ccode\u003eproto\u003c/code\u003e 规则匹配 \u003ccode\u003e*\u003c/code\u003e，这实际上意味着它将分派给该组中的另一个规则。它可以发送给所有人并找到有效的。\u003c/p\u003e\n\u003cp\u003e其中一些在其模式中使用特殊的 \u003ccode\u003e\u0026lt;sym\u0026gt;\u003c/code\u003e 子规则。这意味着规则的名称是要匹配的文字文本。 \u003ccode\u003eproto\u003c/code\u003e 规则 \u003ccode\u003e\u0026lt;true\u0026gt;\u003c/code\u003e 匹配文字文本 \u003ccode\u003etrue\u003c/code\u003e。您不必在名称和模式中输入该内容。\u003c/p\u003e\n\u003cp\u003e哪些匹配无关紧要; grammar 调用每个 \u003ccode\u003e$\u0026lt;value\u0026gt;\u003c/code\u003e。超级规则只知道值匹配的东西，并且子规则适当地处理它。 action 类生成正确的值并将其存储在 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 中：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eclass JSON::Actions {\n    method TOP    ($/) { make $\u0026lt;value\u0026gt;.made }\n    method object ($/) { make $\u0026lt;string-value-list\u0026gt;.made.hash.item }\n\n    method string-value-list ($/) { make $\u0026lt;string-value\u0026gt;\u0026gt;\u0026gt;.made.flat }\n    method string-value      ($/) {\n        make $\u0026lt;string\u0026gt;.made =\u0026gt; $\u0026lt;value\u0026gt;.made\n        }\n\n    method array  ($/) { make $\u0026lt;list\u0026gt;.made.item }\n    method list   ($/) { make [ $\u0026lt;value\u0026gt;.map: *.made ] }\n\n    method string     ($/) { make $\u0026lt;uchar\u0026gt;.made || ~$/ }\n\n    method value:sym\u0026lt;number\u0026gt; ($/) { make +$/.Str }\n    method value:sym\u0026lt;string\u0026gt; ($/) { make $\u0026lt;string\u0026gt;.made }\n    method value:sym\u0026lt;true\u0026gt;   ($/) { make Bool::True  }\n    method value:sym\u0026lt;false\u0026gt;  ($/) { make Bool::False }\n    method value:sym\u0026lt;null\u0026gt;   ($/) { make Any }\n    method value:sym\u0026lt;object\u0026gt; ($/) { make $\u0026lt;object\u0026gt;.made }\n    method value:sym\u0026lt;array\u0026gt;  ($/) { make $\u0026lt;array\u0026gt;.made }\n\n    method u_char     ($/) { make $\u0026lt;code_point\u0026gt;.made }\n    method code_point ($/) { make chr( (~$/).parse-base(16) ) }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 17.5Implement your own JSON parser (steal all the code you like). Test it against some JSON files to see how well it works. You might like to try the JSON files at [\u003cem\u003ehttps://github.com/briandfoy/json-acceptance-tests\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e练习17.5实现自己的 JSON 解析器（窃取你喜欢的所有代码）。针对某些 JSON 文件进行测试，看看它的工作情况。您可能想在 \u003ca href=\"https//github.com/briandfoy/json-acceptance-tests\"\u003ehttps//github.com/briandfoy/json-acceptance-tests\u003c/a\u003e 上尝试 JSON文件。\u003c/p\u003e\n\u003ch1 id=\"parsing-csv\"\u003eParsing CSV\u003c/h1\u003e\n\u003cp\u003eLet’s parse some comma-separated values (CSV) files. These are tricky because there’s no actual standard (despite \u003ca href=\"https://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e). Microsoft Excel does it one way but some other producers do it slightly differently.\u003c/p\u003e\n\u003cp\u003ePeople often initially go wrong thinking they can merely split the data on a comma character—but that might be part of the literal data in a quoted field. The quote character may also be part of the literal data, but one producer might escape internal quote marks by doubling them, \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e, while another might use the backslash, \u003ccode\u003e\\\u0026quot;\u003c/code\u003e. People often assume they are line-oriented, but some producers allow unescaped (but quoted!) vertical whitespace. If all of that wasn’t bad enough, what do you do if one line has fewer (or more) fields than the other lines?\u003c/p\u003e\n\u003cp\u003e让我们解析一些逗号分隔值（CSV）文件。这些都很棘手，因为没有实际的标准（尽管有despite \u003ca href=\"https://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e ）。 Microsoft Excel 以一种方式实现，但其他一些生产商则略有不同。\u003c/p\u003e\n\u003cp\u003e最初人们通常认为他们只能按照逗号字符拆分数据 - 但逗号可能是引用字段中字面量数据的一部分。引号字符也可能是字面量数据的一部分，但是有些制作人可能会通过两个双引号 \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e 来避免内部引号，而另一个可能会使用反斜杠，\u003ccode\u003e\\\u0026quot;\u003c/code\u003e。人们通常认为它们是面向行的，但是一些制作人允许未转义的（但引起来！）垂直空白。如果所有这些都不够糟糕，如果一行的字段少于（或多于）其他行，你会怎么做？\u003c/p\u003e\n\u003ch6 id=\"warning-警告\"\u003eWARNING 警告\u003c/h6\u003e\n\u003cp\u003eDon’t parse CSV files like this. The \u003ccode\u003eText::CSV\u003c/code\u003e module not only parses the format but also tries to correct problems as it goes.\u003c/p\u003e\n\u003cp\u003e不要像这样解析 CSV 文件。 \u003ccode\u003eText::CSV\u003c/code\u003e 模块不仅可以解析格式，还可以尝试纠正问题。\u003c/p\u003e\n\u003cp\u003eStill willing to give it a try? You should find that grammars make most of these concerns tractable:\u003c/p\u003e\n\u003cp\u003e仍然愿意尝试一下？您应该发现 grammar 使大多数这样的问题易于处理：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eThe ratcheting behavior keeps things simple.\u003c/li\u003e\n\u003cli\u003eYou can easily handle balanced openers and closers (i.e., the quoting stuff).\u003c/li\u003e\n\u003cli\u003eA grammar can inherit other grammars, so you can adjust a grammar based on the data instead of writing one grammar that handles all the data.\u003c/li\u003e\n\u003cli\u003eYou’ve seen action classes, but you can also have action instances that remember extra non-\u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e data.\u003c/li\u003e\n\u003cli\u003eThere’s a \u003ccode\u003e.subparse\u003c/code\u003e method that lets you parse chunks so you can handle one record at a time.\u003c/li\u003e\n\u003cli\u003e棘轮行为使事情变得简单。\u003c/li\u003e\n\u003cli\u003e您可以轻松地处理平衡的开口和闭合（即引用的东西）。\u003c/li\u003e\n\u003cli\u003egrammar 可以继承其他 grammar，因此您可以根据数据调整 grammar，而不是编写一个处理所有数据的 grammar。\u003c/li\u003e\n\u003cli\u003e您已经看过 action 类，但你也可以拥有记住额外非\u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003e匹配\u003c/code\u003e\u003c/a\u003e数据的 action 实例。\u003c/li\u003e\n\u003cli\u003e有一个 \u003ccode\u003e.subparse\u003c/code\u003e 方法，可以让你解析块，这样你就可以一次处理一条记录。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eHere’s a simple CSV grammar based off the rules in \u003ca href=\"https://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e. It allows for quoted fields and uses \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e to escape a literal quote. If a comma, quote, or vertical whitespace appears in the literal data, it must be quoted:\u003c/p\u003e\n\u003cp\u003e这是一个简单的 CSV grammar，基于 \u003ca href=\"https://tools.ietf.org/html/rfc4180\"\u003eRFC 4180\u003c/a\u003e 中的规则。它允许引用的字段并使用 \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e 来避免字面量引号。如果字面量数据中出现逗号，引号或垂直空格，则必须引起它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Grammar::CSV {\n    token TOP       { \u0026lt;record\u0026gt;+ }\n    token record    { \u0026lt;value\u0026gt;+ % \u0026lt;.separator\u0026gt; \\R }\n    token separator { \u0026lt;.ws\u0026gt; \u0026#39;,\u0026#39; \u0026lt;.ws\u0026gt; }\n    token value     {\n        \u0026#39;\u0026#34;\u0026#39;             # quoted\n            \u0026lt;( [ \u0026lt;-[\u0026#34;]\u0026gt; | \u0026lt;.escaped-quote\u0026gt; ]* )\u0026gt;\n        \u0026#39;\u0026#34;\u0026#39;\n            |\n        \u0026lt;-[\u0026#34;,\\n\\f\\r]\u0026gt;+  # non-quoted (no vertical ws)\n            |\n            \u0026#39;\u0026#39;          # empty\n        }\n\n    token escaped-quote { \u0026#39;\u0026#34;\u0026#34;\u0026#39; }\n    }\n\nclass CSV::Actions {\n    method record ($/) { make $\u0026lt;value\u0026gt;».made.flat }\n    method value ($/)  {\n        # undo the double double quote\n        make $/.subst( rx/ \u0026#39;\u0026#34;\u0026#34;\u0026#39; /, \u0026#39;\u0026#34;\u0026#39;, :g )\n        }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTry this on entire files. The entire file either satisfies this grammar or doesn’t:\u003c/p\u003e\n\u003cp\u003e在整个文件上试试这个。整个文件要么满足这个 grammar，要么不满足：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $data = $filename.IO.slurp;\nmy $result = Grammar::CSV.parse( $data );\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou typically don’t want to parse entire files, though. Let’s fix the first part of that problem. You want to process records as you run into them. Instead of using \u003ccode\u003e.parse\u003c/code\u003e, which anchors to the end of the text, you can use \u003ccode\u003e.subparse\u003c/code\u003e, which doesn’t. This means you can parse part of the text then stop.\u003c/p\u003e\n\u003cp\u003eYou can deal with one record at a time. Using \u003ccode\u003e.subparse\u003c/code\u003e with the \u003ccode\u003erecord\u003c/code\u003e rule gets you the first record and only the first record. The \u003ccode\u003e.subparse\u003c/code\u003e method always returns a \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e, unlike \u003ccode\u003e.parse\u003c/code\u003e, which only returns a \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e when it succeeds. You can’t rely on the type of the object as an indication of success:\u003c/p\u003e\n\u003cp\u003e但是，您通常不希望解析整个文件。让我们解决这个问题的第一部分。您希望在遇到记录时处理记录。你可以使用 \u003ccode\u003e.subparse\u003c/code\u003e，而不是使用锚定到文本末尾的 \u003ccode\u003e.parse\u003c/code\u003e，  \u003ccode\u003e.subparse\u003c/code\u003e 不会锚定到文本末尾。这意味着您可以解析部分文本然后停止。\u003c/p\u003e\n\u003cp\u003e您可以一次处理一条记录。将 \u003ccode\u003e.subparse\u003c/code\u003e 与 \u003ccode\u003erecord\u003c/code\u003e 规则一起使用可以获得第一条记录，并且只获得第一条记录。与 \u003ccode\u003e.parse\u003c/code\u003e 不同，\u003ccode\u003e.subparse\u003c/code\u003e 方法总是返回一个 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e，\u003ccode\u003e.parse\u003c/code\u003e 方法只在成功时返回一个 \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e。你不能依赖对象的类型作为成功的指示：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $data = $filename.IO.slurp;\nmy $first_result = Grammar::CSV.subparse(\n    $data, :rule(\u0026#39;record\u0026#39;), :action(CSV::Actions)\n    );\nif $first-result { ... }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat works for the first line. Use \u003ccode\u003e:c(N)\u003c/code\u003e to tell these methods where to start in the \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003eStr\u003c/code\u003e\u003c/a\u003e. You have to know where you want to start. The \u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e knows how far it got; look in the \u003ccode\u003e.from\u003c/code\u003e slot:\u003c/p\u003e\n\u003cp\u003e这适用于第一行。使用 \u003ccode\u003e:c(N)\u003c/code\u003e 告诉这些方法在 \u003ca href=\"https://docs.raku.org/type/Str.html\"\u003e\u003ccode\u003e字符串\u003c/code\u003e\u003c/a\u003e中从哪里开始。你必须知道你想要从哪里开始。\u003ca href=\"https://docs.raku.org/type/Match.html\"\u003e\u003ccode\u003eMatch\u003c/code\u003e\u003c/a\u003e 知道它进行了多远;看看 \u003ccode\u003e.from\u003c/code\u003e 插槽：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $data  = $filename.IO.slurp;\n\nloop {\n    state $from = 0;\n    my $match = Grammar::CSV.subparse(\n        $data,\n        :rule(\u0026#39;record\u0026#39;),\n        :actions(CSV::Actions),\n        :c($from)\n        );\n    last unless $match;\n\n    put \u0026#34;Matched from {$match.from} to {$match.to}\u0026#34;;\n    $from = $match.to;\n    say $match;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis is most of the way to a solution—it fails to go through the entire file if \u003ccode\u003e.subparse\u003c/code\u003e fails on one record. With some boring monkey work you could fix this to find the start of the next record and restart the parsing, but that’s more than I want to fit in this book.\u003c/p\u003e\n\u003cp\u003e这是解决方案的大部分方法 - 如果 \u003ccode\u003e.subparse\u003c/code\u003e 在一条记录上失败，则无法遍历整个文件。使用一些无聊的猴子工作，你可以修复这个问题，找到下一条记录的开始并重新开始解析，但这比我想要适应本书更多。\u003c/p\u003e\n\u003ch2 id=\"adjusting-the-grammar\"\u003eAdjusting the Grammar\u003c/h2\u003e\n\u003cp\u003eYou thought the problem was solved. Then, someone sent you a file with a slightly different format. Instead of escaping a \u003ccode\u003e\u0026quot;\u003c/code\u003e by doubling it, the new format uses the backslash.\u003c/p\u003e\n\u003cp\u003eNow your existing grammar fails to parse. You don’t have a rule that satisfies that type of escape because you didn’t need it for your grammar. As a matter of practice in both patterns and grammars, only match what you should match. Be liberal in what you accept in other ways, such as making a subgrammar to handle the new case:\u003c/p\u003e\n\u003cp\u003e你以为问题已经解决了。然后，有人给你发送了一个格式略有不同的文件。新格式使用反斜杠，而不是使用两个引号转义 \u003ccode\u003e\u0026quot;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e现在你现有的 grammar 解析失败。您没有满足该类型的转义的规则，因为您的 grammar 不需要它。作为模式和 grammar 的练习，只匹配你应该匹配的内容。在其他方面随心所欲，例如制作一个子 grammar 来处理新案例：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Grammar::CSV::Backslashed is Grammar::CSV {\n    token escaped-quote { \u0026#39;\\\\\u0026#34;\u0026#39; }\n    }\n\nclass CSV::Actions::Backslashed is CSV::Actions {\n    method value ($/)  { make $/.subst( rx/ \u0026#39;\\\\\u0026#34;\u0026#39; /, \u0026#39;\u0026#34;\u0026#39;, :g ) }\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWith two grammars, how do you get the one that you need to use? The name interpolation \u003ccode\u003e::($\u003c/code\u003e\u003cem\u003ename\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e comes in handy here:\u003c/p\u003e\n\u003cp\u003e有两个 grammar，你如何得到你需要使用的那个？\u003ccode\u003e::($\u003c/code\u003e\u003cem\u003ename\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e 在这里派上用场：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy %formats;\n%formats\u0026lt;doubled\u0026gt; = {\n    \u0026#39;file\u0026#39;    =\u0026gt; $*SPEC.catfile( \u0026lt;corpus test.csv\u0026gt; ),\n    \u0026#39;grammar\u0026#39; =\u0026gt; \u0026#39;Grammar::CSV\u0026#39;,\n    };\n%formats\u0026lt;backslashed\u0026gt; = {\n    \u0026#39;file\u0026#39; =\u0026gt; $*SPEC.catfile( \u0026lt;corpus test-backslash.csv\u0026gt; ),\n    \u0026#39;grammar\u0026#39; =\u0026gt; \u0026#39;Grammar::CSV::Backslashed\u0026#39;,\n    };\n\nfor %formats.values -\u0026gt; $hash {\n    $hash\u0026lt;data\u0026gt; = $hash\u0026lt;file\u0026gt;.IO.slurp;\n    my $class = (require ::( $hash\u0026lt;grammar\u0026gt; ) );\n    my $match = $class.parse( $hash\u0026lt;data\u0026gt; );\n    say \u0026#34;{$hash\u0026lt;file\u0026gt;} with {$hash\u0026lt;grammar\u0026gt;} \u0026#34;,\n        $match ?? \u0026#39;parsed\u0026#39; !! \u0026#39;failed\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e%formats\u003c/code\u003e \u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003eHash\u003c/code\u003e\u003c/a\u003e of \u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003eHash\u003c/code\u003e\u003c/a\u003ees stores the filenames and the grammars for them. You can load a grammar and use it to parse the data without the explicit grammar name:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e%formats\u003c/code\u003e \u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003e散列\u003c/code\u003e\u003c/a\u003e的\u003ca href=\"https://docs.raku.org/type/Hash.html\"\u003e\u003ccode\u003e散列\u003c/code\u003e\u003c/a\u003e存储文件名和 grammar。您可以加载 grammar 并使用它来解析数据而不使用显式的 grammar 名称：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ecorpus/test.csv with Grammar::CSV parsed\ncorpus/test-backslash.csv with Grammar::CSV::Backslashed parsed\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat mostly solves the problem, although there are plenty of special cases that this doesn’t cover.\u003c/p\u003e\n\u003cp\u003e这主要解决了这个问题，尽管有很多特殊情况并没有涵盖。\u003c/p\u003e\n\u003ch2 id=\"using-roles-in-grammars\"\u003eUsing Roles in Grammars\u003c/h2\u003e\n\u003cp\u003eRoles can supply rules and methods that grammars can use. In the previous section you handled different sorts of double-quote escaping through inheritance, where you overrode the rule. You can do the same thing with roles.\u003c/p\u003e\n\u003cp\u003eA grammar can have methods and subroutines. The way you declare a name with \u003ccode\u003esub\u003c/code\u003e, \u003ccode\u003emethod\u003c/code\u003e, or \u003ccode\u003erule\u003c/code\u003e tells the language parser (not your grammar!) how to parse the stuff in the \u003ca href=\"https://docs.raku.org/type/Block.html\"\u003e\u003ccode\u003eBlock\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eFirst, adjust the main grammar to have a stub method for \u003ccode\u003e\u0026lt;escaped-quote\u0026gt;\u003c/code\u003e. This forces something else to define it:\u003c/p\u003e\n\u003cp\u003e角色可以提供 grammar 可以使用的规则和方法。在上一节中，您通过继承处理了不同类型的双引号转义，其中您重写了规则。你可以用角色做同样的事情。\u003c/p\u003e\n\u003cp\u003eGrammar 可以有方法和子程序。使用 \u003ccode\u003esub\u003c/code\u003e，\u003ccode\u003emethod\u003c/code\u003e或 \u003ccode\u003erule\u003c/code\u003e 声明名称的方式告诉语言解析器（而不是 grammar！）如何解析\u003ca href=\"https://docs.raku.org/type/Block.html\"\u003e\u003ccode\u003e块\u003c/code\u003e\u003c/a\u003e中的东西。\u003c/p\u003e\n\u003cp\u003e首先，调整主 grammar，使其具有 \u003ccode\u003e\u0026lt;escaped-quote\u0026gt;\u003c/code\u003e 的存根方法。这迫使别人定义它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003egrammar Grammar::CSV {\n     token TOP       { \u0026lt;record\u0026gt;+ }\n     token record    { \u0026lt;value\u0026gt;+ % \u0026lt;.separator\u0026gt; \\R }\n     token separator { \u0026lt;.ws\u0026gt; \u0026#39;,\u0026#39; \u0026lt;.ws\u0026gt; }\n     token value     {\n         \u0026#39;\u0026#34;\u0026#39;             # quoted\n             \u0026lt;( [ \u0026lt;-[\u0026#34;]\u0026gt; | \u0026lt;.escaped-quote\u0026gt; ]* )\u0026gt;\n         \u0026#39;\u0026#34;\u0026#39;\n             |\n         \u0026lt;-[\u0026#34;,\\n\\f\\r]\u0026gt;+  # non-quoted (no vertical ws)\n             |\n             \u0026#39;\u0026#39;          # empty\n         }\n\n     # stub that you must define in a role\n     method escaped-quote { !!! }\n     }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eA role will fill in that stub method. There’s one role for each way to escape the double quote:\u003c/p\u003e\n\u003cp\u003e角色将填充该存根方法。每种方式都有一个角色来转义双引号：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003erole DoubledQuote     { token escaped-quote { \u0026#39;\u0026#34;\u0026#34;\u0026#39;  } }\nrole BackslashedQuote { token escaped-quote { \u0026#39;\\\\\u0026#34;\u0026#39; } }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen it’s time to parse a file you can choose which role you want to use. You can create a new object for \u003ccode\u003eGrammar::CSV\u003c/code\u003e and apply the appropriate role to it:\u003c/p\u003e\n\u003cp\u003e在解析文件时，您可以选择要使用的角色。您可以为 \u003ccode\u003eGrammar::CSV\u003c/code\u003e 创建一个新对象并将适当的角色应用于它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $filename   = ...;\nmy $csv-data   = $filename.IO.slurp;\nmy $csv-parser = Grammar::CSV.new but DoubledQuote;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eUse that object to parse your data:\u003c/p\u003e\n\u003cp\u003e使用该对象解析数据：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $match = $csv-parser.parse: $csv-data;\nsay $match // \u0026#39;Failed!\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDoing this doesn’t fix the double quotes in the data—a \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e stays as a \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e—but you can fix that in an action class.\u003c/p\u003e\n\u003cp\u003eEXERCISE 17.6Adjust the CSV example to use roles instead of inheritance. Create an action class to adjust the escaped double quotes as you run into them. You can start with \u003cem\u003eGrammars/test.csv\u003c/em\u003e from the downloads section of \u003ca href=\"https://www.learningraku.com/\"\u003ethe book’s website\u003c/a\u003e if you like.\u003c/p\u003e\n\u003cp\u003e这样做不会修复数据中的双引号 -  \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e 保留为 \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e - 但您可以在 action 类中修复它。\u003c/p\u003e\n\u003cp\u003e练习17.6 调整 CSV 示例以使用角色而不是继承。创建一个 action 类，以便在遇到它们时调整转义的双引号。如果您愿意，可以从本书网站的下载部分 Grammars/ test.csv 开始。\u003c/p\u003e\n\u003ch1 id=\"summary\"\u003eSummary\u003c/h1\u003e\n\u003cp\u003eGrammars are one of the killer features of the language. You can define complex relationships between patterns and use action classes to run arbitrarily complex code when something matches. You might find that your entire program ends up being one big grammar.\u003c/p\u003e\n\u003cp\u003eGrammars 是 Raku 语言的杀手级特性之一。您可以定义模式之间的复杂关系，并在匹配时使用 action 类来运行任意复杂的代码。您可能会发现整个程序最终变成一个大的 grammar。\u003c/p\u003e\n","text":"声明 本章翻译仅用于 Raku 学习和研究, 请支持电子版或纸质版。\n第十七章. Grammars Grammars are patterns on a higher plane of existence. They integrate and reuse pattern fragments to parse and react to complicated formats. This feature is at the core of Raku in a very literal sense; the language itself is implemented as a grammar. Once you start using it you’ll probably prefer it to regexes for all but the most simple problems.\nGrammars 是存在于更高层面上的模式。它们集成并重用模式片段来解析复杂的格式并做出反应。从字面意义上讲，这个功能是Raku的核心;语言本身是作为语法实现的。一旦你开始使用它，你可能更喜欢它除了最简单的问题之外的所有正则表达式。\nA Simple Grammar A grammar is a special sort of package. It can have methods and subroutines but mostly comprises special pattern methods called regex, token, and rule. Each of these define a pattern and apply different modifiers.\nNOTE Raku tends to refer to regex, token, and rule declarations as “rules,” which can be a bit imprecise at times. In this book, you can tell the difference between the language keyword and the general term by the typesetting. I’ll try to not present an ambiguous situation.\nStart with something simple (too simple for grammars). Define a TOP pattern that matches digits as the starting point. That name is special because .parse uses it by default. In this example, you declare that with regex:\nGrammar 是一种特殊的包。它可以有方法和子程序，但主要包括称为 regex，token 和 rule 的特殊模式方法。其中每个都定义了一个模式并应用了不同的修饰符。\n注意 Raku 倾向于将 regex，token 和 rule 声明称为“规则”，有时可能有点不精确。在本书中，您可以通过排版来区分语言关键字和一般术语。我会尽量不提出模棱两可的情况。\n从简单的东西开始（对于 grammar 来说太简单了）。定义匹配数字作为起点的 TOP 模式。该名称很特殊，因为 .parse 默认使用它。在此示例中，您使用 regex 声明一个 TOP：\ngrammar Number { regex TOP { \\d } } my $result = Number.parse( \u0026#39;7\u0026#39; ); # works put $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;; # Parsed! This succeeds. .parse applies the grammar to the entire value of 7. It starts with the parts that TOP describes. It can match a digit, and the value you pass to .parse is a digit.\nWhen .parse succeeds, it returns a Match object (it returns Nil when it fails). Try it with a different value. Instead of a single digit, try several digits:\n这成功了。 .parse 将 grammar 应用于整个值 7. 它从 TOP 描述的部分开始。它可以匹配一个数字，你传递给 .parse 的值是一个数字。\n当 .parse 成功时，它返回一个 Match 对象（当它失败时返回 Nil）。尝试使用不同的值。尝试几个数字而不是单个数字：\nmy $result = Number.parse( \u0026#39;137\u0026#39; ); # fails (extra digits) put $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;; # Failed! This time .parse doesn’t succeed. It starts matching with the first character and ends matching on the last character. It asserts that the text starts, there is a single digit, and the text ends. If .parse sees that there are some characters before or after its match, it fails. It matches everything or not at all. It’s almost the same thing as explicitly using anchors:\n这次 .parse 没有成功。它开始与第一个字符匹配，并在最后一个字符上结束匹配。它断言文本开始，有一个数字，文本结束。如果 .parse 看到匹配之前或之后有一些字符，则会失败。它匹配全部或根本不匹配。它与显式地使用锚点几乎相同：\ngrammar Number { regex TOP { ^ \\d+ $ } # explicitly anchored } But TOP is only the default starting point for a grammar. You can tell .parse where you’d like to start. This version defines the same pattern but calls it digits instead of TOP:\n但 TOP 是仅有的 grammar 的默认起点。你可以告诉 .parse 你想要开始的地方。此版本定义相同的模式但称为 digits 而不是 TOP：\ngrammar Number { regex digits { \\d+ } } Tell .parse where to start with the :rule named argument:\n使用 :rule 命名参数告诉 .parse 从哪里开始：\nmy @strings = \u0026#39;137\u0026#39;, \u0026#39;137 \u0026#39;, \u0026#39; 137 \u0026#39;; for @strings -\u0026gt; $string { my $result = Number.parse( $string, :rule\u0026lt;digits\u0026gt; ); put \u0026#34;｢$string｣ \u0026#34;, $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;; } The first element of @strings parses because it is only digits. The other ones fail because they have extra characters:\n@strings 的第一个元素解析成功了因为它只是数字。其他的失败了因为他们有额外的字符：\n｢137｣ parsed! ｢137 ｣ failed! ｢ 137 ｣ failed! Declare digits with rule instead of regex. This implicitly allows whitespace after any part of your pattern:\n使用 rule 而不是 regex 声明 digits。这隐式地允许在模式的任何部分之后有空格：\ngrammar Number { rule digits { \\d+ } # not anchored, and works } Now the second Str matches too because the implicit whitespace can match the space at the end (but not the beginning):\n现在第二个 Str 也匹配，因为隐式空格可以匹配末尾的空格（但不是开头）：\n｢137｣ parsed! ｢137 ｣ parsed! ｢ 137 ｣ failed! The rule applies :sigspace to its pattern. It’s the same thing as adding that adverb to the pattern:\n该 rule 将 :sigspace 应用到其模式。将该副词添加到模式中是一回事：\ngrammar Number { regex digits { :sigspace \\d+ } } :sigspace inserts the predefined \u0026lt;.ws\u0026gt; after pattern tokens. Since there’s a dot before the name ws, the \u0026lt;.ws\u0026gt; does not create a capture. It’s the same as adding optional whitespace explicitly:\n:sigspace在模式标记之后插入预定义的 \u0026lt;.ws\u0026gt;。由于名称 ws 之前有一个点号，\u0026lt;.ws\u0026gt; 不会创建捕获。它与显式添加可选空格相同：\ngrammar Number { regex digits { \\d+ \u0026lt;.ws\u0026gt; } } Instead of showing Parsed!, you can on success output the Match object you stored in $result:\n您可以在成功输出存储在 $result 中的 Match 对象，而不是显示 Parsed!\ngrammar Number { regex digits { \\d+ \u0026lt;.ws\u0026gt; } } my @strings = \u0026#39;137\u0026#39;, \u0026#39;137 \u0026#39;, \u0026#39; 137 \u0026#39;; for @strings -\u0026gt; $string { my $result = Number.parse( $string, :rule\u0026lt;digits\u0026gt; ); put $result ?? $result !! \u0026#39;Failed!\u0026#39;; } The output isn’t that different, but instead of its success status you see the text that matched:\n输出没有那么不同，但您可以看到匹配到的文本，而不是其成功状态：\n｢137｣ ｢137 ｣ Failed! Modify the grammar to remove that dot from \u0026lt;.ws\u0026gt; so it captures whitespace and try again:\n修改 grammar 以从 \u0026lt;.ws\u0026gt; 中删除该点号，以便捕获空格并再次尝试：\ngrammar Number { regex digits { \\d+ \u0026lt;ws\u0026gt; } } Now the output shows the nested levels of named captures:\n现在输出显示了命名捕获的嵌套级别：\n｢137｣ ws =\u0026gt; ｢｣ ｢137 ｣ ws =\u0026gt; ｢ ｣ Failed! This still doesn’t match the Str with leading whitespace. The parser couldn’t match that since rule only inserts \u0026lt;.ws\u0026gt; after explicit parts of the pattern. To match leading whitespace you need to add something to the front of the pattern. The beginning-of-string anchor does that, and now there’s something that \u0026lt;.ws\u0026gt; can come after:\n这仍然与带有前导空格的 Str 不匹配。解析器无法匹配，因为 rule 仅在模式的显式部分之后插入 \u0026lt;.ws\u0026gt;。要匹配前导空格，您需要在模式的前面添加一些内容。字符串开头的锚点就是这样，现在有一些 \u0026lt;.ws\u0026gt; 后面可以出现的东西：\ngrammar Number { rule digits { ^ \\d+ } # ^ \u0026lt;.ws\u0026gt; \\d+ \u0026lt;.ws\u0026gt; } There’s also the zero-width always-matches token, \u0026lt;?\u0026gt;:\n还有零宽度始终匹配的 token 标记，\u0026lt;?\u0026gt;：\ngrammar Number { rule digits { \u0026lt;?\u0026gt; \\d+ } # \u0026lt;?\u0026gt; \u0026lt;.ws\u0026gt; \\d+ \u0026lt;.ws\u0026gt; } Most of the time you don’t want to play these games. If you want leading whitespace, you can note that explicitly (and you probably don’t want to capture it):\n大多数时候你不想玩这些游戏。如果你想要前导空格，你可以显式地注意到（并且你可能不想捕获它）：\ngrammar Number { rule digits { \u0026lt;.ws\u0026gt; \\d+ } # \u0026lt;.ws\u0026gt; \\d+ \u0026lt;.ws\u0026gt; } Use token instead of rule if you don’t want any implicit whitespace:\n如果您不想要任何隐式空格，请使用 token 而不是 rule：\ngrammar Number { token digits { \\d+ } # just the digits } You’ll see another feature of rule and token later in this chapter.\n您将在本章后面看到 rule 和 token 的另一个功能。\nEXERCISE 17.1Write a grammer to match octal digits, with or without a leading 0 or 0o. Your grammar should parse numbers such as 123, 0123, and 0o456, but not 8, 129, or o345.\n练习17.1写一个 grammar 来匹配八进制数字，带或不带前导 0 或 0o。您的 grammar 应该解析诸如 123, 0123 和 0o456 之类的数字，但不能解析 8 ,129 或 o345。\nMultiple Rules Grammars wouldn’t be useful if you were limited to one rule. You can define additional rules and use them inside other rules. In the first exercise you had only the TOP rule but you could separate the pattern into parts. Break up the pattern in TOP into rules for prefix and digits. It’s this decomposability that makes it so easy to solve hard parsing problems:\n如果你只限于一条规则，那么 grammar 就没用了。您可以定义其他规则并在其他规则中使用它们。在第一个练习中，您只有 TOP 规则，但您可以将模式分成几部分。将 TOP 中的模式分解为 prefix和digits的规则。正是这种可分解性使得解决困难的解析问题变得如此简单：\ngrammar OctalNumber { regex TOP { \u0026lt;prefix\u0026gt;? \u0026lt;digits\u0026gt; } regex prefix { [ 0o? ] } regex digits { \u0026lt;[0..7]\u0026gt;+ } } my $number = \u0026#39;0o177\u0026#39;; my $result = OctalNumber.parse( $number ); say $result // \u0026#34;failed\u0026#34;; The stringified Match object shows the overall match and the named subcaptures:\n字符串化的 Match 对象显示整体匹配和命名的子捕获：\n｢0o177｣ prefix =\u0026gt; ｢0o｣ digits =\u0026gt; ｢177｣ You can access the pieces:\n你可以访问这些部分：\nput \u0026#34;Prefix: $result\u0026lt;prefix\u0026gt;\u0026#34;; put \u0026#34;Digits: $result\u0026lt;digits\u0026gt;\u0026#34;; EXERCISE 17.2Create a grammar to match a Raku variable name with a sigil (ignore sigilless variables, because that’s too easy). Use separate rules to match the sigil and the identifier. Here is a list of candidates to check if you don’t come up with your own:my @candidates = qw/ sigilless $scalar @array %hash $123abc $abc'123 $ab'c123 $two-words $two- $-dash /;\nYou can suppress some of those named captures by prefixing the rule with a dot. You probably don’t care about the prefix, so don’t save it:\n练习17.2 创建一个 grammar，匹配带有 sigil 的 Raku 变量名（忽略无符号变量，因为这太简单了）。使用单独的规则来匹配 sigil 和标识符。这是一个候选人列表，检查你是否没有自己的：my @candidates = qw/ sigilless $scalar @array %hash $123abc $abc'123 $ab'c123 $two-words $two- $-dash /;\n您可以通过在规则前加一个点号来抑制某些命名捕获。您可能不关心前缀，所以不要保存它：\ngrammar OctalNumber { regex TOP { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt; } regex prefix { [ 0o? ] } regex digits { \u0026lt;[0..7]\u0026gt;+ } } my $number = \u0026#39;0o177\u0026#39;; my $result = OctalNumber.parse( $number ); say $result // \u0026#34;failed\u0026#34;; The output doesn’t include the prefix information:\n输出不包含前缀信息：\n｢0o177｣ digits =\u0026gt; ｢177｣ This doesn’t make much of a difference in this small example, but imagine a complicated grammar with many, many rules. That brings you to the next big feature of grammars. Besides the grammar itself, you can specify an action class that processes the rules as the grammar successfully parses them.\n这在这个小例子中并没有太大的区别，但想象一下复杂的 grammar 有很多很多规则。这将带您进入 grammar 的下一个重要特征。除 grammar 本身外，您还可以指定一个 action 类来处理规则，因为 grammar 会成功解析它们。\nDebugging Grammars There are two modules that can help you figure out what’s going on in your grammar. Both are much more impressive in your terminal.\n有两个模块可以帮助您弄清楚 grammar 中发生了什么。两者在你的终端中都更令人印象深刻。\nGrammar::Tracer The Grammar::Tracer module shows you the path through a grammar (and applies to any grammar in its scope). Merely loading the module is enough to activate it:\nGrammar::Tracer 模块向您显示 grammar 的路径（并适用于其作用域内的任何 grammar）。仅加载模块就足以激活它：\nuse Grammar::Tracer; grammar OctalNumber { regex TOP { \u0026lt;prefix\u0026gt;? \u0026lt;digits\u0026gt; } regex prefix { [ 0o? ] } regex digits { \u0026lt;[0..7]\u0026gt;+ } } my $number = \u0026#39;0o177\u0026#39;; $/ = OctalNumber.parse( $number ); say $/ // \u0026#34;failed\u0026#34;; The first part of the output is the trace. It shows which rule it’s in and the result. In this example each one matches:\n输出的第一部分是跟踪。它显示了它所在的规则和结果。在这个例子中，每个规则都匹配：\nTOP | prefix | * MATCH \u0026#34;0o\u0026#34; | digits | * MATCH \u0026#34;177\u0026#34; * MATCH \u0026#34;0o177\u0026#34; ｢0o177｣ prefix =\u0026gt; ｢0o｣ digits =\u0026gt; ｢177｣ Changing the data to include invalid digits, such as 0o178, means the grammar will fail. In the trace you can see it matches up to 0o17 but can’t continue, so you know where in your Str things went wrong. It could be that the grammar should not match the text or the grammar is not as accommodating as it should be:\n更改数据以包含无效数字（例如 0o178）意味着 grammar 将失败。在跟踪中，您可以看到它最多匹配到 0o17 但无法继续，因此你就知道 Str 中的哪些地方出错了。可能是 grammar 不应该与文本匹配，或者 grammar 不应该像它应该的那样适应：\nTOP | prefix | * MATCH \u0026#34;0o\u0026#34; | digits | * MATCH \u0026#34;17\u0026#34; * MATCH \u0026#34;0o17\u0026#34; digits * FAIL digits * MATCH \u0026#34;0\u0026#34; failed Instead of adding Grammar::Tracer to your program you can load it from the command line with the -Mswitch. You probably don’t mean to leave it in anyway:\n您可以使用 -M 开关从命令行加载 Grammar::Tracer，而不是将 Grammar::Tracer 添加到程序中。你可能并不是故意把它留下来：\n% raku -MGrammar::Tracer program.p6 Grammar::Debugger The Grammar::Debugger module does the same thing as Grammar::Tracer (they come together in the same distribution) but allows you to proceed one step at a time. When you start it you get a prompt; type h to get a list of commands:\nGrammar::Debugger 模块与 Grammar::Tracer （它们在同一个发行版中）执行相同的操作，但允许您一次执行一个步骤。当你启动它时，你得到一个提示; 键入 h 以获取命令列表：\n% raku -MGrammar::Debugger test.p6 TOP \u0026gt; h r run (until breakpoint, if any) \u0026lt;enter\u0026gt; single step rf run until a match fails r \u0026lt;name\u0026gt; run until rule \u0026lt;name\u0026gt; is reached bp add \u0026lt;name\u0026gt; add a rule name breakpoint bp list list all active rule name breakpoints bp rm \u0026lt;name\u0026gt; remove a rule name breakpoint bp rm removes all breakpoints q quit Typing Enter with no command single-steps through the parse process and gives you a chance to inspect the text and the state of the parser. The rf command will get you to the next failing rule:\n在没有命令的情况下键入回车键单步执行解析过程，并让你有机会检查文本和解析器的状态。 rf 命令会使你进入下一个失败的规则：\n\u0026gt; rf | prefix | * MATCH \u0026#34;0o\u0026#34; | digits | * MATCH \u0026#34;17\u0026#34; * MATCH \u0026#34;0o17\u0026#34; digits * FAIL \u0026gt; A Simple Action Class A grammar does its work by descending into its rules to take apart text. You can go the opposite way by processing each part of the parsed text to build a new Str (or data structure, or whatever you like). You can tell .parse to use an action class to do this.\ngrammar 通过下降到它的规则中分解文本来完成其工作。你可以通过处理已解析文本的每个部分来构建新的 Str（或数据结构，或任何您喜欢的任何内容）。您可以告诉 .parse 使用 action 类来执行此操作。\nHere’s a simple action class, OctalActions. It doesn’t need to have the same name as the grammar, but the method names are the same as the rule names. Each method takes a Match object argument. In this example, the signature uses $/, which is a variable with a few advantages that you’ll see in a moment:\n这是一个简单的 action 类 OctalActions。它不需要与 grammar 具有相同的名称，但方法名称与规则名称相同。每个方法都接收 Match 对象参数。在此示例中，签名使用 $/，这是一个具有一些优势的变量，稍后你将看到：\nclass OctalActions { method digits ($/) { put \u0026#34;Action class got $/\u0026#34; } } grammar OctalNumber { regex TOP { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt; } regex prefix { [ 0o? ] } regex digits { \u0026lt;[0..7]\u0026gt;+ } } Tell .parse which class to use with the :actions named parameter. The name does not need to correspond to the grammar:\n使用 :actions 命名参数告诉 .parse 使用哪个类。该名称不需要与 grammar 对应：\nmy $number = \u0026#39;0o177\u0026#39;; my $result = OctalNumber.parse( $number, :actions(OctalActions) ); say $result // \u0026#34;failed\u0026#34;; This action class doesn’t do much. When the digits rule successfully matches it triggers the rule of the same name in the action class. That method merely outputs the argument:\n这个 action 类做的不多。当 digits 规则成功匹配时，它会触发 action 类中相同名称的规则。该方法仅输出参数：\nAction class got 177 ｢0o177｣ digits =\u0026gt; ｢177｣ EXERCISE 17.3Implement your own action class for the OctalNumber grammar. When the digits method matches, output the decimal version of the number. The parse-base routine from Str may be useful. For extra credit, take one number per line from standard input and turn them into decimal numbers.\n练习17.3 为 OctalNumber grammar 实现自己的 action 类。当 digits 方法匹配时，输出数字的十进制版本。 Str 的 parse-base 例程可能很有用。如需额外学分，请从标准输入中每行获取一个数字并将其转换为十进制数字。\nCreating an Abstract Syntax Tree Actions shouldn’t output information directly. Instead, they can add values to the Match object. Calling makein the action method sets a value in the abstract syntax tree (or .ast) slot of the Match. You can access that with .made:\nAction 不应直接输出信息。相反，他们可以向 Match 对象添加值。在 action 方法中调用 make 会在 Match 的抽象语法树（或 .ast ）槽中设置一个值。您可以使用 .made 访问它：\nclass OctalActions { method digits ($/) { make parse-base( ~$/, 8 ) # must stringify $/ } } grammar OctalNumber { regex TOP { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt; } regex prefix { [ 0o? ] } regex digits { \u0026lt;[0..7]\u0026gt;+ } } my $number = \u0026#39;0o177\u0026#39;; my $result = OctalNumber.parse( $number, :actions(OctalActions) ); put $result ?? \u0026#34;Turned ｢{$result\u0026lt;digits\u0026gt;}｣ into ｢{$result\u0026lt;digits\u0026gt;.made}｣\u0026#34; !! \u0026#39;Failed!\u0026#39;; The make puts something into the .ast slot of the Match and .made gets it back out. You can make any value that you like, including containers, objects, and most other things you can imagine. You still get the original, literal match.\nIn the previous example, the digits action method handled the value. A TOP action method could do it, but it has to reach one level below the Match object:\nmake 将一些内容放入Match的 .ast 插槽中，然后 .made 将其恢复原状。您可以make 任何您喜欢的值，包括容器，对象和您可以想象的大多数其他内容。你仍然得到原始的，字面上的匹配。\n在前面的示例中，digits action 方法处理了该值。 TOP action 方法可以做到，但它必须到达 Match 对象下面的一个级别：\nclass OctalActions { method digits ($/) { make parse-base( ~$/, 8 ) # must stringify $/ } } grammar OctalNumber { regex TOP { \u0026lt;.prefix\u0026gt;? \u0026lt;digits\u0026gt; } regex prefix { [ 0o? ] } regex digits { \u0026lt;[0..7]\u0026gt;+ } } my $number = \u0026#39;0o177\u0026#39;; my $result = OctalNumber.parse( $number, :actions(OctalActions) ); put $result.so ?? \u0026#34;Turned ｢{$number}｣ into ｢{$result.made}｣\u0026#34; !! \u0026#39;Failed!\u0026#39;; You don’t have to use $/ in the signature; it’s a convenience. There’s nothing particularly magical about it. You could use some other variable if you are paid by the character:\n您不必在签名中使用 $/; 这是一个方便写法。它没什么特别神奇的。如果你有其它字符，您可以使用其他变量：\nclass OctalActions { method TOP ($match) { make parse-base( ~$match\u0026lt;digits\u0026gt;, 8 ) } } EXERCISE 17.4Create a grammar to parse a four-part, dotted-decimal IP address, such as 192.168.1.137. Create an action class that turns the parse results into a 32-bit number. Output that 32-bit number in hexadecimal.\n练习17.4 创建一个 grammar 来解析一个由四部分组成的点分十进制 IP 地址，例如 192.168.1.137。创建一个 action 类，将解析结果转换为32位数。以十六进制输出那个32位数。\nRatcheting The rule and token declarators have a feature that regex doesn’t; they both prevent backtracking by implicitly setting the :ratchet adverb. Once one of those rules matches they don’t backtrack to try again if there’s a failure later in the grammar.\nHere’s a nonsense grammar that includes a rule \u0026lt;some-stuff\u0026gt; that matches one or more of any character. The TOP token wants to match digits surrounded by unspecified stuff:\nrule 和 token 声明符具有 regex 不具有的功能;他们都通过隐式设置 :ratchet 副词来阻止回溯。一旦这些规则中的一个匹配，如果在 grammar 中稍后出现失败，则它们不会回溯以再次尝试。\n这是一个无意义的 grammar，其中包含能匹配一个或多个字符的 \u0026lt;some-stuff\u0026gt; 规则。 TOP token 想要匹配由未指定的东西包围的数字：\ngrammar Stuff { token TOP { \u0026lt;some-stuff\u0026gt; \u0026lt;digits\u0026gt; \u0026lt;some-stuff\u0026gt; } token digits { \\d+ } token some-stuff { .+ } } This Str could satisfy that pattern. It has stuff, some digits, and more stuff:\n这个字符串可以满足这种模式。它有东西，一些数字和更多的东西：\nmy $string = \u0026#39;abcdef123xyx456\u0026#39;; But, Stuff fails to parse it:\n但是，Stuff 无法解析它：\nmy $result = Stuff.parse( $string ); put \u0026#34;｢$string｣ \u0026#34;, $result ?? \u0026#39;Parsed!\u0026#39; !! \u0026#39;Failed!\u0026#39;; # Failed! It’s the :ratchet that makes it fail. Work out its path to see why. TOP has to first match \u0026lt;some-stuff\u0026gt;. That matches any character one or more times, greedily—it matches the entire text. TOP next needs to match\u0026lt;digits\u0026gt;, but there is nothing left to match because of that greediness. Without :ratchet the pattern might roll back some of the characters it already consumed. With :ratchet it doesn’t do that. The grammar can’t match the rest of TOP and it fails.\nWithout :ratchet the situation is different. If you use regex instead of token, you allow the grammar to give back characters it has already matched:\n是 :ratchet 使它失败的。找出原因，看看为什么。 TOP 必须首先匹配 \u0026lt;some-stuff\u0026gt;。这匹配任何一个字符一次或多次，贪婪地 - 它匹配整个文本。 TOP 接着需要匹配 \u0026lt;digits\u0026gt;，但由于这种贪婪，没有什么可以匹配的了。如果没有 :ratchet 模式可能会回滚它已经消耗的一些字符。使用 :ratchet 它不会那样做。Grammar 不能匹配 TOP 的其余部分，所以失败了。\n没有 :ratchet 的情况是不同的。如果使用 regex 而不是 token，则允许 grammar 归还已匹配的字符：\ngrammar Stuff { # regex does not turn on ratcheting regex TOP { \u0026lt;some-stuff\u0026gt; \u0026lt;digits\u0026gt; \u0026lt;some-stuff\u0026gt; } token digits { \\d+ } regex some-stuff { .+ } } That could match. The TOP matches \u0026lt;some-stuff\u0026gt; but realizes it’s run out of text and starts backtracking. All parts of the grammar that want to allow backtracking have to use regex. It’s not good enough for TOP to backtrack but not \u0026lt;some-stuff\u0026gt;.\n那可能会匹配。 TOP 匹配 \u0026lt;some-stuff\u0026gt;，但意识到它已用完文本并开始回溯。想要允许回溯的 grammar 的所有部分都必须使用 regex。对于 TOP 来说，回溯并不是足够好，除了 \u0026lt;some-stuff\u0026gt; 。\nParsing JSON In Mastering Perl I presented a JSON parser that Randal Schwartz created using some advanced features of Perl 5 regular expressions. In many ways his implementation was a grammar, but he was forced to inseparably combine the parsing and the actions. That made the regular expression almost impenetrable. It’s much cleaner and more accessible to write it as a Raku grammar.\nJSON is actually quite simple with only a few weird things to handle, but it gives you the opportunity to see how proto rules can simplify actions:\n在 Mastering Perl 中，我提到了一个 Randal Schwartz 使用 Perl 5 正则表达式的一些高级功能创建的 JSON 解析器。在许多方面，他的实现是一种 grammar，但他被迫不可分割地将解析和 action 组合在一块。这使得正则表达式几乎无法穿透。用 Raku grammar 编写它会更清晰，更容易访问。\nJSON 实际上非常简单，只需处理几个奇怪的事情，但它让您有机会了解 proto 规则如何简化 action：\ngrammar Grammar::JSON { rule TOP { \u0026lt;.ws\u0026gt; \u0026lt;value\u0026gt; \u0026lt;.ws\u0026gt; } rule object { \u0026#39;{\u0026#39; ~ \u0026#39;}\u0026#39; \u0026lt;string-value-list\u0026gt; } rule string-value-list { \u0026lt;string-value\u0026gt; * % \u0026#39;,\u0026#39; } token string-value { \u0026lt;string\u0026gt; \u0026lt;.ws\u0026gt; \u0026#39;:\u0026#39; \u0026lt;.ws\u0026gt; \u0026lt;value\u0026gt; } rule array { \u0026#39;[\u0026#39; ~ \u0026#39;]\u0026#39; \u0026lt;list\u0026gt; } rule list { \u0026lt;value\u0026gt; * % \u0026#39;,\u0026#39; } token value { \u0026lt;string\u0026gt; | \u0026lt;number\u0026gt; | \u0026lt;object\u0026gt; | \u0026lt;array\u0026gt; | \u0026lt;true\u0026gt; | \u0026lt;false\u0026gt; | \u0026lt;null\u0026gt; } token true { \u0026#39;true\u0026#39; } token false { \u0026#39;false\u0026#39; } token null { \u0026#39;null\u0026#39; } token string { (:ignoremark \\\u0026#34; ) ~ \\\u0026#34; [ \u0026lt;u_char\u0026gt; | [ \u0026#39;\\\\\u0026#39; \u0026lt;[\\\\/bfnrt\u0026#34;]\u0026gt; ] | \u0026lt;-[\\\\\\\u0026#34;\\n\\t]\u0026gt;+ ]* } token u_char { \u0026#39;\\\\u\u0026#39; \u0026lt;code_point\u0026gt; } token code_point { \u0026lt;[0..9a..fA..F]\u0026gt;**4 } token number { \u0026#39;-\u0026#39; ? [ 0 | \u0026lt;[1..9]\u0026gt;\u0026lt;[0..9]\u0026gt;* ] [ \u0026#39;.\u0026#39; \u0026lt;[0..9]\u0026gt;+ ]? [ \u0026lt;[eE]\u0026gt; \u0026lt;[+-]\u0026gt;? \u0026lt;[0..9]\u0026gt;+ ]? } } You may be surprised at how easy and short that grammar is. It’s almost a straight translation of the grammar from RFC 8259. Now, create an action class for that:\n您可能会对这个 grammar 的简单和简短感到惊讶。它几乎是 RFC 8259 grammar 的直接翻译。现在，为此创建一个 action 类：\nclass JSON::Actions { method TOP ($/) { make $\u0026lt;value\u0026gt;.made } method object ($/) { make $\u0026lt;string-value-list\u0026gt;.made.hash.item; } method array ($/) { make $\u0026lt;list\u0026gt;.made.item; } method true ($/) { make True } method False ($/) { make False } method null ($/) { make Nil } method value ($/) { make ( $\u0026lt;true\u0026gt; || $\u0026lt;false\u0026gt; || $\u0026lt;null\u0026gt; || $\u0026lt;object\u0026gt; || $\u0026lt;array\u0026gt; || $\u0026lt;string\u0026gt; || $\u0026lt;number\u0026gt; ).made } method string-value-list ($/) { make $\u0026lt;string-value\u0026gt;\u0026gt;\u0026gt;.made.flat; } method string-value ($/) { make $\u0026lt;string\u0026gt; =\u0026gt; $\u0026lt;value\u0026gt; } method list ($/) { make ~$/ } method string ($/) { make $\u0026lt;uchar\u0026gt;.made || ~$/ } method u_char ($/) { make $\u0026lt;code_point\u0026gt;.made } method code_point ($/) { make chr( (~$/).parse-base(16) ) } method number ($/) { make +$/ } } Look at the clunky handling of value. Almost anything can be a value, so the action method does some ham-handed work to figure out which thing just matched. It looks into the possible submatches to find one with a defined value. Well, that’s pretty stupid even if it’s a quick way to get started (although there is some value in the immediate stupid versus the far-off smart).\nA proto rule gets around this by making it easy for you to give different subrules the same name but different patterns. Instead of an alternation you have one token for each:\n看看笨重的 value 处理。几乎任何东西都可以是一个值，所以 action 方法会做一些简单的工作来弄清楚哪个东西匹配。它查找可能的子匹配以找到具有定义值的子匹配。好吧，即使这是一个快速入门的方式，这也是非常愚蠢的（虽然在愚蠢的直接智能中存在一些价值）。\nproto 规则可以让您轻松地为不同的子规则赋予相同的名称但不同的模式。不是备选分支，而是每个都有一个 token：\nproto token value { * } token value:sym\u0026lt;string\u0026gt; { \u0026lt;string\u0026gt; } token value:sym\u0026lt;number\u0026gt; { \u0026lt;number\u0026gt; } token value:sym\u0026lt;object\u0026gt; { \u0026lt;object\u0026gt; } token value:sym\u0026lt;array\u0026gt; { \u0026lt;array\u0026gt; } token value:sym\u0026lt;true\u0026gt; { \u0026lt;sym\u0026gt; } token value:sym\u0026lt;false\u0026gt; { \u0026lt;sym\u0026gt; } token value:sym\u0026lt;null\u0026gt; { \u0026lt;sym\u0026gt; } The first proto rule matches *, which really means it dispatches to another rule in that group. It can dispatch to all of them and find the one that works.\nSome of these use the special \u0026lt;sym\u0026gt; subrule in their pattern. This means that the name of the rule is the literal text to match. The proto rule \u0026lt;true\u0026gt; matches the literal text true. You don’t have to type that out in the name and the pattern.\nIt doesn’t matter which of those matches; the grammar calls each of them $\u0026lt;value\u0026gt;. The superrule only knows that something that is a value matched and that the subrule handled it appropriately. The action class makes the right value and stores it in the Match:\n第一个 proto 规则匹配 *，这实际上意味着它将分派给该组中的另一个规则。它可以发送给所有人并找到有效的。\n其中一些在其模式中使用特殊的 \u0026lt;sym\u0026gt; 子规则。这意味着规则的名称是要匹配的文字文本。 proto 规则 \u0026lt;true\u0026gt; 匹配文字文本 true。您不必在名称和模式中输入该内容。\n哪些匹配无关紧要; grammar 调用每个 $\u0026lt;value\u0026gt;。超级规则只知道值匹配的东西，并且子规则适当地处理它。 action 类生成正确的值并将其存储在 Match 中：\nclass JSON::Actions { method TOP ($/) { make $\u0026lt;value\u0026gt;.made } method object ($/) { make $\u0026lt;string-value-list\u0026gt;.made.hash.item } method string-value-list ($/) { make $\u0026lt;string-value\u0026gt;\u0026gt;\u0026gt;.made.flat } method string-value ($/) { make $\u0026lt;string\u0026gt;.made =\u0026gt; $\u0026lt;value\u0026gt;.made } method array ($/) { make $\u0026lt;list\u0026gt;.made.item } method list ($/) { make [ $\u0026lt;value\u0026gt;.map: *.made ] } method string ($/) { make $\u0026lt;uchar\u0026gt;.made || ~$/ } method value:sym\u0026lt;number\u0026gt; ($/) { make +$/.Str } method value:sym\u0026lt;string\u0026gt; ($/) { make $\u0026lt;string\u0026gt;.made } method value:sym\u0026lt;true\u0026gt; ($/) { make Bool::True } method value:sym\u0026lt;false\u0026gt; ($/) { make Bool::False } method value:sym\u0026lt;null\u0026gt; ($/) { make Any } method value:sym\u0026lt;object\u0026gt; ($/) { make $\u0026lt;object\u0026gt;.made } method value:sym\u0026lt;array\u0026gt; ($/) { make $\u0026lt;array\u0026gt;.made } method u_char ($/) { make $\u0026lt;code_point\u0026gt;.made } method code_point ($/) { make chr( (~$/).parse-base(16) ) } } EXERCISE 17.5Implement your own JSON parser (steal all the code you like). Test it against some JSON files to see how well it works. You might like to try the JSON files at [https://github.com/briandfoy/json-acceptance-tests\n练习17.5实现自己的 JSON 解析器（窃取你喜欢的所有代码）。针对某些 JSON 文件进行测试，看看它的工作情况。您可能想在 https//github.com/briandfoy/json-acceptance-tests 上尝试 JSON文件。\nParsing CSV Let’s parse some comma-separated values (CSV) files. These are tricky because there’s no actual standard (despite RFC 4180). Microsoft Excel does it one way but some other producers do it slightly differently.\nPeople often initially go wrong thinking they can merely split the data on a comma character—but that might be part of the literal data in a quoted field. The quote character may also be part of the literal data, but one producer might escape internal quote marks by doubling them, \u0026quot;\u0026quot;, while another might use the backslash, \\\u0026quot;. People often assume they are line-oriented, but some producers allow unescaped (but quoted!) vertical whitespace. If all of that wasn’t bad enough, what do you do if one line has fewer (or more) fields than the other lines?\n让我们解析一些逗号分隔值（CSV）文件。这些都很棘手，因为没有实际的标准（尽管有despite RFC 4180 ）。 Microsoft Excel 以一种方式实现，但其他一些生产商则略有不同。\n最初人们通常认为他们只能按照逗号字符拆分数据 - 但逗号可能是引用字段中字面量数据的一部分。引号字符也可能是字面量数据的一部分，但是有些制作人可能会通过两个双引号 \u0026quot;\u0026quot; 来避免内部引号，而另一个可能会使用反斜杠，\\\u0026quot;。人们通常认为它们是面向行的，但是一些制作人允许未转义的（但引起来！）垂直空白。如果所有这些都不够糟糕，如果一行的字段少于（或多于）其他行，你会怎么做？\nWARNING 警告 Don’t parse CSV files like this. The Text::CSV module not only parses the format but also tries to correct problems as it goes.\n不要像这样解析 CSV 文件。 Text::CSV 模块不仅可以解析格式，还可以尝试纠正问题。\nStill willing to give it a try? You should find that grammars make most of these concerns tractable:\n仍然愿意尝试一下？您应该发现 grammar 使大多数这样的问题易于处理：\nThe ratcheting behavior keeps things simple. You can easily handle balanced openers and closers (i.e., the quoting stuff). A grammar can inherit other grammars, so you can adjust a grammar based on the data instead of writing one grammar that handles all the data. You’ve seen action classes, but you can also have action instances that remember extra non-Match data. There’s a .subparse method that lets you parse chunks so you can handle one record at a time. 棘轮行为使事情变得简单。 您可以轻松地处理平衡的开口和闭合（即引用的东西）。 grammar 可以继承其他 grammar，因此您可以根据数据调整 grammar，而不是编写一个处理所有数据的 grammar。 您已经看过 action 类，但你也可以拥有记住额外非匹配数据的 action 实例。 有一个 .subparse 方法，可以让你解析块，这样你就可以一次处理一条记录。 Here’s a simple CSV grammar based off the rules in RFC 4180. It allows for quoted fields and uses \u0026quot;\u0026quot; to escape a literal quote. If a comma, quote, or vertical whitespace appears in the literal data, it must be quoted:\n这是一个简单的 CSV grammar，基于 RFC 4180 中的规则。它允许引用的字段并使用 \u0026quot;\u0026quot; 来避免字面量引号。如果字面量数据中出现逗号，引号或垂直空格，则必须引起它：\ngrammar Grammar::CSV { token TOP { \u0026lt;record\u0026gt;+ } token record { \u0026lt;value\u0026gt;+ % \u0026lt;.separator\u0026gt; \\R } token separator { \u0026lt;.ws\u0026gt; \u0026#39;,\u0026#39; \u0026lt;.ws\u0026gt; } token value { \u0026#39;\u0026#34;\u0026#39; # quoted \u0026lt;( [ \u0026lt;-[\u0026#34;]\u0026gt; | \u0026lt;.escaped-quote\u0026gt; ]* )\u0026gt; \u0026#39;\u0026#34;\u0026#39; | \u0026lt;-[\u0026#34;,\\n\\f\\r]\u0026gt;+ # non-quoted (no vertical ws) | \u0026#39;\u0026#39; # empty } token escaped-quote { \u0026#39;\u0026#34;\u0026#34;\u0026#39; } } class CSV::Actions { method record ($/) { make $\u0026lt;value\u0026gt;».made.flat } method value ($/) { # undo the double double quote make $/.subst( rx/ \u0026#39;\u0026#34;\u0026#34;\u0026#39; /, \u0026#39;\u0026#34;\u0026#39;, :g ) } } Try this on entire files. The entire file either satisfies this grammar or doesn’t:\n在整个文件上试试这个。整个文件要么满足这个 grammar，要么不满足：\nmy $data = $filename.IO.slurp; my $result = Grammar::CSV.parse( $data ); You typically don’t want to parse entire files, though. Let’s fix the first part of that problem. You want to process records as you run into them. Instead of using .parse, which anchors to the end of the text, you can use .subparse, which doesn’t. This means you can parse part of the text then stop.\nYou can deal with one record at a time. Using .subparse with the record rule gets you the first record and only the first record. The .subparse method always returns a Match, unlike .parse, which only returns a Match when it succeeds. You can’t rely on the type of the object as an indication of success:\n但是，您通常不希望解析整个文件。让我们解决这个问题的第一部分。您希望在遇到记录时处理记录。你可以使用 .subparse，而不是使用锚定到文本末尾的 .parse， .subparse 不会锚定到文本末尾。这意味着您可以解析部分文本然后停止。\n您可以一次处理一条记录。将 .subparse 与 record 规则一起使用可以获得第一条记录，并且只获得第一条记录。与 .parse 不同，.subparse 方法总是返回一个 Match，.parse 方法只在成功时返回一个 Match。你不能依赖对象的类型作为成功的指示：\nmy $data = $filename.IO.slurp; my $first_result = Grammar::CSV.subparse( $data, :rule(\u0026#39;record\u0026#39;), :action(CSV::Actions) ); if $first-result { ... } That works for the first line. Use :c(N) to tell these methods where to start in the Str. You have to know where you want to start. The Match knows how far it got; look in the .from slot:\n这适用于第一行。使用 :c(N) 告诉这些方法在 字符串中从哪里开始。你必须知道你想要从哪里开始。Match 知道它进行了多远;看看 .from 插槽：\nmy $data = $filename.IO.slurp; loop { state $from = 0; my $match = Grammar::CSV.subparse( $data, :rule(\u0026#39;record\u0026#39;), :actions(CSV::Actions), :c($from) ); last unless $match; put \u0026#34;Matched from {$match.from} to {$match.to}\u0026#34;; $from = $match.to; say $match; } This is most of the way to a solution—it fails to go through the entire file if .subparse fails on one record. With some boring monkey work you could fix this to find the start of the next record and restart the parsing, but that’s more than I want to fit in this book.\n这是解决方案的大部分方法 - 如果 .subparse 在一条记录上失败，则无法遍历整个文件。使用一些无聊的猴子工作，你可以修复这个问题，找到下一条记录的开始并重新开始解析，但这比我想要适应本书更多。\nAdjusting the Grammar You thought the problem was solved. Then, someone sent you a file with a slightly different format. Instead of escaping a \u0026quot; by doubling it, the new format uses the backslash.\nNow your existing grammar fails to parse. You don’t have a rule that satisfies that type of escape because you didn’t need it for your grammar. As a matter of practice in both patterns and grammars, only match what you should match. Be liberal in what you accept in other ways, such as making a subgrammar to handle the new case:\n你以为问题已经解决了。然后，有人给你发送了一个格式略有不同的文件。新格式使用反斜杠，而不是使用两个引号转义 \u0026quot;。\n现在你现有的 grammar 解析失败。您没有满足该类型的转义的规则，因为您的 grammar 不需要它。作为模式和 grammar 的练习，只匹配你应该匹配的内容。在其他方面随心所欲，例如制作一个子 grammar 来处理新案例：\ngrammar Grammar::CSV::Backslashed is Grammar::CSV { token escaped-quote { \u0026#39;\\\\\u0026#34;\u0026#39; } } class CSV::Actions::Backslashed is CSV::Actions { method value ($/) { make $/.subst( rx/ \u0026#39;\\\\\u0026#34;\u0026#39; /, \u0026#39;\u0026#34;\u0026#39;, :g ) } } With two grammars, how do you get the one that you need to use? The name interpolation ::($name) comes in handy here:\n有两个 grammar，你如何得到你需要使用的那个？::($name) 在这里派上用场：\nmy %formats; %formats\u0026lt;doubled\u0026gt; = { \u0026#39;file\u0026#39; =\u0026gt; $*SPEC.catfile( \u0026lt;corpus test.csv\u0026gt; ), \u0026#39;grammar\u0026#39; =\u0026gt; \u0026#39;Grammar::CSV\u0026#39;, }; %formats\u0026lt;backslashed\u0026gt; = { \u0026#39;file\u0026#39; =\u0026gt; $*SPEC.catfile( \u0026lt;corpus test-backslash.csv\u0026gt; ), \u0026#39;grammar\u0026#39; =\u0026gt; \u0026#39;Grammar::CSV::Backslashed\u0026#39;, }; for %formats.values -\u0026gt; $hash { $hash\u0026lt;data\u0026gt; = $hash\u0026lt;file\u0026gt;.IO.slurp; my $class = (require ::( $hash\u0026lt;grammar\u0026gt; ) ); my $match = $class.parse( $hash\u0026lt;data\u0026gt; ); say \u0026#34;{$hash\u0026lt;file\u0026gt;} with {$hash\u0026lt;grammar\u0026gt;} \u0026#34;, $match ?? \u0026#39;parsed\u0026#39; !! \u0026#39;failed\u0026#39;; } The %formats Hash of Hashes stores the filenames and the grammars for them. You can load a grammar and use it to parse the data without the explicit grammar name:\n%formats 散列的散列存储文件名和 grammar。您可以加载 grammar 并使用它来解析数据而不使用显式的 grammar 名称：\ncorpus/test.csv with Grammar::CSV parsed corpus/test-backslash.csv with Grammar::CSV::Backslashed parsed That mostly solves the problem, although there are plenty of special cases that this doesn’t cover.\n这主要解决了这个问题，尽管有很多特殊情况并没有涵盖。\nUsing Roles in Grammars Roles can supply rules and methods that grammars can use. In the previous section you handled different sorts of double-quote escaping through inheritance, where you overrode the rule. You can do the same thing with roles.\nA grammar can have methods and subroutines. The way you declare a name with sub, method, or rule tells the language parser (not your grammar!) how to parse the stuff in the Block.\nFirst, adjust the main grammar to have a stub method for \u0026lt;escaped-quote\u0026gt;. This forces something else to define it:\n角色可以提供 grammar 可以使用的规则和方法。在上一节中，您通过继承处理了不同类型的双引号转义，其中您重写了规则。你可以用角色做同样的事情。\nGrammar 可以有方法和子程序。使用 sub，method或 rule 声明名称的方式告诉语言解析器（而不是 grammar！）如何解析块中的东西。\n首先，调整主 grammar，使其具有 \u0026lt;escaped-quote\u0026gt; 的存根方法。这迫使别人定义它：\ngrammar Grammar::CSV { token TOP { \u0026lt;record\u0026gt;+ } token record { \u0026lt;value\u0026gt;+ % \u0026lt;.separator\u0026gt; \\R } token separator { \u0026lt;.ws\u0026gt; \u0026#39;,\u0026#39; \u0026lt;.ws\u0026gt; } token value { \u0026#39;\u0026#34;\u0026#39; # quoted \u0026lt;( [ \u0026lt;-[\u0026#34;]\u0026gt; | \u0026lt;.escaped-quote\u0026gt; ]* )\u0026gt; \u0026#39;\u0026#34;\u0026#39; | \u0026lt;-[\u0026#34;,\\n\\f\\r]\u0026gt;+ # non-quoted (no vertical ws) | \u0026#39;\u0026#39; # empty } # stub that you must define in a role method escaped-quote { !!! } } A role will fill in that stub method. There’s one role for each way to escape the double quote:\n角色将填充该存根方法。每种方式都有一个角色来转义双引号：\nrole DoubledQuote { token escaped-quote { \u0026#39;\u0026#34;\u0026#34;\u0026#39; } } role BackslashedQuote { token escaped-quote { \u0026#39;\\\\\u0026#34;\u0026#39; } } When it’s time to parse a file you can choose which role you want to use. You can create a new object for Grammar::CSV and apply the appropriate role to it:\n在解析文件时，您可以选择要使用的角色。您可以为 Grammar::CSV 创建一个新对象并将适当的角色应用于它：\nmy $filename = ...; my $csv-data = $filename.IO.slurp; my $csv-parser = Grammar::CSV.new but DoubledQuote; Use that object to parse your data:\n使用该对象解析数据：\nmy $match = $csv-parser.parse: $csv-data; say $match // \u0026#39;Failed!\u0026#39;; Doing this doesn’t fix the double quotes in the data—a \u0026quot;\u0026quot; stays as a \u0026quot;\u0026quot;—but you can fix that in an action class.\nEXERCISE 17.6Adjust the CSV example to use roles instead of inheritance. Create an action class to adjust the escaped double quotes as you run into them. You can start with Grammars/test.csv from the downloads section of the book’s website if you like.\n这样做不会修复数据中的双引号 - \u0026quot;\u0026quot; 保留为 \u0026quot;\u0026quot; - 但您可以在 action 类中修复它。\n练习17.6 调整 CSV 示例以使用角色而不是继承。创建一个 action 类，以便在遇到它们时调整转义的双引号。如果您愿意，可以从本书网站的下载部分 Grammars/ test.csv 开始。\nSummary Grammars are one of the killer features of the language. You can define complex relationships between patterns and use action classes to run arbitrarily complex code when something matches. You might find that your entire program ends up being one big grammar.\nGrammars 是 Raku 语言的杀手级特性之一。您可以定义模式之间的复杂关系，并在匹配时使用 action 类来运行任意复杂的代码。您可能会发现整个程序最终变成一个大的 grammar。\n"},"name":"第十七章. Grammars","published":"2018-09-17T00:10:09+08:00","summary":"声明 本章翻译仅用于 Raku 学习和研究, 请支持电子版或纸质版。\n第十七章. Grammars Grammars are patterns on a higher plane of existence. They integrate and reuse pattern fragments to parse and react to complicated formats. This feature is at the core of Raku in a very literal sense; the language itself is implemented as a grammar. Once you start using it you’ll probably prefer it to regexes for all but the most simple problems.\nGrammars 是存在于更高层面上的模式。它们集成并重用模式片段来解析复杂的格式并做出反应。从字面意义上讲，这个功能是Raku的核心;语言本身是作为语法实现的。一旦你开始使用它，你可能更喜欢它除了最简单的问题之外的所有正则表达式。","type":"entry","url":"http://localhost:1313/raku/2018-09-17-%E7%AC%AC%E5%8D%81%E4%B8%83%E7%AB%A0.-grammars/"},{"content":{"html":"\u003ch1 id=\"声明\"\u003e声明\u003c/h1\u003e\n\u003cp\u003e本章翻译仅用于 Raku 学习和研究, 请支持电子版或\u003ca href=\"https://www.amazon.co.uk/Learning-Perl-6-Brian-Foy/dp/149197768X/ref=sr_1_1?ie=UTF8\u0026amp;qid=1536753267\u0026amp;sr=8-1\u0026amp;keywords=Learning+Perl+6\"\u003e纸质版\u003c/a\u003e。\u003c/p\u003e\n\u003ch1 id=\"第二章-猜数字\"\u003e第二章. 猜数字\u003c/h1\u003e\n\u003cp\u003eYou’re about to be thrown in the deep end. There are some basic things you need to know to write useful programs, and you’ll meet a lot of them in this chapter so you can write a number-guessing program by the end. It’s quite a bit to take in all at once but it should make the rest of the chapters more interesting.\u003c/p\u003e\n\u003cp\u003e你将要陷入深渊。编写有用的程序需要了解一些基本的东西，本章中你会遇到很多基本的东西，所以你可以在最后编写一个数字猜测程序。一下子就可以完全接受它，但它应该让其他章节更有趣。\u003c/p\u003e\n\u003ch1 id=\"binding-and-assignment\"\u003eBinding and Assignment\u003c/h1\u003e\n\u003cp\u003eYou read a little about variables in \u003ca href=\"https://www.safaribooksonline.com/library/view/learning-perl-6/9781491977675/ch01.html#camelia-introduction\"\u003eChapter 1\u003c/a\u003e. To store a value in a variable you assign to it. The item assignment operator, \u003ccode\u003e=\u003c/code\u003e, stores a single thingy for you. \u003ccode\u003e$number\u003c/code\u003e is a scalar variable; it can store exactly one thingy. This is item assignment because there’s one thingy. This “sets” the value:\u003c/p\u003e\n\u003cp\u003e您将在第1章中阅读一些关于变量的内容。将值存储在您为其分配的变量中。项目赋值运算符=为您存储单个东西。 $ number是一个标量变量;它可以存储一个东西。这是项目分配，因为有一个东西。这“设置”了价值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $number = 2;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you decide that you don’t want that value you can replace it:\u003c/p\u003e\n\u003cp\u003e如果您认为不需要该值，则可以替换它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$number = 3;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSometimes you want a value that you can’t change (more likely a value you don’t want another part of your program to change). Instead of the assignment operator you can use the binding operator, \u003ccode\u003e:=\u003c/code\u003e, to set the value:\u003c/p\u003e\n\u003cp\u003e有时你想要一个你无法改变的值（更可能是你不希望程序的另一部分改变的值）。您可以使用绑定运算符：=来设置值，而不是赋值运算符：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sides-of-a-square := 4;\n$sides-of-a-square = 5\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen you try to change the value you get an error:\u003c/p\u003e\n\u003cp\u003e当您尝试更改该值时，您会收到错误：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eCannot assign to an immutable value\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIt’s not the binding operator that makes the variable immutable. It merely makes the thingy on the left the same as the one on the right. In this case, \u003ccode\u003e$sides-of-square\u003c/code\u003e is actually \u003ccode\u003e4\u003c/code\u003e and not just a variable that happens to store \u003ccode\u003e4\u003c/code\u003e. You can’t assign to \u003ccode\u003e4\u003c/code\u003e, so you can’t assign to \u003ccode\u003e$sides-of-a-square\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eIf you first assign to a scalar variable then \u003cem\u003ebind\u003c/em\u003e to that variable you end up with two names for the same variable:\u003c/p\u003e\n\u003cp\u003e它不是使变量成为不可变的绑定运算符。它只是让左边的东西和右边的东西相同。在这种情况下，$ sides-of-square实际上是4而不仅仅是恰好存储4的变量。你不能分配给4，所以你不能分配到$ side-of-a-square。\u003c/p\u003e\n\u003cp\u003e如果您首先分配给标量变量然后绑定到该变量，则最终会为同一个变量使用两个名称：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $number = 3;\nmy $sides := $number;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can change \u003ccode\u003e$sides\u003c/code\u003e or \u003ccode\u003e$number\u003c/code\u003e, and the “other” will change. But there is no “other” to change because they are the same thing! You might think of these as aliases, but it’s a bit more complicated.\u003c/p\u003e\n\u003cp\u003eThere’s an important concept here that you should learn early. A variable assignment with \u003ccode\u003e=\u003c/code\u003e creates a container, then puts a value in that container. A container is just a box that can store a value. You can add, remove, and replace the value in that box. This is mostly invisible to you because the language handles it for you.\u003c/p\u003e\n\u003cp\u003eThe binding operator skips this containerization. It aliases the thingy on the right side directly. If it’s already a container that’s what you bind to. You can break down the action of assignment into two steps. First you bind to an anonymous container. That’s right: a container can exist without a name. An anonymous container is just the \u003ccode\u003e$\u003c/code\u003e sigil:\u003c/p\u003e\n\u003cp\u003e您可以更改$ sides或$ number，“other”将更改。但是没有“其他”可以改变，因为它们是同一个东西！您可能会将这些视为别名，但它有点复杂。\u003c/p\u003e\n\u003cp\u003e这里有一个重要的概念，你应该尽早学习。带=的变量赋值创建一个容器，然后在该容器中放入一个值。容器只是一个可以存储值的盒子。您可以添加，删除和替换该框中的值。这对你来说几乎是不可见的，因为语言会为你处理它。\u003c/p\u003e\n\u003cp\u003e绑定操作员跳过此容器化。它直接在右侧别名。如果它已经是一个与你绑定的容器。您可以将分配操作分解为两个步骤。首先绑定到匿名容器。没错：容器可以没有名字而存在。一个匿名的容器只是$ sigil：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $number := $;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAfter that you can change the value in the container using \u003ccode\u003e=\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e之后，您可以使用=更改容器中的值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$number = 3;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSometimes you’ll need to know if the thingy you have is a container, and there will be times you’ll want to skip the container. Start thinking about this early, before you develop bad habits, and your programming life will be easier.\u003c/p\u003e\n\u003cp\u003e有时你需要知道你拥有的东西是否是一个容器，有时候你会想要跳过容器。在你养成坏习惯之前就开始考虑这个问题，你的编程生活会更容易。\u003c/p\u003e\n\u003ch1 id=\"a-main-program\"\u003eA MAIN Program\u003c/h1\u003e\n\u003cp\u003eIn \u003ca href=\"https://www.safaribooksonline.com/library/view/learning-perl-6/9781491977675/ch01.html#camelia-introduction\"\u003eChapter 1\u003c/a\u003e you saw some examples of statements. This is a complete program:\u003c/p\u003e\n\u003cp\u003e在第1章中，您看到了一些语句示例。这是一个完整的程序：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput \u0026#39;Hello Raku!\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you’ve programmed in some other languages you may have encountered a subroutine called \u003ccode\u003emain\u003c/code\u003e or something similar. Those languages probably required you to put your program inside that routine; when you ran your program it automatically ran that subroutine for you. Raku is a little different because it assumes that your entire file is already that \u003ccode\u003emain\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eYou can still have such a subroutine though. If you define a \u003ccode\u003eMAIN\u003c/code\u003e subroutine (all caps!) your program will call that automatically if you run the program:\u003c/p\u003e\n\u003cp\u003e如果您使用其他语言进行编程，则可能遇到了一个名为main或类似的子程序。那些语言可能要求你把你的程序放在那个例程中;当你运行程序时，它会自动为你运行该子程序。 Raku有点不同，因为它假设您的整个文件已经是主要文件。\u003c/p\u003e\n\u003cp\u003e你仍然可以拥有这样的子程序。如果你定义一个MAIN子程序（所有大写！），你的程序将在你运行程序时自动调用它：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub MAIN {\n    put \u0026#39;Hello Raku!\u0026#39;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou won’t read about subroutines until \u003ca href=\"https://www.safaribooksonline.com/library/view/learning-perl-6/9781491977675/ch11.html#camelia-subroutines\"\u003eChapter 11\u003c/a\u003e, so trust me for a bit on this one. You’ll read more of an explanation of \u003ccode\u003eMAIN\u003c/code\u003e as you go through the book.\u003c/p\u003e\n\u003cp\u003eEXERCISE 2.1Create both versions of the “Hello Raku” program. The one-line version and \u003ccode\u003eMAIN\u003c/code\u003e version should give you the same output.\u003c/p\u003e\n\u003cp\u003e在第11章之前，你不会阅读关于子程序的内容，所以请相信我一点。在阅读本书时，您将阅读更多关于MAIN的解释。\u003c/p\u003e\n\u003cp\u003eEXERCISE 2.1创建“Hello Raku”程序的两个版本。单行版本和MAIN版本应该为您提供相同的输出。\u003c/p\u003e\n\u003ch2 id=\"program-arguments\"\u003eProgram Arguments\u003c/h2\u003e\n\u003cp\u003eYou probably have seen other command-line programs that take arguments. The filenames you give to \u003cem\u003emore\u003c/em\u003e or \u003cem\u003etype\u003c/em\u003e are arguments that tell those programs which file’s contents you want to see:\u003c/p\u003e\n\u003cp\u003e您可能已经看过其他带参数的命令行程序。您提供给更多或类型的文件名是告诉这些程序您想要查看哪些文件内容的参数：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% more hello-world.p6\n\nC:\\ type hello-world.p6 \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYour Raku program can take arguments too. When you try it with your existing program you get a help message instead of the output that you expected:\u003c/p\u003e\n\u003cp\u003e你的Raku程序也可以参数。当您使用现有程序尝试它时，您会得到一条帮助消息，而不是您期望的输出：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku hello-world-main.p6 1 2 3\nUsage:\n  hello-world-main.p6\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo accept arguments you have to tell \u003ccode\u003eMAIN\u003c/code\u003e to expect them. Your program had an implicit set of empty parentheses in it. Those parentheses define the parameters, which are the templates for the arguments. Arguments are what you get; parameters are what you wanted. In this case you didn’t specify any parameters, so your program expects no arguments and complains if you try to give it some:\u003c/p\u003e\n\u003cp\u003e要接受参数，你必须告诉MAIN期望它们。你的程序中有一组隐含的空括号。这些括号定义参数，这些参数是参数的模板。争论就是你得到的;参数是你想要的。在这种情况下，您没有指定任何参数，因此如果您尝试给它一些，您的程序不需要参数和抱怨：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub MAIN () {\n    put \u0026#39;Hello Raku!\u0026#39;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can change this. You can specify a variable in the parameter list. One parameter allows your \u003ccode\u003eMAIN\u003c/code\u003e subroutine to take exactly one argument. Change your \u003ccode\u003eput\u003c/code\u003e statement to output the value in \u003ccode\u003e$thingy\u003c/code\u003e by defining a signature after the subroutine name:\u003c/p\u003e\n\u003cp\u003e你可以改变这个。您可以在参数列表中指定变量。一个参数允许MAIN子例程只取一个参数。通过在子例程名称后定义签名，更改put语句以输出$ thingy中的值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub MAIN ( $thingy ) {\n    put $thingy;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen you run this program with no command-line arguments you get a different help message. You needed one argument and gave it none. Curiously, the help message tells you the name of the variable you used in the parameter:\u003c/p\u003e\n\u003cp\u003e如果在没有命令行参数的情况下运行此程序，则会收到不同的帮助消息。你需要一个论点并且没有给它。奇怪的是，帮助消息告诉您在参数中使用的变量的名称：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku main-one-thingy.p6\nUsage:\n  main-one-thingy.p6 \u0026lt;thingy\u0026gt;\n\n% raku main-one-thingy.p6 Hello\nHello\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eQuote the entire value or escape the whitespace (Unix shells only) to preserve whitespace inside a value you want to give to the thingy:\u003c/p\u003e\n\u003cp\u003e引用整个值或转义空格（仅限Unix shell）以保留要为thingy赋值的内部空格：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku main-one-thingy.p6 \u0026#34;Hello Raku\u0026#34;\nHello Raku\n\n% raku main-one-thingy.p6 Hello\\ Perl\\ 6\nHello Raku\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can specify more than one parameter by separating them with commas. You can also output multiple things in a single \u003ccode\u003eput\u003c/code\u003e by separating them with commas:\u003c/p\u003e\n\u003cp\u003e您可以通过用逗号分隔多个参数来指定它们。您也可以通过用逗号分隔它们来输出单个put中的多个内容：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub MAIN ( $thingy1, $thingy2 ) {\n    put \u0026#39;1: \u0026#39;, $thingy1;\n    put \u0026#39;2: \u0026#39;, $thingy1;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow you have to give your program two arguments. If you don’t give it exactly two arguments it doesn’t work:\u003c/p\u003e\n\u003cp\u003e现在你必须给你的程序两个参数。如果你不准确地给它两个参数它不起作用：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku main-two-thingys.p6 Hamadryas\nUsage:\n  main-two-thingys.p6 \u0026lt;thingy1\u0026gt; \u0026lt;thingy2\u0026gt;\n\n% raku main-two-thingys.p6 Hamadryas perlicus\n1: Hamadryas\n2: perlicus\n\u003c/code\u003e\u003c/pre\u003e\u003ch6 id=\"note\"\u003eNOTE\u003c/h6\u003e\n\u003cp\u003e\u003cem\u003eHamadryas perlicus\u003c/em\u003e is the (un)scientific name I’ve given to the butterfly on the cover. Sometimes I call him “Hama” for short because it rhymes with “llama.”\u003c/p\u003e\n\u003cp\u003eSometimes you don’t want to specify two arguments even though you need two values. You can specify a default value for some parameters. Use the \u003ccode\u003e=\u003c/code\u003e to specify the default:\u003c/p\u003e\n\u003cp\u003eHamadryas perlicus *是我在封面上给蝴蝶的（非）学名。有时我称他为“哈马”，因为它与“美洲驼”押韵。\u003c/p\u003e\n\u003cp\u003e有时您不希望指定两个参数，即使您需要两个值。您可以为某些参数指定默认值。使用=指定默认值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub MAIN ( $thingy1, $thingy2 = \u0026#39;perlicus\u0026#39; ) {\n    put \u0026#39;1: \u0026#39;, $thingy1;\n    put \u0026#39;2: \u0026#39;, $thingy2;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen you call it with two arguments it works as before, but when you specify exactly one argument it uses the default for the second:\u003c/p\u003e\n\u003cp\u003e当你用两个参数调用它时，它像以前一样工作，但是当你指定一个参数时，它使用第二个参数的默认值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku main-two-thingys-default.p6 Hamadryas februa\n1: Hamadryas\n2: februa\n\n% raku main-two-thingys-default.p6 Hamadryas\n1: Hamadryas\n2: perlicus\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAny parameters with defaults have to show up after those without them. You’ll see much more about parameters in \u003ca href=\"https://www.safaribooksonline.com/library/view/learning-perl-6/9781491977675/ch11.html#camelia-subroutines\"\u003eChapter 11\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eEXERCISE 2.2Create a program that takes three command-line arguments and outputs them on separate, numbered lines. Give two of the parameters default values.\u003c/p\u003e\n\u003cp\u003e任何带有默认值的参数都必须显示在没有它们的参数之后。您将在第11章中看到有关参数的更多信息。\u003c/p\u003e\n\u003cp\u003e练习2.2创建一个带有三个命令行参数的程序，并将它们输出到不同的编号行上。给出两个参数默认值。\u003c/p\u003e\n\u003ch2 id=\"prompting-for-values\"\u003ePrompting for Values\u003c/h2\u003e\n\u003cp\u003eThe \u003ccode\u003eprompt\u003c/code\u003e routine outputs a message asking for input. When you type some text followed by Return \u003ccode\u003eprompt\u003c/code\u003ereads that text and returns it. You can assign that value to a variable:\u003c/p\u003e\n\u003cp\u003e提示例程输出要求输入的消息。当您键入一些文本，然后返回提示时，将读取该文本并将其返回。您可以将该值分配给变量：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $answer = prompt \u0026#39;What is your favorite number? \u0026#39;;\nput \u0026#39;Your answer was [\u0026#39;, $answer, \u0026#39;]\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhen you run the program you see the prompt and start typing right after it on the same line:\u003c/p\u003e\n\u003cp\u003e运行程序时，您会看到提示并在同一行后面开始输入：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku prompt.p6\nWhat is your favorite number? 137\nYour answer was [137]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe value you get back from \u003ccode\u003eprompt\u003c/code\u003e does not include the line ending from Return.\u003c/p\u003e\n\u003cp\u003eEXERCISE 2.3Write a program that asks for your name and then outputs a greeting to that name. If your name is Gilligan it should output “Hello Gilligan.” Can you use a \u003ccode\u003eMAIN\u003c/code\u003e subroutine and only prompt if there’s no command-line argument?\u003c/p\u003e\n\u003cp\u003e从提示中返回的值不包括以Return结尾的行。\u003c/p\u003e\n\u003cp\u003e练习2.3写一个程序，询问你的名字，然后输出一个问候语到该名称。如果你的名字是Gilligan，它应该输出“Hello Gilligan。”你能使用MAIN子程序，只有在没有命令行参数的情况下才会提示吗？\u003c/p\u003e\n\u003ch1 id=\"literal-numbers\"\u003eLiteral Numbers\u003c/h1\u003e\n\u003cp\u003eLiteral values are those that you type directly into the program. They are fixed and are sometimes called “hardcoded” values because they exist directly in the program instead of coming from input or configuration. These are terms, and you can write them in several ways.\u003c/p\u003e\n\u003cp\u003eAn integer is a whole number. These are the numbers of everyday life expressed with the digits from 0 to 9:\u003c/p\u003e\n\u003cp\u003e文字值是您直接在程序中键入的值。它们是固定的，有时称为“硬编码”值，因为它们直接存在于程序中，而不是来自输入或配置。这些是术语，您可以通过多种方式编写它们。\u003c/p\u003e\n\u003cp\u003e整数是整数。这些是用0到9的数字表示的日常生活数量：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e137\n4\n-19\n0\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDigital computers are more comfortable with powers of two. Prefix a literal number with \u003ccode\u003e0x\u003c/code\u003e to specify a hexadecimal number. That’s base 16 and uses the digits 0 to 9 and the letters \u003cem\u003eA\u003c/em\u003e to \u003cem\u003eF\u003c/em\u003e (in either case) to represent 0 to 15:\u003c/p\u003e\n\u003cp\u003e数字计算机更适合两种能力。使用0x前缀一个文字数字以指定十六进制数字。这是基数16并使用数字0到9和字母A到F（在任何一种情况下）代表0到15：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e0x89\n0xBEEF\n-0x20\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOctal numbers are base 8 and use the digits 0 to 7. Prefix a literal octal number with \u003ccode\u003e0o\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e八进制数是基数8并使用数字0到7.用0o前缀一个文字八进制数：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e0o211\n-0o177\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBinary numbers are base 2 and use the digits 0 and 1. These are handy when you deal with binary formats. Prefix them with \u003ccode\u003e0b\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e二进制数字是基数2并使用数字0和1.当您处理二进制格式时，这些都很方便。用0b作为前缀：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e0b10001001\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eChoose a representation that’s easy for you to understand or that’s natural for the task. The compiler converts those representations into values that the physical computer can use. It doesn’t care which one you use; they are just numbers. These are all the same value:\u003c/p\u003e\n\u003cp\u003e选择一个易于理解或对任务而言很自然的表示。编译器将这些表示转换为物理计算机可以使用的值。它并不关心你使用哪一个;他们只是数字。这些都是相同的价值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e137           # decimal,     base 10\n0b10001001    # binary,      base  2\n0o211         # octal,       base  8\n0x89          # hexadecimal, base 16\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.4In the REPL try the different base examples. What decimal value does the REPL echo?\u003c/p\u003e\n\u003cp\u003ePerhaps you don’t like the ASCII digits 0 to 9. You can use any digits that Unicode supports; Raku knows about anything that’s a number character. Eastern Arabic numerals work. Notice that the radix prefixes are the same:\u003c/p\u003e\n\u003cp\u003eEXERCISE 2.4在REPL中尝试不同的基础示例。 REPL回显的十进制值是多少？\u003c/p\u003e\n\u003cp\u003e也许您不喜欢ASCII数字0到9.您可以使用Unicode支持的任何数字; Raku知道任何数字角色。东部阿拉伯数字工作。请注意，基数前缀是相同的：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e١٣٧\n0b١٠٠٠١٠٠١\n0o٢١١\n0x٨٩\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSo do Bengali digits:\u003c/p\u003e\n\u003cp\u003e孟加拉语数字也是如此：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e১৩৭\n0b১০০০১০০১\n0o২১১\n0x৮৯\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eI don’t encourage you to represent numbers like this in your program, but Raku understands them. This is useful when you are processing text that contains them. Your program will be able to convert these to a number type.\u003c/p\u003e\n\u003cp\u003eYou can choose other bases up to base 36. You’ve already seen base 16, which uses 0 to 9 and \u003cem\u003eA\u003c/em\u003e to \u003cem\u003eF\u003c/em\u003e. Base 17 would add \u003cem\u003eG\u003c/em\u003e, and so on up to base 36, which includes \u003cem\u003eZ\u003c/em\u003e. Use a colon before the base (in decimal), then put the digits inside angle brackets:\u003c/p\u003e\n\u003cp\u003e我不鼓励你在你的程序中代表这样的数字，但Raku理解它们。当您处理包含它们的文本时，这非常有用。您的程序将能够将这些转换为数字类型。\u003c/p\u003e\n\u003cp\u003e您可以选择基数为36的其他基数。您已经看过基数为16，使用0到9和A到F.基数17将添加G，依此类推到基数36，其中包括Z.使用冒号之前基数（十进制），然后将数字放在尖括号内：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e:7\u0026lt;254\u0026gt;\n:19\u0026lt;IG88\u0026gt;\n:26\u0026lt;HAL9000\u0026gt;\n:36\u0026lt;THX1138\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.5Try the unusual base examples in the REPL. What decimal numbers are they?\u003c/p\u003e\n\u003cp\u003e练习2.5尝试REPL中不寻常的基础示例。它们的十进制数是多少？\u003c/p\u003e\n\u003ch2 id=\"formatting-numbers\"\u003eFormatting Numbers\u003c/h2\u003e\n\u003cp\u003eLiteral numbers are objects. You can call methods on objects. The \u003ccode\u003e.base\u003c/code\u003e method allows you to specify the base that you want to represent:\u003c/p\u003e\n\u003cp\u003e文字数字是对象。您可以在对象上调用方法。 .base方法允许您指定要表示的基数：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput 0x89.base: 10;     #  137\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can choose some other base, up to 36:\u003c/p\u003e\n\u003cp\u003e您可以选择其他一些基地，最多36个：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput 0x89.base:  2;     # 10001001\nput 0x89.base:  8;     # 211\nput 0x89.base: 16;     # 89\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.6Write a program that takes a decimal number as its single command-line argument. Output its binary, octal, decimal, and hexadecimal values. What happens if you give it a hexadecimal number on the command line? What if you specify the decimal number in Eastern Arabic digits?\u003c/p\u003e\n\u003cp\u003eIn the previous exercise you couldn’t specify a hexadecimal number as an argument. That’s because you weren’t actually specifying a number as an argument. It was text made up of digit characters. If you want to use a hexadecimal number you have to tell your program how to convert the number. You can use \u003ccode\u003e.parse-base\u003c/code\u003e for that. You tell it which base you expect and it does the rest:\u003c/p\u003e\n\u003cp\u003e练习2.6编写一个以十进制数作为单个命令行参数的程序。输出二进制，八进制，十进制和十六进制值。如果在命令行上给它一个十六进制数，会发生什么？如果您在东部阿拉伯数字中指定十进制数怎么办？\u003c/p\u003e\n\u003cp\u003e在上一个练习中，您无法将十六进制数指定为参数。那是因为你实际上没有指定一个数字作为参数。它是由数字字符组成的文本。如果要使用十六进制数，则必须告诉程序如何转换数字。你可以使用.parse-base。你告诉它你期望的基础，剩下的就是：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $number = $thingy.parse-base: 16;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.7Modify your answer from the previous exercise to accept a hexadecimal number command-line argument. Your program will now only handle hexadecimal numbers if you’re using only what you’ve seen so far.\u003c/p\u003e\n\u003cp\u003e练习2.7修改上一练习中的答案以接受十六进制数字命令行参数。如果你只使用到目前为止看到的内容，你的程序现在只能处理十六进制数字。\u003c/p\u003e\n\u003ch1 id=\"numeric-operations\"\u003eNumeric Operations\u003c/h1\u003e\n\u003cp\u003eNumeric operators transform numbers into new values. The simplest demonstration is to immediately output the result. The \u003ccode\u003e+\u003c/code\u003e is the addition operator:\u003c/p\u003e\n\u003cp\u003e数字运算符将数字转换为新值。最简单的演示是立即输出结果。 +是加法运算符：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput 2 + 2;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can also store the result in a variable and then output it. The item assignment is an operation and so is the addition. The \u003ccode\u003e+\u003c/code\u003e happens first because it has higher precedence:\u003c/p\u003e\n\u003cp\u003e您还可以将结果存储在变量中，然后将其输出。项目分配是一项操作，添加也是如此。 +首先发生，因为它具有更高的优先级：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sum = 2 + 2;\nput $sum;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere are operators for subtraction (\u003ccode\u003e-\u003c/code\u003e), multiplication (\u003ccode\u003e*\u003c/code\u003e), division (\u003ccode\u003e/\u003c/code\u003e), and exponentiation (\u003ccode\u003e**\u003c/code\u003e). You’ll see more in the next chapter.\u003c/p\u003e\n\u003cp\u003eOutputting a single number is easy. If you want to output a series of numbers, you could have multiple lines:\u003c/p\u003e\n\u003cp\u003e有减法（ - ），乘法（*），除法（/）和取幂（**）的运算符。您将在下一章中看到更多内容。\u003c/p\u003e\n\u003cp\u003e输出单个数字很容易。如果要输出一系列数字，可以有多行：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sum = 0;\nput $sum + 1;\nput $sum + 1 + 1;\nput $sum + 1 + 1 + 1;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEach time you add one more to it. That repeats a lot of structure. You can back up a little to make an improvement where the \u003ccode\u003eput\u003c/code\u003e statement is the same in each case:\u003c/p\u003e\n\u003cp\u003e每次再添加一个。这重复了很多结构。在每种情况下，put语句相同时，您可以稍微备份以进行改进：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sum = 0;\n\n$sum = $sum + 1;\nput $sum;\n\n$sum = $sum + 1;\nput $sum;\n\n$sum = $sum + 1;\nput $sum;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e$sum\u003c/code\u003e variable shows up on the left and right of the assignment. That’s okay; the compiler’s not going to get confused. It evaluates everything on the right side using the current value of \u003ccode\u003e$sum\u003c/code\u003e. When it’s reduced the right side to its value it assigns that to \u003ccode\u003e$sum\u003c/code\u003e, replacing the value that’s already there. You’re still doing the same thing over and over again, but now that same thing looks exactly like the other things.\u003c/p\u003e\n\u003cp\u003eNow it’s time to introduce \u003ccode\u003eloop\u003c/code\u003e. It repeatedly executes the code inside its braces. This code will run until you interrupt the program (probably with Control-C):\u003c/p\u003e\n\u003cp\u003e$ sum变量显示在赋值的左侧和右侧。没关系;编译器不会混淆。它使用$ sum的当前值评估右侧的所有内容。当它将右侧减少到它的值时，它会将其分配给$ sum，替换已存在的值。你仍然一遍又一遍地做同样的事情，但现在同样的事情看起来和其他事情完全一样。\u003c/p\u003e\n\u003cp\u003e现在是时候介绍循环了。它重复执行括号内的代码。此代码将一直运行，直到您中断程序（可能使用Control-C）：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sum = 0;\nloop {\n    $sum = $sum + 1;\n    put $sum;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can combine the two statements inside \u003ccode\u003eloop\u003c/code\u003e. The result of an assignment is the value that you assigned. Here, you add to \u003ccode\u003e$sum\u003c/code\u003e then assign that result back to \u003ccode\u003e$sum\u003c/code\u003e, and use that expression as the value you give to \u003ccode\u003eput\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e您可以在循环内组合这两个语句。赋值的结果是您指定的值。在这里，您添加$ sum然后将该结果分配回$ sum，并将该表达式用作您放置的值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sum = 0;\nloop {\n    put $sum = $sum + 1;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis sort of structure is so common that it has its own operator: the \u003ccode\u003e++\u003c/code\u003e unary prefix autoincrement operator. It adds one before you use the value:\u003c/p\u003e\n\u003cp\u003e这种结构很常见，它有自己的运算符：++一元前缀自动增量运算符。它在您使用该值之前添加一个：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sum = 0;\nloop {\n    put ++$sum;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere’s also a unary postfix version. It adds one to the value, but after you use it:\u003c/p\u003e\n\u003cp\u003e还有一个一元的后缀版本。它会在值中添加一个，但在您使用它之后：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $sum = 0;\nloop {\n    put $sum++;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.8What’s the difference in output in the two programs that use the prefix and postfix autoincrement operators? Can you figure it out without running the programs?\u003c/p\u003e\n\u003cp\u003eSo far you’ve declared variables with \u003ccode\u003emy\u003c/code\u003e. That limits their definition to the current scope. That’s a problem for variables you want in a \u003ccode\u003eloop\u003c/code\u003e if they should keep their values. This wouldn’t work because each time through the \u003ccode\u003eloop\u003c/code\u003e would get a new variable even though you used the same name:\u003c/p\u003e\n\u003cp\u003e练习2.8使用前缀和后缀自动增量运算符的两个程序的输出差异是什么？如果不运行程序，你能搞清楚吗？\u003c/p\u003e\n\u003cp\u003e到目前为止，你已经用我的声明了变量。这将他们的定义限制在当前范围内。如果它们应该保留它们的值，那么在循环中你想要的变量就是一个问题。这不起作用，因为即使您使用相同的名称，每次循环都会获得一个新变量：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eloop {\n    my $sum = 0;\n    put $sum++;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eDeclare the variable with \u003ccode\u003estate\u003c/code\u003e instead: this makes the variable private to the block but doesn’t reset it each time through it. A \u003ccode\u003estate\u003c/code\u003e declaration only executes the first time through the block and is ignored after that. The assignment to \u003ccode\u003e$sum\u003c/code\u003e happens once:\u003c/p\u003e\n\u003cp\u003e用状态声明变量：这使得变量对块是私有的，但每次都不会重置它。状态声明仅在块中第一次执行，之后将被忽略。 $ sum的赋值发生一次：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eloop {\n    state $sum = 0;\n    put $sum++;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis is a bit nicer because everything about \u003ccode\u003e$sum\u003c/code\u003e is contained inside the block. Always try to give variables the smallest scope they need. If they don’t need to be outside the block define them inside it.\u003c/p\u003e\n\u003cp\u003eThose operators add or subtract one. If you want to increment by a different number you’re back to using \u003ccode\u003e+\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e这有点好，因为$ sum的所有内容都包含在块中。始终尝试为变量提供所需的最小范围。如果他们不需要在块之外定义它们。\u003c/p\u003e\n\u003cp\u003e那些运营商增加或减少一个。如果你想增加一个不同的数字，你就回到了使用+：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eloop {\n    state $sum = 0;\n    put $sum = $sum + 2;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat’s still one too many \u003ccode\u003e$sum\u003c/code\u003es in that code. There’s a special form of the assignment operator that lets you shorten this. You can put the infix operator before the \u003ccode\u003e=\u003c/code\u003e, like this:\u003c/p\u003e\n\u003cp\u003e那段代码中仍然有太多$ sum。有一种特殊形式的赋值运算符可以让你缩短它。您可以在=之前放置中缀运算符，如下所示：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$sum += 2;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis convenient shorthand is binary assignment. It’s the same as using the variable on both sides of the \u003ccode\u003e=\u003c/code\u003e but it’s easier to type:\u003c/p\u003e\n\u003cp\u003e这种方便的简写是二进制赋值。它与在=的两侧使用变量相同，但更容易输入：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$sum = $sum + 2;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMost binary operators can do this, even if they are multiple characters:\u003c/p\u003e\n\u003cp\u003e大多数二元运算符都可以执行此操作，即使它们是多个字符：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$product *= 5;\n$quotient /= 2;\n$is-divisible %%= 3;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.9Rewrite the looping program to output only multiples of three by adding the appropriate interval to the previous value. Further modify the program to accept the multiple as a command-line argument.\u003c/p\u003e\n\u003cp\u003e练习2.9通过将适当的间隔添加到上一个值，重写循环程序以仅输出三的倍数。进一步修改程序以接受多个作为命令行参数。\u003c/p\u003e\n\u003ch1 id=\"conditional-execution\"\u003eConditional Execution\u003c/h1\u003e\n\u003cp\u003eThis chapter has been working its way to a number-guessing program. You know a little bit about numbers, command-line arguments, prompting, and looping. Next you need to know how to decide between two or more paths in your code. That comes in two parts: comparing things to get an answer and using that answer to select the next thing to do.\u003c/p\u003e\n\u003cp\u003e本章一直致力于数字猜测程序。您对数字，命令行参数，提示和循环有一点了解。接下来，您需要知道如何在代码中的两个或多个路径之间做出决定。这分为两部分：比较事情以获得答案并使用该答案选择下一步要做的事情。\u003c/p\u003e\n\u003ch2 id=\"boolean-values\"\u003eBoolean Values\u003c/h2\u003e\n\u003cp\u003eBoolean values are logical values that can be one thing or the other: yes or no, on or off, or \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e. These are of type \u003ca href=\"https://docs.raku.org/type/Bool.html\"\u003e\u003ccode\u003eBool\u003c/code\u003e\u003c/a\u003e. You’ll use these values to decide between different paths in your program. First, a little Boolean math.\u003c/p\u003e\n\u003cp\u003eYou can combine Boolean values with logical operators. The \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e logical AND operator evaluates to \u003ccode\u003eTrue\u003c/code\u003e if both operands are \u003ccode\u003eTrue\u003c/code\u003e. The \u003ccode\u003e||\u003c/code\u003e logical OR operator evaluates to \u003ccode\u003eTrue\u003c/code\u003e if one or more operators are \u003ccode\u003eTrue\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e布尔值是逻辑值，可以是一个或另一个：是或否，打开或关闭，或者是True或False。这些是Bool类型。您将使用这些值来决定程序中的不同路径。首先，一点布尔数学。\u003c/p\u003e\n\u003cp\u003e您可以将布尔值与逻辑运算符组合使用。如果两个操作数均为True，则\u0026amp;\u0026amp; logical AND运算符的计算结果为True。 ||如果一个或多个运算符为True，则逻辑OR运算符的计算结果为True：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; True \u0026amp;\u0026amp; True\nTrue\n\u0026gt; True \u0026amp;\u0026amp; False\nFalse\n\u0026gt; True || True\nTrue\n\u0026gt; True || False\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAll of these operators have spelled out “word” versions. These are the lowest-precedence operators (aside from the sequence operators). These operations always happen last:\u003c/p\u003e\n\u003cp\u003e所有这些运营商都拼写出“单词”版本。这些是优先级最低的运算符（除了序列运算符）。这些操作总是最后发生：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; True and True\nTrue\n\u0026gt; True and False\nFalse\n\u0026gt; True or False\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e!\u003c/code\u003e unary prefix operator changes one \u003ca href=\"https://docs.raku.org/type/Bool.html\"\u003e\u003ccode\u003eBool\u003c/code\u003e\u003c/a\u003e value to the other one: \u003ccode\u003eTrue\u003c/code\u003e becomes \u003ccode\u003eFalse\u003c/code\u003e, and the other way around. This is called negating the condition. \u003ccode\u003enot\u003c/code\u003e is the low-precedence version of that:\u003c/p\u003e\n\u003cp\u003e的！一元前缀运算符将一个Bool值更改为另一个：True变为False，反之亦然。这被称为否定条件。不是那个低优先级的版本：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; ! True\nFalse\n\u0026gt; ! False\nTrue\n\u0026gt; not True\nFalse\n\u0026gt; not False\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMany objects can collapse themselves to a \u003ca href=\"https://docs.raku.org/type/Bool.html\"\u003eBool\u003c/a\u003e value when needed, but it’s up to each object how it does that. For numbers, \u003ccode\u003e0\u003c/code\u003e is \u003ccode\u003eFalse\u003c/code\u003e and everything else is \u003ccode\u003eTrue\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eFor most objects (not just numbers) you can use a prefix \u003ccode\u003e?\u003c/code\u003e to coerce into either \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e. It calls the \u003ccode\u003e.Bool\u003c/code\u003e method on the object. The builtin types know how to convert their values to Booleans using whatever rule they decide. For numbers, \u003ccode\u003e0\u003c/code\u003e is \u003ccode\u003eFalse\u003c/code\u003e and everything else is \u003ccode\u003eTrue\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e许多对象可以在需要时将自身折叠为Bool值，但是由每个对象决定它是如何做到的。对于数字，0为False，其他所有为True。\u003c/p\u003e\n\u003cp\u003e对于大多数对象（不仅仅是数字），您可以使用前缀？强迫无论是真还是假。它在对象上调用.Bool方法。内置类型知道如何使用他们决定的任何规则将其值转换为布尔值。对于数字，0为False，其他一切为True：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; ?1\nTrue\n\u0026gt; ?0\nFalse\n\u0026gt; ?-1\nTrue\n\u0026gt; 1.Bool\nTrue\n\u0026gt; 0.Bool\nFalse\n\u0026gt; (-1).Bool\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e.so\u003c/code\u003e method and \u003ccode\u003eso\u003c/code\u003e routine do the same thing:\u003c/p\u003e\n\u003cp\u003e.so方法和例程也做同样的事情：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; 1.so\nTrue\n\u0026gt; 0.so\nFalse\n\u0026gt; (-1).so\nTrue\n\u0026gt; so 0\nFalse\n\u0026gt; so 1\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eType objects know what they are but they have no concrete value. They are always \u003ccode\u003eFalse\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e类型对象知道它们是什么，但它们没有具体的价值。他们总是错的：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; Int.so\nFalse\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSome things that want Boolean values will implicitly do these coercions for you.\u003c/p\u003e\n\u003cp\u003e一些需要布尔值的东西会隐式地为你做这些强制。\u003c/p\u003e\n\u003ch3 id=\"short-circuit-operators\"\u003eSHORT-CIRCUIT OPERATORS\u003c/h3\u003e\n\u003cp\u003eThe logical operators don’t really evaluate to Boolean values. \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e and \u003ccode\u003e||\u003c/code\u003e test their expressions for \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e, but the entire structure evaluates to the last expression it evaluated.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e||\u003c/code\u003e needs only one expression to be \u003ccode\u003eTrue\u003c/code\u003e for the entire thing to be \u003ccode\u003eTrue\u003c/code\u003e. If it gets back anything that’s \u003ccode\u003eTrue\u003c/code\u003e, then the entire thing is \u003ccode\u003eTrue\u003c/code\u003e. All of these are \u003ccode\u003eFalse\u003c/code\u003e, but you can see the last expression \u003ccode\u003e||\u003c/code\u003e evaluated:\u003c/p\u003e\n\u003cp\u003e逻辑运算符并不真正评估为布尔值。 \u0026amp;\u0026amp;和||测试他们的表达式是True还是False，但整个结构的计算结果是它评估的最后一个表达式。\u003c/p\u003e\n\u003cp\u003e||只需要一个表达式为True，整个事物就是True。如果它返回任何真实的东西，那么整个事情就是真的。所有这些都是假的，但你可以看到最后一个表达式||评价：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 0 || Nil\nNil\n\u0026gt; 0 || False\nFalse\n\u0026gt; 0 || Failure\n(Failure)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThese are \u003ccode\u003eTrue\u003c/code\u003e. When \u003ccode\u003e||\u003c/code\u003e finds any value that would evaluate to \u003ccode\u003eTrue\u003c/code\u003e as a Boolean it stops right away. These are sometimes called short-circuit operators:\u003c/p\u003e\n\u003cp\u003e这些是真的。当||找到任何值将被评估为True的值作为它立即停止的布尔值。这些有时被称为短路运营商：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; True || 0\nTrue\n\u0026gt; 137 || True\n137\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIt’s the same with \u003ccode\u003e\u0026amp;\u0026amp;\u003c/code\u003e. It returns the last expression it evaluated. If that value is \u003ccode\u003eFalse\u003c/code\u003e then one of those expressions was \u003ccode\u003eFalse\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e与\u0026amp;\u0026amp;相同。它返回它评估的最后一个表达式。如果该值为False，则其中一个表达式为False：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 0 \u0026amp;\u0026amp; 137\n0\n\u0026gt; 42 \u0026amp;\u0026amp; 8\n8\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere’s a third operator that’s similar. The defined-or operator, \u003ccode\u003e//\u003c/code\u003e, tests its left side for definedness. If the left value is defined that’s the result, even if that value is \u003ccode\u003eFalse\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e还有第三个类似的运营商。定义的或运算符//测试其左侧的定义。如果定义左值是结果，即使该值为False：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 0 // 137\n0\n\u0026gt; Nil // 19\n19\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eA type object is never defined:\u003c/p\u003e\n\u003cp\u003e永远不会定义类型对象：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; Int // 7\n7\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe defined-or is part of a common technique to set a value if a variable doesn’t already have one (or has one that is not defined). You’ll see it as a binary assignment:\u003c/p\u003e\n\u003cp\u003e如果变量还没有（或者没有定义一个变量），则定义或者是设置值的常用技术的一部分。您会将其视为二进制赋值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e$value //= 137;\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"comparing-things\"\u003eComparing Things\u003c/h2\u003e\n\u003cp\u003eA comparator evaluates to \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e based on some relative measure. The numeric equality operator, \u003ccode\u003e==\u003c/code\u003e, compares two numbers to test if they are exactly the same. If they are the same it evaluates to \u003ccode\u003eTrue\u003c/code\u003e; otherwise it evaluates to \u003ccode\u003eFalse\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e比较器根据某些相对度量计算为True或False。数字相等运算符==，比较两个数字以测试它们是否完全相同。如果它们相同则评估为True;否则评估为False：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 1 == 1\nTrue\n\u0026gt; 1 == 3\nFalse\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe numeric inequality operator \u003ccode\u003e!=\u003c/code\u003e tests that two numbers are \u003cem\u003enot\u003c/em\u003e the same:\u003c/p\u003e\n\u003cp\u003e数值不等式运算符！=测试两个数字不相同：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 1 != 1\nFalse\n\u0026gt; 1 != 3\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSome operators have two versions. You just saw the “ASCII” version, but there’s also a “fancy” Unicode version with \u003ccode\u003e≠\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e一些运营商有两个版本。您刚看到“ASCII”版本，但也有一个“奇特”的Unicode版本，≠：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 1 ≠ 3\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eInstead of a literal value you can compare a variable. It doesn’t matter which side you put the values on:\u003c/p\u003e\n\u003cp\u003e您可以比较变量而不是文字值。将值放在哪一方并不重要：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; my $number = 37\n37\n\u0026gt; $number == 38\nFalse\n\u0026gt; 39 == $number\nFalse\n\u0026gt; $number == 37\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can have an expression on either side of the comparator or variables on both sides:\u003c/p\u003e\n\u003cp\u003e您可以在比较器的任一侧或两侧的变量上都有一个表达式：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 2 + 2 == 4\nTrue\n\u0026gt; 5 == 2\nFalse\n\u0026gt; my $thing1 = 17\n17\n\u0026gt; my $thing2 = 13\n13\n\u0026gt; $thing1 == $thing2\nFalse\n\u0026gt; $thing1 != $thing2\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e\u0026gt;\u003c/code\u003e tests that the first operand is numerically greater than the second number and the \u003ccode\u003e\u0026lt;\u003c/code\u003e tests that the first is less than the second:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e\u0026gt;\u003c/code\u003e 测试第一个操作数在数值上大于第二个数字，并且\u0026lt;测试第一个操作数小于第二个数字：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 1 \u0026gt; 3\nFalse\n\u0026gt; 1 \u0026lt; 3\nTrue\n\u0026gt; 3 \u0026lt; 3\nFalse\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWith an equals sign the test can include the number. \u003ccode\u003e\u0026gt;=\u003c/code\u003e tests that the first number is numerically equal to or greater than the second, and \u003ccode\u003e\u0026lt;=\u003c/code\u003e tests that it is less than or equal:\u003c/p\u003e\n\u003cp\u003e使用等号，测试可以包括数字。 \u0026gt; =测试第一个数字在数值上等于或大于第二个数字，并且\u0026lt;=测试它是否小于或等于：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 3 \u0026lt; 3\nFalse\n\u0026gt; 3 \u0026lt;= 3\nTrue\n\u0026gt; 7 \u0026gt; 7\nFalse\n\u0026gt; 7 \u0026gt;= 7\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can also write these with fancier symbols: \u003ccode\u003e\u0026gt;=\u003c/code\u003e as \u003ccode\u003e≥\u003c/code\u003e and \u003ccode\u003e\u0026lt;=\u003c/code\u003e as \u003ccode\u003e≤\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eAlthough not a comparator, the \u003ccode\u003e%%\u003c/code\u003e operator also returns a Boolean. It tests if the number on the left side is evenly divisible by the number on the right side. This is quite handy:\u003c/p\u003e\n\u003cp\u003e您也可以使用更高的符号来编写这些符号：\u0026gt; =as≥且\u0026lt;=as≤。\u003c/p\u003e\n\u003cp\u003e虽然不是比较器，但%%运算符也返回一个布尔值。它测试左侧的数字是否可以被右侧的数字整除。这非常方便：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 10 %% 2\nTrue\n\u0026gt; 10 %% 3\nFalse\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"chained-comparisons\"\u003eCHAINED COMPARISONS\u003c/h3\u003e\n\u003cp\u003eYou can chain comparison operators. You can test that a number is inside or outside of a window (remember the \u003ccode\u003e\u0026gt;\u003c/code\u003e at the start of the input lines is the REPL prompt) like this:\u003c/p\u003e\n\u003cp\u003e您可以链接比较运算符。您可以测试一个数字是在窗口内部还是外部（请记住输入行开头的\u0026gt;是REPL提示符），如下所示：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; $n  = 10\n10\n\u0026gt; 7 \u0026lt; $n \u0026lt; 15\nTrue\n\u0026gt; 7 \u0026lt;= $n \u0026lt; 15\nTrue\n\u0026gt; 7 \u0026lt; $n \u0026gt; 15\nFalse\n\u0026gt; 7 \u0026gt; $n \u0026lt; 15\nFalse\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWithout this you’d have to perform additional and separate comparisons:\u003c/p\u003e\n\u003cp\u003e如果没有这个，你必须进行额外的和单独的比较：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; 7 \u0026lt; $n and $n \u0026lt; 15\nTrue\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"conditionally-running-a-statement\"\u003eCONDITIONALLY RUNNING A STATEMENT\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003eif\u003c/code\u003e keyword allows you to evaluate a statement only when some condition is satisfied. The postfix form is the easiest. The part after the \u003ccode\u003eif\u003c/code\u003e is the condition; it evaluates to \u003ccode\u003eTrue\u003c/code\u003e or \u003ccode\u003eFalse\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003eif关键字允许您仅在满足某些条件时评估语句。后缀形式是最简单的。 if之后的部分是条件;它评估为真或假：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $number = 10;\nput \u0026#39;The number is even\u0026#39; if $number %% 2;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe condition is satisfied when it evaluates to \u003ccode\u003eTrue\u003c/code\u003e. “Satisfaction” is getting what you want; the \u003ccode\u003eif\u003c/code\u003e wants (roughly) its condition to be \u003ccode\u003eTrue\u003c/code\u003e before it allows the statement to run. If the condition is \u003ccode\u003eFalse\u003c/code\u003e the program skips that statement.\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003eif\u003c/code\u003e condition is a Boolean context; it calls \u003ccode\u003e.Bool\u003c/code\u003e for you when you don’t do it explicitly. All of these are the same, but you’ll probably do the last one:\u003c/p\u003e\n\u003cp\u003e在评估为True时满足条件。 “满意”正在得到你想要的东西;在允许语句运行之前，if（大致）将其条件设置为True。如果条件为False，程序将跳过该语句。\u003c/p\u003e\n\u003cp\u003eif条件是布尔上下文;当你不明确地做它时，它会调用.Bool。所有这些都是一样的，但你可能会做最后一个：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput \u0026#39;Always outputs\u0026#39; if 1.Bool;\nput \u0026#39;Always outputs\u0026#39; if 1.so;\nput \u0026#39;Always outputs\u0026#39; if ?1;\nput \u0026#39;Always outputs\u0026#39; if 1;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWith this you can improve your looping program. Previously you had no way to stop it. The \u003ccode\u003elast\u003c/code\u003e keyword immediately leaves the loop:\u003c/p\u003e\n\u003cp\u003e有了这个，你可以改善你的循环程序。以前你无法阻止它。最后一个关键字立即离开循环：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eloop {\n    state $sum = 0;\n    put $sum++;\n    last;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis outputs one line then finishes the loop. That’s what \u003ccode\u003elast\u003c/code\u003e said to do, but that’s not very useful. This version evaluates \u003ccode\u003elast\u003c/code\u003e only when \u003ccode\u003e$sum\u003c/code\u003e is \u003ccode\u003e5\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e这输出一行然后完成循环。这就是上次说的，但这并不是很有用。仅当$ sum为5时，此版本才会评估最后一次：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eloop {\n    state $sum = 0;\n    put $sum++;\n    last if $sum == 5;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.10What is the output of this program? Can you work it out without running the program?\u003c/p\u003e\n\u003cp\u003eThe \u003ccode\u003enext\u003c/code\u003e command is similar to \u003ccode\u003elast\u003c/code\u003e, but it goes on to the next iteration of the loop. You can use a postfix \u003ccode\u003eif\u003c/code\u003eto skip numbers that are divisible by two (when more than one thingy is using a variable in a condition it’s probably better to change it in a separate step):\u003c/p\u003e\n\u003cp\u003e练习2.10这个程序的输出是什么？你可以在不运行程序的情况下解决问题吗？\u003c/p\u003e\n\u003cp\u003e下一个命令与last类似，但它继续循环的下一次迭代。您可以使用后缀if跳过可被2整除的数字（当一个条件中有多个东西使用变量时，最好在单独的步骤中更改它）：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eloop {\n    state $sum = 0;\n    $sum += 1;\n    next if $sum %% 2;\n    put $sum;\n    last if $sum \u0026gt; 5;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow you get the odd numbers:\u003c/p\u003e\n\u003cp\u003e现在你得到奇数：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e1\n3\n5\n7\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"conditional-branching\"\u003eConditional Branching\u003c/h2\u003e\n\u003cp\u003eYou can also write \u003ccode\u003eif\u003c/code\u003e in a block form. The code inside the block runs only when the \u003ccode\u003eif\u003c/code\u003e is satisfied:\u003c/p\u003e\n\u003cp\u003e你也可以用块形式写。块中的代码仅在满足if时运行：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eif $number %% 2 {\n    put \u0026#39;The number is even\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can use parentheses for \u003cem\u003egrouping\u003c/em\u003e if you like but they can’t be immediately next to the \u003ccode\u003eif\u003c/code\u003e; there must be some whitespace:\u003c/p\u003e\n\u003cp\u003e如果您愿意，可以使用括号进行分组，但不能紧跟if;必须有一些空白：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eif ($number %% 2) {\n    put \u0026#39;The number is even\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWith no space between the \u003ccode\u003eif\u003c/code\u003e and the \u003ccode\u003e(\u003c/code\u003e it looks like a subroutine call, which it isn’t. This is a syntax error:\u003c/p\u003e\n\u003cp\u003eif和the之间没有空格（它看起来像子程序调用，它不是。这是语法错误：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eif($number %% 2) {  # ERROR!\n    put \u0026#39;The number is even\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAn \u003ccode\u003eunless\u003c/code\u003e is the opposite sense of \u003ccode\u003eif\u003c/code\u003e. It executes its block when the condition is \u003ccode\u003eFalse\u003c/code\u003e. Another way to think about that is that it skips the block when the condition is \u003ccode\u003eTrue\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e除非是相反的if。它在条件为False时执行其块。另一种思考方式是在条件为True时跳过块：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eunless $number %% 2 {\n    put \u0026#39;The number is odd\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSome people prefer an \u003ccode\u003eif\u003c/code\u003e with a negated condition:\u003c/p\u003e\n\u003cp\u003e有些人更喜欢具有否定条件的if：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eif ! $number %% 2 {\n    put \u0026#39;The number is odd\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAn \u003ccode\u003eelse\u003c/code\u003e allows you to provide a default block to run when the \u003ccode\u003eif\u003c/code\u003e is not satisfied:\u003c/p\u003e\n\u003cp\u003e如果不满足if，则允许您提供默认块以运行：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eif $number %% 2 {\n    put \u0026#39;The number is even\u0026#39;;\n    }\nelse {\n    put \u0026#39;The number is odd\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThese different possibilities are branches of your code. You go down one or the other branch but not both. This is one example of a control structure that decides which code runs.\u003c/p\u003e\n\u003cp\u003eThe entire \u003ccode\u003eif\u003c/code\u003e structure evaluates to a value when you put a \u003ccode\u003edo\u003c/code\u003e in front of it. The \u003ccode\u003edo\u003c/code\u003e allows you to treat a control structure as an expression. The result is the last evaluated expression from inside the structure. This way you can isolate only the parts that are different, then use one statement for output:\u003c/p\u003e\n\u003cp\u003e这些不同的可能性是代码的分支。你去一个或另一个分支，但不是两个。这是决定运行哪些代码的控制结构的一个示例。\u003c/p\u003e\n\u003cp\u003e当你在它前面放置一个do时，整个if结构的计算结果为一个值。 do允许您将控制结构视为表达式。结果是结构内部的最后一个计算表达式。这样，您只能隔离不同的部分，然后使用一个语句进行输出：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $type = do if $number %% 2 { \u0026#39;even\u0026#39; }\n              else            { \u0026#39;odd\u0026#39;  }\n\nput \u0026#39;The number is \u0026#39;, $type;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can skip the intermediate variable (although if that’s confusing it’s okay to do it the longer way):\u003c/p\u003e\n\u003cp\u003e你可以跳过中间变量（虽然如果这让人感到困惑，可以用更长的方式去做）：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput \u0026#39;The number is \u0026#39;,\n    do if $number %% 2 { \u0026#39;even\u0026#39; }\n       else            { \u0026#39;odd\u0026#39;  }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThere’s a shortcut for this. The conditional operator has three parts: the condition, the \u003ccode\u003eTrue\u003c/code\u003e branch, and the \u003ccode\u003eFalse\u003c/code\u003e branch. Between those parts are \u003ccode\u003e??\u003c/code\u003e and \u003ccode\u003e!!\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e这有一个捷径。条件运算符有三个部分：条件，True分支和False分支。那些部分之间是??和!!：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eCONDITION ?? TRUE BRANCH !! FALSE BRANCH\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eUsing this operator you can rewrite the preceding example. The particular formatting isn’t important, but this fits nicely on the page and lines up the different parts. You don’t use a block, which makes this useful for short bits of code:\u003c/p\u003e\n\u003cp\u003e使用此运算符可以重写前面的示例。特定的格式并不重要，但这非常适合页面并排列不同的部分。你不使用一个块，这使得这对短代码有用：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput \u0026#39;The number is \u0026#39;,\n    $number %% 2 ?? \u0026#39;even\u0026#39; !! \u0026#39;odd\u0026#39;;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAn \u003ccode\u003eelsif\u003c/code\u003e specifies another branch with its own condition, so you have three ways this code might run. Some people think zero is neither odd nor even, and they can add another branch for that:\u003c/p\u003e\n\u003cp\u003eelsif指定另一个具有自己条件的分支，因此您可以通过三种方式运行此代码。有些人认为零既不是奇数也不是偶数，他们可以为此添加另一个分支：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eif $number == 0 {\n    put \u0026#39;The number is zero\u0026#39;;\n    }\nelsif $number %% 2 {\n    put \u0026#39;The number is even\u0026#39;;\n    }\nelse {\n    put \u0026#39;The number is odd\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis code works, but it has some repeated structure because each branch has a \u003ccode\u003eput\u003c/code\u003e. A \u003ccode\u003edo\u003c/code\u003e cleans that up nicely. Here’s another way to write that:\u003c/p\u003e\n\u003cp\u003e这段代码有效，但它有一些重复的结构，因为每个分支都有一个put。 A做得很好清理。这是写另一种方式：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eput \u0026#39;The number is \u0026#39;, do\n       if $number == 0 { \u0026#39;zero\u0026#39; }\n    elsif $number %% 2 { \u0026#39;even\u0026#39; }\n    else               { \u0026#39;odd\u0026#39;  }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.11Create a program that outputs the numbers from 1 to 100. However, if the number is a multiple of three, output “Fizz” instead of the number. If it’s a multiple of five, output “Buzz”. If it’s a multiple of both three and five, output “FizzBuzz”.\u003c/p\u003e\n\u003cp\u003e练习2.11创建一个从1到100输出数字的程序。但是，如果数字是3的倍数，则输出“Fizz”而不是数字。如果它是五的倍数，则输出“Buzz”。如果它是三个和五个的倍数，则输出“FizzBuzz”。\u003c/p\u003e\n\u003ch1 id=\"putting-it-all-together\"\u003ePutting It All Together\u003c/h1\u003e\n\u003cp\u003eWith a few more things you can now write the number-guessing program. The \u003ccode\u003e.rand\u003c/code\u003e method returns a fractional number between 0 and the integer (exclusively):\u003c/p\u003e\n\u003cp\u003e通过更多的东西，你现在可以编写数字猜测程序。 .rand方法返回0和整数（仅限）之间的小数：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 100.rand\n62.549491627582\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e.Int\u003c/code\u003e method coerces that to a whole number. It discards the fractional portion; it does not round the number. Put that together with \u003ccode\u003e.rand\u003c/code\u003e and you get a whole number between 0 and the starting number:\u003c/p\u003e\n\u003cp\u003e.Int方法强制转换为整数。它丢弃了小数部分;它没有数字。将它与.rand一起放在0和起始编号之间的整数：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku\n\u0026gt; 100.rand.Int\n23\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePut that together in a complete program. Choose the number, then test what side of another number (sometimes called the “pivot”) it’s on:\u003c/p\u003e\n\u003cp\u003e把它放在一个完整的程序中。选择数字，然后测试它所在的另一个数字（有时称为“数据透视”）的哪一侧：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003emy $number = 100.rand.Int;\n\nif $number \u0026gt; 50 {\n    put \u0026#39;The number is greater than 50\u0026#39;;\n    }\nelsif $number \u0026lt; 50 {\n    put \u0026#39;The number is less than 50\u0026#39;;\n    }\nelse {\n    put \u0026#39;The number is 50\u0026#39;;\n    }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRun that several times and you should get different output eventually:\u003c/p\u003e\n\u003cp\u003e运行几次，你最终会得到不同的输出：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku random.p6\nThe number is less than 50\n% raku random.p6\nThe number is less than 50\n% raku random.p6\nThe number is greater than 50\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.12Wrap the pivot program in a \u003ccode\u003eMAIN\u003c/code\u003e subroutine so you can specify the highest possible number as a command-line argument. Default to \u003ccode\u003e100\u003c/code\u003e if you don’t supply an argument. Adjust that so the program can take another command-line argument to specify the pivot number.\u003c/p\u003e\n\u003cp\u003eIn the previous exercise you set the default for the second argument using a hard-coded literal integer:\u003c/p\u003e\n\u003cp\u003e练习2.12在MAIN子例程中包含pivot程序，以便您可以将最高可能的数字指定为命令行参数。如果您不提供参数，则默认为100。调整它，以便程序可以使用另一个命令行参数来指定数据透视表编号。\u003c/p\u003e\n\u003cp\u003e在上一个练习中，您使用硬编码的文字整数设置第二个参数的默认值：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub MAIN ( $highest = 100, $pivot = 50 ) { ... }\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you run the program with one command-line argument that is less than \u003ccode\u003e50\u003c/code\u003e (or whatever you chose as your default) the output will always be the same:\u003c/p\u003e\n\u003cp\u003e如果使用一个小于50的命令行参数（或者您选择作为默认值的任何内容）运行程序，则输出将始终相同：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e% raku number-program.p6 37\nThe number is less than 50\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can use parameters you’ve already specified to compute defaults for other parameters. Use \u003ccode\u003e$highest\u003c/code\u003e to compute \u003ccode\u003e$pivot\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e您可以使用已指定的参数来计算其他参数的默认值。使用$ highest来计算$ pivot：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esub MAIN ( $highest = 100, $pivot = $highest / 2 ) {\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eEXERCISE 2.13Modify your answer to the previous exercise so you can set the pivot to half the highest value. Default to \u003ccode\u003e50\u003c/code\u003e if you don’t specify two arguments.\u003c/p\u003e\n\u003cp\u003eNow you have everything you need to write your number-guessing program. Your program chooses a secret number that you then have to figure out. This early in the book that seems like a complicated program, but you’ve seen just enough to make it:\u003c/p\u003e\n\u003cp\u003e练习2.13修改上一练习的答案，以便将枢轴设置为最高值的一半。如果未指定两个参数，则默认为50。\u003c/p\u003e\n\u003cp\u003e现在，您拥有编写数字猜测程序所需的一切。您的程序会选择一个您必须弄清楚的密码。在本书的早期，这看起来像一个复杂的程序，但你已经看到了足够的成就：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eChoose a secret number (\u003ccode\u003e.rand\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eLoop repeatedly until the person guesses the number (\u003ccode\u003enext\u003c/code\u003e and \u003ccode\u003elast\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eGet the person’s guess (\u003ccode\u003eprompt\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eGive the person a hint about their guess. Tell them if they are too high or low (comparators, \u003ccode\u003eif\u003c/code\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e•选择一个密码（•。和•）。\u003c/p\u003e\n\u003cp\u003e反复循环，直到该人猜到该号码（下一个和最后一个）。\u003c/p\u003e\n\u003cp\u003e得到这个人的猜测（提示）。\u003c/p\u003e\n\u003cp\u003e给这个人一个关于他们猜测的暗示。告诉他们是否太高或太低（比较，如果）。\u003c/p\u003e\n\u003cp\u003eEXERCISE 2.14Implement the number-guessing program. If you supply a command-line argument use that as the maximum number; otherwise use 100. It may help to immediately output the secret number as you get your program working.\u003c/p\u003e\n\u003cp\u003e练习2.14实施数字猜测程序。如果提供命令行参数，请将其用作最大数字;否则使用100.当您的程序正常工作时，可能有助于立即输出密码。\u003c/p\u003e\n\u003ch1 id=\"summary\"\u003eSummary\u003c/h1\u003e\n\u003cp\u003eYou made it! First chapters are typically the toughest because you’re getting your bearings. You’ve made at least one meaty program that incorporates several things that you haven’t seen in depth yet. You can take input from the command line or from a prompt. You can compare values and follow different code branches. Not bad for a first chapter.\u003c/p\u003e\n\u003cp\u003e你做到了！第一章通常是最难的，因为你得到了你的支持。你已经制作了至少一个丰富的程序，其中包含了一些你还没有深入见过的东西。您可以从命令行或提示中获取输入。您可以比较值并遵循不同的代码分支。对于第一章来说还不错。\u003c/p\u003e\n","text":"声明 本章翻译仅用于 Raku 学习和研究, 请支持电子版或纸质版。\n第二章. 猜数字 You’re about to be thrown in the deep end. There are some basic things you need to know to write useful programs, and you’ll meet a lot of them in this chapter so you can write a number-guessing program by the end. It’s quite a bit to take in all at once but it should make the rest of the chapters more interesting.\n你将要陷入深渊。编写有用的程序需要了解一些基本的东西，本章中你会遇到很多基本的东西，所以你可以在最后编写一个数字猜测程序。一下子就可以完全接受它，但它应该让其他章节更有趣。\nBinding and Assignment You read a little about variables in Chapter 1. To store a value in a variable you assign to it. The item assignment operator, =, stores a single thingy for you. $number is a scalar variable; it can store exactly one thingy. This is item assignment because there’s one thingy. This “sets” the value:\n您将在第1章中阅读一些关于变量的内容。将值存储在您为其分配的变量中。项目赋值运算符=为您存储单个东西。 $ number是一个标量变量;它可以存储一个东西。这是项目分配，因为有一个东西。这“设置”了价值：\nmy $number = 2; If you decide that you don’t want that value you can replace it:\n如果您认为不需要该值，则可以替换它：\n$number = 3; Sometimes you want a value that you can’t change (more likely a value you don’t want another part of your program to change). Instead of the assignment operator you can use the binding operator, :=, to set the value:\n有时你想要一个你无法改变的值（更可能是你不希望程序的另一部分改变的值）。您可以使用绑定运算符：=来设置值，而不是赋值运算符：\nmy $sides-of-a-square := 4; $sides-of-a-square = 5 When you try to change the value you get an error:\n当您尝试更改该值时，您会收到错误：\nCannot assign to an immutable value It’s not the binding operator that makes the variable immutable. It merely makes the thingy on the left the same as the one on the right. In this case, $sides-of-square is actually 4 and not just a variable that happens to store 4. You can’t assign to 4, so you can’t assign to $sides-of-a-square.\nIf you first assign to a scalar variable then bind to that variable you end up with two names for the same variable:\n它不是使变量成为不可变的绑定运算符。它只是让左边的东西和右边的东西相同。在这种情况下，$ sides-of-square实际上是4而不仅仅是恰好存储4的变量。你不能分配给4，所以你不能分配到$ side-of-a-square。\n如果您首先分配给标量变量然后绑定到该变量，则最终会为同一个变量使用两个名称：\nmy $number = 3; my $sides := $number; You can change $sides or $number, and the “other” will change. But there is no “other” to change because they are the same thing! You might think of these as aliases, but it’s a bit more complicated.\nThere’s an important concept here that you should learn early. A variable assignment with = creates a container, then puts a value in that container. A container is just a box that can store a value. You can add, remove, and replace the value in that box. This is mostly invisible to you because the language handles it for you.\nThe binding operator skips this containerization. It aliases the thingy on the right side directly. If it’s already a container that’s what you bind to. You can break down the action of assignment into two steps. First you bind to an anonymous container. That’s right: a container can exist without a name. An anonymous container is just the $ sigil:\n您可以更改$ sides或$ number，“other”将更改。但是没有“其他”可以改变，因为它们是同一个东西！您可能会将这些视为别名，但它有点复杂。\n这里有一个重要的概念，你应该尽早学习。带=的变量赋值创建一个容器，然后在该容器中放入一个值。容器只是一个可以存储值的盒子。您可以添加，删除和替换该框中的值。这对你来说几乎是不可见的，因为语言会为你处理它。\n绑定操作员跳过此容器化。它直接在右侧别名。如果它已经是一个与你绑定的容器。您可以将分配操作分解为两个步骤。首先绑定到匿名容器。没错：容器可以没有名字而存在。一个匿名的容器只是$ sigil：\nmy $number := $; After that you can change the value in the container using =:\n之后，您可以使用=更改容器中的值：\n$number = 3; Sometimes you’ll need to know if the thingy you have is a container, and there will be times you’ll want to skip the container. Start thinking about this early, before you develop bad habits, and your programming life will be easier.\n有时你需要知道你拥有的东西是否是一个容器，有时候你会想要跳过容器。在你养成坏习惯之前就开始考虑这个问题，你的编程生活会更容易。\nA MAIN Program In Chapter 1 you saw some examples of statements. This is a complete program:\n在第1章中，您看到了一些语句示例。这是一个完整的程序：\nput \u0026#39;Hello Raku!\u0026#39;; If you’ve programmed in some other languages you may have encountered a subroutine called main or something similar. Those languages probably required you to put your program inside that routine; when you ran your program it automatically ran that subroutine for you. Raku is a little different because it assumes that your entire file is already that main.\nYou can still have such a subroutine though. If you define a MAIN subroutine (all caps!) your program will call that automatically if you run the program:\n如果您使用其他语言进行编程，则可能遇到了一个名为main或类似的子程序。那些语言可能要求你把你的程序放在那个例程中;当你运行程序时，它会自动为你运行该子程序。 Raku有点不同，因为它假设您的整个文件已经是主要文件。\n你仍然可以拥有这样的子程序。如果你定义一个MAIN子程序（所有大写！），你的程序将在你运行程序时自动调用它：\nsub MAIN { put \u0026#39;Hello Raku!\u0026#39; } You won’t read about subroutines until Chapter 11, so trust me for a bit on this one. You’ll read more of an explanation of MAIN as you go through the book.\nEXERCISE 2.1Create both versions of the “Hello Raku” program. The one-line version and MAIN version should give you the same output.\n在第11章之前，你不会阅读关于子程序的内容，所以请相信我一点。在阅读本书时，您将阅读更多关于MAIN的解释。\nEXERCISE 2.1创建“Hello Raku”程序的两个版本。单行版本和MAIN版本应该为您提供相同的输出。\nProgram Arguments You probably have seen other command-line programs that take arguments. The filenames you give to more or type are arguments that tell those programs which file’s contents you want to see:\n您可能已经看过其他带参数的命令行程序。您提供给更多或类型的文件名是告诉这些程序您想要查看哪些文件内容的参数：\n% more hello-world.p6 C:\\ type hello-world.p6 Your Raku program can take arguments too. When you try it with your existing program you get a help message instead of the output that you expected:\n你的Raku程序也可以参数。当您使用现有程序尝试它时，您会得到一条帮助消息，而不是您期望的输出：\n% raku hello-world-main.p6 1 2 3 Usage: hello-world-main.p6 To accept arguments you have to tell MAIN to expect them. Your program had an implicit set of empty parentheses in it. Those parentheses define the parameters, which are the templates for the arguments. Arguments are what you get; parameters are what you wanted. In this case you didn’t specify any parameters, so your program expects no arguments and complains if you try to give it some:\n要接受参数，你必须告诉MAIN期望它们。你的程序中有一组隐含的空括号。这些括号定义参数，这些参数是参数的模板。争论就是你得到的;参数是你想要的。在这种情况下，您没有指定任何参数，因此如果您尝试给它一些，您的程序不需要参数和抱怨：\nsub MAIN () { put \u0026#39;Hello Raku!\u0026#39; } You can change this. You can specify a variable in the parameter list. One parameter allows your MAIN subroutine to take exactly one argument. Change your put statement to output the value in $thingy by defining a signature after the subroutine name:\n你可以改变这个。您可以在参数列表中指定变量。一个参数允许MAIN子例程只取一个参数。通过在子例程名称后定义签名，更改put语句以输出$ thingy中的值：\nsub MAIN ( $thingy ) { put $thingy; } When you run this program with no command-line arguments you get a different help message. You needed one argument and gave it none. Curiously, the help message tells you the name of the variable you used in the parameter:\n如果在没有命令行参数的情况下运行此程序，则会收到不同的帮助消息。你需要一个论点并且没有给它。奇怪的是，帮助消息告诉您在参数中使用的变量的名称：\n% raku main-one-thingy.p6 Usage: main-one-thingy.p6 \u0026lt;thingy\u0026gt; % raku main-one-thingy.p6 Hello Hello Quote the entire value or escape the whitespace (Unix shells only) to preserve whitespace inside a value you want to give to the thingy:\n引用整个值或转义空格（仅限Unix shell）以保留要为thingy赋值的内部空格：\n% raku main-one-thingy.p6 \u0026#34;Hello Raku\u0026#34; Hello Raku % raku main-one-thingy.p6 Hello\\ Perl\\ 6 Hello Raku You can specify more than one parameter by separating them with commas. You can also output multiple things in a single put by separating them with commas:\n您可以通过用逗号分隔多个参数来指定它们。您也可以通过用逗号分隔它们来输出单个put中的多个内容：\nsub MAIN ( $thingy1, $thingy2 ) { put \u0026#39;1: \u0026#39;, $thingy1; put \u0026#39;2: \u0026#39;, $thingy1; } Now you have to give your program two arguments. If you don’t give it exactly two arguments it doesn’t work:\n现在你必须给你的程序两个参数。如果你不准确地给它两个参数它不起作用：\n% raku main-two-thingys.p6 Hamadryas Usage: main-two-thingys.p6 \u0026lt;thingy1\u0026gt; \u0026lt;thingy2\u0026gt; % raku main-two-thingys.p6 Hamadryas perlicus 1: Hamadryas 2: perlicus NOTE Hamadryas perlicus is the (un)scientific name I’ve given to the butterfly on the cover. Sometimes I call him “Hama” for short because it rhymes with “llama.”\nSometimes you don’t want to specify two arguments even though you need two values. You can specify a default value for some parameters. Use the = to specify the default:\nHamadryas perlicus *是我在封面上给蝴蝶的（非）学名。有时我称他为“哈马”，因为它与“美洲驼”押韵。\n有时您不希望指定两个参数，即使您需要两个值。您可以为某些参数指定默认值。使用=指定默认值：\nsub MAIN ( $thingy1, $thingy2 = \u0026#39;perlicus\u0026#39; ) { put \u0026#39;1: \u0026#39;, $thingy1; put \u0026#39;2: \u0026#39;, $thingy2; } When you call it with two arguments it works as before, but when you specify exactly one argument it uses the default for the second:\n当你用两个参数调用它时，它像以前一样工作，但是当你指定一个参数时，它使用第二个参数的默认值：\n% raku main-two-thingys-default.p6 Hamadryas februa 1: Hamadryas 2: februa % raku main-two-thingys-default.p6 Hamadryas 1: Hamadryas 2: perlicus Any parameters with defaults have to show up after those without them. You’ll see much more about parameters in Chapter 11.\nEXERCISE 2.2Create a program that takes three command-line arguments and outputs them on separate, numbered lines. Give two of the parameters default values.\n任何带有默认值的参数都必须显示在没有它们的参数之后。您将在第11章中看到有关参数的更多信息。\n练习2.2创建一个带有三个命令行参数的程序，并将它们输出到不同的编号行上。给出两个参数默认值。\nPrompting for Values The prompt routine outputs a message asking for input. When you type some text followed by Return promptreads that text and returns it. You can assign that value to a variable:\n提示例程输出要求输入的消息。当您键入一些文本，然后返回提示时，将读取该文本并将其返回。您可以将该值分配给变量：\nmy $answer = prompt \u0026#39;What is your favorite number? \u0026#39;; put \u0026#39;Your answer was [\u0026#39;, $answer, \u0026#39;]\u0026#39;; When you run the program you see the prompt and start typing right after it on the same line:\n运行程序时，您会看到提示并在同一行后面开始输入：\n% raku prompt.p6 What is your favorite number? 137 Your answer was [137] The value you get back from prompt does not include the line ending from Return.\nEXERCISE 2.3Write a program that asks for your name and then outputs a greeting to that name. If your name is Gilligan it should output “Hello Gilligan.” Can you use a MAIN subroutine and only prompt if there’s no command-line argument?\n从提示中返回的值不包括以Return结尾的行。\n练习2.3写一个程序，询问你的名字，然后输出一个问候语到该名称。如果你的名字是Gilligan，它应该输出“Hello Gilligan。”你能使用MAIN子程序，只有在没有命令行参数的情况下才会提示吗？\nLiteral Numbers Literal values are those that you type directly into the program. They are fixed and are sometimes called “hardcoded” values because they exist directly in the program instead of coming from input or configuration. These are terms, and you can write them in several ways.\nAn integer is a whole number. These are the numbers of everyday life expressed with the digits from 0 to 9:\n文字值是您直接在程序中键入的值。它们是固定的，有时称为“硬编码”值，因为它们直接存在于程序中，而不是来自输入或配置。这些是术语，您可以通过多种方式编写它们。\n整数是整数。这些是用0到9的数字表示的日常生活数量：\n137 4 -19 0 Digital computers are more comfortable with powers of two. Prefix a literal number with 0x to specify a hexadecimal number. That’s base 16 and uses the digits 0 to 9 and the letters A to F (in either case) to represent 0 to 15:\n数字计算机更适合两种能力。使用0x前缀一个文字数字以指定十六进制数字。这是基数16并使用数字0到9和字母A到F（在任何一种情况下）代表0到15：\n0x89 0xBEEF -0x20 Octal numbers are base 8 and use the digits 0 to 7. Prefix a literal octal number with 0o:\n八进制数是基数8并使用数字0到7.用0o前缀一个文字八进制数：\n0o211 -0o177 Binary numbers are base 2 and use the digits 0 and 1. These are handy when you deal with binary formats. Prefix them with 0b:\n二进制数字是基数2并使用数字0和1.当您处理二进制格式时，这些都很方便。用0b作为前缀：\n0b10001001 Choose a representation that’s easy for you to understand or that’s natural for the task. The compiler converts those representations into values that the physical computer can use. It doesn’t care which one you use; they are just numbers. These are all the same value:\n选择一个易于理解或对任务而言很自然的表示。编译器将这些表示转换为物理计算机可以使用的值。它并不关心你使用哪一个;他们只是数字。这些都是相同的价值：\n137 # decimal, base 10 0b10001001 # binary, base 2 0o211 # octal, base 8 0x89 # hexadecimal, base 16 EXERCISE 2.4In the REPL try the different base examples. What decimal value does the REPL echo?\nPerhaps you don’t like the ASCII digits 0 to 9. You can use any digits that Unicode supports; Raku knows about anything that’s a number character. Eastern Arabic numerals work. Notice that the radix prefixes are the same:\nEXERCISE 2.4在REPL中尝试不同的基础示例。 REPL回显的十进制值是多少？\n也许您不喜欢ASCII数字0到9.您可以使用Unicode支持的任何数字; Raku知道任何数字角色。东部阿拉伯数字工作。请注意，基数前缀是相同的：\n١٣٧ 0b١٠٠٠١٠٠١ 0o٢١١ 0x٨٩ So do Bengali digits:\n孟加拉语数字也是如此：\n১৩৭ 0b১০০০১০০১ 0o২১১ 0x৮৯ I don’t encourage you to represent numbers like this in your program, but Raku understands them. This is useful when you are processing text that contains them. Your program will be able to convert these to a number type.\nYou can choose other bases up to base 36. You’ve already seen base 16, which uses 0 to 9 and A to F. Base 17 would add G, and so on up to base 36, which includes Z. Use a colon before the base (in decimal), then put the digits inside angle brackets:\n我不鼓励你在你的程序中代表这样的数字，但Raku理解它们。当您处理包含它们的文本时，这非常有用。您的程序将能够将这些转换为数字类型。\n您可以选择基数为36的其他基数。您已经看过基数为16，使用0到9和A到F.基数17将添加G，依此类推到基数36，其中包括Z.使用冒号之前基数（十进制），然后将数字放在尖括号内：\n:7\u0026lt;254\u0026gt; :19\u0026lt;IG88\u0026gt; :26\u0026lt;HAL9000\u0026gt; :36\u0026lt;THX1138\u0026gt; EXERCISE 2.5Try the unusual base examples in the REPL. What decimal numbers are they?\n练习2.5尝试REPL中不寻常的基础示例。它们的十进制数是多少？\nFormatting Numbers Literal numbers are objects. You can call methods on objects. The .base method allows you to specify the base that you want to represent:\n文字数字是对象。您可以在对象上调用方法。 .base方法允许您指定要表示的基数：\nput 0x89.base: 10; # 137 You can choose some other base, up to 36:\n您可以选择其他一些基地，最多36个：\nput 0x89.base: 2; # 10001001 put 0x89.base: 8; # 211 put 0x89.base: 16; # 89 EXERCISE 2.6Write a program that takes a decimal number as its single command-line argument. Output its binary, octal, decimal, and hexadecimal values. What happens if you give it a hexadecimal number on the command line? What if you specify the decimal number in Eastern Arabic digits?\nIn the previous exercise you couldn’t specify a hexadecimal number as an argument. That’s because you weren’t actually specifying a number as an argument. It was text made up of digit characters. If you want to use a hexadecimal number you have to tell your program how to convert the number. You can use .parse-base for that. You tell it which base you expect and it does the rest:\n练习2.6编写一个以十进制数作为单个命令行参数的程序。输出二进制，八进制，十进制和十六进制值。如果在命令行上给它一个十六进制数，会发生什么？如果您在东部阿拉伯数字中指定十进制数怎么办？\n在上一个练习中，您无法将十六进制数指定为参数。那是因为你实际上没有指定一个数字作为参数。它是由数字字符组成的文本。如果要使用十六进制数，则必须告诉程序如何转换数字。你可以使用.parse-base。你告诉它你期望的基础，剩下的就是：\nmy $number = $thingy.parse-base: 16; EXERCISE 2.7Modify your answer from the previous exercise to accept a hexadecimal number command-line argument. Your program will now only handle hexadecimal numbers if you’re using only what you’ve seen so far.\n练习2.7修改上一练习中的答案以接受十六进制数字命令行参数。如果你只使用到目前为止看到的内容，你的程序现在只能处理十六进制数字。\nNumeric Operations Numeric operators transform numbers into new values. The simplest demonstration is to immediately output the result. The + is the addition operator:\n数字运算符将数字转换为新值。最简单的演示是立即输出结果。 +是加法运算符：\nput 2 + 2; You can also store the result in a variable and then output it. The item assignment is an operation and so is the addition. The + happens first because it has higher precedence:\n您还可以将结果存储在变量中，然后将其输出。项目分配是一项操作，添加也是如此。 +首先发生，因为它具有更高的优先级：\nmy $sum = 2 + 2; put $sum; There are operators for subtraction (-), multiplication (*), division (/), and exponentiation (**). You’ll see more in the next chapter.\nOutputting a single number is easy. If you want to output a series of numbers, you could have multiple lines:\n有减法（ - ），乘法（*），除法（/）和取幂（**）的运算符。您将在下一章中看到更多内容。\n输出单个数字很容易。如果要输出一系列数字，可以有多行：\nmy $sum = 0; put $sum + 1; put $sum + 1 + 1; put $sum + 1 + 1 + 1; Each time you add one more to it. That repeats a lot of structure. You can back up a little to make an improvement where the put statement is the same in each case:\n每次再添加一个。这重复了很多结构。在每种情况下，put语句相同时，您可以稍微备份以进行改进：\nmy $sum = 0; $sum = $sum + 1; put $sum; $sum = $sum + 1; put $sum; $sum = $sum + 1; put $sum; The $sum variable shows up on the left and right of the assignment. That’s okay; the compiler’s not going to get confused. It evaluates everything on the right side using the current value of $sum. When it’s reduced the right side to its value it assigns that to $sum, replacing the value that’s already there. You’re still doing the same thing over and over again, but now that same thing looks exactly like the other things.\nNow it’s time to introduce loop. It repeatedly executes the code inside its braces. This code will run until you interrupt the program (probably with Control-C):\n$ sum变量显示在赋值的左侧和右侧。没关系;编译器不会混淆。它使用$ sum的当前值评估右侧的所有内容。当它将右侧减少到它的值时，它会将其分配给$ sum，替换已存在的值。你仍然一遍又一遍地做同样的事情，但现在同样的事情看起来和其他事情完全一样。\n现在是时候介绍循环了。它重复执行括号内的代码。此代码将一直运行，直到您中断程序（可能使用Control-C）：\nmy $sum = 0; loop { $sum = $sum + 1; put $sum; } You can combine the two statements inside loop. The result of an assignment is the value that you assigned. Here, you add to $sum then assign that result back to $sum, and use that expression as the value you give to put:\n您可以在循环内组合这两个语句。赋值的结果是您指定的值。在这里，您添加$ sum然后将该结果分配回$ sum，并将该表达式用作您放置的值：\nmy $sum = 0; loop { put $sum = $sum + 1; } This sort of structure is so common that it has its own operator: the ++ unary prefix autoincrement operator. It adds one before you use the value:\n这种结构很常见，它有自己的运算符：++一元前缀自动增量运算符。它在您使用该值之前添加一个：\nmy $sum = 0; loop { put ++$sum; } There’s also a unary postfix version. It adds one to the value, but after you use it:\n还有一个一元的后缀版本。它会在值中添加一个，但在您使用它之后：\nmy $sum = 0; loop { put $sum++; } EXERCISE 2.8What’s the difference in output in the two programs that use the prefix and postfix autoincrement operators? Can you figure it out without running the programs?\nSo far you’ve declared variables with my. That limits their definition to the current scope. That’s a problem for variables you want in a loop if they should keep their values. This wouldn’t work because each time through the loop would get a new variable even though you used the same name:\n练习2.8使用前缀和后缀自动增量运算符的两个程序的输出差异是什么？如果不运行程序，你能搞清楚吗？\n到目前为止，你已经用我的声明了变量。这将他们的定义限制在当前范围内。如果它们应该保留它们的值，那么在循环中你想要的变量就是一个问题。这不起作用，因为即使您使用相同的名称，每次循环都会获得一个新变量：\nloop { my $sum = 0; put $sum++; } Declare the variable with state instead: this makes the variable private to the block but doesn’t reset it each time through it. A state declaration only executes the first time through the block and is ignored after that. The assignment to $sum happens once:\n用状态声明变量：这使得变量对块是私有的，但每次都不会重置它。状态声明仅在块中第一次执行，之后将被忽略。 $ sum的赋值发生一次：\nloop { state $sum = 0; put $sum++; } This is a bit nicer because everything about $sum is contained inside the block. Always try to give variables the smallest scope they need. If they don’t need to be outside the block define them inside it.\nThose operators add or subtract one. If you want to increment by a different number you’re back to using +:\n这有点好，因为$ sum的所有内容都包含在块中。始终尝试为变量提供所需的最小范围。如果他们不需要在块之外定义它们。\n那些运营商增加或减少一个。如果你想增加一个不同的数字，你就回到了使用+：\nloop { state $sum = 0; put $sum = $sum + 2; } That’s still one too many $sums in that code. There’s a special form of the assignment operator that lets you shorten this. You can put the infix operator before the =, like this:\n那段代码中仍然有太多$ sum。有一种特殊形式的赋值运算符可以让你缩短它。您可以在=之前放置中缀运算符，如下所示：\n$sum += 2; This convenient shorthand is binary assignment. It’s the same as using the variable on both sides of the = but it’s easier to type:\n这种方便的简写是二进制赋值。它与在=的两侧使用变量相同，但更容易输入：\n$sum = $sum + 2; Most binary operators can do this, even if they are multiple characters:\n大多数二元运算符都可以执行此操作，即使它们是多个字符：\n$product *= 5; $quotient /= 2; $is-divisible %%= 3; EXERCISE 2.9Rewrite the looping program to output only multiples of three by adding the appropriate interval to the previous value. Further modify the program to accept the multiple as a command-line argument.\n练习2.9通过将适当的间隔添加到上一个值，重写循环程序以仅输出三的倍数。进一步修改程序以接受多个作为命令行参数。\nConditional Execution This chapter has been working its way to a number-guessing program. You know a little bit about numbers, command-line arguments, prompting, and looping. Next you need to know how to decide between two or more paths in your code. That comes in two parts: comparing things to get an answer and using that answer to select the next thing to do.\n本章一直致力于数字猜测程序。您对数字，命令行参数，提示和循环有一点了解。接下来，您需要知道如何在代码中的两个或多个路径之间做出决定。这分为两部分：比较事情以获得答案并使用该答案选择下一步要做的事情。\nBoolean Values Boolean values are logical values that can be one thing or the other: yes or no, on or off, or True or False. These are of type Bool. You’ll use these values to decide between different paths in your program. First, a little Boolean math.\nYou can combine Boolean values with logical operators. The \u0026amp;\u0026amp; logical AND operator evaluates to True if both operands are True. The || logical OR operator evaluates to True if one or more operators are True:\n布尔值是逻辑值，可以是一个或另一个：是或否，打开或关闭，或者是True或False。这些是Bool类型。您将使用这些值来决定程序中的不同路径。首先，一点布尔数学。\n您可以将布尔值与逻辑运算符组合使用。如果两个操作数均为True，则\u0026amp;\u0026amp; logical AND运算符的计算结果为True。 ||如果一个或多个运算符为True，则逻辑OR运算符的计算结果为True：\n% raku \u0026gt; True \u0026amp;\u0026amp; True True \u0026gt; True \u0026amp;\u0026amp; False False \u0026gt; True || True True \u0026gt; True || False True All of these operators have spelled out “word” versions. These are the lowest-precedence operators (aside from the sequence operators). These operations always happen last:\n所有这些运营商都拼写出“单词”版本。这些是优先级最低的运算符（除了序列运算符）。这些操作总是最后发生：\n% raku \u0026gt; True and True True \u0026gt; True and False False \u0026gt; True or False True The ! unary prefix operator changes one Bool value to the other one: True becomes False, and the other way around. This is called negating the condition. not is the low-precedence version of that:\n的！一元前缀运算符将一个Bool值更改为另一个：True变为False，反之亦然。这被称为否定条件。不是那个低优先级的版本：\n% raku \u0026gt; ! True False \u0026gt; ! False True \u0026gt; not True False \u0026gt; not False True Many objects can collapse themselves to a Bool value when needed, but it’s up to each object how it does that. For numbers, 0 is False and everything else is True.\nFor most objects (not just numbers) you can use a prefix ? to coerce into either True or False. It calls the .Bool method on the object. The builtin types know how to convert their values to Booleans using whatever rule they decide. For numbers, 0 is False and everything else is True:\n许多对象可以在需要时将自身折叠为Bool值，但是由每个对象决定它是如何做到的。对于数字，0为False，其他所有为True。\n对于大多数对象（不仅仅是数字），您可以使用前缀？强迫无论是真还是假。它在对象上调用.Bool方法。内置类型知道如何使用他们决定的任何规则将其值转换为布尔值。对于数字，0为False，其他一切为True：\n% raku \u0026gt; ?1 True \u0026gt; ?0 False \u0026gt; ?-1 True \u0026gt; 1.Bool True \u0026gt; 0.Bool False \u0026gt; (-1).Bool True The .so method and so routine do the same thing:\n.so方法和例程也做同样的事情：\n\u0026gt; 1.so True \u0026gt; 0.so False \u0026gt; (-1).so True \u0026gt; so 0 False \u0026gt; so 1 True Type objects know what they are but they have no concrete value. They are always False:\n类型对象知道它们是什么，但它们没有具体的价值。他们总是错的：\n% raku \u0026gt; Int.so False Some things that want Boolean values will implicitly do these coercions for you.\n一些需要布尔值的东西会隐式地为你做这些强制。\nSHORT-CIRCUIT OPERATORS The logical operators don’t really evaluate to Boolean values. \u0026amp;\u0026amp; and || test their expressions for True or False, but the entire structure evaluates to the last expression it evaluated.\n|| needs only one expression to be True for the entire thing to be True. If it gets back anything that’s True, then the entire thing is True. All of these are False, but you can see the last expression || evaluated:\n逻辑运算符并不真正评估为布尔值。 \u0026amp;\u0026amp;和||测试他们的表达式是True还是False，但整个结构的计算结果是它评估的最后一个表达式。\n||只需要一个表达式为True，整个事物就是True。如果它返回任何真实的东西，那么整个事情就是真的。所有这些都是假的，但你可以看到最后一个表达式||评价：\n% raku \u0026gt; 0 || Nil Nil \u0026gt; 0 || False False \u0026gt; 0 || Failure (Failure) These are True. When || finds any value that would evaluate to True as a Boolean it stops right away. These are sometimes called short-circuit operators:\n这些是真的。当||找到任何值将被评估为True的值作为它立即停止的布尔值。这些有时被称为短路运营商：\n% raku \u0026gt; True || 0 True \u0026gt; 137 || True 137 It’s the same with \u0026amp;\u0026amp;. It returns the last expression it evaluated. If that value is False then one of those expressions was False:\n与\u0026amp;\u0026amp;相同。它返回它评估的最后一个表达式。如果该值为False，则其中一个表达式为False：\n% raku \u0026gt; 0 \u0026amp;\u0026amp; 137 0 \u0026gt; 42 \u0026amp;\u0026amp; 8 8 There’s a third operator that’s similar. The defined-or operator, //, tests its left side for definedness. If the left value is defined that’s the result, even if that value is False:\n还有第三个类似的运营商。定义的或运算符//测试其左侧的定义。如果定义左值是结果，即使该值为False：\n% raku \u0026gt; 0 // 137 0 \u0026gt; Nil // 19 19 A type object is never defined:\n永远不会定义类型对象：\n% raku \u0026gt; Int // 7 7 The defined-or is part of a common technique to set a value if a variable doesn’t already have one (or has one that is not defined). You’ll see it as a binary assignment:\n如果变量还没有（或者没有定义一个变量），则定义或者是设置值的常用技术的一部分。您会将其视为二进制赋值：\n$value //= 137; Comparing Things A comparator evaluates to True or False based on some relative measure. The numeric equality operator, ==, compares two numbers to test if they are exactly the same. If they are the same it evaluates to True; otherwise it evaluates to False:\n比较器根据某些相对度量计算为True或False。数字相等运算符==，比较两个数字以测试它们是否完全相同。如果它们相同则评估为True;否则评估为False：\n% raku \u0026gt; 1 == 1 True \u0026gt; 1 == 3 False The numeric inequality operator != tests that two numbers are not the same:\n数值不等式运算符！=测试两个数字不相同：\n% raku \u0026gt; 1 != 1 False \u0026gt; 1 != 3 True Some operators have two versions. You just saw the “ASCII” version, but there’s also a “fancy” Unicode version with ≠:\n一些运营商有两个版本。您刚看到“ASCII”版本，但也有一个“奇特”的Unicode版本，≠：\n% raku \u0026gt; 1 ≠ 3 True Instead of a literal value you can compare a variable. It doesn’t matter which side you put the values on:\n您可以比较变量而不是文字值。将值放在哪一方并不重要：\n% raku \u0026gt; my $number = 37 37 \u0026gt; $number == 38 False \u0026gt; 39 == $number False \u0026gt; $number == 37 True You can have an expression on either side of the comparator or variables on both sides:\n您可以在比较器的任一侧或两侧的变量上都有一个表达式：\n% raku \u0026gt; 2 + 2 == 4 True \u0026gt; 5 == 2 False \u0026gt; my $thing1 = 17 17 \u0026gt; my $thing2 = 13 13 \u0026gt; $thing1 == $thing2 False \u0026gt; $thing1 != $thing2 True The \u0026gt; tests that the first operand is numerically greater than the second number and the \u0026lt; tests that the first is less than the second:\n\u0026gt; 测试第一个操作数在数值上大于第二个数字，并且\u0026lt;测试第一个操作数小于第二个数字：\n% raku \u0026gt; 1 \u0026gt; 3 False \u0026gt; 1 \u0026lt; 3 True \u0026gt; 3 \u0026lt; 3 False With an equals sign the test can include the number. \u0026gt;= tests that the first number is numerically equal to or greater than the second, and \u0026lt;= tests that it is less than or equal:\n使用等号，测试可以包括数字。 \u0026gt; =测试第一个数字在数值上等于或大于第二个数字，并且\u0026lt;=测试它是否小于或等于：\n% raku \u0026gt; 3 \u0026lt; 3 False \u0026gt; 3 \u0026lt;= 3 True \u0026gt; 7 \u0026gt; 7 False \u0026gt; 7 \u0026gt;= 7 True You can also write these with fancier symbols: \u0026gt;= as ≥ and \u0026lt;= as ≤.\nAlthough not a comparator, the %% operator also returns a Boolean. It tests if the number on the left side is evenly divisible by the number on the right side. This is quite handy:\n您也可以使用更高的符号来编写这些符号：\u0026gt; =as≥且\u0026lt;=as≤。\n虽然不是比较器，但%%运算符也返回一个布尔值。它测试左侧的数字是否可以被右侧的数字整除。这非常方便：\n% raku \u0026gt; 10 %% 2 True \u0026gt; 10 %% 3 False CHAINED COMPARISONS You can chain comparison operators. You can test that a number is inside or outside of a window (remember the \u0026gt; at the start of the input lines is the REPL prompt) like this:\n您可以链接比较运算符。您可以测试一个数字是在窗口内部还是外部（请记住输入行开头的\u0026gt;是REPL提示符），如下所示：\n% raku \u0026gt; $n = 10 10 \u0026gt; 7 \u0026lt; $n \u0026lt; 15 True \u0026gt; 7 \u0026lt;= $n \u0026lt; 15 True \u0026gt; 7 \u0026lt; $n \u0026gt; 15 False \u0026gt; 7 \u0026gt; $n \u0026lt; 15 False Without this you’d have to perform additional and separate comparisons:\n如果没有这个，你必须进行额外的和单独的比较：\n\u0026gt; 7 \u0026lt; $n and $n \u0026lt; 15 True CONDITIONALLY RUNNING A STATEMENT The if keyword allows you to evaluate a statement only when some condition is satisfied. The postfix form is the easiest. The part after the if is the condition; it evaluates to True or False:\nif关键字允许您仅在满足某些条件时评估语句。后缀形式是最简单的。 if之后的部分是条件;它评估为真或假：\nmy $number = 10; put \u0026#39;The number is even\u0026#39; if $number %% 2; The condition is satisfied when it evaluates to True. “Satisfaction” is getting what you want; the if wants (roughly) its condition to be True before it allows the statement to run. If the condition is False the program skips that statement.\nThe if condition is a Boolean context; it calls .Bool for you when you don’t do it explicitly. All of these are the same, but you’ll probably do the last one:\n在评估为True时满足条件。 “满意”正在得到你想要的东西;在允许语句运行之前，if（大致）将其条件设置为True。如果条件为False，程序将跳过该语句。\nif条件是布尔上下文;当你不明确地做它时，它会调用.Bool。所有这些都是一样的，但你可能会做最后一个：\nput \u0026#39;Always outputs\u0026#39; if 1.Bool; put \u0026#39;Always outputs\u0026#39; if 1.so; put \u0026#39;Always outputs\u0026#39; if ?1; put \u0026#39;Always outputs\u0026#39; if 1; With this you can improve your looping program. Previously you had no way to stop it. The last keyword immediately leaves the loop:\n有了这个，你可以改善你的循环程序。以前你无法阻止它。最后一个关键字立即离开循环：\nloop { state $sum = 0; put $sum++; last; } This outputs one line then finishes the loop. That’s what last said to do, but that’s not very useful. This version evaluates last only when $sum is 5:\n这输出一行然后完成循环。这就是上次说的，但这并不是很有用。仅当$ sum为5时，此版本才会评估最后一次：\nloop { state $sum = 0; put $sum++; last if $sum == 5; } EXERCISE 2.10What is the output of this program? Can you work it out without running the program?\nThe next command is similar to last, but it goes on to the next iteration of the loop. You can use a postfix ifto skip numbers that are divisible by two (when more than one thingy is using a variable in a condition it’s probably better to change it in a separate step):\n练习2.10这个程序的输出是什么？你可以在不运行程序的情况下解决问题吗？\n下一个命令与last类似，但它继续循环的下一次迭代。您可以使用后缀if跳过可被2整除的数字（当一个条件中有多个东西使用变量时，最好在单独的步骤中更改它）：\nloop { state $sum = 0; $sum += 1; next if $sum %% 2; put $sum; last if $sum \u0026gt; 5; } Now you get the odd numbers:\n现在你得到奇数：\n1 3 5 7 Conditional Branching You can also write if in a block form. The code inside the block runs only when the if is satisfied:\n你也可以用块形式写。块中的代码仅在满足if时运行：\nif $number %% 2 { put \u0026#39;The number is even\u0026#39;; } You can use parentheses for grouping if you like but they can’t be immediately next to the if; there must be some whitespace:\n如果您愿意，可以使用括号进行分组，但不能紧跟if;必须有一些空白：\nif ($number %% 2) { put \u0026#39;The number is even\u0026#39;; } With no space between the if and the ( it looks like a subroutine call, which it isn’t. This is a syntax error:\nif和the之间没有空格（它看起来像子程序调用，它不是。这是语法错误：\nif($number %% 2) { # ERROR! put \u0026#39;The number is even\u0026#39;; } An unless is the opposite sense of if. It executes its block when the condition is False. Another way to think about that is that it skips the block when the condition is True:\n除非是相反的if。它在条件为False时执行其块。另一种思考方式是在条件为True时跳过块：\nunless $number %% 2 { put \u0026#39;The number is odd\u0026#39;; } Some people prefer an if with a negated condition:\n有些人更喜欢具有否定条件的if：\nif ! $number %% 2 { put \u0026#39;The number is odd\u0026#39;; } An else allows you to provide a default block to run when the if is not satisfied:\n如果不满足if，则允许您提供默认块以运行：\nif $number %% 2 { put \u0026#39;The number is even\u0026#39;; } else { put \u0026#39;The number is odd\u0026#39;; } These different possibilities are branches of your code. You go down one or the other branch but not both. This is one example of a control structure that decides which code runs.\nThe entire if structure evaluates to a value when you put a do in front of it. The do allows you to treat a control structure as an expression. The result is the last evaluated expression from inside the structure. This way you can isolate only the parts that are different, then use one statement for output:\n这些不同的可能性是代码的分支。你去一个或另一个分支，但不是两个。这是决定运行哪些代码的控制结构的一个示例。\n当你在它前面放置一个do时，整个if结构的计算结果为一个值。 do允许您将控制结构视为表达式。结果是结构内部的最后一个计算表达式。这样，您只能隔离不同的部分，然后使用一个语句进行输出：\nmy $type = do if $number %% 2 { \u0026#39;even\u0026#39; } else { \u0026#39;odd\u0026#39; } put \u0026#39;The number is \u0026#39;, $type; You can skip the intermediate variable (although if that’s confusing it’s okay to do it the longer way):\n你可以跳过中间变量（虽然如果这让人感到困惑，可以用更长的方式去做）：\nput \u0026#39;The number is \u0026#39;, do if $number %% 2 { \u0026#39;even\u0026#39; } else { \u0026#39;odd\u0026#39; } There’s a shortcut for this. The conditional operator has three parts: the condition, the True branch, and the False branch. Between those parts are ?? and !!:\n这有一个捷径。条件运算符有三个部分：条件，True分支和False分支。那些部分之间是??和!!：\nCONDITION ?? TRUE BRANCH !! FALSE BRANCH Using this operator you can rewrite the preceding example. The particular formatting isn’t important, but this fits nicely on the page and lines up the different parts. You don’t use a block, which makes this useful for short bits of code:\n使用此运算符可以重写前面的示例。特定的格式并不重要，但这非常适合页面并排列不同的部分。你不使用一个块，这使得这对短代码有用：\nput \u0026#39;The number is \u0026#39;, $number %% 2 ?? \u0026#39;even\u0026#39; !! \u0026#39;odd\u0026#39;; An elsif specifies another branch with its own condition, so you have three ways this code might run. Some people think zero is neither odd nor even, and they can add another branch for that:\nelsif指定另一个具有自己条件的分支，因此您可以通过三种方式运行此代码。有些人认为零既不是奇数也不是偶数，他们可以为此添加另一个分支：\nif $number == 0 { put \u0026#39;The number is zero\u0026#39;; } elsif $number %% 2 { put \u0026#39;The number is even\u0026#39;; } else { put \u0026#39;The number is odd\u0026#39;; } This code works, but it has some repeated structure because each branch has a put. A do cleans that up nicely. Here’s another way to write that:\n这段代码有效，但它有一些重复的结构，因为每个分支都有一个put。 A做得很好清理。这是写另一种方式：\nput \u0026#39;The number is \u0026#39;, do if $number == 0 { \u0026#39;zero\u0026#39; } elsif $number %% 2 { \u0026#39;even\u0026#39; } else { \u0026#39;odd\u0026#39; } EXERCISE 2.11Create a program that outputs the numbers from 1 to 100. However, if the number is a multiple of three, output “Fizz” instead of the number. If it’s a multiple of five, output “Buzz”. If it’s a multiple of both three and five, output “FizzBuzz”.\n练习2.11创建一个从1到100输出数字的程序。但是，如果数字是3的倍数，则输出“Fizz”而不是数字。如果它是五的倍数，则输出“Buzz”。如果它是三个和五个的倍数，则输出“FizzBuzz”。\nPutting It All Together With a few more things you can now write the number-guessing program. The .rand method returns a fractional number between 0 and the integer (exclusively):\n通过更多的东西，你现在可以编写数字猜测程序。 .rand方法返回0和整数（仅限）之间的小数：\n% raku \u0026gt; 100.rand 62.549491627582 The .Int method coerces that to a whole number. It discards the fractional portion; it does not round the number. Put that together with .rand and you get a whole number between 0 and the starting number:\n.Int方法强制转换为整数。它丢弃了小数部分;它没有数字。将它与.rand一起放在0和起始编号之间的整数：\n% raku \u0026gt; 100.rand.Int 23 Put that together in a complete program. Choose the number, then test what side of another number (sometimes called the “pivot”) it’s on:\n把它放在一个完整的程序中。选择数字，然后测试它所在的另一个数字（有时称为“数据透视”）的哪一侧：\nmy $number = 100.rand.Int; if $number \u0026gt; 50 { put \u0026#39;The number is greater than 50\u0026#39;; } elsif $number \u0026lt; 50 { put \u0026#39;The number is less than 50\u0026#39;; } else { put \u0026#39;The number is 50\u0026#39;; } Run that several times and you should get different output eventually:\n运行几次，你最终会得到不同的输出：\n% raku random.p6 The number is less than 50 % raku random.p6 The number is less than 50 % raku random.p6 The number is greater than 50 EXERCISE 2.12Wrap the pivot program in a MAIN subroutine so you can specify the highest possible number as a command-line argument. Default to 100 if you don’t supply an argument. Adjust that so the program can take another command-line argument to specify the pivot number.\nIn the previous exercise you set the default for the second argument using a hard-coded literal integer:\n练习2.12在MAIN子例程中包含pivot程序，以便您可以将最高可能的数字指定为命令行参数。如果您不提供参数，则默认为100。调整它，以便程序可以使用另一个命令行参数来指定数据透视表编号。\n在上一个练习中，您使用硬编码的文字整数设置第二个参数的默认值：\nsub MAIN ( $highest = 100, $pivot = 50 ) { ... } If you run the program with one command-line argument that is less than 50 (or whatever you chose as your default) the output will always be the same:\n如果使用一个小于50的命令行参数（或者您选择作为默认值的任何内容）运行程序，则输出将始终相同：\n% raku number-program.p6 37 The number is less than 50 You can use parameters you’ve already specified to compute defaults for other parameters. Use $highest to compute $pivot:\n您可以使用已指定的参数来计算其他参数的默认值。使用$ highest来计算$ pivot：\nsub MAIN ( $highest = 100, $pivot = $highest / 2 ) { EXERCISE 2.13Modify your answer to the previous exercise so you can set the pivot to half the highest value. Default to 50 if you don’t specify two arguments.\nNow you have everything you need to write your number-guessing program. Your program chooses a secret number that you then have to figure out. This early in the book that seems like a complicated program, but you’ve seen just enough to make it:\n练习2.13修改上一练习的答案，以便将枢轴设置为最高值的一半。如果未指定两个参数，则默认为50。\n现在，您拥有编写数字猜测程序所需的一切。您的程序会选择一个您必须弄清楚的密码。在本书的早期，这看起来像一个复杂的程序，但你已经看到了足够的成就：\nChoose a secret number (.rand). Loop repeatedly until the person guesses the number (next and last). Get the person’s guess (prompt). Give the person a hint about their guess. Tell them if they are too high or low (comparators, if). •选择一个密码（•。和•）。\n反复循环，直到该人猜到该号码（下一个和最后一个）。\n得到这个人的猜测（提示）。\n给这个人一个关于他们猜测的暗示。告诉他们是否太高或太低（比较，如果）。\nEXERCISE 2.14Implement the number-guessing program. If you supply a command-line argument use that as the maximum number; otherwise use 100. It may help to immediately output the secret number as you get your program working.\n练习2.14实施数字猜测程序。如果提供命令行参数，请将其用作最大数字;否则使用100.当您的程序正常工作时，可能有助于立即输出密码。\nSummary You made it! First chapters are typically the toughest because you’re getting your bearings. You’ve made at least one meaty program that incorporates several things that you haven’t seen in depth yet. You can take input from the command line or from a prompt. You can compare values and follow different code branches. Not bad for a first chapter.\n你做到了！第一章通常是最难的，因为你得到了你的支持。你已经制作了至少一个丰富的程序，其中包含了一些你还没有深入见过的东西。您可以从命令行或提示中获取输入。您可以比较值并遵循不同的代码分支。对于第一章来说还不错。\n"},"name":"第二章. 猜数字","published":"2018-09-02T00:10:09+08:00","summary":"声明 本章翻译仅用于 Raku 学习和研究, 请支持电子版或纸质版。\n第二章. 猜数字 You’re about to be thrown in the deep end. There are some basic things you need to know to write useful programs, and you’ll meet a lot of them in this chapter so you can write a number-guessing program by the end. It’s quite a bit to take in all at once but it should make the rest of the chapters more interesting.","type":"entry","url":"http://localhost:1313/raku/2018-09-02-%E7%AC%AC%E4%BA%8C%E7%AB%A0.-%E7%8C%9C%E6%95%B0%E5%AD%97/"},{"content":{"html":"\u003cp\u003e在本系列的\u003ca href=\"https://opensource.com/article/18/7/migrating-perl-5-perl-6\"\u003e第一篇\u003c/a\u003e文章中，将 Perl 5 与 Raku 进行了比较，我们研究了将代码迁移到 Raku 时可能遇到的一些问题。在\u003ca href=\"https://opensource.com/article/18/7/garbage-collection-perl-6\"\u003e第二篇\u003c/a\u003e文章中，我们研究了垃圾收集在 Raku 中的工作原理。第三篇文章，我们将重点介绍 Perl 5 的引用以及如何在 Raku 中处理它们，并介绍绑定和容器的概念。\u003c/p\u003e\n\u003ch2 id=\"引用\"\u003e引用\u003c/h2\u003e\n\u003cp\u003eRaku 中没有引用，这对许多习惯于 Perl 5 语义的人来说都是令人惊讶的。但不要担心：因为没有引用，所以您不必担心是否应该解引用某些内容。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-perl5\" data-lang=\"perl5\"\u003e# Perl 5\nmy $foo = \\@bar;   # must add reference \\ to make $foo a reference to @bar\nsay @bar[1];       # no dereference needed\nsay $foo-\u0026gt;[1];     # must add dereference -\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@bar\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# $foo now contains @bar\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@bar\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# no dereference needed, note: sigil does not change\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# no dereference needed either\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有人可能会说 Raku 中的所有东西都是引用。来自 Perl 5（其中一个对象是一个受祝福的引用），这将是关于 Raku 的逻辑结论，其中所有的东西都是对象（或者可以被认为是一个对象）。但这并不能完全符合 Raku 中的情况，并且会妨碍你理解 Raku 的工作原理。谨防\u003ca href=\"https://en.wikipedia.org/wiki/False_friend\"\u003e虚假的朋友\u003c/a\u003e！\u003c/p\u003e\n\u003ch2 id=\"绑定\"\u003e绑定\u003c/h2\u003e\n\u003cp\u003e在我们完成赋值之前，了解 Raku 中绑定的概念很重要。您可以使用 \u003ccode\u003e:=\u003c/code\u003e 运算符将某些东西显式绑定到其他东西上。定义词法变量时，可以将值绑定到它：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# note: := instead of =\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e简单地说，这会在词法填充（lexpad）中创建一个名为 \u0026ldquo;\u003cstrong\u003e$foo\u003c/strong\u003e\u0026rdquo; 的键（您可以将其视为编译时哈希，其中包含有关该词法范围内可见事物的信息）并使其 42 为字面值。因为这是一个文字常量，所以你无法改变它。试图这样做会导致异常。所以不要那样做！\u003c/p\u003e\n\u003cp\u003e在许多情况下，这种绑定操作在引擎盖下使用，例如在迭代时：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# can also be written as ^10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# [0 1 2 3 4 5 6 7 8 9]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# $_ is bound to each array element and incremented\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# [1 2 3 4 5 6 7 8 9 10]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果您尝试迭代常量列表，则 \u003ccode\u003e**$_**\u003c/code\u003e 绑定到字面值，您无法递增：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# error: requires mutable arguments\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"赋值\"\u003e赋值\u003c/h2\u003e\n\u003cp\u003e如果你在 Perl 5 和 Raku 中比较“创建一个词法变量并赋值给它”，它在外面看起来是一样的：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# both Perl 5 and Raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Raku 中，这也会在 lexpad 中创建一个名为 “\u003cstrong\u003e$bar\u003c/strong\u003e” 的键。但是不是直接将值绑定到该 lexpad 条目，而是为您创建一个容器（\u003cstrong\u003eScalar\u003c/strong\u003e对象），并将其绑定到“\u003cstrong\u003e$bar\u003c/strong\u003e”的 lexpad 条目。然后，56 被存储为该容器中的值。在伪代码中，您可以将其视为：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"kt\"\u003eScalar\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s\"\u003evalue\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，\u003cstrong\u003eScalar\u003c/strong\u003e 对象已绑定，未分配。 Perl 5 中最接近它的是绑定标量。但当然“= \u003cstrong\u003e56\u003c/strong\u003e”的类型要少得多！\u003c/p\u003e\n\u003cp\u003e诸如 \u003cstrong\u003eArray\u003c/strong\u003e 和 \u003cstrong\u003eHash\u003c/strong\u003e 之类的数据结构也会自动将值放在绑定到结构的容器中。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# empty Array\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# bind a Scalar container to 6th element and put 42 in it\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"容器\"\u003e容器\u003c/h2\u003e\n\u003cp\u003e对于 Raku 中的大多数操作，\u003cstrong\u003eScalar\u003c/strong\u003e 容器对象是不可见的，因此大多数情况下您不必考虑它。例如，每当您使用变量作为参数调用子例程（或方法）时，它将绑定到容器中的值。而且因为您无法分配值，您会得到：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efrobnicate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$this\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e666\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003efrobnicate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# Cannot assign to a readonly variable or a value\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果要允许分配外部值，可以将 \u003cstrong\u003eis rw\u003c/strong\u003e trait 添加到签名中的变量。这会将签名中的变量绑定到指定变量的容器，从而允许赋值：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eoknicate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$this\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003erw\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$this\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e666\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eoknicate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# no problem\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$foo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"proxy\"\u003eProxy\u003c/h2\u003e\n\u003cp\u003e从概念上讲，Raku 中的 \u003cstrong\u003eScalar\u003c/strong\u003e 对象有一个 \u003cstrong\u003eFETCH\u003c/strong\u003e 方法（用于生成对象中的值）和一个 \u003cstrong\u003eSTORE\u003c/strong\u003e 方法（用于更改对象中的值），就像 Perl 5 中的绑定标量一样。\u003c/p\u003e\n\u003cp\u003e假设您稍后将值 \u003cstrong\u003e768\u003c/strong\u003e 分配给 \u003cstrong\u003e$bar\u003c/strong\u003e 变量：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e768\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e发生的事情在概念上相当于：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eSTORE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e768\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e假设您要在 \u003cstrong\u003e$bar\u003c/strong\u003e 中的值中添加 \u003cstrong\u003e20\u003c/strong\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e概念上发生的是：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eSTORE\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$bar\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eFETCH\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e20\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果要在容器上指定自己的 \u003cstrong\u003eFETCH\u003c/strong\u003e 和 \u003cstrong\u003eSTORE\u003c/strong\u003e 方法，可以通过绑定到 \u003ca href=\"https://docs.raku.org/type/Proxy\"\u003eProxy\u003c/a\u003e 对象来实现。例如，要创建一个始终报告分配给它的值的两倍的变量：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$double\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"nb\"\u003edo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# $double now a Proxy, rather than a Scalar container\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$value\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"kt\"\u003eProxy\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"s\"\u003eFETCH\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e     \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$value\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$value\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"s\"\u003eSTORE\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$new\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$value\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$new\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，您需要一个额外的变量来保存存储在这样一个容器中的值。\u003c/p\u003e\n\u003ch2 id=\"约束和默认值\"\u003e约束和默认值\u003c/h2\u003e\n\u003cp\u003e除了值之外，\u003ca href=\"https://docs.raku.org/type/Scalar\"\u003eScalar\u003c/a\u003e 还包含额外信息，例如类型约束和默认值。采用这个定义：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$baz\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003edefault\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e666\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它创建一个名为 “\u003cstrong\u003e$baz\u003c/strong\u003e” 的标量绑定到 lexpad，将该容器中的值约束为使用 \u003cstrong\u003eInt\u003c/strong\u003e 成功智能匹配的类型，将容器的默认值设置为 \u003cstrong\u003e42\u003c/strong\u003e，并将值 \u003cstrong\u003e666\u003c/strong\u003e 放入容器中。\u003c/p\u003e\n\u003cp\u003e由于类型约束，为该变量分配字符串将失败：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$baz\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Type check failed in assignment to $baz; expected Int but got Str (\u0026#34;foo\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果在定义变量时未给出类型约束，则将假定为 \u003cstrong\u003eAny\u003c/strong\u003e 类型。如果未指定默认值，则将假定类型约束。\u003c/p\u003e\n\u003cp\u003e将 \u003cstrong\u003eNil\u003c/strong\u003e（相当于 Perl 5 的 \u003cstrong\u003eundef\u003c/strong\u003e 的 Raku）分配给该变量会将其重置为默认值：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$baz\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 666\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$baz\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eNil\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$baz\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"总结\"\u003e总结\u003c/h2\u003e\n\u003cp\u003ePerl 5 具有值和值的引用。 Raku 没有引用，但它有值和容器。 Raku 中有两种类型的容器：\u003ca href=\"https://docs.raku.org/type/Proxy\"\u003eProxy\u003c/a\u003e（很像 Perl 5 中的绑定标量）和 \u003ca href=\"https://docs.raku.org/type/Scalar\"\u003eScalar\u003c/a\u003e。简单地说，变量以及 \u003ca href=\"https://docs.raku.org/type/List\"\u003eList\u003c/a\u003e，\u003ca href=\"https://docs.raku.org/type/Array\"\u003eArray\u003c/a\u003e 或 \u003ca href=\"https://docs.raku.org/type/Hash\"\u003eHash\u003c/a\u003e 的元素是值（如果它已绑定）或容器（如果已分配）。无论何时调用子例程（或方法），给定的参数都被解除容器化并绑定到子例程的参数（除非另有说明）。容器还保留类型约束和默认值等信息。将Nil分配给变量会将其返回到其默认值，如果未指定类型约束，则为Any。\u003c/p\u003e\n\u003ch2 id=\"原文连接\"\u003e原文连接\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://opensource.com/article/18/8/containers-perl-6\"\u003ehttps://opensource.com/article/18/8/containers-perl-6\u003c/a\u003e\u003c/p\u003e\n","text":"在本系列的第一篇文章中，将 Perl 5 与 Raku 进行了比较，我们研究了将代码迁移到 Raku 时可能遇到的一些问题。在第二篇文章中，我们研究了垃圾收集在 Raku 中的工作原理。第三篇文章，我们将重点介绍 Perl 5 的引用以及如何在 Raku 中处理它们，并介绍绑定和容器的概念。\n引用 Raku 中没有引用，这对许多习惯于 Perl 5 语义的人来说都是令人惊讶的。但不要担心：因为没有引用，所以您不必担心是否应该解引用某些内容。\n# Perl 5 my $foo = \\@bar; # must add reference \\ to make $foo a reference to @bar say @bar[1]; # no dereference needed say $foo-\u0026gt;[1]; # must add dereference -\u0026gt; # Raku my $foo = @bar; # $foo now contains @bar say @bar[1]; # no dereference needed, note: sigil does not change say $foo[1]; # no dereference needed either 有人可能会说 Raku 中的所有东西都是引用。来自 Perl 5（其中一个对象是一个受祝福的引用），这将是关于 Raku 的逻辑结论，其中所有的东西都是对象（或者可以被认为是一个对象）。但这并不能完全符合 Raku 中的情况，并且会妨碍你理解 Raku 的工作原理。谨防虚假的朋友！\n绑定 在我们完成赋值之前，了解 Raku 中绑定的概念很重要。您可以使用 := 运算符将某些东西显式绑定到其他东西上。定义词法变量时，可以将值绑定到它：\nmy $foo := 42; # note: := instead of = 简单地说，这会在词法填充（lexpad）中创建一个名为 \u0026ldquo;$foo\u0026rdquo; 的键（您可以将其视为编译时哈希，其中包含有关该词法范围内可见事物的信息）并使其 42 为字面值。因为这是一个文字常量，所以你无法改变它。试图这样做会导致异常。所以不要那样做！\n在许多情况下，这种绑定操作在引擎盖下使用，例如在迭代时：\nmy @a = 0..9; # can also be written as ^10 say @a; # [0 1 2 3 4 5 6 7 8 9] for @a { $_++ } # $_ is bound to each array element and incremented say @a; # [1 2 3 4 5 6 7 8 9 10] 如果您尝试迭代常量列表，则 **$_** 绑定到字面值，您无法递增：\nfor 0..9 { $_++ } # error: requires mutable arguments 赋值 如果你在 Perl 5 和 Raku 中比较“创建一个词法变量并赋值给它”，它在外面看起来是一样的：\nmy $bar = 56; # both Perl 5 and Raku 在 Raku 中，这也会在 lexpad 中创建一个名为 “$bar” 的键。但是不是直接将值绑定到该 lexpad 条目，而是为您创建一个容器（Scalar对象），并将其绑定到“$bar”的 lexpad 条目。然后，56 被存储为该容器中的值。在伪代码中，您可以将其视为：\nmy $bar := Scalar.new( value =\u0026gt; 56 ); 请注意，Scalar 对象已绑定，未分配。 Perl 5 中最接近它的是绑定标量。但当然“= 56”的类型要少得多！\n诸如 Array 和 Hash 之类的数据结构也会自动将值放在绑定到结构的容器中。\nmy @a; # empty Array @a[5] = 42; # bind a Scalar container to 6th element and put 42 in it 容器 对于 Raku 中的大多数操作，Scalar 容器对象是不可见的，因此大多数情况下您不必考虑它。例如，每当您使用变量作为参数调用子例程（或方法）时，它将绑定到容器中的值。而且因为您无法分配值，您会得到：\nsub frobnicate($this) { $this = 42; } my $foo = 666; frobnicate($foo); # Cannot assign to a readonly variable or a value 如果要允许分配外部值，可以将 is rw trait 添加到签名中的变量。这会将签名中的变量绑定到指定变量的容器，从而允许赋值：\nsub oknicate($this is rw) { $this = 42; } my $foo = 666; oknicate($foo); # no problem say $foo; # 42 Proxy 从概念上讲，Raku 中的 Scalar 对象有一个 FETCH 方法（用于生成对象中的值）和一个 STORE 方法（用于更改对象中的值），就像 Perl 5 中的绑定标量一样。\n假设您稍后将值 768 分配给 $bar 变量：\n$bar = 768; 发生的事情在概念上相当于：\n$bar.STORE(768); 假设您要在 $bar 中的值中添加 20：\n$bar = $bar + 20; 概念上发生的是：\n$bar.STORE( $bar.FETCH + 20 ); 如果要在容器上指定自己的 FETCH 和 STORE 方法，可以通过绑定到 Proxy 对象来实现。例如，要创建一个始终报告分配给它的值的两倍的变量：\nmy $double := do { # $double now a Proxy, rather than a Scalar container my $value; Proxy.new( FETCH =\u0026gt; method () { $value + $value }, STORE =\u0026gt; method ($new) { $value = $new } ) } 请注意，您需要一个额外的变量来保存存储在这样一个容器中的值。\n约束和默认值 除了值之外，Scalar 还包含额外信息，例如类型约束和默认值。采用这个定义：\nmy Int $baz is default(42) = 666; 它创建一个名为 “$baz” 的标量绑定到 lexpad，将该容器中的值约束为使用 Int 成功智能匹配的类型，将容器的默认值设置为 42，并将值 666 放入容器中。\n由于类型约束，为该变量分配字符串将失败：\n$baz = \u0026#34;foo\u0026#34;; # Type check failed in assignment to $baz; expected Int but got Str (\u0026#34;foo\u0026#34;) 如果在定义变量时未给出类型约束，则将假定为 Any 类型。如果未指定默认值，则将假定类型约束。\n将 Nil（相当于 Perl 5 的 undef 的 Raku）分配给该变量会将其重置为默认值：\nsay $baz; # 666 $baz = Nil; say $baz; # 42 总结 Perl 5 具有值和值的引用。 Raku 没有引用，但它有值和容器。 Raku 中有两种类型的容器：Proxy（很像 Perl 5 中的绑定标量）和 Scalar。简单地说，变量以及 List，Array 或 Hash 的元素是值（如果它已绑定）或容器（如果已分配）。无论何时调用子例程（或方法），给定的参数都被解除容器化并绑定到子例程的参数（除非另有说明）。容器还保留类型约束和默认值等信息。将Nil分配给变量会将其返回到其默认值，如果未指定类型约束，则为Any。\n原文连接 https://opensource.com/article/18/8/containers-perl-6\n"},"name":"Raku 中的容器","published":"2018-08-29T19:55:09+08:00","summary":"在本系列的第一篇文章中，将 Perl 5 与 Raku 进行了比较，我们研究了将代码迁移到 Raku 时可能遇到的一些问题。在第二篇文章中，我们研究了垃圾收集在 Raku 中的工作原理。第三篇文章，我们将重点介绍 Perl 5 的引用以及如何在 Raku 中处理它们，并介绍绑定和容器的概念。\n引用 Raku 中没有引用，这对许多习惯于 Perl 5 语义的人来说都是令人惊讶的。但不要担心：因为没有引用，所以您不必担心是否应该解引用某些内容。\n# Perl 5 my $foo = \\@bar; # must add reference \\ to make $foo a reference to @bar say @bar[1]; # no dereference needed say $foo-\u0026gt;[1]; # must add dereference -\u0026gt; # Raku my $foo = @bar; # $foo now contains @bar say @bar[1]; # no dereference needed, note: sigil does not change say $foo[1]; # no dereference needed either 有人可能会说 Raku 中的所有东西都是引用。来自 Perl 5（其中一个对象是一个受祝福的引用），这将是关于 Raku 的逻辑结论，其中所有的东西都是对象（或者可以被认为是一个对象）。但这并不能完全符合 Raku 中的情况，并且会妨碍你理解 Raku 的工作原理。谨防虚假的朋友！","type":"entry","url":"http://localhost:1313/raku/2018-08-29-raku%E4%B8%AD%E7%9A%84%E5%AE%B9%E5%99%A8/"},{"content":{"html":"\u003cp\u003e有这样一个场景, 数据发送方将压缩文件读成字节数组后发往 Kafka, 然后第三方的 Kafka Client 从中读取字节数组解压缩, 每条 message 对应一个压缩文件, 每个压缩文件中包含 \u003ccode\u003e_log.txt\u003c/code\u003e 和 \u003ccode\u003e_result.txt\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003eRaku 可以从 Kafka 中读取消息并完成解析。\u003c/p\u003e\n\u003cp\u003e首先安装相关模块: \u003ca href=\"https://github.com/mempko/PKafka\"\u003ePkafka\u003c/a\u003e 用于和 Kafka 交互； \u003ca href=\"https://github.com/frithnanth/raku-Archive-Libarchive\"\u003eArchive::Libarchive\u003c/a\u003e 用于解压缩字节数组。 \u003ca href=\"https://cro.services\"\u003eCro\u003c/a\u003e 用于 HTTP 请求，\u003ca href=\"https://github.com/raku/DBIish\"\u003eDBiish\u003c/a\u003e 用于数据库读写。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003ezef install Pkafka\nzef install Archive::Libarchive\nzef install Cro\nzef install DBIish\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e代码片段如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ePKafka::Consumer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ePKafka::Message\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ePKafka::Producer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eArchive::Libarchive\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eArchive::Libarchive::Constants\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eCro::HTTP::Client\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eJSON::Fast\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eJSON::Path\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eDBIish\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$brokers\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e127.0.0.1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$test\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ePKafka::Consumer\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"s\"\u003etopic\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003edc-diagnostic-report\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003ebrokers\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$brokers\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$test\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emessages\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003ePKafka::Message\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003egot offset: \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eoffset\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003eget-log\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# 获取 log\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003eget-result\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003epayload\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 获取 taskid 和 result\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$json\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003erequest_ads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$log\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# 获取 json\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@values\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"nf\"\u003eparse-json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$json\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# 解析 json, 提取出 sql value\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nf\"\u003ewrite2db\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e                                \u003cspan class=\"c1\"\u003e# 写数据库\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003ePKafka::EOF\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eMessages Consumed \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003etotal-consumed\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"n\"\u003ePKafka::Error\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eError \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$msg\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ewhat\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nv\"\u003e$test\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003estop\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$t1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$test\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003econsume-from-beginning\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003epartition\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eawait\u003c/span\u003e \u003cspan class=\"nv\"\u003e$t1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003e获取 log\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eget-log\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eArchive::Libarchive\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eoperation\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eLibarchiveRead\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003efile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log-content\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eread-file-content\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eArchive::Libarchive::Entry\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e \u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epathname\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eends-with\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e_log.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log-content\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eUTF8-C8\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# encoding: https://stackoverflow.com/questions/50674498/raku-malformed-utf-8-causes-program-crash\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003e获取 taskid 和 result\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eget-result\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eArchive::Libarchive\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003eoperation\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eLibarchiveRead\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003efile\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$payload\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$res-content\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eread-file-content\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eArchive::Libarchive::Entry\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e \u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epathname\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eends-with\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e_result.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log-result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$res-content\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003edecode\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eUTF8-C8\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log-result\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 获取 taskid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log-result\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elines\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# 获取 result 的内容\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003e请求 ADS\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003erequest_ads\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$log\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$result\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$client\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eCro::HTTP::Client\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"s\"\u003econtent-type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e%rds\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s\"\u003etaskId\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$log\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$result\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$resp\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eawait\u003c/span\u003e \u003cspan class=\"nv\"\u003e$client\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehttp://10.0.201.46/bls_ads/diagResultReq\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e%rds\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$json\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eto-json\u003c/span\u003e \u003cspan class=\"nb\"\u003eawait\u003c/span\u003e \u003cspan class=\"nv\"\u003e$resp\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ebody-text\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$json\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003e解析 JSON\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eparse-json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$json\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e     \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003efrom-json\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$json\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$path\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON::Path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$.data.dtcs.ecu[0]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ecuid\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eecuid\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtcnum\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edtcnum\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtc\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003edtc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON::Path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$.taskId\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$vtype\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON::Path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$.vtype\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ecunum\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON::Path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$.ecunum\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$funid\u003c/span\u003e   \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eJSON::Path\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$.funid\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$oj\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$vtype\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$funid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ecuid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtcnum\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003e写数据库\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003ewrite2db\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dbh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eDBIish\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003econnect\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003emysql\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003edatabase\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ewmdtc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ehost\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e127.0.0.1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003euser\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eroot\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003epassword\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e000608\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eport\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e6606\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eRaiseError\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$vtype\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$funid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ecuid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtcnum\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtc\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@values\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$sth\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dbh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eprepare\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003eq\u003c/span\u003e\u003cspan class=\"sa\"\u003e:to\u003c/span\u003e\u003cspan class=\"p\"\u003e/STATEMENT/)\u003c/span\u003e\u003cspan class=\"s\"\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        insert into wm_ads_result (taskid, vtype, funid, ecuid, dtcnum, dtc)\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        values (?,?,?,?,?,?) \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        ON DUPLICATE KEY \n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e        UPDATE vtype=?, funid=?, ecuid=?, dtcnum=?, dtc=?\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003e    \u003c/span\u003e\u003cspan class=\"p\"\u003eSTATEMENT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$sth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003eexecute\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$taskid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$vtype\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$funid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ecuid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtcnum\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtc\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$vtype\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$funid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ecuid\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtcnum\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dtc\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$sth\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003efinish\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nv\"\u003e$dbh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edispose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中遇到的困难是如何在不将字节数组保存到本地磁盘的情况下，在内存中完成压缩包中各文件内容的读取。\u003c/p\u003e\n","text":"有这样一个场景, 数据发送方将压缩文件读成字节数组后发往 Kafka, 然后第三方的 Kafka Client 从中读取字节数组解压缩, 每条 message 对应一个压缩文件, 每个压缩文件中包含 _log.txt 和 _result.txt。\nRaku 可以从 Kafka 中读取消息并完成解析。\n首先安装相关模块: Pkafka 用于和 Kafka 交互； Archive::Libarchive 用于解压缩字节数组。 Cro 用于 HTTP 请求，DBiish 用于数据库读写。\nzef install Pkafka zef install Archive::Libarchive zef install Cro zef install DBIish 代码片段如下:\nuse PKafka::Consumer; use PKafka::Message; use PKafka::Producer; use Archive::Libarchive; use Archive::Libarchive::Constants; use Cro::HTTP::Client; use JSON::Fast; use JSON::Path; use DBIish; sub MAIN () { my $brokers = \u0026#34;127.0.0.1\u0026#34;; my $test = PKafka::Consumer.new( topic=\u0026gt;\u0026#34;dc-diagnostic-report\u0026#34;, brokers=\u0026gt;$brokers); $test.messages.tap(-\u0026gt; $msg { given $msg { when PKafka::Message { say \u0026#34;got offset: {$msg.offset}\u0026#34;; my $log = get-log($msg.payload); # 获取 log my ($taskid, $result) = get-result($msg.payload); # 获取 taskid 和 result my $json = request_ads($taskid,$log, $result); # 获取 json my @values = parse-json($json); # 解析 json, 提取出 sql value write2db(@values); # 写数据库 } when PKafka::EOF { say \u0026#34;Messages Consumed { $msg.total-consumed}\u0026#34;; } when PKafka::Error { say \u0026#34;Error {$msg.what}\u0026#34;; $test.stop; } } }); my $t1 = $test.consume-from-beginning(partition=\u0026gt;0); await $t1; } #| 获取 log sub get-log($payload) { my $a = Archive::Libarchive.new: operation =\u0026gt; LibarchiveRead, file =\u0026gt; $payload; my $log-content = $a.read-file-content(sub (Archive::Libarchive::Entry $e --\u0026gt; Bool) { $e.pathname.ends-with(\u0026#39;_log.txt\u0026#39;) }); my $log = $log-content.decode(\u0026#39;UTF8-C8\u0026#39;); # encoding: https://stackoverflow.com/questions/50674498/raku-malformed-utf-8-causes-program-crash $a.close; return $log; } #| 获取 taskid 和 result sub get-result($payload) { my $a = Archive::Libarchive.new: operation =\u0026gt; LibarchiveRead, file =\u0026gt; $payload; my $res-content = $a.read-file-content(sub (Archive::Libarchive::Entry $e --\u0026gt; Bool) { $e.pathname.ends-with(\u0026#39;_result.txt\u0026#39;) }); my $log-result = $res-content.decode(\u0026#39;UTF8-C8\u0026#39;); my $taskid = $log-result.lines[0].split(\u0026#34;:\u0026#34;)[1]; # 获取 taskid my $result = $log-result.lines[1].split(\u0026#34;:\u0026#34;)[1]; # 获取 result 的内容 $a.close; return ($taskid, $result); } #| 请求 ADS sub request_ads($taskid, $log, $result) { my $client = Cro::HTTP::Client.new: content-type =\u0026gt; \u0026#39;application/json\u0026#39;; my %rds = taskId =\u0026gt; $taskid, :$log, :$result; my $resp = await $client.post: \u0026#39;http://10.0.201.46/bls_ads/diagResultReq\u0026#39;, body =\u0026gt; %rds; my $json = to-json await $resp.body-text; return $json; } #| 解析 JSON sub parse-json($json) { my $oj = from-json($json); my $path = JSON::Path.new(\u0026#39;$.data.dtcs.ecu[0]\u0026#39;); my $ecuid = $path.values($oj)[0].{\u0026#39;ecuid\u0026#39;}; my $dtcnum = $path.values($oj)[0].{\u0026#39;dtcnum\u0026#39;}; my $dtc = $path.values($oj)[0].{\u0026#39;dtc\u0026#39;}; my $taskid = JSON::Path.new(\u0026#39;$.taskId\u0026#39;).values($oj)[0]; my $vtype = JSON::Path.new(\u0026#39;$.vtype\u0026#39;).values($oj)[0]; my $ecunum = JSON::Path.new(\u0026#39;$.ecunum\u0026#39;).values($oj)[0]; my $funid = JSON::Path.new(\u0026#39;$.funid\u0026#39;).values($oj)[0]; return ($taskid, $vtype, $funid, $ecuid, $dtcnum, $dtc); } #| 写数据库 sub write2db(@values) { my $dbh = DBIish.connect(\u0026#34;mysql\u0026#34;, :database\u0026lt;wmdtc\u0026gt;, :host\u0026lt;127.0.0.1\u0026gt;, :user\u0026lt;root\u0026gt;, :password\u0026lt;000608\u0026gt;, :port\u0026lt;6606\u0026gt;, :RaiseError); my ($taskid, $vtype, $funid, $ecuid, $dtcnum, $dtc) = @values; my $sth = $dbh.prepare(q:to/STATEMENT/); insert into wm_ads_result (taskid, vtype, funid, ecuid, dtcnum, dtc) values (?,?,?,?,?,?) ON DUPLICATE KEY UPDATE vtype=?, funid=?, ecuid=?, dtcnum=?, dtc=? STATEMENT $sth.execute($taskid, $vtype, $funid, $ecuid, $dtcnum, $dtc,$vtype, $funid, $ecuid, $dtcnum, $dtc); $sth.finish; $dbh.dispose; } 其中遇到的困难是如何在不将字节数组保存到本地磁盘的情况下，在内存中完成压缩包中各文件内容的读取。\n"},"name":"使用 Raku 连接 Kafka","published":"2018-07-20T20:14:28+08:00","summary":"有这样一个场景, 数据发送方将压缩文件读成字节数组后发往 Kafka, 然后第三方的 Kafka Client 从中读取字节数组解压缩, 每条 message 对应一个压缩文件, 每个压缩文件中包含 _log.txt 和 _result.txt。\nRaku 可以从 Kafka 中读取消息并完成解析。\n首先安装相关模块: Pkafka 用于和 Kafka 交互； Archive::Libarchive 用于解压缩字节数组。 Cro 用于 HTTP 请求，DBiish 用于数据库读写。\nzef install Pkafka zef install Archive::Libarchive zef install Cro zef install DBIish 代码片段如下:\nuse PKafka::Consumer; use PKafka::Message; use PKafka::Producer; use Archive::Libarchive; use Archive::Libarchive::Constants; use Cro::HTTP::Client; use JSON::Fast; use JSON::Path; use DBIish; sub MAIN () { my $brokers = \u0026#34;127.0.0.1\u0026#34;; my $test = PKafka::Consumer.","type":"entry","url":"http://localhost:1313/raku/2018-07-20-%E4%BD%BF%E7%94%A8raku%E8%BF%9E%E6%8E%A5kafka/"},{"content":{"html":"\u003ch2 id=\"crohttptest\"\u003eCro::HTTP::Test\u003c/h2\u003e\n\u003cp\u003e原则上可以通过使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-server\"\u003eCro::HTTP::Server\u003c/a\u003e托管应用程序, 使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-client\"\u003eCro::HTTP::Client\u003c/a\u003e向其发出请求, 并使用标准 \u003ccode\u003eTest\u003c/code\u003e 库检查结果来编写 Cro HTTP 服务的测试。该库使编写此类测试更容易, 并通过以下方式更快地执行它们：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e为发出测试请求和检查结果提供更方便的 API\u003c/li\u003e\n\u003cli\u003e跳过网络并将 \u003ccode\u003eCro::TCP\u003c/code\u003e 对象从客户端管道传递到服务器管道, 反之亦然\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"基本示例\"\u003e基本示例\u003c/h2\u003e\n\u003cp\u003e给定模块 \u003ccode\u003eMyService::Routes\u003c/code\u003e, 如下所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eroute\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eget\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003econtent\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etext/plain\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eNothing to see here\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003erequest-body\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eapplication-json\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nb\"\u003econtent\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们可以像这样编写测试：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eCro::HTTP::Test\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eMyService::Routes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-service\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nb\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003econtent-type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etext/plain\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003enothing\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/add\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e400\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nb\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e405\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003edone-testing\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"设置要测试的服务\"\u003e设置要测试的服务\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003etest-service\u003c/code\u003e 函数有两个候选者。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etest-service\u003c/code\u003e(\u003ccode\u003eCro::Transform, \u0026amp;tests, :$fake-auth, :$http)\u003c/code\u003e 候选者针对提供的 HTTP 应用程序运行测试, 该应用程序可以是任何使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-request\"\u003eCro::HTTP::Request\u003c/a\u003e 的 \u003ccode\u003eCro::Transform\u003c/code\u003e 并生成 \u003ca href=\"https://cro.services/docs/reference/cro-http-response\"\u003eCro::HTTP::Response\u003c/a\u003e。使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-router\"\u003eCro::HTTP::Router\u003c/a\u003e 编写的应用程序执行此操作。也可以使用 \u003ccode\u003eCro.compose\u003c/code\u003e 将（可能模拟的）中间件放在适当的位置。可选的 \u003ccode\u003e:$fake-auth\u003c/code\u003e 参数, 如果传递, 将添加一个中间件, 将请求的 \u003ccode\u003eauth\u003c/code\u003e 设置为指定的对象。这对于模拟用户或会话以及测试授权非常有用。 http 参数指定运行测试的 HTTP 版本。由于我们在测试中控制客户端和服务器端, 因此不允许设置 \u003ccode\u003e:http\u0026lt;1.1 2\u0026gt;\u003c/code\u003e。默认值为 \u003ccode\u003e:http\u0026lt;2\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etest-service($uri, \u0026amp;tests)\u003c/code\u003e 候选者针对指定的基 URI 运行测试, 通过 \u003ca href=\"https://cro.services/docs/reference/cro-http-client\"\u003eCro::HTTP::Client\u003c/a\u003e 连接到它。这使得可以使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-test\"\u003eCro::HTTP::Test\u003c/a\u003e 为使用除 Cro 之外的其他东西构建的服务编写测试。\u003c/p\u003e\n\u003cp\u003e所有其他命名参数都作为 \u003ca href=\"https://cro.services/docs/reference/cro-http-client\"\u003eCro::HTTP::Client\u003c/a\u003e 构造函数参数传递。\u003c/p\u003e\n\u003ch2 id=\"写测试\"\u003e写测试\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003etest\u003c/code\u003e 函数用于传递给 \u003ccode\u003etest-service\u003c/code\u003e 的块内部。它期望传递一个表示测试请求的位置参数，并命名参数，指示响应的预期属性。\u003c/p\u003e\n\u003cp\u003e通过调用 \u003ccode\u003eget\u003c/code\u003e，\u003ccode\u003eput\u003c/code\u003e，\u003ccode\u003epost\u003c/code\u003e，\u003ccode\u003edelete\u003c/code\u003e，\u003ccode\u003ehead\u003c/code\u003e 或 \u003ccode\u003epatch\u003c/code\u003e 之一来指定请求。还有其他 HTTP 的 \u003ccode\u003erequest($method, ...)\u003c/code\u003e（事实上，\u003ccode\u003eget\u003c/code\u003e 只会调用 \u003ccode\u003erequest('GET', ...)\u003c/code\u003e）。这些函数接受提供相对 URI 的可选位置参数，如果提供该 URI 将附加到当前有效基 URI。 \u003ccode\u003e:$json\u003c/code\u003e 命名参数被特殊处理，扩展为 \u003ccode\u003e{content-type =\u0026gt;'application/json', body =\u0026gt; $json}\u003c/code\u003e。所有其他命名参数将传递给 Cro::HTTP::Client 的 request 方法，从而使所有 HTTP 客户端的功能都可用。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etest\u003c/code\u003e 函数的命名参数构成检查。它们主要遵循 \u003ca href=\"https://cro.services/docs/reference/cro-http-response\"\u003eCro::HTTP::Response\u003c/a\u003e 对象上的方法名称。可用的检查如下。\u003c/p\u003e\n\u003ch3 id=\"status\"\u003estatus\u003c/h3\u003e\n\u003cp\u003eSmartmatches 响应检查的响应的 \u003ccode\u003estatus\u003c/code\u003e 属性。虽然整数（例如 \u003ccode\u003estatus =\u0026gt; 200\u003c/code\u003e）将是最常见的，但也可能是诸如 \u003ccode\u003estatus =\u0026gt; * \u0026lt;400\u003c/code\u003e 之类的事情（例如，不是错误）。\u003c/p\u003e\n\u003ch3 id=\"content-type\"\u003econtent-type\u003c/h3\u003e\n\u003cp\u003e检查内容类型是否相同。如果传递了一个字符串，它会将其解析为媒体类型，并检查类型和子类型是否与响应的类型匹配。如果字符串中有任何额外参数（例如字符集），则还将在接收的媒体类型中检查这些参数。如果接收的媒体类型具有未提及的额外参数，则将忽略这些参数。因此，检查content-type =\u0026gt;\u0026lsquo;text / plain\u0026rsquo;匹配text / plain;响应中的charset = utf8。\u003c/p\u003e\n\u003cp\u003e对于更细粒度的控制，传递一个块，它将传递一个Cro :: MediaType的实例，并期望返回一些测试通过的truthy。\u003c/p\u003e\n\u003ch3 id=\"header-或-headers\"\u003eheader 或 headers\u003c/h3\u003e\n\u003cp\u003e将哈希映射头名称转换为头值，或者执行相同的Pair列表。如果标题存在且标题的值与值相匹配，则测试通过。仅在关注标题存在时使用*，但不希望检查其值。响应中的所有其他标头都将被忽略（即，额外的标头被认为是正常的）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eheaders\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eStrict-Transport-Security\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eCache-Control\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003epublic\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了进一步控制，传递一个块，它将接收一个Pair列表，每个块代表一个头。它的返回值应该是测试通过的真相。\u003c/p\u003e\n\u003ch3 id=\"body-text\"\u003ebody-text\u003c/h3\u003e\n\u003cp\u003e获得响应的正文 - 并将其与提供的值进行智能匹配。字符串，正则表达式或代码对象都可能有用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003ebody-text\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e success\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果测试的内容类型且测试失败，则将跳过正文测试。\u003c/p\u003e\n\u003ch3 id=\"body-blob\"\u003ebody-blob\u003c/h3\u003e\n\u003cp\u003e获得响应的body-blob并将其与提供的值进行智能匹配\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003ebody-blob\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebytes\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e128\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果测试的内容类型且测试失败，则将跳过正文测试。\u003c/p\u003e\n\u003ch3 id=\"body\"\u003ebody\u003c/h3\u003e\n\u003cp\u003e获得响应的主体并将其与提供的值进行智能匹配。请注意，body属性根据响应的内容类型决定要生成的内容，从而选择适当的主体解析器。因此，建议将其与内容类型一起使用（将始终在正文之前进行测试，如果失败则跳过正文测试）。\u003c/p\u003e\n\u003ch3 id=\"json\"\u003ejson\u003c/h3\u003e\n\u003cp\u003e对于JSON响应的常见情况，这是一个方便的捷径。它实现了content-type =\u0026gt; {。type eq\u0026rsquo;application\u0026rsquo;\u0026amp;\u0026amp; .subtype-name eq\u0026rsquo;json\u0026rsquo;|| .suffix eq\u0026rsquo;json\u0026rsquo;}（也就是说，它接受application / json或类似application / vnd.foobar + json的东西）。\u003c/p\u003e\n\u003cp\u003e如果传递了代码值，那么将使用反序列化的JSON主体调用代码，并且应该返回一个truthy值以供测试通过。否则，将使用is-deep测试例程来检查收到的JSON的结构是否符合预期。\u003c/p\u003e\n\u003ch3 id=\"many-tests-with-one-uri-set-of-headers-etc\"\u003eMany tests with one URI, set of headers, etc.\u003c/h3\u003e\n\u003cp\u003e重复测试的相同细节可能会很繁琐。例如，通常希望针对相同的URI编写许多测试，每次都将其传递给不同的主体或使用不同的请求方法。测试给定的功能有多种形式。它可以与URI和块一起使用：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/add\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e400\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这种情况下，测试将全部针对附加到当前有效URI的URI执行，该URI在测试服务块中是被测试服务的基URI。如果各个测试用例也具有URI，则也会附加它。可以嵌套测试给定的块，并且每个块都附加其URI段，从而建立新的当前有效URI。\u003c/p\u003e\n\u003cp\u003e也可以将命名参数传递给test-given，这些参数将用作请求参数，传递给Cro :: HTTP :: Client。请注意，为get或request指定的任何命名参数都将覆盖在给定测试中指定的参数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/add\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eheader\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"err\"\u003ePrecision\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e第二种形式不需要相对URI，而只需要选项：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"s\"\u003eheader\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"err\"\u003ePrecision\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"Cro::HTTP::Test 原则上可以通过使用 Cro::HTTP::Server托管应用程序, 使用 Cro::HTTP::Client向其发出请求, 并使用标准 Test 库检查结果来编写 Cro HTTP 服务的测试。该库使编写此类测试更容易, 并通过以下方式更快地执行它们：\n为发出测试请求和检查结果提供更方便的 API 跳过网络并将 Cro::TCP 对象从客户端管道传递到服务器管道, 反之亦然 基本示例 给定模块 MyService::Routes, 如下所示：\nsub routes() is export { route { get -\u0026gt; { content \u0026#39;text/plain\u0026#39;, \u0026#39;Nothing to see here\u0026#39;; } post -\u0026gt; \u0026#39;add\u0026#39; { request-body \u0026#39;application-json\u0026#39; =\u0026gt; -\u0026gt; (:$x!, :$y!) { content \u0026#39;application/json\u0026#39;, { :result($x + $y) }; } } } } 我们可以像这样编写测试：\nuse Cro::HTTP::Test; use MyService::Routes; test-service routes(), { test get(\u0026#39;/\u0026#39;), status =\u0026gt; 200, content-type =\u0026gt; \u0026#39;text/plain\u0026#39;, body =\u0026gt; /nothing/; test-given \u0026#39;/add\u0026#39;, { test post(json =\u0026gt; { :x(37), :y(5) }), status =\u0026gt; 200, json =\u0026gt; { :result(42) }; test post(json =\u0026gt; { :x(37) }), status =\u0026gt; 400; test get(json =\u0026gt; { :x(37) }), status =\u0026gt; 405; } } done-testing; 设置要测试的服务 test-service 函数有两个候选者。\ntest-service(Cro::Transform, \u0026amp;tests, :$fake-auth, :$http) 候选者针对提供的 HTTP 应用程序运行测试, 该应用程序可以是任何使用 Cro::HTTP::Request 的 Cro::Transform 并生成 Cro::HTTP::Response。使用 Cro::HTTP::Router 编写的应用程序执行此操作。也可以使用 Cro.compose 将（可能模拟的）中间件放在适当的位置。可选的 :$fake-auth 参数, 如果传递, 将添加一个中间件, 将请求的 auth 设置为指定的对象。这对于模拟用户或会话以及测试授权非常有用。 http 参数指定运行测试的 HTTP 版本。由于我们在测试中控制客户端和服务器端, 因此不允许设置 :http\u0026lt;1.1 2\u0026gt;。默认值为 :http\u0026lt;2\u0026gt;。\ntest-service($uri, \u0026amp;tests) 候选者针对指定的基 URI 运行测试, 通过 Cro::HTTP::Client 连接到它。这使得可以使用 Cro::HTTP::Test 为使用除 Cro 之外的其他东西构建的服务编写测试。\n所有其他命名参数都作为 Cro::HTTP::Client 构造函数参数传递。\n写测试 test 函数用于传递给 test-service 的块内部。它期望传递一个表示测试请求的位置参数，并命名参数，指示响应的预期属性。\n通过调用 get，put，post，delete，head 或 patch 之一来指定请求。还有其他 HTTP 的 request($method, ...)（事实上，get 只会调用 request('GET', ...)）。这些函数接受提供相对 URI 的可选位置参数，如果提供该 URI 将附加到当前有效基 URI。 :$json 命名参数被特殊处理，扩展为 {content-type =\u0026gt;'application/json', body =\u0026gt; $json}。所有其他命名参数将传递给 Cro::HTTP::Client 的 request 方法，从而使所有 HTTP 客户端的功能都可用。\ntest 函数的命名参数构成检查。它们主要遵循 Cro::HTTP::Response 对象上的方法名称。可用的检查如下。\nstatus Smartmatches 响应检查的响应的 status 属性。虽然整数（例如 status =\u0026gt; 200）将是最常见的，但也可能是诸如 status =\u0026gt; * \u0026lt;400 之类的事情（例如，不是错误）。\ncontent-type 检查内容类型是否相同。如果传递了一个字符串，它会将其解析为媒体类型，并检查类型和子类型是否与响应的类型匹配。如果字符串中有任何额外参数（例如字符集），则还将在接收的媒体类型中检查这些参数。如果接收的媒体类型具有未提及的额外参数，则将忽略这些参数。因此，检查content-type =\u0026gt;\u0026lsquo;text / plain\u0026rsquo;匹配text / plain;响应中的charset = utf8。\n对于更细粒度的控制，传递一个块，它将传递一个Cro :: MediaType的实例，并期望返回一些测试通过的truthy。\nheader 或 headers 将哈希映射头名称转换为头值，或者执行相同的Pair列表。如果标题存在且标题的值与值相匹配，则测试通过。仅在关注标题存在时使用*，但不希望检查其值。响应中的所有其他标头都将被忽略（即，额外的标头被认为是正常的）。\nheaders =\u0026gt; { Strict-Transport-Security =\u0026gt; *, Cache-Control =\u0026gt; /public/ } 为了进一步控制，传递一个块，它将接收一个Pair列表，每个块代表一个头。它的返回值应该是测试通过的真相。\nbody-text 获得响应的正文 - 并将其与提供的值进行智能匹配。字符串，正则表达式或代码对象都可能有用。\nbody-text =\u0026gt; /:i success/ 如果测试的内容类型且测试失败，则将跳过正文测试。\nbody-blob 获得响应的body-blob并将其与提供的值进行智能匹配\nbody-blob =\u0026gt; *.bytes \u0026gt; 128 如果测试的内容类型且测试失败，则将跳过正文测试。\nbody 获得响应的主体并将其与提供的值进行智能匹配。请注意，body属性根据响应的内容类型决定要生成的内容，从而选择适当的主体解析器。因此，建议将其与内容类型一起使用（将始终在正文之前进行测试，如果失败则跳过正文测试）。\njson 对于JSON响应的常见情况，这是一个方便的捷径。它实现了content-type =\u0026gt; {。type eq\u0026rsquo;application\u0026rsquo;\u0026amp;\u0026amp; .subtype-name eq\u0026rsquo;json\u0026rsquo;|| .suffix eq\u0026rsquo;json\u0026rsquo;}（也就是说，它接受application / json或类似application / vnd.foobar + json的东西）。\n如果传递了代码值，那么将使用反序列化的JSON主体调用代码，并且应该返回一个truthy值以供测试通过。否则，将使用is-deep测试例程来检查收到的JSON的结构是否符合预期。\nMany tests with one URI, set of headers, etc. 重复测试的相同细节可能会很繁琐。例如，通常希望针对相同的URI编写许多测试，每次都将其传递给不同的主体或使用不同的请求方法。测试给定的功能有多种形式。它可以与URI和块一起使用：\ntest-given \u0026#39;/add\u0026#39;, { test post(json =\u0026gt; { :x(37), :y(5) }), status =\u0026gt; 200, json =\u0026gt; { :result(42) }; test post(json =\u0026gt; { :x(37) }), status =\u0026gt; 400; } 在这种情况下，测试将全部针对附加到当前有效URI的URI执行，该URI在测试服务块中是被测试服务的基URI。如果各个测试用例也具有URI，则也会附加它。可以嵌套测试给定的块，并且每个块都附加其URI段，从而建立新的当前有效URI。\n也可以将命名参数传递给test-given，这些参数将用作请求参数，传递给Cro :: HTTP :: Client。请注意，为get或request指定的任何命名参数都将覆盖在给定测试中指定的参数。\ntest-given \u0026#39;/add\u0026#39;, header =\u0026gt; { X-Precision =\u0026gt; \u0026#39;15\u0026#39; } { ... } 第二种形式不需要相对URI，而只需要选项：\ntest-given header =\u0026gt; { X-Precision =\u0026gt; \u0026#39;15\u0026#39; } { ... } "},"name":"Cro Http Test","published":"2018-07-14T17:14:59+08:00","summary":"Cro::HTTP::Test 原则上可以通过使用 Cro::HTTP::Server托管应用程序, 使用 Cro::HTTP::Client向其发出请求, 并使用标准 Test 库检查结果来编写 Cro HTTP 服务的测试。该库使编写此类测试更容易, 并通过以下方式更快地执行它们：\n为发出测试请求和检查结果提供更方便的 API 跳过网络并将 Cro::TCP 对象从客户端管道传递到服务器管道, 反之亦然 基本示例 给定模块 MyService::Routes, 如下所示：\nsub routes() is export { route { get -\u0026gt; { content \u0026#39;text/plain\u0026#39;, \u0026#39;Nothing to see here\u0026#39;; } post -\u0026gt; \u0026#39;add\u0026#39; { request-body \u0026#39;application-json\u0026#39; =\u0026gt; -\u0026gt; (:$x!, :$y!) { content \u0026#39;application/json\u0026#39;, { :result($x + $y) }; } } } } 我们可以像这样编写测试：\nuse Cro::HTTP::Test; use MyService::Routes; test-service routes(), { test get(\u0026#39;/\u0026#39;), status =\u0026gt; 200, content-type =\u0026gt; \u0026#39;text/plain\u0026#39;, body =\u0026gt; /nothing/; test-given \u0026#39;/add\u0026#39;, { test post(json =\u0026gt; { :x(37), :y(5) }), status =\u0026gt; 200, json =\u0026gt; { :result(42) }; test post(json =\u0026gt; { :x(37) }), status =\u0026gt; 400; test get(json =\u0026gt; { :x(37) }), status =\u0026gt; 405; } } done-testing; 设置要测试的服务 test-service 函数有两个候选者。","type":"entry","url":"http://localhost:1313/raku/2018-07-14-cro-http-test/"},{"content":{"html":"\u003cp\u003e去年我写了一个\u003ca href=\"https://gfldex.wordpress.com/2017/12/31/expensive-egg-timers/\"\u003e鸡蛋定时器\u003c/a\u003e，它的解析命令行参数类似于 GNU sleep。我对这个解析器的严格形式很满意，如下。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eSeconds\u003c/span\u003e \u003cspan class=\"nv\"\u003e$to-wait\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@timicles\u003c/span\u003e\u003cspan class=\"o\"\u003e»\u003c/span\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ev\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"kt\"\u003eRat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$count\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e$unit\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eSeconds\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e%unit-multipliers\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$unit\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$count\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它只做了几件简单的事情，而且是一件接着一件做。带有动作类的 grammar 就显得矫枉过正了。我不满意用 \u003ccode\u003esplit\u003c/code\u003e 的能力来返回带有零件的针。它肯定不会提高可读性。\u003c/p\u003e\n\u003cp\u003e经过相当多的迭代（并踩到了一个 \u003ca href=\"https://github.com/rakudo/rakudo/issues/1800\"\u003ebug\u003c/a\u003e），我想出了一个使用 \u003ccode\u003eStr.match\u003c/code\u003e 代替的方法。如果我把每个 \u003ccode\u003eMatch\u003c/code\u003e 对象转换成 \u003ccode\u003eHash\u003c/code\u003e，我就可以在一个尖号块的签名中使用\u003ca href=\"https://docs.raku.org/type/Signature#Destructuring_Parameters\"\u003e解构\u003c/a\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"n\"\u003eSeconds\u003c/span\u003e \u003cspan class=\"nv\"\u003e$to-wait\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@timicles\u003c/span\u003e\u003cspan class=\"o\"\u003e»\u003c/span\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003esuffix\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"p\"\u003e/)\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003ehash\u003c/span\u003e\\ \u003cspan class=\"c1\"\u003e# the +-quatifier is a workaround\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"kt\"\u003eRat\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$number\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$suffix\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e%unit-multipliers\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$suffix\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"nv\"\u003e$number\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esum\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我可以不使用位置参数，而是使用命名的参数，这些参数对应于匹配参数中命名正则表达式。\u003c/p\u003e\n\u003cp\u003e即使是在这样一小段代码中，事情也会变得有条不紊。超方法调用摆脱了简单的循环。精心设计的内置类型允许在没有临时变量负载的情况下进行签名解构。这几乎就像某些语言设计者的目标是制造一种最优雅的语言一样。\u003c/p\u003e\n\u003cp\u003eby \u003ca href=\"https://gfldex.wordpress.com/2018/05/10/deconstructing-simple-grammars/\"\u003egfldex\u003c/a\u003e.\u003c/p\u003e\n","text":"去年我写了一个鸡蛋定时器，它的解析命令行参数类似于 GNU sleep。我对这个解析器的严格形式很满意，如下。\nmy Seconds $to-wait = @timicles»\\ .split(/\u0026lt;number\u0026gt;/, :v)\\ .map(-\u0026gt; [$,Rat(Any) $count, Str(Any) $unit] --\u0026gt; Seconds { %unit-multipliers{$unit} * $count })\\ .sum; 它只做了几件简单的事情，而且是一件接着一件做。带有动作类的 grammar 就显得矫枉过正了。我不满意用 split 的能力来返回带有零件的针。它肯定不会提高可读性。\n经过相当多的迭代（并踩到了一个 bug），我想出了一个使用 Str.match 代替的方法。如果我把每个 Match 对象转换成 Hash，我就可以在一个尖号块的签名中使用解构。\nmy Seconds $to-wait = @timicles»\\ .match(/\u0026lt;number\u0026gt; \u0026lt;suffix\u0026gt;+/)».hash\\ # the +-quatifier is a workaround .map(-\u0026gt; % ( Rat(Any) :$number, Str(Any) :$suffix ) { %unit-multipliers{$suffix} * $number })\\ .sum; 我可以不使用位置参数，而是使用命名的参数，这些参数对应于匹配参数中命名正则表达式。\n即使是在这样一小段代码中，事情也会变得有条不紊。超方法调用摆脱了简单的循环。精心设计的内置类型允许在没有临时变量负载的情况下进行签名解构。这几乎就像某些语言设计者的目标是制造一种最优雅的语言一样。\nby gfldex.\n"},"name":"Deconstructing Simple Grammars","published":"2018-05-10T11:27:22+08:00","summary":"去年我写了一个鸡蛋定时器，它的解析命令行参数类似于 GNU sleep。我对这个解析器的严格形式很满意，如下。\nmy Seconds $to-wait = @timicles»\\ .split(/\u0026lt;number\u0026gt;/, :v)\\ .map(-\u0026gt; [$,Rat(Any) $count, Str(Any) $unit] --\u0026gt; Seconds { %unit-multipliers{$unit} * $count })\\ .sum; 它只做了几件简单的事情，而且是一件接着一件做。带有动作类的 grammar 就显得矫枉过正了。我不满意用 split 的能力来返回带有零件的针。它肯定不会提高可读性。\n经过相当多的迭代（并踩到了一个 bug），我想出了一个使用 Str.match 代替的方法。如果我把每个 Match 对象转换成 Hash，我就可以在一个尖号块的签名中使用解构。\nmy Seconds $to-wait = @timicles»\\ .match(/\u0026lt;number\u0026gt; \u0026lt;suffix\u0026gt;+/)».hash\\ # the +-quatifier is a workaround .map(-\u0026gt; % ( Rat(Any) :$number, Str(Any) :$suffix ) { %unit-multipliers{$suffix} * $number })\\ .sum; 我可以不使用位置参数，而是使用命名的参数，这些参数对应于匹配参数中命名正则表达式。\n即使是在这样一小段代码中，事情也会变得有条不紊。超方法调用摆脱了简单的循环。精心设计的内置类型允许在没有临时变量负载的情况下进行签名解构。这几乎就像某些语言设计者的目标是制造一种最优雅的语言一样。\nby gfldex.","type":"entry","url":"http://localhost:1313/raku/2018-05-10-deconstructing-simple-grammars/"},{"content":{"html":"\u003ch1 id=\"raku-中的列表解析\"\u003eRaku 中的列表解析\u003c/h1\u003e\n\u003cp\u003e看一看 Python 中关于列表推导的页面。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eS = {x² : x in {0 ... 9}}\nV = (1, 2, 4, 8, ..., 2¹²)\nM = {x | x in S and x even}\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePython 列表解析:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eS\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eV\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ei\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eM\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003eS\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在原始定义中我没有看到 10 或 13 , Raku 与原始语言最接近的语法是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e² \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\V\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e8\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e¹²\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# almost identical\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\M\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"sr\"\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku 与 Python 最接近的语法是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \\\u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\V\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \\\u003cspan class=\"no\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"no\"\u003ei\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"mi\"\u003e13\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\M\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \\\u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\u003cspan class=\"sr\"\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku 更惯用的语法是:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e»\u003c/span\u003e²\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\V\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e¹²\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\M\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"sr\"\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e具有无限序列的 Raku:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\S\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e²\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\V\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\M\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003eS\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e%%\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"sr\"\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e\n\u003cul\u003e\n\u003cli\u003ePython\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-python\" data-lang=\"python\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;The quick brown fox jumps over the lazy dog\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ewords\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003estuff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[[\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003eupper\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"n\"\u003elower\u003c/span\u003e\u003cspan class=\"p\"\u003e(),\u003c/span\u003e \u003cspan class=\"nb\"\u003elen\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e)]\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"n\"\u003ew\u003c/span\u003e \u003cspan class=\"ow\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003ewords\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003eRaku\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\string\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eThe quick brown fox jumps over the lazy dog\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\words\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ewords\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\stuff\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[[.\u003c/span\u003e\u003cspan class=\"nb\"\u003euc\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elc\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003echars\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003ewords\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这里有一些使用 Set 运算符的其他翻译\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eprimes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"nb\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003erange\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"nb\"\u003enot\u003c/span\u003e \u003cspan class=\"nb\"\u003ein\u003c/span\u003e \u003cspan class=\"n\"\u003enoprimes\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"c1\"\u003e# python\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..^\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e∉\u003c/span\u003e \u003cspan class=\"n\"\u003enoprimes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\prime-set\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e..^\u003c/span\u003e\u003cspan class=\"mi\"\u003e50\u003c/span\u003e \u003cspan class=\"ow\"\u003e(-)\u003c/span\u003e \u003cspan class=\"n\"\u003enoprimes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# a Set object\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e\\primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003eprime-set\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e另外我相当确定 Python 没有在 Supply 上并发地使用它们的方法。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# create a prime supply and act on it in the background\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eSupply\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003einterval\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eact\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;say\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003emain thread still running\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# says \u0026#39;main thread still running\u0026#39; immediately\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# deadlock main thread,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# otherwise the program would terminate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eawait\u003c/span\u003e \u003cspan class=\"kt\"\u003ePromise\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# waits 2 seconds from the .act call, says 2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# waits 1 second , says 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# waits 2 seconds, says 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# waits 2 seconds, says 7\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# waits 4 seconds, says 11\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# and so on until it is terminated\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"Raku 中的列表解析 看一看 Python 中关于列表推导的页面。\nS = {x² : x in {0 ... 9}} V = (1, 2, 4, 8, ..., 2¹²) M = {x | x in S and x even} Python 列表解析:\nS = [x**2 for x in range(10)] V = [2**i for i in range(13)] M = [x for x in S if x % 2 == 0] 在原始定义中我没有看到 10 或 13 , Raku 与原始语言最接近的语法是:\nmy \\S = ($_² for 0 ... 9); my \\V = (1, 2, 4, 8 ... 2¹²); # almost identical my \\M = ($_ if $_ %% 2 for S); Raku 与 Python 最接近的语法是:\nmy \\S = [-\u0026gt; \\x { x**2 } for ^10]; my \\V = [-\u0026gt; \\i { 2**i } for ^13]; my \\M = [-\u0026gt; \\x { x if x % 2 == 0 } for S]; Raku 更惯用的语法是:\nmy \\S = (0..9)»²; my \\V = 1, 2, 4 ... 2¹²; my \\M = S.grep: * %% 2; 具有无限序列的 Raku:\nmy \\S = (0..*).map: *²; my \\V = 1, 2, 4 ... *; my \\M = S.grep: * %% 2; Python string = \u0026#39;The quick brown fox jumps over the lazy dog\u0026#39; words = string.split() stuff = [[w.upper(), w.lower(), len(w)] for w in words] Raku my \\string = \u0026#39;The quick brown fox jumps over the lazy dog\u0026#39;; my \\words = string.words; my \\stuff = [[.uc, .lc, .chars] for words] 这里有一些使用 Set 运算符的其他翻译\nprimes = [x for x in range(2, 50) if x not in noprimes] # python my \\primes = (2..^50).grep: * ∉ noprimes; my \\prime-set = 2..^50 (-) noprimes; # a Set object my \\primes = prime-set.keys.sort; 另外我相当确定 Python 没有在 Supply 上并发地使用它们的方法。\n# create a prime supply and act on it in the background Supply.interval(1).grep(*.is-prime).act: \u0026amp;say; say \u0026#39;main thread still running\u0026#39;; # says \u0026#39;main thread still running\u0026#39; immediately # deadlock main thread, # otherwise the program would terminate await Promise.new; # waits 2 seconds from the .act call, says 2 # waits 1 second , says 3 # waits 2 seconds, says 5 # waits 2 seconds, says 7 # waits 4 seconds, says 11 # and so on until it is terminated "},"name":"Raku 中的列表解析","published":"2018-04-13T00:00:00Z","summary":"Raku 中的列表解析 看一看 Python 中关于列表推导的页面。\nS = {x² : x in {0 ... 9}} V = (1, 2, 4, 8, ..., 2¹²) M = {x | x in S and x even} Python 列表解析:\nS = [x**2 for x in range(10)] V = [2**i for i in range(13)] M = [x for x in S if x % 2 == 0] 在原始定义中我没有看到 10 或 13 , Raku 与原始语言最接近的语法是:\nmy \\S = ($_² for 0 .","type":"entry","url":"http://localhost:1313/raku/2018-04-13-raku%E4%B8%AD%E7%9A%84%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/"},{"content":{"html":"\u003ch1 id=\"在-raku-中设置超时httpsrakuonline2018030369-setting-timeouts-in-perl-6\"\u003e\u003ca href=\"https://raku.online/2018/03/03/69-setting-timeouts-in-perl-6/\"\u003e在 Raku 中设置超时\u003c/a\u003e\u003c/h1\u003e\n\u003cp\u003e在 Perl 5 中，我曾经使用信号设置超时（至少，这是一种简单且可预测的方式）。在 Raku 中，您可以使用 promise。让我们看看如何做到这一点。\u003c/p\u003e\n\u003cp\u003e要模仿长时间运行的任务，请创建一个无限循环，然后打印其状态。开始吧:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e100_000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e只要循环得到控制，它将永远不会退出。我们的任务是在几秒钟内停止程序，因此计时器应在循环之前设置:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003ePromise\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ein\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"nv\"\u003e%%\u003c/span\u003e \u003cspan class=\"mi\"\u003e100_000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这里，\u003ccode\u003ePromise.in\u003c/code\u003e 方法创建一个 promise，在给定秒数后自动 kept。在 promise 的基础上，使用 \u003ccode\u003ethen\u003c/code\u003e，我们添加了另一个 promise，其代码将在超时后运行。这里唯一的语句就是退出，停止主程序。\u003c/p\u003e\n\u003cp\u003e运行该程序以查看它的工作原理：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003etime\u003c/span\u003e \u003cspan class=\"nb\"\u003eraku\u003c/span\u003e \u003cspan class=\"n\"\u003etimeout\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003epl\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e100000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e200000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e300000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e3700000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e3800000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e3900000\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ereal\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"n\"\u003em2\u003c/span\u003e\u003cspan class=\"mf\"\u003e.196\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003euser\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"n\"\u003em2\u003c/span\u003e\u003cspan class=\"mf\"\u003e.120\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003esys\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"n\"\u003em0\u003c/span\u003e\u003cspan class=\"mf\"\u003e.068\u003c/span\u003e\u003cspan class=\"n\"\u003es\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该程序在我的计算机上计数达四百万，并在两秒内退出。这正是我们需要的行为。\u003c/p\u003e\n\u003cp\u003e为了比较，下面是实现同样功能的 Perl 5 程序：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-perl\" data-lang=\"perl\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ev5\u003c/span\u003e\u003cspan class=\"mf\"\u003e.10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ealarm\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$SIG\u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"n\"\u003eALRM\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"nv\"\u003e1_000_000\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e（它设法计数高达 4000 万，但这是另一回事了。）\u003c/p\u003e\n","text":"在 Raku 中设置超时 在 Perl 5 中，我曾经使用信号设置超时（至少，这是一种简单且可预测的方式）。在 Raku 中，您可以使用 promise。让我们看看如何做到这一点。\n要模仿长时间运行的任务，请创建一个无限循环，然后打印其状态。开始吧:\nfor 1 .. * { .say if $_ %% 100_000; } 只要循环得到控制，它将永远不会退出。我们的任务是在几秒钟内停止程序，因此计时器应在循环之前设置:\nPromise.in(2).then({ exit; }); for 1 .. * { .say if $_ %% 100_000; } 在这里，Promise.in 方法创建一个 promise，在给定秒数后自动 kept。在 promise 的基础上，使用 then，我们添加了另一个 promise，其代码将在超时后运行。这里唯一的语句就是退出，停止主程序。\n运行该程序以查看它的工作原理：\n$ time raku timeout.pl 100000 200000 300000 . . . 3700000 3800000 3900000 real 0m2.196s user 0m2.120s sys 0m0.068s 该程序在我的计算机上计数达四百万，并在两秒内退出。这正是我们需要的行为。\n为了比较，下面是实现同样功能的 Perl 5 程序：\nuse v5.10; alarm 2; $SIG{ALRM} = sub { exit; }; for (my $c = 1; ; $c++) { say $c unless $c % 1_000_000; } （它设法计数高达 4000 万，但这是另一回事了。）\n"},"name":"在 Raku 中设置超时","published":"2018-04-12T00:00:00Z","summary":"在 Raku 中设置超时 在 Perl 5 中，我曾经使用信号设置超时（至少，这是一种简单且可预测的方式）。在 Raku 中，您可以使用 promise。让我们看看如何做到这一点。\n要模仿长时间运行的任务，请创建一个无限循环，然后打印其状态。开始吧:\nfor 1 .. * { .say if $_ %% 100_000; } 只要循环得到控制，它将永远不会退出。我们的任务是在几秒钟内停止程序，因此计时器应在循环之前设置:\nPromise.in(2).then({ exit; }); for 1 .. * { .say if $_ %% 100_000; } 在这里，Promise.in 方法创建一个 promise，在给定秒数后自动 kept。在 promise 的基础上，使用 then，我们添加了另一个 promise，其代码将在超时后运行。这里唯一的语句就是退出，停止主程序。\n运行该程序以查看它的工作原理：\n$ time raku timeout.pl 100000 200000 300000 . . . 3700000 3800000 3900000 real 0m2.196s user 0m2.120s sys 0m0.068s 该程序在我的计算机上计数达四百万，并在两秒内退出。这正是我们需要的行为。\n为了比较，下面是实现同样功能的 Perl 5 程序：","type":"entry","url":"http://localhost:1313/raku/2018-04-12-setting-timeouts-in-raku/"},{"content":{"html":"\u003cp\u003e数据类型 Bag 是一种 Perl 5 中没有的新的数据类型。\u003c/p\u003e\n\u003cp\u003e它可以被认为是一个容器，它一方面知道它里面有多少个单独的元素，另一方面可以说有多少种不同类型的商品。您可以用不同的方式描述此类型：Bag 是一个哈希，默认情况下，您添加的键的值为1。我们来看看例子。\u003c/p\u003e\n\u003cp\u003e把一个 1 放进 bag 里，看看 \u003ccode\u003eperl\u003c/code\u003e 的输出：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b1\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该程序打印以下输出：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eBag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e也就是说，我们有一个 1。\u003c/p\u003e\n\u003cp\u003e如果你把另一个数字也放进 bag 里面：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b2\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在有一个 1 和一个 2：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eBag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e好的，如果你添加另一个 1 呢?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b3\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在有两个 1：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eBag\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e让我们稍微离题一下：所有显示的例子都可以把括号去掉：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b1\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b3\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e比较典型的是，bag 不止能存储数字，还可以存储字符串，例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$cars\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003egreen black blue black white\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我可以了解变量 \u003ccode\u003e$cars\u003c/code\u003e 的内容？\u003c/p\u003e\n\u003cp\u003e首先，有什么颜色:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$cars\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# (white blue black green)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其次，实际上有多少种不同的颜色：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$cars\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者有多少个不同的对象：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$cars\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003etotal\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 5\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e最后，在创建 Bag 类型的对象时，可以使用类似于如何创建哈希的语法（但是，您不能省略括号和引号）:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$cars2\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003ebag\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egreen\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eblack\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eblue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ewhite\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"数据类型 Bag 是一种 Perl 5 中没有的新的数据类型。\n它可以被认为是一个容器，它一方面知道它里面有多少个单独的元素，另一方面可以说有多少种不同类型的商品。您可以用不同的方式描述此类型：Bag 是一个哈希，默认情况下，您添加的键的值为1。我们来看看例子。\n把一个 1 放进 bag 里，看看 perl 的输出：\nmy $b1 = bag(1); say $b1.perl; 该程序打印以下输出：\n(1=\u0026gt;1).Bag 也就是说，我们有一个 1。\n如果你把另一个数字也放进 bag 里面：\nmy $b2 = bag(1, 2); say $b2.perl; 现在有一个 1 和一个 2：\n(1=\u0026gt;1,2=\u0026gt;1).Bag 好的，如果你添加另一个 1 呢?\nmy $b3 = bag(1, 2, 1); say $b3.perl; 现在有两个 1：\n(1=\u0026gt;2,2=\u0026gt;1).Bag 让我们稍微离题一下：所有显示的例子都可以把括号去掉：\nmy $b1 = bag 1; my $b2 = bag 1, 2; my $b3 = bag 1, 2, 1; 比较典型的是，bag 不止能存储数字，还可以存储字符串，例如：\nmy $cars = bag \u0026lt;green black blue black white\u0026gt;; 我可以了解变量 $cars 的内容？\n首先，有什么颜色:\nsay $cars.keys; # (white blue black green) 其次，实际上有多少种不同的颜色：\nsay $cars.elems; # 4 或者有多少个不同的对象：\nsay $cars.total; # 5 最后，在创建 Bag 类型的对象时，可以使用类似于如何创建哈希的语法（但是，您不能省略括号和引号）:\nmy $cars2 = bag(\u0026#39;green\u0026#39; =\u0026gt; 1, \u0026#39;black\u0026#39; =\u0026gt; 2, \u0026#39;blue\u0026#39; =\u0026gt; 1, \u0026#39;white\u0026#39; =\u0026gt; 1); "},"name":"Raku 中的数据类型 Bag","published":"2018-02-07T00:00:00Z","summary":"数据类型 Bag 是一种 Perl 5 中没有的新的数据类型。\n它可以被认为是一个容器，它一方面知道它里面有多少个单独的元素，另一方面可以说有多少种不同类型的商品。您可以用不同的方式描述此类型：Bag 是一个哈希，默认情况下，您添加的键的值为1。我们来看看例子。\n把一个 1 放进 bag 里，看看 perl 的输出：\nmy $b1 = bag(1); say $b1.perl; 该程序打印以下输出：\n(1=\u0026gt;1).Bag 也就是说，我们有一个 1。\n如果你把另一个数字也放进 bag 里面：\nmy $b2 = bag(1, 2); say $b2.perl; 现在有一个 1 和一个 2：\n(1=\u0026gt;1,2=\u0026gt;1).Bag 好的，如果你添加另一个 1 呢?\nmy $b3 = bag(1, 2, 1); say $b3.perl; 现在有两个 1：\n(1=\u0026gt;2,2=\u0026gt;1).Bag 让我们稍微离题一下：所有显示的例子都可以把括号去掉：\nmy $b1 = bag 1; my $b2 = bag 1, 2; my $b3 = bag 1, 2, 1; 比较典型的是，bag 不止能存储数字，还可以存储字符串，例如：","type":"entry","url":"http://localhost:1313/raku/2018-02-07-raku%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Bbag/"},{"content":{"html":"\u003cp\u003e昨天，我们查看了返回字符串的 Bool 类的两个方法。函数产生的字符串表示在源代码中被硬编码。\u003c/p\u003e\n\u003cp\u003e让我们使用这个观察并尝试改变文本。\u003c/p\u003e\n\u003cp\u003e所以，这里是我们要修改的片段：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eBool\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd_multi_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egist\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003egist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e该 \u003ccode\u003egist\u003c/code\u003e 方法用于对已定义的变量进行字符串化。\u003c/p\u003e\n\u003cp\u003e要做到这一点，你需要在计算机上安装 Rakudo 的源代码，以便编译它们。首先从 GitHub 克隆项目：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ git clone https://github.com/rakudo/rakudo.git\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e编译 MoarVM：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ \u003cspan class=\"nb\"\u003ecd\u003c/span\u003e rakudo\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ perl Configure.pl --gen-moar --gen-nqp --backends\u003cspan class=\"o\"\u003e=\u003c/span\u003emoar\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ make\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e完成之后，你会在 \u003ccode\u003erakudo\u003c/code\u003e 目录下获得 \u003ccode\u003eraku\u003c/code\u003e 可执行文件。\u003c/p\u003e\n\u003cp\u003e现在，打开 \u003ccode\u003esrc/core/Bool.pm\u003c/code\u003e 文件，并将 \u003ccode\u003egist\u003c/code\u003e 方法的字符串更改为使用 Unicode 大拇指代替纯文本：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eBool\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd_multi_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003egist\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003egist\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e👍\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e👎\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e保存文件后，您需要重新编译 Rakudo。 Bool.pm 位于要在 Makefile 中编译的文件列表中：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eM_CORE_SOURCES = \\\n    src/core/core_prologue.pm\\\n    src/core/traits.pm\\\n    src/core/Positional.pm\\\n    . . .\n    src/core/Bool.pm\\\n    . . .\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e运行 \u003ccode\u003emake\u003c/code\u003e 并获取更新的 \u003ccode\u003eraku\u003c/code\u003e。运行它并享受结果：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e:~/\u003c/span\u003e\u003cspan class=\"n\"\u003erakudo\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eTo\u003c/span\u003e \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e^D\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eBool\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e👍\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e👎\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e作为练习，让我们通过添加未定义值的 \u003ccode\u003egist\u003c/code\u003e 方法来改进本地 Raku。默认情况下，它不存在，我们昨天看到了。这意味着尝试在字符串中插入未定义的变量将被拒绝。让我们做得更好。\u003c/p\u003e\n\u003cp\u003e插值使用 \u003ccode\u003eStr\u003c/code\u003e 方法。它与 \u003ccode\u003egist\u003c/code\u003e 和 \u003ccode\u003eperl\u003c/code\u003e 类似，所以在创建新版本时不会遇到任何困难。\u003c/p\u003e\n\u003cp\u003e这是目前在 Raku 中的内容：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eBool\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd_multi_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eD\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003eself\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e!!\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这是你需要添加的内容：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eBool\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nf\"\u003eadd_multi_method\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eU\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e¯\\_(ツ)_/¯\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e请注意，第二个变体中不需要 \u003ccode\u003eself\u003c/code\u003e（不能使用）。\u003c/p\u003e\n\u003cp\u003e编译并运行 \u003ccode\u003eraku\u003c/code\u003e：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"nb\"\u003eraku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eTo\u003c/span\u003e \u003cspan class=\"nb\"\u003eexit\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eexit\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e^D\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"kt\"\u003eBool\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eBool\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eHere is my variable: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eHere\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nb\"\u003evariable\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e¯\u003c/span\u003e\\\u003cspan class=\"nf\"\u003e_\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eツ\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"n\"\u003e_\u003c/span\u003e\u003cspan class=\"o\"\u003e/¯\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它按预期工作。恭喜，你刚刚改变了 Raku 的行为！\u003c/p\u003e\n","text":"昨天，我们查看了返回字符串的 Bool 类的两个方法。函数产生的字符串表示在源代码中被硬编码。\n让我们使用这个观察并尝试改变文本。\n所以，这里是我们要修改的片段：\nBool.^add_multi_method(\u0026#39;gist\u0026#39;, my multi method gist(Bool:D:) { self ?? \u0026#39;True\u0026#39; !! \u0026#39;False\u0026#39; }); 该 gist 方法用于对已定义的变量进行字符串化。\n要做到这一点，你需要在计算机上安装 Rakudo 的源代码，以便编译它们。首先从 GitHub 克隆项目：\n$ git clone https://github.com/rakudo/rakudo.git 编译 MoarVM：\n$ cd rakudo $ perl Configure.pl --gen-moar --gen-nqp --backends=moar $ make 完成之后，你会在 rakudo 目录下获得 raku 可执行文件。\n现在，打开 src/core/Bool.pm 文件，并将 gist 方法的字符串更改为使用 Unicode 大拇指代替纯文本：\nBool.^add_multi_method(\u0026#39;gist\u0026#39;, my multi method gist(Bool:D:) { self ?? \u0026#39;👍\u0026#39; !! \u0026#39;👎\u0026#39; }); 保存文件后，您需要重新编译 Rakudo。 Bool.pm 位于要在 Makefile 中编译的文件列表中：\nM_CORE_SOURCES = \\ src/core/core_prologue.pm\\ src/core/traits.pm\\ src/core/Positional.pm\\ . . . src/core/Bool.pm\\ . . . 运行 make 并获取更新的 raku。运行它并享受结果：\n:~/rakudo$ ./raku To exit type \u0026#39;exit\u0026#39; or \u0026#39;^D\u0026#39; \u0026gt; my Bool $b = True; 👍 \u0026gt; $b = !$b; 👎 \u0026gt; 作为练习，让我们通过添加未定义值的 gist 方法来改进本地 Raku。默认情况下，它不存在，我们昨天看到了。这意味着尝试在字符串中插入未定义的变量将被拒绝。让我们做得更好。\n插值使用 Str 方法。它与 gist 和 perl 类似，所以在创建新版本时不会遇到任何困难。\n这是目前在 Raku 中的内容：\nBool.^add_multi_method(\u0026#39;Str\u0026#39;, my multi method Str(Bool:D:) { self ?? \u0026#39;True\u0026#39; !! \u0026#39;False\u0026#39; }); 这是你需要添加的内容：\nBool.^add_multi_method(\u0026#39;Str\u0026#39;, my multi method Str(Bool:U:) { \u0026#39;¯\\_(ツ)_/¯\u0026#39; }); 请注意，第二个变体中不需要 self（不能使用）。\n编译并运行 raku：\n$ ./raku To exit type \u0026#39;exit\u0026#39; or \u0026#39;^D\u0026#39; \u0026gt; my Bool $b; (Bool) \u0026gt; \u0026#34;Here is my variable: $b\u0026#34; Here is my variable: ¯\\_(ツ)_/¯ \u0026gt; 它按预期工作。恭喜，你刚刚改变了 Raku 的行为！\n"},"name":"Playing with the code of Rakudo Raku","published":"2017-12-23T00:00:00Z","summary":"昨天，我们查看了返回字符串的 Bool 类的两个方法。函数产生的字符串表示在源代码中被硬编码。\n让我们使用这个观察并尝试改变文本。\n所以，这里是我们要修改的片段：\nBool.^add_multi_method(\u0026#39;gist\u0026#39;, my multi method gist(Bool:D:) { self ?? \u0026#39;True\u0026#39; !! \u0026#39;False\u0026#39; }); 该 gist 方法用于对已定义的变量进行字符串化。\n要做到这一点，你需要在计算机上安装 Rakudo 的源代码，以便编译它们。首先从 GitHub 克隆项目：\n$ git clone https://github.com/rakudo/rakudo.git 编译 MoarVM：\n$ cd rakudo $ perl Configure.pl --gen-moar --gen-nqp --backends=moar $ make 完成之后，你会在 rakudo 目录下获得 raku 可执行文件。\n现在，打开 src/core/Bool.pm 文件，并将 gist 方法的字符串更改为使用 Unicode 大拇指代替纯文本：\nBool.^add_multi_method(\u0026#39;gist\u0026#39;, my multi method gist(Bool:D:) { self ?? \u0026#39;👍\u0026#39; !! \u0026#39;👎\u0026#39; }); 保存文件后，您需要重新编译 Rakudo。 Bool.pm 位于要在 Makefile 中编译的文件列表中：","type":"entry","url":"http://localhost:1313/raku/2017-12-23-playing-with-the-code-of-raku/"},{"content":{"html":"\u003cp\u003eHaskell 和 Raku 是非常不同的语言。这很明显。 但是，这并不意味着没有相似之处或共同的想法！ 此页面尝试让一个 Haskell 用户启动并运行 Raku。Haskell 用户可能会发现，在用 Raku 编写脚本时，他们不需要放弃所有 Haskelly 的想法。\u003c/p\u003e\n\u003cp\u003e请注意，这不应该被误认为是初学者教程或 Raku 概述; 它旨在作为具有强大 Haskell 背景的 Raku 学习者的技术参考。\u003c/p\u003e\n\u003ch2 id=\"类型\"\u003e类型\u003c/h2\u003e\n\u003ch3 id=\"类型-vs-值\"\u003e类型 vs 值\u003c/h3\u003e\n\u003cp\u003e在 Haskell 中, 您有类型级编程, 然后进行值级编程。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-haskell\" data-lang=\"haskell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eplusTwo\u003c/span\u003e \u003cspan class=\"ow\"\u003e::\u003c/span\u003e \u003cspan class=\"kt\"\u003eInteger\u003c/span\u003e \u003cspan class=\"ow\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eInteger\u003c/span\u003e   \u003cspan class=\"c1\"\u003e-- Types\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eplusTwo\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"ow\"\u003e=\u003c/span\u003e \u003cspan class=\"n\"\u003ex\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e               \u003cspan class=\"c1\"\u003e-- Values\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e您不要像下面那样在 Haskell 中混合类型和值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eplusTwo\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e          \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003evalid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eplusTwo\u003c/span\u003e \u003cspan class=\"n\"\u003eInteger\u003c/span\u003e    \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003eThis\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nb\"\u003enot\u003c/span\u003e \u003cspan class=\"n\"\u003evalid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Raku 中, 类型(亦称为类型对象)和值处于同样的级别\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eplus-two\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eplus-two\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# This is valid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eplus-two\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# This is valid\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我将再用一个例子来说明 Raku 这个独特之处:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eis-string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eis-string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"k\"\u003e--\u0026gt;\u003c/span\u003e \u003cspan class=\"kt\"\u003eFalse\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eis-string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ehello\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e    \u003cspan class=\"c1\"\u003e#True \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eis-string\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e          \u003cspan class=\"c1\"\u003e#False \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"maybe\"\u003eMaybe\u003c/h3\u003e\n\u003cp\u003e在 Haskell 中，您有一个 Maybe 类型, 可以让您放弃空类型的烦恼。 假设您有一个将 String 解析为 Integer 的假设函数：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nf\"\u003eparseInt\u003c/span\u003e \u003cspan class=\"o\"\u003e::\u003c/span\u003e \u003cspan class=\"n\"\u003eString\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eMaybe\u003c/span\u003e \u003cspan class=\"n\"\u003eInteger\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ecase\u003c/span\u003e \u003cspan class=\"n\"\u003eparseInt\u003c/span\u003e \u003cspan class=\"n\"\u003emyString\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nc\"\u003eJust\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e  \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"n\"\u003eNothing\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 Raku 中, 由于类型对象与常规对象共存，因此我们拥有 \u003ccode\u003eDefined\u003c/code\u003e 和 \u003ccode\u003eUndefined\u003c/code\u003e 对象的概念。 平常的类型对象是 undefined 的, 而实例化后的对象是 defined 的。\u003c/p\u003e\n","text":"Haskell 和 Raku 是非常不同的语言。这很明显。 但是，这并不意味着没有相似之处或共同的想法！ 此页面尝试让一个 Haskell 用户启动并运行 Raku。Haskell 用户可能会发现，在用 Raku 编写脚本时，他们不需要放弃所有 Haskelly 的想法。\n请注意，这不应该被误认为是初学者教程或 Raku 概述; 它旨在作为具有强大 Haskell 背景的 Raku 学习者的技术参考。\n类型 类型 vs 值 在 Haskell 中, 您有类型级编程, 然后进行值级编程。\nplusTwo :: Integer -\u0026gt; Integer -- Types plusTwo x = x + 2 -- Values 您不要像下面那样在 Haskell 中混合类型和值。\nplusTwo 2 -- This is valid plusTwo Integer -- This is not valid 在 Raku 中, 类型(亦称为类型对象)和值处于同样的级别\nsub plus-two(Int $x --\u0026gt; Int) { $x + 2 } plus-two(2); # This is valid plus-two(Int); # This is valid 我将再用一个例子来说明 Raku 这个独特之处:\nmulti sub is-string(Str $ --\u0026gt; True) {} multi sub is-string(Any $ --\u0026gt; False) {} is-string(\u0026#39;hello\u0026#39;); #True is-string(4); #False Maybe 在 Haskell 中，您有一个 Maybe 类型, 可以让您放弃空类型的烦恼。 假设您有一个将 String 解析为 Integer 的假设函数：\nparseInt :: String -\u0026gt; Maybe Integer case parseInt myString of Just x -\u0026gt; x Nothing -\u0026gt; 0 在 Raku 中, 由于类型对象与常规对象共存，因此我们拥有 Defined 和 Undefined 对象的概念。 平常的类型对象是 undefined 的, 而实例化后的对象是 defined 的。\n"},"name":"Raku from Haskell - Nutshell","published":"2017-04-29T00:00:00Z","summary":"Haskell 和 Raku 是非常不同的语言。这很明显。 但是，这并不意味着没有相似之处或共同的想法！ 此页面尝试让一个 Haskell 用户启动并运行 Raku。Haskell 用户可能会发现，在用 Raku 编写脚本时，他们不需要放弃所有 Haskelly 的想法。\n请注意，这不应该被误认为是初学者教程或 Raku 概述; 它旨在作为具有强大 Haskell 背景的 Raku 学习者的技术参考。\n类型 类型 vs 值 在 Haskell 中, 您有类型级编程, 然后进行值级编程。\nplusTwo :: Integer -\u0026gt; Integer -- Types plusTwo x = x + 2 -- Values 您不要像下面那样在 Haskell 中混合类型和值。\nplusTwo 2 -- This is valid plusTwo Integer -- This is not valid 在 Raku 中, 类型(亦称为类型对象)和值处于同样的级别\nsub plus-two(Int $x --\u0026gt; Int) { $x + 2 } plus-two(2); # This is valid plus-two(Int); # This is valid 我将再用一个例子来说明 Raku 这个独特之处:","type":"entry","url":"http://localhost:1313/raku/2017-04-29-raku-from-haskell-nutshell/"},{"content":{"html":"\u003cp\u003e+++\u003c/p\u003e\n\u003cp\u003e在 Raku 中在调用者的类型身上使用 \u003ccode\u003e:D\u003c/code\u003e 或 \u003ccode\u003e:U\u003c/code\u003e 类型笑脸来制造 \u003ccode\u003etype/instance\u003c/code\u003e 方法:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eFoo\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFoo:D:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFoo:U:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003etype object\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eFoo\u003c/span\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 输出 type object\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eFoo\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 输出 instance\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Can use compile time vars to aovid re-typing the actual name everywhere:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"nc\"\u003eBar\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:D\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003einstance\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"vg\"\u003e::?CLASS:U\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003etype object\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eBar\u003c/span\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# \u0026#34;type object\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eBar\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# \u0026#34;instance\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"+++\n在 Raku 中在调用者的类型身上使用 :D 或 :U 类型笑脸来制造 type/instance 方法:\nclass Foo { multi method foo (Foo:D:) { say \u0026#34;instance\u0026#34; } multi method foo (Foo:U:) { say \u0026#34;type object\u0026#34; } } Foo .foo; # 输出 type object Foo.new.foo; # 输出 instance # Can use compile time vars to aovid re-typing the actual name everywhere: class Bar { multi method foo (::?CLASS:D:) { say \u0026#34;instance\u0026#34; } multi method foo (::?CLASS:U:) { say \u0026#34;type object\u0026#34; } } Bar .foo; # \u0026#34;type object\u0026#34; Bar.new.foo; # \u0026#34;instance\u0026#34; "},"name":"Raku 中的笑脸","published":"2017-03-11T00:00:00Z","summary":"+++\n在 Raku 中在调用者的类型身上使用 :D 或 :U 类型笑脸来制造 type/instance 方法:\nclass Foo { multi method foo (Foo:D:) { say \u0026#34;instance\u0026#34; } multi method foo (Foo:U:) { say \u0026#34;type object\u0026#34; } } Foo .foo; # 输出 type object Foo.new.foo; # 输出 instance # Can use compile time vars to aovid re-typing the actual name everywhere: class Bar { multi method foo (::?CLASS:D:) { say \u0026#34;instance\u0026#34; } multi method foo (::?CLASS:U:) { say \u0026#34;type object\u0026#34; } } Bar .","type":"entry","url":"http://localhost:1313/raku/2017-03-11-raku%E4%B8%AD%E7%9A%84%E7%AC%91%E8%84%B8/"},{"content":{"html":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/41406004/raku-what-is-the-best-way-to-match-any-of-a-group-of-words\"\u003eraku What is the best way to match any of a group of words?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e我想匹配任意一组单词，但是失败了，请问怎样才能正确地匹配到？\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e f\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea1234567\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003eany \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAnswer\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c d e f\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea1234567\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e/@a/\u003c/code\u003e 和  \u003ccode\u003e/| @a/\u003c/code\u003e 相同，它是最长的备选分支。对于备选分支，你可以使用 \u003ccode\u003e/|| @a/\u003c/code\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/41194693/how-to-build-lazy-lists-with-defined-generators-and-is-there-a-takewhile-alter\"\u003eHow to build lazy lists with defined generators and is there a “takeWhile” alternative?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efoo\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e**\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$alist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;foo\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e100\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我想得到　\u003ccode\u003e(1 4 9 16 25 .. )\u003c/code\u003e 而程序得到的是 \u003ccode\u003e(1 2 4 16 256)\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAnswer\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# using a Whatever-expression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;foo\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# using your `foo` function\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者使用 Haskell/Python 那样的列表解析式:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# using an in-line expression\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003efoo\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# using your `foo` function\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e另外还有一种方法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{(\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e²\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# stop immediately after past 70\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# [1 4 9 16 25 36 49 64 81]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alist\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e{(\u003c/span\u003e\u003cspan class=\"o\"\u003e++\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e²\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e...^\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e70\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# stop immediately before past 70\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@alist\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# [1 4 9 16 25 36 49 64]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e个人不推荐使用　\u003ccode\u003e$\u003c/code\u003e 匿名变量的这种写法, 对于 new comer 不太友好。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/41457242/raku-is-using-junctions-in-matching-possible\"\u003e在匹配中使用 junctions 可以吗？\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cblockquote\u003e\n\u003cp\u003eIs it possible to use junction to match any of the values in a junction? I want to match any of the values in an array. What is the proper way to do it?\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea 1\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eFalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"k\"\u003em\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e｢\u003c/span\u003e\u003cspan class=\"s\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eAnswer\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ejunctions\u003c/code\u003e  不该被插值到正则表达式中。它们应该被用在普通的 Raku 表达式中，特别是带有比较操作符的表达式（例如  \u003ccode\u003eeq\u003c/code\u003e）:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ex y z\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e    \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# any(False, True, False)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"ow\"\u003eeq\u003c/span\u003e \u003cspan class=\"nb\"\u003eany\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e要在正则表达式中匹配一个数组的任意值，就在正则表达式中写上那个数组名好了（以\u003ccode\u003e@\u003c/code\u003e开头）。默认地，这被插值为 \u003ccode\u003e|\u003c/code\u003e 备选分支（“longest match”），但是你也可以把他指定为 \u003ccode\u003e||\u003c/code\u003e 备选分支（“first match”）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003efoo bar barkeep\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ebarkeeper\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# ｢barkeep｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ebarkeeper\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e||\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# ｢bar｣\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我需要排序数组的数组， \u003ccode\u003e.sort\u003c/code\u003e 方法能不能按照内层数组的不同索引来排序呢？\u003c/p\u003e\n\u003cp\u003e要排序的数组在一个更大的数组的外面：（birthday 是 \u0026lsquo;mmddyy\u0026rsquo; 格式的：）\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@allRecords\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday1\u003c/span\u003e \u003cspan class=\"n\"\u003efirstName1\u003c/span\u003e \u003cspan class=\"n\"\u003elastName1\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003edata1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                   \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthday2\u003c/span\u003e \u003cspan class=\"n\"\u003efirstName2\u003c/span\u003e \u003cspan class=\"n\"\u003elastName2\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003edata2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                   \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                   \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ebirthdayN\u003c/span\u003e \u003cspan class=\"n\"\u003efirstNameN\u003c/span\u003e \u003cspan class=\"n\"\u003elastNameN\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003edataN\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@allRecords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003eitself\u003c/span\u003e \u003cspan class=\"n\"\u003esorts\u003c/span\u003e \u003cspan class=\"n\"\u003eby\u003c/span\u003e \u003cspan class=\"n\"\u003ebirthdays\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e有什么好方法能按照 firstName 或 lastName 或 按照内层数组里面的数据来排序？\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAnswer\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esort\u003c/code\u003e 方法接受一个\u003ca href=\"https://docs.raku.org/routine/sort#(List)_routine_sort\"\u003e可选的 sub 参数\u003c/a\u003e。如果元数是 1， 那么它使用返回值作为比较操作数；如果元数为 2， 那么你可以在两个元素之间手动作比较，两个元素的比较会返回 \u003ccode\u003eLess\u003c/code\u003e, \u003ccode\u003eSame\u003c/code\u003e, \u003ccode\u003eMore\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e拿你上面的例子来说，我们可以像这样按照 first name 进行排序：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@allRecords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们可以先按照 last name 再按照 first name 进行排序，然后按照 birthday 来做单独的比较，就像这样：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@allRecords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"ow\"\u003ecmp\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"ow\"\u003ecmp\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"ow\"\u003ecmp\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e或者再次通过转换操作数：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@allRecords\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e变换 birthday 条目以至于我们能先按照 year 排序作为练习留给读者完成，但是其中一种方法是在合适的地方添加像这样的代码：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ecomb\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003erotate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以按照 lastname，firstname， birthday 这样的顺序排序：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esort\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*[\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e...\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e还有两个问题：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e*.[1]\u003c/code\u003e 和 \u003ccode\u003e*[1]\u003c/code\u003e 有什么区别？\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e两者没有任何区别，但是前者可读性更好！\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003erange 操作符和 \u0026hellip; 序列操作符有什么区别\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003erange 不能倒数， \u003ccode\u003e...\u003c/code\u003e 可以倒数。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/41554702/how-do-i-find-the-index-of-the-maximum-value-in-a-list-in-perl-6\"\u003eHow do I find the index of the maximum value in a list in Raku?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e在 Perl  6 中怎样找出列表中最大值的索引?\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAnswer\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@list\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e9\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emaxpairs\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# [2 =\u0026gt; 9 4 =\u0026gt; 9]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e@list.maxpairs\u003c/code\u003e 用于获取索引和对应最大值的所有对儿。\n\u003ccode\u003e@list.pairs.max(*.value).key\u003c/code\u003e 用于仅获取单个索引。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; @list.pairs.max(*.value).key\n2\n\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://stackoverflow.com/questions/41648119/how-can-i-completely-flatten-a-perl-6-list-of-lists-of-lists\"\u003eHow can I completely flatten a Raku list (of lists (of lists) … )\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e如何彻底地展平 Raku 的列表？这个问题不同于  \u003ca href=\"http://stackoverflow.com/q/37173023/2766176\"\u003eHow do I “flatten” a list of lists in perl 6?\u003c/a\u003e, 后者不是彻底的 flat。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@c\u003c/span\u003e  \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@c\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eab: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@f\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@f\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003egather\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"nv\"\u003e@f\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e@f\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e].\u003c/span\u003e\u003cspan class=\"nb\"\u003eelems\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e??\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003etake\u003c/span\u003e \u003cspan class=\"nv\"\u003e@f\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eSlip\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"o\"\u003e!!\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e@f\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eunshift\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e@f\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eshift\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eSlip\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ef: \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@f\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这打印出：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eab:\u003c/span\u003e \u003cspan class=\"o\"\u003e[[\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003ee\u003c/span\u003e \u003cspan class=\"nb\"\u003ef\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e]]\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"nb\"\u003ez\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e]]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ef\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"nb\"\u003ed\u003c/span\u003e \u003cspan class=\"nb\"\u003ee\u003c/span\u003e \u003cspan class=\"nb\"\u003ef\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eb\u003c/span\u003e \u003cspan class=\"n\"\u003ec\u003c/span\u003e \u003cspan class=\"nb\"\u003ex\u003c/span\u003e \u003cspan class=\"n\"\u003ey\u003c/span\u003e \u003cspan class=\"nb\"\u003ez\u003c/span\u003e \u003cspan class=\"nb\"\u003ew\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但这不够简洁。一种可行的办法是使用：\u003ccode\u003egather/take/deepmap\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003egather\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003edeepmap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003etake\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003epostcircumfix []\u003c/code\u003e 操作符可用于多维下标来获取一组展平的叶子节点，直到特定的深度，尽管　“无限深度”　版本还没有实现：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e\u003cspan class=\"o\"\u003e[*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"o\"\u003e*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e     \u003cspan class=\"c1\"\u003e# (a (b c) (d) e f [a (b c)] x (y z) w)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e\u003cspan class=\"o\"\u003e[*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"o\"\u003e*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# (a b c d e f a (b c) x y z w)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e\u003cspan class=\"o\"\u003e[*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003cspan class=\"o\"\u003e*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# (a b c d e f a b c x y z w)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@ab\u003c/span\u003e\u003cspan class=\"o\"\u003e[**]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# HyperWhatever in array index not yet implemented. Sorry.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e避免容器化 (containerization)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e内置的 \u003ccode\u003eflat\u003c/code\u003e 函数能很好地展平深度嵌套的列表。问题是它不能落进 item 容器（Scalar）中。嵌套列表中非故意的 item 容器的常见来源有：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003e数组\u003c/code\u003e（但不是\u003ccode\u003e列表\u003c/code\u003e）将其每个元素包装在一个新的 item 容器中，无论它之前有没有。\u003c/li\u003e\n\u003cli\u003e如何避免：如果不需要 Array 提供的可变性，请使用列表的列表而不是数组的数组。使用绑定 \u003ccode\u003e:=\u003c/code\u003e 可以用来代替赋值，将列表存储在@变量中，而不将其转换为\u003ccode\u003e数组\u003c/code\u003e：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e  \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e  \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ed\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ee\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ef\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eflat\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# (d e f a b c)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e$variables 是 item 容器。\u003c/li\u003e\n\u003cli\u003e如何避免：当将列表存储在 \u003ccode\u003e$\u003c/code\u003e 变量中，然后将其作为元素插入到另一个列表中时，使用 \u003ccode\u003e\u0026lt;\u0026gt;\u003c/code\u003e 来对它进行 decontainerize(解容器化)。当把 \u003ccode\u003e$\u003c/code\u003e 变量传递给 flat 时, 父列表的容器也可以使用 \u003ccode\u003e|\u003c/code\u003e 绕过：\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;\u0026gt;,\u003c/span\u003e \u003cspan class=\"mi\"\u003e6\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003eflat\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e  \u003cspan class=\"c1\"\u003e# (1 2 3 4 5 6)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e未完待续。。。\u003c/p\u003e\n","text":" raku What is the best way to match any of a group of words? 我想匹配任意一组单词，但是失败了，请问怎样才能正确地匹配到？\nmy @a=\u0026lt;a b c d e f\u0026gt;; my $x=\u0026#34;a1234567\u0026#34;; say $x ~~ m/ @a.any /; Answer\nmy @a = \u0026lt;a b c d e f\u0026gt;; my $x = \u0026#34;a1234567\u0026#34;; say $x ~~ /@a/ /@a/ 和 /| @a/ 相同，它是最长的备选分支。对于备选分支，你可以使用 /|| @a/。\nHow to build lazy lists with defined generators and is there a “takeWhile” alternative? sub foo($x) { $x**2 } my $alist = (1,2, \u0026amp;foo ... ^ * \u0026gt; 100); 我想得到　(1 4 9 16 25 .. ) 而程序得到的是 (1 2 4 16 256)。\nAnswer:\nmy @a = (1..*).map(* ** 2); # using a Whatever-expression my @a = (1..*).map(\u0026amp;foo); # using your `foo` function 或者使用 Haskell/Python 那样的列表解析式:\nmy @a = ($_ ** 2 for 1..*); # using an in-line expression my @a = (foo $_ for 1..*); # using your `foo` function 另外还有一种方法：\nmy @alist = {(++$)²} ... * \u0026gt; 70; # stop immediately after past 70 say @alist; # [1 4 9 16 25 36 49 64 81] my @alist = {(++$)²} ...^ * \u0026gt; 70; # stop immediately before past 70 say @alist; # [1 4 9 16 25 36 49 64] 个人不推荐使用　$ 匿名变量的这种写法, 对于 new comer 不太友好。\n在匹配中使用 junctions 可以吗？ Is it possible to use junction to match any of the values in a junction? I want to match any of the values in an array. What is the proper way to do it?\n\u0026gt; my @a=\u0026lt;a b c\u0026gt; [a b c] \u0026gt; any(@a) any(a, b, c) \u0026gt; my $x=any(@a) any(a, b, c) \u0026gt; my $y = \u0026#34;a 1\u0026#34; a 1 \u0026gt; say $y ~~ m/ $x / False \u0026gt; say $y ~~ m/ \u0026#34;$x\u0026#34; / False \u0026gt; my $x = any(@a).Str any(\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;) \u0026gt; say $y ~~ m/ $x / False \u0026gt; say $y ~~ m/ || $x / False \u0026gt; say $y ~~ m/ || @a / ｢a｣ Answer\njunctions 不该被插值到正则表达式中。它们应该被用在普通的 Raku 表达式中，特别是带有比较操作符的表达式（例如 eq）:\nmy @a = \u0026lt;x y z\u0026gt;; say \u0026#34;y\u0026#34; eq any(@a); # any(False, True, False) say so \u0026#34;y\u0026#34; eq any(@a); # True 要在正则表达式中匹配一个数组的任意值，就在正则表达式中写上那个数组名好了（以@开头）。默认地，这被插值为 | 备选分支（“longest match”），但是你也可以把他指定为 || 备选分支（“first match”）。\nmy @a = \u0026lt;foo bar barkeep\u0026gt;; say \u0026#34;barkeeper\u0026#34; ~~ / @a /; # ｢barkeep｣ say \u0026#34;barkeeper\u0026#34; ~~ / || @a /; # ｢bar｣ 我需要排序数组的数组， .sort 方法能不能按照内层数组的不同索引来排序呢？\n要排序的数组在一个更大的数组的外面：（birthday 是 \u0026lsquo;mmddyy\u0026rsquo; 格式的：）\nmy @allRecords = [ [birthday1 firstName1 lastName1 [data1] [birthday2 firstName2 lastName2 [data2] ... [birthdayN firstNameN lastNameN [dataN] ]; @allRecords.sort by itself sorts by birthdays. 有什么好方法能按照 firstName 或 lastName 或 按照内层数组里面的数据来排序？\nAnswer\nsort 方法接受一个可选的 sub 参数。如果元数是 1， 那么它使用返回值作为比较操作数；如果元数为 2， 那么你可以在两个元素之间手动作比较，两个元素的比较会返回 Less, Same, More。\n拿你上面的例子来说，我们可以像这样按照 first name 进行排序：\n@allRecords.sort(*.[1]) 我们可以先按照 last name 再按照 first name 进行排序，然后按照 birthday 来做单独的比较，就像这样：\n@allRecords.sort(-\u0026gt; $a,$b { $a[2] cmp $b[2] || $a[1] cmp $b[1] || $a[0] cmp $b[0] }); 或者再次通过转换操作数：\n@allRecords.sort(*.[2...0]); 变换 birthday 条目以至于我们能先按照 year 排序作为练习留给读者完成，但是其中一种方法是在合适的地方添加像这样的代码：\n.comb(2).list.rotate(-1).join 你可以按照 lastname，firstname， birthday 这样的顺序排序：\n@a.sort: *[2...0] 还有两个问题：\n*.[1] 和 *[1] 有什么区别？ 两者没有任何区别，但是前者可读性更好！\nrange 操作符和 \u0026hellip; 序列操作符有什么区别 range 不能倒数， ... 可以倒数。\nHow do I find the index of the maximum value in a list in Raku? 在 Perl 6 中怎样找出列表中最大值的索引?\nAnswer\nmy @list = 1,2,9,6,9,5; @list.maxpairs; # [2 =\u0026gt; 9 4 =\u0026gt; 9] @list.maxpairs 用于获取索引和对应最大值的所有对儿。 @list.pairs.max(*.value).key 用于仅获取单个索引。\n\u0026gt; @list.pairs.max(*.value).key 2 How can I completely flatten a Raku list (of lists (of lists) … ) 如何彻底地展平 Raku 的列表？这个问题不同于 How do I “flatten” a list of lists in perl 6?, 后者不是彻底的 flat。\nmy @a = \u0026#39;a\u0026#39;, (\u0026#39;b\u0026#39;, \u0026#39;c\u0026#39; ); my @b = (\u0026#39;d\u0026#39;,), \u0026#39;e\u0026#39;, \u0026#39;f\u0026#39;, @a; my @c = \u0026#39;x\u0026#39;, $( \u0026#39;y\u0026#39;, \u0026#39;z\u0026#39; ), \u0026#39;w\u0026#39;; my @ab = @a, @b, @c; say \u0026#34;ab: \u0026#34;, @ab; my @f = @ab; @f = gather { while @f { @f[0].elems == 1 ?? take @f.shift.Slip !! @f.unshift( @f.shift.Slip ) } } say \u0026#34;f: \u0026#34;, @f; 这打印出：\nab: [[a (b c)] [(d) e f [a (b c)]] [x (y z) w]] f: [a b c d e f a b c x y z w] 但这不够简洁。一种可行的办法是使用：gather/take/deepmap:\nsay gather @ab.deepmap(*.take) postcircumfix [] 操作符可用于多维下标来获取一组展平的叶子节点，直到特定的深度，尽管　“无限深度”　版本还没有实现：\nsay @ab[*;*]; # (a (b c) (d) e f [a (b c)] x (y z) w) say @ab[*;*;*]; # (a b c d e f a (b c) x y z w) say @ab[*;*;*;*]; # (a b c d e f a b c x y z w) say @ab[**]; # HyperWhatever in array index not yet implemented. Sorry. 避免容器化 (containerization) 内置的 flat 函数能很好地展平深度嵌套的列表。问题是它不能落进 item 容器（Scalar）中。嵌套列表中非故意的 item 容器的常见来源有：\n数组（但不是列表）将其每个元素包装在一个新的 item 容器中，无论它之前有没有。 如何避免：如果不需要 Array 提供的可变性，请使用列表的列表而不是数组的数组。使用绑定 := 可以用来代替赋值，将列表存储在@变量中，而不将其转换为数组： my @a := \u0026#39;a\u0026#39;, (\u0026#39;b\u0026#39;, \u0026#39;c\u0026#39; ); my @b := (\u0026#39;d\u0026#39;,), \u0026#39;e\u0026#39;, \u0026#39;f\u0026#39;, @a; say flat @b; # (d e f a b c) $variables 是 item 容器。 如何避免：当将列表存储在 $ 变量中，然后将其作为元素插入到另一个列表中时，使用 \u0026lt;\u0026gt; 来对它进行 decontainerize(解容器化)。当把 $ 变量传递给 flat 时, 父列表的容器也可以使用 | 绕过： my $a = (3, 4, 5); my $b = (1, 2, $a\u0026lt;\u0026gt;, 6); say flat |$b; # (1 2 3 4 5 6) 未完待续。。。\n"},"name":"2017 StackOverFlow-sort,deepmap,flat","published":"2017-01-02T22:56:16Z","summary":"raku What is the best way to match any of a group of words? 我想匹配任意一组单词，但是失败了，请问怎样才能正确地匹配到？\nmy @a=\u0026lt;a b c d e f\u0026gt;; my $x=\u0026#34;a1234567\u0026#34;; say $x ~~ m/ @a.any /; Answer\nmy @a = \u0026lt;a b c d e f\u0026gt;; my $x = \u0026#34;a1234567\u0026#34;; say $x ~~ /@a/ /@a/ 和 /| @a/ 相同，它是最长的备选分支。对于备选分支，你可以使用 /|| @a/。\nHow to build lazy lists with defined generators and is there a “takeWhile” alternative? sub foo($x) { $x**2 } my $alist = (1,2, \u0026amp;foo .","type":"entry","url":"http://localhost:1313/raku/2017-01-02-stackoverflow/"},{"content":{"html":"\u003ch1 id=\"raku-by-example-datetime-conversion-for-the-command-line\"\u003eRaku By Example: Datetime Conversion for the Command Line\u003c/h1\u003e\n\u003cp\u003e我偶尔会在数据库中存储 UNIX 时间戳, 即从 1970-01-01 开始的秒数。我在按照日期查询数据库中的数据时, 需要将 UNIX 时间戳转换为人类可读的时间, 所以我写了个很小的工具来帮助我在 UNIX  时间戳和日期/时间之间来回转换:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"s\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"s\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e1450956180\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450956180\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"s\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"s\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"使用库\"\u003e使用库\u003c/h2\u003e\n\u003cp\u003eRaku 的 \u003ca href=\"https://docs.raku.org/type/DateTime\"\u003eDateTime\u003c/a\u003e 和 \u003ca href=\"https://docs.raku.org/type/Date\"\u003eDate\u003c/a\u003e 模块会做实际的转换。\n\u003ccode\u003eDateTime.new\u003c/code\u003e 构造函数有一个接收单个整数作为 UNIX 时间戳的变体:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"nb\"\u003eraku\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"no\"\u003ee\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003esay DateTime.new(1480915200)\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2016\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mo\"\u003e05\u003c/span\u003e\u003cspan class=\"n\"\u003eT05:20:00Z\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e看起来我们已经完成了一个方向的转换,对吗?\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们来运行它:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInvalid\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e1450915200\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e \u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003ean\u003c/span\u003e \u003cspan class=\"n\"\u003eISO\u003c/span\u003e \u003cspan class=\"mi\"\u003e8601\u003c/span\u003e \u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eyyyy-mm-ddThh:mm:ssZ\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"n\"\u003eyyyy-mm-ddThh:mm:ss\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"mo\"\u003e01\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"s\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nb\"\u003einstead\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003ein\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e \u003cspan class=\"nb\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"nb\"\u003eline\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003eblock\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eunit\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eat\u003c/span\u003e \u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"nb\"\u003eline\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e发生了什么？看起来 \u003ccode\u003eDateTime\u003c/code\u003e 构造函数把参数当作了字符串, 尽管 \u003ccode\u003esub MAIN\u003c/code\u003e 的参数被声明为 \u003ccode\u003eInt\u003c/code\u003e。怎么会变成那样呢? 我们添加一些调试输出:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e打印出:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eIntStr\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003e$thing.^name\u003c/code\u003e 是 $thing 所属类的名字。 \u003ca href=\"https://docs.raku.org/type/IntStr\"\u003eIntStr\u003c/a\u003e 是 \u003ccode\u003eInt\u003c/code\u003e 和 \u003ccode\u003eStr\u003c/code\u003e 类的子类, 这就是为什么 \u003ccode\u003eDateTime\u003c/code\u003e 构造函数正常地认为 $timestamp 是一个 \u003ccode\u003eStr\u003c/code\u003e 的原因。\u003c/p\u003e\n\u003cp\u003e长话短说, 我们可以在参数前添加一个 \u003ccode\u003e+\u003c/code\u003e 前缀使参数强制为 \u0026ldquo;真\u0026rdquo; 整数, 这也是将字符串转为数值的通用机制:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这一次它真的工作了:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime-01\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003ep6\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"n\"\u003eT00:00:00Z\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e输出是 ISO 8601 样式的时间戳格式, 对眼睛不太友好。对于小时,分钟和秒数都为 0 的日期, 我们真正想要的只有日期:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这样看起来更好一点:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是上面那种三个比较都为 0 的写法实在太丑了, 如果是 4 个, 5 个, 6 个\u0026hellip; 那就是又丑又长。Raku 有一个 \u003ccode\u003eall\u003c/code\u003e Junction:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003eall\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003eall(...)\u003c/code\u003e 创建了一个 \u003ca href=\"https://docs.raku.org/type/Junction\"\u003eJunction\u003c/a\u003e, 它是几个其他值的组合值, 它也存储了一个逻辑模式。当你比较一个 junction 和其他值的时候, 那个比较会自动地应用到该 junction 中的所有值上。\u003ccode\u003eif\u003c/code\u003e 语句在布尔上下文中对该 junction 进行求值, 在这个例子中, 当所有的比较为 \u003ccode\u003eTrue\u003c/code\u003e 时, if 也返回 \u003ccode\u003eTrue\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e其他类型的 junction 还有 \u003ccode\u003eany\u003c/code\u003e, \u003ccode\u003eall\u003c/code\u003e, \u003ccode\u003enone\u003c/code\u003e。考虑到在布尔上下文中, 0 是唯一一个求值为 false 的整数, 我们甚至可以把上面的例子写为:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nb\"\u003enone\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但是也可能没有必要搞得那么复杂,  如果 \u003ccode\u003e$dt\u003c/code\u003e 这个 Datetime 对象转换为 \u003ccode\u003eDate\u003c/code\u003e  然后再转换为 DateTime 而不丢失信息, 那么它肯定是一个 Date:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"datetime-格式化\"\u003eDateTime 格式化\u003c/h2\u003e\n\u003cp\u003e如果时间戳没有被解析为整天, 那么当前我们的脚本的输出就会像这样:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"n\"\u003eT00:00:01Z\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e其中的 \u0026ldquo;Z\u0026rdquo; 表示 UTC 或 \u0026ldquo;Zulu\u0026rdquo; 时区。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eDateTime\u003c/code\u003e 类支持自定义格式化, 所以我们来写一个:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eformatter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%04d-%02d-%02d %02d:%02d:%02d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eyear\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emonth\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eday\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                    \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e});\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在输出看起来更好看了:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450915201\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e \u003cspan class=\"mo\"\u003e00\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"s\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"s\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e语法 \u003ccode\u003eformatter =\u0026gt; ...\u003c/code\u003e 在参数上下文中表示具名参数。\n这样的代码我不喜欢, 因为在 \u003ccode\u003eDateTime.new\u003c/code\u003e 调用中它是内联的, 这并不清晰。\u003c/p\u003e\n\u003cp\u003e我们来单独写一个例程:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eformatter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%04d-%02d-%02d %02d:%02d:%02d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eyear\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emonth\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eday\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eformatter\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e\u0026amp;formatter\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e是的, 你可以把一个子例程声明放在另一个子例程声明的正文中; 子例程只是一个普通的词法符号,就像一个用 \u003ccode\u003emy\u003c/code\u003e 声明的变量。\u003c/p\u003e\n\u003cp\u003e在行 \u003ccode\u003emy $dt = DateTime.new(+$timestamp,formatter =\u0026gt; \u0026amp;formatter);\u003c/code\u003e 中, 语法 \u003ccode\u003e\u0026amp;formatter\u003c/code\u003e 引用子例程作为一个对象,而不调用它。\u003c/p\u003e\n\u003cp\u003e这是 Raku, \u003ccode\u003eformatter =\u0026gt; \u0026amp;formatter\u003c/code\u003e 有一个简写: \u003ccode\u003e\u0026amp;formatter\u003c/code\u003e。\n作为一般规则,如果要填充一个名称为变量名称并且其值为变量值的命名参数, 可以通过写入 \u003ccode\u003e:$variable\u003c/code\u003e 创建它。 作为扩展, \u003ccode\u003e:thing\u003c/code\u003e 是 \u003ccode\u003ething =\u0026gt; True\u003c/code\u003e 的缩写。\u003c/p\u003e\n\u003ch2 id=\"寻找其他途径\"\u003e寻找其他途径\u003c/h2\u003e\n\u003cp\u003e现在, 从时间戳到日期和时间的转换工作的很好, 让我们看另一种途径。\n我们的小工具需要解析输入, 并决定输入的是时间戳还是日期和可选的时间。\u003c/p\u003e\n\u003cp\u003e一种无聊的方式是使用条件:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$input\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$input\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\d\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# convert from timestamp to date/datetime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"c1\"\u003e# convert from date to timestamp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e但我讨厌无聊, 所以我想看看一个更令人兴奋的（端可扩展）方法。\u003c/p\u003e\n\u003cp\u003eRaku 支持多重分派。这意味着您可以有多个具有相同名称但不同签名的子例程。\nRaku 自动决定要调用哪一个。 您必须通过编写 \u003ccode\u003emulti sub\u003c/code\u003e 而不是 \u003ccode\u003esub\u003c/code\u003e 来显式地启用此功能, 以便 Raku 可以捕获意外的重新声明。\u003c/p\u003e\n\u003cp\u003e让我们看看它在实际中的运用:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eformatter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%04d-%02d-%02d %02d:%02d:%02d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eyear\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emonth\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eday\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$o\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;formatter\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$dt\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$date\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eposix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们看一下效果:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eAmbiguous\u003c/span\u003e \u003cspan class=\"n\"\u003ecall\u003c/span\u003e \u003cspan class=\"nb\"\u003eto\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e \u003cspan class=\"n\"\u003ethese\u003c/span\u003e \u003cspan class=\"n\"\u003esignatures\u003c/span\u003e \u003cspan class=\"nb\"\u003eall\u003c/span\u003e \u003cspan class=\"nb\"\u003ematch\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003ein\u003c/span\u003e \u003cspan class=\"nb\"\u003eblock\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"k\"\u003eunit\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"nb\"\u003eat\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"nb\"\u003eline\u003c/span\u003e \u003cspan class=\"mi\"\u003e17\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e不是我所想象的。问题又是整数参数自动被转换为了 \u003ccode\u003eIntStr\u003c/code\u003e, Int 和 Str \u003ccode\u003emulti\u003c/code\u003e（或候选）都接受它作为参数。\u003c/p\u003e\n\u003cp\u003e避免这种错误的最简单的方法是缩小 Str 候选者接受的字符串的种类。\n经典的方法是用一个正则表达式粗略验证传入的参数:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"o\"\u003e/^\u003c/span\u003e \\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \\\u003cspan class=\"o\"\u003e-\u003c/span\u003e \\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \\\u003cspan class=\"o\"\u003e-\u003c/span\u003e \\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$date\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eposix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e它确实能工作, 但为什么重复 Date.new 已经有用于验证日期字符串的逻辑？\n如果你传递一个看起来不像日期的字符串参数,你会得到这样的错误：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eInvalid\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e \u003cspan class=\"n\"\u003estring\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003efoobar\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e \u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nb\"\u003eyyyy-mm-dd\u003c/span\u003e \u003cspan class=\"nb\"\u003einstead\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们可以使用这种行为约束 \u003ccode\u003eMAIN multi\u003c/code\u003e 候选者的字符串参数：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$date\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eposix\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这里额外的 \u003ccode\u003etry\u003c/code\u003e 是因为子类型约束后面的 \u003ccode\u003ewhere\u003c/code\u003e 不应该抛出异常, 而只是返回一个假值。\u003c/p\u003e\n\u003cp\u003e现在它的工作得像预期的一样:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450915200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"处理时间\"\u003e处理时间\u003c/h2\u003e\n\u003cp\u003e剩下要实现的功能是把日期和时间转换为时间戳。换句话说, 我们想这样调用 \u003ccode\u003eautotime 2015-12-24 11:23:00\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$time\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$d\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$date\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$time\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$minute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$second\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$time\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003edate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$d\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$hour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$minute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$second\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eposix\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$d\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eposix\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e凭借尾部的?, 新的第二个参数是可选的 。 如果存在第二个参数, 我们用冒号将时间字符串分割成小时,分钟和秒。 我写的第一个本能是使用较短的变量名称, \u003ccode\u003emy($h, $m, $s) = $time.split(':')\u003c/code\u003e, 但然后调用 \u003ccode\u003eDateTime\u003c/code\u003e 构造函数看起来像这样：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003edate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$d\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003ehour\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$h\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eminute\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$m\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003esecond\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所以构造函数的命名参数使我选择更多的自解释变量名。\u003c/p\u003e\n\u003cp\u003e所以, 这个可以工作:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"s\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"s\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e1450956180\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e而且我们还可以检测它的原形:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"mi\"\u003e1450956180\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2015\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"mi\"\u003e24\u003c/span\u003e \u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"s\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"s\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"系好你的安全带\"\u003e系好你的安全带\u003c/h2\u003e\n\u003cp\u003eRaku 的隐式变量或主题变量:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e产生如下输出:\u003c/p\u003e\n\u003cp\u003e[source]\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这个例子中没有显式的迭代变量, 所以 Perl 隐式地把当前循环的值绑定给叫做 \u003ccode\u003e$_\u003c/code\u003e 的变量。方法调用 \u003ccode\u003e.say\u003c/code\u003e 是 \u003ccode\u003e$_.say\u003c/code\u003e 的缩写。由于我们有一个子例程在同一个变量上调用了 6 个方法, 所以使用 \u003ccode\u003e$_\u003c/code\u003e 会有很好的可视效果:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eformatter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%04d-%02d-%02d %02d:%02d:%02d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eyear\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emonth\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eday\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你不想求助于函数定义在词法作用域中设置 \u003ccode\u003e$_\u003c/code\u003e, 那么你可以使用 \u003ccode\u003egiven VALUE BLOCK\u003c/code\u003e 结构:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;formatter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku 还提供了对 \u003ccode\u003e$_\u003c/code\u003e 变量的条件语句的快捷方式,可以用作一个通用的switch语句：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$timestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;formatter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果你有一个只读的变量或参数, 那么你可以不使用 \u003ccode\u003e$\u003c/code\u003e 符号, 虽然你可以在声明时使用反斜线:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \\\u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;formatter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所以现在完整的代码看起来像这样:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \\\u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eformatter\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esprintf\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e%04d-%02d-%02d %02d:%02d:%02d\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eyear\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emonth\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e  \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eday\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ehour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eminute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esecond\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003egiven\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e\u0026amp;formatter\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDate\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003edefault\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$time\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$d\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$date\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$time\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nv\"\u003e$hour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$minute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$second\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e$time\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esplit\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003edate\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$d\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$hour\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$minute\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$second\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eposix\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003eelse\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$d\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"kt\"\u003eDateTime\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eposix\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"main-魔法\"\u003eMAIN 魔法\u003c/h2\u003e\n\u003cp\u003e为我们调用 \u003ccode\u003esub MAIN\u003c/code\u003e 的魔法还为我们提供了一个自动化的用法消息, 如果我们用不匹配任何 \u003ccode\u003emulti\u003c/code\u003e 的参数调用 MAIN, 例如调用时不提供参数:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"nf\"\u003eautotime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eUsage:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003edate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们可以通过在 MAIN subs 之前添加语义注释来为这些用法行添加简短描述:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ch\"\u003e#!/usr/bin/env raku\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003eConvert timestamp to ISO date\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eInt\u003c/span\u003e \\\u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003e#| \u003c/span\u003e\u003cspan class=\"sd\"\u003eConvert ISO date to timestamp\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sd\"\u003e\u003c/span\u003e\u003cspan class=\"k\"\u003emulti\u003c/span\u003e \u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nb\"\u003eMAIN\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$date\u003c/span\u003e \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003etry\u003c/span\u003e \u003cspan class=\"kt\"\u003eDate\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e \u003cspan class=\"nv\"\u003e$time\u003c/span\u003e\u003cspan class=\"o\"\u003e?\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在用法信息变为了:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$\u003c/span\u003e \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"nf\"\u003eautotime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eUsage:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003etimestamp\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003eConvert\u003c/span\u003e \u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e \u003cspan class=\"nb\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003eISO\u003c/span\u003e \u003cspan class=\"n\"\u003edate\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e./\u003c/span\u003e\u003cspan class=\"n\"\u003eautotime\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"n\"\u003edate\u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003etime\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e \u003cspan class=\"o\"\u003e--\u003c/span\u003e \u003cspan class=\"n\"\u003eConvert\u003c/span\u003e \u003cspan class=\"n\"\u003eISO\u003c/span\u003e \u003cspan class=\"n\"\u003edate\u003c/span\u003e \u003cspan class=\"nb\"\u003eto\u003c/span\u003e \u003cspan class=\"n\"\u003etimestamp\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"总结\"\u003e总结\u003c/h2\u003e\n\u003cp\u003e我们已经看到了一些 Date 和 DateTime 算法, 但令人兴奋的部分是 multi dispatch, 命名参数,带有 where 从句的子类型约束, given/ when 和 隐式 $_ 变量, 以及一些魔法, 当涉及到 MAIN subs 时。\u003c/p\u003e\n\u003cp\u003e原文请参见 \u003ca href=\"https://perlgeek.de/blog-en/perl-6/2016-book-timestamp-converter.html\"\u003eRaku By Example: Datetime Conversion for the Command Line\u003c/a\u003e\u003c/p\u003e\n","text":"Raku By Example: Datetime Conversion for the Command Line 我偶尔会在数据库中存储 UNIX 时间戳, 即从 1970-01-01 开始的秒数。我在按照日期查询数据库中的数据时, 需要将 UNIX 时间戳转换为人类可读的时间, 所以我写了个很小的工具来帮助我在 UNIX 时间戳和日期/时间之间来回转换:\n$ autotime 2015-12-24 1450915200 $ autotime 2015-12-24 11:23:00 1450956180 $ autotime 1450915200 2015-12-24 $ autotime 1450956180 2015-12-24 11:23:00 使用库 Raku 的 DateTime 和 Date 模块会做实际的转换。 DateTime.new 构造函数有一个接收单个整数作为 UNIX 时间戳的变体:\n$ raku -e \u0026#34;say DateTime.new(1480915200)\u0026#34; 2016-12-05T05:20:00Z 看起来我们已经完成了一个方向的转换,对吗?\n#!/usr/bin/env raku sub MAIN (Int $timestamp) { say DateTime.new($timestamp) } 我们来运行它:\n$ autotime 1450915200 Invalid DateTime string \u0026#39;1450915200\u0026#39;; use an ISO 8601 timestamp (yyyy-mm-ddThh:mm:ssZ or yyyy-mm-ddThh:mm:ss+01:00) instead in sub MAIN at autotime line 2 in block \u0026lt;unit\u0026gt; at autotime line 2 发生了什么？看起来 DateTime 构造函数把参数当作了字符串, 尽管 sub MAIN 的参数被声明为 Int。怎么会变成那样呢? 我们添加一些调试输出:\n#!/usr/bin/env raku sub MAIN(Int $timestamp) { say $timestamp.^name; say DateTime.new($timestamp) } 打印出:\nIntStr $thing.^name 是 $thing 所属类的名字。 IntStr 是 Int 和 Str 类的子类, 这就是为什么 DateTime 构造函数正常地认为 $timestamp 是一个 Str 的原因。\n长话短说, 我们可以在参数前添加一个 + 前缀使参数强制为 \u0026ldquo;真\u0026rdquo; 整数, 这也是将字符串转为数值的通用机制:\n#!/usr/bin/env raku sub MAIN(Int $timestamp) { say DateTime.new(+$timestamp) } 这一次它真的工作了:\n$ ./autotime-01.p6 1450915200 2015-12-24T00:00:00Z 输出是 ISO 8601 样式的时间戳格式, 对眼睛不太友好。对于小时,分钟和秒数都为 0 的日期, 我们真正想要的只有日期:\n#!/usr/bin/env raku sub MAIN(Int $timestamp) { my $dt = DateTime.new(+$timestamp); if $dt.hour == 0 \u0026amp;\u0026amp; $dt.minute == 0 \u0026amp;\u0026amp; $dt.second == 0 { say $dt.Date; } else { say $dt; } } 这样看起来更好一点:\n$ ./autotime 1450915200 2015-12-24 但是上面那种三个比较都为 0 的写法实在太丑了, 如果是 4 个, 5 个, 6 个\u0026hellip; 那就是又丑又长。Raku 有一个 all Junction:\nif all($dt.hour, $dt.minute, $dt.second) == 0 { say $dt.Date; } all(...) 创建了一个 Junction, 它是几个其他值的组合值, 它也存储了一个逻辑模式。当你比较一个 junction 和其他值的时候, 那个比较会自动地应用到该 junction 中的所有值上。if 语句在布尔上下文中对该 junction 进行求值, 在这个例子中, 当所有的比较为 True 时, if 也返回 True。\n其他类型的 junction 还有 any, all, none。考虑到在布尔上下文中, 0 是唯一一个求值为 false 的整数, 我们甚至可以把上面的例子写为:\nif none($dt.hour, $dt.minute, $dt.second) { say $dt.Date; } 但是也可能没有必要搞得那么复杂, 如果 $dt 这个 Datetime 对象转换为 Date 然后再转换为 DateTime 而不丢失信息, 那么它肯定是一个 Date:\nif $dt.Date.DateTime == $dt { say $dt.Date; } else { say $dt; } DateTime 格式化 如果时间戳没有被解析为整天, 那么当前我们的脚本的输出就会像这样:\n2015-12-24T00:00:01Z 其中的 \u0026ldquo;Z\u0026rdquo; 表示 UTC 或 \u0026ldquo;Zulu\u0026rdquo; 时区。\nDateTime 类支持自定义格式化, 所以我们来写一个:\nsub MAIN(Int $timestamp) { my $dt = DateTime.new(+$timestamp, formatter =\u0026gt; sub ($o) { sprintf \u0026#39;%04d-%02d-%02d %02d:%02d:%02d\u0026#39;, $o.year, $o.month, $o.day, $o.hour, $o.minute, $o.second, }); if $dt.Date.DateTime == $dt { say $dt.Date; } else { say $dt.Str; } } 现在输出看起来更好看了:\n./autotime 1450915201 2015-12-24 00:00:01 语法 formatter =\u0026gt; ... 在参数上下文中表示具名参数。 这样的代码我不喜欢, 因为在 DateTime.new 调用中它是内联的, 这并不清晰。\n我们来单独写一个例程:\n#!/usr/bin/env raku sub MAIN(Int $timestamp) { sub formatter($o) { sprintf \u0026#39;%04d-%02d-%02d %02d:%02d:%02d\u0026#39;, $o.year, $o.month, $o.day, $o.hour, $o.minute, $o.second, } my $dt = DateTime.new(+$timestamp, formatter =\u0026gt; \u0026amp;formatter); if $dt.Date.DateTime == $dt { say $dt.Date; } else { say $dt.Str; } } 是的, 你可以把一个子例程声明放在另一个子例程声明的正文中; 子例程只是一个普通的词法符号,就像一个用 my 声明的变量。\n在行 my $dt = DateTime.new(+$timestamp,formatter =\u0026gt; \u0026amp;formatter); 中, 语法 \u0026amp;formatter 引用子例程作为一个对象,而不调用它。\n这是 Raku, formatter =\u0026gt; \u0026amp;formatter 有一个简写: \u0026amp;formatter。 作为一般规则,如果要填充一个名称为变量名称并且其值为变量值的命名参数, 可以通过写入 :$variable 创建它。 作为扩展, :thing 是 thing =\u0026gt; True 的缩写。\n寻找其他途径 现在, 从时间戳到日期和时间的转换工作的很好, 让我们看另一种途径。 我们的小工具需要解析输入, 并决定输入的是时间戳还是日期和可选的时间。\n一种无聊的方式是使用条件:\nsub MAIN($input) { if $input ~~ / ^ \\d+ $ / { # convert from timestamp to date/datetime } else { # convert from date to timestamp } } 但我讨厌无聊, 所以我想看看一个更令人兴奋的（端可扩展）方法。\nRaku 支持多重分派。这意味着您可以有多个具有相同名称但不同签名的子例程。 Raku 自动决定要调用哪一个。 您必须通过编写 multi sub 而不是 sub 来显式地启用此功能, 以便 Raku 可以捕获意外的重新声明。\n让我们看看它在实际中的运用:\n#!/usr/bin/env raku multi sub MAIN(Int $timestamp) { sub formatter($o) { sprintf \u0026#39;%04d-%02d-%02d %02d:%02d:%02d\u0026#39;, $o.year, $o.month, $o.day, $o.hour, $o.minute, $o.second, } my $dt = DateTime.new(+$timestamp, :\u0026amp;formatter); if $dt.Date.DateTime == $dt { say $dt.Date; } else { say $dt.Str; } } multi sub MAIN(Str $date) { say Date.new($date).DateTime.posix } 我们看一下效果:\n$ ./autotime 2015-12-24 1450915200 $ ./autotime 1450915200 Ambiguous call to \u0026#39;MAIN\u0026#39;; these signatures all match: :(Int $timestamp) :(Str $date) in block \u0026lt;unit\u0026gt; at ./autotime line 17 不是我所想象的。问题又是整数参数自动被转换为了 IntStr, Int 和 Str multi（或候选）都接受它作为参数。\n避免这种错误的最简单的方法是缩小 Str 候选者接受的字符串的种类。 经典的方法是用一个正则表达式粗略验证传入的参数:\nmulti sub MAIN(Str $date where /^ \\d+ \\- \\d+ \\- \\d+ $ /) { say Date.new($date).DateTime.posix } 它确实能工作, 但为什么重复 Date.new 已经有用于验证日期字符串的逻辑？ 如果你传递一个看起来不像日期的字符串参数,你会得到这样的错误：\nInvalid Date string \u0026#39;foobar\u0026#39;; use yyyy-mm-dd instead 我们可以使用这种行为约束 MAIN multi 候选者的字符串参数：\nmulti sub MAIN(Str $date where { try Date.new($_) }) { say Date.new($date).DateTime.posix } 在这里额外的 try 是因为子类型约束后面的 where 不应该抛出异常, 而只是返回一个假值。\n现在它的工作得像预期的一样:\n$ ./autotime 2015-12-24; 1450915200 $ ./autotime 1450915200 2015-12-24 处理时间 剩下要实现的功能是把日期和时间转换为时间戳。换句话说, 我们想这样调用 autotime 2015-12-24 11:23:00:\nmulti sub MAIN(Str $date where { try Date.new($_) }, Str $time?) { my $d = Date.new($date); if $time { my ( $hour, $minute, $second ) = $time.split(\u0026#39;:\u0026#39;); say DateTime.new(date =\u0026gt; $d, :$hour, :$minute, :$second).posix; } else { say $d.DateTime.posix; } } 凭借尾部的?, 新的第二个参数是可选的 。 如果存在第二个参数, 我们用冒号将时间字符串分割成小时,分钟和秒。 我写的第一个本能是使用较短的变量名称, my($h, $m, $s) = $time.split(':'), 但然后调用 DateTime 构造函数看起来像这样：\nDateTime.new(date =\u0026gt; $d, hour =\u0026gt; $h, minute =\u0026gt; $m, second =\u0026gt; $s); 所以构造函数的命名参数使我选择更多的自解释变量名。\n所以, 这个可以工作:\n./autotime 2015-12-24 11:23:00 1450956180 而且我们还可以检测它的原形:\n$ ./autotime 1450956180 2015-12-24 11:23:00 系好你的安全带 Raku 的隐式变量或主题变量:\nfor 1..3 { .say } 产生如下输出:\n[source]\n1 2 3 这个例子中没有显式的迭代变量, 所以 Perl 隐式地把当前循环的值绑定给叫做 $_ 的变量。方法调用 .say 是 $_.say 的缩写。由于我们有一个子例程在同一个变量上调用了 6 个方法, 所以使用 $_ 会有很好的可视效果:\nsub formatter($_) { sprintf \u0026#39;%04d-%02d-%02d %02d:%02d:%02d\u0026#39;, .year, .month, .day, .hour, .minute, .second, } 如果你不想求助于函数定义在词法作用域中设置 $_, 那么你可以使用 given VALUE BLOCK 结构:\ngiven DateTime.new(+$timestamp, :\u0026amp;formatter) { if .Date.DateTime == $_ { say .Date; } else { .say; } } Raku 还提供了对 $_ 变量的条件语句的快捷方式,可以用作一个通用的switch语句：\ngiven DateTime.new(+$timestamp, :\u0026amp;formatter) { when .Date.DateTime == $_ { say .Date } default { .say } } 如果你有一个只读的变量或参数, 那么你可以不使用 $ 符号, 虽然你可以在声明时使用反斜线:\nmulti sub MAIN(Int \\timestamp) { ... given DateTime.new(+timestamp, :\u0026amp;formatter) { ... } } 所以现在完整的代码看起来像这样:\n#!/usr/bin/env raku multi sub MAIN(Int \\timestamp) { sub formatter($_) { sprintf \u0026#39;%04d-%02d-%02d %02d:%02d:%02d\u0026#39;, .year, .month, .day, .hour, .minute, .second, } given DateTime.new(+timestamp, :\u0026amp;formatter) { when .Date.DateTime == $_ { say .Date } default { .say } } } multi sub MAIN(Str $date where { try Date.new($_) }, Str $time?) { my $d = Date.new($date); if $time { my ( $hour, $minute, $second ) = $time.split(\u0026#39;:\u0026#39;); say DateTime.new(date =\u0026gt; $d, :$hour, :$minute, :$second).posix; } else { say $d.DateTime.posix; } } MAIN 魔法 为我们调用 sub MAIN 的魔法还为我们提供了一个自动化的用法消息, 如果我们用不匹配任何 multi 的参数调用 MAIN, 例如调用时不提供参数:\n$ ./autotime Usage: ./autotime \u0026lt;timestamp\u0026gt; ./autotime \u0026lt;date\u0026gt; [\u0026lt;time\u0026gt;] 我们可以通过在 MAIN subs 之前添加语义注释来为这些用法行添加简短描述:\n#!/usr/bin/env raku #| Convert timestamp to ISO date multi sub MAIN(Int \\timestamp) { ... } #| Convert ISO date to timestamp multi sub MAIN(Str $date where { try Date.new($_) }, Str $time?) { ... } 现在用法信息变为了:\n$ ./autotime Usage: ./autotime \u0026lt;timestamp\u0026gt; -- Convert timestamp to ISO date ./autotime \u0026lt;date\u0026gt; [\u0026lt;time\u0026gt;] -- Convert ISO date to timestamp 总结 我们已经看到了一些 Date 和 DateTime 算法, 但令人兴奋的部分是 multi dispatch, 命名参数,带有 where 从句的子类型约束, given/ when 和 隐式 $_ 变量, 以及一些魔法, 当涉及到 MAIN subs 时。\n原文请参见 Raku By Example: Datetime Conversion for the Command Line\n"},"name":"Raku 时间戳转换器命令行版","published":"2016-12-31T23:14:12Z","summary":"Raku By Example: Datetime Conversion for the Command Line 我偶尔会在数据库中存储 UNIX 时间戳, 即从 1970-01-01 开始的秒数。我在按照日期查询数据库中的数据时, 需要将 UNIX 时间戳转换为人类可读的时间, 所以我写了个很小的工具来帮助我在 UNIX 时间戳和日期/时间之间来回转换:\n$ autotime 2015-12-24 1450915200 $ autotime 2015-12-24 11:23:00 1450956180 $ autotime 1450915200 2015-12-24 $ autotime 1450956180 2015-12-24 11:23:00 使用库 Raku 的 DateTime 和 Date 模块会做实际的转换。 DateTime.new 构造函数有一个接收单个整数作为 UNIX 时间戳的变体:\n$ raku -e \u0026#34;say DateTime.new(1480915200)\u0026#34; 2016-12-05T05:20:00Z 看起来我们已经完成了一个方向的转换,对吗?\n#!/usr/bin/env raku sub MAIN (Int $timestamp) { say DateTime.new($timestamp) } 我们来运行它:\n$ autotime 1450915200 Invalid DateTime string \u0026#39;1450915200\u0026#39;; use an ISO 8601 timestamp (yyyy-mm-ddThh:mm:ssZ or yyyy-mm-ddThh:mm:ss+01:00) instead in sub MAIN at autotime line 2 in block \u0026lt;unit\u0026gt; at autotime line 2 发生了什么？看起来 DateTime 构造函数把参数当作了字符串, 尽管 sub MAIN 的参数被声明为 Int。怎么会变成那样呢?","type":"entry","url":"http://localhost:1313/raku/2016-12-31-raku%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2%E5%99%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%89%88/"},{"content":{"html":"\u003cp\u003e如何使用 Grammar 分割一个有规律的文本文件? 首先这个文本有规律, 但是却是多行的。\n我想将这样的文档分为独立的. 比如下面这个例子, 我想将他们分成3个独立的文本, 每个文本包含: [时间] Title 以及下面的 content lines. 实际的文件会有上千个, 最终输出的文本的名字是按照括号里面的时间来。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003esample.txt\u003c/strong\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e[28/04/2015 12:32] Title1\n\ncontent line 1\ncontent line 2\ncontent line 3\ncontent line 4\ncontent line 5\n\nbalabala\nbalabala\n\n[28/04/2015 12:16] Title2\n\ncontent line 6\nbalabala\ncontent line 7\n\n[27/04/2015 17:30] ​Title3\n\ncontent line 8\ncontent line 9\ncontent line 10\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e下面是解析：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eGrammar::Tracer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 开启 Grammar 调试有助于排错\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eStructedText\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eentry\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eentry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e   \u003c/span\u003e\u003cspan class=\"c1\"\u003e# 每一项有一个标题\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e# 每个标题下面有很多行\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token head     \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003edatetime\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \\\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token datetime \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003efiledate\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \\\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003efiletime\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token filedate \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+]+\u003c/span\u003e   \u003cspan class=\"nv\"\u003e%\u003c/span\u003e   \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e               \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token filetime \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+]+\u003c/span\u003e   \u003cspan class=\"nv\"\u003e%\u003c/span\u003e   \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e               \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token title    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e          \\\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e                   \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token line  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\t\t    \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e!head\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 前面不是 head 标题\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e.\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 点号匹配换行符\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e]+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\u003c/span\u003e\u003cspan class=\"c1\"\u003e# Method \u0026#39;ast\u0026#39; not found for invocant of class \u0026#39;Str\u0026#39;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# make ~$\u0026lt;filetime\u0026gt;.subst(\u0026#39;:\u0026#39;, \u0026#39;-\u0026#39;, :g).ast;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# 字符串是没有 ast 方法的, Match 对象才有。\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003eclass StructedText\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eActions\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e                            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003edatetime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e:/\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 在datime 中处理文件名, 替换掉特殊符号\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$\u0026lt;datetime\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# head 使用了 datetime 这个 submatch 来构建 ast\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eentry\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;head\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003east\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;line\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"k\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e   \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;entry\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                 \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003emy \u003c/span\u003e\u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sr\"\u003e StructedText\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eActions\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003enew;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003emy \u003c/span\u003e\u003cspan class=\"nv\"\u003e$parsed\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sr\"\u003e StructedText\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003eparsefile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esample.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e, \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003emade;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003eif \u003c/span\u003e\u003cspan class=\"nv\"\u003e$parsed\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@$parsed\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003east\u003c/code\u003e 和 \u003ccode\u003emade\u003c/code\u003e 一样, 都是使用孩子节点上已经制造好的(\u003ccode\u003emake\u003c/code\u003e)的 ast, 处理后再附件到(\u003ccode\u003e$/.make\u003c/code\u003e)父节点的 \u003ccode\u003e$/\u003c/code\u003e 上。\n例如, 我们的 \u003ccode\u003eTOP\u003c/code\u003e 在使用 \u003ccode\u003eentry\u003c/code\u003e 时, 需要从 entry 中取回 ast (\u003ccode\u003e$\u0026lt;entry\u0026gt;».ast\u003c/code\u003e) 供它附加.而 method entry 中用到了 \u003ccode\u003e\u0026lt;head\u0026gt;\u003c/code\u003e, 这时 \u003c!-- raw HTML omitted --\u003e 一定是制造好了的(\u003ccode\u003emake\u003c/code\u003e), 我们现在要用它, 就使用 \u003ccode\u003e.ast\u003c/code\u003e 语法来取回这个 ast 片段, 同理, method entry 中用到了 \u003ccode\u003e$line\u003c/code\u003e, 则子节点 \u003ccode\u003e$line\u003c/code\u003e 已经为我们制造好了(\u003ccode\u003emethod line($/)  { $/.make: ~$/ }\u003c/code\u003e), 使用时用 \u003ccode\u003e.made\u003c/code\u003e 方法取回就行了。\u003c/p\u003e\n\u003cp\u003e总而言之, TOP 是树根的话, 那么这一级会取回所有的 AST 块,  而它的孩子节点会依次取回下一节点的 AST 块, 逐级逐级的准备好(\u003ccode\u003emake\u003c/code\u003e)数据块, 然后再逐级往上附加数据块。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e28-04-2015 12-32\n28-04-2015 12-16\n27-04-2015 17-30\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e完整的代码如下:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003egrammar\u003c/span\u003e \u003cspan class=\"nc\"\u003eStructedText\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eentry\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"ni\"\u003e$\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003etoken\u003c/span\u003e \u003cspan class=\"nf\"\u003eentry\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003ehead\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e   \u003c/span\u003e\u003cspan class=\"c1\"\u003e# 每一项有一个标题\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e        \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003eline\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"se\"\u003e\\s\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"c1\"\u003e# 每个标题下面有很多行\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e\u003c/span\u003e\u003cspan class=\"sr\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token head     \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003edatetime\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \\\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003etitle\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token datetime \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e  \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003efiledate\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e \\\u003cspan class=\"k\"\u003es\u003c/span\u003e\u003cspan class=\"p\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e  \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"nf\"\u003efiletime\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token filedate \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+]+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token filetime \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e[\u003c/span\u003e\\\u003cspan class=\"nb\"\u003ed\u003c/span\u003e\u003cspan class=\"o\"\u003e+]+\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token title    \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \\\u003cspan class=\"n\"\u003eN\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e          \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e    token line  \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e[\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003e!head\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e       \u003cspan class=\"c1\"\u003e# 前面不是 head 标题\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"o\"\u003e.\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 点号匹配换行符\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"o\"\u003e]+\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003eclass StructedText\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eActions\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003eline\u003c/span\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e                            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003efiledate\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e:/\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003ehead\u003c/span\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esubst\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"k\"\u003erx\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u0026lt;[\u003c/span\u003e\u003cspan class=\"sr\"\u003e:/\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;/\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eentry\u003c/span\u003e   \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;head\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"s\"\u003east\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;line\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"k\"\u003emade\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nf\"\u003eTOP\u003c/span\u003e     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$/\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emake\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$\u0026lt;entry\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e».\u003c/span\u003e\u003cspan class=\"nb\"\u003east\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                 \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003emy \u003c/span\u003e\u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sr\"\u003e StructedText\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"na\"\u003eActions\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003enew;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003emy \u003c/span\u003e\u003cspan class=\"nv\"\u003e$parsed\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"sr\"\u003e StructedText\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003eparsefile\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003esample.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e, \u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$actions\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"ni\"\u003e.\u003c/span\u003e\u003cspan class=\"sr\"\u003emade;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"sr\"\u003eif \u003c/span\u003e\u003cspan class=\"nv\"\u003e$parsed\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e@$parsed\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$filename\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekey\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ematch\u003c/span\u003e\u003cspan class=\"p\"\u003e(/\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e[\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e\u0026lt;(\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"p\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e[\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u003c/span\u003e\u003cspan class=\"sr\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e]\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e)\u0026gt;\u003c/span\u003e\u003cspan class=\"sr\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;/)\u003c/span\u003e  \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e.txt\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003eopen\u003c/span\u003e \u003cspan class=\"nv\"\u003e$filename\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e\u003cspan class=\"nv\"\u003e$e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekey\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nv\"\u003e$e\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalue\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$v\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"nv\"\u003e$v\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nv\"\u003e$fh\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclose\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003e生成文件 \u003c/span\u003e\u003cspan class=\"nv\"\u003e$filename\u003c/span\u003e\u003cspan class=\"s2\"\u003e \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"sr\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"如何使用 Grammar 分割一个有规律的文本文件? 首先这个文本有规律, 但是却是多行的。 我想将这样的文档分为独立的. 比如下面这个例子, 我想将他们分成3个独立的文本, 每个文本包含: [时间] Title 以及下面的 content lines. 实际的文件会有上千个, 最终输出的文本的名字是按照括号里面的时间来。\nsample.txt\n[28/04/2015 12:32] Title1 content line 1 content line 2 content line 3 content line 4 content line 5 balabala balabala [28/04/2015 12:16] Title2 content line 6 balabala content line 7 [27/04/2015 17:30] ​Title3 content line 8 content line 9 content line 10 下面是解析：\nuse Grammar::Tracer; # 开启 Grammar 调试有助于排错 grammar StructedText { token TOP { ^ \u0026lt;entry\u0026gt;+ $ } token entry { \u0026lt;head\u0026gt; \\s* # 每一项有一个标题 \u0026lt;line\u0026gt;+ \\s* # 每个标题下面有很多行 } token head { \u0026#39;[\u0026#39; \u0026lt;datetime\u0026gt; \u0026#39;]\u0026#39; \\s+ \u0026lt;title\u0026gt; } token datetime { \u0026lt;filedate\u0026gt; \\s+ \u0026lt;filetime\u0026gt; } token filedate { [\\d+]+ % \u0026#39;/\u0026#39; } token filetime { [\\d+]+ % \u0026#39;:\u0026#39; } token title { \\N+ } token line { [ \u0026lt;!head\u0026gt; # 前面不是 head 标题 . # 点号匹配换行符 ]+ } } # Method \u0026#39;ast\u0026#39; not found for invocant of class \u0026#39;Str\u0026#39; # make ~$\u0026lt;filetime\u0026gt;.subst(\u0026#39;:\u0026#39;, \u0026#39;-\u0026#39;, :g).ast; # 字符串是没有 ast 方法的, Match 对象才有。 class StructedText::Actions { method line($/) { $/.make: ~$/ } method title($/) { $/.make: ~$/} method datetime($/) { $/.make: ~$/.subst(rx/\u0026lt;[:/]\u0026gt;/, \u0026#39;-\u0026#39;, :g) } # 在datime 中处理文件名, 替换掉特殊符号 method head($/) { $/.make: ~$\u0026lt;datetime\u0026gt;.ast } # head 使用了 datetime 这个 submatch 来构建 ast method entry($/) { make $\u0026lt;head\u0026gt;.ast =\u0026gt; $\u0026lt;line\u0026gt;».made; } method TOP($/) { $/.make: $\u0026lt;entry\u0026gt;».ast; } } my $actions = StructedText::Actions.new; my $parsed = StructedText.parsefile(\u0026#39;sample.txt\u0026#39;, :$actions).made; if $parsed { for @$parsed -\u0026gt; $e { say ~$e.key; } } ast 和 made 一样, 都是使用孩子节点上已经制造好的(make)的 ast, 处理后再附件到($/.make)父节点的 $/ 上。 例如, 我们的 TOP 在使用 entry 时, 需要从 entry 中取回 ast ($\u0026lt;entry\u0026gt;».ast) 供它附加.而 method entry 中用到了 \u0026lt;head\u0026gt;, 这时 一定是制造好了的(make), 我们现在要用它, 就使用 .ast 语法来取回这个 ast 片段, 同理, method entry 中用到了 $line, 则子节点 $line 已经为我们制造好了(method line($/) { $/.make: ~$/ }), 使用时用 .made 方法取回就行了。\n总而言之, TOP 是树根的话, 那么这一级会取回所有的 AST 块, 而它的孩子节点会依次取回下一节点的 AST 块, 逐级逐级的准备好(make)数据块, 然后再逐级往上附加数据块。\n28-04-2015 12-32 28-04-2015 12-16 27-04-2015 17-30 完整的代码如下:\ngrammar StructedText { token TOP { ^ \u0026lt;entry\u0026gt;+ $ } token entry { \u0026lt;head\u0026gt; \\s* # 每一项有一个标题 \u0026lt;line\u0026gt;+ \\s* # 每个标题下面有很多行 } token head { \u0026#39;[\u0026#39; \u0026lt;datetime\u0026gt; \u0026#39;]\u0026#39; \\s+ \u0026lt;title\u0026gt; } token datetime { \u0026lt;filedate\u0026gt; \\s+ \u0026lt;filetime\u0026gt; } token filedate { [\\d+]+ % \u0026#39;/\u0026#39; } token filetime { [\\d+]+ % \u0026#39;:\u0026#39; } token title { \\N+ } token line { [ \u0026lt;!head\u0026gt; # 前面不是 head 标题 . # 点号匹配换行符 ]+ } } class StructedText::Actions { method line ($/) { $/.make: ~$/ } method filedate($/) { $/.make: ~$/.subst(rx/\u0026lt;[:/]\u0026gt;/, \u0026#39;-\u0026#39;, :g) } method head ($/) { $/.make: ~$/.subst(rx/\u0026lt;[:/]\u0026gt;/, \u0026#39;-\u0026#39;, :g) } method entry ($/) { make $\u0026lt;head\u0026gt;.ast =\u0026gt; $\u0026lt;line\u0026gt;».made; } method TOP ($/) { $/.make: $\u0026lt;entry\u0026gt;».ast; } } my $actions = StructedText::Actions.new; my $parsed = StructedText.parsefile(\u0026#39;sample.txt\u0026#39;, :$actions).made; if $parsed { for @$parsed -\u0026gt; $e { my $filename = ~$e.key.match(/\u0026#39;[\u0026#39; \u0026lt;( \u0026lt;-[\\[\\]]\u0026gt;+ )\u0026gt; \u0026#39;]\u0026#39;/) ~ \u0026#34;.txt\u0026#34;; my $fh = open $filename, :w; $fh.say: ~$e.key; for $e.value -\u0026gt; $v { $fh.say: $v; } $fh.close; say \u0026#34;生成文件 $filename \u0026#34;; } } "},"name":"Raku Grammar 之分割结构化文本","published":"2016-11-01T02:05:48Z","summary":"如何使用 Grammar 分割一个有规律的文本文件? 首先这个文本有规律, 但是却是多行的。 我想将这样的文档分为独立的. 比如下面这个例子, 我想将他们分成3个独立的文本, 每个文本包含: [时间] Title 以及下面的 content lines. 实际的文件会有上千个, 最终输出的文本的名字是按照括号里面的时间来。\nsample.txt\n[28/04/2015 12:32] Title1 content line 1 content line 2 content line 3 content line 4 content line 5 balabala balabala [28/04/2015 12:16] Title2 content line 6 balabala content line 7 [27/04/2015 17:30] ​Title3 content line 8 content line 9 content line 10 下面是解析：\nuse Grammar::Tracer; # 开启 Grammar 调试有助于排错 grammar StructedText { token TOP { ^ \u0026lt;entry\u0026gt;+ $ } token entry { \u0026lt;head\u0026gt; \\s* # 每一项有一个标题 \u0026lt;line\u0026gt;+ \\s* # 每个标题下面有很多行 } token head { \u0026#39;[\u0026#39; \u0026lt;datetime\u0026gt; \u0026#39;]\u0026#39; \\s+ \u0026lt;title\u0026gt; } token datetime { \u0026lt;filedate\u0026gt; \\s+ \u0026lt;filetime\u0026gt; } token filedate { [\\d+]+ % \u0026#39;/\u0026#39; } token filetime { [\\d+]+ % \u0026#39;:\u0026#39; } token title { \\N+ } token line { [ \u0026lt;!","type":"entry","url":"http://localhost:1313/raku/2016-11-01-raku-grammar%E4%B9%8B%E5%88%86%E5%89%B2%E7%BB%93%E6%9E%84%E5%8C%96%E6%96%87%E6%9C%AC/"},{"content":{"html":"\u003cp\u003e到目前为止(2016.10.26), Raku 的速度相比 Perl 5/Python 的差距还是很大的。以打印从 1 开始计数的第 10000 个素数为例, 使用如下版本的 Rakudo:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThis is Rakudo version 2016.07.1 built on MoarVM version 2016.07 implementing Raku.c.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e从程序执行耗费的时间来看, Raku 实在慢的如蜗牛。\u003c/p\u003e\n\u003ch2 id=\"并发打印第10000个素数\"\u003e并发打印第10000个素数\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003efind-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$count\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$channel\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eChannel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$promise\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003estart\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"nv\"\u003e$count\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nv\"\u003e$channel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esend\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"k\"\u003eLEAVE\u003c/span\u003e \u003cspan class=\"nv\"\u003e$channel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclose\u003c/span\u003e \u003cspan class=\"k\"\u003eunless\u003c/span\u003e \u003cspan class=\"nv\"\u003e$channel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eclosed\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nv\"\u003e$channel\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003elist\u003c/span\u003e \u003cspan class=\"k\"\u003ebut\u003c/span\u003e \u003cspan class=\"k\"\u003erole\u003c/span\u003e \u003cspan class=\"nc\"\u003e::\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003echannel\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$channel\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e};;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003efind-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e110000\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#for @primes {\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#    @primes.channel.close if $++ \u0026gt; 110000; # hard-close the channel after 110000 found primes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#    .say if $++ %% 100 # print every 100th prime\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e#}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@primes\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面的并发查找素数, 用时 \u003cstrong\u003e35\u003c/strong\u003e 秒多! \u003ca href=\"https://raw.githubusercontent.com/raku/specs/master/S14-roles-and-parametric-types.pod\"\u003ebut\u003c/a\u003e 的作用类似于 \u003ccode\u003edoes\u003c/code\u003e。\u003c/p\u003e\n\u003ch2 id=\"gathertake-版\"\u003egather/take 版\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003egather/take\u003c/code\u003e 类似于 Python 中的 \u003ccode\u003eyield\u003c/code\u003e , 用于惰性求值。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elazy\u003c/span\u003e \u003cspan class=\"k\"\u003egather\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"no\"\u003eInf\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003etake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e用时 25 秒多, 比并发版本的要快一点。\u003c/p\u003e\n\u003ch2 id=\"普通版本\"\u003e普通版本\u003c/h2\u003e\n\u003cp\u003e如果不使用 \u003ccode\u003eis-prime\u003c/code\u003e 函数, 查找第 10000 个素数就巨慢:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003elazy\u003c/span\u003e \u003cspan class=\"k\"\u003egather\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"nl\"\u003eCANDIDATE\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e  \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"mi\"\u003e110000\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$candidate\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \t \u003cspan class=\"k\"\u003efor\u003c/span\u003e  \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"nb\"\u003esqrt\u003c/span\u003e \u003cspan class=\"nv\"\u003e$candidate\u003c/span\u003e  \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$divisor\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \t\t\u003cspan class=\"nb\"\u003enext\u003c/span\u003e \u003cspan class=\"n\"\u003eCANDIDATE\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003e$candidate\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"nv\"\u003e$divisor\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \t \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \t\u003cspan class=\"nb\"\u003etake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$candidate\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下面这个 \u003ccode\u003elazy gather\u003c/code\u003e 根本没有起作用, 原因是 feed 运算符还没实现 lazy 求值? - 巨慢。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003elazy\u003c/span\u003e \u003cspan class=\"k\"\u003egather\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"o\"\u003e^\u003c/span\u003e\u003cspan class=\"no\"\u003eInf\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nb\"\u003etake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eis-prime\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e没有使用 \u003ccode\u003eis-prime\u003c/code\u003e 函数的普通指数运算也会巨慢:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nb\"\u003elazy\u003c/span\u003e \u003cspan class=\"k\"\u003egather\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e110000\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"nb\"\u003etake\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"nv\"\u003e%\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e||\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e==\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e     \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@vals\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e10000\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e \u003cspan class=\"o\"\u003e-\u003c/span\u003e \u003cspan class=\"k\"\u003eINIT\u003c/span\u003e \u003cspan class=\"nb\"\u003enow\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"到目前为止(2016.10.26), Raku 的速度相比 Perl 5/Python 的差距还是很大的。以打印从 1 开始计数的第 10000 个素数为例, 使用如下版本的 Rakudo:\nThis is Rakudo version 2016.07.1 built on MoarVM version 2016.07 implementing Raku.c.\n从程序执行耗费的时间来看, Raku 实在慢的如蜗牛。\n并发打印第10000个素数 sub find-prime($count) { my $channel = Channel.new; my $promise = start { for ^$count { $channel.send($_) if .is-prime; } LEAVE $channel.close unless $channel.closed; } return $channel.list but role :: { method channel { $channel } };; } my @primes = find-prime(110000); #for @primes { # @primes.channel.close if $++ \u0026gt; 110000; # hard-close the channel after 110000 found primes # .say if $++ %% 100 # print every 100th prime #} say @primes[10000]; say now - INIT now; 上面的并发查找素数, 用时 35 秒多! but 的作用类似于 does。\ngather/take 版 gather/take 类似于 Python 中的 yield , 用于惰性求值。\nmy @vals = lazy gather { for ^Inf { take $_ if .is-prime; } } say @vals[10000]; say now - INIT now; 用时 25 秒多, 比并发版本的要快一点。\n普通版本 如果不使用 is-prime 函数, 查找第 10000 个素数就巨慢:\nlazy gather { CANDIDATE: for 2 .. 110000 -\u0026gt; $candidate { for 2 .. sqrt $candidate -\u0026gt; $divisor { next CANDIDATE if $candidate % $divisor == 0; } take $candidate; } } ==\u0026gt; my @vals; say @vals[10000]; say now - INIT now; 下面这个 lazy gather 根本没有起作用, 原因是 feed 运算符还没实现 lazy 求值? - 巨慢。\nlazy gather { for ^Inf { take $_ if .is-prime; } } ==\u0026gt; my @vals; say @vals[10000]; say now - INIT now; 没有使用 is-prime 函数的普通指数运算也会巨慢:\nmy @vals = lazy gather { for 1..110000 { take $_ if (2 ** ($_ - 1) % $_ == 1 || $_ == 2); } } say @vals[10000]; say now - INIT now; "},"name":"第 10000 个素数","published":"2016-10-26T16:41:13Z","summary":"到目前为止(2016.10.26), Raku 的速度相比 Perl 5/Python 的差距还是很大的。以打印从 1 开始计数的第 10000 个素数为例, 使用如下版本的 Rakudo:\nThis is Rakudo version 2016.07.1 built on MoarVM version 2016.07 implementing Raku.c.\n从程序执行耗费的时间来看, Raku 实在慢的如蜗牛。\n并发打印第10000个素数 sub find-prime($count) { my $channel = Channel.new; my $promise = start { for ^$count { $channel.send($_) if .is-prime; } LEAVE $channel.close unless $channel.closed; } return $channel.list but role :: { method channel { $channel } };; } my @primes = find-prime(110000); #for @primes { # @primes.","type":"entry","url":"http://localhost:1313/raku/2016-10-26-%E7%AC%AC10000%E4%B8%AA%E7%B4%A0%E6%95%B0/"},{"content":{"html":"\u003ch2 id=\"with-orwith-without\"\u003ewith orwith without\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003ewith\u003c/code\u003e 语句就像 \u003ccode\u003eif\u003c/code\u003e 但是是为了测试是否定义而非真假。此外, 它主题化了条件, 这很像 \u003ccode\u003egiven\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"c1\"\u003e# print 0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e代替 \u003ccode\u003eelsif\u003c/code\u003e, \u003ccode\u003eorwith\u003c/code\u003e 用于把是否定义的测试链接起来:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# The below code says \u0026#34;Found a at 0\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eabc\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ewith\u003c/span\u003e   \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ea\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eFound a at \u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eorwith\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eb\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eFound b at \u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eorwith\u003c/span\u003e \u003cspan class=\"nv\"\u003e$s\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eindex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003ec\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eFound c at \u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eelse\u003c/span\u003e                 \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eDidn\u0026#39;t find a, b or c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e你可以混合基于 \u003ccode\u003eif\u003c/code\u003e 的从句和基于 \u003ccode\u003ewith\u003c/code\u003e 的从句：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# This says \u0026#34;Yes\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eif\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eorwith\u003c/span\u003e \u003cspan class=\"kt\"\u003eNil\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eNo\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"k\"\u003eorwith\u003c/span\u003e \u003cspan class=\"mi\"\u003e0\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eYes\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e至于 \u003ccode\u003eunless\u003c/code\u003e, 你可以使用 \u003ccode\u003ewithout\u003c/code\u003e 来检测未定义(undefinedness), 但是你不可以添加 \u003ccode\u003eelse\u003c/code\u003e 从句:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$answer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ewithout\u003c/span\u003e \u003cspan class=\"nv\"\u003e$answer\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003ewarn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eGot: \u003c/span\u003e\u003cspan class=\"nv\"\u003e$_\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们还有 \u003ccode\u003ewith\u003c/code\u003e 和 \u003ccode\u003ewithout\u003c/code\u003e 语句修饰符：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$answer\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"kt\"\u003eTrue\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eroll\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e \u003cspan class=\"k\"\u003ewith\u003c/span\u003e \u003cspan class=\"nv\"\u003e$answer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ewarn\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eundefined answer\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"k\"\u003ewithout\u003c/span\u003e \u003cspan class=\"nv\"\u003e$answer\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"with orwith without with 语句就像 if 但是是为了测试是否定义而非真假。此外, 它主题化了条件, 这很像 given:\nwith \u0026#34;abc\u0026#34;.index(\u0026#34;a\u0026#34;) { .say } # print 0 代替 elsif, orwith 用于把是否定义的测试链接起来:\n# The below code says \u0026#34;Found a at 0\u0026#34; my $s = \u0026#34;abc\u0026#34;; with $s.index(\u0026#34;a\u0026#34;) { say \u0026#34;Found a at $_\u0026#34; } orwith $s.index(\u0026#34;b\u0026#34;) { say \u0026#34;Found b at $_\u0026#34; } orwith $s.index(\u0026#34;c\u0026#34;) { say \u0026#34;Found c at $_\u0026#34; } else { say \u0026#34;Didn\u0026#39;t find a, b or c\u0026#34; } 你可以混合基于 if 的从句和基于 with 的从句：\n# This says \u0026#34;Yes\u0026#34; if 0 { say \u0026#34;No\u0026#34; } orwith Nil { say \u0026#34;No\u0026#34; } orwith 0 { say \u0026#34;Yes\u0026#34; }; 至于 unless, 你可以使用 without 来检测未定义(undefinedness), 但是你不可以添加 else 从句:\nmy $answer = Any; without $answer { warn \u0026#34;Got: $_\u0026#34; } 我们还有 with 和 without 语句修饰符：\nmy $answer = (Any, True).roll; say 42 with $answer; warn \u0026#34;undefined answer\u0026#34; without $answer; "},"name":"Raku 中的 with","published":"2016-10-19T19:17:03Z","summary":"with orwith without with 语句就像 if 但是是为了测试是否定义而非真假。此外, 它主题化了条件, 这很像 given:\nwith \u0026#34;abc\u0026#34;.index(\u0026#34;a\u0026#34;) { .say } # print 0 代替 elsif, orwith 用于把是否定义的测试链接起来:\n# The below code says \u0026#34;Found a at 0\u0026#34; my $s = \u0026#34;abc\u0026#34;; with $s.index(\u0026#34;a\u0026#34;) { say \u0026#34;Found a at $_\u0026#34; } orwith $s.index(\u0026#34;b\u0026#34;) { say \u0026#34;Found b at $_\u0026#34; } orwith $s.index(\u0026#34;c\u0026#34;) { say \u0026#34;Found c at $_\u0026#34; } else { say \u0026#34;Didn\u0026#39;t find a, b or c\u0026#34; } 你可以混合基于 if 的从句和基于 with 的从句：","type":"entry","url":"http://localhost:1313/raku/2016-10-19-raku%E4%B8%AD%E7%9A%84with/"},{"content":{"html":"\u003cp\u003e在折腾枚举作为子例程布尔选项的时候, 我发现默认的错误信息不够酷。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eConstraint type check failed for parameter '@options'\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e让错误信息变得更具体有点困难。我们来创建几个 exceptions 来告诉我们当东西出错时究竟发生了什么。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::Paramenter::Exclusive\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"kt\"\u003eException\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eParameters of \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eperl\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e are mutual exclusive\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e现在我们能检查 \u003cem\u003eFind::Type\u003c/em\u003e 的选项是否是独占的从而抛出异常。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"nf\"\u003eexclusive-argument\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e@options\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eFind::Type\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"nb\"\u003efail\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::Paramenter::Exclusive\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"n\"\u003eFind::Type\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::Parameter::UnrecognisedOption\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"kt\"\u003eException\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.unrecognised\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eOption \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.unrecognised\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e not any of \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e::\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eenums\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflat\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflat\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ejoin\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e, \u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因为枚举对类型而言是容器, 我们能使用集合操作符来检查并挑选出不匹配的选项(基本上, +options 吞噬的任何东西我们都不知道)。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"nb\"\u003efail\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::Parameter::UnrecognisedOption\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003enew\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003etype\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"n\"\u003eFind::Type\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"n\"\u003eFind::Options\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"s\"\u003eunrecognised\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eitem\u003c/span\u003e \u003cspan class=\"o\"\u003e∖\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eFind::Type::\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e|\u003c/span\u003e\u003cspan class=\"n\"\u003eFind::Options::\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003evalues\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e把错误信息拼接在一块儿有点复杂因为我们可以在一个给定的枚举中得到所有枚举键的一个列表, 除了那些不知道它们的限定名的。 我们不得不在枚举名的前面手动前置一个 \u003ccode\u003e::\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eclass\u003c/span\u003e \u003cspan class=\"ne\"\u003eX::Parameter::UnrecognisedOption\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"kt\"\u003eException\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003ehas\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.unrecognised\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"k\"\u003emethod\u003c/span\u003e \u003cspan class=\"nb\"\u003emessage\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"s2\"\u003eOption \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.unrecognised\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e not any of \u003c/span\u003e\u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$.type\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e.^\u003c/span\u003e\u003cspan class=\"nb\"\u003ename\u003c/span\u003e \u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e::\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"ow\"\u003exx\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"ow\"\u003eZ\u003c/span\u003e\u003cspan class=\"o\"\u003e~\u003c/span\u003e \u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eenums\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003ekeys\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eflat\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e这导致了一个更令人惊叹的错误信息:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eOption 42 not any of Type::File, Type::Dir, Type::Symlink, Options::Recursive, Options::Keep-going\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e这看起来都很普通。我们拥有一个参数化的吞噬参数, 它带有一个或多个枚举而那些枚举可能拥有一个 flag 告诉它们是否用作单选按钮。听起来这个 idiom 会很适合这个模块。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e翻译的不好, 最好看原文。\u003c/p\u003e\n\u003c/blockquote\u003e\n","text":"在折腾枚举作为子例程布尔选项的时候, 我发现默认的错误信息不够酷。\nConstraint type check failed for parameter '@options' 让错误信息变得更具体有点困难。我们来创建几个 exceptions 来告诉我们当东西出错时究竟发生了什么。\nclass X::Paramenter::Exclusive is Exception { has $.type; method message { \u0026#34;Parameters of {$.type.perl} are mutual exclusive\u0026#34; } } 现在我们能检查 Find::Type 的选项是否是独占的从而抛出异常。\n\u0026amp;\u0026amp; ( exclusive-argument(@options, Find::Type) or fail X::Paramenter::Exclusive.new(type =\u0026gt; Find::Type) ) class X::Parameter::UnrecognisedOption is Exception { has $.type; has $.unrecognised; method message { \u0026#34;Option { $.unrecognised } not any of { $.type.map({ (.^name ~ \u0026#39;::\u0026#39;) xx * Z~ .enums.keys.flat }).flat.join(\u0026#39;, \u0026#39;) }\u0026#34; } } 因为枚举对类型而言是容器, 我们能使用集合操作符来检查并挑选出不匹配的选项(基本上, +options 吞噬的任何东西我们都不知道)。\nor fail X::Parameter::UnrecognisedOption.new(type =\u0026gt; (Find::Type, Find::Options), unrecognised =\u0026gt; .item ∖ (|Find::Type::.values, |Find::Options::.values) ) 把错误信息拼接在一块儿有点复杂因为我们可以在一个给定的枚举中得到所有枚举键的一个列表, 除了那些不知道它们的限定名的。 我们不得不在枚举名的前面手动前置一个 ::。\nclass X::Parameter::UnrecognisedOption is Exception { has $.type; has $.unrecognised; method message { \u0026#34;Option { $.unrecognised } not any of { $.type.map: { (.^name ~ \u0026#39;::\u0026#39;) xx * Z~ .enums.keys.flat } }\u0026#34; } } 这导致了一个更令人惊叹的错误信息:\nOption 42 not any of Type::File, Type::Dir, Type::Symlink, Options::Recursive, Options::Keep-going 这看起来都很普通。我们拥有一个参数化的吞噬参数, 它带有一个或多个枚举而那些枚举可能拥有一个 flag 告诉它们是否用作单选按钮。听起来这个 idiom 会很适合这个模块。\n翻译的不好, 最好看原文。\n"},"name":"These keys are LTA","published":"2016-09-26T12:15:14Z","summary":"在折腾枚举作为子例程布尔选项的时候, 我发现默认的错误信息不够酷。\nConstraint type check failed for parameter '@options' 让错误信息变得更具体有点困难。我们来创建几个 exceptions 来告诉我们当东西出错时究竟发生了什么。\nclass X::Paramenter::Exclusive is Exception { has $.type; method message { \u0026#34;Parameters of {$.type.perl} are mutual exclusive\u0026#34; } } 现在我们能检查 Find::Type 的选项是否是独占的从而抛出异常。\n\u0026amp;\u0026amp; ( exclusive-argument(@options, Find::Type) or fail X::Paramenter::Exclusive.new(type =\u0026gt; Find::Type) ) class X::Parameter::UnrecognisedOption is Exception { has $.type; has $.unrecognised; method message { \u0026#34;Option { $.unrecognised } not any of { $.type.map({ (.^name ~ \u0026#39;::\u0026#39;) xx * Z~ .","type":"entry","url":"http://localhost:1313/raku/2016-09-26-these-keys-are-lta/"},{"content":{"html":"\u003ch2 id=\"whatever-是什么\"\u003eWhatever 是什么?\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePlaceholder for unspecified value/parameter - 未指定的值/参数的占位符。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e\u003ccode\u003e*\u003c/code\u003e 字面量在 「term」 位置上创建 「Whatever」 对象。\n\u003ccode\u003e*\u003c/code\u003e 的大部分魔法来自于 「Whatever 柯里化」. 当 \u003ccode\u003e*\u003c/code\u003e 作为 item 与很多操作符组合使用时, 编译器会把表达式转换为 「WhateverCode」 类型的闭包.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# same as   -\u0026gt; $x { $x + 2 };\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e              \u003cspan class=\"c1\"\u003e# 6\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果一个表达式中有 N 个 \u003ccode\u003e*\u003c/code\u003e, 则会产生一个含有 \u003ccode\u003eN\u003c/code\u003e 个参数的闭包:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# same as   -\u0026gt; $x, $y { $x + $y }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在复杂的表达式中使用 \u003ccode\u003e*\u003c/code\u003e 也会产生闭包:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$c\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e4\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# same as   -\u0026gt; $x { 4 * $x + 5 }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 \u003ccode\u003e*\u003c/code\u003e 号身上调用方法也会产生闭包:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003ea b c\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003euc\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# same as \u0026lt;a b c\u0026gt;.map: -\u0026gt; $char { $char.uc }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e前面提到, 不是所有的操作符和语法都会把 \u003ccode\u003e*\u003c/code\u003e 柯里化为 「WhateverCode」。\n下面这几种情况, \u003ccode\u003e*\u003c/code\u003e 仍旧是 「Whatever 对象」。\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e例外               Example    What it does\n\n逗号               1,*,2      用一个 * 元素生成一个 Parcel\n范围操作符         1..*       Range.new(:from(1), :to(*));\n序列操作符         1 ... *    无限列表\n智能匹配           1 ~~ *     返回 True\n赋值               $x = *     把 * 赋值给 $x\n绑定               $x := *    把 * 绑定给 $x\n列表重复           1 xx *     生成无限列表\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e范围操作符被特殊处理. 它们不使用 Whatever-Stars 柯里化, 但是它们使用 「WhateverCode」 进行柯里化.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eWHAT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e        \u003cspan class=\"c1\"\u003e# Range\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003eWHAT\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# WhateverCode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e上面的 \u003ccode\u003e*-1\u003c/code\u003e 是作为参数传递了。\u003c/p\u003e\n\u003cp\u003e下面这些也能使用:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e          \u003cspan class=\"c1\"\u003e# infinite loop\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e..\u003c/span\u003e\u003cspan class=\"mi\"\u003e4\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..*]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e           \u003cspan class=\"c1\"\u003e# 1 2 3 4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"mi\"\u003e0\u003c/span\u003e\u003cspan class=\"o\"\u003e..*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e         \u003cspan class=\"c1\"\u003e# 1 2 3\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e因为 Whatever-currying 是纯粹的语法编译器转换, 这不会在运行时把存储的 Whatever-stars 柯里化为 WhateverCodes.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e                 \u003cspan class=\"c1\"\u003e# not a closure, dies because\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                        \u003cspan class=\"c1\"\u003e# it can\u0026#39;t coerce $x to Numeric\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e存储 Whatever-stars 的使用案例像上面提到的那样, 但要把柯里化异常的情况也包含进去. 例如, 如果你想要一个默认的无限序列:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$max\u003c/span\u003e    \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003epotential-upper-limit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$series\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003eknown-lower-limit\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"nv\"\u003e$max\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一个存储后的 \u003ccode\u003e*\u003c/code\u003e 会在智能匹配的特殊情况下生成 WhateverCode. 注意, 正被柯里化的并非真正储存的 \u003ccode\u003e*\u003c/code\u003e, 而是在 LHS 上的 \u003ccode\u003e*\u003c/code\u003e。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$constraint\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nf\"\u003efind-constraint\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e//\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$maybe-always-matcher\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"nv\"\u003e$constraint\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果这个假定的 find-constraint 没有找到约束, 则 maybe-always-matcher 会对任何东西都返回 True.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$maybe-always-matcher\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e555\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$maybe-always-matcher\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"kt\"\u003eAny\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e      \u003cspan class=\"c1\"\u003e# True\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"whatever-star\"\u003eWhatever Star\u003c/h2\u003e\n\u003cp\u003e当作为一个「项」使用时， 我们把 \u003ccode\u003e*\u003c/code\u003e 叫做 \u0026ldquo;Whatever\u0026rdquo;。当不是实际值时，它用作占位符。例如, \u003ccode\u003e1, 2, 3 ... *\u003c/code\u003e，意思是没有终结点的自然数序列。\u003c/p\u003e\n\u003ch2 id=\"whatever-闭包\"\u003eWhatever 闭包\u003c/h2\u003e\n\u003cp\u003eWhatever 最强大的用处是 「Whatever」 闭包。\u003c/p\u003e\n\u003cp\u003e对于 Whatever 没有特殊意义的普通操作符：把 Whatever 当作参数传递时就创建了一个闭包！ 所以，举个例子：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 等价于 -\u0026gt; $a { $a + 1 }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 等价于 -\u0026gt; $a, $b { $a + $b }\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e一个星号占一个坑儿。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# 返回 @list 数组中所有大于 10 的元素\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ele\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ele\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 同上, 使用显式的闭包\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ele\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$ele\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e   \u003cspan class=\"c1\"\u003e# 同上, 使用冒号调用方式\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e                  \u003cspan class=\"c1\"\u003e# 同上\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003egrep\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$_\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e             \u003cspan class=\"c1\"\u003e# 同上\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e                    \u003cspan class=\"c1\"\u003e# 返回 @list 数组中每两个元素的和\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"o\"\u003e+\u003c/span\u003e\u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e)\u003c/span\u003e    \u003cspan class=\"c1\"\u003e# 同上, 使用显式的闭包\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果给 \u003ccode\u003e@a[ ]\u003c/code\u003e 的方括号里面传递一个闭包， 它会把 \u003ccode\u003e@a\u003c/code\u003e 数组的元素个数作为参数传递并计算！\u003c/p\u003e\n\u003cp\u003e数组的最后一个元素\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e  \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e22\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e33\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\u003cspan class=\"mi\"\u003e11\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a-1\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"c1\"\u003e# $a  即为数组@a 的元素个数\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e数组的倒数第二个元素\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[*-\u003c/span\u003e\u003cspan class=\"mi\"\u003e2\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e[\u003c/span\u003e\u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a-2\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"o\"\u003e]\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e所以 \u003ccode\u003e@a[*/2]\u003c/code\u003e 是 \u003ccode\u003e@a\u003c/code\u003e 数组的中间元素, \u003ccode\u003e@a[1..*-2]\u003c/code\u003e  是 \u003ccode\u003e@a\u003c/code\u003e 中不包含首尾元素的其它元素。\n\u003ccode\u003e1, 1, * + * ... *\u003c/code\u003e  是一个无限列表, \u003ccode\u003e* + *\u003c/code\u003e 是后来值的生成规则， 最后一个 \u003ccode\u003e*\u003c/code\u003e 表示没有终结测试。\u003c/p\u003e\n\u003cp\u003e把闭包存储在标量中\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e$a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nv\"\u003e$b\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e3\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 4\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@add_by_one\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@list\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$a\u003c/span\u003e\u003cspan class=\"p\"\u003e);\u003c/span\u003e \u003cspan class=\"c1\"\u003e# 对 @list 中的每个元素加 1\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eRaku 的列表求值是惰性的,只要你不要求最后一个元素, 无限列表是没问题的。使用绑定 \u003ccode\u003e(:=)\u003c/code\u003e 操作符把列表赋值给变量：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@fib\u003c/span\u003e \u003cspan class=\"o\"\u003e:=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e...\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果我稍后要 \u003ccode\u003e@fib[40]\u003c/code\u003e 的值, 会生成足够多的元素以获取数组的第 41 个元素,那些生成的元素会被记忆。尽管未来, 如果列表未绑定给变量, 之前的值会被忘记, 大部分 Raku 列表函数能作用并生成惰性列表。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e@a.map\u003c/code\u003e 和 \u003ccode\u003e@a.grep\u003c/code\u003e 都生成「惰性列表」， 即使 \u003ccode\u003e@a\u003c/code\u003e 不是惰性的。\n\u003ccode\u003e@fib.grep(* %% 2)\u003c/code\u003e 是一个偶数惰性列表，例如 \u003ccode\u003e@fib Z @a\u003c/code\u003e 生成一个惰性列表： \u003ccode\u003e@fib[0], @a[0], @fib[1], @a[1] ...\u003c/code\u003e。\n给 for 循环传递一个无限列表是没问题的， 它会循环直到停止。\u003c/p\u003e\n\u003cp\u003e但是要注意不能使用嵌套的闭包:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e \u003cspan class=\"o\"\u003e..\u003c/span\u003e \u003cspan class=\"mi\"\u003e10\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003emy\u003c/span\u003e \u003cspan class=\"nv\"\u003e@b\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003e@a\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003emap\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e \u003cspan class=\"o\"\u003e**\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e===\u003c/span\u003e\u003cspan class=\"n\"\u003eSORRY\u003c/span\u003e\u003cspan class=\"o\"\u003e!===\u003c/span\u003e \u003cspan class=\"n\"\u003eError\u003c/span\u003e \u003cspan class=\"k\"\u003ewhile\u003c/span\u003e \u003cspan class=\"n\"\u003ecompiling:\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eMalformed\u003c/span\u003e \u003cspan class=\"n\"\u003edouble\u003c/span\u003e \u003cspan class=\"n\"\u003eclosure\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"kt\"\u003eWhateverCode\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"nc\"\u003ealready\u003c/span\u003e \u003cspan class=\"n\"\u003ea\u003c/span\u003e \u003cspan class=\"n\"\u003eclosure\u003c/span\u003e \u003cspan class=\"k\"\u003ewithout\u003c/span\u003e \u003cspan class=\"n\"\u003ecurlies\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eso\u003c/span\u003e \u003cspan class=\"n\"\u003eeither\u003c/span\u003e \u003cspan class=\"nb\"\u003eremove\u003c/span\u003e \u003cspan class=\"n\"\u003ethe\u003c/span\u003e \u003cspan class=\"n\"\u003ecurlies\u003c/span\u003e \u003cspan class=\"ow\"\u003eor\u003c/span\u003e \u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003evalid\u003c/span\u003e \u003cspan class=\"nb\"\u003eparameter\u003c/span\u003e \u003cspan class=\"n\"\u003esyntax\u003c/span\u003e \u003cspan class=\"nb\"\u003einstead\u003c/span\u003e \u003cspan class=\"k\"\u003eof\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eat\u003c/span\u003e \u003cspan class=\"nb\"\u003eline\u003c/span\u003e \u003cspan class=\"mi\"\u003e2\u003c/span\u003e \u003cspan class=\"o\"\u003e------\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eBOL\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eHERE\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u0026lt;\u003c/span\u003e\u003cspan class=\"s\"\u003eEOL\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e注意上面的错误信息, 说的已经很明显了, WhateverCode 已经是一个不带花括号的闭包了, 所以要么移除花括号, 要么使用合法的参数语法代替 \u003ccode\u003e*\u003c/code\u003e 号, 提示信息足够清楚了。所以, 按照提示:\u003c/p\u003e\n\u003cp\u003e方法一：使用 \u003ccode\u003e$_\u003c/code\u003e 代替 \u003ccode\u003e*\u003c/code\u003e 号\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; my @b = @a.map: { $_ ** 2 }\n[1 4 9 16 25 36 49 64 81 100]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e方法二：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; my @b = @a.map:  * ** 2\n[1 4 9 16 25 36 49 64 81 100]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e方法三, 显式的使用 cloure：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u0026gt; my @b = @a.map: -\u0026gt; $item { $item ** 2 }\n[1 4 9 16 25 36 49 64 81 100]\n\u003c/code\u003e\u003c/pre\u003e","text":"Whatever 是什么? Placeholder for unspecified value/parameter - 未指定的值/参数的占位符。\n* 字面量在 「term」 位置上创建 「Whatever」 对象。 * 的大部分魔法来自于 「Whatever 柯里化」. 当 * 作为 item 与很多操作符组合使用时, 编译器会把表达式转换为 「WhateverCode」 类型的闭包.\nmy $c = * + 2; # same as -\u0026gt; $x { $x + 2 }; say $c(4); # 6 如果一个表达式中有 N 个 *, 则会产生一个含有 N 个参数的闭包:\nmy $c = * + *; # same as -\u0026gt; $x, $y { $x + $y } 在复杂的表达式中使用 * 也会产生闭包:\nmy $c = 4 * * + 5; # same as -\u0026gt; $x { 4 * $x + 5 } 在 * 号身上调用方法也会产生闭包:\n\u0026lt;a b c\u0026gt;.map: *.uc; # same as \u0026lt;a b c\u0026gt;.map: -\u0026gt; $char { $char.uc } 前面提到, 不是所有的操作符和语法都会把 * 柯里化为 「WhateverCode」。 下面这几种情况, * 仍旧是 「Whatever 对象」。\n例外 Example What it does 逗号 1,*,2 用一个 * 元素生成一个 Parcel 范围操作符 1..* Range.new(:from(1), :to(*)); 序列操作符 1 ... * 无限列表 智能匹配 1 ~~ * 返回 True 赋值 $x = * 把 * 赋值给 $x 绑定 $x := * 把 * 绑定给 $x 列表重复 1 xx * 生成无限列表 范围操作符被特殊处理. 它们不使用 Whatever-Stars 柯里化, 但是它们使用 「WhateverCode」 进行柯里化.\nsay (1..*).WHAT; # Range say (1..*-1).WHAT; # WhateverCode 上面的 *-1 是作为参数传递了。\n下面这些也能使用:\n.say for 1..*; # infinite loop my @a = 1..4; say @a[0..*]; # 1 2 3 4 say @a[0..*-2]; # 1 2 3 因为 Whatever-currying 是纯粹的语法编译器转换, 这不会在运行时把存储的 Whatever-stars 柯里化为 WhateverCodes.\nmy $x = *; $x + 2; # not a closure, dies because # it can\u0026#39;t coerce $x to Numeric 存储 Whatever-stars 的使用案例像上面提到的那样, 但要把柯里化异常的情况也包含进去. 例如, 如果你想要一个默认的无限序列:\nmy $max = potential-upper-limit() // *; my $series = known-lower-limit() ... $max; 一个存储后的 * 会在智能匹配的特殊情况下生成 WhateverCode. 注意, 正被柯里化的并非真正储存的 *, 而是在 LHS 上的 *。\nmy $constraint = find-constraint() // *; my $maybe-always-matcher = * ~~ $constraint; 如果这个假定的 find-constraint 没有找到约束, 则 maybe-always-matcher 会对任何东西都返回 True.\n$maybe-always-matcher(555); # True $maybe-always-matcher(Any); # True Whatever Star 当作为一个「项」使用时， 我们把 * 叫做 \u0026ldquo;Whatever\u0026rdquo;。当不是实际值时，它用作占位符。例如, 1, 2, 3 ... *，意思是没有终结点的自然数序列。\nWhatever 闭包 Whatever 最强大的用处是 「Whatever」 闭包。\n对于 Whatever 没有特殊意义的普通操作符：把 Whatever 当作参数传递时就创建了一个闭包！ 所以，举个例子：\n* + 1 # 等价于 -\u0026gt; $a { $a + 1 } * + * # 等价于 -\u0026gt; $a, $b { $a + $b } 一个星号占一个坑儿。\n@list.grep(* \u0026gt; 10) # 返回 @list 数组中所有大于 10 的元素 @list.grep( -\u0026gt; $ele { $ele \u0026gt; 10 } ) # 同上, 使用显式的闭包 @list.grep: -\u0026gt; $ele { $ele \u0026gt; 10 } # 同上, 使用冒号调用方式 @list.grep: * \u0026gt; 10 # 同上 @list.grep: { $_ \u0026gt; 10 } # 同上 @list.map(* + *) # 返回 @list 数组中每两个元素的和 @list.map( -\u0026gt; $a, $b { $a+$b } ) # 同上, 使用显式的闭包 如果给 @a[ ] 的方括号里面传递一个闭包， 它会把 @a 数组的元素个数作为参数传递并计算！\n数组的最后一个元素\nmy @a = 1,22,33,11; say @a[*-1]; say @a[-\u0026gt;$a {$a-1}]; # $a 即为数组@a 的元素个数 数组的倒数第二个元素\nsay @a[*-2]; say @a[-\u0026gt;$a {$a-2}]; 所以 @a[*/2] 是 @a 数组的中间元素, @a[1..*-2] 是 @a 中不包含首尾元素的其它元素。 1, 1, * + * ... * 是一个无限列表, * + * 是后来值的生成规则， 最后一个 * 表示没有终结测试。\n把闭包存储在标量中\nmy $a = -\u0026gt; $b { $b + 1 } $a(3) # 4 my @add_by_one = @list.map($a); # 对 @list 中的每个元素加 1 Raku 的列表求值是惰性的,只要你不要求最后一个元素, 无限列表是没问题的。使用绑定 (:=) 操作符把列表赋值给变量：\nmy @fib := 1, 1, * + * ... * 如果我稍后要 @fib[40] 的值, 会生成足够多的元素以获取数组的第 41 个元素,那些生成的元素会被记忆。尽管未来, 如果列表未绑定给变量, 之前的值会被忘记, 大部分 Raku 列表函数能作用并生成惰性列表。\n@a.map 和 @a.grep 都生成「惰性列表」， 即使 @a 不是惰性的。 @fib.grep(* %% 2) 是一个偶数惰性列表，例如 @fib Z @a 生成一个惰性列表： @fib[0], @a[0], @fib[1], @a[1] ...。 给 for 循环传递一个无限列表是没问题的， 它会循环直到停止。\n但是要注意不能使用嵌套的闭包:\nmy @a = 1 .. 10; my @b = @a.map: { * ** 2 } ===SORRY!=== Error while compiling: Malformed double closure; WhateverCode is already a closure without curlies, so either remove the curlies or use valid parameter syntax instead of * at line 2 ------\u0026gt; \u0026lt;BOL\u0026gt;\u0026lt;HERE\u0026gt;\u0026lt;EOL\u0026gt; 注意上面的错误信息, 说的已经很明显了, WhateverCode 已经是一个不带花括号的闭包了, 所以要么移除花括号, 要么使用合法的参数语法代替 * 号, 提示信息足够清楚了。所以, 按照提示:\n方法一：使用 $_ 代替 * 号\n\u0026gt; my @b = @a.map: { $_ ** 2 } [1 4 9 16 25 36 49 64 81 100] 方法二：\n\u0026gt; my @b = @a.map: * ** 2 [1 4 9 16 25 36 49 64 81 100] 方法三, 显式的使用 cloure：\n\u0026gt; my @b = @a.map: -\u0026gt; $item { $item ** 2 } [1 4 9 16 25 36 49 64 81 100] "},"name":"Whatever Star","published":"2016-09-25T16:14:05Z","summary":"Whatever 是什么? Placeholder for unspecified value/parameter - 未指定的值/参数的占位符。\n* 字面量在 「term」 位置上创建 「Whatever」 对象。 * 的大部分魔法来自于 「Whatever 柯里化」. 当 * 作为 item 与很多操作符组合使用时, 编译器会把表达式转换为 「WhateverCode」 类型的闭包.\nmy $c = * + 2; # same as -\u0026gt; $x { $x + 2 }; say $c(4); # 6 如果一个表达式中有 N 个 *, 则会产生一个含有 N 个参数的闭包:\nmy $c = * + *; # same as -\u0026gt; $x, $y { $x + $y } 在复杂的表达式中使用 * 也会产生闭包:","type":"entry","url":"http://localhost:1313/raku/2016-09-25-whatever-star/"},{"content":{"html":"\u003ch2 id=\"when-可以用在主题化_的语句中\"\u003eWhen 可以用在主题化($_)的语句中\u003c/h2\u003e\n\u003cp\u003ePerl 里面有个特殊的变量叫 \u003ccode\u003e$_\u003c/code\u003e, 即主题化变量, the variable in question.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eSwift\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePHP\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePerl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$item\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$item\u003c/span\u003e \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"nv\"\u003e$item\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"ni\"\u003e^\u003c/span\u003e\u003cspan class=\"sr\"\u003eP\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ePHP\u003c/span\u003e                                                                                  \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ePython\u003c/span\u003e                                                                               \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003ePerl\u003c/span\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e12\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e24\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e56\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"o\"\u003e.\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"k\"\u003ewhen\u003c/span\u003e \u003cspan class=\"o\"\u003e*\u0026gt;\u003c/span\u003e\u003cspan class=\"mi\"\u003e40\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e56\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e而 \u003cem\u003ewhere\u003c/em\u003e 用于对类型进行约束.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eSwift\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePHP\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePython\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003ePerl\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"nv\"\u003e$item\u003c/span\u003e  \u003cspan class=\"k\"\u003ewhere\u003c/span\u003e \u003cspan class=\"nv\"\u003e$item\u003c/span\u003e \u003cspan class=\"o\"\u003e~~\u003c/span\u003e \u003cspan class=\"kt\"\u003eStr\u003c/span\u003e  \u003cspan class=\"p\"\u003e{\u003c/span\u003e\u003cspan class=\"nb\"\u003esay\u003c/span\u003e \u003cspan class=\"nv\"\u003e$item\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e   \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eSwift\u003c/span\u003e                                                                                    \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ePHP\u003c/span\u003e                                                                                      \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003ePython\u003c/span\u003e                                                                                   \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"kt\"\u003ePerl\u003c/span\u003e                                                                                     \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003eConstraint\u003c/span\u003e \u003cspan class=\"nb\"\u003etype\u003c/span\u003e \u003cspan class=\"n\"\u003echeck\u003c/span\u003e \u003cspan class=\"n\"\u003efailed\u003c/span\u003e \u003cspan class=\"k\"\u003efor\u003c/span\u003e \u003cspan class=\"nb\"\u003eparameter\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e$item\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e       \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e未完待续.\u003c/p\u003e\n","text":"When 可以用在主题化($_)的语句中 Perl 里面有个特殊的变量叫 $_, 即主题化变量, the variable in question.\n\u0026gt; for (\u0026#39;Swift\u0026#39;, \u0026#39;PHP\u0026#39;, \u0026#39;Python\u0026#39;, \u0026#39;Perl\u0026#39;) -\u0026gt; $item { say $item when $item ~~ /^P/ } PHP Python Perl \u0026gt; for (12, 24, 56, 42) {.say when *\u0026gt;40 } 56 42 而 where 用于对类型进行约束.\n\u0026gt; for (\u0026#39;Swift\u0026#39;, \u0026#39;PHP\u0026#39;, \u0026#39;Python\u0026#39;, \u0026#39;Perl\u0026#39;, 42) -\u0026gt; $item where $item ~~ Str {say $item} Swift PHP Python Perl Constraint type check failed for parameter \u0026#39;$item\u0026#39; 未完待续.\n"},"name":"When and Where","published":"2015-03-15T13:15:00+03:00","summary":"When 可以用在主题化($_)的语句中 Perl 里面有个特殊的变量叫 $_, 即主题化变量, the variable in question.\n\u0026gt; for (\u0026#39;Swift\u0026#39;, \u0026#39;PHP\u0026#39;, \u0026#39;Python\u0026#39;, \u0026#39;Perl\u0026#39;) -\u0026gt; $item { say $item when $item ~~ /^P/ } PHP Python Perl \u0026gt; for (12, 24, 56, 42) {.say when *\u0026gt;40 } 56 42 而 where 用于对类型进行约束.\n\u0026gt; for (\u0026#39;Swift\u0026#39;, \u0026#39;PHP\u0026#39;, \u0026#39;Python\u0026#39;, \u0026#39;Perl\u0026#39;, 42) -\u0026gt; $item where $item ~~ Str {say $item} Swift PHP Python Perl Constraint type check failed for parameter \u0026#39;$item\u0026#39; 未完待续.","type":"entry","url":"http://localhost:1313/raku/2015-03-15-when%E5%92%8Cwhere/"}],"name":"Rakus","type":"feed","url":"http://localhost:1313/raku/"}
{"author":{"name":null,"type":"card","url":"http://localhost:1313/"},"content":{"html":"\u003ch2 id=\"crohttptest\"\u003eCro::HTTP::Test\u003c/h2\u003e\n\u003cp\u003e原则上可以通过使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-server\"\u003eCro::HTTP::Server\u003c/a\u003e托管应用程序, 使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-client\"\u003eCro::HTTP::Client\u003c/a\u003e向其发出请求, 并使用标准 \u003ccode\u003eTest\u003c/code\u003e 库检查结果来编写 Cro HTTP 服务的测试。该库使编写此类测试更容易, 并通过以下方式更快地执行它们：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e为发出测试请求和检查结果提供更方便的 API\u003c/li\u003e\n\u003cli\u003e跳过网络并将 \u003ccode\u003eCro::TCP\u003c/code\u003e 对象从客户端管道传递到服务器管道, 反之亦然\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"基本示例\"\u003e基本示例\u003c/h2\u003e\n\u003cp\u003e给定模块 \u003ccode\u003eMyService::Routes\u003c/code\u003e, 如下所示：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003esub\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"k\"\u003eis\u003c/span\u003e \u003cspan class=\"k\"\u003eexport\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003eroute\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"nb\"\u003eget\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"nb\"\u003econtent\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etext/plain\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eNothing to see here\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003epost\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eadd\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"n\"\u003erequest-body\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eapplication-json\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"k\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e\u003cspan class=\"o\"\u003e!,\u003c/span\u003e \u003cspan class=\"o\"\u003e:\u003c/span\u003e\u003cspan class=\"nv\"\u003e$y\u003c/span\u003e\u003cspan class=\"o\"\u003e!\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"nb\"\u003econtent\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003eapplication/json\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e$x\u003c/span\u003e \u003cspan class=\"o\"\u003e+\u003c/span\u003e \u003cspan class=\"nv\"\u003e$y\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e我们可以像这样编写测试：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eCro::HTTP::Test\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003euse\u003c/span\u003e \u003cspan class=\"nn\"\u003eMyService::Routes\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-service\u003c/span\u003e \u003cspan class=\"nf\"\u003eroutes\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nb\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003econtent-type\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003etext/plain\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003ebody\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003enothing\u003c/span\u003e\u003cspan class=\"p\"\u003e/;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/add\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e400\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nb\"\u003eget\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e405\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003edone-testing\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"设置要测试的服务\"\u003e设置要测试的服务\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003etest-service\u003c/code\u003e 函数有两个候选者。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etest-service\u003c/code\u003e(\u003ccode\u003eCro::Transform, \u0026amp;tests, :$fake-auth, :$http)\u003c/code\u003e 候选者针对提供的 HTTP 应用程序运行测试, 该应用程序可以是任何使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-request\"\u003eCro::HTTP::Request\u003c/a\u003e 的 \u003ccode\u003eCro::Transform\u003c/code\u003e 并生成 \u003ca href=\"https://cro.services/docs/reference/cro-http-response\"\u003eCro::HTTP::Response\u003c/a\u003e。使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-router\"\u003eCro::HTTP::Router\u003c/a\u003e 编写的应用程序执行此操作。也可以使用 \u003ccode\u003eCro.compose\u003c/code\u003e 将（可能模拟的）中间件放在适当的位置。可选的 \u003ccode\u003e:$fake-auth\u003c/code\u003e 参数, 如果传递, 将添加一个中间件, 将请求的 \u003ccode\u003eauth\u003c/code\u003e 设置为指定的对象。这对于模拟用户或会话以及测试授权非常有用。 http 参数指定运行测试的 HTTP 版本。由于我们在测试中控制客户端和服务器端, 因此不允许设置 \u003ccode\u003e:http\u0026lt;1.1 2\u0026gt;\u003c/code\u003e。默认值为 \u003ccode\u003e:http\u0026lt;2\u0026gt;\u003c/code\u003e。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etest-service($uri, \u0026amp;tests)\u003c/code\u003e 候选者针对指定的基 URI 运行测试, 通过 \u003ca href=\"https://cro.services/docs/reference/cro-http-client\"\u003eCro::HTTP::Client\u003c/a\u003e 连接到它。这使得可以使用 \u003ca href=\"https://cro.services/docs/reference/cro-http-test\"\u003eCro::HTTP::Test\u003c/a\u003e 为使用除 Cro 之外的其他东西构建的服务编写测试。\u003c/p\u003e\n\u003cp\u003e所有其他命名参数都作为 \u003ca href=\"https://cro.services/docs/reference/cro-http-client\"\u003eCro::HTTP::Client\u003c/a\u003e 构造函数参数传递。\u003c/p\u003e\n\u003ch2 id=\"写测试\"\u003e写测试\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003etest\u003c/code\u003e 函数用于传递给 \u003ccode\u003etest-service\u003c/code\u003e 的块内部。它期望传递一个表示测试请求的位置参数，并命名参数，指示响应的预期属性。\u003c/p\u003e\n\u003cp\u003e通过调用 \u003ccode\u003eget\u003c/code\u003e，\u003ccode\u003eput\u003c/code\u003e，\u003ccode\u003epost\u003c/code\u003e，\u003ccode\u003edelete\u003c/code\u003e，\u003ccode\u003ehead\u003c/code\u003e 或 \u003ccode\u003epatch\u003c/code\u003e 之一来指定请求。还有其他 HTTP 的 \u003ccode\u003erequest($method, ...)\u003c/code\u003e（事实上，\u003ccode\u003eget\u003c/code\u003e 只会调用 \u003ccode\u003erequest('GET', ...)\u003c/code\u003e）。这些函数接受提供相对 URI 的可选位置参数，如果提供该 URI 将附加到当前有效基 URI。 \u003ccode\u003e:$json\u003c/code\u003e 命名参数被特殊处理，扩展为 \u003ccode\u003e{content-type =\u0026gt;'application/json', body =\u0026gt; $json}\u003c/code\u003e。所有其他命名参数将传递给 Cro::HTTP::Client 的 request 方法，从而使所有 HTTP 客户端的功能都可用。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etest\u003c/code\u003e 函数的命名参数构成检查。它们主要遵循 \u003ca href=\"https://cro.services/docs/reference/cro-http-response\"\u003eCro::HTTP::Response\u003c/a\u003e 对象上的方法名称。可用的检查如下。\u003c/p\u003e\n\u003ch3 id=\"status\"\u003estatus\u003c/h3\u003e\n\u003cp\u003eSmartmatches 响应检查的响应的 \u003ccode\u003estatus\u003c/code\u003e 属性。虽然整数（例如 \u003ccode\u003estatus =\u0026gt; 200\u003c/code\u003e）将是最常见的，但也可能是诸如 \u003ccode\u003estatus =\u0026gt; * \u0026lt;400\u003c/code\u003e 之类的事情（例如，不是错误）。\u003c/p\u003e\n\u003ch3 id=\"content-type\"\u003econtent-type\u003c/h3\u003e\n\u003cp\u003e检查内容类型是否相同。如果传递了一个字符串，它会将其解析为媒体类型，并检查类型和子类型是否与响应的类型匹配。如果字符串中有任何额外参数（例如字符集），则还将在接收的媒体类型中检查这些参数。如果接收的媒体类型具有未提及的额外参数，则将忽略这些参数。因此，检查content-type =\u0026gt;\u0026lsquo;text / plain\u0026rsquo;匹配text / plain;响应中的charset = utf8。\u003c/p\u003e\n\u003cp\u003e对于更细粒度的控制，传递一个块，它将传递一个Cro :: MediaType的实例，并期望返回一些测试通过的truthy。\u003c/p\u003e\n\u003ch3 id=\"header-或-headers\"\u003eheader 或 headers\u003c/h3\u003e\n\u003cp\u003e将哈希映射头名称转换为头值，或者执行相同的Pair列表。如果标题存在且标题的值与值相匹配，则测试通过。仅在关注标题存在时使用*，但不希望检查其值。响应中的所有其他标头都将被忽略（即，额外的标头被认为是正常的）。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003eheaders\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eStrict-Transport-Security\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003eCache-Control\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"sr\"\u003epublic\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e为了进一步控制，传递一个块，它将接收一个Pair列表，每个块代表一个头。它的返回值应该是测试通过的真相。\u003c/p\u003e\n\u003ch3 id=\"body-text\"\u003ebody-text\u003c/h3\u003e\n\u003cp\u003e获得响应的正文 - 并将其与提供的值进行智能匹配。字符串，正则表达式或代码对象都可能有用。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003ebody-text\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e/:\u003c/span\u003e\u003cspan class=\"na\"\u003ei\u003c/span\u003e\u003cspan class=\"sr\"\u003e success\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果测试的内容类型且测试失败，则将跳过正文测试。\u003c/p\u003e\n\u003ch3 id=\"body-blob\"\u003ebody-blob\u003c/h3\u003e\n\u003cp\u003e获得响应的body-blob并将其与提供的值进行智能匹配\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"s\"\u003ebody-blob\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"o\"\u003e*.\u003c/span\u003e\u003cspan class=\"nb\"\u003ebytes\u003c/span\u003e \u003cspan class=\"o\"\u003e\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e128\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e如果测试的内容类型且测试失败，则将跳过正文测试。\u003c/p\u003e\n\u003ch3 id=\"body\"\u003ebody\u003c/h3\u003e\n\u003cp\u003e获得响应的主体并将其与提供的值进行智能匹配。请注意，body属性根据响应的内容类型决定要生成的内容，从而选择适当的主体解析器。因此，建议将其与内容类型一起使用（将始终在正文之前进行测试，如果失败则跳过正文测试）。\u003c/p\u003e\n\u003ch3 id=\"json\"\u003ejson\u003c/h3\u003e\n\u003cp\u003e对于JSON响应的常见情况，这是一个方便的捷径。它实现了content-type =\u0026gt; {。type eq\u0026rsquo;application\u0026rsquo;\u0026amp;\u0026amp; .subtype-name eq\u0026rsquo;json\u0026rsquo;|| .suffix eq\u0026rsquo;json\u0026rsquo;}（也就是说，它接受application / json或类似application / vnd.foobar + json的东西）。\u003c/p\u003e\n\u003cp\u003e如果传递了代码值，那么将使用反序列化的JSON主体调用代码，并且应该返回一个truthy值以供测试通过。否则，将使用is-deep测试例程来检查收到的JSON的结构是否符合预期。\u003c/p\u003e\n\u003ch3 id=\"many-tests-with-one-uri-set-of-headers-etc\"\u003eMany tests with one URI, set of headers, etc.\u003c/h3\u003e\n\u003cp\u003e重复测试的相同细节可能会很繁琐。例如，通常希望针对相同的URI编写许多测试，每次都将其传递给不同的主体或使用不同的请求方法。测试给定的功能有多种形式。它可以与URI和块一起使用：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/add\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ey\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e5\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e200\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003eresult\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e42\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e};\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"n\"\u003etest\u003c/span\u003e \u003cspan class=\"nf\"\u003epost\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"s\"\u003ejson\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"p\"\u003e:\u003c/span\u003e\u003cspan class=\"s\"\u003ex\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"mi\"\u003e37\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e        \u003cspan class=\"s\"\u003estatus\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"mi\"\u003e400\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在这种情况下，测试将全部针对附加到当前有效URI的URI执行，该URI在测试服务块中是被测试服务的基URI。如果各个测试用例也具有URI，则也会附加它。可以嵌套测试给定的块，并且每个块都附加其URI段，从而建立新的当前有效URI。\u003c/p\u003e\n\u003cp\u003e也可以将命名参数传递给test-given，这些参数将用作请求参数，传递给Cro :: HTTP :: Client。请注意，为get或request指定的任何命名参数都将覆盖在给定测试中指定的参数。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e/add\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"o\"\u003e,\u003c/span\u003e \u003cspan class=\"s\"\u003eheader\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"err\"\u003ePrecision\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e第二种形式不需要相对URI，而只需要选项：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-raku\" data-lang=\"raku\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"n\"\u003etest-given\u003c/span\u003e \u003cspan class=\"s\"\u003eheader\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e \u003cspan class=\"ow\"\u003eX\u003c/span\u003e\u003cspan class=\"o\"\u003e-\u003c/span\u003e\u003cspan class=\"err\"\u003ePrecision\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"s1\"\u003e15\u003c/span\u003e\u003cspan class=\"p\"\u003e\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"o\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e","text":"Cro::HTTP::Test 原则上可以通过使用 Cro::HTTP::Server托管应用程序, 使用 Cro::HTTP::Client向其发出请求, 并使用标准 Test 库检查结果来编写 Cro HTTP 服务的测试。该库使编写此类测试更容易, 并通过以下方式更快地执行它们：\n为发出测试请求和检查结果提供更方便的 API 跳过网络并将 Cro::TCP 对象从客户端管道传递到服务器管道, 反之亦然 基本示例 给定模块 MyService::Routes, 如下所示：\nsub routes() is export { route { get -\u0026gt; { content \u0026#39;text/plain\u0026#39;, \u0026#39;Nothing to see here\u0026#39;; } post -\u0026gt; \u0026#39;add\u0026#39; { request-body \u0026#39;application-json\u0026#39; =\u0026gt; -\u0026gt; (:$x!, :$y!) { content \u0026#39;application/json\u0026#39;, { :result($x + $y) }; } } } } 我们可以像这样编写测试：\nuse Cro::HTTP::Test; use MyService::Routes; test-service routes(), { test get(\u0026#39;/\u0026#39;), status =\u0026gt; 200, content-type =\u0026gt; \u0026#39;text/plain\u0026#39;, body =\u0026gt; /nothing/; test-given \u0026#39;/add\u0026#39;, { test post(json =\u0026gt; { :x(37), :y(5) }), status =\u0026gt; 200, json =\u0026gt; { :result(42) }; test post(json =\u0026gt; { :x(37) }), status =\u0026gt; 400; test get(json =\u0026gt; { :x(37) }), status =\u0026gt; 405; } } done-testing; 设置要测试的服务 test-service 函数有两个候选者。\ntest-service(Cro::Transform, \u0026amp;tests, :$fake-auth, :$http) 候选者针对提供的 HTTP 应用程序运行测试, 该应用程序可以是任何使用 Cro::HTTP::Request 的 Cro::Transform 并生成 Cro::HTTP::Response。使用 Cro::HTTP::Router 编写的应用程序执行此操作。也可以使用 Cro.compose 将（可能模拟的）中间件放在适当的位置。可选的 :$fake-auth 参数, 如果传递, 将添加一个中间件, 将请求的 auth 设置为指定的对象。这对于模拟用户或会话以及测试授权非常有用。 http 参数指定运行测试的 HTTP 版本。由于我们在测试中控制客户端和服务器端, 因此不允许设置 :http\u0026lt;1.1 2\u0026gt;。默认值为 :http\u0026lt;2\u0026gt;。\ntest-service($uri, \u0026amp;tests) 候选者针对指定的基 URI 运行测试, 通过 Cro::HTTP::Client 连接到它。这使得可以使用 Cro::HTTP::Test 为使用除 Cro 之外的其他东西构建的服务编写测试。\n所有其他命名参数都作为 Cro::HTTP::Client 构造函数参数传递。\n写测试 test 函数用于传递给 test-service 的块内部。它期望传递一个表示测试请求的位置参数，并命名参数，指示响应的预期属性。\n通过调用 get，put，post，delete，head 或 patch 之一来指定请求。还有其他 HTTP 的 request($method, ...)（事实上，get 只会调用 request('GET', ...)）。这些函数接受提供相对 URI 的可选位置参数，如果提供该 URI 将附加到当前有效基 URI。 :$json 命名参数被特殊处理，扩展为 {content-type =\u0026gt;'application/json', body =\u0026gt; $json}。所有其他命名参数将传递给 Cro::HTTP::Client 的 request 方法，从而使所有 HTTP 客户端的功能都可用。\ntest 函数的命名参数构成检查。它们主要遵循 Cro::HTTP::Response 对象上的方法名称。可用的检查如下。\nstatus Smartmatches 响应检查的响应的 status 属性。虽然整数（例如 status =\u0026gt; 200）将是最常见的，但也可能是诸如 status =\u0026gt; * \u0026lt;400 之类的事情（例如，不是错误）。\ncontent-type 检查内容类型是否相同。如果传递了一个字符串，它会将其解析为媒体类型，并检查类型和子类型是否与响应的类型匹配。如果字符串中有任何额外参数（例如字符集），则还将在接收的媒体类型中检查这些参数。如果接收的媒体类型具有未提及的额外参数，则将忽略这些参数。因此，检查content-type =\u0026gt;\u0026lsquo;text / plain\u0026rsquo;匹配text / plain;响应中的charset = utf8。\n对于更细粒度的控制，传递一个块，它将传递一个Cro :: MediaType的实例，并期望返回一些测试通过的truthy。\nheader 或 headers 将哈希映射头名称转换为头值，或者执行相同的Pair列表。如果标题存在且标题的值与值相匹配，则测试通过。仅在关注标题存在时使用*，但不希望检查其值。响应中的所有其他标头都将被忽略（即，额外的标头被认为是正常的）。\nheaders =\u0026gt; { Strict-Transport-Security =\u0026gt; *, Cache-Control =\u0026gt; /public/ } 为了进一步控制，传递一个块，它将接收一个Pair列表，每个块代表一个头。它的返回值应该是测试通过的真相。\nbody-text 获得响应的正文 - 并将其与提供的值进行智能匹配。字符串，正则表达式或代码对象都可能有用。\nbody-text =\u0026gt; /:i success/ 如果测试的内容类型且测试失败，则将跳过正文测试。\nbody-blob 获得响应的body-blob并将其与提供的值进行智能匹配\nbody-blob =\u0026gt; *.bytes \u0026gt; 128 如果测试的内容类型且测试失败，则将跳过正文测试。\nbody 获得响应的主体并将其与提供的值进行智能匹配。请注意，body属性根据响应的内容类型决定要生成的内容，从而选择适当的主体解析器。因此，建议将其与内容类型一起使用（将始终在正文之前进行测试，如果失败则跳过正文测试）。\njson 对于JSON响应的常见情况，这是一个方便的捷径。它实现了content-type =\u0026gt; {。type eq\u0026rsquo;application\u0026rsquo;\u0026amp;\u0026amp; .subtype-name eq\u0026rsquo;json\u0026rsquo;|| .suffix eq\u0026rsquo;json\u0026rsquo;}（也就是说，它接受application / json或类似application / vnd.foobar + json的东西）。\n如果传递了代码值，那么将使用反序列化的JSON主体调用代码，并且应该返回一个truthy值以供测试通过。否则，将使用is-deep测试例程来检查收到的JSON的结构是否符合预期。\nMany tests with one URI, set of headers, etc. 重复测试的相同细节可能会很繁琐。例如，通常希望针对相同的URI编写许多测试，每次都将其传递给不同的主体或使用不同的请求方法。测试给定的功能有多种形式。它可以与URI和块一起使用：\ntest-given \u0026#39;/add\u0026#39;, { test post(json =\u0026gt; { :x(37), :y(5) }), status =\u0026gt; 200, json =\u0026gt; { :result(42) }; test post(json =\u0026gt; { :x(37) }), status =\u0026gt; 400; } 在这种情况下，测试将全部针对附加到当前有效URI的URI执行，该URI在测试服务块中是被测试服务的基URI。如果各个测试用例也具有URI，则也会附加它。可以嵌套测试给定的块，并且每个块都附加其URI段，从而建立新的当前有效URI。\n也可以将命名参数传递给test-given，这些参数将用作请求参数，传递给Cro :: HTTP :: Client。请注意，为get或request指定的任何命名参数都将覆盖在给定测试中指定的参数。\ntest-given \u0026#39;/add\u0026#39;, header =\u0026gt; { X-Precision =\u0026gt; \u0026#39;15\u0026#39; } { ... } 第二种形式不需要相对URI，而只需要选项：\ntest-given header =\u0026gt; { X-Precision =\u0026gt; \u0026#39;15\u0026#39; } { ... } "},"name":"Cro Http Test","published":"2018-07-14T17:14:59+08:00","summary":"Cro::HTTP::Test 原则上可以通过使用 Cro::HTTP::Server托管应用程序, 使用 Cro::HTTP::Client向其发出请求, 并使用标准 Test 库检查结果来编写 Cro HTTP 服务的测试。该库使编写此类测试更容易, 并通过以下方式更快地执行它们：\n为发出测试请求和检查结果提供更方便的 API 跳过网络并将 Cro::TCP 对象从客户端管道传递到服务器管道, 反之亦然 基本示例 给定模块 MyService::Routes, 如下所示：\nsub routes() is export { route { get -\u0026gt; { content \u0026#39;text/plain\u0026#39;, \u0026#39;Nothing to see here\u0026#39;; } post -\u0026gt; \u0026#39;add\u0026#39; { request-body \u0026#39;application-json\u0026#39; =\u0026gt; -\u0026gt; (:$x!, :$y!) { content \u0026#39;application/json\u0026#39;, { :result($x + $y) }; } } } } 我们可以像这样编写测试：\nuse Cro::HTTP::Test; use MyService::Routes; test-service routes(), { test get(\u0026#39;/\u0026#39;), status =\u0026gt; 200, content-type =\u0026gt; \u0026#39;text/plain\u0026#39;, body =\u0026gt; /nothing/; test-given \u0026#39;/add\u0026#39;, { test post(json =\u0026gt; { :x(37), :y(5) }), status =\u0026gt; 200, json =\u0026gt; { :result(42) }; test post(json =\u0026gt; { :x(37) }), status =\u0026gt; 400; test get(json =\u0026gt; { :x(37) }), status =\u0026gt; 405; } } done-testing; 设置要测试的服务 test-service 函数有两个候选者。","type":"entry","url":"http://localhost:1313/raku/2018-07-14-cro-http-test/"}